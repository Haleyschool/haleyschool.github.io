/*
 howler.js v2.1.1 | (c) 2013-2018, James Simpson of GoldFire Studios | MIT License | howlerjs.com  Spatial Plugin  @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */
var $jscomp = $jscomp || {};
$jscomp.scope = {};
$jscomp.arrayIteratorImpl = function(fa) {
    var t = 0;
    return function() {
        return t < fa.length ? {
            done: !1,
            value: fa[t++]
        } : {
            done: !0
        }
    }
};
$jscomp.arrayIterator = function(fa) {
    return {
        next: $jscomp.arrayIteratorImpl(fa)
    }
};
$jscomp.ASSUME_ES5 = !1;
$jscomp.ASSUME_NO_NATIVE_MAP = !1;
$jscomp.ASSUME_NO_NATIVE_SET = !1;
$jscomp.SIMPLE_FROUND_POLYFILL = !1;
$jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function(fa, t, C) {
    fa != Array.prototype && fa != Object.prototype && (fa[t] = C.value)
};
$jscomp.getGlobal = function(fa) {
    fa = ["object" == typeof window && window, "object" == typeof self && self, "object" == typeof global && global, fa];
    for (var t = 0; t < fa.length; ++t) {
        var C = fa[t];
        if (C && C.Math == Math) return C
    }
    throw Error("Cannot find global object");
};
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.SYMBOL_PREFIX = "jscomp_symbol_";
$jscomp.initSymbol = function() {
    $jscomp.initSymbol = function() {};
    $jscomp.global.Symbol || ($jscomp.global.Symbol = $jscomp.Symbol)
};
$jscomp.SymbolClass = function(fa, t) {
    this.$jscomp$symbol$id_ = fa;
    $jscomp.defineProperty(this, "description", {
        configurable: !0,
        writable: !0,
        value: t
    })
};
$jscomp.SymbolClass.prototype.toString = function() {
    return this.$jscomp$symbol$id_
};
$jscomp.Symbol = function() {
    function fa(C) {
        if (this instanceof fa) throw new TypeError("Symbol is not a constructor");
        return new $jscomp.SymbolClass($jscomp.SYMBOL_PREFIX + (C || "") + "_" + t++, C)
    }
    var t = 0;
    return fa
}();
$jscomp.initSymbolIterator = function() {
    $jscomp.initSymbol();
    var fa = $jscomp.global.Symbol.iterator;
    fa || (fa = $jscomp.global.Symbol.iterator = $jscomp.global.Symbol("Symbol.iterator"));
    "function" != typeof Array.prototype[fa] && $jscomp.defineProperty(Array.prototype, fa, {
        configurable: !0,
        writable: !0,
        value: function() {
            return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this))
        }
    });
    $jscomp.initSymbolIterator = function() {}
};
$jscomp.initSymbolAsyncIterator = function() {
    $jscomp.initSymbol();
    var fa = $jscomp.global.Symbol.asyncIterator;
    fa || (fa = $jscomp.global.Symbol.asyncIterator = $jscomp.global.Symbol("Symbol.asyncIterator"));
    $jscomp.initSymbolAsyncIterator = function() {}
};
$jscomp.iteratorPrototype = function(fa) {
    $jscomp.initSymbolIterator();
    fa = {
        next: fa
    };
    fa[$jscomp.global.Symbol.iterator] = function() {
        return this
    };
    return fa
};
$jscomp.iteratorFromArray = function(fa, t) {
    $jscomp.initSymbolIterator();
    fa instanceof String && (fa += "");
    var C = 0,
        G = {
            next: function() {
                if (C < fa.length) {
                    var P = C++;
                    return {
                        value: t(P, fa[P]),
                        done: !1
                    }
                }
                G.next = function() {
                    return {
                        done: !0,
                        value: void 0
                    }
                };
                return G.next()
            }
        };
    G[Symbol.iterator] = function() {
        return G
    };
    return G
};
$jscomp.polyfill = function(fa, t, C, G) {
    if (t) {
        C = $jscomp.global;
        fa = fa.split(".");
        for (G = 0; G < fa.length - 1; G++) {
            var P = fa[G];
            P in C || (C[P] = {});
            C = C[P]
        }
        fa = fa[fa.length - 1];
        G = C[fa];
        t = t(G);
        t != G && null != t && $jscomp.defineProperty(C, fa, {
            configurable: !0,
            writable: !0,
            value: t
        })
    }
};
$jscomp.polyfill("Array.prototype.values", function(fa) {
    return fa ? fa : function() {
        return $jscomp.iteratorFromArray(this, function(t, C) {
            return C
        })
    }
}, "es8", "es3");
$jscomp.polyfill("Array.prototype.keys", function(fa) {
    return fa ? fa : function() {
        return $jscomp.iteratorFromArray(this, function(t) {
            return t
        })
    }
}, "es6", "es3");
$jscomp.polyfill("Array.prototype.fill", function(fa) {
    return fa ? fa : function(t, C, G) {
        var P = this.length || 0;
        0 > C && (C = Math.max(0, P + C));
        if (null == G || G > P) G = P;
        G = Number(G);
        0 > G && (G = Math.max(0, P + G));
        for (C = Number(C || 0); C < G; C++) this[C] = t;
        return this
    }
}, "es6", "es3");
$jscomp.checkStringArgs = function(fa, t, C) {
    if (null == fa) throw new TypeError("The 'this' value for String.prototype." + C + " must not be null or undefined");
    if (t instanceof RegExp) throw new TypeError("First argument to String.prototype." + C + " must not be a regular expression");
    return fa + ""
};
$jscomp.polyfill("String.prototype.startsWith", function(fa) {
    return fa ? fa : function(t, C) {
        var G = $jscomp.checkStringArgs(this, t, "startsWith");
        t += "";
        var P = G.length,
            M = t.length;
        C = Math.max(0, Math.min(C | 0, G.length));
        for (var p = 0; p < M && C < P;)
            if (G[C++] != t[p++]) return !1;
        return p >= M
    }
}, "es6", "es3");
$jscomp.polyfill("String.prototype.codePointAt", function(fa) {
    return fa ? fa : function(t) {
        var C = $jscomp.checkStringArgs(this, null, "codePointAt"),
            G = C.length;
        t = Number(t) || 0;
        if (0 <= t && t < G) {
            t |= 0;
            var P = C.charCodeAt(t);
            if (55296 > P || 56319 < P || t + 1 === G) return P;
            t = C.charCodeAt(t + 1);
            return 56320 > t || 57343 < t ? P : 1024 * (P - 55296) + t + 9216
        }
    }
}, "es6", "es3");
$jscomp.polyfill("String.prototype.endsWith", function(fa) {
    return fa ? fa : function(t, C) {
        var G = $jscomp.checkStringArgs(this, t, "endsWith");
        t += "";
        void 0 === C && (C = G.length);
        C = Math.max(0, Math.min(C | 0, G.length));
        for (var P = t.length; 0 < P && 0 < C;)
            if (G[--C] != t[--P]) return !1;
        return 0 >= P
    }
}, "es6", "es3");
$jscomp.polyfill("Object.is", function(fa) {
    return fa ? fa : function(t, C) {
        return t === C ? 0 !== t || 1 / t === 1 / C : t !== t && C !== C
    }
}, "es6", "es3");
$jscomp.polyfill("Array.prototype.includes", function(fa) {
    return fa ? fa : function(t, C) {
        var G = this;
        G instanceof String && (G = String(G));
        var P = G.length;
        C = C || 0;
        for (0 > C && (C = Math.max(C + P, 0)); C < P; C++) {
            var M = G[C];
            if (M === t || Object.is(M, t)) return !0
        }
        return !1
    }
}, "es7", "es3");
$jscomp.polyfill("String.prototype.includes", function(fa) {
    return fa ? fa : function(t, C) {
        return -1 !== $jscomp.checkStringArgs(this, t, "includes").indexOf(t, C || 0)
    }
}, "es6", "es3");
$jscomp.findInternal = function(fa, t, C) {
    fa instanceof String && (fa = String(fa));
    for (var G = fa.length, P = 0; P < G; P++) {
        var M = fa[P];
        if (t.call(C, M, P, fa)) return {
            i: P,
            v: M
        }
    }
    return {
        i: -1,
        v: void 0
    }
};
$jscomp.polyfill("Array.prototype.find", function(fa) {
    return fa ? fa : function(t, C) {
        return $jscomp.findInternal(this, t, C).v
    }
}, "es6", "es3");
(function(fa, t) {
    fa.lime = fa.lime || {};
    fa.lime.$scripts = fa.lime.$scripts || {};
    fa.lime.$scripts.ShapeFold4 = function(t, G) {
        (function(t, C) {
            function p(a, b) {
                function c() {}
                c.prototype = a;
                a = new c;
                for (var d in b) a[d] = b[d];
                b.toString !== Object.prototype.toString && (a.toString = b.toString);
                return a
            }

            function G(a) {
                return a instanceof Array ? function() {
                    return la.iter(a)
                } : "function" == typeof a.iterator ? q(a, a.iterator) : a.iterator
            }

            function q(a, b) {
                if (null == b) return null;
                null == b.__id__ && (b.__id__ = ax++);
                var c;
                null == a.hx__closures__ ?
                    a.hx__closures__ = {} : c = a.hx__closures__[b.__id__];
                null == c && (c = function() {
                    return c.method.apply(c.scope, arguments)
                }, c.scope = a, c.method = b, a.hx__closures__[b.__id__] = c);
                return c
            }
            t.lime = t.lime || {};
            var g = {},
                l = function() {
                    return aa.__string_rec(this, "")
                },
                L = function() {};
            g["lime.app.IModule"] = L;
            L.__name__ = ["lime", "app", "IModule"];
            L.prototype = {
                __registerLimeModule: null,
                __class__: L
            };
            var pa = function() {
                this.onExit = new Rj
            };
            g["lime.app.Module"] = pa;
            pa.__name__ = ["lime", "app", "Module"];
            pa.__interfaces__ = [L];
            pa.prototype = {
                onExit: null,
                __registerLimeModule: function(a) {},
                __class__: pa
            };
            var Ca = function(a) {
                this.gameDeviceCache = new we;
                this.parent = a;
                this.nextUpdate = this.lastUpdate = this.currentUpdate = 0;
                this.framePeriod = -1;
                Ak.init();
                this.accelerometer = yi.registerSensor(gs.ACCELEROMETER, 0)
            };
            g["lime._internal.backend.html5.HTML5Application"] = Ca;
            Ca.__name__ = ["lime", "_internal", "backend", "html5", "HTML5Application"];
            Ca.prototype = {
                gameDeviceCache: null,
                accelerometer: null,
                currentUpdate: null,
                deltaTime: null,
                framePeriod: null,
                lastUpdate: null,
                nextUpdate: null,
                parent: null,
                convertKeyCode: function(a) {
                    if (65 <= a && 90 >= a) return a + 32;
                    switch (a) {
                        case 12:
                            return 1073741980;
                        case 16:
                            return 1073742049;
                        case 17:
                            return 1073742048;
                        case 18:
                            return 1073742050;
                        case 19:
                            return 1073741896;
                        case 20:
                            return 1073741881;
                        case 33:
                            return 1073741899;
                        case 34:
                            return 1073741902;
                        case 35:
                            return 1073741901;
                        case 36:
                            return 1073741898;
                        case 37:
                            return 1073741904;
                        case 38:
                            return 1073741906;
                        case 39:
                            return 1073741903;
                        case 40:
                            return 1073741905;
                        case 41:
                            return 1073741943;
                        case 43:
                            return 1073741940;
                        case 44:
                            return 1073741894;
                        case 45:
                            return 1073741897;
                        case 46:
                            return 127;
                        case 91:
                            return 1073742051;
                        case 92:
                            return 1073742055;
                        case 93:
                            return 1073742055;
                        case 95:
                            return 1073742106;
                        case 96:
                            return 1073741922;
                        case 97:
                            return 1073741913;
                        case 98:
                            return 1073741914;
                        case 99:
                            return 1073741915;
                        case 100:
                            return 1073741916;
                        case 101:
                            return 1073741917;
                        case 102:
                            return 1073741918;
                        case 103:
                            return 1073741919;
                        case 104:
                            return 1073741920;
                        case 105:
                            return 1073741921;
                        case 106:
                            return 1073741909;
                        case 107:
                            return 1073741911;
                        case 108:
                            return 1073741923;
                        case 109:
                            return 1073741910;
                        case 110:
                            return 1073741923;
                        case 111:
                            return 1073741908;
                        case 112:
                            return 1073741882;
                        case 113:
                            return 1073741883;
                        case 114:
                            return 1073741884;
                        case 115:
                            return 1073741885;
                        case 116:
                            return 1073741886;
                        case 117:
                            return 1073741887;
                        case 118:
                            return 1073741888;
                        case 119:
                            return 1073741889;
                        case 120:
                            return 1073741890;
                        case 121:
                            return 1073741891;
                        case 122:
                            return 1073741892;
                        case 123:
                            return 1073741893;
                        case 124:
                            return 1073741928;
                        case 125:
                            return 1073741929;
                        case 126:
                            return 1073741930;
                        case 127:
                            return 1073741931;
                        case 128:
                            return 1073741932;
                        case 129:
                            return 1073741933;
                        case 130:
                            return 1073741934;
                        case 131:
                            return 1073741935;
                        case 132:
                            return 1073741936;
                        case 133:
                            return 1073741937;
                        case 134:
                            return 1073741938;
                        case 135:
                            return 1073741939;
                        case 144:
                            return 1073741907;
                        case 145:
                            return 1073741895;
                        case 160:
                            return 94;
                        case 161:
                            return 33;
                        case 163:
                            return 35;
                        case 164:
                            return 36;
                        case 166:
                            return 1073742094;
                        case 167:
                            return 1073742095;
                        case 168:
                            return 1073742097;
                        case 169:
                            return 41;
                        case 170:
                            return 42;
                        case 171:
                            return 96;
                        case 172:
                            return 1073741898;
                        case 173:
                            return 45;
                        case 174:
                            return 1073741953;
                        case 175:
                            return 1073741952;
                        case 176:
                            return 1073742082;
                        case 177:
                            return 1073742083;
                        case 178:
                            return 1073742084;
                        case 179:
                            return 1073742085;
                        case 180:
                            return 1073742089;
                        case 181:
                            return 1073742086;
                        case 182:
                            return 1073741953;
                        case 183:
                            return 1073741952;
                        case 186:
                            return 59;
                        case 187:
                            return 61;
                        case 188:
                            return 44;
                        case 189:
                            return 45;
                        case 190:
                            return 46;
                        case 191:
                            return 47;
                        case 192:
                            return 96;
                        case 193:
                            return 63;
                        case 194:
                            return 1073741923;
                        case 219:
                            return 91;
                        case 220:
                            return 92;
                        case 221:
                            return 93;
                        case 222:
                            return 39;
                        case 223:
                            return 96;
                        case 224:
                            return 1073742051;
                        case 226:
                            return 92
                    }
                    return a
                },
                exec: function() {
                    La.get_window().addEventListener("keydown", q(this, this.handleKeyEvent), !1);
                    La.get_window().addEventListener("keyup", q(this, this.handleKeyEvent), !1);
                    La.get_window().addEventListener("focus", q(this, this.handleWindowEvent), !1);
                    La.get_window().addEventListener("blur", q(this, this.handleWindowEvent), !1);
                    La.get_window().addEventListener("resize", q(this, this.handleWindowEvent),
                        !1);
                    La.get_window().addEventListener("beforeunload", q(this, this.handleWindowEvent), !1);
                    La.get_window().addEventListener("devicemotion", q(this, this.handleSensorEvent), !1);
                    CanvasRenderingContext2D.prototype.isPointInStroke || (CanvasRenderingContext2D.prototype.isPointInStroke = function(a, b, c) {
                        return !1
                    });
                    CanvasRenderingContext2D.prototype.isPointInPath || (CanvasRenderingContext2D.prototype.isPointInPath = function(a, b, c) {
                        return !1
                    });
                    0 == "performance" in window && (window.performance = {});
                    if (0 == "now" in window.performance) {
                        var a =
                            Date.now();
                        performance.timing && performance.timing.navigationStart && (a = performance.timing.navigationStart);
                        window.performance.now = function() {
                            return Date.now() - a
                        }
                    }
                    for (var b = 0, c = ["ms", "moz", "webkit", "o"], d = 0; d < c.length && !window.requestAnimationFrame; ++d) window.requestAnimationFrame = window[c[d] + "RequestAnimationFrame"], window.cancelAnimationFrame = window[c[d] + "CancelAnimationFrame"] || window[c[d] + "CancelRequestAnimationFrame"];
                    window.requestAnimationFrame || (window.requestAnimationFrame = function(a, c) {
                        var d =
                            (new Date).getTime(),
                            e = Math.max(0, 16 - (d - b));
                        c = window.setTimeout(function() {
                            a(d + e)
                        }, e);
                        b = d + e;
                        return c
                    });
                    window.cancelAnimationFrame || (window.cancelAnimationFrame = function(a) {
                        clearTimeout(a)
                    });
                    window.requestAnimFrame = window.requestAnimationFrame;
                    this.lastUpdate = (new Date).getTime();
                    this.handleApplicationEvent();
                    return 0
                },
                exit: function() {},
                handleApplicationEvent: function(a) {
                    a = 0;
                    for (var b = this.parent.__windows; a < b.length;) {
                        var c = b[a];
                        ++a;
                        c.__backend.updateSize()
                    }
                    this.updateGameDevices();
                    this.currentUpdate =
                        (new Date).getTime();
                    if (this.currentUpdate >= this.nextUpdate) {
                        this.deltaTime = this.currentUpdate - this.lastUpdate;
                        a = 0;
                        for (b = this.parent.__windows; a < b.length;) c = b[a], ++a, this.parent.onUpdate.dispatch(E["int"](this.deltaTime)), null != c.context && c.onRender.dispatch(c.context);
                        this.nextUpdate = 0 > this.framePeriod ? this.currentUpdate : this.currentUpdate - this.currentUpdate % this.framePeriod + this.framePeriod;
                        this.lastUpdate = this.currentUpdate
                    }
                    La.get_window().requestAnimationFrame(q(this, this.handleApplicationEvent))
                },
                handleKeyEvent: function(a) {
                    if (null != this.parent.get_window()) {
                        var b = this.convertKeyCode(null != a.keyCode ? a.keyCode : a.which),
                            c = (a.shiftKey ? 3 : 0) | (a.ctrlKey ? 192 : 0) | (a.altKey ? 768 : 0) | (a.metaKey ? 3072 : 0);
                        "keydown" == a.type ? (this.parent.get_window().onKeyDown.dispatch(b, c), this.parent.get_window().onKeyDown.canceled && a.cancelable && a.preventDefault()) : (this.parent.get_window().onKeyUp.dispatch(b, c), this.parent.get_window().onKeyUp.canceled && a.cancelable && a.preventDefault())
                    }
                },
                handleSensorEvent: function(a) {
                    this.accelerometer.onUpdate.dispatch(a.accelerationIncludingGravity.x,
                        a.accelerationIncludingGravity.y, a.accelerationIncludingGravity.z)
                },
                handleWindowEvent: function(a) {
                    if (null != this.parent.get_window()) switch (a.type) {
                        case "blur":
                            this.parent.get_window().onFocusOut.dispatch();
                            this.parent.get_window().onDeactivate.dispatch();
                            break;
                        case "focus":
                            this.parent.get_window().onFocusIn.dispatch();
                            this.parent.get_window().onActivate.dispatch();
                            break;
                        case "resize":
                            this.parent.get_window().__backend.handleResizeEvent(a)
                    }
                },
                updateGameDevices: function() {
                    var a = Zd.__getDeviceData();
                    if (null != a)
                        for (var b, c, d, e, f, h = 0, k = a.length; h < k;)
                            if (b = h++, e = a[b], null != e) {
                                if (!this.gameDeviceCache.exists(b)) {
                                    f = new hs;
                                    f.id = b;
                                    f.connected = e.connected;
                                    c = 0;
                                    for (d = e.buttons.length; c < d;) {
                                        var m = c++;
                                        f.buttons.push(e.buttons[m].value)
                                    }
                                    c = 0;
                                    for (d = e.axes.length; c < d;) m = c++, f.axes.push(e.axes[m]);
                                    "standard" == e.mapping && (f.isGamepad = !0);
                                    this.gameDeviceCache.set(b, f);
                                    e.connected && (Zd.__connect(b), f.isGamepad && ee.__connect(b))
                                }
                                f = this.gameDeviceCache.get(b);
                                d = Zd.devices.get(b);
                                c = ee.devices.get(b);
                                if (e.connected) {
                                    for (var r =
                                            0, I = e.buttons.length; r < I;) {
                                        var tc = r++;
                                        m = e.buttons[tc].value;
                                        if (m != f.buttons[tc]) {
                                            if (6 == tc) d.onAxisMove.dispatch(e.axes.length, m), null != c && c.onAxisMove.dispatch(4, m);
                                            else if (7 == tc) d.onAxisMove.dispatch(e.axes.length + 1, m), null != c && c.onAxisMove.dispatch(5, m);
                                            else if (0 < m ? d.onButtonDown.dispatch(tc) : d.onButtonUp.dispatch(tc), null != c) {
                                                switch (tc) {
                                                    case 0:
                                                        b = 0;
                                                        break;
                                                    case 1:
                                                        b = 1;
                                                        break;
                                                    case 2:
                                                        b = 2;
                                                        break;
                                                    case 3:
                                                        b = 3;
                                                        break;
                                                    case 4:
                                                        b = 9;
                                                        break;
                                                    case 5:
                                                        b = 10;
                                                        break;
                                                    case 8:
                                                        b = 4;
                                                        break;
                                                    case 9:
                                                        b = 6;
                                                        break;
                                                    case 10:
                                                        b = 7;
                                                        break;
                                                    case 11:
                                                        b =
                                                            8;
                                                        break;
                                                    case 12:
                                                        b = 11;
                                                        break;
                                                    case 13:
                                                        b = 12;
                                                        break;
                                                    case 14:
                                                        b = 13;
                                                        break;
                                                    case 15:
                                                        b = 14;
                                                        break;
                                                    case 16:
                                                        b = 5;
                                                        break;
                                                    default:
                                                        continue
                                                }
                                                0 < m ? c.onButtonDown.dispatch(b) : c.onButtonUp.dispatch(b)
                                            }
                                            f.buttons[tc] = m
                                        }
                                    }
                                    b = 0;
                                    for (m = e.axes.length; b < m;) r = b++, e.axes[r] != f.axes[r] && (d.onAxisMove.dispatch(r, e.axes[r]), null != c && c.onAxisMove.dispatch(r, e.axes[r]), f.axes[r] = e.axes[r])
                                } else f.connected && (f.connected = !1, Zd.__disconnect(b), ee.__disconnect(b))
                            }
                },
                __class__: Ca
            };
            var oa = function() {
                this.onCreateWindow = new is;
                this.onUpdate = new Rj;
                this.onExit = new Rj;
                null == oa.current && (oa.current = this);
                this.meta = new fb;
                this.modules = [];
                this.__windowByID = new we;
                this.__windows = [];
                this.__backend = new Ca(this);
                this.__registerLimeModule(this);
                this.__preloader = new js;
                this.__preloader.onProgress.add(q(this, this.onPreloadProgress));
                this.__preloader.onComplete.add(q(this, this.onPreloadComplete))
            };
            g["lime.app.Application"] = oa;
            oa.__name__ = ["lime", "app", "Application"];
            oa.__super__ = pa;
            oa.prototype = p(pa.prototype, {
                meta: null,
                modules: null,
                onUpdate: null,
                onCreateWindow: null,
                __backend: null,
                __preloader: null,
                __window: null,
                __windowByID: null,
                __windows: null,
                addModule: function(a) {
                    a.__registerLimeModule(this);
                    this.modules.push(a)
                },
                exec: function() {
                    oa.current = this;
                    return this.__backend.exec()
                },
                onGamepadAxisMove: function(a, b, c) {},
                onGamepadButtonDown: function(a, b) {},
                onGamepadButtonUp: function(a, b) {},
                onGamepadConnect: function(a) {},
                onGamepadDisconnect: function(a) {},
                onJoystickAxisMove: function(a, b, c) {},
                onJoystickButtonDown: function(a, b) {},
                onJoystickButtonUp: function(a, b) {},
                onJoystickConnect: function(a) {},
                onJoystickDisconnect: function(a) {},
                onJoystickHatMove: function(a, b, c) {},
                onJoystickTrackballMove: function(a, b, c, d) {},
                onKeyDown: function(a, b) {},
                onKeyUp: function(a, b) {},
                onModuleExit: function(a) {},
                onMouseDown: function(a, b, c) {},
                onMouseMove: function(a, b) {},
                onMouseMoveRelative: function(a, b) {},
                onMouseUp: function(a, b, c) {},
                onMouseWheel: function(a, b, c) {},
                onPreloadComplete: function() {},
                onPreloadProgress: function(a, b) {},
                onRenderContextLost: function() {},
                onRenderContextRestored: function(a) {},
                onTextEdit: function(a,
                    b, c) {},
                onTextInput: function(a) {},
                onTouchCancel: function(a) {},
                onTouchEnd: function(a) {},
                onTouchMove: function(a) {},
                onTouchStart: function(a) {},
                onWindowActivate: function() {},
                onWindowClose: function() {},
                onWindowCreate: function() {},
                onWindowDeactivate: function() {},
                onWindowDropFile: function(a) {},
                onWindowEnter: function() {},
                onWindowExpose: function() {},
                onWindowFocusIn: function() {},
                onWindowFocusOut: function() {},
                onWindowFullscreen: function() {},
                onWindowLeave: function() {},
                onWindowMove: function(a, b) {},
                onWindowMinimize: function() {},
                onWindowResize: function(a, b) {},
                onWindowRestore: function() {},
                render: function(a) {},
                update: function(a) {},
                __registerLimeModule: function(a) {
                    a.onUpdate.add(q(this, this.update));
                    a.onExit.add(q(this, this.onModuleExit), !1, 0);
                    a.onExit.add(q(this, this.__onModuleExit), !1, 0);
                    for (a = ee.devices.iterator(); a.hasNext();) {
                        var b = a.next();
                        this.__onGamepadConnect(b)
                    }
                    ee.onConnect.add(q(this, this.__onGamepadConnect));
                    for (a = Zd.devices.iterator(); a.hasNext();) b = a.next(), this.__onJoystickConnect(b);
                    Zd.onConnect.add(q(this,
                        this.__onJoystickConnect));
                    Ge.onCancel.add(q(this, this.onTouchCancel));
                    Ge.onStart.add(q(this, this.onTouchStart));
                    Ge.onMove.add(q(this, this.onTouchMove));
                    Ge.onEnd.add(q(this, this.onTouchEnd))
                },
                __removeWindow: function(a) {
                    null != a && this.__windowByID.exists(a.id) && (this.__window == a && (this.__window = null), la.remove(this.__windows, a), this.__windowByID.remove(a.id), a.close(), 0 == this.__windows.length && je.exit(0))
                },
                __onGamepadConnect: function(a) {
                    this.onGamepadConnect(a);
                    var b = q(this, this.onGamepadAxisMove);
                    a.onAxisMove.add(function(c, d) {
                        b(a, c, d)
                    });
                    var c = q(this, this.onGamepadButtonDown);
                    a.onButtonDown.add(function(b) {
                        c(a, b)
                    });
                    var d = q(this, this.onGamepadButtonUp);
                    a.onButtonUp.add(function(b) {
                        d(a, b)
                    });
                    var e = q(this, this.onGamepadDisconnect);
                    a.onDisconnect.add(function() {
                        e(a)
                    })
                },
                __onJoystickConnect: function(a) {
                    this.onJoystickConnect(a);
                    var b = q(this, this.onJoystickAxisMove);
                    a.onAxisMove.add(function(c, d) {
                        b(a, c, d)
                    });
                    var c = q(this, this.onJoystickButtonDown);
                    a.onButtonDown.add(function(b) {
                        c(a, b)
                    });
                    var d = q(this,
                        this.onJoystickButtonUp);
                    a.onButtonUp.add(function(b) {
                        d(a, b)
                    });
                    var e = q(this, this.onJoystickDisconnect);
                    a.onDisconnect.add(function() {
                        e(a)
                    });
                    var f = q(this, this.onJoystickHatMove);
                    a.onHatMove.add(function(b, c) {
                        f(a, b, c)
                    });
                    var h = q(this, this.onJoystickTrackballMove);
                    a.onTrackballMove.add(function(b, c, d) {
                        h(a, b, c, d)
                    })
                },
                __onModuleExit: function(a) {
                    this.__backend.exit()
                },
                __onWindowClose: function(a) {
                    if (this.get_window() == a) this.onWindowClose();
                    this.__removeWindow(a)
                },
                get_preloader: function() {
                    return this.__preloader
                },
                get_window: function() {
                    return this.__window
                },
                __class__: oa
            });
            var X = function() {};
            g.ApplicationMain = X;
            X.__name__ = ["ApplicationMain"];
            X.main = function() {
                je.__registerEntryPoint("ShapeFold4", X.create)
            };
            X.create = function(a) {
                var b = new Rl;
                He.init(a);
                b.meta.set("build", "136");
                b.meta.set("company", "Bikas");
                b.meta.set("file", "ShapeFold4");
                b.meta.set("name", "ShapeFold4");
                b.meta.set("packageName", "net.bikas.shapefold4");
                b.meta.set("version", "1.0.0");
                var c = {
                    allowHighDPI: !0,
                    alwaysOnTop: !1,
                    borderless: !1,
                    element: null,
                    frameRate: 60,
                    height: 0,
                    hidden: !1,
                    maximized: !1,
                    minimized: !1,
                    parameters: {},
                    resizable: !0,
                    title: "ShapeFold4",
                    width: 0,
                    x: null,
                    y: null,
                    context: {
                        antialiasing: 4,
                        background: 16777215,
                        colorDepth: 32,
                        depth: !0,
                        hardware: !0,
                        stencil: !0,
                        type: null,
                        vsync: !1
                    }
                };
                if (null == b.get_window() && null != a)
                    for (var d = 0, e = T.fields(a); d < e.length;) {
                        var f = e[d];
                        ++d;
                        T.hasField(c, f) ? T.setField(c, f, T.field(a, f)) : T.hasField(c.context, f) && T.setField(c.context, f, T.field(a, f))
                    }
                b.createWindow(c);
                var h = new So(new ah);
                b.get_preloader().onProgress.add(function(a,
                    b) {
                    h.update(a, b)
                });
                b.get_preloader().onComplete.add(function() {
                    h.start()
                });
                a = h.onComplete;
                var k = aa.__cast(b.get_window(), Bk).stage;
                a.add(function() {
                    X.start(k)
                });
                a = 0;
                for (c = He.preloadLibraries; a < c.length;) d = c[a], ++a, b.get_preloader().addLibrary(d);
                a = 0;
                for (c = He.preloadLibraryNames; a < c.length;) d = c[a], ++a, b.get_preloader().addLibraryName(d);
                b.get_preloader().load();
                b.exec()
            };
            X.start = function(a) {
                try {
                    ob.main(), a.dispatchEvent(new Oa("resize", !1, !1)), a.window.get_fullscreen() && a.dispatchEvent(new Sj("fullScreen",
                        !1, !1, !0, !0))
                } catch (b) {
                    vb.lastException = b, b instanceof Z && (b = b.val), a.__handleError(b)
                }
            };
            var P = function() {};
            g["openfl.events.IEventDispatcher"] = P;
            P.__name__ = ["openfl", "events", "IEventDispatcher"];
            var bb = function(a) {
                null != a && (this.__targetDispatcher = a)
            };
            g["openfl.events.EventDispatcher"] = bb;
            bb.__name__ = ["openfl", "events", "EventDispatcher"];
            bb.__interfaces__ = [P];
            bb.prototype = {
                __eventMap: null,
                __iterators: null,
                __targetDispatcher: null,
                addEventListener: function(a, b, c, d, e) {
                    null == d && (d = 0);
                    null == c && (c = !1);
                    if (null != b)
                        if (null == this.__eventMap && (this.__eventMap = new fb, this.__iterators = new fb), this.__eventMap.exists(a)) {
                            e = this.__eventMap.get(a);
                            for (var f = 0, h = e.length; f < h;) {
                                var k = f++;
                                if (e[k].match(b, c)) return
                            }
                            a = this.__iterators.get(a);
                            for (f = 0; f < a.length;) h = a[f], ++f, h.active && h.copy();
                            this.__addListenerByPriority(e, new Sl(b, c, d))
                        } else e = [], e.push(new Sl(b, c, d)), b = new Tl(e), this.__eventMap.set(a, e), this.__iterators.set(a, [b])
                },
                dispatchEvent: function(a) {
                    a.target = null != this.__targetDispatcher ? this.__targetDispatcher :
                        this;
                    return this.__dispatchEvent(a)
                },
                hasEventListener: function(a) {
                    return null == this.__eventMap ? !1 : this.__eventMap.exists(a)
                },
                removeEventListener: function(a, b, c) {
                    null == c && (c = !1);
                    if (null != this.__eventMap && null != b) {
                        var d = this.__eventMap.get(a);
                        if (null != d) {
                            for (var e = this.__iterators.get(a), f = 0, h = d.length; f < h;) {
                                var k = f++;
                                if (d[k].match(b, c)) {
                                    for (b = 0; b < e.length;) c = e[b], ++b, c.remove(d[k], k);
                                    d.splice(k, 1);
                                    break
                                }
                            }
                            0 == d.length && (this.__eventMap.remove(a), this.__iterators.remove(a));
                            this.__eventMap.iterator().hasNext() ||
                                (this.__iterators = this.__eventMap = null)
                        }
                    }
                },
                toString: function() {
                    return "[object " + Q.getClassName(Q.getClass(this)).split(".").pop() + "]"
                },
                __dispatchEvent: function(a) {
                    if (null == this.__eventMap || null == a) return !0;
                    var b = a.type,
                        c = this.__eventMap.get(b);
                    if (null == c) return !0;
                    null == a.target && (a.target = null != this.__targetDispatcher ? this.__targetDispatcher : this);
                    a.currentTarget = this;
                    var d = 1 == a.eventPhase;
                    b = this.__iterators.get(b);
                    var e = b[0];
                    e.active && (e = new Tl(c), b.push(e));
                    e.start();
                    for (var f = e; f.hasNext();) {
                        var h =
                            f.next();
                        if (null != h && h.useCapture == d && (h.callback(a), a.__isCanceledNow)) break
                    }
                    e.stop();
                    e != b[0] ? la.remove(b, e) : e.reset(c);
                    return !a.isDefaultPrevented()
                },
                __addListenerByPriority: function(a, b) {
                    for (var c = a.length, d = c, e = 0; e < c;) {
                        var f = e++;
                        if (a[f].priority < b.priority) {
                            d = f;
                            break
                        }
                    }
                    a.splice(d, 0, b)
                },
                __class__: bb
            };
            var fa = function() {};
            g["openfl.display.IBitmapDrawable"] = fa;
            fa.__name__ = ["openfl", "display", "IBitmapDrawable"];
            fa.prototype = {
                __renderTransform: null,
                __worldAlpha: null,
                __worldColorTransform: null,
                __getBounds: null,
                __renderCanvas: null,
                __renderDOM: null,
                __renderGL: null,
                __update: null,
                __mask: null,
                __scrollRect: null,
                __class__: fa
            };
            var M = {};
            g["openfl._Vector.Vector_Impl_"] = M;
            M.__name__ = ["openfl", "_Vector", "Vector_Impl_"];
            M.toIntVector = function(a, b, c, d) {
                return new Ul(b, c, d)
            };
            M.toFloatVector = function(a, b, c, d) {
                return new zi(b, c, d, !0)
            };
            M.toObjectVector = function(a, b, c, d) {
                return new Ck(b, c, d, !0)
            };
            var Rb = function(a, b, c) {
                this.__pool = new Qa;
                this.inactiveObjects = this.activeObjects = 0;
                this.__inactiveObject1 = this.__inactiveObject0 =
                    null;
                this.__inactiveObjectList = new Qb;
                null != a && (this.create = a);
                null != b && (this.clean = b);
                null != c && this.set_size(c)
            };
            g["lime.utils.ObjectPool"] = Rb;
            Rb.__name__ = ["lime", "utils", "ObjectPool"];
            Rb.prototype = {
                activeObjects: null,
                inactiveObjects: null,
                __inactiveObject0: null,
                __inactiveObject1: null,
                __inactiveObjectList: null,
                __pool: null,
                __size: null,
                clean: function(a) {},
                create: function() {
                    return null
                },
                get: function() {
                    var a = null;
                    if (0 < this.inactiveObjects) a = this.__getInactive();
                    else if (null == this.__size || this.activeObjects <
                        this.__size) a = this.create(), null != a && (this.__pool.set(a, !0), this.activeObjects++);
                    return a
                },
                release: function(a) {
                    this.activeObjects--;
                    null == this.__size || this.activeObjects + this.inactiveObjects < this.__size ? (this.clean(a), this.__addInactive(a)) : this.__pool.remove(a)
                },
                __addInactive: function(a) {
                    null == this.__inactiveObject0 ? this.__inactiveObject0 = a : null == this.__inactiveObject1 ? this.__inactiveObject1 = a : this.__inactiveObjectList.add(a);
                    this.inactiveObjects++
                },
                __getInactive: function() {
                    if (null != this.__inactiveObject0) {
                        var a =
                            this.__inactiveObject0;
                        this.__inactiveObject0 = null
                    } else null != this.__inactiveObject1 ? (a = this.__inactiveObject1, this.__inactiveObject1 = null) : (a = this.__inactiveObjectList.pop(), 0 < this.__inactiveObjectList.length && (this.__inactiveObject0 = this.__inactiveObjectList.pop()), 0 < this.__inactiveObjectList.length && (this.__inactiveObject1 = this.__inactiveObjectList.pop()));
                    this.inactiveObjects--;
                    this.activeObjects++;
                    return a
                },
                __removeInactive: function(a) {
                    if (!(0 >= a || 0 == this.inactiveObjects) && (null != this.__inactiveObject0 &&
                            (this.__pool.remove(this.__inactiveObject0), this.__inactiveObject0 = null, this.inactiveObjects--, --a), 0 != a && 0 != this.inactiveObjects && (null != this.__inactiveObject1 && (this.__pool.remove(this.__inactiveObject1), this.__inactiveObject1 = null, this.inactiveObjects--, --a), 0 != a && 0 != this.inactiveObjects)))
                        for (var b = this.__inactiveObjectList.iterator(); b.hasNext();) {
                            var c = b.next();
                            this.__pool.remove(c);
                            this.__inactiveObjectList.remove(c);
                            this.inactiveObjects--;
                            --a;
                            if (0 == a || 0 == this.inactiveObjects) break
                        }
                },
                set_size: function(a) {
                    if (null ==
                        a) this.__size = null;
                    else {
                        var b = this.inactiveObjects + this.activeObjects;
                        this.__size = a;
                        if (b > a) this.__removeInactive(b - a);
                        else if (a > b)
                            for (var c = 0, d = a - b; c < d;)
                                if (c++, b = this.create(), null != b) this.__pool.set(b, !1), this.__inactiveObjectList.add(b), this.inactiveObjects++;
                                else break
                    }
                    return a
                },
                __class__: Rb
            };
            var pb = function() {};
            g["haxe.IMap"] = pb;
            pb.__name__ = ["haxe", "IMap"];
            pb.prototype = {
                get: null,
                set: null,
                exists: null,
                remove: null,
                __class__: pb
            };
            var Qa = function() {
                this.h = {
                    __keys__: {}
                }
            };
            g["haxe.ds.ObjectMap"] = Qa;
            Qa.__name__ = ["haxe", "ds", "ObjectMap"];
            Qa.__interfaces__ = [pb];
            Qa.assignId = function(a) {
                return a.__id__ = ++Qa.count
            };
            Qa.getId = function(a) {
                return a.__id__
            };
            Qa.prototype = {
                h: null,
                set: function(a, b) {
                    var c = Qa.getId(a) || Qa.assignId(a);
                    this.h[c] = b;
                    this.h.__keys__[c] = a
                },
                get: function(a) {
                    return this.h[Qa.getId(a)]
                },
                exists: function(a) {
                    return null != this.h.__keys__[Qa.getId(a)]
                },
                remove: function(a) {
                    a = Qa.getId(a);
                    if (null == this.h.__keys__[a]) return !1;
                    delete this.h[a];
                    delete this.h.__keys__[a];
                    return !0
                },
                keys: function() {
                    var a = [],
                        b;
                    for (b in this.h.__keys__) this.h.hasOwnProperty(b) && a.push(this.h.__keys__[b]);
                    return la.iter(a)
                },
                __class__: Qa
            };
            var Qb = function() {
                this.length = 0
            };
            g.List = Qb;
            Qb.__name__ = ["List"];
            Qb.prototype = {
                h: null,
                q: null,
                length: null,
                add: function(a) {
                    a = new To(a, null);
                    null == this.h ? this.h = a : this.q.next = a;
                    this.q = a;
                    this.length++
                },
                push: function(a) {
                    this.h = a = new To(a, this.h);
                    null == this.q && (this.q = a);
                    this.length++
                },
                pop: function() {
                    if (null == this.h) return null;
                    var a = this.h.item;
                    this.h = this.h.next;
                    null == this.h && (this.q = null);
                    this.length--;
                    return a
                },
                clear: function() {
                    this.q = this.h = null;
                    this.length = 0
                },
                remove: function(a) {
                    for (var b = null, c = this.h; null != c;) {
                        if (c.item == a) return null == b ? this.h = c.next : b.next = c.next, this.q == c && (this.q = b), this.length--, !0;
                        b = c;
                        c = c.next
                    }
                    return !1
                },
                iterator: function() {
                    return new ks(this.h)
                },
                join: function(a) {
                    for (var b = new bj, c = !0, d = this.h; null != d;) c ? c = !1 : b.add(a), b.add(d.item), d = d.next;
                    return b.toString()
                },
                __class__: Qb
            };
            var R = function() {
                bb.call(this);
                this.__alpha = 1;
                this.__blendMode = 10;
                this.__cacheAsBitmap = !1;
                this.__transform =
                    new Ya;
                this.__visible = !0;
                this.__rotationSine = this.__rotation = 0;
                this.__worldAlpha = this.__scaleY = this.__scaleX = this.__rotationCosine = 1;
                this.__worldBlendMode = 10;
                this.__worldTransform = new Ya;
                this.__worldColorTransform = new mc;
                this.__renderTransform = new Ya;
                this.__worldVisible = !0;
                this.set_name("instance" + ++R.__instanceCount);
                null != R.__initStage && (this.stage = R.__initStage, R.__initStage = null, this.stage.addChild(this))
            };
            g["openfl.display.DisplayObject"] = R;
            R.__name__ = ["openfl", "display", "DisplayObject"];
            R.__interfaces__ = [fa];
            R.__calculateAbsoluteTransform = function(a, b, c) {
                c.a = a.a * b.a + a.b * b.c;
                c.b = a.a * b.b + a.b * b.d;
                c.c = a.c * b.a + a.d * b.c;
                c.d = a.c * b.b + a.d * b.d;
                c.tx = a.tx * b.a + a.ty * b.c + b.tx;
                c.ty = a.tx * b.b + a.ty * b.d + b.ty
            };
            R.__super__ = bb;
            R.prototype = p(bb.prototype, {
                opaqueBackground: null,
                parent: null,
                stage: null,
                __alpha: null,
                __blendMode: null,
                __cacheAsBitmap: null,
                __cacheAsBitmapMatrix: null,
                __cacheBitmap: null,
                __cacheBitmapBackground: null,
                __cacheBitmapColorTransform: null,
                __cacheBitmapData: null,
                __cacheBitmapData2: null,
                __cacheBitmapData3: null,
                __cacheBitmapMatrix: null,
                __cacheBitmapRenderer: null,
                __cairo: null,
                __children: null,
                __customRenderClear: null,
                __customRenderEvent: null,
                __filters: null,
                __graphics: null,
                __isCacheBitmapRender: null,
                __isMask: null,
                __loaderInfo: null,
                __mask: null,
                __maskTarget: null,
                __name: null,
                __objectTransform: null,
                __renderable: null,
                __renderDirty: null,
                __renderParent: null,
                __renderTransform: null,
                __renderTransformCache: null,
                __renderTransformChanged: null,
                __rotation: null,
                __rotationCosine: null,
                __rotationSine: null,
                __scale9Grid: null,
                __scaleX: null,
                __scaleY: null,
                __scrollRect: null,
                __shader: null,
                __tempPoint: null,
                __transform: null,
                __transformDirty: null,
                __visible: null,
                __worldAlpha: null,
                __worldAlphaChanged: null,
                __worldBlendMode: null,
                __worldClip: null,
                __worldClipChanged: null,
                __worldColorTransform: null,
                __worldShader: null,
                __worldScale9Grid: null,
                __worldTransform: null,
                __worldVisible: null,
                __worldVisibleChanged: null,
                __worldTransformInvalid: null,
                __worldZ: null,
                __canvas: null,
                __context: null,
                __style: null,
                addEventListener: function(a, b, c, d, e) {
                    null == e && (e = !1);
                    null ==
                        d && (d = 0);
                    null == c && (c = !1);
                    switch (a) {
                        case "activate":
                        case "deactivate":
                        case "enterFrame":
                        case "exitFrame":
                        case "frameConstructed":
                        case "render":
                            R.__broadcastEvents.exists(a) || R.__broadcastEvents.set(a, []);
                            var f = R.__broadcastEvents.get(a); - 1 == f.indexOf(this) && f.push(this);
                            break;
                        case "clearDOM":
                        case "renderCairo":
                        case "renderCanvas":
                        case "renderDOM":
                        case "renderOpenGL":
                            null == this.__customRenderEvent && (this.__customRenderEvent = new Uo(null), this.__customRenderEvent.objectColorTransform = new mc, this.__customRenderEvent.objectMatrix =
                                new Ya, this.__customRenderClear = !0)
                    }
                    bb.prototype.addEventListener.call(this, a, b, c, d, e)
                },
                dispatchEvent: function(a) {
                    E.is(a, sb) ? (a.stageX = this.__getRenderTransform().__transformX(a.localX, a.localY), a.stageY = this.__getRenderTransform().__transformY(a.localX, a.localY)) : E.is(a, xe) && (a.stageX = this.__getRenderTransform().__transformX(a.localX, a.localY), a.stageY = this.__getRenderTransform().__transformY(a.localX, a.localY));
                    a.target = this;
                    return this.__dispatchWithCapture(a)
                },
                getBounds: function(a) {
                    var b = Ya.__pool.get();
                    if (null != a && a != this) {
                        b.copyFrom(this.__getWorldTransform());
                        var c = Ya.__pool.get();
                        c.copyFrom(a.__getWorldTransform());
                        c.invert();
                        b.concat(c);
                        Ya.__pool.release(c)
                    } else b.identity();
                    a = new hb;
                    this.__getBounds(a, b);
                    Ya.__pool.release(b);
                    return a
                },
                globalToLocal: function(a) {
                    return this.__globalToLocal(a, new Ta)
                },
                localToGlobal: function(a) {
                    return this.__getRenderTransform().transformPoint(a)
                },
                removeEventListener: function(a, b, c) {
                    null == c && (c = !1);
                    bb.prototype.removeEventListener.call(this, a, b, c);
                    switch (a) {
                        case "activate":
                        case "deactivate":
                        case "enterFrame":
                        case "exitFrame":
                        case "frameConstructed":
                        case "render":
                            this.hasEventListener(a) ||
                                R.__broadcastEvents.exists(a) && la.remove(R.__broadcastEvents.get(a), this);
                            break;
                        case "clearDOM":
                        case "renderCairo":
                        case "renderCanvas":
                        case "renderDOM":
                        case "renderOpenGL":
                            this.hasEventListener("clearDOM") || this.hasEventListener("renderCairo") || this.hasEventListener("renderCanvas") || this.hasEventListener("renderDOM") || this.hasEventListener("renderOpenGL") || (this.__customRenderEvent = null)
                    }
                },
                __cleanup: function() {
                    this.__context = this.__canvas = this.__cairo = null;
                    null != this.__graphics && this.__graphics.__cleanup();
                    null != this.__cacheBitmap && (this.__cacheBitmap.__cleanup(), this.__cacheBitmap = null);
                    null != this.__cacheBitmapData && (this.__cacheBitmapData.dispose(), this.__cacheBitmapData = null)
                },
                __dispatch: function(a) {
                    if (null != this.__eventMap && this.hasEventListener(a.type)) {
                        var b = bb.prototype.__dispatchEvent.call(this, a);
                        return a.__isCanceled ? !0 : b
                    }
                    return !0
                },
                __dispatchChildren: function(a) {},
                __dispatchEvent: function(a) {
                    var b = a.bubbles ? this.parent : null,
                        c = bb.prototype.__dispatchEvent.call(this, a);
                    if (a.__isCanceled) return !0;
                    null != b && b != this && (a.eventPhase = 3, null == a.target && (a.target = this), b.__dispatchEvent(a));
                    return c
                },
                __dispatchWithCapture: function(a) {
                    null == a.target && (a.target = this);
                    if (null != this.parent)
                        if (a.eventPhase = 1, this.parent == this.stage) this.parent.__dispatch(a);
                        else {
                            for (var b = R.__tempStack.get(), c = this.parent, d = 0; null != c;) b.set(d, c), c = c.parent, ++d;
                            c = 0;
                            for (var e = d; c < e;) {
                                var f = c++;
                                b.get(d - f - 1).__dispatch(a)
                            }
                            R.__tempStack.release(b)
                        } a.eventPhase = 2;
                    return this.__dispatchEvent(a)
                },
                __enterFrame: function(a) {},
                __getBounds: function(a,
                    b) {
                    null != this.__graphics && this.__graphics.__getBounds(a, b)
                },
                __getCursor: function() {
                    return null
                },
                __getFilterBounds: function(a, b) {
                    this.__getRenderBounds(a, b);
                    if (null != this.__filters) {
                        b = hb.__pool.get();
                        for (var c = 0, d = this.__filters; c < d.length;) {
                            var e = d[c];
                            ++c;
                            b.__expand(-e.__leftExtension, -e.__topExtension, e.__leftExtension + e.__rightExtension, e.__topExtension + e.__bottomExtension)
                        }
                        a.width += b.width;
                        a.height += b.height;
                        a.x += b.x;
                        a.y += b.y;
                        hb.__pool.release(b)
                    }
                },
                __getInteractive: function(a) {
                    return !1
                },
                __getLocalBounds: function(a) {
                    this.__getBounds(a,
                        this.__transform);
                    a.x -= this.__transform.tx;
                    a.y -= this.__transform.ty
                },
                __getRenderBounds: function(a, b) {
                    if (null == this.__scrollRect) this.__getBounds(a, b);
                    else {
                        var c = hb.__pool.get();
                        c.copyFrom(this.__scrollRect);
                        c.__transform(c, b);
                        a.__expand(c.x, c.y, c.width, c.height);
                        hb.__pool.release(c)
                    }
                },
                __getRenderTransform: function() {
                    this.__getWorldTransform();
                    return this.__renderTransform
                },
                __getWorldTransform: function() {
                    if (this.__transformDirty || this.__worldTransformInvalid) {
                        var a = [],
                            b = this;
                        if (null == this.parent) this.__update(!0,
                            !1);
                        else
                            for (; b != this.stage && (a.push(b), b = b.parent, null != b););
                        for (var c = a.length; 0 <= --c;) b = a[c], b.__update(!0, !1)
                    }
                    return this.__worldTransform
                },
                __globalToLocal: function(a, b) {
                    this.__getRenderTransform();
                    a == b ? this.__renderTransform.__transformInversePoint(a) : (b.x = this.__renderTransform.__transformInverseX(a.x, a.y), b.y = this.__renderTransform.__transformInverseY(a.x, a.y));
                    return b
                },
                __hitTest: function(a, b, c, d, e, f) {
                    if (null != this.__graphics) {
                        if (!f.__visible || this.__isMask || null != this.get_mask() && !this.get_mask().__hitTestMask(a,
                                b)) return !1;
                        if (this.__graphics.__hitTest(a, b, c, this.__getRenderTransform())) return null == d || e || d.push(f), !0
                    }
                    return !1
                },
                __hitTestMask: function(a, b) {
                    return null != this.__graphics && this.__graphics.__hitTest(a, b, !0, this.__getRenderTransform()) ? !0 : !1
                },
                __readGraphicsData: function(a, b) {
                    null != this.__graphics && this.__graphics.__readGraphicsData(a)
                },
                __renderCanvas: function(a) {
                    if (null == this.get_mask() || 0 < this.get_mask().get_width() && 0 < this.get_mask().get_height()) this.__updateCacheBitmap(a, !1), null == this.__cacheBitmap ||
                        this.__isCacheBitmapRender ? Vl.render(this, a) : Dk.render(this.__cacheBitmap, a);
                    this.__renderEvent(a)
                },
                __renderCanvasMask: function(a) {
                    null != this.__graphics && A.renderMask(this.__graphics, a)
                },
                __renderDOM: function(a) {
                    this.__updateCacheBitmap(a, !1);
                    null == this.__cacheBitmap || this.__isCacheBitmapRender ? Ek.render(this, a) : (this.__renderDOMClear(a), this.__cacheBitmap.stage = this.stage, Hf.render(this.__cacheBitmap, a));
                    this.__renderEvent(a)
                },
                __renderDOMClear: function(a) {
                    Ek.clear(this, a)
                },
                __renderEvent: function(a) {
                    if (null !=
                        this.__customRenderEvent && this.__renderable) {
                        this.__customRenderEvent.allowSmoothing = a.__allowSmoothing;
                        this.__customRenderEvent.objectMatrix.copyFrom(this.__renderTransform);
                        this.__customRenderEvent.objectColorTransform.__copyFrom(this.__worldColorTransform);
                        this.__customRenderEvent.renderer = a;
                        switch (a.__type) {
                            case "cairo":
                                this.__customRenderEvent.type = "renderCairo";
                                break;
                            case "canvas":
                                this.__customRenderEvent.type = "renderCanvas";
                                break;
                            case "dom":
                                this.__customRenderEvent.type = null != this.stage && this.__worldVisible ?
                                    "renderDOM" : "clearDOM";
                                break;
                            case "opengl":
                                a.__cleared || a.__clear();
                                a.setShader(this.__worldShader);
                                a.__context3D.__flushGL();
                                this.__customRenderEvent.type = "renderOpenGL";
                                break;
                            default:
                                return
                        }
                        a.__setBlendMode(this.__worldBlendMode);
                        a.__pushMaskObject(this);
                        this.dispatchEvent(this.__customRenderEvent);
                        a.__popMaskObject(this);
                        "opengl" == a.__type && a.setViewport()
                    }
                },
                __renderGL: function(a) {
                    this.__updateCacheBitmap(a, !1);
                    null == this.__cacheBitmap || this.__isCacheBitmapRender ? Wl.render(this, a) : cj.render(this.__cacheBitmap,
                        a);
                    this.__renderEvent(a)
                },
                __renderGLMask: function(a) {
                    null != this.__graphics && Fk.renderMask(this, a)
                },
                __setParentRenderDirty: function() {
                    var a = null != this.__renderParent ? this.__renderParent : this.parent;
                    null == a || a.__renderDirty || (a.__renderDirty = !0, a.__setParentRenderDirty())
                },
                __setRenderDirty: function() {
                    this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty())
                },
                __setStageReference: function(a) {
                    this.stage = a
                },
                __setTransformDirty: function() {
                    this.__transformDirty || (this.__transformDirty = !0,
                        this.__setWorldTransformInvalid(), this.__setParentRenderDirty())
                },
                __setWorldTransformInvalid: function() {
                    this.__worldTransformInvalid = !0
                },
                __shouldCacheHardware: function(a) {
                    return 1 == a || null != this.__filters ? !0 : 0 == a || null != this.__graphics && !vc.isCompatible(this.__graphics) ? !1 : null
                },
                __update: function(a, b) {
                    var c = null != this.__renderParent ? this.__renderParent : this.parent;
                    this.__isMask && null == c && (c = this.__maskTarget);
                    this.__renderable = this.__visible && 0 != this.__scaleX && 0 != this.__scaleY && !this.__isMask && (null ==
                        c || !c.__isMask);
                    this.__updateTransforms();
                    this.__worldTransformInvalid = this.__transformDirty = !1;
                    if (!a)
                        if (R.__supportDOM && (this.__renderTransformChanged = !this.__renderTransform.equals(this.__renderTransformCache), null == this.__renderTransformCache ? this.__renderTransformCache = this.__renderTransform.clone() : this.__renderTransformCache.copyFrom(this.__renderTransform)), null != c) {
                            if (R.__supportDOM) {
                                var d = c.__worldVisible && this.__visible;
                                this.__worldVisibleChanged = this.__worldVisible != d;
                                this.__worldVisible =
                                    d;
                                d = this.get_alpha() * c.__worldAlpha;
                                this.__worldAlphaChanged = this.__worldAlpha != d;
                                this.__worldAlpha = d
                            } else this.__worldAlpha = this.get_alpha() * c.__worldAlpha;
                            null != this.__objectTransform ? (this.__worldColorTransform.__copyFrom(this.__objectTransform.get_colorTransform()), this.__worldColorTransform.__combine(c.__worldColorTransform)) : this.__worldColorTransform.__copyFrom(c.__worldColorTransform);
                            this.__worldBlendMode = null == this.__blendMode || 10 == this.__blendMode ? c.__worldBlendMode : this.__blendMode;
                            this.__worldShader =
                                null == this.__shader ? c.__shader : this.__shader;
                            this.__worldScale9Grid = null == this.__scale9Grid ? c.__scale9Grid : this.__scale9Grid
                        } else this.__worldAlpha = this.get_alpha(), R.__supportDOM && (this.__worldVisibleChanged = this.__worldVisible != this.__visible, this.__worldVisible = this.__visible, this.__worldAlphaChanged = this.__worldAlpha != this.get_alpha()), null != this.__objectTransform ? this.__worldColorTransform.__copyFrom(this.__objectTransform.get_colorTransform()) : this.__worldColorTransform.__identity(), this.__worldBlendMode =
                            this.__blendMode, this.__worldShader = this.__shader, this.__worldScale9Grid = this.__scale9Grid;
                    b && null != this.get_mask() && this.get_mask().__update(a, !0)
                },
                __updateCacheBitmap: function(a, b) {
                    if (this.__isCacheBitmapRender) return !1;
                    var c = mc.__pool.get();
                    c.__copyFrom(this.__worldColorTransform);
                    null != a.__worldColorTransform && c.__combine(a.__worldColorTransform);
                    var d = !1;
                    if (this.get_cacheAsBitmap() || "opengl" != a.__type && !c.__isDefault(!0)) {
                        d = null;
                        var e = (b = null == this.__cacheBitmap || this.__renderDirty && (b || null !=
                                this.__children && 0 < this.__children.length) || this.opaqueBackground != this.__cacheBitmapBackground) || null != this.__graphics && this.__graphics.__softwareDirty || !this.__cacheBitmapColorTransform.__equals(c, !0),
                            f = b || null != this.__graphics && this.__graphics.__hardwareDirty,
                            h = a.__type;
                        if (e || f) "opengl" == h && 0 == this.__shouldCacheHardware(null) && (h = "canvas"), !e || "canvas" != h && "cairo" != h || (b = !0), f && "opengl" == h && (b = !0);
                        e = b || !this.__cacheBitmap.__worldTransform.equals(this.__worldTransform);
                        var k = null != this.__filters;
                        if (k && !b) {
                            f = 0;
                            for (var m = this.__filters; f < m.length;) {
                                var r = m[f];
                                ++f;
                                if (r.__renderDirty) {
                                    b = !0;
                                    break
                                }
                            }
                        }
                        null == this.__cacheBitmapMatrix && (this.__cacheBitmapMatrix = new Ya);
                        var I = null != this.__cacheAsBitmapMatrix ? this.__cacheAsBitmapMatrix : this.__renderTransform;
                        b || I.a == this.__cacheBitmapMatrix.a && I.b == this.__cacheBitmapMatrix.b && I.c == this.__cacheBitmapMatrix.c && I.d == this.__cacheBitmapMatrix.d || (b = !0);
                        !b && "opengl" != a.__type && null != this.__cacheBitmapData && null != this.__cacheBitmapData.image && this.__cacheBitmapData.image.version <
                            this.__cacheBitmapData.__textureVersion && (b = !0);
                        this.__cacheBitmapMatrix.copyFrom(I);
                        this.__cacheBitmapMatrix.tx = 0;
                        var tc = r = m = f = this.__cacheBitmapMatrix.ty = 0,
                            g = 0,
                            l = 0;
                        if (e || b) d = hb.__pool.get(), this.__getFilterBounds(d, this.__cacheBitmapMatrix), r = Math.ceil(d.width), tc = Math.ceil(d.height), g = 0 < d.x ? Math.ceil(d.x) : Math.floor(d.x), l = 0 < d.y ? Math.ceil(d.y) : Math.floor(d.y), null != this.__cacheBitmapData ? r > this.__cacheBitmapData.width || tc > this.__cacheBitmapData.height ? (f = Math.ceil(Math.max(1.25 * r, this.__cacheBitmapData.width)),
                            m = Math.ceil(Math.max(1.25 * tc, this.__cacheBitmapData.height)), b = !0) : (f = this.__cacheBitmapData.width, m = this.__cacheBitmapData.height) : (f = r, m = tc);
                        if (b)
                            if (e = !0, this.__cacheBitmapBackground = this.opaqueBackground, .5 <= r && .5 <= tc) {
                                var mb = null != this.opaqueBackground && (f != r || m != tc),
                                    dj = null != this.opaqueBackground ? -16777216 | this.opaqueBackground : 0,
                                    n = mb ? 0 : dj,
                                    pf = "opengl" == a.__type;
                                null == this.__cacheBitmapData || f > this.__cacheBitmapData.width || m > this.__cacheBitmapData.height ? (this.__cacheBitmapData = new Kb(f, m, !0,
                                    n), null == this.__cacheBitmap && (this.__cacheBitmap = new If), this.__cacheBitmap.__bitmapData = this.__cacheBitmapData, this.__cacheBitmapRenderer = null) : this.__cacheBitmapData.__fillRect(this.__cacheBitmapData.rect, n, pf);
                                mb && (d.setTo(0, 0, r, tc), this.__cacheBitmapData.__fillRect(d, dj, pf))
                            } else return mc.__pool.release(c), this.__cacheBitmapRenderer = this.__cacheBitmapData3 = this.__cacheBitmapData2 = this.__cacheBitmapData = this.__cacheBitmap = null, !0;
                        else this.__cacheBitmapData = this.__cacheBitmap.get_bitmapData(),
                            this.__cacheBitmapData3 = this.__cacheBitmapData2 = null;
                        if (e || b) this.__cacheBitmap.__worldTransform.copyFrom(this.__worldTransform), I == this.__renderTransform ? (this.__cacheBitmap.__renderTransform.identity(), this.__cacheBitmap.__renderTransform.tx = this.__renderTransform.tx + g, this.__cacheBitmap.__renderTransform.ty = this.__renderTransform.ty + l) : (this.__cacheBitmap.__renderTransform.copyFrom(this.__cacheBitmapMatrix), this.__cacheBitmap.__renderTransform.invert(), this.__cacheBitmap.__renderTransform.concat(this.__renderTransform),
                            this.__cacheBitmap.__renderTransform.tx += g, this.__cacheBitmap.__renderTransform.ty += l);
                        this.__cacheBitmap.smoothing = a.__allowSmoothing;
                        this.__cacheBitmap.__renderable = this.__renderable;
                        this.__cacheBitmap.__worldAlpha = this.__worldAlpha;
                        this.__cacheBitmap.__worldBlendMode = this.__worldBlendMode;
                        this.__cacheBitmap.__worldShader = this.__worldShader;
                        this.__cacheBitmap.set_mask(this.__mask);
                        if (b) {
                            if (null == this.__cacheBitmapRenderer || h != this.__cacheBitmapRenderer.__type) "opengl" == h ? this.__cacheBitmapRenderer =
                                new Bb(aa.__cast(a, Bb).__context3D, this.__cacheBitmapData) : (null == this.__cacheBitmapData.image && (this.__cacheBitmapData = new Kb(f, m, !0, null != this.opaqueBackground ? -16777216 | this.opaqueBackground : 0), this.__cacheBitmap.__bitmapData = this.__cacheBitmapData), Ua.convertToCanvas(this.__cacheBitmapData.image), this.__cacheBitmapRenderer = new xh(this.__cacheBitmapData.image.buffer.__srcContext)), this.__cacheBitmapRenderer.__worldTransform = new Ya, this.__cacheBitmapRenderer.__worldColorTransform = new mc;
                            null == this.__cacheBitmapColorTransform &&
                                (this.__cacheBitmapColorTransform = new mc);
                            this.__cacheBitmapRenderer.__stage = this.stage;
                            this.__cacheBitmapRenderer.__allowSmoothing = a.__allowSmoothing;
                            this.__cacheBitmapRenderer.__setBlendMode(10);
                            this.__cacheBitmapRenderer.__worldAlpha = 1 / this.__worldAlpha;
                            this.__cacheBitmapRenderer.__worldTransform.copyFrom(this.__renderTransform);
                            this.__cacheBitmapRenderer.__worldTransform.invert();
                            this.__cacheBitmapRenderer.__worldTransform.concat(this.__cacheBitmapMatrix);
                            this.__cacheBitmapRenderer.__worldTransform.tx -=
                                g;
                            this.__cacheBitmapRenderer.__worldTransform.ty -= l;
                            this.__cacheBitmapRenderer.__worldColorTransform.__copyFrom(c);
                            this.__cacheBitmapRenderer.__worldColorTransform.__invert();
                            this.__isCacheBitmapRender = !0;
                            if ("opengl" == this.__cacheBitmapRenderer.__type) {
                                h = this.__cacheBitmapRenderer;
                                I = h.__context3D;
                                g = I.__state.renderToTexture;
                                l = I.__state.renderToTextureDepthStencil;
                                mb = I.__state.renderToTextureAntiAlias;
                                dj = I.__state.renderToTextureSurfaceSelector;
                                n = a.__blendMode;
                                a.__suspendClipAndMask();
                                h.__copyShader(a);
                                this.__cacheBitmapData.__setUVRect(I, 0, 0, r, tc);
                                h.__setRenderTarget(this.__cacheBitmapData);
                                null != this.__cacheBitmapData.image && (this.__cacheBitmapData.__textureVersion = this.__cacheBitmapData.image.version + 1);
                                this.__cacheBitmapData.__drawGL(this, h);
                                if (k) {
                                    var zb = !1;
                                    k = 0;
                                    for (pf = this.__filters; k < pf.length;) {
                                        var p = pf[k];
                                        ++k;
                                        p.__preserveObject && (zb = !0)
                                    }
                                    k = this.__cacheBitmapData;
                                    p = null;
                                    null == this.__cacheBitmapData2 || f > this.__cacheBitmapData2.width || m > this.__cacheBitmapData2.height ? this.__cacheBitmapData2 =
                                        new Kb(f, m, !0, 0) : (this.__cacheBitmapData2.fillRect(this.__cacheBitmapData2.rect, 0), null != this.__cacheBitmapData2.image && (this.__cacheBitmapData2.__textureVersion = this.__cacheBitmapData2.image.version + 1));
                                    this.__cacheBitmapData2.__setUVRect(I, 0, 0, r, tc);
                                    pf = this.__cacheBitmapData2;
                                    zb && (null == this.__cacheBitmapData3 || f > this.__cacheBitmapData3.width || m > this.__cacheBitmapData3.height ? this.__cacheBitmapData3 = new Kb(f, m, !0, 0) : (this.__cacheBitmapData3.fillRect(this.__cacheBitmapData3.rect, 0), null != this.__cacheBitmapData3.image &&
                                        (this.__cacheBitmapData3.__textureVersion = this.__cacheBitmapData3.image.version + 1)), this.__cacheBitmapData3.__setUVRect(I, 0, 0, r, tc), p = this.__cacheBitmapData3);
                                    h.__setBlendMode(10);
                                    h.__worldAlpha = 1;
                                    h.__worldTransform.identity();
                                    h.__worldColorTransform.__identity();
                                    f = 0;
                                    for (m = this.__filters; f < m.length;) {
                                        r = m[f];
                                        ++f;
                                        r.__preserveObject && (h.__setRenderTarget(p), h.__renderFilterPass(k, h.__defaultDisplayShader, r.__smooth));
                                        tc = 0;
                                        for (zb = r.__numShaderPasses; tc < zb;) {
                                            var x = tc++;
                                            x = r.__initShader(h, x, r.__preserveObject ?
                                                p : null);
                                            h.__setBlendMode(r.__shaderBlendMode);
                                            h.__setRenderTarget(pf);
                                            h.__renderFilterPass(k, x, r.__smooth);
                                            x = k;
                                            k = pf;
                                            pf = x
                                        }
                                        r.__renderDirty = !1
                                    }
                                    this.__cacheBitmap.__bitmapData = k
                                }
                                a.__blendMode = 10;
                                a.__setBlendMode(n);
                                a.__copyShader(h);
                                null != g ? I.setRenderToTexture(g, l, mb, dj) : I.setRenderToBackBuffer();
                                a.__resumeClipAndMask(h);
                                a.setViewport();
                                this.__cacheBitmapColorTransform.__copyFrom(c)
                            } else {
                                this.__cacheBitmapData.__drawCanvas(this, this.__cacheBitmapRenderer);
                                if (k) {
                                    I = a = !1;
                                    r = 0;
                                    for (tc = this.__filters; r < tc.length;) h =
                                        tc[r], ++r, h.__needSecondBitmapData && (a = !0), h.__preserveObject && (I = !0);
                                    r = this.__cacheBitmapData;
                                    h = null;
                                    a ? (null == this.__cacheBitmapData2 || null == this.__cacheBitmapData2.image || f > this.__cacheBitmapData2.width || m > this.__cacheBitmapData2.height ? this.__cacheBitmapData2 = new Kb(f, m, !0, 0) : this.__cacheBitmapData2.fillRect(this.__cacheBitmapData2.rect, 0), tc = this.__cacheBitmapData2) : tc = r;
                                    I && (null == this.__cacheBitmapData3 || null == this.__cacheBitmapData3.image || f > this.__cacheBitmapData3.width || m > this.__cacheBitmapData3.height ?
                                        this.__cacheBitmapData3 = new Kb(f, m, !0, 0) : this.__cacheBitmapData3.fillRect(this.__cacheBitmapData3.rect, 0), h = this.__cacheBitmapData3);
                                    null == this.__tempPoint && (this.__tempPoint = new Ta);
                                    f = this.__tempPoint;
                                    m = 0;
                                    for (I = this.__filters; m < I.length;) l = I[m], ++m, l.__preserveObject && h.copyPixels(r, r.rect, f), g = l.__applyFilter(tc, r, r.rect, f), l.__preserveObject && g.draw(h, null, null != this.__objectTransform ? this.__objectTransform.get_colorTransform() : null), l.__renderDirty = !1, a && g == tc && (g = r, r = tc, tc = g);
                                    this.__cacheBitmapData !=
                                        r && (g = this.__cacheBitmapData, this.__cacheBitmapData = r, this.__cacheBitmapData2 = g, this.__cacheBitmap.__bitmapData = this.__cacheBitmapData, this.__cacheBitmapRenderer = null);
                                    this.__cacheBitmap.__imageVersion = this.__cacheBitmapData.__textureVersion
                                }
                                this.__cacheBitmapColorTransform.__copyFrom(c);
                                this.__cacheBitmapColorTransform.__isDefault(!0) || (this.__cacheBitmapColorTransform.alphaMultiplier = 1, this.__cacheBitmapData.colorTransform(this.__cacheBitmapData.rect, this.__cacheBitmapColorTransform))
                            }
                            this.__isCacheBitmapRender = !1
                        }(e || b) && hb.__pool.release(d);
                        d = e
                    } else null != this.__cacheBitmap && ("dom" == a.__type && this.__cacheBitmap.__renderDOMClear(a), this.__cacheBitmapRenderer = this.__cacheBitmapColorTransform = this.__cacheBitmapData3 = this.__cacheBitmapData2 = this.__cacheBitmapData = this.__cacheBitmap = null, d = !0);
                    mc.__pool.release(c);
                    return d
                },
                __updateTransforms: function(a) {
                    var b = null != a;
                    a = b ? a : this.__transform;
                    null == this.__worldTransform && (this.__worldTransform = new Ya);
                    null == this.__renderTransform && (this.__renderTransform = new Ya);
                    var c = null != this.__renderParent ? this.__renderParent : this.parent;
                    b || null == this.parent ? this.__worldTransform.copyFrom(a) : R.__calculateAbsoluteTransform(a, this.parent.__worldTransform, this.__worldTransform);
                    b || null == c ? this.__renderTransform.copyFrom(a) : R.__calculateAbsoluteTransform(a, c.__renderTransform, this.__renderTransform);
                    null != this.__scrollRect && this.__renderTransform.__translateTransformed(-this.__scrollRect.x, -this.__scrollRect.y)
                },
                get_alpha: function() {
                    return this.__alpha
                },
                set_alpha: function(a) {
                    1 <
                        a && (a = 1);
                    0 > a && (a = 0);
                    a == this.__alpha || this.get_cacheAsBitmap() || this.__setRenderDirty();
                    return this.__alpha = a
                },
                set_blendMode: function(a) {
                    null == a && (a = 10);
                    a != this.__blendMode && this.__setRenderDirty();
                    return this.__blendMode = a
                },
                get_cacheAsBitmap: function() {
                    return null == this.__filters ? this.__cacheAsBitmap : !0
                },
                set_cacheAsBitmap: function(a) {
                    a != this.__cacheAsBitmap && this.__setRenderDirty();
                    return this.__cacheAsBitmap = a
                },
                get_filters: function() {
                    return null == this.__filters ? [] : this.__filters.slice()
                },
                set_filters: function(a) {
                    null !=
                        a && 0 < a.length ? (this.__filters = a, this.__setRenderDirty()) : null != this.__filters && (this.__filters = null, this.__setRenderDirty());
                    return a
                },
                get_height: function() {
                    var a = hb.__pool.get();
                    this.__getLocalBounds(a);
                    var b = a.height;
                    hb.__pool.release(a);
                    return b
                },
                set_height: function(a) {
                    var b = hb.__pool.get(),
                        c = Ya.__pool.get();
                    c.identity();
                    this.__getBounds(b, c);
                    a != b.height ? this.set_scaleY(a / b.height) : this.set_scaleY(1);
                    hb.__pool.release(b);
                    Ya.__pool.release(c);
                    return a
                },
                get_loaderInfo: function() {
                    return null != this.stage ?
                        fc.current.__loaderInfo : null
                },
                get_mask: function() {
                    return this.__mask
                },
                set_mask: function(a) {
                    if (a == this.__mask) return a;
                    a != this.__mask && (this.__setTransformDirty(), this.__setRenderDirty());
                    null != this.__mask && (this.__mask.__isMask = !1, this.__mask.__maskTarget = null, this.__mask.__setTransformDirty(), this.__mask.__setRenderDirty());
                    null != a && (a.__isMask = !0, a.__maskTarget = this, a.__setWorldTransformInvalid());
                    null != this.__cacheBitmap && this.__cacheBitmap.get_mask() != a && this.__cacheBitmap.set_mask(a);
                    return this.__mask =
                        a
                },
                get_mouseX: function() {
                    var a = null != this.stage ? this.stage.__mouseX : fc.current.stage.__mouseX,
                        b = null != this.stage ? this.stage.__mouseY : fc.current.stage.__mouseY;
                    return this.__getRenderTransform().__transformInverseX(a, b)
                },
                get_mouseY: function() {
                    var a = null != this.stage ? this.stage.__mouseX : fc.current.stage.__mouseX,
                        b = null != this.stage ? this.stage.__mouseY : fc.current.stage.__mouseY;
                    return this.__getRenderTransform().__transformInverseY(a, b)
                },
                get_name: function() {
                    return this.__name
                },
                set_name: function(a) {
                    return this.__name =
                        a
                },
                get_rotation: function() {
                    return this.__rotation
                },
                set_rotation: function(a) {
                    if (a != this.__rotation) {
                        this.__rotation = a;
                        var b = Math.PI / 180 * this.__rotation;
                        this.__rotationSine = Math.sin(b);
                        this.__rotationCosine = Math.cos(b);
                        this.__transform.a = this.__rotationCosine * this.__scaleX;
                        this.__transform.b = this.__rotationSine * this.__scaleX;
                        this.__transform.c = -this.__rotationSine * this.__scaleY;
                        this.__transform.d = this.__rotationCosine * this.__scaleY;
                        this.__setTransformDirty()
                    }
                    return a
                },
                get_scale9Grid: function() {
                    return null ==
                        this.__scale9Grid ? null : this.__scale9Grid.clone()
                },
                set_scale9Grid: function(a) {
                    if (null == a && null == this.__scale9Grid || null != a && null != this.__scale9Grid && this.__scale9Grid.equals(a)) return a;
                    null != a ? (null == this.__scale9Grid && (this.__scale9Grid = new hb), this.__scale9Grid.copyFrom(a)) : this.__scale9Grid = null;
                    this.__setRenderDirty();
                    return a
                },
                get_scaleX: function() {
                    return this.__scaleX
                },
                set_scaleX: function(a) {
                    if (a != this.__scaleX)
                        if (this.__scaleX = a, 0 == this.__transform.b) a != this.__transform.a && this.__setTransformDirty(),
                            this.__transform.a = a;
                        else {
                            var b = this.__rotationCosine * a,
                                c = this.__rotationSine * a;
                            this.__transform.a == b && this.__transform.b == c || this.__setTransformDirty();
                            this.__transform.a = b;
                            this.__transform.b = c
                        } return a
                },
                get_scaleY: function() {
                    return this.__scaleY
                },
                set_scaleY: function(a) {
                    if (a != this.__scaleY)
                        if (this.__scaleY = a, 0 == this.__transform.c) a != this.__transform.d && this.__setTransformDirty(), this.__transform.d = a;
                        else {
                            var b = -this.__rotationSine * a,
                                c = this.__rotationCosine * a;
                            this.__transform.d == c && this.__transform.c ==
                                b || this.__setTransformDirty();
                            this.__transform.c = b;
                            this.__transform.d = c
                        } return a
                },
                set_scrollRect: function(a) {
                    if (null == a && null == this.__scrollRect || null != a && null != this.__scrollRect && this.__scrollRect.equals(a)) return a;
                    null != a ? (null == this.__scrollRect && (this.__scrollRect = new hb), this.__scrollRect.copyFrom(a)) : this.__scrollRect = null;
                    this.__setTransformDirty();
                    R.__supportDOM && this.__setRenderDirty();
                    return a
                },
                get_transform: function() {
                    null == this.__objectTransform && (this.__objectTransform = new Vo(this));
                    return this.__objectTransform
                },
                set_transform: function(a) {
                    if (null == a) throw new Z(new Xl("Parameter transform must be non-null."));
                    null == this.__objectTransform && (this.__objectTransform = new Vo(this));
                    this.__setTransformDirty();
                    this.__objectTransform.set_matrix(a.get_matrix());
                    if (!this.__objectTransform.get_colorTransform().__equals(a.get_colorTransform(), !0) || !this.get_cacheAsBitmap() && this.__objectTransform.get_colorTransform().alphaMultiplier != a.get_colorTransform().alphaMultiplier) this.__objectTransform.get_colorTransform().__copyFrom(a.get_colorTransform()),
                        this.__setRenderDirty();
                    return this.__objectTransform
                },
                get_visible: function() {
                    return this.__visible
                },
                set_visible: function(a) {
                    a != this.__visible && this.__setRenderDirty();
                    return this.__visible = a
                },
                get_width: function() {
                    var a = hb.__pool.get();
                    this.__getLocalBounds(a);
                    var b = a.width;
                    hb.__pool.release(a);
                    return b
                },
                set_width: function(a) {
                    var b = hb.__pool.get(),
                        c = Ya.__pool.get();
                    c.identity();
                    this.__getBounds(b, c);
                    a != b.width ? this.set_scaleX(a / b.width) : this.set_scaleX(1);
                    hb.__pool.release(b);
                    Ya.__pool.release(c);
                    return a
                },
                get_x: function() {
                    return this.__transform.tx
                },
                set_x: function(a) {
                    a != this.__transform.tx && this.__setTransformDirty();
                    return this.__transform.tx = a
                },
                get_y: function() {
                    return this.__transform.ty
                },
                set_y: function(a) {
                    a != this.__transform.ty && this.__setTransformDirty();
                    return this.__transform.ty = a
                },
                __class__: R
            });
            var ra = function() {
                R.call(this);
                this.doubleClickEnabled = !1;
                this.mouseEnabled = !0;
                this.needsSoftKeyboard = !1;
                this.__tabEnabled = null;
                this.__tabIndex = -1
            };
            g["openfl.display.InteractiveObject"] = ra;
            ra.__name__ = ["openfl", "display", "InteractiveObject"];
            ra.__super__ = R;
            ra.prototype = p(R.prototype, {
                doubleClickEnabled: null,
                focusRect: null,
                mouseEnabled: null,
                needsSoftKeyboard: null,
                __tabEnabled: null,
                __tabIndex: null,
                __allowMouseFocus: function() {
                    return this.get_tabEnabled()
                },
                __getInteractive: function(a) {
                    null != a && (a.push(this), null != this.parent && this.parent.__getInteractive(a));
                    return !0
                },
                __hitTest: function(a, b, c, d, e, f) {
                    return !f.get_visible() || this.__isMask || e && !this.mouseEnabled ? !1 : R.prototype.__hitTest.call(this,
                        a, b, c, d, e, f)
                },
                __tabTest: function(a) {
                    this.get_tabEnabled() && a.push(this)
                },
                get_tabEnabled: function() {
                    return 1 == this.__tabEnabled ? !0 : !1
                },
                get_tabIndex: function() {
                    return this.__tabIndex
                },
                __class__: ra
            });
            var gb = function() {
                ra.call(this);
                this.__tabChildren = this.mouseChildren = !0;
                this.__children = [];
                this.__removedChildren = M.toObjectVector(null)
            };
            g["openfl.display.DisplayObjectContainer"] = gb;
            gb.__name__ = ["openfl", "display", "DisplayObjectContainer"];
            gb.__super__ = ra;
            gb.prototype = p(ra.prototype, {
                mouseChildren: null,
                __removedChildren: null,
                __tabChildren: null,
                addChild: function(a) {
                    return this.addChildAt(a, this.get_numChildren())
                },
                addChildAt: function(a, b) {
                    if (null == a) throw a = new Xl("Error #2007: Parameter child must be non-null."), a.errorID = 2007, new Z(a);
                    if (a.stage == a) throw a = new Yl("Error #3783: A Stage object cannot be added as the child of another object."), a.errorID = 3783, new Z(a);
                    if (b > this.__children.length || 0 > b) throw new Z("Invalid index position " + b);
                    if (a.parent == this) this.__children[b] != a && (la.remove(this.__children,
                        a), this.__children.splice(b, 0, a), this.__setRenderDirty());
                    else {
                        null != a.parent && a.parent.removeChild(a);
                        this.__children.splice(b, 0, a);
                        a.parent = this;
                        (b = null != this.stage && null == a.stage) && a.__setStageReference(this.stage);
                        a.__setTransformDirty();
                        a.__setRenderDirty();
                        this.__setRenderDirty();
                        var c = new Oa("added");
                        c.bubbles = !0;
                        c.target = a;
                        a.__dispatchWithCapture(c);
                        b && (c = new Oa("addedToStage", !1, !1), a.__dispatchWithCapture(c), a.__dispatchChildren(c))
                    }
                    return a
                },
                contains: function(a) {
                    for (; a != this && null != a;) a =
                        a.parent;
                    return a == this
                },
                getChildAt: function(a) {
                    return 0 <= a && a < this.__children.length ? this.__children[a] : null
                },
                getChildIndex: function(a) {
                    for (var b = 0, c = this.__children.length; b < c;) {
                        var d = b++;
                        if (this.__children[d] == a) return d
                    }
                    return -1
                },
                removeChild: function(a) {
                    if (null != a && a.parent == this) {
                        a.__setTransformDirty();
                        a.__setRenderDirty();
                        this.__setRenderDirty();
                        var b = new Oa("removed", !0);
                        a.__dispatchWithCapture(b);
                        null != this.stage && (null != a.stage && this.stage.get_focus() == a && this.stage.set_focus(null), b = new Oa("removedFromStage",
                            !1, !1), a.__dispatchWithCapture(b), a.__dispatchChildren(b), a.__setStageReference(null));
                        a.parent = null;
                        la.remove(this.__children, a);
                        this.__removedChildren.push(a);
                        a.__setTransformDirty()
                    }
                    return a
                },
                removeChildAt: function(a) {
                    return 0 <= a && a < this.__children.length ? this.removeChild(this.__children[a]) : null
                },
                removeChildren: function(a, b) {
                    null == b && (b = 2147483647);
                    null == a && (a = 0);
                    if (2147483647 == b && (b = this.__children.length - 1, 0 > b)) return;
                    if (!(a > this.__children.length - 1)) {
                        if (b < a || 0 > a || b > this.__children.length) throw new Z(new Wo("The supplied index is out of bounds."));
                        for (b -= a; 0 <= b;) this.removeChildAt(a), --b
                    }
                },
                setChildIndex: function(a, b) {
                    0 <= b && b <= this.__children.length && a.parent == this && (la.remove(this.__children, a), this.__children.splice(b, 0, a))
                },
                __cleanup: function() {
                    ra.prototype.__cleanup.call(this);
                    for (var a = 0, b = this.__children; a < b.length;) {
                        var c = b[a];
                        ++a;
                        c.__cleanup()
                    }
                    this.__cleanupRemovedChildren()
                },
                __cleanupRemovedChildren: function() {
                    for (var a = 0, b = this.__removedChildren; a < b.get_length();) {
                        var c = b.get(a);
                        ++a;
                        null == c.stage && c.__cleanup()
                    }
                    this.__removedChildren.set_length(0)
                },
                __dispatchChildren: function(a) {
                    if (null != this.__children)
                        for (var b = 0, c = this.__children; b < c.length;) {
                            var d = c[b];
                            ++b;
                            a.target = d;
                            if (!d.__dispatchWithCapture(a)) break;
                            d.__dispatchChildren(a)
                        }
                },
                __enterFrame: function(a) {
                    for (var b = 0, c = this.__children; b < c.length;) {
                        var d = c[b];
                        ++b;
                        d.__enterFrame(a)
                    }
                },
                __getBounds: function(a, b) {
                    ra.prototype.__getBounds.call(this, a, b);
                    if (0 != this.__children.length) {
                        for (var c = Ya.__pool.get(), d = 0, e = this.__children; d < e.length;) {
                            var f = e[d];
                            ++d;
                            0 != f.__scaleX && 0 != f.__scaleY && (R.__calculateAbsoluteTransform(f.__transform,
                                b, c), f.__getBounds(a, c))
                        }
                        Ya.__pool.release(c)
                    }
                },
                __getFilterBounds: function(a, b) {
                    ra.prototype.__getFilterBounds.call(this, a, b);
                    if (null == this.__scrollRect && 0 != this.__children.length) {
                        for (var c = Ya.__pool.get(), d = 0, e = this.__children; d < e.length;) {
                            var f = e[d];
                            ++d;
                            0 == f.__scaleX || 0 == f.__scaleY || f.__isMask || (R.__calculateAbsoluteTransform(f.__transform, b, c), f.__getFilterBounds(a, c))
                        }
                        Ya.__pool.release(c)
                    }
                },
                __getRenderBounds: function(a, b) {
                    if (null != this.__scrollRect) ra.prototype.__getRenderBounds.call(this, a,
                        b);
                    else if (ra.prototype.__getBounds.call(this, a, b), 0 != this.__children.length) {
                        for (var c = Ya.__pool.get(), d = 0, e = this.__children; d < e.length;) {
                            var f = e[d];
                            ++d;
                            0 == f.__scaleX || 0 == f.__scaleY || f.__isMask || (R.__calculateAbsoluteTransform(f.__transform, b, c), f.__getRenderBounds(a, c))
                        }
                        Ya.__pool.release(c)
                    }
                },
                __hitTest: function(a, b, c, d, e, f) {
                    if (!f.get_visible() || this.__isMask || e && !this.mouseEnabled && !this.mouseChildren || null != this.get_mask() && !this.get_mask().__hitTestMask(a, b)) return !1;
                    if (null != this.__scrollRect) {
                        var h =
                            Ta.__pool.get();
                        h.setTo(a, b);
                        this.__getRenderTransform().__transformInversePoint(h);
                        if (!this.__scrollRect.containsPoint(h)) return Ta.__pool.release(h), !1;
                        Ta.__pool.release(h)
                    }
                    h = this.__children.length;
                    if (e)
                        if (null == d || !this.mouseChildren)
                            for (; 0 <= --h;) {
                                if (this.__children[h].__hitTest(a, b, c, null, !0, this.__children[h])) return null != d && d.push(f), !0
                            } else {
                                if (null != d) {
                                    e = d.length;
                                    for (var k, m = !1; 0 <= --h && !(((k = this.__children[h].__getInteractive(null)) || this.mouseEnabled && !m) && this.__children[h].__hitTest(a,
                                            b, c, d, !0, this.__children[h]) && (m = !0, k && d.length > e)););
                                    if (m) return d.splice(e, 0, f), !0
                                }
                            } else {
                                for (f = !1; 0 <= --h && (!this.__children[h].__hitTest(a, b, c, d, !1, this.__children[h]) || (f = !0, null != d)););
                                return f
                            }
                    return !1
                },
                __hitTestMask: function(a, b) {
                    for (var c = this.__children.length; 0 <= --c;)
                        if (this.__children[c].__hitTestMask(a, b)) return !0;
                    return !1
                },
                __readGraphicsData: function(a, b) {
                    ra.prototype.__readGraphicsData.call(this, a, b);
                    if (b)
                        for (var c = 0, d = this.__children; c < d.length;) {
                            var e = d[c];
                            ++c;
                            e.__readGraphicsData(a,
                                b)
                        }
                },
                __renderCanvas: function(a) {
                    this.__cleanupRemovedChildren();
                    if (!(!this.__renderable || 0 >= this.__worldAlpha || null != this.get_mask() && (0 >= this.get_mask().get_width() || 0 >= this.get_mask().get_height())) && (ra.prototype.__renderCanvas.call(this, a), null == this.__cacheBitmap || this.__isCacheBitmapRender)) {
                        a.__pushMaskObject(this);
                        if (null != a.__stage) {
                            for (var b = 0, c = this.__children; b < c.length;) {
                                var d = c[b];
                                ++b;
                                d.__renderCanvas(a);
                                d.__renderDirty = !1
                            }
                            this.__renderDirty = !1
                        } else
                            for (b = 0, c = this.__children; b < c.length;) d =
                                c[b], ++b, d.__renderCanvas(a);
                        a.__popMaskObject(this)
                    }
                },
                __renderCanvasMask: function(a) {
                    this.__cleanupRemovedChildren();
                    null != this.__graphics && A.renderMask(this.__graphics, a);
                    for (var b = 0, c = this.__children; b < c.length;) {
                        var d = c[b];
                        ++b;
                        d.__renderCanvasMask(a)
                    }
                },
                __renderDOM: function(a) {
                    for (var b = 0, c = this.__removedChildren; b < c.get_length();) {
                        var d = c.get(b);
                        ++b;
                        null == d.stage && d.__renderDOM(a)
                    }
                    this.__cleanupRemovedChildren();
                    ra.prototype.__renderDOM.call(this, a);
                    if (null == this.__cacheBitmap || this.__isCacheBitmapRender) {
                        a.__pushMaskObject(this);
                        if (null != a.__stage) {
                            b = 0;
                            for (c = this.__children; b < c.length;) d = c[b], ++b, d.__renderDOM(a), d.__renderDirty = !1;
                            this.__renderDirty = !1
                        } else
                            for (b = 0, c = this.__children; b < c.length;) d = c[b], ++b, d.__renderDOM(a);
                        a.__popMaskObject(this)
                    }
                },
                __renderDOMClear: function(a) {
                    for (var b = 0, c = this.__removedChildren; b < c.get_length();) {
                        var d = c.get(b);
                        ++b;
                        null == d.stage && d.__renderDOMClear(a)
                    }
                    this.__cleanupRemovedChildren();
                    b = 0;
                    for (c = this.__children; b < c.length;) d = c[b], ++b, d.__renderDOMClear(a)
                },
                __renderGL: function(a) {
                    this.__cleanupRemovedChildren();
                    if (this.__renderable && !(0 >= this.__worldAlpha) && (ra.prototype.__renderGL.call(this, a), null == this.__cacheBitmap || this.__isCacheBitmapRender)) {
                        if (0 < this.__children.length)
                            if (a.__pushMaskObject(this), null != a.__stage) {
                                for (var b = 0, c = this.__children; b < c.length;) {
                                    var d = c[b];
                                    ++b;
                                    d.__renderGL(a);
                                    d.__renderDirty = !1
                                }
                                this.__renderDirty = !1
                            } else
                                for (b = 0, c = this.__children; b < c.length;) d = c[b], ++b, d.__renderGL(a);
                        0 < this.__children.length && a.__popMaskObject(this)
                    }
                },
                __renderGLMask: function(a) {
                    this.__cleanupRemovedChildren();
                    null != this.__graphics && Fk.renderMask(this, a);
                    for (var b = 0, c = this.__children; b < c.length;) {
                        var d = c[b];
                        ++b;
                        d.__renderGLMask(a)
                    }
                },
                __setStageReference: function(a) {
                    ra.prototype.__setStageReference.call(this, a);
                    if (null != this.__children)
                        for (var b = 0, c = this.__children; b < c.length;) {
                            var d = c[b];
                            ++b;
                            d.__setStageReference(a)
                        }
                },
                __setWorldTransformInvalid: function() {
                    if (!this.__worldTransformInvalid && (this.__worldTransformInvalid = !0, null != this.__children))
                        for (var a = 0, b = this.__children; a < b.length;) {
                            var c = b[a];
                            ++a;
                            c.__setWorldTransformInvalid()
                        }
                },
                __shouldCacheHardware: function(a) {
                    if (1 == a) return !0;
                    a = ra.prototype.__shouldCacheHardware.call(this, a);
                    if (1 == a) return !0;
                    if (null != this.__children)
                        for (var b = 0, c = this.__children; b < c.length;) {
                            var d = c[b];
                            ++b;
                            a = d.__shouldCacheHardware(a);
                            if (1 == a) return !0
                        }
                    return a
                },
                __tabTest: function(a) {
                    ra.prototype.__tabTest.call(this, a);
                    if (this.get_tabChildren())
                        for (var b, c = 0, d = this.__children; c < d.length;) {
                            var e = d[c];
                            ++c;
                            if (b = e.__getInteractive(null)) b = e, b.__tabTest(a)
                        }
                },
                __update: function(a, b) {
                    ra.prototype.__update.call(this,
                        a, b);
                    if (b) {
                        b = 0;
                        for (var c = this.__children; b < c.length;) {
                            var d = c[b];
                            ++b;
                            d.__update(a, !0)
                        }
                    }
                },
                get_numChildren: function() {
                    return this.__children.length
                },
                get_tabChildren: function() {
                    return this.__tabChildren
                },
                __class__: gb
            });
            var S = function() {
                gb.call(this);
                this.__buttonMode = !1;
                this.useHandCursor = !0
            };
            g["openfl.display.Sprite"] = S;
            S.__name__ = ["openfl", "display", "Sprite"];
            S.__super__ = gb;
            S.prototype = p(gb.prototype, {
                dropTarget: null,
                hitArea: null,
                useHandCursor: null,
                __buttonMode: null,
                __getCursor: function() {
                    return this.__buttonMode &&
                        this.useHandCursor ? "button" : null
                },
                __hitTest: function(a, b, c, d, e, f) {
                    if (e && !this.mouseEnabled && !this.mouseChildren) return !1;
                    if (!f.get_visible() || this.__isMask || null != this.get_mask() && !this.get_mask().__hitTestMask(a, b)) return this.__hitTestHitArea(a, b, c, d, e, f);
                    if (null != this.__scrollRect) {
                        var h = Ta.__pool.get();
                        h.setTo(a, b);
                        this.__getRenderTransform().__transformInversePoint(h);
                        if (!this.__scrollRect.containsPoint(h)) return Ta.__pool.release(h), this.__hitTestHitArea(a, b, c, d, !0, f);
                        Ta.__pool.release(h)
                    }
                    return gb.prototype.__hitTest.call(this,
                        a, b, c, d, e, f) ? null != d ? e : !0 : null == this.hitArea && null != this.__graphics && this.__graphics.__hitTest(a, b, c, this.__getRenderTransform()) ? (null == d || e && !this.mouseEnabled || d.push(f), !0) : this.__hitTestHitArea(a, b, c, d, e, f)
                },
                __hitTestHitArea: function(a, b, c, d, e, f) {
                    return null == this.hitArea || this.hitArea.mouseEnabled ? !1 : (this.hitArea.mouseEnabled = !0, a = this.hitArea.__hitTest(a, b, c, null, !0, f), this.hitArea.mouseEnabled = !1, null != d && a && (d[d.length] = f), a)
                },
                __hitTestMask: function(a, b) {
                    return gb.prototype.__hitTestMask.call(this,
                        a, b) || null != this.__graphics && this.__graphics.__hitTest(a, b, !0, this.__getRenderTransform()) ? !0 : !1
                },
                get_graphics: function() {
                    null == this.__graphics && (this.__graphics = new jf(this));
                    return this.__graphics
                },
                get_tabEnabled: function() {
                    return null == this.__tabEnabled ? this.__buttonMode : this.__tabEnabled
                },
                get_buttonMode: function() {
                    return this.__buttonMode
                },
                set_buttonMode: function(a) {
                    return this.__buttonMode = a
                },
                __class__: S
            });
            var ob = function() {
                S.call(this)
            };
            g.Main = ob;
            ob.__name__ = ["Main"];
            ob.main = function() {
                w.trace("init", {
                    fileName: "Main.hx",
                    lineNumber: 48,
                    className: "Main",
                    methodName: "main"
                });
                var a = ia.get_current().stage;
                a.set_scaleMode(2);
                a.align = 6;
                a.addEventListener("deactivate", ob.deactivate);
                Zl.inputMode = 2;
                var b = null;
                b = function(c) {
                    rb.initializeAndStart(a, 1618918379E3);
                    a.removeEventListener("enterFrame", b)
                };
                a.addEventListener("enterFrame", b)
            };
            ob.deactivate = function(a) {};
            ob.__super__ = S;
            ob.prototype = p(S.prototype, {
                __class__: ob
            });
            var nd = function(a) {
                a.addChild(this);
                S.call(this);
                this.dispatchEvent(new Oa("addedToStage",
                    !1, !1))
            };
            g.DocumentClass = nd;
            nd.__name__ = ["DocumentClass"];
            nd.__super__ = ob;
            nd.prototype = p(ob.prototype, {
                __class__: nd
            });
            var n = function() {
                S.call(this);
                this.__enabled = !0;
                if (null != n.__constructor) {
                    var a = n.__constructor;
                    n.__constructor = null;
                    a(this)
                }
            };
            g["openfl.display.MovieClip"] = n;
            n.__name__ = ["openfl", "display", "MovieClip"];
            n.fromTimeline = function(a) {
                var b = new n;
                b.attachTimeline(a);
                return b
            };
            n.__super__ = S;
            n.prototype = p(S.prototype, {
                __enabled: null,
                __hasDown: null,
                __hasOver: null,
                __hasUp: null,
                __mouseIsDown: null,
                __timeline: null,
                attachTimeline: function(a) {
                    this.__timeline = a;
                    null != a && (a.__attachMovieClip(this), this.play())
                },
                gotoAndPlay: function(a, b) {
                    null != this.__timeline && this.__timeline.__gotoAndPlay(a, b)
                },
                gotoAndStop: function(a, b) {
                    null != this.__timeline && this.__timeline.__gotoAndStop(a, b)
                },
                play: function() {
                    null != this.__timeline && this.__timeline.__play()
                },
                __enterFrame: function(a) {
                    null != this.__timeline && this.__timeline.__enterFrame(a);
                    for (var b = 0, c = this.__children; b < c.length;) {
                        var d = c[b];
                        ++b;
                        d.__enterFrame(a)
                    }
                },
                __tabTest: function(a) {
                    this.__enabled && S.prototype.__tabTest.call(this, a)
                },
                __onMouseDown: function(a) {
                    this.__enabled && this.__hasDown && this.gotoAndStop("_down");
                    this.__mouseIsDown = !0;
                    this.stage.addEventListener("mouseUp", q(this, this.__onMouseUp), !0)
                },
                __onMouseUp: function(a) {
                    this.__mouseIsDown = !1;
                    null != this.stage && this.stage.removeEventListener("mouseUp", q(this, this.__onMouseUp));
                    this.__buttonMode && (a.target == this && this.__enabled && this.__hasOver ? this.gotoAndStop("_over") : this.__enabled && this.__hasUp &&
                        this.gotoAndStop("_up"))
                },
                __onRollOut: function(a) {
                    this.__enabled && (this.__mouseIsDown && this.__hasOver ? this.gotoAndStop("_over") : this.__hasUp && this.gotoAndStop("_up"))
                },
                __onRollOver: function(a) {
                    this.__enabled && this.__hasOver && this.gotoAndStop("_over")
                },
                set_buttonMode: function(a) {
                    if (this.__buttonMode != a) {
                        if (a) {
                            this.__hasUp = this.__hasOver = this.__hasDown = !1;
                            for (var b = 0, c = this.get_currentLabels(); b < c.length;) {
                                var d = c[b];
                                ++b;
                                switch (d.name) {
                                    case "_down":
                                        this.__hasDown = !0;
                                        break;
                                    case "_over":
                                        this.__hasOver = !0;
                                        break;
                                    case "_up":
                                        this.__hasUp = !0
                                }
                            }
                            if (this.__hasDown || this.__hasOver || this.__hasUp) this.addEventListener("rollOver", q(this, this.__onRollOver)), this.addEventListener("rollOut", q(this, this.__onRollOut)), this.addEventListener("mouseDown", q(this, this.__onMouseDown))
                        } else this.removeEventListener("rollOver", q(this, this.__onRollOver)), this.removeEventListener("rollOut", q(this, this.__onRollOut)), this.removeEventListener("mouseDown", q(this, this.__onMouseDown));
                        this.__buttonMode = a
                    }
                    return a
                },
                get_currentLabels: function() {
                    return null !=
                        this.__timeline ? this.__timeline.__currentLabels.slice() : []
                },
                __class__: n
            });
            var od = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(7).__initObject(a, this)
            };
            g.Background_Side_Light = od;
            od.__name__ = ["Background_Side_Light"];
            od.__super__ = n;
            od.prototype = p(n.prototype, {
                __class__: od
            });
            var Tc = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(328).__initObject(a, this)
            };
            g.Button_Background = Tc;
            Tc.__name__ = ["Button_Background"];
            Tc.__super__ = n;
            Tc.prototype = p(n.prototype, {
                __class__: Tc
            });
            var Vd = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(332).__initObject(a, this)
            };
            g.Button_Buy_Background = Vd;
            Vd.__name__ = ["Button_Buy_Background"];
            Vd.__super__ = n;
            Vd.prototype = p(n.prototype, {
                __class__: Vd
            });
            var nc = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(95).__initObject(a, this)
            };
            g.Button_Consent_Ads_Background = nc;
            nc.__name__ = ["Button_Consent_Ads_Background"];
            nc.__super__ = n;
            nc.prototype = p(n.prototype, {
                __class__: nc
            });
            var td = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(300).__initObject(a, this)
            };
            g.Button_Downed_Background = td;
            td.__name__ = ["Button_Downed_Background"];
            td.__super__ = n;
            td.prototype = p(n.prototype, {
                __class__: td
            });
            var B = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(298).__initObject(a, this)
            };
            g.Button_Downed_Buy_Background = B;
            B.__name__ = ["Button_Downed_Buy_Background"];
            B.__super__ = n;
            B.prototype = p(n.prototype, {
                __class__: B
            });
            var dd = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(93).__initObject(a, this)
            };
            g.Button_Downed_Consent_Ads_Background = dd;
            dd.__name__ = ["Button_Downed_Consent_Ads_Background"];
            dd.__super__ = n;
            dd.prototype = p(n.prototype, {
                __class__: dd
            });
            var xc = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(35).__initObject(a, this)
            };
            g.Button_Text_Android = xc;
            xc.__name__ = ["Button_Text_Android"];
            xc.__super__ = n;
            xc.prototype = p(n.prototype, {
                __class__: xc
            });
            var jb = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(25).__initObject(a,
                    this)
            };
            g.Button_Text_Apply_Code = jb;
            jb.__name__ = ["Button_Text_Apply_Code"];
            jb.__super__ = n;
            jb.prototype = p(n.prototype, {
                __class__: jb
            });
            var yb = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(87).__initObject(a, this)
            };
            g.Button_Text_Consent_Remove_Ads = yb;
            yb.__name__ = ["Button_Text_Consent_Remove_Ads"];
            yb.__super__ = n;
            yb.prototype = p(n.prototype, {
                __class__: yb
            });
            var wb = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(89).__initObject(a, this)
            };
            g.Button_Text_Consent_Show_Non_Personalized =
                wb;
            wb.__name__ = ["Button_Text_Consent_Show_Non_Personalized"];
            wb.__super__ = n;
            wb.prototype = p(n.prototype, {
                __class__: wb
            });
            var ab = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(91).__initObject(a, this)
            };
            g.Button_Text_Consent_Show_Personalized = ab;
            ab.__name__ = ["Button_Text_Consent_Show_Personalized"];
            ab.__super__ = n;
            ab.prototype = p(n.prototype, {
                __class__: ab
            });
            var qa = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(43).__initObject(a, this)
            };
            g.Button_Text_Credits =
                qa;
            qa.__name__ = ["Button_Text_Credits"];
            qa.__super__ = n;
            qa.prototype = p(n.prototype, {
                __class__: qa
            });
            var da = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(85).__initObject(a, this)
            };
            g.Button_Text_Go_Back = da;
            da.__name__ = ["Button_Text_Go_Back"];
            da.__super__ = n;
            da.prototype = p(n.prototype, {
                __class__: da
            });
            var ke = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(57).__initObject(a, this)
            };
            g.Button_Text_OK = ke;
            ke.__name__ = ["Button_Text_OK"];
            ke.__super__ = n;
            ke.prototype =
                p(n.prototype, {
                    __class__: ke
                });
            var qc = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(304).__initObject(a, this)
            };
            g.Button_Text_Play = qc;
            qc.__name__ = ["Button_Text_Play"];
            qc.__super__ = n;
            qc.prototype = p(n.prototype, {
                __class__: qc
            });
            var Pd = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(117).__initObject(a, this)
            };
            g.Button_Text_Remove_Ads = Pd;
            Pd.__name__ = ["Button_Text_Remove_Ads"];
            Pd.__super__ = n;
            Pd.prototype = p(n.prototype, {
                __class__: Pd
            });
            var ac = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(81).__initObject(a, this)
            };
            g.Button_Text_Restore_Purchase = ac;
            ac.__name__ = ["Button_Text_Restore_Purchase"];
            ac.__super__ = n;
            ac.prototype = p(n.prototype, {
                __class__: ac
            });
            var x = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(31).__initObject(a, this)
            };
            g.Button_Text_Unlock_Levels = x;
            x.__name__ = ["Button_Text_Unlock_Levels"];
            x.__super__ = n;
            x.prototype = p(n.prototype, {
                __class__: x
            });
            var Fc = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(119).__initObject(a, this)
            };
            g.Button_Text_Watch_Ad_To_Unlock = Fc;
            Fc.__name__ = ["Button_Text_Watch_Ad_To_Unlock"];
            Fc.__super__ = n;
            Fc.prototype = p(n.prototype, {
                __class__: Fc
            });
            var Ka = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(33).__initObject(a, this)
            };
            g.Button_Text_iOS = Ka;
            Ka.__name__ = ["Button_Text_iOS"];
            Ka.__super__ = n;
            Ka.prototype = p(n.prototype, {
                __class__: Ka
            });
            var z = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(330).__initObject(a, this)
            };
            g.Close_Button = z;
            z.__name__ = ["Close_Button"];
            z.__super__ = n;
            z.prototype = p(n.prototype, {
                __class__: z
            });
            var le = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(316).__initObject(a, this)
            };
            g.Close_Downed_Button = le;
            le.__name__ = ["Close_Downed_Button"];
            le.__super__ = n;
            le.prototype = p(n.prototype, {
                __class__: le
            });
            var yc = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(13).__initObject(a, this)
            };
            g.Continue_Button = yc;
            yc.__name__ = ["Continue_Button"];
            yc.__super__ = n;
            yc.prototype = p(n.prototype, {
                __class__: yc
            });
            var Gc = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(11).__initObject(a, this)
            };
            g.Continue_Button_Pressed = Gc;
            Gc.__name__ = ["Continue_Button_Pressed"];
            Gc.__super__ = n;
            Gc.prototype = p(n.prototype, {
                __class__: Gc
            });
            var bd = function() {};
            g.DateTools = bd;
            bd.__name__ = ["DateTools"];
            bd.delta = function(a, b) {
                a = a.getTime() + b;
                return new Date(a)
            };
            var Ga = function(a, b) {
                this.r = new RegExp(a, b.split("u").join(""))
            };
            g.EReg = Ga;
            Ga.__name__ = ["EReg"];
            Ga.prototype = {
                r: null,
                match: function(a) {
                    this.r.global && (this.r.lastIndex = 0);
                    this.r.m = this.r.exec(a);
                    this.r.s = a;
                    return null != this.r.m
                },
                matched: function(a) {
                    if (null != this.r.m && 0 <= a && a < this.r.m.length) return this.r.m[a];
                    throw new Z("EReg::matched");
                },
                matchedRight: function() {
                    if (null == this.r.m) throw new Z("No string matched");
                    var a = this.r.m.index + this.r.m[0].length;
                    return la.substr(this.r.s, a, this.r.s.length - a)
                },
                matchedPos: function() {
                    if (null == this.r.m) throw new Z("No string matched");
                    return {
                        pos: this.r.m.index,
                        len: this.r.m[0].length
                    }
                },
                matchSub: function(a, b, c) {
                    null == c && (c = -1);
                    if (this.r.global) {
                        this.r.lastIndex = b;
                        var d = this.r;
                        b = 0 > c ? a : la.substr(a, 0, b + c);
                        this.r.m = d.exec(b);
                        if (b = null != this.r.m) this.r.s = a;
                        return b
                    }
                    if (d = this.match(0 > c ? la.substr(a, b, null) : la.substr(a, b, c))) this.r.s = a, this.r.m.index += b;
                    return d
                },
                split: function(a) {
                    return a.replace(this.r, "#__delim__#").split("#__delim__#")
                },
                replace: function(a, b) {
                    return a.replace(this.r, b)
                },
                __class__: Ga
            };
            var la = function() {};
            g.HxOverrides = la;
            la.__name__ = ["HxOverrides"];
            la.dateStr = function(a) {
                var b =
                    a.getMonth() + 1,
                    c = a.getDate(),
                    d = a.getHours(),
                    e = a.getMinutes(),
                    f = a.getSeconds();
                return a.getFullYear() + "-" + (10 > b ? "0" + b : "" + b) + "-" + (10 > c ? "0" + c : "" + c) + " " + (10 > d ? "0" + d : "" + d) + ":" + (10 > e ? "0" + e : "" + e) + ":" + (10 > f ? "0" + f : "" + f)
            };
            la.strDate = function(a) {
                switch (a.length) {
                    case 8:
                        a = a.split(":");
                        var b = new Date;
                        b.setTime(0);
                        b.setUTCHours(a[0]);
                        b.setUTCMinutes(a[1]);
                        b.setUTCSeconds(a[2]);
                        return b;
                    case 10:
                        return a = a.split("-"), new Date(a[0], a[1] - 1, a[2], 0, 0, 0);
                    case 19:
                        return b = a.split(" "), a = b[0].split("-"), b = b[1].split(":"),
                            new Date(a[0], a[1] - 1, a[2], b[0], b[1], b[2]);
                    default:
                        throw new Z("Invalid date format : " + a);
                }
            };
            la.cca = function(a, b) {
                a = a.charCodeAt(b);
                return a != a ? Xo.get_undefined() : a
            };
            la.substr = function(a, b, c) {
                if (null == c) c = a.length;
                else if (0 > c)
                    if (0 == b) c = a.length + c;
                    else return "";
                return a.substr(b, c)
            };
            la.remove = function(a, b) {
                b = a.indexOf(b);
                if (-1 == b) return !1;
                a.splice(b, 1);
                return !0
            };
            la.iter = function(a) {
                return {
                    cur: 0,
                    arr: a,
                    hasNext: function() {
                        return this.cur < this.arr.length
                    },
                    next: function() {
                        return this.arr[this.cur++]
                    }
                }
            };
            var hg = function() {};
            g.Lambda = hg;
            hg.__name__ = ["Lambda"];
            hg.array = function(a) {
                var b = [];
                for (a = G(a)(); a.hasNext();) {
                    var c = a.next();
                    b.push(c)
                }
                return b
            };
            hg.map = function(a, b) {
                var c = new Qb;
                for (a = G(a)(); a.hasNext();) {
                    var d = a.next();
                    c.add(b(d))
                }
                return c
            };
            var ug = function() {};
            g.Level_Birds_All = ug;
            ug.__name__ = ["Level_Birds_All"];
            ug.__super__ = n;
            ug.prototype = p(n.prototype, {
                __class__: ug
            });
            var ej = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(555).__initObject(a, this)
            };
            g.Level_Birds_Chicken =
                ej;
            ej.__name__ = ["Level_Birds_Chicken"];
            ej.__super__ = n;
            ej.prototype = p(n.prototype, {
                __class__: ej
            });
            var $l = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(557).__initObject(a, this)
            };
            g.Level_Birds_Duck = $l;
            $l.__name__ = ["Level_Birds_Duck"];
            $l.__super__ = n;
            $l.prototype = p(n.prototype, {
                __class__: $l
            });
            var am = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(543).__initObject(a, this)
            };
            g.Level_Birds_Hawk = am;
            am.__name__ = ["Level_Birds_Hawk"];
            am.__super__ = n;
            am.prototype =
                p(n.prototype, {
                    __class__: am
                });
            var bm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(541).__initObject(a, this)
            };
            g.Level_Birds_Ostrich = bm;
            bm.__name__ = ["Level_Birds_Ostrich"];
            bm.__super__ = n;
            bm.prototype = p(n.prototype, {
                __class__: bm
            });
            var cm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(551).__initObject(a, this)
            };
            g.Level_Birds_Owl = cm;
            cm.__name__ = ["Level_Birds_Owl"];
            cm.__super__ = n;
            cm.prototype = p(n.prototype, {
                __class__: cm
            });
            var dm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(547).__initObject(a, this)
            };
            g.Level_Birds_Parrot = dm;
            dm.__name__ = ["Level_Birds_Parrot"];
            dm.__super__ = n;
            dm.prototype = p(n.prototype, {
                __class__: dm
            });
            var em = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(549).__initObject(a, this)
            };
            g.Level_Birds_Penguin = em;
            em.__name__ = ["Level_Birds_Penguin"];
            em.__super__ = n;
            em.prototype = p(n.prototype, {
                __class__: em
            });
            var fm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(545).__initObject(a,
                    this)
            };
            g.Level_Birds_Sparrow = fm;
            fm.__name__ = ["Level_Birds_Sparrow"];
            fm.__super__ = n;
            fm.prototype = p(n.prototype, {
                __class__: fm
            });
            var Gk = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(539).__initObject(a, this)
            };
            g.Level_Birds_Swallow = Gk;
            Gk.__name__ = ["Level_Birds_Swallow"];
            Gk.__super__ = n;
            Gk.prototype = p(n.prototype, {
                __class__: Gk
            });
            var gm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(553).__initObject(a, this)
            };
            g.Level_Birds_Turkey = gm;
            gm.__name__ = ["Level_Birds_Turkey"];
            gm.__super__ = n;
            gm.prototype = p(n.prototype, {
                __class__: gm
            });
            var Yo = function() {};
            g.Level_China_All = Yo;
            Yo.__name__ = ["Level_China_All"];
            Yo.__super__ = n;
            Yo.prototype = p(n.prototype, {
                __class__: Yo
            });
            var hm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(671).__initObject(a, this)
            };
            g.Level_China_Building = hm;
            hm.__name__ = ["Level_China_Building"];
            hm.__super__ = n;
            hm.prototype = p(n.prototype, {
                __class__: hm
            });
            var im = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(683).__initObject(a,
                    this)
            };
            g.Level_China_Dragon = im;
            im.__name__ = ["Level_China_Dragon"];
            im.__super__ = n;
            im.prototype = p(n.prototype, {
                __class__: im
            });
            var jm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(685).__initObject(a, this)
            };
            g.Level_China_Dress = jm;
            jm.__name__ = ["Level_China_Dress"];
            jm.__super__ = n;
            jm.prototype = p(n.prototype, {
                __class__: jm
            });
            var km = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(689).__initObject(a, this)
            };
            g.Level_China_Fan = km;
            km.__name__ = ["Level_China_Fan"];
            km.__super__ = n;
            km.prototype = p(n.prototype, {
                __class__: km
            });
            var lm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(687).__initObject(a, this)
            };
            g.Level_China_Gate = lm;
            lm.__name__ = ["Level_China_Gate"];
            lm.__super__ = n;
            lm.prototype = p(n.prototype, {
                __class__: lm
            });
            var mm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(677).__initObject(a, this)
            };
            g.Level_China_House = mm;
            mm.__name__ = ["Level_China_House"];
            mm.__super__ = n;
            mm.prototype = p(n.prototype, {
                __class__: mm
            });
            var Hk = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(675).__initObject(a, this)
            };
            g.Level_China_Man = Hk;
            Hk.__name__ = ["Level_China_Man"];
            Hk.__super__ = n;
            Hk.prototype = p(n.prototype, {
                __class__: Hk
            });
            var nm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(673).__initObject(a, this)
            };
            g.Level_China_Teapot = nm;
            nm.__name__ = ["Level_China_Teapot"];
            nm.__super__ = n;
            nm.prototype = p(n.prototype, {
                __class__: nm
            });
            var om = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(681).__initObject(a, this)
            };
            g.Level_China_Terracotta = om;
            om.__name__ = ["Level_China_Terracotta"];
            om.__super__ = n;
            om.prototype = p(n.prototype, {
                __class__: om
            });
            var pm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(679).__initObject(a, this)
            };
            g.Level_China_YinYang = pm;
            pm.__name__ = ["Level_China_YinYang"];
            pm.__super__ = n;
            pm.prototype = p(n.prototype, {
                __class__: pm
            });
            var Zo = function() {};
            g.Level_Europe_All = Zo;
            Zo.__name__ = ["Level_Europe_All"];
            Zo.__super__ = n;
            Zo.prototype = p(n.prototype, {
                __class__: Zo
            });
            var qm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(645).__initObject(a, this)
            };
            g.Level_Europe_Castle = qm;
            qm.__name__ = ["Level_Europe_Castle"];
            qm.__super__ = n;
            qm.prototype = p(n.prototype, {
                __class__: qm
            });
            var rm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(633).__initObject(a, this)
            };
            g.Level_Europe_Church = rm;
            rm.__name__ = ["Level_Europe_Church"];
            rm.__super__ = n;
            rm.prototype = p(n.prototype, {
                __class__: rm
            });
            var sm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(629).__initObject(a, this)
            };
            g.Level_Europe_Cross = sm;
            sm.__name__ = ["Level_Europe_Cross"];
            sm.__super__ = n;
            sm.prototype = p(n.prototype, {
                __class__: sm
            });
            var tm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(635).__initObject(a, this)
            };
            g.Level_Europe_Crown = tm;
            tm.__name__ = ["Level_Europe_Crown"];
            tm.__super__ = n;
            tm.prototype = p(n.prototype, {
                __class__: tm
            });
            var um = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(631).__initObject(a,
                    this)
            };
            g.Level_Europe_Cup = um;
            um.__name__ = ["Level_Europe_Cup"];
            um.__super__ = n;
            um.prototype = p(n.prototype, {
                __class__: um
            });
            var vm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(643).__initObject(a, this)
            };
            g.Level_Europe_Helmet = vm;
            vm.__name__ = ["Level_Europe_Helmet"];
            vm.__super__ = n;
            vm.prototype = p(n.prototype, {
                __class__: vm
            });
            var wm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(627).__initObject(a, this)
            };
            g.Level_Europe_Shield = wm;
            wm.__name__ = ["Level_Europe_Shield"];
            wm.__super__ = n;
            wm.prototype = p(n.prototype, {
                __class__: wm
            });
            var Ik = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(639).__initObject(a, this)
            };
            g.Level_Europe_Swords = Ik;
            Ik.__name__ = ["Level_Europe_Swords"];
            Ik.__super__ = n;
            Ik.prototype = p(n.prototype, {
                __class__: Ik
            });
            var xm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(641).__initObject(a, this)
            };
            g.Level_Europe_Vytis = xm;
            xm.__name__ = ["Level_Europe_Vytis"];
            xm.__super__ = n;
            xm.prototype = p(n.prototype, {
                __class__: xm
            });
            var ym = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(637).__initObject(a, this)
            };
            g.Level_Europe_Woman = ym;
            ym.__name__ = ["Level_Europe_Woman"];
            ym.__super__ = n;
            ym.prototype = p(n.prototype, {
                __class__: ym
            });
            var $o = function() {};
            g.Level_Fish_All = $o;
            $o.__name__ = ["Level_Fish_All"];
            $o.__super__ = n;
            $o.prototype = p(n.prototype, {
                __class__: $o
            });
            var zm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(597).__initObject(a, this)
            };
            g.Level_Fish_Anglerfish = zm;
            zm.__name__ = ["Level_Fish_Anglerfish"];
            zm.__super__ = n;
            zm.prototype = p(n.prototype, {
                __class__: zm
            });
            var Am = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(589).__initObject(a, this)
            };
            g.Level_Fish_Bass = Am;
            Am.__name__ = ["Level_Fish_Bass"];
            Am.__super__ = n;
            Am.prototype = p(n.prototype, {
                __class__: Am
            });
            var Bm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(583).__initObject(a, this)
            };
            g.Level_Fish_Blowfish = Bm;
            Bm.__name__ = ["Level_Fish_Blowfish"];
            Bm.__super__ = n;
            Bm.prototype = p(n.prototype, {
                __class__: Bm
            });
            var Cm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(591).__initObject(a, this)
            };
            g.Level_Fish_Clownfish = Cm;
            Cm.__name__ = ["Level_Fish_Clownfish"];
            Cm.__super__ = n;
            Cm.prototype = p(n.prototype, {
                __class__: Cm
            });
            var Dm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(585).__initObject(a, this)
            };
            g.Level_Fish_Dogfish = Dm;
            Dm.__name__ = ["Level_Fish_Dogfish"];
            Dm.__super__ = n;
            Dm.prototype = p(n.prototype, {
                __class__: Dm
            });
            var Em = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(595).__initObject(a, this)
            };
            g.Level_Fish_Dorado = Em;
            Em.__name__ = ["Level_Fish_Dorado"];
            Em.__super__ = n;
            Em.prototype = p(n.prototype, {
                __class__: Em
            });
            var Fm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(601).__initObject(a, this)
            };
            g.Level_Fish_Goldfish = Fm;
            Fm.__name__ = ["Level_Fish_Goldfish"];
            Fm.__super__ = n;
            Fm.prototype = p(n.prototype, {
                __class__: Fm
            });
            var Gm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(599).__initObject(a,
                    this)
            };
            g.Level_Fish_Mantaray = Gm;
            Gm.__name__ = ["Level_Fish_Mantaray"];
            Gm.__super__ = n;
            Gm.prototype = p(n.prototype, {
                __class__: Gm
            });
            var Jk = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(593).__initObject(a, this)
            };
            g.Level_Fish_Shark = Jk;
            Jk.__name__ = ["Level_Fish_Shark"];
            Jk.__super__ = n;
            Jk.prototype = p(n.prototype, {
                __class__: Jk
            });
            var Hm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(587).__initObject(a, this)
            };
            g.Level_Fish_YellowTang = Hm;
            Hm.__name__ = ["Level_Fish_YellowTang"];
            Hm.__super__ = n;
            Hm.prototype = p(n.prototype, {
                __class__: Hm
            });
            var ap = function() {};
            g.Level_India_All = ap;
            ap.__name__ = ["Level_India_All"];
            ap.__super__ = n;
            ap.prototype = p(n.prototype, {
                __class__: ap
            });
            var Im = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(657).__initObject(a, this)
            };
            g.Level_India_Buddha = Im;
            Im.__name__ = ["Level_India_Buddha"];
            Im.__super__ = n;
            Im.prototype = p(n.prototype, {
                __class__: Im
            });
            var Jm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(655).__initObject(a,
                    this)
            };
            g.Level_India_Cobra = Jm;
            Jm.__name__ = ["Level_India_Cobra"];
            Jm.__super__ = n;
            Jm.prototype = p(n.prototype, {
                __class__: Jm
            });
            var Km = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(651).__initObject(a, this)
            };
            g.Level_India_Elephant = Km;
            Km.__name__ = ["Level_India_Elephant"];
            Km.__super__ = n;
            Km.prototype = p(n.prototype, {
                __class__: Km
            });
            var Lm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(661).__initObject(a, this)
            };
            g.Level_India_ElephantHead = Lm;
            Lm.__name__ = ["Level_India_ElephantHead"];
            Lm.__super__ = n;
            Lm.prototype = p(n.prototype, {
                __class__: Lm
            });
            var Kk = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(667).__initObject(a, this)
            };
            g.Level_India_Lotus = Kk;
            Kk.__name__ = ["Level_India_Lotus"];
            Kk.__super__ = n;
            Kk.prototype = p(n.prototype, {
                __class__: Kk
            });
            var Mm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(665).__initObject(a, this)
            };
            g.Level_India_Man = Mm;
            Mm.__name__ = ["Level_India_Man"];
            Mm.__super__ = n;
            Mm.prototype = p(n.prototype, {
                __class__: Mm
            });
            var Nm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(649).__initObject(a, this)
            };
            g.Level_India_Meditator = Nm;
            Nm.__name__ = ["Level_India_Meditator"];
            Nm.__super__ = n;
            Nm.prototype = p(n.prototype, {
                __class__: Nm
            });
            var Om = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(663).__initObject(a, this)
            };
            g.Level_India_Shiva = Om;
            Om.__name__ = ["Level_India_Shiva"];
            Om.__super__ = n;
            Om.prototype = p(n.prototype, {
                __class__: Om
            });
            var Pm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(653).__initObject(a, this)
            };
            g.Level_India_Tajmahal = Pm;
            Pm.__name__ = ["Level_India_Tajmahal"];
            Pm.__super__ = n;
            Pm.prototype = p(n.prototype, {
                __class__: Pm
            });
            var Qm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(659).__initObject(a, this)
            };
            g.Level_India_Woman = Qm;
            Qm.__name__ = ["Level_India_Woman"];
            Qm.__super__ = n;
            Qm.prototype = p(n.prototype, {
                __class__: Qm
            });
            var bp = function() {};
            g.Level_Mammals_All = bp;
            bp.__name__ = ["Level_Mammals_All"];
            bp.__super__ =
                n;
            bp.prototype = p(n.prototype, {
                __class__: bp
            });
            var Lk = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(535).__initObject(a, this)
            };
            g.Level_Mammals_Bear = Lk;
            Lk.__name__ = ["Level_Mammals_Bear"];
            Lk.__super__ = n;
            Lk.prototype = p(n.prototype, {
                __class__: Lk
            });
            var Rm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(531).__initObject(a, this)
            };
            g.Level_Mammals_Camel = Rm;
            Rm.__name__ = ["Level_Mammals_Camel"];
            Rm.__super__ = n;
            Rm.prototype = p(n.prototype, {
                __class__: Rm
            });
            var Sm =
                function() {
                    n.call(this);
                    var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                    a.symbols.get(519).__initObject(a, this)
                };
            g.Level_Mammals_Deer = Sm;
            Sm.__name__ = ["Level_Mammals_Deer"];
            Sm.__super__ = n;
            Sm.prototype = p(n.prototype, {
                __class__: Sm
            });
            var Tm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(523).__initObject(a, this)
            };
            g.Level_Mammals_Leopard = Tm;
            Tm.__name__ = ["Level_Mammals_Leopard"];
            Tm.__super__ = n;
            Tm.prototype = p(n.prototype, {
                __class__: Tm
            });
            var Um = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(521).__initObject(a, this)
            };
            g.Level_Mammals_Lion = Um;
            Um.__name__ = ["Level_Mammals_Lion"];
            Um.__super__ = n;
            Um.prototype = p(n.prototype, {
                __class__: Um
            });
            var Vm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(517).__initObject(a, this)
            };
            g.Level_Mammals_Mammoth = Vm;
            Vm.__name__ = ["Level_Mammals_Mammoth"];
            Vm.__super__ = n;
            Vm.prototype = p(n.prototype, {
                __class__: Vm
            });
            var Wm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(529).__initObject(a, this)
            };
            g.Level_Mammals_Monkey =
                Wm;
            Wm.__name__ = ["Level_Mammals_Monkey"];
            Wm.__super__ = n;
            Wm.prototype = p(n.prototype, {
                __class__: Wm
            });
            var Xm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(533).__initObject(a, this)
            };
            g.Level_Mammals_Rabbit = Xm;
            Xm.__name__ = ["Level_Mammals_Rabbit"];
            Xm.__super__ = n;
            Xm.prototype = p(n.prototype, {
                __class__: Xm
            });
            var Ym = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(527).__initObject(a, this)
            };
            g.Level_Mammals_Rat = Ym;
            Ym.__name__ = ["Level_Mammals_Rat"];
            Ym.__super__ =
                n;
            Ym.prototype = p(n.prototype, {
                __class__: Ym
            });
            var Zm = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(525).__initObject(a, this)
            };
            g.Level_Mammals_Rhino = Zm;
            Zm.__name__ = ["Level_Mammals_Rhino"];
            Zm.__super__ = n;
            Zm.prototype = p(n.prototype, {
                __class__: Zm
            });
            var cp = function() {};
            g.Level_Pets_All = cp;
            cp.__name__ = ["Level_Pets_All"];
            cp.__super__ = n;
            cp.prototype = p(n.prototype, {
                __class__: cp
            });
            var $m = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(507).__initObject(a,
                    this)
            };
            g.Level_Pets_CatFace = $m;
            $m.__name__ = ["Level_Pets_CatFace"];
            $m.__super__ = n;
            $m.prototype = p(n.prototype, {
                __class__: $m
            });
            var an = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(497).__initObject(a, this)
            };
            g.Level_Pets_CatSide = an;
            an.__name__ = ["Level_Pets_CatSide"];
            an.__super__ = n;
            an.prototype = p(n.prototype, {
                __class__: an
            });
            var Mk = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(495).__initObject(a, this)
            };
            g.Level_Pets_CatSit = Mk;
            Mk.__name__ = ["Level_Pets_CatSit"];
            Mk.__super__ = n;
            Mk.prototype = p(n.prototype, {
                __class__: Mk
            });
            var bn = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(505).__initObject(a, this)
            };
            g.Level_Pets_CatWalking = bn;
            bn.__name__ = ["Level_Pets_CatWalking"];
            bn.__super__ = n;
            bn.prototype = p(n.prototype, {
                __class__: bn
            });
            var cn = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(511).__initObject(a, this)
            };
            g.Level_Pets_Corgi = cn;
            cn.__name__ = ["Level_Pets_Corgi"];
            cn.__super__ = n;
            cn.prototype = p(n.prototype, {
                __class__: cn
            });
            var dn = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(513).__initObject(a, this)
            };
            g.Level_Pets_Doge = dn;
            dn.__name__ = ["Level_Pets_Doge"];
            dn.__super__ = n;
            dn.prototype = p(n.prototype, {
                __class__: dn
            });
            var en = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(509).__initObject(a, this)
            };
            g.Level_Pets_Husky = en;
            en.__name__ = ["Level_Pets_Husky"];
            en.__super__ = n;
            en.prototype = p(n.prototype, {
                __class__: en
            });
            var fn = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(499).__initObject(a, this)
            };
            g.Level_Pets_Kitten = fn;
            fn.__name__ = ["Level_Pets_Kitten"];
            fn.__super__ = n;
            fn.prototype = p(n.prototype, {
                __class__: fn
            });
            var gn = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(501).__initObject(a, this)
            };
            g.Level_Pets_Retriever = gn;
            gn.__name__ = ["Level_Pets_Retriever"];
            gn.__super__ = n;
            gn.prototype = p(n.prototype, {
                __class__: gn
            });
            var hn = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(503).__initObject(a, this)
            };
            g.Level_Pets_Shepherd =
                hn;
            hn.__name__ = ["Level_Pets_Shepherd"];
            hn.__super__ = n;
            hn.prototype = p(n.prototype, {
                __class__: hn
            });
            var dp = function() {};
            g.Level_Reptiles_All = dp;
            dp.__name__ = ["Level_Reptiles_All"];
            dp.__super__ = n;
            dp.prototype = p(n.prototype, {
                __class__: dp
            });
            var jn = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(569).__initObject(a, this)
            };
            g.Level_Reptiles_Apatosaurus = jn;
            jn.__name__ = ["Level_Reptiles_Apatosaurus"];
            jn.__super__ = n;
            jn.prototype = p(n.prototype, {
                __class__: jn
            });
            var Nk = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(579).__initObject(a, this)
            };
            g.Level_Reptiles_Chameleon = Nk;
            Nk.__name__ = ["Level_Reptiles_Chameleon"];
            Nk.__super__ = n;
            Nk.prototype = p(n.prototype, {
                __class__: Nk
            });
            var kn = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(573).__initObject(a, this)
            };
            g.Level_Reptiles_Crocodile = kn;
            kn.__name__ = ["Level_Reptiles_Crocodile"];
            kn.__super__ = n;
            kn.prototype = p(n.prototype, {
                __class__: kn
            });
            var ln = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(565).__initObject(a, this)
            };
            g.Level_Reptiles_Frog = ln;
            ln.__name__ = ["Level_Reptiles_Frog"];
            ln.__super__ = n;
            ln.prototype = p(n.prototype, {
                __class__: ln
            });
            var mn = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(575).__initObject(a, this)
            };
            g.Level_Reptiles_Lizard = mn;
            mn.__name__ = ["Level_Reptiles_Lizard"];
            mn.__super__ = n;
            mn.prototype = p(n.prototype, {
                __class__: mn
            });
            var Ok = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(563).__initObject(a, this)
            };
            g.Level_Reptiles_Stegosaurus =
                Ok;
            Ok.__name__ = ["Level_Reptiles_Stegosaurus"];
            Ok.__super__ = n;
            Ok.prototype = p(n.prototype, {
                __class__: Ok
            });
            var nn = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(567).__initObject(a, this)
            };
            g.Level_Reptiles_TRex = nn;
            nn.__name__ = ["Level_Reptiles_TRex"];
            nn.__super__ = n;
            nn.prototype = p(n.prototype, {
                __class__: nn
            });
            var on = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(561).__initObject(a, this)
            };
            g.Level_Reptiles_Tetrapod = on;
            on.__name__ = ["Level_Reptiles_Tetrapod"];
            on.__super__ = n;
            on.prototype = p(n.prototype, {
                __class__: on
            });
            var pn = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(571).__initObject(a, this)
            };
            g.Level_Reptiles_Triceratops = pn;
            pn.__name__ = ["Level_Reptiles_Triceratops"];
            pn.__super__ = n;
            pn.prototype = p(n.prototype, {
                __class__: pn
            });
            var qn = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(577).__initObject(a, this)
            };
            g.Level_Reptiles_Turtle = qn;
            qn.__name__ = ["Level_Reptiles_Turtle"];
            qn.__super__ = n;
            qn.prototype = p(n.prototype, {
                __class__: qn
            });
            var ep = function() {};
            g.Level_Rome_All = ep;
            ep.__name__ = ["Level_Rome_All"];
            ep.__super__ = n;
            ep.prototype = p(n.prototype, {
                __class__: ep
            });
            var rn = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(703).__initObject(a, this)
            };
            g.Level_Rome_Boat = rn;
            rn.__name__ = ["Level_Rome_Boat"];
            rn.__super__ = n;
            rn.prototype = p(n.prototype, {
                __class__: rn
            });
            var Pk = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(705).__initObject(a, this)
            };
            g.Level_Rome_Building = Pk;
            Pk.__name__ = ["Level_Rome_Building"];
            Pk.__super__ = n;
            Pk.prototype = p(n.prototype, {
                __class__: Pk
            });
            var sn = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(711).__initObject(a, this)
            };
            g.Level_Rome_Coin = sn;
            sn.__name__ = ["Level_Rome_Coin"];
            sn.__super__ = n;
            sn.prototype = p(n.prototype, {
                __class__: sn
            });
            var tn = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(699).__initObject(a, this)
            };
            g.Level_Rome_Column = tn;
            tn.__name__ = ["Level_Rome_Column"];
            tn.__super__ = n;
            tn.prototype = p(n.prototype, {
                __class__: tn
            });
            var Qk = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(709).__initObject(a, this)
            };
            g.Level_Rome_Helmet = Qk;
            Qk.__name__ = ["Level_Rome_Helmet"];
            Qk.__super__ = n;
            Qk.prototype = p(n.prototype, {
                __class__: Qk
            });
            var fp = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(130).__initObject(a, this)
            };
            g.Level_Rome_Helmet_Tutorial_Part = fp;
            fp.__name__ = ["Level_Rome_Helmet_Tutorial_Part"];
            fp.__super__ = n;
            fp.prototype = p(n.prototype, {
                __class__: fp
            });
            var un = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(693).__initObject(a, this)
            };
            g.Level_Rome_Justice = un;
            un.__name__ = ["Level_Rome_Justice"];
            un.__super__ = n;
            un.prototype = p(n.prototype, {
                __class__: un
            });
            var vn = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(701).__initObject(a, this)
            };
            g.Level_Rome_Lion = vn;
            vn.__name__ = ["Level_Rome_Lion"];
            vn.__super__ = n;
            vn.prototype = p(n.prototype, {
                __class__: vn
            });
            var wn = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(695).__initObject(a,
                    this)
            };
            g.Level_Rome_Shield = wn;
            wn.__name__ = ["Level_Rome_Shield"];
            wn.__super__ = n;
            wn.prototype = p(n.prototype, {
                __class__: wn
            });
            var xn = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(697).__initObject(a, this)
            };
            g.Level_Rome_Statue = xn;
            xn.__name__ = ["Level_Rome_Statue"];
            xn.__super__ = n;
            xn.prototype = p(n.prototype, {
                __class__: xn
            });
            var yn = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(707).__initObject(a, this)
            };
            g.Level_Rome_Vase = yn;
            yn.__name__ = ["Level_Rome_Vase"];
            yn.__super__ = n;
            yn.prototype = p(n.prototype, {
                __class__: yn
            });
            var gp = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(123).__initObject(a, this)
            };
            g.Level_Tools_Screw = gp;
            gp.__name__ = ["Level_Tools_Screw"];
            gp.__super__ = n;
            gp.prototype = p(n.prototype, {
                __class__: gp
            });
            var hp = function() {};
            g.Level_UnitedStates_All = hp;
            hp.__name__ = ["Level_UnitedStates_All"];
            hp.__super__ = n;
            hp.prototype = p(n.prototype, {
                __class__: hp
            });
            var zn = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(613).__initObject(a,
                    this)
            };
            g.Level_UnitedStates_Basketball = zn;
            zn.__name__ = ["Level_UnitedStates_Basketball"];
            zn.__super__ = n;
            zn.prototype = p(n.prototype, {
                __class__: zn
            });
            var An = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(621).__initObject(a, this)
            };
            g.Level_UnitedStates_Burger = An;
            An.__name__ = ["Level_UnitedStates_Burger"];
            An.__super__ = n;
            An.prototype = p(n.prototype, {
                __class__: An
            });
            var Bn = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(623).__initObject(a, this)
            };
            g.Level_UnitedStates_Capitol =
                Bn;
            Bn.__name__ = ["Level_UnitedStates_Capitol"];
            Bn.__super__ = n;
            Bn.prototype = p(n.prototype, {
                __class__: Bn
            });
            var Cn = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(611).__initObject(a, this)
            };
            g.Level_UnitedStates_Dollar = Cn;
            Cn.__name__ = ["Level_UnitedStates_Dollar"];
            Cn.__super__ = n;
            Cn.prototype = p(n.prototype, {
                __class__: Cn
            });
            var Dn = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(607).__initObject(a, this)
            };
            g.Level_UnitedStates_Eagle = Dn;
            Dn.__name__ = ["Level_UnitedStates_Eagle"];
            Dn.__super__ = n;
            Dn.prototype = p(n.prototype, {
                __class__: Dn
            });
            var En = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(619).__initObject(a, this)
            };
            g.Level_UnitedStates_Football = En;
            En.__name__ = ["Level_UnitedStates_Football"];
            En.__super__ = n;
            En.prototype = p(n.prototype, {
                __class__: En
            });
            var Rk = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(615).__initObject(a, this)
            };
            g.Level_UnitedStates_Hat = Rk;
            Rk.__name__ = ["Level_UnitedStates_Hat"];
            Rk.__super__ = n;
            Rk.prototype =
                p(n.prototype, {
                    __class__: Rk
                });
            var Fn = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(609).__initObject(a, this)
            };
            g.Level_UnitedStates_Peace = Fn;
            Fn.__name__ = ["Level_UnitedStates_Peace"];
            Fn.__super__ = n;
            Fn.prototype = p(n.prototype, {
                __class__: Fn
            });
            var Gn = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(617).__initObject(a, this)
            };
            g.Level_UnitedStates_Statue = Gn;
            Gn.__name__ = ["Level_UnitedStates_Statue"];
            Gn.__super__ = n;
            Gn.prototype = p(n.prototype, {
                __class__: Gn
            });
            var Hn = function() {
                n.call(this);
                var a = U.get("Bz6T7leQa5Xn57tIqcMz");
                a.symbols.get(605).__initObject(a, this)
            };
            g.Level_UnitedStates_Tent = Hn;
            Hn.__name__ = ["Level_UnitedStates_Tent"];
            Hn.__super__ = n;
            Hn.prototype = p(n.prototype, {
                __class__: Hn
            });
            var To = function(a, b) {
                this.item = a;
                this.next = b
            };
            g["_List.ListNode"] = To;
            To.__name__ = ["_List", "ListNode"];
            To.prototype = {
                item: null,
                next: null,
                __class__: To
            };
            var ks = function(a) {
                this.head = a
            };
            g["_List.ListIterator"] = ks;
            ks.__name__ = ["_List", "ListIterator"];
            ks.prototype = {
                head: null,
                hasNext: function() {
                    return null != this.head
                },
                next: function() {
                    var a = this.head.item;
                    this.head = this.head.next;
                    return a
                },
                __class__: ks
            };
            var He = function() {};
            g.ManifestResources = He;
            He.__name__ = ["ManifestResources"];
            He.init = function(a) {
                He.preloadLibraries = [];
                He.preloadLibraryNames = [];
                He.rootPath = null;
                null != a && T.hasField(a, "rootPath") && (He.rootPath = T.field(a, "rootPath"));
                null == He.rootPath && (He.rootPath = "./");
                ud.registerFont(ip);
                Da.bundlePaths.set("graphics", He.rootPath + "lib/graphics.zip");
                Da.bundlePaths.set("levels",
                    He.rootPath + "lib/levels.zip");
                a = gd.parse('{"name":null,"assets":"aoy4:sizei3545y4:typey5:SOUNDy2:idy34:assets%2Fsounds_html5%2Fclick7.m4ay9:pathGroupaR4y34:assets%2Fsounds_html5%2Fclick7.mp3y34:assets%2Fsounds_html5%2Fclick7.ogghy7:preloadtgoR0i4432R1y5:MUSICR3R6R5aR4R6R7hgoR0i4718R1R2R3R7R5aR4R6R7hgoR0i7300R1R2R3y41:assets%2Fsounds_html5%2Ffinish_snap12.m4aR5aR10y41:assets%2Fsounds_html5%2Ffinish_snap12.mp3y41:assets%2Fsounds_html5%2Ffinish_snap12.ogghR8tgoR0i9448R1R9R3R11R5aR10R11R12hgoR0i6486R1R2R3R12R5aR10R11R12hgoR0i14451R1R2R3y53:assets%2Fsounds_html5%2Fjust_completed_pack_bang2.m4aR5aR13y53:assets%2Fsounds_html5%2Fjust_completed_pack_bang2.mp3y53:assets%2Fsounds_html5%2Fjust_completed_pack_bang2.ogghR8tgoR0i20106R1R9R3R14R5aR13R14R15hgoR0i10329R1R2R3R15R5aR13R14R15hgoR0i9346R1R2R3y58:assets%2Fsounds_html5%2Fjust_completed_pack_transition.m4aR5aR16y58:assets%2Fsounds_html5%2Fjust_completed_pack_transition.mp3y58:assets%2Fsounds_html5%2Fjust_completed_pack_transition.ogghR8tgoR0i12582R1R9R3R17R5aR16R17R18hgoR0i7383R1R2R3R18R5aR16R17R18hgoR0i17459R1R2R3y41:assets%2Fsounds_html5%2Flevel_finish4.m4aR5aR19y41:assets%2Fsounds_html5%2Flevel_finish4.mp3y41:assets%2Fsounds_html5%2Flevel_finish4.ogghR8tgoR0i24494R1R9R3R20R5aR19R20R21hgoR0i11825R1R2R3R21R5aR19R20R21hgoR0i3921R1R2R3y42:assets%2Fsounds_html5%2Flevel_pack_pop.m4aR5aR22y42:assets%2Fsounds_html5%2Flevel_pack_pop.mp3y42:assets%2Fsounds_html5%2Flevel_pack_pop.ogghR8tgoR0i4432R1R9R3R23R5aR22R23R24hgoR0i4544R1R2R3R24R5aR22R23R24hgoR0i17513R1R2R3y46:assets%2Fsounds_html5%2Fmenu_transition_in.m4aR5aR25y46:assets%2Fsounds_html5%2Fmenu_transition_in.mp3y46:assets%2Fsounds_html5%2Fmenu_transition_in.ogghR8tgoR0i24813R1R9R3R26R5aR25R26R27hgoR0i11938R1R2R3R27R5aR25R26R27hgoR0i13365R1R2R3y47:assets%2Fsounds_html5%2Fmenu_transition_out.m4aR5aR28y47:assets%2Fsounds_html5%2Fmenu_transition_out.mp3y47:assets%2Fsounds_html5%2Fmenu_transition_out.ogghR8tgoR0i19053R1R9R3R29R5aR28R29R30hgoR0i9644R1R2R3R30R5aR28R29R30hgoR0i4672R1R2R3y43:assets%2Fsounds_html5%2Fpart_drag_click.m4aR5aR31y43:assets%2Fsounds_html5%2Fpart_drag_click.mp3y43:assets%2Fsounds_html5%2Fpart_drag_click.ogghR8tgoR0i5686R1R9R3R32R5aR31R32R33hgoR0i5297R1R2R3R33R5aR31R32R33hgoR0i4672R1R2R3y39:assets%2Fsounds_html5%2Fpart_rotate.m4aR5aR34y39:assets%2Fsounds_html5%2Fpart_rotate.mp3y39:assets%2Fsounds_html5%2Fpart_rotate.ogghR8tgoR0i5686R1R9R3R35R5aR34R35R36hgoR0i5286R1R2R3R36R5aR34R35R36hgoR0i4672R1R2R3y37:assets%2Fsounds_html5%2Fpart_snap.m4aR5aR37y37:assets%2Fsounds_html5%2Fpart_snap.mp3y37:assets%2Fsounds_html5%2Fpart_snap.ogghR8tgoR0i5686R1R9R3R38R5aR37R38R39hgoR0i5302R1R2R3R39R5aR37R38R39hgoR0i3545R1R2R3y39:assets%2Fsounds_html5%2Fpart_unsnap.m4aR5aR40y39:assets%2Fsounds_html5%2Fpart_unsnap.mp3y39:assets%2Fsounds_html5%2Fpart_unsnap.ogghR8tgoR0i4432R1R9R3R41R5aR40R41R42hgoR0i4905R1R2R3R42R5aR40R41R42hgoR0i18210R1R2R3y37:assets%2Fsounds_html5%2Fstar_bang.m4aR5aR43y37:assets%2Fsounds_html5%2Fstar_bang.mp3y37:assets%2Fsounds_html5%2Fstar_bang.ogghR8tgoR0i25748R1R9R3R44R5aR43R44R45hgoR0i12095R1R2R3R45R5aR43R44R45hgoR0i3921R1R2R3y47:assets%2Fsounds_html5%2Ftransition_in_part3.m4aR5aR46y47:assets%2Fsounds_html5%2Ftransition_in_part3.mp3y47:assets%2Fsounds_html5%2Ftransition_in_part3.ogghR8tgoR0i5059R1R9R3R47R5aR46R47R48hgoR0i4852R1R2R3R48R5aR46R47R48hgoR0i1295574R1R9R3y41:assets%2Fmusic_html5%2Fmusic_gameplay.m4aR5aR49y41:assets%2Fmusic_html5%2Fmusic_gameplay.mp3y41:assets%2Fmusic_html5%2Fmusic_gameplay.ogghgoR0i2280813R1R9R3R50R5aR49R50R51hgoR0i1418423R1R9R3R51R5aR49R50R51hgoR0i201450R1R2R3y37:assets%2Fmusic_html5%2Fmusic_menu.m4aR5aR52y37:assets%2Fmusic_html5%2Fmusic_menu.mp3y37:assets%2Fmusic_html5%2Fmusic_menu.ogghgoR0i331629R1R9R3R53R5aR52R53R54hgoR0i215647R1R2R3R54R5aR52R53R54hgoR0i172456R1y4:FONTy9:classNamey45:__ASSET__assets_fonts_poetsen_one_regular_ttfR3y40:assets%2Ffonts%2Fpoetsen_one_regular.ttfR8tgoy4:pathy42:assets%2Fspritesheets_html5%2Fbuttons.jsonR0i1574R1y4:TEXTR3R60R8tgoR59y40:assets%2Fspritesheets_html5%2Fcache.jsonR0i11353R1R61R3R62R8tgoR59y43:assets%2Fspritesheets_html5%2Fgraphics.jsonR0i25195R1R61R3R63R8tgoR59y42:assets%2Fspritesheets_html5%2Fgraphics.pngR0i367953R1y5:IMAGER3R64R8tgoR59y46:assets%2Fimages_html5%2Fmain_texture_paper.pngR0i35005R1R65R3R66R8tgoR59y49:assets%2Fimages_html5%2Fmain_texture_paper_2x.pngR0i111184R1R65R3R67R8tgoR59y38:assets%2Fimages_html5%2Fshine_line.pngR0i962R1R65R3R68R8tgoR59y43:assets%2Fimages_html5%2Fshine_rectangle.pngR0i515R1R65R3R69R8tgoR59y36:assets%2Fsaves%2Flevel_states_base64R0i45116R1R61R3R70R8tgoR59y44:assets%2Fsaves%2Fhistory_game_library_base64R0i125280R1R61R3R71R8tgoR59y42:assets%2Fsaves%2Fhistory_game_stage_base64R0i3244R1R61R3R72R8tgoR59y44:assets%2Fsaves%2Fanimals_game_library_base64R0i145016R1R61R3R73R8tgoR59y42:assets%2Fsaves%2Fanimals_game_stage_base64R0i3108R1R61R3R74R8tgh","rootPath":null,"version":2,"libraryArgs":[],"libraryType":null}',
                    He.rootPath);
                a = Oc.fromManifest(a);
                Da.registerLibrary("default", a);
                a = Da.getLibrary("graphics");
                null != a ? He.preloadLibraries.push(a) : He.preloadLibraryNames.push("graphics");
                a = Da.getLibrary("levels");
                null != a ? He.preloadLibraries.push(a) : He.preloadLibraryNames.push("levels");
                a = Da.getLibrary("default");
                null != a ? He.preloadLibraries.push(a) : He.preloadLibraryNames.push("default")
            };
            var zc = function(a) {
                null != a && (this.name = a);
                this.__init || (void 0 == this.ascender && (this.ascender = 0), void 0 == this.descender && (this.descender =
                    0), void 0 == this.height && (this.height = 0), void 0 == this.numGlyphs && (this.numGlyphs = 0), void 0 == this.underlinePosition && (this.underlinePosition = 0), void 0 == this.underlineThickness && (this.underlineThickness = 0), void 0 == this.unitsPerEM && (this.unitsPerEM = 0), null != this.__fontID ? Da.isLocal(this.__fontID) && this.__fromBytes(Da.getBytes(this.__fontID)) : null != this.__fontPath && this.__fromFile(this.__fontPath))
            };
            g["lime.text.Font"] = zc;
            zc.__name__ = ["lime", "text", "Font"];
            zc.fromFile = function(a) {
                if (null == a) return null;
                var b = new zc;
                b.__fromFile(a);
                return b
            };
            zc.loadFromName = function(a) {
                return (new zc).__loadFromName(a)
            };
            zc.__measureFontNode = function(a) {
                var b = La.get_document().createElement("span");
                b.setAttribute("aria-hidden", "true");
                var c = La.get_document().createTextNode("BESbswy");
                b.appendChild(c);
                c = b.style;
                c.display = "block";
                c.position = "absolute";
                c.top = "-9999px";
                c.left = "-9999px";
                c.fontSize = "300px";
                c.width = "auto";
                c.height = "auto";
                c.lineHeight = "normal";
                c.margin = "0";
                c.padding = "0";
                c.fontVariant = "normal";
                c.whiteSpace =
                    "nowrap";
                c.fontFamily = a;
                La.get_document().body.appendChild(b);
                return b
            };
            zc.prototype = {
                ascender: null,
                descender: null,
                height: null,
                name: null,
                numGlyphs: null,
                src: null,
                underlinePosition: null,
                underlineThickness: null,
                unitsPerEM: null,
                __fontID: null,
                __fontPath: null,
                __init: null,
                __copyFrom: function(a) {
                    null != a && (this.ascender = a.ascender, this.descender = a.descender, this.height = a.height, this.name = a.name, this.numGlyphs = a.numGlyphs, this.src = a.src, this.underlinePosition = a.underlinePosition, this.underlineThickness = a.underlineThickness,
                        this.unitsPerEM = a.unitsPerEM, this.__fontID = a.__fontID, this.__fontPath = a.__fontPath, this.__init = !0)
                },
                __fromBytes: function(a) {
                    this.__fontPath = null
                },
                __fromFile: function(a) {
                    this.__fontPath = a
                },
                __loadFromName: function(a) {
                    var b = this,
                        c = new Le;
                    this.name = a;
                    var d = La.get_navigator().userAgent.toLowerCase(),
                        e = 0 <= d.indexOf(" safari/") && 0 > d.indexOf(" chrome/");
                    d = (new Ga("(iPhone|iPod|iPad).*AppleWebKit(?!.*Version)", "i")).match(d);
                    if (!e && !d && La.get_document().fonts && (Jf = La.get_document().fonts, q(Jf, Jf.load))) La.get_document().fonts.load("1em '" +
                        a + "'").then(function(a) {
                        c.complete(b)
                    }, function(d) {
                        Za.warn('Could not load web font "' + a + '"', {
                            fileName: "Font.hx",
                            lineNumber: 513,
                            className: "lime.text.Font",
                            methodName: "__loadFromName"
                        });
                        c.complete(b)
                    });
                    else {
                        var f = zc.__measureFontNode("'" + a + "', sans-serif"),
                            h = zc.__measureFontNode("'" + a + "', serif"),
                            k = f.offsetWidth,
                            m = h.offsetWidth,
                            r = -1,
                            I = 0,
                            g, Mb;
                        r = La.get_window().setInterval(function() {
                            I += 1;
                            g = f.offsetWidth == k ? h.offsetWidth != m : !0;
                            Mb = 3E3 <= 50 * I;
                            if (g || Mb) La.get_window().clearInterval(r), f.parentNode.removeChild(f),
                                h.parentNode.removeChild(h), h = f = null, Mb && Za.warn('Could not load web font "' + a + '"', {
                                    fileName: "Font.hx",
                                    lineNumber: 548,
                                    className: "lime.text.Font",
                                    methodName: "__loadFromName"
                                }), c.complete(b)
                        }, 50)
                    }
                    return c.future
                },
                __class__: zc
            };
            var jp = t.__ASSET__assets_fonts_poetsen_one_regular_ttf = function() {
                this.ascender = 1E3;
                this.descender = -200;
                this.height = 1200;
                this.numGlyphs = 459;
                this.underlinePosition = -100;
                this.underlineThickness = 50;
                this.unitsPerEM = 1E3;
                this.name = "Poetsen One";
                zc.call(this)
            };
            g.__ASSET__assets_fonts_poetsen_one_regular_ttf =
                jp;
            jp.__name__ = ["__ASSET__assets_fonts_poetsen_one_regular_ttf"];
            jp.__super__ = zc;
            jp.prototype = p(zc.prototype, {
                __class__: jp
            });
            var ud = function(a) {
                zc.call(this, a)
            };
            g["openfl.text.Font"] = ud;
            ud.__name__ = ["openfl", "text", "Font"];
            ud.enumerateFonts = function(a) {
                return ud.__registeredFonts
            };
            ud.fromFile = function(a) {
                var b = new ud;
                b.__fromFile(a);
                return b
            };
            ud.loadFromName = function(a) {
                return zc.loadFromName(a).then(function(a) {
                    var b = new ud;
                    b.__fromLimeFont(a);
                    return oc.withValue(b)
                })
            };
            ud.registerFont = function(a) {
                a =
                    null == Q.getClass(a) ? aa.__cast(Q.createInstance(a, []), ud) : aa.__cast(a, ud);
                null != a && (ud.__registeredFonts.push(a), ud.__fontByName.set(a.get_fontName(), a))
            };
            ud.__super__ = zc;
            ud.prototype = p(zc.prototype, {
                __fromLimeFont: function(a) {
                    this.__copyFrom(a)
                },
                get_fontName: function() {
                    return this.name
                },
                __class__: ud
            });
            var ip = t.__ASSET__OPENFL__assets_fonts_poetsen_one_regular_ttf = function() {
                this.__fromLimeFont(new jp);
                zc.call(this, void 0)
            };
            g.__ASSET__OPENFL__assets_fonts_poetsen_one_regular_ttf = ip;
            ip.__name__ = ["__ASSET__OPENFL__assets_fonts_poetsen_one_regular_ttf"];
            ip.__super__ = ud;
            ip.prototype = p(ud.prototype, {
                __class__: ip
            });
            Math.__name__ = ["Math"];
            var In = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(320).__initObject(a, this)
            };
            g.Next_Page_Button = In;
            In.__name__ = ["Next_Page_Button"];
            In.__super__ = n;
            In.prototype = p(n.prototype, {
                __class__: In
            });
            var Jn = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(318).__initObject(a, this)
            };
            g.Next_Page_Downed_Button = Jn;
            Jn.__name__ = ["Next_Page_Downed_Button"];
            Jn.__super__ = n;
            Jn.prototype =
                p(n.prototype, {
                    __class__: Jn
                });
            var kp = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(324).__initObject(a, this)
            };
            g.Pause_Play = kp;
            kp.__name__ = ["Pause_Play"];
            kp.__super__ = n;
            kp.prototype = p(n.prototype, {
                __class__: kp
            });
            var lp = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(128).__initObject(a, this)
            };
            g.Pointer_Finger = lp;
            lp.__name__ = ["Pointer_Finger"];
            lp.__super__ = n;
            lp.prototype = p(n.prototype, {
                __class__: lp
            });
            var mp = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(126).__initObject(a, this)
            };
            g.Pointer_Mouse = mp;
            mp.__name__ = ["Pointer_Mouse"];
            mp.__super__ = n;
            mp.prototype = p(n.prototype, {
                __class__: mp
            });
            var np = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(326).__initObject(a, this)
            };
            g.Price_Background = np;
            np.__name__ = ["Price_Background"];
            np.__super__ = n;
            np.prototype = p(n.prototype, {
                __class__: np
            });
            var op = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(59).__initObject(a, this)
            };
            g.Processing_Purchase_Circle =
                op;
            op.__name__ = ["Processing_Purchase_Circle"];
            op.__super__ = n;
            op.prototype = p(n.prototype, {
                __class__: op
            });
            var T = function() {};
            g.Reflect = T;
            T.__name__ = ["Reflect"];
            T.hasField = function(a, b) {
                return Object.prototype.hasOwnProperty.call(a, b)
            };
            T.field = function(a, b) {
                try {
                    return a[b]
                } catch (c) {
                    return vb.lastException = c, null
                }
            };
            T.setField = function(a, b, c) {
                a[b] = c
            };
            T.callMethod = function(a, b, c) {
                return b.apply(a, c)
            };
            T.fields = function(a) {
                var b = [];
                if (null != a) {
                    var c = Object.prototype.hasOwnProperty,
                        d;
                    for (d in a) "__id__" !=
                        d && "hx__closures__" != d && c.call(a, d) && b.push(d)
                }
                return b
            };
            T.isFunction = function(a) {
                return "function" == typeof a ? !(aa.isClass(a) || aa.isEnum(a)) : !1
            };
            T.compare = function(a, b) {
                return a == b ? 0 : a > b ? 1 : -1
            };
            T.compareMethods = function(a, b) {
                return a == b ? !0 : T.isFunction(a) && T.isFunction(b) ? a.scope == b.scope && a.method == b.method ? null != a.method : !1 : !1
            };
            T.deleteField = function(a, b) {
                if (!T.hasField(a, b)) return !1;
                delete a[b];
                return !0
            };
            T.copy = function(a) {
                for (var b = {}, c = 0, d = T.fields(a); c < d.length;) {
                    var e = d[c];
                    ++c;
                    T.setField(b, e,
                        T.field(a, e))
                }
                return b
            };
            var E = function() {};
            g.Std = E;
            E.__name__ = ["Std"];
            E.is = function(a, b) {
                return aa.__instanceof(a, b)
            };
            E.string = function(a) {
                return aa.__string_rec(a, "")
            };
            E["int"] = function(a) {
                return a | 0
            };
            E.parseInt = function(a) {
                var b = parseInt(a, 10);
                0 != b || 120 != la.cca(a, 1) && 88 != la.cca(a, 1) || (b = parseInt(a));
                return isNaN(b) ? null : b
            };
            E.parseFloat = function(a) {
                return parseFloat(a)
            };
            var bj = function() {
                this.b = ""
            };
            g.StringBuf = bj;
            bj.__name__ = ["StringBuf"];
            bj.prototype = {
                b: null,
                add: function(a) {
                    this.b += E.string(a)
                },
                addChar: function(a) {
                    this.b += String.fromCharCode(a)
                },
                toString: function() {
                    return this.b
                },
                __class__: bj
            };
            var ka = function() {};
            g.StringTools = ka;
            ka.__name__ = ["StringTools"];
            ka.urlEncode = function(a) {
                return encodeURIComponent(a)
            };
            ka.urlDecode = function(a) {
                return decodeURIComponent(a.split("+").join(" "))
            };
            ka.htmlEscape = function(a, b) {
                a = a.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
                return b ? a.split('"').join("&quot;").split("'").join("&#039;") : a
            };
            ka.startsWith = function(a, b) {
                return a.length >=
                    b.length ? la.substr(a, 0, b.length) == b : !1
            };
            ka.endsWith = function(a, b) {
                var c = b.length,
                    d = a.length;
                return d >= c ? la.substr(a, d - c, c) == b : !1
            };
            ka.isSpace = function(a, b) {
                a = la.cca(a, b);
                return 8 < a && 14 > a ? !0 : 32 == a
            };
            ka.ltrim = function(a) {
                for (var b = a.length, c = 0; c < b && ka.isSpace(a, c);) ++c;
                return 0 < c ? la.substr(a, c, b - c) : a
            };
            ka.rtrim = function(a) {
                for (var b = a.length, c = 0; c < b && ka.isSpace(a, b - c - 1);) ++c;
                return 0 < c ? la.substr(a, 0, b - c) : a
            };
            ka.trim = function(a) {
                return ka.ltrim(ka.rtrim(a))
            };
            ka.replace = function(a, b, c) {
                return a.split(b).join(c)
            };
            ka.hex = function(a, b) {
                for (var c = ""; c = "0123456789ABCDEF".charAt(a & 15) + c, a >>>= 4, 0 < a;);
                if (null != b)
                    for (; c.length < b;) c = "0" + c;
                return c
            };
            ka.fastCodeAt = function(a, b) {
                return a.charCodeAt(b)
            };
            ka.isEof = function(a) {
                return a != a
            };
            var pp = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(49).__initObject(a, this)
            };
            g.Text_Consent_Can_Your_Data_Be_Used = pp;
            pp.__name__ = ["Text_Consent_Can_Your_Data_Be_Used"];
            pp.__super__ = n;
            pp.prototype = p(n.prototype, {
                __class__: pp
            });
            var qp = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(51).__initObject(a, this)
            };
            g.Text_Consent_Dear_Gamer = qp;
            qp.__name__ = ["Text_Consent_Dear_Gamer"];
            qp.__super__ = n;
            qp.prototype = p(n.prototype, {
                __class__: qp
            });
            var rp = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(47).__initObject(a, this)
            };
            g.Text_Consent_Learn_More = rp;
            rp.__name__ = ["Text_Consent_Learn_More"];
            rp.__super__ = n;
            rp.prototype = p(n.prototype, {
                __class__: rp
            });
            var sp = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(19).__initObject(a, this)
            };
            g.Text_Created_By = sp;
            sp.__name__ = ["Text_Created_By"];
            sp.__super__ = n;
            sp.prototype = p(n.prototype, {
                __class__: sp
            });
            var tp = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(39).__initObject(a, this)
            };
            g.Text_Credits_Content = tp;
            tp.__name__ = ["Text_Credits_Content"];
            tp.__super__ = n;
            tp.prototype = p(n.prototype, {
                __class__: tp
            });
            var up = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(77).__initObject(a, this)
            };
            g.Text_Loading_Product =
                up;
            up.__name__ = ["Text_Loading_Product"];
            up.__super__ = n;
            up.prototype = p(n.prototype, {
                __class__: up
            });
            var Kn = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(308).__initObject(a, this)
            };
            g.Text_Locked = Kn;
            Kn.__name__ = ["Text_Locked"];
            Kn.__super__ = n;
            Kn.prototype = p(n.prototype, {
                __class__: Kn
            });
            var vp = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(17).__initObject(a, this)
            };
            g.Text_Music_By = vp;
            vp.__name__ = ["Text_Music_By"];
            vp.__super__ = n;
            vp.prototype = p(n.prototype, {
                __class__: vp
            });
            var wp = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(79).__initObject(a, this)
            };
            g.Text_Processing_Purchase = wp;
            wp.__name__ = ["Text_Processing_Purchase"];
            wp.__super__ = n;
            wp.prototype = p(n.prototype, {
                __class__: wp
            });
            var xp = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(53).__initObject(a, this)
            };
            g.Text_Purchase_AlreadyOwned = xp;
            xp.__name__ = ["Text_Purchase_AlreadyOwned"];
            xp.__super__ = n;
            xp.prototype = p(n.prototype, {
                __class__: xp
            });
            var yp = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(61).__initObject(a, this)
            };
            g.Text_Purchase_Canceled = yp;
            yp.__name__ = ["Text_Purchase_Canceled"];
            yp.__super__ = n;
            yp.prototype = p(n.prototype, {
                __class__: yp
            });
            var zp = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(55).__initObject(a, this)
            };
            g.Text_Purchase_Deferred = zp;
            zp.__name__ = ["Text_Purchase_Deferred"];
            zp.__super__ = n;
            zp.prototype = p(n.prototype, {
                __class__: zp
            });
            var Ap = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(73).__initObject(a,
                    this)
            };
            g.Text_Purchase_Failed = Ap;
            Ap.__name__ = ["Text_Purchase_Failed"];
            Ap.__super__ = n;
            Ap.prototype = p(n.prototype, {
                __class__: Ap
            });
            var Bp = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(63).__initObject(a, this)
            };
            g.Text_Purchase_Not_Allowed = Bp;
            Bp.__name__ = ["Text_Purchase_Not_Allowed"];
            Bp.__super__ = n;
            Bp.prototype = p(n.prototype, {
                __class__: Bp
            });
            var Cp = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(67).__initObject(a, this)
            };
            g.Text_Purchase_Refunded = Cp;
            Cp.__name__ = ["Text_Purchase_Refunded"];
            Cp.__super__ = n;
            Cp.prototype = p(n.prototype, {
                __class__: Cp
            });
            var Dp = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(65).__initObject(a, this)
            };
            g.Text_Purchase_Removed = Dp;
            Dp.__name__ = ["Text_Purchase_Removed"];
            Dp.__super__ = n;
            Dp.prototype = p(n.prototype, {
                __class__: Dp
            });
            var Ep = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(69).__initObject(a, this)
            };
            g.Text_Purchase_Restored = Ep;
            Ep.__name__ = ["Text_Purchase_Restored"];
            Ep.__super__ = n;
            Ep.prototype = p(n.prototype, {
                __class__: Ep
            });
            var Fp = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(75).__initObject(a, this)
            };
            g.Text_Purchase_Successful = Fp;
            Fp.__name__ = ["Text_Purchase_Successful"];
            Fp.__super__ = n;
            Fp.prototype = p(n.prototype, {
                __class__: Fp
            });
            var Gp = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(71).__initObject(a, this)
            };
            g.Text_Purchase_Waiting_For_Approval = Gp;
            Gp.__name__ = ["Text_Purchase_Waiting_For_Approval"];
            Gp.__super__ =
                n;
            Gp.prototype = p(n.prototype, {
                __class__: Gp
            });
            var Hp = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(45).__initObject(a, this)
            };
            g.Text_Restoring_Purchase = Hp;
            Hp.__name__ = ["Text_Restoring_Purchase"];
            Hp.__super__ = n;
            Hp.prototype = p(n.prototype, {
                __class__: Hp
            });
            var Ip = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(322).__initObject(a, this)
            };
            g.Text_S = Ip;
            Ip.__name__ = ["Text_S"];
            Ip.__super__ = n;
            Ip.prototype = p(n.prototype, {
                __class__: Ip
            });
            var Jp = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(15).__initObject(a, this)
            };
            g.Text_Testing_By = Jp;
            Jp.__name__ = ["Text_Testing_By"];
            Jp.__super__ = n;
            Jp.prototype = p(n.prototype, {
                __class__: Jp
            });
            var Kp = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(29).__initObject(a, this)
            };
            g.Text_Unlock_Failed = Kp;
            Kp.__name__ = ["Text_Unlock_Failed"];
            Kp.__super__ = n;
            Kp.prototype = p(n.prototype, {
                __class__: Kp
            });
            var Lp = function() {
                n.call(this);
                var a = U.get("gN4FrDYWTb8f05oc53y1");
                a.symbols.get(27).__initObject(a,
                    this)
            };
            g.Text_Unlock_Success = Lp;
            Lp.__name__ = ["Text_Unlock_Success"];
            Lp.__super__ = n;
            Lp.prototype = p(n.prototype, {
                __class__: Lp
            });
            var Yb = g.ValueType = {
                __ename__: ["ValueType"],
                __constructs__: "TNull TInt TFloat TBool TObject TFunction TClass TEnum TUnknown".split(" ")
            };
            Yb.TNull = ["TNull", 0];
            Yb.TNull.toString = l;
            Yb.TNull.__enum__ = Yb;
            Yb.TInt = ["TInt", 1];
            Yb.TInt.toString = l;
            Yb.TInt.__enum__ = Yb;
            Yb.TFloat = ["TFloat", 2];
            Yb.TFloat.toString = l;
            Yb.TFloat.__enum__ = Yb;
            Yb.TBool = ["TBool", 3];
            Yb.TBool.toString = l;
            Yb.TBool.__enum__ =
                Yb;
            Yb.TObject = ["TObject", 4];
            Yb.TObject.toString = l;
            Yb.TObject.__enum__ = Yb;
            Yb.TFunction = ["TFunction", 5];
            Yb.TFunction.toString = l;
            Yb.TFunction.__enum__ = Yb;
            Yb.TClass = function(a) {
                a = ["TClass", 6, a];
                a.__enum__ = Yb;
                a.toString = l;
                return a
            };
            Yb.TEnum = function(a) {
                a = ["TEnum", 7, a];
                a.__enum__ = Yb;
                a.toString = l;
                return a
            };
            Yb.TUnknown = ["TUnknown", 8];
            Yb.TUnknown.toString = l;
            Yb.TUnknown.__enum__ = Yb;
            var Q = function() {};
            g.Type = Q;
            Q.__name__ = ["Type"];
            Q.getClass = function(a) {
                return null == a ? null : aa.getClass(a)
            };
            Q.getEnum = function(a) {
                return null ==
                    a ? null : a.__enum__
            };
            Q.getClassName = function(a) {
                a = a.__name__;
                return null == a ? null : a.join(".")
            };
            Q.getEnumName = function(a) {
                return a.__ename__.join(".")
            };
            Q.resolveClass = function(a) {
                a = g[a];
                return null != a && aa.isClass(a) ? a : null
            };
            Q.resolveEnum = function(a) {
                a = g[a];
                return null != a && aa.isEnum(a) ? a : null
            };
            Q.createInstance = function(a, b) {
                switch (b.length) {
                    case 0:
                        return new a;
                    case 1:
                        return new a(b[0]);
                    case 2:
                        return new a(b[0], b[1]);
                    case 3:
                        return new a(b[0], b[1], b[2]);
                    case 4:
                        return new a(b[0], b[1], b[2], b[3]);
                    case 5:
                        return new a(b[0],
                            b[1], b[2], b[3], b[4]);
                    case 6:
                        return new a(b[0], b[1], b[2], b[3], b[4], b[5]);
                    case 7:
                        return new a(b[0], b[1], b[2], b[3], b[4], b[5], b[6]);
                    case 8:
                        return new a(b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7]);
                    case 9:
                        return new a(b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7], b[8]);
                    case 10:
                        return new a(b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7], b[8], b[9]);
                    case 11:
                        return new a(b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7], b[8], b[9], b[10]);
                    case 12:
                        return new a(b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7], b[8], b[9], b[10], b[11]);
                    case 13:
                        return new a(b[0],
                            b[1], b[2], b[3], b[4], b[5], b[6], b[7], b[8], b[9], b[10], b[11], b[12]);
                    case 14:
                        return new a(b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7], b[8], b[9], b[10], b[11], b[12], b[13]);
                    default:
                        throw new Z("Too many arguments");
                }
            };
            Q.createEmptyInstance = function(a) {
                function b() {}
                b.prototype = a.prototype;
                return new b
            };
            Q.createEnum = function(a, b, c) {
                var d = T.field(a, b);
                if (null == d) throw new Z("No such constructor " + b);
                if (T.isFunction(d)) {
                    if (null == c) throw new Z("Constructor " + b + " need parameters");
                    return T.callMethod(a, d, c)
                }
                if (null !=
                    c && 0 != c.length) throw new Z("Constructor " + b + " does not need parameters");
                return d
            };
            Q.getInstanceFields = function(a) {
                var b = [],
                    c;
                for (c in a.prototype) b.push(c);
                la.remove(b, "__class__");
                la.remove(b, "__properties__");
                return b
            };
            Q.getEnumConstructs = function(a) {
                return a.__constructs__.slice()
            };
            Q["typeof"] = function(a) {
                switch (typeof a) {
                    case "boolean":
                        return Yb.TBool;
                    case "function":
                        return aa.isClass(a) || aa.isEnum(a) ? Yb.TObject : Yb.TFunction;
                    case "number":
                        return Math.ceil(a) == a % 2147483648 ? Yb.TInt : Yb.TFloat;
                    case "object":
                        if (null ==
                            a) return Yb.TNull;
                        var b = a.__enum__;
                        if (null != b) return Yb.TEnum(b);
                        a = aa.getClass(a);
                        return null != a ? Yb.TClass(a) : Yb.TObject;
                    case "string":
                        return Yb.TClass(String);
                    case "undefined":
                        return Yb.TNull;
                    default:
                        return Yb.TUnknown
                }
            };
            Q.enumConstructor = function(a) {
                return a[0]
            };
            Q.enumIndex = function(a) {
                return a[1]
            };
            var Qd = {};
            g["_UInt.UInt_Impl_"] = Qd;
            Qd.__name__ = ["_UInt", "UInt_Impl_"];
            Qd.gt = function(a, b) {
                var c = 0 > a;
                return c != 0 > b ? c : a > b
            };
            Qd.toFloat = function(a) {
                return 0 > a ? 4294967296 + a : a + 0
            };
            var yh = function() {};
            g["bikas.algorithms.PerlinNoiseFunc"] =
                yh;
            yh.__name__ = ["bikas", "algorithms", "PerlinNoiseFunc"];
            yh.getPerlinNoise1D = function(a, b, c, d) {
                null == d && (d = .5);
                null == c && (c = 1);
                null == b && (b = 8);
                null == a && (a = 200);
                for (var e = yh.getNoiseFunctionResults(d, a, 1, 1), f = 1, h = 1, k = b + 1; h < k;) {
                    var m = h++;
                    if (Math.pow(2, m) < a) {
                        b = yh.getNoiseFunctionResults(d + m, a, Math.pow(c, m), Math.floor(Math.pow(2, m)));
                        f += Math.pow(c, m);
                        m = 0;
                        for (var r = b.length; m < r;) {
                            var I = m++;
                            e[I] += b[I]
                        }
                    }
                }
                a = 0;
                for (c = e.length; a < c;) d = a++, e[d] /= f;
                return e
            };
            yh.getNoiseFunctionResults = function(a, b, c, d) {
                null == d && (d =
                    1);
                null == c && (c = 1);
                null == b && (b = 200);
                null == a && (a = .5);
                d = Math.floor(b / d);
                var e = [];
                a = Math.round(2147483647 * a);
                for (var f = yh.prng(a), h = 0; h < b;) {
                    var k = h++;
                    0 == k % d ? (a = f, f = yh.prng(a), k = a / 2147483647 * c - c / 2) : k = yh.interpolate(a, f, k % d / d) / 2147483647 * c - c / 2;
                    e.push(k)
                }
                return e
            };
            yh.prng = function(a) {
                return 16807 * a
            };
            yh.interpolate = function(a, b, c) {
                c = .5 * (1 - Math.cos(c * Math.PI));
                return a * (1 - c) + b * c
            };
            var Sk = function(a) {
                this.original_seed = this.seed = Math.round(2147483647 * a)
            };
            g["bikas.algorithms.ProceduralNumberGenerator"] = Sk;
            Sk.__name__ = ["bikas", "algorithms", "ProceduralNumberGenerator"];
            Sk.prng = function(a) {
                return E["int"](Qd.toFloat(16807 * a) % Qd.toFloat(2147483647))
            };
            Sk.prototype = {
                original_seed: null,
                seed: null,
                setNewSeed: function(a) {
                    this.original_seed = this.seed = Math.round(2147483647 * a)
                },
                getRandom: function() {
                    this.seed = Sk.prng(this.seed);
                    return Qd.toFloat(this.seed) / Qd.toFloat(2147483647)
                },
                getRandomSign: function() {
                    return .5 < this.getRandom() ? 1 : -1
                },
                getRandomBetween: function(a, b) {
                    return a + (b - a) * this.getRandom()
                },
                getRandomBetweenInt: function(a,
                    b) {
                    return a + Math.floor(this.getRandom() * (b - a + 1))
                },
                __class__: Sk
            };
            var vg = g["bikas.assets.BitmapDataSourceType"] = {
                __ename__: ["bikas", "assets", "BitmapDataSourceType"],
                __constructs__: ["BitmapDataSourceGenerated", "BitmapDataSourceImported"]
            };
            vg.BitmapDataSourceGenerated = ["BitmapDataSourceGenerated", 0];
            vg.BitmapDataSourceGenerated.toString = l;
            vg.BitmapDataSourceGenerated.__enum__ = vg;
            vg.BitmapDataSourceImported = ["BitmapDataSourceImported", 1];
            vg.BitmapDataSourceImported.toString = l;
            vg.BitmapDataSourceImported.__enum__ =
                vg;
            var Me = function(a) {
                this.scale = 1;
                this.type = a
            };
            g["bikas.assets.BitmapDataSource"] = Me;
            Me.__name__ = ["bikas", "assets", "BitmapDataSource"];
            Me.prototype = {
                bitmap_data: null,
                center_point: null,
                original_width: null,
                original_height: null,
                type: null,
                scale: null,
                __class__: Me
            };
            var Mw = function() {};
            g["bikas.assets.BitmapDataAnimationSource"] = Mw;
            Mw.__name__ = ["bikas", "assets", "BitmapDataAnimationSource"];
            var Mp = function() {};
            g["bikas.assets.BitmapContainer"] = Mp;
            Mp.__name__ = ["bikas", "assets", "BitmapContainer"];
            Mp.prototype = {
                source: null,
                container: null,
                bitmap: null,
                __class__: Mp
            };
            var V = function() {};
            g["bikas.assets.AssetsDo"] = V;
            V.__name__ = ["bikas", "assets", "AssetsDo"];
            V.createAndInitBitmapDataMap = function() {
                var a = new fb;
                Me.placeholder = V.createCrossedSquare();
                var b = V.createCrossedSquare(64, 13621244, 265790),
                    c = Ea.drawTextWithBackgroundToSource("TEST", 14, 0, 0, !0, 265790, 13621244, 265790, 2);
                V.drawOverBitmapDataInCenter(b.bitmap_data, c.bitmap_data);
                a.set("test", b);
                return a
            };
            V.createAndInitBitmapDataAnimationMap = function() {
                return new fb
            };
            V.retrieveBitmapData = function(a, b) {
                a = b.get(a);
                return null != a ? a : Me.placeholder
            };
            V.createSourceFromBitmapData = function(a) {
                var b = new Me(vg.BitmapDataSourceGenerated);
                b.bitmap_data = a;
                b.center_point = new W(0, 0);
                b.original_width = a.width;
                b.original_height = a.height;
                return b
            };
            V.createAndDrawSource = function(a, b, c, d, e, f) {
                null == e && (e = 0);
                null == d && (d = 0);
                null == c && (c = !0);
                null == b && (b = !0);
                var h = new Me(vg.BitmapDataSourceGenerated);
                V.drawToBitmapDataSource(h, a, b, c, d, e, f);
                return h
            };
            V.createBitmapUsingSource = function(a) {
                var b =
                    new If(a.bitmap_data, 2, !0);
                b.set_x(-a.center_point.x);
                b.set_y(-a.center_point.y);
                return b
            };
            V.createBitmapFromDisplayObject = function(a, b, c, d, e, f) {
                null == e && (e = 0);
                null == d && (d = 0);
                null == c && (c = !0);
                null == b && (b = !0);
                a = V.createAndDrawSource(a, b, c, d, e, f);
                return V.createBitmapUsingSource(a)
            };
            V.createBitmapContainer = function(a) {
                var b = new Mp;
                b.source = a;
                b.container = new S;
                b.bitmap = V.createBitmapUsingSource(a);
                b.container.addChild(b.bitmap);
                return b
            };
            V.createBitmapContainerFromDisplayObject = function(a, b, c, d, e, f) {
                null ==
                    e && (e = 0);
                null == d && (d = 0);
                null == c && (c = !0);
                null == b && (b = !0);
                a = V.createAndDrawSource(a, b, c, d, e, f);
                return V.createBitmapContainer(a)
            };
            V.setBitmapData = function(a, b) {
                a.set_bitmapData(b);
                a.pixelSnapping = 2;
                a.smoothing = !0
            };
            V.setBitmapUsingSource = function(a, b) {
                a.set_bitmapData(b.bitmap_data);
                a.pixelSnapping = 2;
                a.smoothing = !0;
                a.set_x(-b.center_point.x);
                a.set_y(-b.center_point.y)
            };
            V.setBitmapDataWithSmoothing = function(a, b) {
                a.set_bitmapData(b);
                a.pixelSnapping = 2;
                a.smoothing = !0
            };
            V.drawToBitmapDataSource = function(a,
                b, c, d, e, f, h) {
                null == f && (f = 0);
                null == e && (e = 0);
                null == d && (d = !0);
                null == c && (c = !0);
                var k = b.get_x(),
                    m = b.get_y(),
                    r = h;
                h = null;
                var I = 0,
                    g = new S;
                null != b.parent && (h = b.parent, I = b.parent.getChildIndex(b), h.removeChild(b));
                g.addChild(b);
                if (null == r) {
                    var Mb = b.getBounds(g);
                    r = d && E.is(b, gb) ? V.getDisplayObjectRectangle(aa.__cast(b, gb), g, !0) : new Ie(Mb.x, Mb.y, Mb.width, Mb.height)
                }
                d = Math.ceil(r.width);
                Mb = Math.ceil(r.height);
                if (0 == d || 0 == Mb) w.trace("warning: display object has width = " + d + ", height = " + Mb, {
                    fileName: "AssetsDo.hx",
                    lineNumber: 235,
                    className: "bikas.assets.AssetsDo",
                    methodName: "drawToBitmapDataSource"
                }), a.bitmap_data = Me.placeholder.bitmap_data, a.center_point = new W(Me.placeholder.center_point.x, Me.placeholder.center_point.y), a.original_width = Me.placeholder.original_width, a.original_height = Me.placeholder.original_height;
                else {
                    var l = Math.ceil(d + 2 * e),
                        mb = Math.ceil(Mb + 2 * f);
                    e = new W((k - r.x + e) / (r.width + 2 * e) * l, (m - r.y + f) / (r.height + 2 * f) * mb);
                    c = new Kb(l, mb, c, 16777215);
                    f = b.get_x();
                    k = b.get_y();
                    b.set_x(e.x);
                    b.set_y(e.y);
                    c.draw(g);
                    b.set_x(f);
                    b.set_y(k);
                    a.bitmap_data = c;
                    a.center_point = e;
                    a.original_width = d;
                    a.original_height = Mb;
                    g.removeChild(b);
                    null != h && h.addChildAt(b, I)
                }
            };
            V.createCrossedSquare = function(a, b, c) {
                null == c && (c = 12517376);
                null == b && (b = 16773874);
                null == a && (a = 64);
                var d = new S,
                    e = d.get_graphics();
                a -= 2;
                var f = a / 2;
                e.beginFill(b, 1);
                e.lineStyle(2, c, 1);
                e.moveTo(-f, -f);
                e.lineTo(f, -f);
                e.lineTo(f, f);
                e.lineTo(-f, f);
                e.lineTo(-f, -f);
                e.endFill();
                e.moveTo(-f, -f);
                e.lineTo(f, f);
                e.moveTo(f, -f);
                e.lineTo(-f, f);
                return V.createAndDrawSource(d, !0,
                    !1, 2, 2, new Ie(-f, -f, a, a))
            };
            V.drawOverBitmapDataInCenter = function(a, b) {
                var c = new Ya;
                c.translate(Math.round((a.width - b.width) / 2), Math.round((a.height - b.height) / 2));
                a.draw(b, c, null, null, null, !0)
            };
            V.safeDestroyBitmapWithBitmapData = function(a) {
                null != a && (null != a.parent && a.parent.removeChild(a), null != a.get_bitmapData() && (a.get_bitmapData().dispose(), a.set_bitmapData(null)))
            };
            V.destroyBitmapDataSource = function(a) {
                a.bitmap_data.dispose();
                a.bitmap_data = null;
                a.center_point = null
            };
            V.destroyBitmapContainerIncludingBitmapDataSource =
                function(a) {
                    null != a.container.parent && a.container.parent.removeChild(a.container);
                    null == a.bitmap && w.trace("warning: bitmap == null", {
                        fileName: "AssetsDo.hx",
                        lineNumber: 460,
                        className: "bikas.assets.AssetsDo",
                        methodName: "destroyBitmapContainerIncludingBitmapDataSource"
                    });
                    a.bitmap.parent.removeChild(a.bitmap);
                    a.bitmap.set_bitmapData(null);
                    a.source.bitmap_data.dispose();
                    a.source.bitmap_data = null;
                    a.container = null;
                    a.bitmap = null;
                    a.source = null
                };
            V.getDisplayObjectRectangle = function(a, b, c) {
                a = V.processDisplayObjectContainer(a,
                    b, c);
                return Va.convertRectangle(a)
            };
            V.processDisplayObjectContainer = function(a, b, c) {
                var d = null;
                if (null != a) {
                    for (var e, f = 0, h = a.get_numChildren(); f < h;) e = f++, e = a.getChildAt(e), E.is(e, gb) && (e = V.processDisplayObjectContainer(aa.__cast(e, gb), b, c), d = null == d ? e.clone() : d.union(e));
                    b = a.getBounds(b);
                    d = null == d ? b.clone() : d.union(b);
                    if (0 == d.width && 0 == d.height) return w.trace("warning: result_rectangle has 0 width or height", {
                            fileName: "AssetsDo.hx",
                            lineNumber: 517,
                            className: "bikas.assets.AssetsDo",
                            methodName: "processDisplayObjectContainer"
                        }),
                        null;
                    if (1 == c && 0 < a.get_filters().length) {
                        c = new hb(0, 0, d.width, d.height);
                        b = new Kb(Math.round(d.width), Math.round(d.height), !0, 0);
                        h = f = 0;
                        var k = null;
                        e = 0;
                        for (var m = a.get_filters().length; e < m;) k = e++, k = a.get_filters()[k], k = b.generateFilterRect(c, k), f += k.x, h += k.y, c = k.clone(), c.x = 0, c.y = 0, b = new Kb(Math.round(c.width), Math.round(c.height), !0, 0);
                        k.x = d.x + f;
                        k.y = d.y + h;
                        d = k.clone()
                    }
                } else return w.trace("warning: no displayobject was passed as an argument", {
                    fileName: "AssetsDo.hx",
                    lineNumber: 554,
                    className: "bikas.assets.AssetsDo",
                    methodName: "processDisplayObjectContainer"
                }), null;
                return d
            };
            var Ib = g["bikas.bikasui.ElementAlignType"] = {
                __ename__: ["bikas", "bikasui", "ElementAlignType"],
                __constructs__: "LEFT_UP LEFT_CENTER LEFT_DOWN RIGHT_UP RIGHT_CENTER RIGHT_DOWN TOP_LEFT TOP_CENTER TOP_RIGHT BOTTOM_LEFT BOTTOM_CENTER BOTTOM_RIGHT".split(" ")
            };
            Ib.LEFT_UP = ["LEFT_UP", 0];
            Ib.LEFT_UP.toString = l;
            Ib.LEFT_UP.__enum__ = Ib;
            Ib.LEFT_CENTER = ["LEFT_CENTER", 1];
            Ib.LEFT_CENTER.toString = l;
            Ib.LEFT_CENTER.__enum__ = Ib;
            Ib.LEFT_DOWN = ["LEFT_DOWN", 2];
            Ib.LEFT_DOWN.toString =
                l;
            Ib.LEFT_DOWN.__enum__ = Ib;
            Ib.RIGHT_UP = ["RIGHT_UP", 3];
            Ib.RIGHT_UP.toString = l;
            Ib.RIGHT_UP.__enum__ = Ib;
            Ib.RIGHT_CENTER = ["RIGHT_CENTER", 4];
            Ib.RIGHT_CENTER.toString = l;
            Ib.RIGHT_CENTER.__enum__ = Ib;
            Ib.RIGHT_DOWN = ["RIGHT_DOWN", 5];
            Ib.RIGHT_DOWN.toString = l;
            Ib.RIGHT_DOWN.__enum__ = Ib;
            Ib.TOP_LEFT = ["TOP_LEFT", 6];
            Ib.TOP_LEFT.toString = l;
            Ib.TOP_LEFT.__enum__ = Ib;
            Ib.TOP_CENTER = ["TOP_CENTER", 7];
            Ib.TOP_CENTER.toString = l;
            Ib.TOP_CENTER.__enum__ = Ib;
            Ib.TOP_RIGHT = ["TOP_RIGHT", 8];
            Ib.TOP_RIGHT.toString = l;
            Ib.TOP_RIGHT.__enum__ =
                Ib;
            Ib.BOTTOM_LEFT = ["BOTTOM_LEFT", 9];
            Ib.BOTTOM_LEFT.toString = l;
            Ib.BOTTOM_LEFT.__enum__ = Ib;
            Ib.BOTTOM_CENTER = ["BOTTOM_CENTER", 10];
            Ib.BOTTOM_CENTER.toString = l;
            Ib.BOTTOM_CENTER.__enum__ = Ib;
            Ib.BOTTOM_RIGHT = ["BOTTOM_RIGHT", 11];
            Ib.BOTTOM_RIGHT.toString = l;
            Ib.BOTTOM_RIGHT.__enum__ = Ib;
            var ls = function() {};
            g["bikas.bikasui.Background"] = ls;
            ls.__name__ = ["bikas", "bikasui", "Background"];
            ls.prototype = {
                sprite: null,
                color: null,
                line_color: null,
                line_thickness: null,
                __class__: ls
            };
            var Be = g["bikas.bikasui.BoxLayoutType"] = {
                __ename__: ["bikas",
                    "bikasui", "BoxLayoutType"
                ],
                __constructs__: ["NONE", "VBOX", "HBOX"]
            };
            Be.NONE = ["NONE", 0];
            Be.NONE.toString = l;
            Be.NONE.__enum__ = Be;
            Be.VBOX = ["VBOX", 1];
            Be.VBOX.toString = l;
            Be.VBOX.__enum__ = Be;
            Be.HBOX = ["HBOX", 2];
            Be.HBOX.toString = l;
            Be.HBOX.__enum__ = Be;
            var ms = function() {
                this.mask_sprite = null
            };
            g["bikas.bikasui.Box"] = ms;
            ms.__name__ = ["bikas", "bikasui", "Box"];
            ms.prototype = {
                layout_type: null,
                mask_sprite: null,
                children_container: null,
                children: null,
                __class__: ms
            };
            var Ln = function() {
                this.events_enabled = !0;
                this.over_callback =
                    this.out_callback = this.down_callback = this.up_callback = this.click_callback = null
            };
            g["bikas.bikasui.Button"] = Ln;
            Ln.__name__ = ["bikas", "bikasui", "Button"];
            Ln.prototype = {
                button_color_default: null,
                button_color_over: null,
                button_color_down: null,
                text_color_default: null,
                text_color_over: null,
                text_color_down: null,
                overed: null,
                downed: null,
                button_event: null,
                over_callback: null,
                out_callback: null,
                down_callback: null,
                up_callback: null,
                click_callback: null,
                events_enabled: null,
                __class__: Ln
            };
            var ns = function() {};
            g["bikas.bikasui.CheckBox"] =
                ns;
            ns.__name__ = ["bikas", "bikasui", "CheckBox"];
            ns.prototype = {
                value: null,
                all: null,
                title_text: null,
                check_button: null,
                toggle_callback: null,
                __class__: ns
            };
            var os = function() {};
            g["bikas.bikasui.ExpandBox"] = os;
            os.__name__ = ["bikas", "bikasui", "ExpandBox"];
            os.prototype = {
                all: null,
                title_button: null,
                contents: null,
                __class__: os
            };
            var Kg = function(a, b, c, d) {
                this.top = a;
                this.bottom = b;
                this.left = c;
                this.right = d
            };
            g["bikas.bikasui.Padding"] = Kg;
            Kg.__name__ = ["bikas", "bikasui", "Padding"];
            Kg.prototype = {
                top: null,
                bottom: null,
                left: null,
                right: null,
                __class__: Kg
            };
            var ps = function() {};
            g["bikas.bikasui.SelectBox"] = ps;
            ps.__name__ = ["bikas", "bikasui", "SelectBox"];
            ps.prototype = {
                selected_value: null,
                all: null,
                selected_text: null,
                scroll_box: null,
                contents: null,
                select_callback: null,
                __class__: ps
            };
            var Kf = function(a, b) {
                this.width = a;
                this.height = b
            };
            g["bikas.bikasui.Size"] = Kf;
            Kf.__name__ = ["bikas", "bikasui", "Size"];
            Kf.prototype = {
                width: null,
                height: null,
                __class__: Kf
            };
            var qs = function() {};
            g["bikas.bikasui.ScrollBox"] = qs;
            qs.__name__ = ["bikas", "bikasui", "ScrollBox"];
            qs.prototype = {
                max_size: null,
                slider_padding: null,
                click_scroll_height: null,
                all: null,
                contents: null,
                right_box: null,
                right_slider: null,
                right_up_button: null,
                right_down_button: null,
                __class__: qs
            };
            var bc = g["bikas.bikasui.TextAlignType"] = {
                __ename__: ["bikas", "bikasui", "TextAlignType"],
                __constructs__: ["LEFT", "RIGHT", "CENTER"]
            };
            bc.LEFT = ["LEFT", 0];
            bc.LEFT.toString = l;
            bc.LEFT.__enum__ = bc;
            bc.RIGHT = ["RIGHT", 1];
            bc.RIGHT.toString = l;
            bc.RIGHT.__enum__ = bc;
            bc.CENTER = ["CENTER", 2];
            bc.CENTER.toString = l;
            bc.CENTER.__enum__ = bc;
            var zh = function() {
                this.change_event = this.keyboard_event = this.changed_callback = this.enter_callback = null
            };
            g["bikas.bikasui.Text"] = zh;
            zh.__name__ = ["bikas", "bikasui", "Text"];
            zh.prototype = {
                field: null,
                format: null,
                align: null,
                padding: null,
                change_event: null,
                keyboard_event: null,
                changed_callback: null,
                enter_callback: null,
                __class__: zh
            };
            var cc = g["bikas.bikasui.WindowBoxCloseType"] = {
                __ename__: ["bikas", "bikasui", "WindowBoxCloseType"],
                __constructs__: ["NONE", "INVISIBLE", "REMOVE", "DESTROY", "CONFIRM"]
            };
            cc.NONE = ["NONE",
                0
            ];
            cc.NONE.toString = l;
            cc.NONE.__enum__ = cc;
            cc.INVISIBLE = ["INVISIBLE", 1];
            cc.INVISIBLE.toString = l;
            cc.INVISIBLE.__enum__ = cc;
            cc.REMOVE = ["REMOVE", 2];
            cc.REMOVE.toString = l;
            cc.REMOVE.__enum__ = cc;
            cc.DESTROY = ["DESTROY", 3];
            cc.DESTROY.toString = l;
            cc.DESTROY.__enum__ = cc;
            cc.CONFIRM = ["CONFIRM", 4];
            cc.CONFIRM.toString = l;
            cc.CONFIRM.__enum__ = cc;
            var rs = function() {
                this.confirm_show_condition = this.confirm_callback = null;
                this.confirm_text = "Destroy?";
                this.close_button = this.close_callback = null;
                this.opened = this.expanded = !0
            };
            g["bikas.bikasui.WindowBox"] = rs;
            rs.__name__ = ["bikas", "bikasui", "WindowBox"];
            rs.prototype = {
                opened: null,
                expanded: null,
                close_type: null,
                min_width: null,
                all: null,
                title_hbox: null,
                minimize_button: null,
                title_button: null,
                close_button: null,
                bottom_container: null,
                scroll_box: null,
                contents: null,
                close_callback: null,
                confirm_text: null,
                confirm_show_condition: null,
                confirm_callback: null,
                __class__: rs
            };
            var Np = function() {
                this.custom_fields = []
            };
            g["bikas.bikasui.WindowSetup"] = Np;
            Np.__name__ = ["bikas", "bikasui", "WindowSetup"];
            Np.prototype = {
                container: null,
                padding: null,
                width: null,
                height: null,
                slider_size: null,
                title_button_width: null,
                max_content_width: null,
                max_content_height: null,
                internal_scrollable_max_height: null,
                custom_fields: null,
                __class__: Np
            };
            var Tk = function(a, b) {
                this.object_type = a;
                this.fields = b
            };
            g["bikas.bikasui.CustomField"] = Tk;
            Tk.__name__ = ["bikas", "bikasui", "CustomField"];
            Tk.prototype = {
                object_type: null,
                fields: null,
                __class__: Tk
            };
            var Op = function() {};
            g["bikas.bikasui.DebugArray"] = Op;
            Op.__name__ = ["bikas", "bikasui", "DebugArray"];
            Op.prototype = {
                name: null,
                editable: null,
                values: null,
                fields: null,
                additional: null,
                array_element_edit_custom_func: null,
                __class__: Op
            };
            var Ai = function(a, b) {
                this.object = a;
                this.field = b
            };
            g["bikas.bikasui.DebugEditException"] = Ai;
            Ai.__name__ = ["bikas", "bikasui", "DebugEditException"];
            Ai.prototype = {
                object: null,
                field: null,
                __class__: Ai
            };
            var ss = function() {
                this.custom_instance_edit = this.before_apply = this.after_apply = this.set_new_value = null;
                this.accuracy_decimals = 0;
                this.name_text = this.value_text = this.refresh_func = null
            };
            g["bikas.bikasui.DebugField"] = ss;
            ss.__name__ = ["bikas", "bikasui", "DebugField"];
            ss.prototype = {
                object: null,
                field_name: null,
                value: null,
                element: null,
                name_text: null,
                value_text: null,
                refresh_func: null,
                is_object: null,
                accuracy_decimals: null,
                custom_instance_edit: null,
                before_apply: null,
                after_apply: null,
                set_new_value: null,
                __class__: ss
            };
            var ts = function() {
                this.array = this.parent = null
            };
            g["bikas.bikasui.DebugWindow"] = ts;
            ts.__name__ = ["bikas", "bikasui", "DebugWindow"];
            ts.prototype = {
                setup: null,
                window: null,
                controls_added: null,
                add_controls: null,
                always_refresh_views: null,
                refresh_listener_func: null,
                refresh_container: null,
                all_fields: null,
                edit_fields: null,
                view_fields: null,
                array: null,
                parent: null,
                callbacks: null,
                __class__: ts
            };
            var us = function() {
                this.array_add_func = this.array_remove_func = null;
                this.debug_close_callbacks = [];
                this.before_apply = this.after_apply = this.debug_field_before_apply = this.debug_field_after_apply = null
            };
            g["bikas.bikasui.DebugCallbacks"] = us;
            us.__name__ = ["bikas", "bikasui", "DebugCallbacks"];
            us.prototype = {
                before_apply: null,
                after_apply: null,
                debug_field_before_apply: null,
                debug_field_after_apply: null,
                debug_close_callbacks: null,
                array_add_func: null,
                array_remove_func: null,
                __class__: us
            };
            var Bi = function() {
                this.parent = this.top_mouse_up_event = this.background = this.box = this.button = this.check_box = this.expand_box = this.graphics = this.text = this.scroll_box = this.select_box = this.window_box = null
            };
            g["bikas.bikasui.Element"] = Bi;
            Bi.__name__ = ["bikas", "bikasui", "Element"];
            Bi.prototype = {
                size: null,
                padding: null,
                sprite: null,
                parent: null,
                top_mouse_up_event: null,
                background: null,
                box: null,
                button: null,
                check_box: null,
                expand_box: null,
                graphics: null,
                text: null,
                scroll_box: null,
                select_box: null,
                window_box: null,
                __class__: Bi
            };
            var v = function() {};
            g["bikas.bikasui.BuiDebug"] = v;
            v.__name__ = ["bikas", "bikasui", "BuiDebug"];
            v.createDebugWindow = function(a, b, c, d, e, f, h, k) {
                null == k && (k = -1);
                null == h && (h = !0);
                null == f && (f = 720);
                null == e && (e = 1280);
                null == c && (c = !0);
                null == d && (d = cc.DESTROY);
                k = new Np;
                k.padding = 2;
                k.height = 16 + 2 * k.padding;
                k.title_button_width = b;
                k.slider_size = .8 * k.height;
                k.width = k.title_button_width +
                    2 * k.height;
                k.internal_scrollable_max_height = 10 * k.height;
                k.max_content_width = e;
                k.max_content_height = f;
                var m = new ts;
                m.always_refresh_views = c;
                m.add_controls = h;
                a = u.createWindowBox(a, d, k.height, k.title_button_width, k.max_content_width, k.max_content_height, k.slider_size, k.padding, null);
                a.window_box.close_callback = function() {
                    for (var a = 0, b = m.callbacks.debug_close_callbacks; a < b.length;) {
                        var c = b[a];
                        ++a;
                        c(m)
                    }
                    if (m.window.window_box.close_type == cc.DESTROY) {
                        m.window = null;
                        m.setup = null;
                        a = 0;
                        for (b = m.all_fields; a < b.length;) c =
                            b[a], ++a, c.refresh_func = null;
                        m.all_fields = null;
                        m.edit_fields = null;
                        m.view_fields = null;
                        m.array = null;
                        m.callbacks = null
                    }
                };
                m.setup = k;
                m.window = a;
                m.controls_added = !1;
                m.all_fields = [];
                m.edit_fields = [];
                m.view_fields = [];
                m.array = null;
                m.callbacks = new us;
                return m
            };
            v.close = function(a) {
                null != a.window && u.closeWindowBox(a.window.window_box)
            };
            v.addControlsToDebugWindow = function(a, b, c, d) {
                var e = a.window,
                    f = a.setup,
                    h = 0,
                    k = 0;
                h = 0;
                b && ++k;
                c && ++k;
                d && ++k;
                h = f.height + f.padding;
                h = (f.width + 2 * f.padding - f.padding * (k - 1) - h) / k;
                k = u.createHBox(!1,
                    !1, 0, 0, 0);
                b && (b = u.createButton("Ok", h, f.height, f.padding, function() {
                    v.applyChanges(a);
                    u.closeWindowBox(e.window_box)
                }), u.addToBox(k, b));
                c && (c = u.createButton("Apply", h, f.height, f.padding, function() {
                    v.applyChanges(a);
                    v.refreshAllFields(a)
                }), u.addToBox(k, c));
                d && (d = u.createButton("Refresh", h, f.height, f.padding, function() {
                    v.refreshAllFields(a)
                }), u.addToBox(k, d));
                var m = u.createButtonWithoutText(f.height, f.height, f.padding, null);
                m.button.click_callback = function() {
                    a.always_refresh_views = !a.always_refresh_views;
                    u.drawCheckbox(a.always_refresh_views, m.graphics.get_graphics(), m.size);
                    v.refreshListeners(a)
                };
                m.graphics = new S;
                m.sprite.addChild(m.graphics);
                u.setButtonColorsToLight(m.button);
                u.drawCheckbox(a.always_refresh_views, m.graphics.get_graphics(), m.size);
                u.addToBox(k, m);
                u.addToBox(e.window_box.bottom_container, k);
                a.controls_added = !0
            };
            v.applyChanges = function(a) {
                null != a.callbacks.before_apply && a.callbacks.before_apply(a);
                for (var b, c = 0, d = a.edit_fields; c < d.length;) {
                    var e = d[c];
                    ++c;
                    null != e.value && (b = T.field(e.object,
                        e.field_name), e.value != b && (null != e.before_apply && e.before_apply(e), null != a.callbacks.debug_field_before_apply && a.callbacks.debug_field_before_apply(e), T.setField(e.object, e.field_name, e.value), null != e.after_apply && e.after_apply(e), null != a.callbacks.debug_field_after_apply && a.callbacks.debug_field_after_apply(e)))
                }
                if (null != a.array && a.array.editable) {
                    b = a.array.fields;
                    c = a.array.values;
                    e = 0;
                    for (var f = b.length; e < f;) {
                        var h = e++;
                        d = b[h];
                        h < c.length && (null != d.before_apply && d.before_apply(d), null != a.callbacks.debug_field_before_apply &&
                            a.callbacks.debug_field_before_apply(d), c[h] = d.value, null != d.after_apply && d.after_apply(d), null != a.callbacks.debug_field_after_apply && a.callbacks.debug_field_after_apply(d))
                    }
                }
                null != a.callbacks.after_apply && a.callbacks.after_apply(a)
            };
            v.getWindowSetupCopy = function(a) {
                var b = new Np;
                b.container = a.container;
                b.padding = a.padding;
                b.width = a.width;
                b.height = a.height;
                b.slider_size = a.slider_size;
                b.title_button_width = a.title_button_width;
                b.max_content_width = a.max_content_width;
                b.max_content_height = a.max_content_height;
                b.internal_scrollable_max_height = a.internal_scrollable_max_height;
                return b
            };
            v.addEdit = function(a, b, c, d) {
                null == d && (d = "");
                "" == d && (d = c);
                b = v.createDebugField(!0, a, a.setup, a.setup.width, d, b, c, T.field(b, c));
                a.all_fields.push(b);
                a.edit_fields.push(b);
                u.addToWindowBox(a.window, b.element);
                return b
            };
            v.addInstanceEdit = function(a, b, c, d, e, f) {
                var h = Q.getInstanceFields(Q.getClass(b)),
                    k = [];
                k.push(new Ai(Ta, "length"));
                k.push(new Ai(Array, "length"));
                k.push(new Ai(Ci, "blendShader"));
                k.push(new Ai(S, "blendShader"));
                for (var m = 0; m < k.length;) {
                    var r = k[m];
                    ++m;
                    E.is(b, r.object) && la.remove(h, r.field)
                }
                m = b instanceof Array && null == b.__enum__;
                if (!m) {
                    r = !1;
                    for (var I = 0, g = a.setup.custom_fields; I < g.length;) {
                        var Mb = g[I];
                        ++I;
                        E.is(b, Mb.object_type) && (h = Mb.fields, r = !0)
                    }
                    r || (h = v.sortFieldsByTypeAndName(b, h));
                    for (r = 0; r < h.length;) I = h[r], ++r, T.isFunction(T.field(b, I)) || v.addEdit(a, b, I, I)
                }
                for (h = 0; h < k.length;) r = k[h], ++h, E.is(b, r.object) && v.addView(a, b, r.field);
                m && (a.array = new Op, a.array.name = c, a.array.editable = !0, a.array.values = aa.__cast(b,
                    Array), a.array.fields = [], a.array.additional = [], a.array.array_element_edit_custom_func = f, v.addArrayElements(a, d, e))
            };
            v.addView = function(a, b, c, d, e) {
                null == e && (e = 0);
                null == d && (d = "");
                "" == d && (d = c);
                b = v.createDebugField(!1, a, a.setup, a.setup.width, d, b, c, T.field(b, c), e);
                a.all_fields.push(b);
                a.view_fields.push(b);
                u.addToWindowBox(a.window, b.element);
                return b
            };
            v.addInstanceView = function(a, b, c) {
                var d = Q.getInstanceFields(Q.getClass(b)),
                    e = [];
                e.push(new Ai(Ci, "blendShader"));
                e.push(new Ai(Ci, "textSnapshot"));
                e.push(new Ai(S,
                    "blendShader"));
                for (var f = 0; f < e.length;) {
                    var h = e[f];
                    ++f;
                    E.is(b, h.object) && la.remove(d, h.field)
                }
                d = v.sortFieldsByTypeAndName(b, d);
                for (e = 0; e < d.length;) f = d[e], ++e, T.isFunction(T.field(b, f)) || v.addView(a, b, f);
                b instanceof Array && null == b.__enum__ && (a.array = new Op, a.array.name = c, a.array.editable = !1, a.array.values = aa.__cast(b, Array), a.array.fields = [], v.addArrayElements(a))
            };
            v.addArrayElements = function(a, b, c) {
                var d = a.array.values,
                    e = 0;
                a.callbacks.array_add_func = b;
                a.callbacks.array_remove_func = c;
                for (var f = 0; f <
                    d.length;) {
                    var h = d[f];
                    ++f;
                    var k = [e];
                    var m = a.array.name + "[" + a.array.fields.length + "]";
                    if (null != b || null != c) {
                        var r = a.setup.width,
                            I = u.createHBox(!1, !1, a.setup.width, a.setup.height, 0);
                        if (null != b) {
                            var g = u.createButton(" +", a.setup.height, a.setup.height, a.setup.padding, function(c) {
                                return function() {
                                    b(c[0]);
                                    v.refreshAllFields(a)
                                }
                            }(k));
                            r -= a.setup.height + 2;
                            u.addToBox(I, g)
                        }
                        null != c && (k = u.createButton(" -", a.setup.height, a.setup.height, a.setup.padding, function(b) {
                                return function() {
                                    c(b[0]);
                                    v.refreshAllFields(a)
                                }
                            }(k)),
                            r -= a.setup.height + 2, u.addToBox(I, k));
                        m = v.createDebugField(a.array.editable, a, a.setup, r, m, a.array.values, m, h);
                        m.custom_instance_edit = a.array.array_element_edit_custom_func;
                        u.addToBox(I, m.element);
                        a.array.additional.push(I);
                        u.addToWindowBox(a.window, I)
                    } else m = v.createDebugField(a.array.editable, a, a.setup, a.setup.width, m, a.array.values, m, h), m.custom_instance_edit = a.array.array_element_edit_custom_func, u.addToWindowBox(a.window, m.element);
                    a.all_fields.push(m);
                    a.array.fields.push(m);
                    ++e
                }
            };
            v.removeArrayElements =
                function(a) {
                    for (var b = 0, c = a.array.fields; b < c.length;) {
                        var d = c[b];
                        ++b;
                        la.remove(a.all_fields, d);
                        u.destroyElement(d.element)
                    }
                    b = 0;
                    for (c = a.array.additional; b < c.length;) d = c[b], ++b, u.destroyElement(d);
                    a.array.additional = [];
                    a.array.fields = []
                };
            v.sortFieldsByTypeAndName = function(a, b) {
                if (E.is(a, Ta)) return -1 == b.indexOf("length") ? ["x", "y"] : ["x", "y", "length"];
                for (var c = [], d = [], e = [], f = [], h = [], k = [], m, r = 0; r < b.length;) {
                    var I = b[r];
                    ++r;
                    m = T.field(a, I);
                    if (T.isFunction(m)) k.push(I);
                    else {
                        var g = Q["typeof"](m);
                        switch (Q.enumIndex(g)) {
                            case 1:
                                d.push(I);
                                break;
                            case 2:
                                e.push(I);
                                break;
                            case 3:
                                c.push(I);
                                break;
                            case 7:
                                h.push(I);
                                break;
                            default:
                                "string" == typeof m ? f.push(I) : k.push(I)
                        }
                    }
                }
                b = function(a, b) {
                    a = a.toLowerCase();
                    b = b.toLowerCase();
                    return a < b ? -1 : a > b ? 1 : 0
                };
                a = [];
                c.sort(b);
                for (m = 0; m < c.length;) r = c[m], ++m, a.push(r);
                h.sort(b);
                for (c = 0; c < h.length;) m = h[c], ++c, a.push(m);
                d.sort(b);
                for (h = 0; h < d.length;) c = d[h], ++h, a.push(c);
                e.sort(b);
                for (d = 0; d < e.length;) h = e[d], ++d, a.push(h);
                f.sort(b);
                for (e = 0; e < f.length;) d = f[e], ++e, a.push(d);
                k.sort(b);
                for (f = 0; f < k.length;) e = k[f], ++f, a.push(e);
                return a
            };
            v.removeAndDestroyDebugField = function(a, b) {
                u.destroyElement(b.element);
                la.remove(a.all_fields, b);
                la.remove(a.edit_fields, b);
                la.remove(a.view_fields, b)
            };
            v.refreshDebugFields = function(a) {
                for (var b, c = 0; c < a.length;) {
                    var d = a[c];
                    ++c;
                    b = T.field(d.object, d.field_name);
                    d.value = b;
                    null != d.refresh_func && d.refresh_func()
                }
            };
            v.refreshArrayDebugFields = function(a, b) {
                for (var c = 0, d = a.length; c < d;) {
                    var e = c++;
                    a[e].value = b[e];
                    null != a[e].refresh_func && a[e].refresh_func()
                }
            };
            v.refreshChangedDebugFields = function(a) {
                for (var b,
                        c = 0; c < a.length;) {
                    var d = a[c];
                    ++c;
                    b = T.field(d.object, d.field_name);
                    d.value != b && (d.value = b, null != d.refresh_func && d.refresh_func());
                    d.is_object && null != d.refresh_func && d.refresh_func()
                }
            };
            v.markChangedDebugFields = function(a) {
                for (var b, c = 0; c < a.length;) {
                    var d = a[c];
                    ++c;
                    null != d.name_text && (b = T.field(d.object, d.field_name), d.value != b ? 13772832 != d.name_text.text.format.color && (d.name_text.text.format.color = 13772832, u.refreshTextGraphics(d.name_text)) : 1651777 != d.name_text.text.format.color && (d.name_text.text.format.color =
                        1651777, u.refreshTextGraphics(d.name_text)))
                }
            };
            v.refreshChangedArrayDebugFields = function(a, b) {
                if (null != a.array) {
                    var c = a.array.values;
                    if (c.length != b.length) v.removeArrayElements(a), v.addArrayElements(a, a.callbacks.array_add_func, a.callbacks.array_remove_func), v.resizeAndDraw(a);
                    else
                        for (var d, e = 0, f = b.length; e < f;) d = e++, a = b[d], d = c[d], a.value != d && (a.value = d, null != a.refresh_func && a.refresh_func()), a.is_object && null != a.refresh_func && a.refresh_func()
                }
            };
            v.markChangedArrayDebugFields = function(a, b) {
                if (null !=
                    a.array)
                    if (a = a.array.values, a.length != b.length)
                        for (a = 0; a < b.length;) {
                            var c = b[a];
                            ++a;
                            null != c.name_text && 13772832 != c.name_text.text.format.color && (c.name_text.text.format.color = 13772832, u.refreshTextGraphics(c.name_text))
                        } else
                            for (var d, e = 0, f = b.length; e < f;) d = e++, c = b[d], null != c.name_text && (d = a[d], c.value != d ? 13772832 != c.name_text.text.format.color && (c.name_text.text.format.color = 13772832, u.refreshTextGraphics(c.name_text)) : 1651777 != c.name_text.text.format.color && (c.name_text.text.format.color = 1651777,
                                u.refreshTextGraphics(c.name_text)))
            };
            v.parseFloat = function(a) {
                a = E.parseFloat(a);
                return isNaN(a) ? 0 : a
            };
            v.createDebugField = function(a, b, c, d, e, f, h, k, m) {
                null == m && (m = 0);
                var r = new ss;
                r.object = f;
                r.field_name = h;
                r.value = k;
                r.is_object = !1;
                r.accuracy_decimals = m;
                f = c.height;
                m = c.padding;
                var I = Q["typeof"](k);
                switch (Q.enumIndex(I)) {
                    case 1:
                    case 2:
                        m = u.createHBox(!1, !1, d, f, m);
                        e = u.createText(e, bc.LEFT, d / 2, f, 0);
                        if (a) {
                            var g = u.createTextInput(k, bc.LEFT, d / 2, f, 0, null);
                            g.text.changed_callback = function(a) {
                                r.value = v.parseFloat(a);
                                null != r.set_new_value && r.set_new_value(r)
                            };
                            r.name_text = e;
                            r.value_text = g
                        } else g = u.createText(k, bc.LEFT, d / 2, f, 0);
                        u.addToBox(m, e);
                        u.addToBox(m, g);
                        r.refresh_func = function() {
                            if (0 != r.accuracy_decimals) {
                                var a = r.value;
                                a = Math.round(a * r.accuracy_decimals) / r.accuracy_decimals;
                                g.text.field.set_text(null == a ? "null" : "" + a)
                            } else g.text.field.set_text(E.string(r.value));
                            u.refreshTextGraphics(g)
                        };
                        r.element = m;
                        break;
                    case 3:
                        if (a) {
                            var Mb = u.createCheckBox(e, aa.__cast(k, Pp), d / 2 + f, f, m, function(a) {
                                r.value = a;
                                null != r.set_new_value &&
                                    r.set_new_value(r)
                            });
                            r.name_text = Mb.check_box.title_text;
                            u.removeMask(Mb.check_box.all);
                            u.removeBackground(Mb.check_box.all);
                            r.refresh_func = function() {
                                var a = Mb.check_box.check_button;
                                Mb.check_box.value = aa.__cast(r.value, Pp);
                                u.drawCheckbox(aa.__cast(r.value, Pp), a.graphics.get_graphics(), a.size)
                            };
                            r.element = Mb
                        } else {
                            m = u.createHBox(!1, !1, d, f, m);
                            e = u.createText(e, bc.LEFT, d / 2, f, 0);
                            var l = u.createText(k, bc.LEFT, d / 2, f, 0);
                            u.addToBox(m, e);
                            u.addToBox(m, l);
                            r.refresh_func = function() {
                                l.text.field.set_text(E.string(r.value));
                                u.refreshTextGraphics(l)
                            };
                            r.element = m
                        }
                        break;
                    case 7:
                        var mb = I[2];
                        m = u.createHBox(!1, !1, d, f, m);
                        e = u.createText(e, bc.LEFT, d / 2, f, 0);
                        u.addToBox(m, e);
                        I = Q.getEnumConstructs(mb);
                        if (a) {
                            r.name_text = e;
                            var dj = u.createSelectBox(E.string(k), I, d / 2, f, c.internal_scrollable_max_height, c.slider_size, 0, null);
                            dj.select_box.select_callback = function(a) {
                                r.value = Q.createEnum(mb, aa.__cast(a, String));
                                null != r.set_new_value && r.set_new_value(r)
                            };
                            u.addToBox(m, dj);
                            r.refresh_func = function() {
                                dj.select_box.selected_value = r.value;
                                dj.select_box.selected_text.text.field.set_text(E.string(r.value));
                                u.refreshTextGraphics(dj.select_box.selected_text)
                            }
                        } else {
                            var n = u.createText(E.string(k), bc.LEFT, d / 2, f, 0);
                            r.refresh_func = function() {
                                n.text.field.set_text(E.string(r.value));
                                u.refreshTextGraphics(n)
                            };
                            u.addToBox(m, n)
                        }
                        r.element = m;
                        break;
                    default:
                        if ("string" == typeof k) {
                            m = u.createHBox(!1, !1, d, f, m);
                            e = u.createText(e, bc.LEFT, d / 2, f, 0);
                            if (a) {
                                var pf = u.createTextInput(k, bc.LEFT, d / 2, f, 0, null);
                                pf.text.changed_callback = function(a) {
                                    r.value = a;
                                    null != r.set_new_value && r.set_new_value(r)
                                };
                                r.name_text = e;
                                r.value_text = pf
                            } else pf =
                                u.createText(k, bc.LEFT, d / 2, f, 0);
                            u.addToBox(m, e);
                            u.addToBox(m, pf);
                            r.refresh_func = function() {
                                pf.text.field.set_text(E.string(r.value));
                                u.refreshTextGraphics(pf)
                            };
                            r.element = m
                        } else {
                            r.is_object = !0;
                            m = u.createHBox(!1, !1, d, f, m);
                            e = u.createText(e, bc.LEFT, d / 2, f, 0);
                            var zb = u.getValueName(k),
                                p = u.createButton(zb, d / 2, f, 0, null);
                            p.button.click_callback = function() {
                                if (null != r.custom_instance_edit) r.custom_instance_edit(r);
                                else if (null != r.value) {
                                    var d = v.createDebugWindow(h, c.title_button_width, b.always_refresh_views,
                                        cc.DESTROY);
                                    d.setup.custom_fields = b.setup.custom_fields;
                                    if (a) {
                                        var e = !1;
                                        if (r.value instanceof Array && null == r.value.__enum__ && 0 < r.value.length && "string" == typeof r.value[0]) {
                                            var f = r.value;
                                            v.addButton(d, "add new", function() {
                                                f.splice(f.length, 0, "");
                                                v.refreshAllFields(d)
                                            });
                                            v.addInstanceEdit(d, r.value, r.field_name, function(a) {
                                                f.splice(a, 0, "")
                                            }, function(a) {
                                                la.remove(f, f[a])
                                            });
                                            e = !0
                                        }
                                        e || v.addInstanceEdit(d, r.value, r.field_name)
                                    } else v.addInstanceView(d, r.value, r.field_name);
                                    v.resizeAndDraw(d);
                                    e = v.getDefaultDebugWindowOpenPositionX(c.container,
                                        d.setup);
                                    var k = v.getDefaultDebugWindowOpenPositionY(c.container, d.setup);
                                    v.addToContainer(c.container, d, e, k);
                                    d.parent = b
                                }
                            };
                            a && (r.name_text = e, r.value_text = p);
                            u.addToBox(m, e);
                            u.addToBox(m, p);
                            r.refresh_func = function() {
                                zb = u.getValueName(k);
                                p.text.field.set_text(zb);
                                u.refreshTextGraphics(p)
                            };
                            r.element = m
                        }
                }
                return r
            };
            v.addButton = function(a, b, c) {
                var d = a.setup;
                b = u.createButton(b, d.width, d.height, d.padding, c);
                u.addToWindowBox(a.window, b);
                return b
            };
            v.addText = function(a, b, c, d) {
                null == c && (c = !1);
                null == d && (d = bc.LEFT);
                var e = a.setup;
                b = u.createText(b, d, e.width, e.height, e.padding);
                b.text.format.bold = c;
                u.addToWindowBox(a.window, b);
                return b
            };
            v.addSpace = function(a, b) {
                null == b && (b = .5);
                var c = a.setup,
                    d = new Bi;
                d.size = new Kf(c.width, c.height * b);
                d.padding = new Kg(0, 0, 0, 0);
                d.sprite = new S;
                u.addToWindowBox(a.window, d);
                return d
            };
            v.openOkCancelWindow = function(a, b, c, d, e, f, h, k) {
                var m = v.createDebugWindow(d, f, !1, cc.DESTROY);
                v.addText(m, e);
                f = m.setup.width;
                var r = m.setup.height,
                    I = m.setup.padding;
                d = u.createHBox(!1, !1, f, r, 0);
                e = u.createButton("Ok",
                    f / 2 - I / 2, r, I,
                    function() {
                        null != h && h();
                        v.close(m)
                    });
                f = u.createButton("Cancel", f / 2 - I / 2, r, I, function() {
                    null != k && k();
                    v.close(m)
                });
                u.addToBox(d, e);
                u.addToBox(d, f);
                u.addToWindowBox(m.window, d);
                v.resizeAndDraw(m);
                v.addToContainer(a, m, b, c);
                return m
            };
            v.openTextInputWindow = function(a, b, c, d, e, f, h, k) {
                var m = v.createDebugWindow(d, f, !1, cc.DESTROY);
                d = m.setup.width;
                f = m.setup.height;
                var r = m.setup.padding,
                    I = u.createTextInput(e, bc.LEFT, d, f, r, null);
                I.text.enter_callback = function(a) {
                    null != h && h(a);
                    v.close(m)
                };
                e = u.createHBox(!1,
                    !1, d, f, 0);
                var g = u.createButton("Ok", d / 2 - r / 2, f, r, function() {
                    if (null != h) {
                        var a = I.text.field.get_text();
                        h(a)
                    }
                    v.close(m)
                });
                d = u.createButton("Cancel", d / 2 - r / 2, f, r, function() {
                    null != k && k();
                    v.close(m)
                });
                u.addToWindowBox(m.window, I);
                u.addToBox(e, g);
                u.addToBox(e, d);
                u.addToWindowBox(m.window, e);
                I.text.field.setSelection(0, I.text.field.get_length());
                v.resizeAndDraw(m);
                v.addToContainer(a, m, b, c);
                a.stage.set_focus(I.text.field);
                return m
            };
            v.refreshAllFields = function(a) {
                v.refreshDebugFields(a.edit_fields);
                v.refreshDebugFields(a.view_fields);
                if (null != a.array) {
                    var b = a.array.values;
                    b.length != a.array.fields.length ? (v.removeArrayElements(a), v.addArrayElements(a, a.callbacks.array_add_func, a.callbacks.array_remove_func), v.resizeAndDraw(a)) : v.refreshArrayDebugFields(a.array.fields, b)
                }
                b = 0;
                for (a = a.all_fields; b < a.length;) {
                    var c = a[b];
                    ++b;
                    null != c.name_text && (c.name_text.text.format.color = 1651777, u.refreshTextGraphics(c.name_text))
                }
            };
            v.refreshListeners = function(a) {
                var b = function(b) {
                    if (null == a.window) a.refresh_container.removeEventListener("enterFrame",
                        a.refresh_listener_func), a.refresh_listener_func = null;
                    else if (null != a.setup.container) {
                        v.refreshChangedDebugFields(a.view_fields);
                        v.markChangedDebugFields(a.edit_fields);
                        b = 0;
                        for (var c = a.edit_fields; b < c.length;) {
                            var e = c[b];
                            ++b;
                            e.is_object && E.string(e.value) != e.value_text.text.field.get_text() && null != e.refresh_func && e.refresh_func()
                        }
                        null != a.array && (a.array.editable ? v.markChangedArrayDebugFields(a, a.array.fields) : v.refreshChangedArrayDebugFields(a, a.array.fields))
                    }
                };
                null != a.setup.container && (a.always_refresh_views ?
                    null == a.refresh_listener_func && (a.refresh_listener_func = b, a.refresh_container = a.setup.container.stage, a.refresh_container.addEventListener("enterFrame", a.refresh_listener_func)) : null != a.refresh_listener_func && (a.refresh_container.removeEventListener("enterFrame", a.refresh_listener_func), a.refresh_listener_func = null))
            };
            v.resizeAndDraw = function(a) {
                if (!a.controls_added && a.add_controls) {
                    var b = !1,
                        c = !1,
                        d = !1;
                    0 < a.edit_fields.length || null != a.array ? (a.window.window_box.close_type != cc.NONE && (b = !0), d = c = !0) : 0 <
                        a.view_fields.length && (d = !0);
                    (b || c || d) && v.addControlsToDebugWindow(a, b, c, d)
                }
                u.resizeToFitAll(a.window);
                u.draw(a.window)
            };
            v.getDefaultDebugWindowOpenPositionX = function(a, b) {
                return a.get_mouseX() - (1.5 * b.height + 2 * b.padding)
            };
            v.getDefaultDebugWindowOpenPositionY = function(a, b) {
                return a.get_mouseY() - b.height / 2
            };
            v.align = function(a, b, c, d) {
                u.alignToElement(a.window, b.window, c, d)
            };
            v.addToContainer = function(a, b, c, d) {
                b.setup.container = a;
                u.addToContainer(a, b.window, c, d);
                v.refreshListeners(b)
            };
            v.removeFromContainer =
                function(a) {
                    u.removeFromParent(a.window);
                    a.setup.container = null
                };
            var u = function() {};
            g["bikas.bikasui.BuiDo"] = u;
            u.__name__ = ["bikas", "bikasui", "BuiDo"];
            u.createBackgroundComponent = function(a, b) {
                var c = new ls;
                c.sprite = new S;
                c.color = a;
                c.line_color = b;
                c.line_thickness = 1;
                return c
            };
            u.createTextComponent = function(a, b, c) {
                var d = new zh,
                    e = new kf,
                    f = new hd;
                e.font = zh.FONT_NAME;
                e.size = 12;
                e.color = 1651777;
                f.set_text(a);
                f.set_x(0);
                f.set_y(0);
                f.set_autoSize(1);
                f.set_multiline(!1);
                f.set_selectable(!1);
                f.set_wordWrap(!1);
                f.set_defaultTextFormat(e);
                f.set_embedFonts(!0);
                f.set_antiAliasType(0);
                f.set_gridFitType(1);
                d.field = f;
                d.format = e;
                d.align = b;
                d.padding = c;
                return d
            };
            u.createTextInputComponent = function(a, b, c) {
                var d = new zh,
                    e = new kf,
                    f = new hd;
                e.font = zh.FONT_NAME;
                e.size = 12;
                e.color = 1651777;
                switch (Q.enumIndex(b)) {
                    case 0:
                        e.align = 3;
                        break;
                    case 1:
                        e.align = 4;
                        break;
                    case 2:
                        e.align = 0
                }
                f.set_text(a);
                f.set_x(0);
                f.set_y(0);
                f.set_autoSize(2);
                f.set_backgroundColor(16054256);
                f.set_multiline(!1);
                f.set_selectable(!0);
                f.set_type(1);
                f.set_wordWrap(!1);
                f.set_defaultTextFormat(e);
                f.set_embedFonts(!0);
                f.set_antiAliasType(0);
                f.set_gridFitType(1);
                d.field = f;
                d.format = e;
                d.align = b;
                d.padding = c;
                return d
            };
            u.createBlock = function(a, b, c) {
                var d = new Bi;
                d.size = new Kf(a, b);
                d.padding = new Kg(c, c, c, c);
                d.sprite = new S;
                a = new Ln;
                a.button_color_default = 9546397;
                a.button_color_over = 9546397;
                a.button_color_down = 9546397;
                a.click_callback = null;
                a.events_enabled = !1;
                d.button = a;
                return d
            };
            u.createButtonWithoutText = function(a, b, c, d) {
                var e = new Bi;
                e.size = new Kf(a, b);
                e.padding = new Kg(c,
                    c, c, c);
                e.sprite = new S;
                e.sprite.mouseChildren = !1;
                e.sprite.set_buttonMode(!0);
                e.background = u.createBackgroundComponent(4087919, 1651777);
                e.sprite.addChild(e.background.sprite);
                a = new Ln;
                a.button_color_default = 2577513;
                a.button_color_over = 9546397;
                a.button_color_down = 11649722;
                a.overed = !1;
                a.downed = !1;
                a.click_callback = d;
                e.button = a;
                return e
            };
            u.createButton = function(a, b, c, d, e) {
                b = u.createButtonWithoutText(b, c, d, e);
                b.button.text_color_default = 12898217;
                b.button.text_color_over = 15199453;
                b.button.text_color_down =
                    16054256;
                b.text = u.createTextComponent(a, bc.LEFT, u.copyPadding(zh.DEFAULT_PADDING));
                b.sprite.addChild(b.text.field);
                return b
            };
            u.createBitmapButton = function(a, b, c) {
                var d = new Bi;
                d.size = new Kf(a.get_width(), a.get_height());
                d.padding = new Kg(b, b, b, b);
                d.sprite = new S;
                d.sprite.mouseChildren = !1;
                d.sprite.set_buttonMode(!0);
                d.sprite.addChild(a);
                a = new Ln;
                a.overed = !1;
                a.downed = !1;
                a.click_callback = c;
                d.button = a;
                return d
            };
            u.createBox = function(a, b, c, d, e, f) {
                var h = new Bi;
                h.size = new Kf(d, e);
                h.padding = new Kg(f, f, f, f);
                h.sprite =
                    new S;
                b && (h.background = u.createBackgroundComponent(16054256, 1651777), h.sprite.addChild(h.background.sprite));
                b = new ms;
                b.layout_type = a;
                b.children_container = new S;
                b.children = [];
                h.sprite.addChild(b.children_container);
                c && (b.mask_sprite = new S, h.sprite.addChild(b.mask_sprite), b.children_container.set_mask(b.mask_sprite));
                h.box = b;
                return h
            };
            u.createHBox = function(a, b, c, d, e) {
                return u.createBox(Be.HBOX, a, b, c, d, e)
            };
            u.createVBox = function(a, b, c, d, e) {
                return u.createBox(Be.VBOX, a, b, c, d, e)
            };
            u.createCheckBox = function(a,
                b, c, d, e, f) {
                var h = new ns;
                h.toggle_callback = f;
                h.value = b;
                b = u.createHBox(!0, !0, c, d, e);
                a = u.createText(a, bc.LEFT, c - d, d, 0);
                d = u.createButtonWithoutText(d, d, 0, null);
                d.button.click_callback = function() {
                    h.value = !h.value;
                    u.drawCheckbox(h.value, h.check_button.graphics.get_graphics(), h.check_button.size);
                    null != h.toggle_callback && h.toggle_callback(h.value)
                };
                d.graphics = new S;
                d.sprite.addChild(d.graphics);
                u.setButtonColorsToLight(d.button);
                u.drawCheckbox(h.value, d.graphics.get_graphics(), d.size);
                h.all = b;
                h.title_text =
                    a;
                h.check_button = d;
                b.check_box = h;
                u.addToBox(b, a);
                u.addToBox(b, d);
                return b
            };
            u.createExpandBox = function(a, b, c, d, e, f) {
                var h = u.createVBox(!0, !0, 0, 0, e);
                e = u.createHBox(!0, !1, c, d, 0);
                var k = u.createButton(a, c, d, 0, null),
                    m = u.createVBox(!0, !0, 0, 0, f),
                    r = new Kf(d, d);
                k.graphics = new S;
                k.sprite.addChild(k.graphics);
                var I = function() {
                    b ? u.drawUpTriangle(k.graphics.get_graphics(), r, .3, .2, 16054256, 0, -1) : u.drawDownTriangle(k.graphics.get_graphics(), r, .3, .2, 16054256, 0, -1);
                    if (null != h.parent) {
                        for (var a = h.parent; null != a.parent;) a =
                            a.parent;
                        u.resizeToFitAll(a);
                        u.draw(a)
                    }
                    k.graphics.set_x(k.size.width - r.width)
                };
                I();
                k.button.click_callback = function() {
                    b ? (u.remove(m), b = !1) : (u.addToBox(h, m), b = !0);
                    I()
                };
                u.addToBox(e, k);
                u.addToBox(h, e);
                b && u.addToBox(h, m);
                a = new os;
                a.all = h;
                a.title_button = k;
                a.contents = m;
                h.expand_box = a;
                return h
            };
            u.createText = function(a, b, c, d, e) {
                var f = new Bi;
                f.size = new Kf(c, d);
                f.padding = new Kg(e, e, e, e);
                f.sprite = new S;
                f.text = u.createTextComponent(a, b, u.copyPadding(zh.DEFAULT_PADDING));
                f.sprite.addChild(f.text.field);
                return f
            };
            u.createTextInput = function(a, b, c, d, e, f) {
                var h = new Bi;
                h.size = new Kf(c, d);
                h.padding = new Kg(e, e, e, e);
                h.sprite = new S;
                h.background = u.createBackgroundComponent(16711422, 1651777);
                h.sprite.addChild(h.background.sprite);
                h.text = u.createTextInputComponent(a, b, new Kg(0, 4, 2, 0));
                h.text.field.set_width(c);
                h.text.field.set_height(d + 4);
                h.text.changed_callback = f;
                h.text.change_event = function(a) {
                    null != h.text.changed_callback && h.text.changed_callback(h.text.field.get_text())
                };
                h.text.field.addEventListener("change", h.text.change_event);
                h.text.keyboard_event = function(a) {
                    null != h.text.enter_callback && 13 == a.keyCode && h.text.enter_callback(h.text.field.get_text())
                };
                h.text.field.addEventListener("keyDown", h.text.keyboard_event);
                h.sprite.addChild(h.text.field);
                return h
            };
            u.createSelectBox = function(a, b, c, d, e, f, h, k) {
                var m = new ps;
                m.selected_value = a;
                var r = u.createVBox(!0, !0, c, d, h),
                    I = u.createHBox(!0, !1, c, d, 0),
                    g = u.createText(u.getValueName(a), bc.LEFT, c - d, d, 0),
                    Mb = u.createVerticalScrollBox(0, 0, c, e, f, h);
                a = [];
                var l = u.createButtonWithoutText(d, d, 0,
                    null);
                l.graphics = new S;
                l.sprite.addChild(l.graphics);
                u.drawDownTriangle(l.graphics.get_graphics(), l.size, .3, .2, 16054256, 0, -1);
                var mb = !1;
                for (e = 0; e < b.length;) f = [b[e]], ++e, a.push(u.createButton(u.getValueName(f[0]), c - 2 * h, d, 0, function(a) {
                        return function() {
                            mb = !1;
                            m.selected_value = a[0];
                            g.text.field.set_text(u.getValueName(a[0]));
                            u.drawDownTriangle(l.graphics.get_graphics(), l.size, .3, .2, 16054256, 0, -1);
                            u.remove(Mb);
                            u.draw(I);
                            null != m.select_callback && m.select_callback(m.selected_value)
                        }
                    }(f))), a[a.length - 1].padding.left =
                    h, a[a.length - 1].padding.right = h, u.addToScrollBox(Mb, a[a.length - 1]);
                0 < a.length && (a[0].padding.top = h, a[a.length - 1].padding.bottom = h);
                l.button.click_callback = function() {
                    if (null != r.sprite.stage)
                        if (mb) mb = !1, u.drawDownTriangle(l.graphics.get_graphics(), l.size, .3, .2, 16054256, 0, -1), u.remove(Mb), u.draw(l);
                        else {
                            mb = !0;
                            for (var a = r; null != a.parent;) a = a.parent;
                            var b = I.sprite.get_x(),
                                c = I.sprite.get_y() + I.size.height;
                            b = u.convertPositionToLocal(I.sprite, new Ta(b, c), a.sprite);
                            u.resizeToFitAll(Mb);
                            u.drawUpTriangle(l.graphics.get_graphics(),
                                l.size, .3, .2, 16054256, 0, -1);
                            u.draw(l);
                            u.draw(Mb);
                            u.addToContainer(a.sprite, Mb, b.x, b.y)
                        }
                };
                u.addToBox(I, g);
                u.addToBox(I, l);
                u.addToBox(r, I);
                m.select_callback = k;
                m.all = r;
                m.selected_text = g;
                m.scroll_box = Mb;
                m.contents = Mb.scroll_box.contents;
                r.select_box = m;
                return r
            };
            u.createVerticalScrollBox = function(a, b, c, d, e, f) {
                var h = new qs;
                f = u.createHBox(!0, !0, a, b, f);
                a = u.createVBox(!1, !0, a, b, 0);
                a.box.layout_type = Be.VBOX;
                var k = u.createBox(Be.NONE, !0, !1, e, b, 0),
                    m = u.createButtonWithoutText(e - 4, b, 0, null),
                    r = u.createButtonWithoutText(e,
                        e, 0, null),
                    I = u.createButtonWithoutText(e, e, 0, null);
                r.graphics = new S;
                u.drawUpTriangle(r.graphics.get_graphics(), r.size, .3, .2, 16054256, 0, -1);
                r.sprite.addChild(r.graphics);
                I.graphics = new S;
                u.drawDownTriangle(I.graphics.get_graphics(), I.size, .3, .2, 16054256, 0, -1);
                I.sprite.addChild(I.graphics);
                m.sprite.set_x(2);
                var g = 0,
                    l = null,
                    Ba = null,
                    mb = Ba = function(a) {
                        if (null == m.sprite) l.removeEventListener("enterFrame", Ba), l = null;
                        else {
                            m.sprite.set_y(m.sprite.parent.get_mouseY() - g);
                            a = h.right_box.size.height - r.size.height -
                                I.size.height - 2 * h.slider_padding;
                            var b = r.size.height + h.slider_padding,
                                c = b + a - m.size.height;
                            m.sprite.set_y(u.clamp(m.sprite.get_y(), b, c));
                            a = (m.sprite.get_y() - b) / (a - m.size.height);
                            h.contents.sprite.set_y(-(h.contents.size.height - h.max_size.height) * a)
                        }
                    };
                m.button.down_callback = function() {
                    null == l && (g = m.sprite.parent.get_mouseY() - m.sprite.get_y(), l = m.sprite.stage, l.addEventListener("enterFrame", mb))
                };
                m.button.up_callback = function() {
                    null != l && (l.removeEventListener("enterFrame", mb), l = null)
                };
                var n = function(a) {
                    var b =
                        h.contents.sprite;
                    b.set_y(b.get_y() + a);
                    a = h.max_size.height - h.contents.size.height;
                    h.contents.sprite.set_y(u.clamp(h.contents.sprite.get_y(), a, 0));
                    a = h.right_box.size.height - r.size.height - I.size.height - 2 * h.slider_padding;
                    b = r.size.height + h.slider_padding;
                    var c = h.contents.size.height - h.max_size.height;
                    c = -h.contents.sprite.get_y() / c;
                    m.sprite.set_y(c * (a - m.size.height) + b)
                };
                r.button.click_callback = function() {
                    n(h.click_scroll_height)
                };
                I.button.click_callback = function() {
                    n(-h.click_scroll_height)
                };
                u.addToBox(k,
                    m);
                u.addToBox(k, r);
                u.addToBox(k, I);
                u.addToBox(f, a);
                h.max_size = new Kf(c, d);
                h.slider_padding = 2;
                h.click_scroll_height = r.size.height;
                h.all = f;
                h.contents = a;
                h.right_box = k;
                h.right_slider = m;
                h.right_up_button = r;
                h.right_down_button = I;
                f.scroll_box = h;
                return f
            };
            u.createWindowBox = function(a, b, c, d, e, f, h, k, m) {
                var r = new rs,
                    I = u.createVBox(!0, !0, 0, 0, k),
                    g = u.createHBox(!1, !1, 0, c, 0),
                    l = u.createButtonWithoutText(c, c, k, null),
                    Ba = u.createButton(a, d, c, k, null);
                Ba.text.align = bc.CENTER;
                var mb = u.createVBox(!1, !1, 0, 0, 0);
                a = u.createVerticalScrollBox(0,
                    0, e, f, h, k);
                l.graphics = new S;
                l.sprite.addChild(l.graphics);
                u.addToBox(g, l);
                u.addToBox(g, Ba);
                e = null;
                b != cc.NONE && (r.opened = !0, e = u.createButtonWithoutText(c, c, k, null), u.addToBox(g, e), e.graphics = new S, e.sprite.addChild(e.graphics), u.drawCross(e.graphics.get_graphics(), e.size, .2, 16054256, 1), e.button.click_callback = function() {
                    r.opened && u.closeWindowBox(r)
                });
                r.expanded = !0;
                var n = function() {
                    r.expanded ? u.drawLine(l.graphics.get_graphics(), l.size, .15, 16054256, 1) : u.drawPlus(l.graphics.get_graphics(), l.size, .2,
                        16054256, 1)
                };
                l.button.click_callback = function() {
                    r.expanded ? (u.remove(mb), r.expanded = !1) : (u.addToBox(I, mb), r.expanded = !0);
                    u.resizeToFitAll(I);
                    u.draw(I);
                    n()
                };
                n();
                var p = new Ta(0, 0),
                    pf = null,
                    zb = null,
                    x = zb = function(a) {
                        null == I.sprite ? (pf.removeEventListener("enterFrame", zb), pf = null) : (I.sprite.set_x(I.sprite.parent.get_mouseX() - p.x), I.sprite.set_y(I.sprite.parent.get_mouseY() - p.y))
                    };
                Ba.button.down_callback = function() {
                    var a = I.sprite.parent.get_mouseX(),
                        b = I.sprite.get_x();
                    p.x = a - b;
                    a = I.sprite.parent.get_mouseY();
                    b = I.sprite.get_y();
                    p.y = a - b;
                    pf = Ba.sprite.stage;
                    pf.addEventListener("enterFrame", x);
                    I.sprite.parent.setChildIndex(I.sprite, I.sprite.parent.get_numChildren() - 1)
                };
                Ba.button.up_callback = function() {
                    pf.removeEventListener("enterFrame", x);
                    pf = null
                };
                u.addToBox(mb, a);
                u.addToBox(I, g);
                u.addToBox(I, mb);
                r.close_type = b;
                b = l.padding.left + l.size.width + u.max(l.padding.right, Ba.padding.left);
                r.min_width = b + d;
                r.min_width = null != e ? r.min_width + (u.max(Ba.padding.right, e.padding.left) + e.size.width + e.padding.right) : r.min_width +
                    Ba.padding.right;
                r.all = I;
                r.title_hbox = g;
                r.minimize_button = l;
                r.title_button = Ba;
                r.close_button = e;
                r.bottom_container = mb;
                r.scroll_box = a;
                r.contents = a.scroll_box.contents;
                r.close_callback = m;
                I.window_box = r;
                return I
            };
            u.destroyElement = function(a) {
                u.removeFromParent(a);
                null != a.button && null != a.button.button_event && u.removeMouseListenersFromButton(a);
                if (null != a.box) {
                    for (var b = 0, c = a.box.children.slice(); b < c.length;) {
                        var d = c[b];
                        ++b;
                        u.destroyElement(d)
                    }
                    a.box.children = null
                }
                null != a.button && (a.button.click_callback =
                    null);
                null != a.text && (1 == a.text.field.get_type() && (a.text.changed_callback = null, a.text.field.removeEventListener("change", a.text.change_event), a.text.field.removeEventListener("keyDown", a.text.keyboard_event)), a.sprite.removeChild(a.text.field), a.text.format = null, a.text.field = null);
                null != a.background && a.sprite.removeChild(a.background.sprite);
                null != a.box && (null != a.box.mask_sprite && (a.sprite.removeChild(a.box.mask_sprite), a.box.children_container.set_mask(null), a.box.mask_sprite = null), a.sprite.removeChild(a.box.children_container),
                    a.box.children_container = null);
                null != a.graphics && a.sprite.removeChild(a.graphics);
                a.size = null;
                a.padding = null;
                a.sprite = null;
                a.parent = null;
                a.background = null;
                a.box = null;
                a.button = null;
                a.check_box = null;
                a.expand_box = null;
                a.graphics = null;
                a.scroll_box = null;
                a.text = null;
                a.scroll_box = null;
                a.select_box = null;
                a.window_box = null
            };
            u.addToBox = function(a, b) {
                null != a.sprite.stage && u.addButtonListeners(a.sprite.stage, b);
                b.parent = a;
                a.box.children.push(b);
                a.box.children_container.addChild(b.sprite)
            };
            u.insertToBox = function(a,
                b, c) {
                null != a.sprite.stage && u.addButtonListeners(a.sprite.stage, b);
                b.parent = a;
                a.box.children.splice(c, 0, b);
                a.box.children_container.addChildAt(b.sprite, c)
            };
            u.addToExpandBox = function(a, b) {
                u.addToBox(a.expand_box.contents, b)
            };
            u.addToScrollBox = function(a, b) {
                u.addToBox(a.scroll_box.contents, b)
            };
            u.addToWindowBox = function(a, b) {
                u.addToBox(a.window_box.contents, b)
            };
            u.addToContainer = function(a, b, c, d) {
                null != a.stage && (u.addButtonListeners(a.stage, b), b.top_mouse_up_event = function(a) {
                    var c = null;
                    c = function(a, b) {
                        if (null !=
                            b.box)
                            for (var d = 0, e = b.box.children; d < e.length;) {
                                var f = e[d];
                                ++d;
                                c(a, f)
                            }
                        null != b.button && null != b.button.button_event && b.button.button_event(a)
                    };
                    c(a, b)
                }, a.stage.addEventListener("mouseUp", b.top_mouse_up_event));
                b.sprite.set_x(c);
                b.sprite.set_y(d);
                a.addChild(b.sprite)
            };
            u.closeWindowBox = function(a) {
                a.close_type != cc.CONFIRM && null != a.close_callback && a.close_callback();
                switch (Q.enumIndex(a.close_type)) {
                    case 1:
                        a.all.sprite.set_visible(!1);
                        a.opened = !1;
                        break;
                    case 2:
                        u.remove(a.all);
                        a.opened = !1;
                        break;
                    case 3:
                        u.destroyElement(a.all);
                        a.opened = !1;
                        break;
                    case 4:
                        var b = !1;
                        null != a.confirm_show_condition && a.confirm_show_condition() && (b = !0, v.openOkCancelWindow(a.all.sprite.parent, 0, 0, "Confirm", a.confirm_text, 250, function() {
                            null != a.close_callback && a.close_callback();
                            u.destroyElement(a.all);
                            a.opened = !1;
                            null != a.confirm_callback && a.confirm_callback()
                        }, function() {}));
                        b || (null != a.close_callback && a.close_callback(), u.destroyElement(a.all), a.opened = !1, null != a.confirm_callback && a.confirm_callback())
                }
            };
            u.removeBackground = function(a) {
                a.sprite.removeChild(a.background.sprite);
                a.background = null
            };
            u.removeMask = function(a) {
                a.sprite.removeChild(a.box.mask_sprite);
                a.box.children_container.set_mask(null);
                a.box.mask_sprite = null
            };
            u.removeFromParent = function(a) {
                null != a.parent ? (la.remove(a.parent.box.children, a), a.parent.box.children_container.removeChild(a.sprite)) : null != a.sprite.parent && (a.sprite.stage.removeEventListener("mouseUp", a.top_mouse_up_event), a.top_mouse_up_event = null, a.sprite.parent.removeChild(a.sprite))
            };
            u.remove = function(a) {
                u.removeFromParent(a);
                u.removeButtonListeners(a)
            };
            u.addButtonListeners = function(a, b) {
                if (null != b.box)
                    for (var c = 0, d = b.box.children; c < d.length;) {
                        var e = d[c];
                        ++c;
                        u.addButtonListeners(a, e)
                    }
                null != b.button && null == b.button.button_event && u.addMouseEventListenersToButton(b, a)
            };
            u.removeButtonListeners = function(a) {
                if (null != a.box)
                    for (var b = 0, c = a.box.children; b < c.length;) {
                        var d = c[b];
                        ++b;
                        u.removeButtonListeners(d)
                    }
                null != a.button && null != a.button.button_event && u.removeMouseListenersFromButton(a)
            };
            u.addMouseEventListenersToButton = function(a, b) {
                a.button.events_enabled &&
                    (a.button.button_event = function(b) {
                        if ("mouseUp" == b.type)
                            if (a.button.downed) a.button.downed = !1, null != a.button.up_callback && a.button.up_callback();
                            else return;
                        else "mouseDown" == b.type ? (a.button.downed = !0, null != a.button.down_callback && a.button.down_callback()) : "mouseOut" == b.type ? (a.button.overed = !1, null != a.button.out_callback && a.button.out_callback()) : "mouseOver" == b.type ? (a.button.overed = !0, null != a.button.over_callback && a.button.over_callback()) : "click" == b.type && null != a.button.click_callback && a.button.click_callback();
                        u.draw(a)
                    }, b = a.button.button_event, a.sprite.addEventListener("mouseOver", b), a.sprite.addEventListener("mouseOut", b), a.sprite.addEventListener("mouseDown", b), a.sprite.addEventListener("click", b))
            };
            u.removeMouseListenersFromButton = function(a) {
                if (null != a.button.button_event) {
                    var b = a.button.button_event;
                    a.sprite.removeEventListener("mouseOver", b);
                    a.sprite.removeEventListener("mouseOut", b);
                    a.sprite.removeEventListener("mouseDown", b);
                    a.sprite.removeEventListener("click", b);
                    a.button.button_event = null;
                    a.button.downed = !1;
                    a.button.overed = !1
                }
            };
            u.setText = function(a, b) {
                a.text.field.set_text(b)
            };
            u.setButtonColorsToLight = function(a) {
                a.button_color_default = 16711422;
                a.button_color_over = 11649722;
                a.button_color_down = 9546397;
                a.text_color_default = 1651777;
                a.text_color_over = 4087919;
                a.text_color_down = 1651777
            };
            u.getTopRightPosition = function(a) {
                return new Ta(a.sprite.get_x() + a.size.width, a.sprite.get_y())
            };
            u.alignToElement = function(a, b, c, d) {
                switch (Q.enumIndex(d)) {
                    case 0:
                        a.sprite.set_x(b.sprite.get_x() - a.size.width - c);
                        a.sprite.set_y(b.sprite.get_y());
                        break;
                    case 1:
                        a.sprite.set_x(b.sprite.get_x() - a.size.width - c);
                        a.sprite.set_y(b.sprite.get_y() + b.size.height / 2 - a.size.height / 2);
                        break;
                    case 2:
                        a.sprite.set_x(b.sprite.get_x() - a.size.width - c);
                        a.sprite.set_y(b.sprite.get_y() + b.size.height - a.size.height);
                        break;
                    case 3:
                        a.sprite.set_x(b.sprite.get_x() + b.size.width + c);
                        a.sprite.set_y(b.sprite.get_y());
                        break;
                    case 4:
                        a.sprite.set_x(b.sprite.get_x() + b.size.width + c);
                        a.sprite.set_y(b.sprite.get_y() + b.size.height / 2 - a.size.height / 2);
                        break;
                    case 5:
                        a.sprite.set_x(b.sprite.get_x() +
                            b.size.width + c);
                        a.sprite.set_y(b.sprite.get_y() + b.size.height - a.size.height);
                        break;
                    case 6:
                        a.sprite.set_x(b.sprite.get_x());
                        a.sprite.set_y(b.sprite.get_y() - a.size.height - c);
                        break;
                    case 7:
                        a.sprite.set_x(b.sprite.get_x() + b.size.width / 2 - a.size.width / 2);
                        a.sprite.set_y(b.sprite.get_y() - a.size.height - c);
                        break;
                    case 8:
                        a.sprite.set_x(b.sprite.get_x() + b.size.width - a.size.width);
                        a.sprite.set_y(b.sprite.get_y() - a.size.height - c);
                        break;
                    case 9:
                        a.sprite.set_x(b.sprite.get_x());
                        a.sprite.set_y(b.sprite.get_y() + b.size.height +
                            c);
                        break;
                    case 10:
                        a.sprite.set_x(b.sprite.get_x() + b.size.width / 2 - a.size.width / 2);
                        a.sprite.set_y(b.sprite.get_y() + b.size.height + c);
                        break;
                    case 11:
                        a.sprite.set_x(b.sprite.get_x() + b.size.width - a.size.width), a.sprite.set_y(b.sprite.get_y() + b.size.height + c)
                }
            };
            u.refreshButtonGraphics = function(a) {
                var b = a.button;
                b.downed ? (null != a.background && (a.background.color = b.button_color_down), null != a.text && (a.text.format.color = b.text_color_down)) : b.overed ? (null != a.background && (a.background.color = b.button_color_over),
                    null != a.text && (a.text.format.color = b.text_color_over)) : (null != a.background && (a.background.color = b.button_color_default), null != a.text && (a.text.format.color = b.text_color_default))
            };
            u.refreshTextGraphics = function(a) {
                a.text.format != a.text.field.get_defaultTextFormat() && (a.text.field.set_defaultTextFormat(a.text.format), a.text.field.setTextFormat(a.text.format));
                var b = a.text.padding;
                switch (Q.enumIndex(a.text.align)) {
                    case 0:
                        a.text.field.set_x(b.left);
                        break;
                    case 1:
                        a.text.field.set_x(a.size.width - a.text.field.get_textWidth() -
                            b.right);
                        break;
                    case 2:
                        a.text.field.set_x(b.left + (a.size.width - b.left - b.right - a.text.field.get_textWidth()) / 2)
                }
                a.text.field.set_y(b.top + (a.size.height - b.top - b.bottom - a.text.field.get_textHeight()) / 2)
            };
            u.resizeToFitAll = function(a) {
                if (null != a.box) {
                    for (var b = 0, c = a.box.children; b < c.length;) {
                        var d = c[b];
                        ++b;
                        u.resizeToFitAll(d)
                    }
                    b = u.getBoundSizeOfChildren(a);
                    a.size = null != a.scroll_box ? new Kf(u.min(b.width, a.scroll_box.max_size.width), u.min(b.height, a.scroll_box.max_size.height)) : b
                }
            };
            u.clamp = function(a, b, c) {
                return a <
                    b ? b : a > c ? c : a
            };
            u.min = function(a, b) {
                return a < b ? a : b
            };
            u.max = function(a, b) {
                return a > b ? a : b
            };
            u.sqr = function(a) {
                return a * a
            };
            u.convertPositionToLocal = function(a, b, c) {
                return c.globalToLocal(a.localToGlobal(b))
            };
            u.getBoundSizeOfChildren = function(a) {
                var b = 0,
                    c = 0;
                if (null != a.box)
                    if (a = a.box, a.layout_type == Be.NONE) {
                        if (0 < a.children.length) {
                            var d = a.children[0];
                            b = d.sprite.get_x() - d.padding.left;
                            var e = d.sprite.get_x() + d.size.width + d.padding.right;
                            c = d.sprite.get_y() - d.padding.top;
                            for (var f = d.sprite.get_y() + d.size.height +
                                    d.padding.bottom, h = 1, k = a.children.length; h < k;) d = h++, d = a.children[d], d.sprite.get_x() - d.padding.left < b && (b = d.sprite.get_x() - d.padding.left), d.sprite.get_x() + d.size.width + d.padding.right > e && (e = d.sprite.get_x() + d.size.width + d.padding.right), d.sprite.get_y() - d.padding.top < c && (c = d.sprite.get_y() - d.padding.top), d.sprite.get_y() + d.size.height + d.padding.bottom > f && (f = d.sprite.get_y() + d.size.height + d.padding.bottom);
                            b = e - b;
                            c = f - c
                        }
                    } else if (a.layout_type == Be.HBOX) {
                    e = f = 0;
                    for (h = a.children; e < h.length;) k = h[e], ++e,
                        a = k.padding.bottom + k.size.height + k.padding.top, a > c && (c = a), b += u.max(k.padding.left, f) + k.size.width, f = k.padding.right;
                    b += f
                } else if (a.layout_type == Be.VBOX) {
                    e = f = 0;
                    for (h = a.children; e < h.length;) k = h[e], ++e, a = k.padding.left + k.size.width + k.padding.right, a > b && (b = a), c += u.max(k.padding.top, f) + k.size.height, f = k.padding.bottom;
                    c += f
                }
                return new Kf(b, c)
            };
            u.copyPadding = function(a) {
                return new Kg(a.top, a.bottom, a.left, a.right)
            };
            u.getValueName = function(a) {
                return null == a ? "null" : "string" == typeof a || "number" == typeof a ? E.string(a) :
                    T.hasField(a, "name") ? null == T.field(a, "name") ? E.string(a) : T.field(a, "name") : T.hasField(a, "prefab_name") ? null == T.field(a, "prefab_name") ? E.string(a) : T.field(a, "prefab_name") : E.string(a)
            };
            u.draw = function(a) {
                if (null != a.box) {
                    if (null != a.scroll_box) {
                        var b = a.scroll_box,
                            c = b.all,
                            d = b.contents,
                            e = b.right_box,
                            f = b.right_slider,
                            h = b.right_up_button,
                            k = b.right_down_button;
                        d.size.height > b.max_size.height ? (c.size.width = d.size.width + e.size.width, c.size.width > b.max_size.width && (c.size.width = b.max_size.width), d.size.width =
                            c.size.width - e.size.width, e.size.height = c.size.height - (e.padding.top + e.padding.bottom), k = u.sqr(b.right_box.size.height - h.size.height - k.size.height - 2 * b.slider_padding), b.right_slider.size.height = k / d.size.height, f.size.height < f.size.width && (f.size.height = f.size.width), f.sprite.set_y(h.size.height + b.slider_padding), d.sprite.set_y(0), -1 == c.box.children.indexOf(e) && u.addToBox(c, e)) : -1 != c.box.children.indexOf(e) && (c.size.width = d.size.width, c.size.width > b.max_size.width && (c.size.width = b.max_size.width),
                            d.size.width = c.size.width, u.remove(e));
                        b.right_down_button.sprite.set_y(b.right_box.size.height - b.right_down_button.size.height)
                    }
                    b = a.box;
                    if (0 < b.children.length)
                        if (d = c = 0, b.layout_type == Be.NONE)
                            for (c = 0, b = b.children; c < b.length;) d = b[c], ++c, u.draw(d);
                        else if (b.layout_type == Be.HBOX)
                        for (e = d = 0, b = b.children; e < b.length;) f = b[e], ++e, u.draw(f), f.sprite.set_x(c + u.max(f.padding.left, d)), f.sprite.set_y(f.padding.top), c = f.sprite.get_x() + f.size.width, d = f.padding.right;
                    else if (b.layout_type == Be.VBOX)
                        for (e = c = 0, b = b.children; e <
                            b.length;) f = b[e], ++e, u.draw(f), f.sprite.set_x(f.padding.left), f.sprite.set_y(d + u.max(f.padding.top, c)), d = f.sprite.get_y() + f.size.height, c = f.padding.bottom
                }
                null != a.window_box && (b = a.window_box, f = b.minimize_button, c = b.title_button, d = b.scroll_box.size.width + a.padding.left + a.padding.right, d < a.window_box.min_width && (d = a.window_box.min_width), e = d - f.size.width - f.padding.left, f = u.max(f.padding.right, c.padding.left), c.size.width = e - f, b.close_type != cc.NONE ? (e = b.close_button, c.size.width -= u.max(c.padding.right,
                    e.padding.left) + e.size.width + e.padding.right) : c.size.width -= c.padding.right, b.title_hbox.size.width = d, b.bottom_container.size.width = d, a.size.width = d, u.draw(b.title_hbox));
                null != a.button && u.refreshButtonGraphics(a);
                null != a.background && u.drawBackground(a.background, a.size);
                null != a.text && u.refreshTextGraphics(a);
                null != a.box && null != a.box.mask_sprite && u.drawMask(a.box.mask_sprite.get_graphics(), a.size)
            };
            u.drawBackground = function(a, b) {
                var c = a.sprite.get_graphics();
                c.clear();
                c.beginFill(a.color);
                0 <= a.line_thickness &&
                    c.lineStyle(a.line_thickness, a.line_color, 1, !0);
                c.drawRect(0, 0, b.width, b.height);
                c.endFill()
            };
            u.drawCheckbox = function(a, b, c) {
                a ? u.drawCheckmark(b, c, .3, .4, 1651777, 1) : b.clear()
            };
            u.drawCheckmark = function(a, b, c, d, e, f) {
                var h = new Kf(b.width * c, b.height * d);
                c = new Ta((b.width - h.width) / 2, b.height / 2);
                d = new Ta(.48 * b.width, (b.height + h.height) / 2);
                b = new Ta((b.width + h.width) / 2, (b.height - h.height) / 2);
                a.clear();
                a.lineStyle(f, e, 1, !0);
                a.moveTo(c.x, c.y);
                a.lineTo(d.x, d.y);
                a.lineTo(b.x, b.y)
            };
            u.drawCross = function(a, b, c, d,
                e) {
                var f = b.width;
                b = b.height;
                var h = (1 - c) / 2,
                    k = (1 + c) / 2;
                c = new Ta(f * h, b * h);
                var m = new Ta(f * k, b * k),
                    r = new Ta(f * h, b * k);
                f = new Ta(f * k, b * h);
                a.clear();
                a.lineStyle(e, d, 1, !0);
                a.moveTo(c.x, c.y);
                a.lineTo(m.x, m.y);
                a.moveTo(r.x, r.y);
                a.lineTo(f.x, f.y)
            };
            u.drawLine = function(a, b, c, d, e) {
                var f = new Ta(0, 0),
                    h = new Ta(0, 0);
                f.x = b.width * (1 - c) / 2;
                f.y = b.height / 2;
                h.x = b.width * (1 + c) / 2;
                h.y = b.height / 2;
                a.clear();
                a.lineStyle(e, d, 1, !0);
                a.moveTo(f.x, f.y);
                a.lineTo(h.x, h.y)
            };
            u.drawPlus = function(a, b, c, d, e) {
                var f = new Ta(0, 0),
                    h = new Ta(0, 0),
                    k = new Ta(0,
                        0),
                    m = new Ta(0, 0);
                f.x = b.width * (1 - c) / 2;
                f.y = b.height / 2;
                h.x = b.width * (1 + c) / 2;
                h.y = b.height / 2;
                k.x = b.width / 2;
                k.y = b.height * (1 - c) / 2;
                m.x = b.width / 2;
                m.y = b.height * (1 + c) / 2;
                a.clear();
                a.lineStyle(e, d, 1, !0);
                a.moveTo(f.x, f.y);
                a.lineTo(h.x, h.y);
                a.moveTo(k.x, k.y);
                a.lineTo(m.x, m.y)
            };
            u.drawProperties = function(a, b, c, d, e) {
                a.clear();
                a.lineStyle(e, d, 1, !0);
                d = function(b, c, d) {
                    var e = new Ta(0, 0),
                        f = new Ta(0, 0);
                    e.x = b * (1 - c) / 2;
                    e.y = d;
                    f.x = b * (1 + c) / 2;
                    f.y = d;
                    a.moveTo(e.x, e.y);
                    a.lineTo(f.x, f.y)
                };
                e = b.height / 2;
                d(b.width, c, e - e * c);
                d(b.width, c,
                    e);
                d(b.width, c, e + e * c)
            };
            u.drawUpTriangle = function(a, b, c, d, e, f, h) {
                c = new Kf(b.width * c, b.height * d);
                b = new Ta((b.width - c.width) / 2, (b.height + c.height) / 2);
                d = new Ta(b.x + c.width, b.y);
                c = new Ta(b.x + c.width / 2, b.y - c.height);
                u.drawTriangle(a, e, f, h, b, d, c)
            };
            u.drawDownTriangle = function(a, b, c, d, e, f, h) {
                c = new Kf(b.width * c, b.height * d);
                b = new Ta((b.width - c.width) / 2, (b.height - c.height) / 2);
                d = new Ta(b.x + c.width, b.y);
                c = new Ta(b.x + c.width / 2, b.y + c.height);
                u.drawTriangle(a, e, f, h, b, d, c)
            };
            u.drawTriangle = function(a, b, c, d, e, f, h) {
                a.clear();
                a.beginFill(b);
                0 <= d && a.lineStyle(d, c, 1, !0);
                a.moveTo(e.x, e.y);
                a.lineTo(f.x, f.y);
                a.lineTo(h.x, h.y);
                a.lineTo(e.x, e.y);
                a.endFill()
            };
            u.drawMask = function(a, b) {
                a.clear();
                a.beginFill(0);
                a.drawRect(0, 0, b.width, b.height);
                a.endFill()
            };
            var vs = function() {};
            g["bikas.editor.StringDrawCacheFields"] = vs;
            vs.__name__ = ["bikas", "editor", "StringDrawCacheFields"];
            vs.prototype = {
                text: null,
                type: null,
                size: null,
                padding: null,
                __class__: vs
            };
            var ws = function() {};
            g["bikas.editor.StringDrawCache"] = ws;
            ws.__name__ = ["bikas", "editor", "StringDrawCache"];
            ws.prototype = {
                entities: null,
                fields: null,
                source: null,
                __class__: ws
            };
            var Uk = function() {};
            g["bikas.editor.EditorCache"] = Uk;
            Uk.__name__ = ["bikas", "editor", "EditorCache"];
            var lf = g["bikas.editor.ClipboardType"] = {
                __ename__: ["bikas", "editor", "ClipboardType"],
                __constructs__: ["NONE", "COPY", "CUT"]
            };
            lf.NONE = ["NONE", 0];
            lf.NONE.toString = l;
            lf.NONE.__enum__ = lf;
            lf.COPY = ["COPY", 1];
            lf.COPY.toString = l;
            lf.COPY.__enum__ = lf;
            lf.CUT = ["CUT", 2];
            lf.CUT.toString = l;
            lf.CUT.__enum__ = lf;
            var Qp = function() {};
            g["bikas.editor.Clipboard"] =
                Qp;
            Qp.__name__ = ["bikas", "editor", "Clipboard"];
            Qp.prototype = {
                type: null,
                copied_entities: null,
                __class__: Qp
            };
            var xs = function() {};
            g["bikas.editor.CopiedEntity"] = xs;
            xs.__name__ = ["bikas", "editor", "CopiedEntity"];
            xs.prototype = {
                entity: null,
                relative_position: null,
                __class__: xs
            };
            var Rp = function() {
                this.holding_once = [];
                this.pressed_once = [];
                this.holding = this.pressed = this.released = -1;
                this.ctrl = this.shift = this.alt = !1
            };
            g["bikas.editor.KeyboardKeyState"] = Rp;
            Rp.__name__ = ["bikas", "editor", "KeyboardKeyState"];
            Rp.prototype = {
                ctrl: null,
                shift: null,
                alt: null,
                holding: null,
                pressed: null,
                released: null,
                pressed_once: null,
                holding_once: null,
                __class__: Rp
            };
            var ya = g["bikas.editor.MouseStateType"] = {
                __ename__: ["bikas", "editor", "MouseStateType"],
                __constructs__: "DOWNED DRAGGED UPPED NONE CLICKED DOUBLE_CLICKED".split(" ")
            };
            ya.DOWNED = ["DOWNED", 0];
            ya.DOWNED.toString = l;
            ya.DOWNED.__enum__ = ya;
            ya.DRAGGED = ["DRAGGED", 1];
            ya.DRAGGED.toString = l;
            ya.DRAGGED.__enum__ = ya;
            ya.UPPED = ["UPPED", 2];
            ya.UPPED.toString = l;
            ya.UPPED.__enum__ = ya;
            ya.NONE = ["NONE", 3];
            ya.NONE.toString = l;
            ya.NONE.__enum__ = ya;
            ya.CLICKED = ["CLICKED", 4];
            ya.CLICKED.toString = l;
            ya.CLICKED.__enum__ = ya;
            ya.DOUBLE_CLICKED = ["DOUBLE_CLICKED", 5];
            ya.DOUBLE_CLICKED.toString = l;
            ya.DOUBLE_CLICKED.__enum__ = ya;
            var Mn = function() {
                this.button_state = ya.UPPED;
                this.is_overed = !1;
                this.upped = new W(0, 0);
                this.downed = new W(0, 0);
                this.current = new W(0, 0)
            };
            g["bikas.editor.MouseState"] = Mn;
            Mn.__name__ = ["bikas", "editor", "MouseState"];
            Mn.prototype = {
                current: null,
                downed: null,
                upped: null,
                is_overed: null,
                button_state: null,
                last_clicked_time: null,
                __class__: Mn
            };
            var Vk = function() {
                this.depth = -1;
                this.entity = null
            };
            g["bikas.editor.TopUnderMouse"] = Vk;
            Vk.__name__ = ["bikas", "editor", "TopUnderMouse"];
            Vk.prototype = {
                entity: null,
                depth: null,
                __class__: Vk
            };
            var ys = function() {};
            g["bikas.editor.UndoInstanceField"] = ys;
            ys.__name__ = ["bikas", "editor", "UndoInstanceField"];
            ys.prototype = {
                instance: null,
                field_name: null,
                value: null,
                __class__: ys
            };
            var qf = g["bikas.editor.UndoArrayType"] = {
                __ename__: ["bikas", "editor", "UndoArrayType"],
                __constructs__: ["CHANGE", "INSERT", "REMOVE"]
            };
            qf.CHANGE = ["CHANGE", 0];
            qf.CHANGE.toString = l;
            qf.CHANGE.__enum__ = qf;
            qf.INSERT = ["INSERT", 1];
            qf.INSERT.toString = l;
            qf.INSERT.__enum__ = qf;
            qf.REMOVE = ["REMOVE", 2];
            qf.REMOVE.toString = l;
            qf.REMOVE.__enum__ = qf;
            var Wk = function() {
                this.value = null
            };
            g["bikas.editor.UndoArray"] = Wk;
            Wk.__name__ = ["bikas", "editor", "UndoArray"];
            Wk.prototype = {
                type: null,
                array: null,
                index: null,
                value: null,
                __class__: Wk
            };
            var zs = function() {};
            g["bikas.editor.UndoEntities"] = zs;
            zs.__name__ = ["bikas", "editor", "UndoEntities"];
            zs.prototype = {
                entities: null,
                __class__: zs
            };
            var As = function() {
                this.from_group = this.to_group = null
            };
            g["bikas.editor.UndoEntitiesMoved"] = As;
            As.__name__ = ["bikas", "editor", "UndoEntitiesMoved"];
            As.prototype = {
                depths: null,
                entities: null,
                from_group: null,
                to_group: null,
                __class__: As
            };
            var Bs = function() {};
            g["bikas.editor.UndoDepth"] = Bs;
            Bs.__name__ = ["bikas", "editor", "UndoDepth"];
            Bs.prototype = {
                group: null,
                entity: null,
                depth: null,
                __class__: Bs
            };
            var Cs = function() {};
            g["bikas.editor.UndoContainerSwitch"] = Cs;
            Cs.__name__ = ["bikas", "editor", "UndoContainerSwitch"];
            Cs.prototype = {
                previous: null,
                current: null,
                objects: null,
                __class__: Cs
            };
            var Eb = g["bikas.editor.UndoChangeType"] = {
                __ename__: ["bikas", "editor", "UndoChangeType"],
                __constructs__: "INSTANCE_FIELD_CHANGED ARRAY_CHANGED DEPTH_CHANGED CONTAINER_SWITCHED ENTITIES_CREATED ENTITIES_DESTROYED ENTITIES_MOVED".split(" ")
            };
            Eb.INSTANCE_FIELD_CHANGED = ["INSTANCE_FIELD_CHANGED", 0];
            Eb.INSTANCE_FIELD_CHANGED.toString = l;
            Eb.INSTANCE_FIELD_CHANGED.__enum__ = Eb;
            Eb.ARRAY_CHANGED = ["ARRAY_CHANGED", 1];
            Eb.ARRAY_CHANGED.toString = l;
            Eb.ARRAY_CHANGED.__enum__ =
                Eb;
            Eb.DEPTH_CHANGED = ["DEPTH_CHANGED", 2];
            Eb.DEPTH_CHANGED.toString = l;
            Eb.DEPTH_CHANGED.__enum__ = Eb;
            Eb.CONTAINER_SWITCHED = ["CONTAINER_SWITCHED", 3];
            Eb.CONTAINER_SWITCHED.toString = l;
            Eb.CONTAINER_SWITCHED.__enum__ = Eb;
            Eb.ENTITIES_CREATED = ["ENTITIES_CREATED", 4];
            Eb.ENTITIES_CREATED.toString = l;
            Eb.ENTITIES_CREATED.__enum__ = Eb;
            Eb.ENTITIES_DESTROYED = ["ENTITIES_DESTROYED", 5];
            Eb.ENTITIES_DESTROYED.toString = l;
            Eb.ENTITIES_DESTROYED.__enum__ = Eb;
            Eb.ENTITIES_MOVED = ["ENTITIES_MOVED", 6];
            Eb.ENTITIES_MOVED.toString = l;
            Eb.ENTITIES_MOVED.__enum__ =
                Eb;
            var Di = function() {
                this.field = this.array = this.depth = this.entities = this.entities_moved = null
            };
            g["bikas.editor.UndoChange"] = Di;
            Di.__name__ = ["bikas", "editor", "UndoChange"];
            Di.prototype = {
                type: null,
                field: null,
                array: null,
                depth: null,
                container_switch: null,
                entities: null,
                entities_moved: null,
                __class__: Di
            };
            var Ds = function() {};
            g["bikas.editor.UndoPack"] = Ds;
            Ds.__name__ = ["bikas", "editor", "UndoPack"];
            Ds.prototype = {
                changes: null,
                __class__: Ds
            };
            var Es = function() {
                this.current_pack = null
            };
            g["bikas.editor.UndoList"] = Es;
            Es.__name__ = ["bikas", "editor", "UndoList"];
            Es.prototype = {
                undo_packs: null,
                redo_packs: null,
                current_pack: null,
                __class__: Es
            };
            var Nn = function() {};
            g["bikas.editor.SerialSave"] = Nn;
            Nn.__name__ = ["bikas", "editor", "SerialSave"];
            Nn.prototype = {
                name: null,
                created_time_stamp: null,
                save_time_stamp: null,
                __class__: Nn
            };
            var fj = function() {};
            g["bikas.editor.SerialStageHeader"] = fj;
            fj.__name__ = ["bikas", "editor", "SerialStageHeader"];
            fj.prototype = {
                save: null,
                group: null,
                __class__: fj
            };
            var gj = function() {};
            g["bikas.editor.SerialLibraryHeader"] =
                gj;
            gj.__name__ = ["bikas", "editor", "SerialLibraryHeader"];
            gj.prototype = {
                save: null,
                group: null,
                library_data: null,
                __class__: gj
            };
            var Sp = function() {};
            g["bikas.editor.TempEntityRemove"] = Sp;
            Sp.__name__ = ["bikas", "editor", "TempEntityRemove"];
            Sp.prototype = {
                index: null,
                entity: null,
                __class__: Sp
            };
            var Fs = function() {};
            g["bikas.editor.TempEntityAdd"] = Fs;
            Fs.__name__ = ["bikas", "editor", "TempEntityAdd"];
            Fs.prototype = {
                entity: null,
                position_before: null,
                transform_before: null,
                depth_before: null,
                __class__: Fs
            };
            var Gs = function() {
                this.entity_title_width =
                    300;
                this.editor_title_width = 202;
                this.current_group = null
            };
            g["bikas.editor.EditorMainMenu"] = Gs;
            Gs.__name__ = ["bikas", "editor", "EditorMainMenu"];
            Gs.prototype = {
                debug_window: null,
                stage_expandbox: null,
                library_expandbox: null,
                current_stage_hbox: null,
                current_library_hbox: null,
                stage_fields: null,
                stage_elements: null,
                stage_name_element: null,
                library_name_element: null,
                current_group_hbox: null,
                current_group: null,
                stage_hbox_button_width: null,
                editor_title_width: null,
                entity_title_width: null,
                save_and_export_button: null,
                __class__: Gs
            };
            var Hs = function() {};
            g["bikas.editor.ArrayPointEditMenu"] = Hs;
            Hs.__name__ = ["bikas", "editor", "ArrayPointEditMenu"];
            Hs.prototype = {
                point: null,
                hbox: null,
                field_x: null,
                field_y: null,
                add_button: null,
                remove_button: null,
                __class__: Hs
            };
            var Is = function() {};
            g["bikas.editor.ArrayPointChanged"] = Is;
            Is.__name__ = ["bikas", "editor", "ArrayPointChanged"];
            Is.prototype = {
                index: null,
                point: null,
                __class__: Is
            };
            var Je = function() {
                this.bitmap_animation = null
            };
            g["bikas.editor.BitmapImage"] = Je;
            Je.__name__ = ["bikas", "editor",
                "BitmapImage"
            ];
            Je.prototype = {
                source_name: null,
                bitmap_data_source: null,
                bitmap: null,
                offset_x: null,
                offset_y: null,
                rotation: null,
                bitmap_animation: null,
                __class__: Je
            };
            var Xk = function() {};
            g["bikas.editor.BitmapImageContainer"] = Xk;
            Xk.__name__ = ["bikas", "editor", "BitmapImageContainer"];
            Xk.prototype = {
                images: null,
                container: null,
                __class__: Xk
            };
            var Kv = function() {};
            g["bikas.editor.BitmapAnimation"] = Kv;
            Kv.__name__ = ["bikas", "editor", "BitmapAnimation"];
            var On = function() {
                this.depth_cache = -1
            };
            g["bikas.editor.Display"] =
                On;
            On.__name__ = ["bikas", "editor", "Display"];
            On.prototype = {
                container: null,
                contents: null,
                depth_cache: null,
                __class__: On
            };
            var Yk = function() {
                this.line_draw = this.point_draw = this.string_draw = null
            };
            g["bikas.editor.AdditionalComponents"] = Yk;
            Yk.__name__ = ["bikas", "editor", "AdditionalComponents"];
            Yk.prototype = {
                line_draw: null,
                point_draw: null,
                string_draw: null,
                __class__: Yk
            };
            var Tp = function() {};
            g["bikas.editor.LineDraw"] = Tp;
            Tp.__name__ = ["bikas", "editor", "LineDraw"];
            Tp.prototype = {
                start: null,
                end: null,
                thickness: null,
                color: null,
                shape: null,
                __class__: Tp
            };
            var Hd = g["bikas.editor.PointDrawType"] = {
                __ename__: ["bikas", "editor", "PointDrawType"],
                __constructs__: "CIRCLE CIRCLE_DARK CIRCLE_LIGHT SQUARE SQUARE_DARK SQUARE_LIGHT".split(" ")
            };
            Hd.CIRCLE = ["CIRCLE", 0];
            Hd.CIRCLE.toString = l;
            Hd.CIRCLE.__enum__ = Hd;
            Hd.CIRCLE_DARK = ["CIRCLE_DARK", 1];
            Hd.CIRCLE_DARK.toString = l;
            Hd.CIRCLE_DARK.__enum__ = Hd;
            Hd.CIRCLE_LIGHT = ["CIRCLE_LIGHT", 2];
            Hd.CIRCLE_LIGHT.toString = l;
            Hd.CIRCLE_LIGHT.__enum__ = Hd;
            Hd.SQUARE = ["SQUARE", 3];
            Hd.SQUARE.toString = l;
            Hd.SQUARE.__enum__ =
                Hd;
            Hd.SQUARE_DARK = ["SQUARE_DARK", 4];
            Hd.SQUARE_DARK.toString = l;
            Hd.SQUARE_DARK.__enum__ = Hd;
            Hd.SQUARE_LIGHT = ["SQUARE_LIGHT", 5];
            Hd.SQUARE_LIGHT.toString = l;
            Hd.SQUARE_LIGHT.__enum__ = Hd;
            var hj = g["bikas.editor.PointDrawCrossType"] = {
                __ename__: ["bikas", "editor", "PointDrawCrossType"],
                __constructs__: ["NONE", "DEFAULT"]
            };
            hj.NONE = ["NONE", 0];
            hj.NONE.toString = l;
            hj.NONE.__enum__ = hj;
            hj.DEFAULT = ["DEFAULT", 1];
            hj.DEFAULT.toString = l;
            hj.DEFAULT.__enum__ = hj;
            var Up = function() {};
            g["bikas.editor.PointDraw"] = Up;
            Up.__name__ = ["bikas",
                "editor", "PointDraw"
            ];
            Up.prototype = {
                type: null,
                cross_type: null,
                size: null,
                shape: null,
                __class__: Up
            };
            var Yc = g["bikas.editor.StringDrawType"] = {
                __ename__: ["bikas", "editor", "StringDrawType"],
                __constructs__: "DEFAULT DARK LIGHT RED GREEN BLUE".split(" ")
            };
            Yc.DEFAULT = ["DEFAULT", 0];
            Yc.DEFAULT.toString = l;
            Yc.DEFAULT.__enum__ = Yc;
            Yc.DARK = ["DARK", 1];
            Yc.DARK.toString = l;
            Yc.DARK.__enum__ = Yc;
            Yc.LIGHT = ["LIGHT", 2];
            Yc.LIGHT.toString = l;
            Yc.LIGHT.__enum__ = Yc;
            Yc.RED = ["RED", 3];
            Yc.RED.toString = l;
            Yc.RED.__enum__ = Yc;
            Yc.GREEN = ["GREEN",
                4
            ];
            Yc.GREEN.toString = l;
            Yc.GREEN.__enum__ = Yc;
            Yc.BLUE = ["BLUE", 5];
            Yc.BLUE.toString = l;
            Yc.BLUE.__enum__ = Yc;
            var Vp = function() {
                this.use_name = !1
            };
            g["bikas.editor.StringDraw"] = Vp;
            Vp.__name__ = ["bikas", "editor", "StringDraw"];
            Vp.prototype = {
                text: null,
                type: null,
                size: null,
                offset_x: null,
                offset_y: null,
                padding: null,
                bitmap: null,
                use_name: null,
                __class__: Vp
            };
            var kc = g["bikas.editor.NapeBodyType"] = {
                __ename__: ["bikas", "editor", "NapeBodyType"],
                __constructs__: ["NONE", "STATIC", "DYNAMIC"]
            };
            kc.NONE = ["NONE", 0];
            kc.NONE.toString =
                l;
            kc.NONE.__enum__ = kc;
            kc.STATIC = ["STATIC", 1];
            kc.STATIC.toString = l;
            kc.STATIC.__enum__ = kc;
            kc.DYNAMIC = ["DYNAMIC", 2];
            kc.DYNAMIC.toString = l;
            kc.DYNAMIC.__enum__ = kc;
            var ij = g["bikas.editor.CircleDrawType"] = {
                __ename__: ["bikas", "editor", "CircleDrawType"],
                __constructs__: ["DEFAULT", "TRANSPARENT"]
            };
            ij.DEFAULT = ["DEFAULT", 0];
            ij.DEFAULT.toString = l;
            ij.DEFAULT.__enum__ = ij;
            ij.TRANSPARENT = ["TRANSPARENT", 1];
            ij.TRANSPARENT.toString = l;
            ij.TRANSPARENT.__enum__ = ij;
            var Zk = function() {};
            g["bikas.editor.Circle"] = Zk;
            Zk.__name__ = ["bikas", "editor", "Circle"];
            Zk.prototype = {
                body_type: null,
                editable: null,
                fill_draw: null,
                fill_draw_type: null,
                radius: null,
                __class__: Zk
            };
            var Pn = function() {
                this.edit = null
            };
            g["bikas.editor.Group"] = Pn;
            Pn.__name__ = ["bikas", "editor", "Group"];
            Pn.prototype = {
                entities: null,
                ungroupable: null,
                edit: null,
                __class__: Pn
            };
            var Js = function() {
                this.last_click_point = new W(0, 0);
                this.last_click_time = 0;
                this.last_clicked_entity = null
            };
            g["bikas.editor.GroupEdit"] = Js;
            Js.__name__ = ["bikas", "editor", "GroupEdit"];
            Js.prototype = {
                selected_entities: null,
                dragging_entities: null,
                last_clicked_entity: null,
                last_click_time: null,
                last_click_point: null,
                __class__: Js
            };
            var Lg = g["bikas.editor.PolygonDrawType"] = {
                __ename__: ["bikas", "editor", "PolygonDrawType"],
                __constructs__: ["DEFAULT", "TEXTURE"]
            };
            Lg.DEFAULT = ["DEFAULT", 0];
            Lg.DEFAULT.toString = l;
            Lg.DEFAULT.__enum__ = Lg;
            Lg.TEXTURE = ["TEXTURE", 1];
            Lg.TEXTURE.toString = l;
            Lg.TEXTURE.__enum__ = Lg;
            var $k = function() {
                this.data = null;
                this.use_sutherland_hodgman = !1;
                this.bitmaps_updated = !0;
                this.fill_source_name = this.line_source_name =
                    this.fill_source_name_cache = this.line_source_name_cache = ""
            };
            g["bikas.editor.PolygonTexture"] = $k;
            $k.__name__ = ["bikas", "editor", "PolygonTexture"];
            $k.prototype = {
                fill_source_name: null,
                line_source_name: null,
                fill_source_name_cache: null,
                line_source_name_cache: null,
                bitmaps_updated: null,
                use_sutherland_hodgman: null,
                data: null,
                __class__: $k
            };
            var jj = function() {
                this.texture = null;
                this.convex_cached = !1;
                this.convex_cache_points = null
            };
            g["bikas.editor.Polygon"] = jj;
            jj.__name__ = ["bikas", "editor", "Polygon"];
            jj.prototype = {
                body_type: null,
                points: null,
                convex_cache_points: null,
                convex_cached: null,
                editable: null,
                draw_type: null,
                color: null,
                alpha: null,
                texture: null,
                __class__: jj
            };
            var Ks = function() {};
            g["bikas.editor.PrefabEdit"] = Ks;
            Ks.__name__ = ["bikas", "editor", "PrefabEdit"];
            Ks.prototype = {
                saved_position: null,
                saved_transform: null,
                prefab_link_entity: null,
                __class__: Ks
            };
            var Qn = function() {
                this.edit = null
            };
            g["bikas.editor.Prefab"] = Qn;
            Qn.__name__ = ["bikas", "editor", "Prefab"];
            Qn.prototype = {
                bitmap_data_source: null,
                links: null,
                edit: null,
                __class__: Qn
            };
            var Ah = function() {};
            g["bikas.editor.PrefabLink"] = Ah;
            Ah.__name__ = ["bikas", "editor", "PrefabLink"];
            Ah.prototype = {
                guid: null,
                prefab_entity: null,
                library_group: null,
                bitmap: null,
                __class__: Ah
            };
            var id = g["bikas.editor.SelectedDrawType"] = {
                __ename__: ["bikas", "editor", "SelectedDrawType"],
                __constructs__: ["DEFAULT", "BOUNDS", "GROUP", "PREFAB_LINK"]
            };
            id.DEFAULT = ["DEFAULT", 0];
            id.DEFAULT.toString = l;
            id.DEFAULT.__enum__ = id;
            id.BOUNDS = ["BOUNDS", 1];
            id.BOUNDS.toString = l;
            id.BOUNDS.__enum__ = id;
            id.GROUP = ["GROUP", 2];
            id.GROUP.toString =
                l;
            id.GROUP.__enum__ = id;
            id.PREFAB_LINK = ["PREFAB_LINK", 3];
            id.PREFAB_LINK.toString = l;
            id.PREFAB_LINK.__enum__ = id;
            var Tj = function() {
                this.selected_shape = this.dragging = this.dragging_entity_position = this.dragging_mouse = this.group = this.bitmap_images = this.circle = this.polygon = this.prefab = this.prefab_link = this.additional = this.right_click_event = this.right_click_callback = null
            };
            g["bikas.editor.Entity"] = Tj;
            Tj.__name__ = ["bikas", "editor", "Entity"];
            Tj.prototype = {
                deletable: null,
                draggable: null,
                groupable: null,
                in_current_container: null,
                overed: null,
                overed_drawn: null,
                selectable: null,
                selected: null,
                selected_drawn: null,
                selected_draw_type: null,
                transform_editable: null,
                guid: null,
                name: null,
                position: null,
                transform: null,
                display: null,
                internal_bounds: null,
                visible_bounds: null,
                parent: null,
                container_link: null,
                selected_shape: null,
                dragging: null,
                dragging_entity_position: null,
                dragging_mouse: null,
                group: null,
                bitmap_images: null,
                circle: null,
                polygon: null,
                prefab: null,
                prefab_link: null,
                additional: null,
                right_click_event: null,
                right_click_callback: null,
                __class__: Tj
            };
            var Ls = function() {};
            g["bikas.editor.TransformEditPoints"] = Ls;
            Ls.__name__ = ["bikas", "editor", "TransformEditPoints"];
            Ls.prototype = {
                top_left: null,
                top_center: null,
                top_right: null,
                center_right: null,
                bottom_right: null,
                bottom_center: null,
                bottom_left: null,
                center_left: null,
                __class__: Ls
            };
            var Ms = function() {
                this.top_left = this.top_center = this.top_right = this.center_right = this.bottom_right = this.bottom_center = this.bottom_left = this.center_left = this.transform_before_drag = this.transform_points_before_drag = null
            };
            g["bikas.editor.TransformEdit"] =
                Ms;
            Ms.__name__ = ["bikas", "editor", "TransformEdit"];
            Ms.prototype = {
                all: null,
                top_left: null,
                top_center: null,
                top_right: null,
                center_right: null,
                bottom_right: null,
                bottom_center: null,
                bottom_left: null,
                center_left: null,
                transform_before_drag: null,
                transform_points_before_drag: null,
                __class__: Ms
            };
            var Ns = function() {};
            g["bikas.editor.CircleEdit"] = Ns;
            Ns.__name__ = ["bikas", "editor", "CircleEdit"];
            Ns.prototype = {
                top_center: null,
                radius_before: null,
                position_before: null,
                __class__: Ns
            };
            var Os = function() {};
            g["bikas.editor.PolygonEditPoint"] =
                Os;
            Os.__name__ = ["bikas", "editor", "PolygonEditPoint"];
            Os.prototype = {
                entity: null,
                position_before: null,
                polygon_point_before: null,
                polygon_point: null,
                __class__: Os
            };
            var Ps = function() {};
            g["bikas.editor.PolygonEdit"] = Ps;
            Ps.__name__ = ["bikas", "editor", "PolygonEdit"];
            Ps.prototype = {
                edit_points: null,
                __class__: Ps
            };
            var Qs = function() {
                this.transform_edit = this.circle_edit = this.polygon_edit = null
            };
            g["bikas.editor.EntityEdit"] = Qs;
            Qs.__name__ = ["bikas", "editor", "EntityEdit"];
            Qs.prototype = {
                target: null,
                transform_edit: null,
                circle_edit: null,
                polygon_edit: null,
                __class__: Qs
            };
            var Rs = function() {};
            g["bikas.editor.EntitiesEditor"] = Rs;
            Rs.__name__ = ["bikas", "editor", "EntitiesEditor"];
            Rs.prototype = {
                group: null,
                entity_edits: null,
                __class__: Rs
            };
            var Wp = function() {
                this.decorations = [];
                this.spectrums = [];
                this.object_drop_menus = [];
                this.default_bitmap_offsets = []
            };
            g["bikas.editor.LibraryData"] = Wp;
            Wp.__name__ = ["bikas", "editor", "LibraryData"];
            Wp.prototype = {
                stage_settings: null,
                perlin_terrain_presets: null,
                default_bitmap_offsets: null,
                object_drop_menus: null,
                spectrums: null,
                decorations: null,
                __class__: Wp
            };
            var al = function() {};
            g["bikas.editor.DefaultBitmapOffset"] = al;
            al.__name__ = ["bikas", "editor", "DefaultBitmapOffset"];
            al.prototype = {
                name: null,
                offset_x: null,
                offset_y: null,
                __class__: al
            };
            var Rn = function() {
                this.place_on_top = this.transform_editable = this.display_as_bitmaps = !0;
                this.max_bitmap_height = 100;
                this.window_width = 300;
                this.prefab_names = "prefab_name1;prefab_name2";
                this.bitmap_names = "bitmap_name1;bitmap_name2";
                this.name = "name"
            };
            g["bikas.editor.ObjectDropMenu"] =
                Rn;
            Rn.__name__ = ["bikas", "editor", "ObjectDropMenu"];
            Rn.prototype = {
                name: null,
                bitmap_names: null,
                prefab_names: null,
                window_width: null,
                max_bitmap_height: null,
                place_on_top: null,
                transform_editable: null,
                display_as_bitmaps: null,
                __class__: Rn
            };
            var Sn = function() {
                this.explored_archetypes = [];
                this.spectrum_names = ["items", "obstacles"];
                this.name = "Default Spectrums"
            };
            g["bikas.editor.Spectrums"] = Sn;
            Sn.__name__ = ["bikas", "editor", "Spectrums"];
            Sn.prototype = {
                name: null,
                spectrum_names: null,
                explored_archetypes: null,
                __class__: Sn
            };
            var Xp = function() {
                this.spectrum_names = []
            };
            g["bikas.editor.Archetype"] = Xp;
            Xp.__name__ = ["bikas", "editor", "Archetype"];
            Xp.prototype = {
                spectrum_names: null,
                __class__: Xp
            };
            var zf = g["bikas.editor.SpectrumState"] = {
                __ename__: ["bikas", "editor", "SpectrumState"],
                __constructs__: ["Disabled", "On", "Forced"]
            };
            zf.Disabled = ["Disabled", 0];
            zf.Disabled.toString = l;
            zf.Disabled.__enum__ = zf;
            zf.On = ["On", 1];
            zf.On.toString = l;
            zf.On.__enum__ = zf;
            zf.Forced = ["Forced", 2];
            zf.Forced.toString = l;
            zf.Forced.__enum__ = zf;
            var Ss = function() {
                this.type =
                    zf.Disabled
            };
            g["bikas.editor.SpectrumSwitch"] = Ss;
            Ss.__name__ = ["bikas", "editor", "SpectrumSwitch"];
            Ss.prototype = {
                type: null,
                name: null,
                debug_field: null,
                __class__: Ss
            };
            var Ts = function() {
                this.progress_to_next = !0;
                this.current_point_index = -1
            };
            g["bikas.editor.PolygonCreation"] = Ts;
            Ts.__name__ = ["bikas", "editor", "PolygonCreation"];
            Ts.prototype = {
                entity: null,
                current_point_index: null,
                progress_to_next: null,
                __class__: Ts
            };
            var Rd = g["bikas.editor.PolyBoolOperationType"] = {
                __ename__: ["bikas", "editor", "PolyBoolOperationType"],
                __constructs__: ["BoolUnion", "BoolIntersect", "BoolDifference", "BoolXor"]
            };
            Rd.BoolUnion = ["BoolUnion", 0];
            Rd.BoolUnion.toString = l;
            Rd.BoolUnion.__enum__ = Rd;
            Rd.BoolIntersect = ["BoolIntersect", 1];
            Rd.BoolIntersect.toString = l;
            Rd.BoolIntersect.__enum__ = Rd;
            Rd.BoolDifference = ["BoolDifference", 2];
            Rd.BoolDifference.toString = l;
            Rd.BoolDifference.__enum__ = Rd;
            Rd.BoolXor = ["BoolXor", 3];
            Rd.BoolXor.toString = l;
            Rd.BoolXor.__enum__ = Rd;
            var Uj = g["bikas.editor.SnapType"] = {
                __ename__: ["bikas", "editor", "SnapType"],
                __constructs__: ["RELATIVE",
                    "ABSOLUTE_NOT_IMPLEMENTED"
                ]
            };
            Uj.RELATIVE = ["RELATIVE", 0];
            Uj.RELATIVE.toString = l;
            Uj.RELATIVE.__enum__ = Uj;
            Uj.ABSOLUTE_NOT_IMPLEMENTED = ["ABSOLUTE_NOT_IMPLEMENTED", 1];
            Uj.ABSOLUTE_NOT_IMPLEMENTED.toString = l;
            Uj.ABSOLUTE_NOT_IMPLEMENTED.__enum__ = Uj;
            var Yp = function() {};
            g["bikas.editor.StageSettings"] = Yp;
            Yp.__name__ = ["bikas", "editor", "StageSettings"];
            Yp.prototype = {
                mouse_snap_type: null,
                mouse_snap_size: null,
                snap_to_nearest_entity_distance: null,
                snap_to_nearest_polygon_point_distance: null,
                snap_to_nearest_polygon_line_distance: null,
                snap_to_straight_line_distance: null,
                snap_to_nearest_polygon_grid_distance: null,
                snap_to_nearest_polygon_grid_max_distance: null,
                __class__: Yp
            };
            var bh = function() {
                this.position = this.line_start = this.line_end = null
            };
            g["bikas.editor.Snap"] = bh;
            bh.__name__ = ["bikas", "editor", "Snap"];
            bh.prototype = {
                distance: null,
                max_distance: null,
                position: null,
                line_start: null,
                line_end: null,
                __class__: bh
            };
            var Us = function() {};
            g["bikas.editor.Selection"] = Us;
            Us.__name__ = ["bikas", "editor", "Selection"];
            Us.prototype = {
                regular_entities: null,
                edit_entities: null,
                edit_target_entities: null,
                shape: null,
                start: null,
                bounds: null,
                __class__: Us
            };
            var Vs = function() {};
            g["bikas.editor.InnerPrefabCount"] = Vs;
            Vs.__name__ = ["bikas", "editor", "InnerPrefabCount"];
            Vs.prototype = {
                entity: null,
                count: null,
                __class__: Vs
            };
            var mf = g["bikas.editor.SavingType"] = {
                __ename__: ["bikas", "editor", "SavingType"],
                __constructs__: ["FlashSharedObject", "FlashOneFile", "NodeJSServer"]
            };
            mf.FlashSharedObject = ["FlashSharedObject", 0];
            mf.FlashSharedObject.toString = l;
            mf.FlashSharedObject.__enum__ =
                mf;
            mf.FlashOneFile = ["FlashOneFile", 1];
            mf.FlashOneFile.toString = l;
            mf.FlashOneFile.__enum__ = mf;
            mf.NodeJSServer = ["NodeJSServer", 2];
            mf.NodeJSServer.toString = l;
            mf.NodeJSServer.__enum__ = mf;
            var Ws = function() {
                this.on_ctrl_enter_pressed = this.on_load_clicked = this.export_library_click = this.export_stage_click = this.save_and_export_everything_click = this.save_end_export_to_nodejs_server = this.load_everything = this.game_menu_click = this.game_update = this.bitmap_polygons_map = this.keyboard_p_polygon_creation_func = this.keyboard_p_polygon_finish_func =
                    null;
                this.quick_update_list = [];
                this.mouse_event = this.keyboard_event = this.update_event = this.polygon_creation = null;
                this.listeners_added = this.running = !1;
                this.stage_group = this.current_group = this.library_group = this.current_selection = null;
                this.zoom_levels = [.1, .2, .3, .4, .5, .6, .8, 1, 1.25, 1.5, 2, 2.5, 3, 4, 5];
                this.library_data = null;
                this.last_saved_undo_pack_count = 0;
                this.place_bitmaps_on_top = this.place_prefabs_on_top = !0;
                this.local_mouse = null;
                this.refresh_prefabs_with_undo = !0;
                this.saving_types = []
            };
            g["bikas.editor.Editor"] =
                Ws;
            Ws.__name__ = ["bikas", "editor", "Editor"];
            Ws.prototype = {
                saving_types: null,
                refresh_prefabs_with_undo: null,
                stage_settings: null,
                clipboard: null,
                mouse_state: null,
                local_mouse: null,
                keyboard_state: null,
                undo: null,
                place_bitmaps_on_top: null,
                place_prefabs_on_top: null,
                last_saved_undo_pack_count: null,
                stage_save: null,
                library_save: null,
                editor_serial_data: null,
                library_data: null,
                bitmap_assets: null,
                animation_assets: null,
                zoom_levels: null,
                stage_group: null,
                current_group: null,
                library_group: null,
                current_selection: null,
                entities_editor: null,
                main_menu: null,
                container: null,
                entity_container: null,
                edit_container: null,
                menu_container: null,
                size: null,
                background_shape: null,
                saving_bitmap: null,
                saved_bitmap: null,
                saving_error_bitmap: null,
                listeners_added: null,
                running: null,
                mouse_event: null,
                keyboard_event: null,
                update_event: null,
                polygon_creation: null,
                quick_update_list: null,
                on_ctrl_enter_pressed: null,
                on_load_clicked: null,
                export_library_click: null,
                export_stage_click: null,
                save_and_export_everything_click: null,
                save_end_export_to_nodejs_server: null,
                load_everything: null,
                game_menu_click: null,
                game_update: null,
                bitmap_polygons_map: null,
                keyboard_p_polygon_creation_func: null,
                keyboard_p_polygon_finish_func: null,
                __class__: Ws
            };
            var Tn = function() {
                this.relationships = [];
                this.decoration_types = [];
                this.max_placement_count = 1E4;
                this.max_distance = 4E3;
                this.seed = .1
            };
            g["bikas.editor.Decoration"] = Tn;
            Tn.__name__ = ["bikas", "editor", "Decoration"];
            Tn.prototype = {
                seed: null,
                max_distance: null,
                max_placement_count: null,
                decoration_types: null,
                relationships: null,
                __class__: Tn
            };
            var bl =
                function() {
                    this.dec_sprites = [];
                    this.adapt_rotation_to_polygon_coeff = 0;
                    this.min_distance_to_remove_same_sprite = 50;
                    this.min_distance_for_same_types = this.min_distance_for_different_types = 10;
                    this.max_rotation = 5;
                    this.min_rotation = -5;
                    this.max_scale = 1.2;
                    this.min_scale = .8;
                    this.max_distance = 200;
                    this.min_distance = 100;
                    this.asset_names = [""];
                    this.activated = !0;
                    this.name = "decoration"
                };
            g["bikas.editor.DecorationType"] = bl;
            bl.__name__ = ["bikas", "editor", "DecorationType"];
            bl.prototype = {
                name: null,
                activated: null,
                asset_names: null,
                min_distance: null,
                max_distance: null,
                min_scale: null,
                max_scale: null,
                min_rotation: null,
                max_rotation: null,
                min_distance_for_same_types: null,
                min_distance_for_different_types: null,
                min_distance_to_remove_same_sprite: null,
                adapt_rotation_to_polygon_coeff: null,
                dec_sprites: null,
                __class__: bl
            };
            var cl = function() {
                this.target = null;
                this.sources = [];
                this.attract_chance_coeff = .9;
                this.attract_placement_distance = 50;
                this.attract_distance = 100;
                this.target_name = "";
                this.sources_names = [""];
                this.activated = !0
            };
            g["bikas.editor.Relationship"] =
                cl;
            cl.__name__ = ["bikas", "editor", "Relationship"];
            cl.prototype = {
                activated: null,
                sources_names: null,
                target_name: null,
                attract_distance: null,
                attract_placement_distance: null,
                attract_chance_coeff: null,
                sources: null,
                target: null,
                __class__: cl
            };
            var Xs = function() {
                this.position_in_current_group = this.closest_intersection = this.intersection_normal_angle = this.polygon = null
            };
            g["bikas.editor.DecorationSprite"] = Xs;
            Xs.__name__ = ["bikas", "editor", "DecorationSprite"];
            Xs.prototype = {
                source_name: null,
                source: null,
                default_offset: null,
                sprite: null,
                bitmap: null,
                decoration_type: null,
                position_in_current_group: null,
                closest_intersection: null,
                intersection_normal_angle: null,
                polygon: null,
                __class__: Xs
            };
            var Uc = function() {};
            g["bikas.editor.EditorDecorationDo"] = Uc;
            Uc.__name__ = ["bikas", "editor", "EditorDecorationDo"];
            Uc.createDecorationUI = function(a, b) {
                var c = [],
                    d = new S;
                d.set_x(400);
                d.set_y(0);
                var e = function(a, b) {
                    a = a.get_graphics();
                    a.clear();
                    a.beginFill(1651777);
                    a.lineStyle(30, 1651777);
                    a.drawCircle(0, 15, 30);
                    a.moveTo(0, 15);
                    a.lineTo(b.max_distance,
                        15);
                    a.drawCircle(b.max_distance, 15, 30);
                    a.endFill()
                };
                e(d, b);
                var f = new Sk(b.seed),
                    h = v.createDebugWindow("Decorations", 300, !0, cc.DESTROY, 1280, 720, !0);
                h.window.sprite.addChild(d);
                h.callbacks.after_apply = function(h) {
                    e(d, b);
                    Uc.generate(b, f, a, d, c)
                };
                v.addButton(h, "reset display position", function() {
                    d.set_x(400)
                });
                v.addEdit(h, b, "name");
                var k = v.addEdit(h, b, "seed");
                v.addEdit(h, b, "max_distance");
                v.addEdit(h, b, "max_placement_count");
                v.addButton(h, "decoration_types", function() {
                    var c = Uc.createDecorationTypeEdit(a.undo,
                        b.decoration_types);
                    ca.openClickedDebugWindow(a.menu_container, c)
                });
                v.addButton(h, "relationships", function() {
                    var c = Uc.createRelationshipEdit(a.undo, b.relationships);
                    ca.openClickedDebugWindow(a.menu_container, c)
                });
                v.addButton(h, "clear", function() {
                    for (var a = 0; a < c.length;) {
                        var b = c[a];
                        ++a;
                        Uc.destroyDecorationSprite(b)
                    }
                    c.splice(0, c.length)
                });
                v.addButton(h, "randomize, apply and generate", function() {
                    b.seed = Math.round(1E4 * Math.random()) / 1E4;
                    k.value = b.seed;
                    k.value_text.text.field.set_text($a.fromDynamic(k.value));
                    v.applyChanges(h)
                });
                v.addButton(h, "apply and generate", function() {
                    v.applyChanges(h)
                });
                v.addText(h, "drop:");
                v.addButton(h, "drop down (undoable)", function() {
                    Uc.dropSprites(a, c, !0)
                });
                v.addButton(h, "drop up (undoable)", function() {
                    Uc.dropSprites(a, c, !1)
                });
                v.addText(h, "destroy sprites with activated decoration type:");
                v.addButton(h, "destroy decoration entities within max_distance (undoable)", function() {
                    for (var c = [], e = 0, f = b.decoration_types; e < f.length;) {
                        var h = f[e];
                        ++e;
                        if (h.activated) {
                            var k = 0;
                            for (h = h.asset_names; k <
                                h.length;) {
                                var m = h[k];
                                ++k;
                                c.push(m)
                            }
                        }
                    }
                    e = Va.convertPositionToLocal(d, new W(0, 0), a.current_group.display.container);
                    f = Va.convertPositionToLocal(d, new W(b.max_distance, 0), a.current_group.display.container);
                    k = [];
                    h = 0;
                    for (m = a.current_group.group.entities; h < m.length;) {
                        var r = m[h];
                        ++h;
                        r.position.x >= e.x && r.position.x <= f.x && null != r.bitmap_images && 1 == r.bitmap_images.images.length && -1 != c.indexOf(r.bitmap_images.images[0].source_name) && k.push(r)
                    }
                    y.startUndoPack(a.undo);
                    F.destroyEntitiesWithUndo(a.undo, k);
                    y.endUndoPack(a.undo);
                    w.trace("destroyed: " + k.length + " entities", {
                        fileName: "EditorDecorationDo.hx",
                        lineNumber: 159,
                        className: "bikas.editor.EditorDecorationDo",
                        methodName: "createDecorationUI"
                    })
                });
                Uc.generate(b, f, a, d, c);
                var m = !1,
                    r = 0,
                    I = 0,
                    g = function(a) {
                        m = !0;
                        r = d.get_x();
                        I = a.stageX
                    },
                    l = function(a) {
                        m = !1
                    };
                d.addEventListener("mouseDown", g);
                null != a.container.stage && a.container.stage.addEventListener("mouseUp", l);
                var Ba = function() {
                    var b = a.stage_group.transform.scale_x;
                    d.get_scaleX() != b && (d.set_scaleX(b), d.set_scaleY(b));
                    null != a.container.stage &&
                        m && (b = 10 * (a.container.stage.get_mouseX() - I), d.set_x(r + b))
                };
                a.quick_update_list.push(Ba);
                Ba();
                h.callbacks.debug_close_callbacks.push(function(e) {
                    d.removeEventListener("mouseDown", g);
                    null != a.container.stage && a.container.stage.removeEventListener("mouseUp", l);
                    d.removeChildren();
                    la.remove(a.quick_update_list, Ba);
                    for (e = 0; e < c.length;) {
                        var f = c[e];
                        ++e;
                        Uc.destroyDecorationSprite(f)
                    }
                    a = c = d = b = null
                });
                return h
            };
            Uc.generate = function(a, b, c, d, e) {
                for (var f = ia.getTimer(), h = 0, k = 0; k < e.length;) {
                    var m = e[k];
                    ++k;
                    Uc.destroyDecorationSprite(m)
                }
                e.splice(0,
                    e.length);
                b.setNewSeed(a.seed);
                k = 0;
                for (m = a.decoration_types; k < m.length;) {
                    var r = m[k];
                    ++k;
                    if (r.activated) {
                        r.dec_sprites = [];
                        for (var I = 0, g = 0; I < a.max_distance;) {
                            h += 1;
                            var l = b.getRandomBetweenInt(0, r.asset_names.length - 1),
                                Ba = b.getRandomBetween(r.min_distance, r.max_distance);
                            I += Ba;
                            if (I > a.max_distance) break;
                            l = Uc.createDecorationSprite(c, r.asset_names[l], r);
                            null != l && (Ba = b.getRandomBetween(r.min_scale, r.max_scale), l.sprite.set_scaleX(Ba * b.getRandomSign()), l.sprite.set_scaleY(Ba), l.sprite.set_x(I), l.sprite.set_rotation(b.getRandomBetween(r.min_rotation,
                                r.max_rotation)), e.push(l), d.addChild(l.sprite), r.dec_sprites.push(l));
                            if (g++ >= a.max_placement_count) break
                        }
                    }
                }
                c = 0;
                for (d = a.relationships; c < d.length;)
                    if (k = d[c], ++c, k.activated) {
                        k.sources = [];
                        k.target = null;
                        m = 0;
                        for (r = k.sources_names; m < r.length;) {
                            I = r[m];
                            ++m;
                            g = !1;
                            l = 0;
                            for (Ba = a.decoration_types; l < Ba.length;) {
                                var mb = Ba[l];
                                ++l;
                                h += 1;
                                if (mb.name == I) {
                                    k.sources.push(mb);
                                    g = !0;
                                    break
                                }
                            }
                            g || w.trace("warning: couldn't find " + I + " decoration type for relationship source", {
                                fileName: "EditorDecorationDo.hx",
                                lineNumber: 299,
                                className: "bikas.editor.EditorDecorationDo",
                                methodName: "generate"
                            })
                        }
                        m = k.target_name;
                        r = 0;
                        for (I = a.decoration_types; r < I.length;)
                            if (g = I[r], ++r, h += 1, g.name == m) {
                                k.target = g;
                                break
                            } null == k.target && w.trace("warning: couldn't find " + k.target_name + " decoration type for relationship target", {
                            fileName: "EditorDecorationDo.hx",
                            lineNumber: 312,
                            className: "bikas.editor.EditorDecorationDo",
                            methodName: "generate"
                        });
                        if (0 != k.sources.length && null != k.target) {
                            m = [];
                            r = 0;
                            for (I = k.sources; r < I.length;)
                                for (l = I[r], ++r, g = 0, l = l.dec_sprites; g < l.length;) Ba = l[g], ++g, h += 1, m.push(Ba);
                            r = k.target.dec_sprites.slice();
                            Uc.shuffleArray(m, b);
                            Uc.shuffleArray(r, b);
                            for (I = 0; I < m.length;)
                                for (g = m[I], ++I, l = 0; l < r.length;) {
                                    h += 1;
                                    Ba = r[l];
                                    mb = Ba.sprite.get_x() - g.sprite.get_x();
                                    if (Math.abs(mb) <= k.attract_distance) {
                                        if (b.getRandom() < k.attract_chance_coeff) {
                                            var n = Uc.getMinDistanceBetweenTypes(g.decoration_type, k.target);
                                            n = b.getRandomBetween(n, k.attract_placement_distance);
                                            0 < mb ? Ba.sprite.set_x(g.sprite.get_x() + n) : Ba.sprite.set_x(g.sprite.get_x() - n)
                                        }
                                        r.splice(l, 1)
                                    }++l
                                }
                        }
                    } e.sort(function(a, b) {
                    h += 1;
                    return a.sprite.get_x() >
                        b.sprite.get_x() ? 1 : a.sprite.get_x() < b.sprite.get_x() ? -1 : 0
                });
                c = 0;
                b = [];
                d = 1;
                for (k = e.length; d < k;) r = d++, h += 1, m = e[r - 1], r = e[r], I = Uc.getMinDistanceBetweenTypes(m.decoration_type, r.decoration_type), g = r.sprite, g.set_x(g.get_x() + c), r.sprite.get_x() - m.sprite.get_x() < I && (m = r.sprite, m.set_x(m.get_x() + I), c += I), r.sprite.get_x() > a.max_distance && -1 == b.indexOf(r) && b.push(r);
                c = 0;
                for (d = e.length; c < d;)
                    for (m = k = c++, r = e.length; m < r;)
                        if (g = m++, h += 1, I = e[k], Ba = e[g], I != Ba && (g = I.decoration_type, l = Ba.decoration_type, g == l))
                            if (Ba = Ba.sprite.get_x() -
                                I.sprite.get_x(), g = H.max(g.min_distance_to_remove_same_sprite, l.min_distance_to_remove_same_sprite), Math.abs(Ba) < g) g = I.bitmap.get_bitmapData(), l = I.bitmap.get_bitmapData(), null != g && null != l && g == l && -1 == b.indexOf(I) && b.push(I);
                            else break;
                for (c = 0; c < b.length;) d = b[c], ++c, h += 1, la.remove(e, d), Uc.destroyDecorationSprite(d);
                w.trace("decoration generate stats:", {
                    fileName: "EditorDecorationDo.hx",
                    lineNumber: 433,
                    className: "bikas.editor.EditorDecorationDo",
                    methodName: "generate"
                });
                w.trace("- seed: " + a.seed, {
                    fileName: "EditorDecorationDo.hx",
                    lineNumber: 434,
                    className: "bikas.editor.EditorDecorationDo",
                    methodName: "generate"
                });
                w.trace("- loop count: " + h, {
                    fileName: "EditorDecorationDo.hx",
                    lineNumber: 435,
                    className: "bikas.editor.EditorDecorationDo",
                    methodName: "generate"
                });
                w.trace("- remove count: " + b.length, {
                    fileName: "EditorDecorationDo.hx",
                    lineNumber: 436,
                    className: "bikas.editor.EditorDecorationDo",
                    methodName: "generate"
                });
                w.trace("- total sprites: " + e.length, {
                    fileName: "EditorDecorationDo.hx",
                    lineNumber: 437,
                    className: "bikas.editor.EditorDecorationDo",
                    methodName: "generate"
                });
                w.trace("- time: " + (ia.getTimer() - f) + "ms", {
                    fileName: "EditorDecorationDo.hx",
                    lineNumber: 438,
                    className: "bikas.editor.EditorDecorationDo",
                    methodName: "generate"
                });
                e = 0;
                for (f = a.decoration_types; e < f.length;) b = f[e], ++e, b.dec_sprites = [];
                e = 0;
                for (a = a.relationships; e < a.length;) f = a[e], ++e, f.sources = [], f.target = null;
                b = null
            };
            Uc.shuffleArray = function(a, b) {
                for (var c = 0, d = a.length; c < d;) {
                    var e = c++,
                        f = b.getRandomBetweenInt(0, a.length - 1),
                        h = a[e];
                    a[e] = a[f];
                    a[f] = h
                }
                return a
            };
            Uc.getMinDistanceBetweenTypes =
                function(a, b) {
                    return a == b ? H.max(a.min_distance_for_same_types, b.min_distance_for_same_types) : H.max(a.min_distance_for_different_types, b.min_distance_for_different_types)
                };
            Uc.createDecorationSprite = function(a, b, c) {
                var d = new Xs;
                d.decoration_type = c;
                d.default_offset = new al;
                d.default_offset.offset_x = 0;
                c = d.default_offset.offset_y = 0;
                for (var e = a.library_data.default_bitmap_offsets; c < e.length;) {
                    var f = e[c];
                    ++c;
                    if (f.name == b) {
                        d.default_offset = f;
                        break
                    }
                }
                d.source_name = b;
                d.source = V.retrieveBitmapData(d.source_name,
                    a.bitmap_assets);
                if (null == d.source) return w.trace("warning: source == null", {
                    fileName: "EditorDecorationDo.hx",
                    lineNumber: 485,
                    className: "bikas.editor.EditorDecorationDo",
                    methodName: "createDecorationSprite"
                }), null;
                d.bitmap = new If;
                d.bitmap.set_bitmapData(d.source.bitmap_data);
                d.bitmap.set_x(-d.source.center_point.x + d.default_offset.offset_x);
                d.bitmap.set_y(-d.source.center_point.y + d.default_offset.offset_y);
                d.bitmap.set_rotation(0);
                d.bitmap.smoothing = !0;
                d.sprite = new S;
                d.sprite.addChild(d.bitmap);
                return d
            };
            Uc.destroyDecorationSprite = function(a) {
                null != a.sprite.parent && a.sprite.parent.removeChild(a.sprite);
                a.source = null;
                a.sprite = null;
                a.bitmap = null;
                a.decoration_type = null;
                a.position_in_current_group = null;
                a.closest_intersection = null;
                a.intersection_normal_angle = null;
                a.polygon = null
            };
            Uc.dropSprites = function(a, b, c) {
                var d = ia.getTimer(),
                    e = 0,
                    f = a.undo;
                null == a.stage_group && w.trace("warning: can't do anything because editor.stage_group == null", {
                    fileName: "EditorDecorationDo.hx",
                    lineNumber: 528,
                    className: "bikas.editor.EditorDecorationDo",
                    methodName: "dropSprites"
                });
                for (var h = [], k = 0, m = a.current_group.group.entities; k < m.length;) {
                    var r = m[k];
                    ++k;
                    if (null != r.polygon) {
                        ++e;
                        var I = new Ys;
                        I.points = Ub.copyPolygonWithTransform(r.polygon.points, r.position, r.transform);
                        I.bounds = Ub.getPolygonBounds(I.points);
                        h.push(I)
                    }
                }
                for (k = 0; k < b.length;) m = b[k], ++k, ++e, null == m.source ? w.trace("warning: source does not exist", {
                        fileName: "EditorDecorationDo.hx",
                        lineNumber: 547,
                        className: "bikas.editor.EditorDecorationDo",
                        methodName: "dropSprites"
                    }) : m.position_in_current_group =
                    Va.convertPositionToLocal(m.sprite, new W(0, 0), a.current_group.display.container);
                k = new W(0, 0);
                for (m = 0; m < b.length;)
                    if (r = b[m], ++m, ++e, null != r.position_in_current_group)
                        for (r.closest_intersection = null, I = 0; I < h.length;) {
                            var g = h[I];
                            ++I;
                            ++e;
                            var l = r.position_in_current_group;
                            if (!(l.x > g.bounds.max_x || l.x < g.bounds.min_x || c && l.y > g.bounds.max_y || !c && l.y < g.bounds.min_y))
                                for (var Ba = 0, mb = g.points.length; Ba < mb;) {
                                    var n = Ba++;
                                    ++e;
                                    var p = 0 == n ? g.points[g.points.length - 1] : g.points[n - 1];
                                    n = g.points[n];
                                    if (!(c && (l.x < p.x || l.x >
                                            n.x) || !c && (l.x > p.x || l.x < n.x) || c && p.x > n.x || !c && p.x < n.x) && (k.x = l.x, k.y = c ? g.bounds.max_y : g.bounds.min_y, H.lineSegmentsIntersect(p, n, l, k))) {
                                        var x = H.getLineSegmentIntersection(p, n, l, k);
                                        if (null == r.closest_intersection) r.polygon = g, r.closest_intersection = x, r.intersection_normal_angle = c ? H.getAngleBetweenPoints(p, n) : H.getAngleBetweenPoints(n, p);
                                        else {
                                            var zb = !1;
                                            c ? x.y < r.closest_intersection.y && (zb = !0) : x.y > r.closest_intersection.y && (zb = !0);
                                            zb && (r.polygon = g, r.closest_intersection = x, r.intersection_normal_angle = c ?
                                                H.getAngleBetweenPoints(p, n) : H.getAngleBetweenPoints(n, p))
                                        }
                                    }
                                }
                        }
                c = [];
                h = [];
                for (k = 0; k < b.length;) m = b[k], ++k, ++e, null == m.source ? w.trace("warning: source does not exist", {
                    fileName: "EditorDecorationDo.hx",
                    lineNumber: 667,
                    className: "bikas.editor.EditorDecorationDo",
                    methodName: "dropSprites"
                }) : null != m.closest_intersection && (r = F.createBitmapEntity(m.source_name, m.source, m.default_offset), r.position.x = m.closest_intersection.x, r.position.y = m.closest_intersection.y, r.transform.scale_x = m.sprite.get_scaleX(), r.transform.scale_y =
                    m.sprite.get_scaleY(), I = ma.angleShortestLinear(0, m.intersection_normal_angle, m.decoration_type.adapt_rotation_to_polygon_coeff), g = m.sprite.get_rotation(), r.transform.rotation = g + 57.29577951308232 * I, h.push(r), -1 == c.indexOf(m.polygon) && c.push(m.polygon));
                a = a.current_group;
                for (b = 0; b < h.length;) k = h[b], ++b, ++e, k.display.depth_cache = -1, F.addEntityToGroup(a, k);
                y.startUndoPack(f);
                y.pushEntitiesCreated(f, h);
                y.endUndoPack(f);
                for (f = 0; f < h.length;) a = h[f], ++f, ++e, na.addEntityIncludingChildren(a);
                w.trace("decoration drop stats:", {
                    fileName: "EditorDecorationDo.hx",
                    lineNumber: 704,
                    className: "bikas.editor.EditorDecorationDo",
                    methodName: "dropSprites"
                });
                w.trace("- dropped: " + h.length + " entities", {
                    fileName: "EditorDecorationDo.hx",
                    lineNumber: 705,
                    className: "bikas.editor.EditorDecorationDo",
                    methodName: "dropSprites"
                });
                w.trace("- to: " + c.length + " polygons", {
                    fileName: "EditorDecorationDo.hx",
                    lineNumber: 706,
                    className: "bikas.editor.EditorDecorationDo",
                    methodName: "dropSprites"
                });
                w.trace("- loop count: " + e, {
                    fileName: "EditorDecorationDo.hx",
                    lineNumber: 707,
                    className: "bikas.editor.EditorDecorationDo",
                    methodName: "dropSprites"
                });
                w.trace("- time: " + (ia.getTimer() - d) + "ms", {
                    fileName: "EditorDecorationDo.hx",
                    lineNumber: 708,
                    className: "bikas.editor.EditorDecorationDo",
                    methodName: "dropSprites"
                });
                return h
            };
            Uc.createDecorationEdit = function(a, b, c) {
                var d = v.createDebugWindow("Decoration Types (add/remove undoable)", 350);
                v.addButton(d, "add new", function() {
                    y.startUndoPack(b);
                    var a = new Tn;
                    a.seed = .1;
                    a.max_distance = 4E3;
                    a.max_placement_count = 1E4;
                    var f = c.length;
                    y.pushArrayInsert(b, c, f);
                    c.splice(f, 0, a);
                    y.endUndoPack(b);
                    v.refreshAllFields(d)
                });
                v.addInstanceEdit(d, c, "decoration types", function(a) {
                    y.startUndoPack(b);
                    var d = new Tn;
                    d.seed = .1;
                    d.max_distance = 4E3;
                    d.max_placement_count = 1E4;
                    y.pushArrayInsert(b, c, a);
                    c.splice(a, 0, d);
                    y.endUndoPack(b)
                }, function(a) {
                    y.startUndoPack(b);
                    y.pushArrayRemove(b, c, a);
                    la.remove(c, c[a]);
                    y.endUndoPack(b)
                }, function(b) {
                    b = Uc.createDecorationUI(a, b.value);
                    ca.openClickedDebugWindow(a.menu_container, b)
                });
                return d
            };
            Uc.getDecorationTypeFields =
                function() {
                    return "name activated asset_names min_scale max_scale min_rotation max_rotation min_distance max_distance min_distance_for_same_types min_distance_for_different_types min_distance_to_remove_same_sprite adapt_rotation_to_polygon_coeff".split(" ")
                };
            Uc.getRelationshipFields = function() {
                return "name activated sources_names target_name attract_distance attract_placement_distance attract_chance_coeff".split(" ")
            };
            Uc.createDecorationTypeEdit = function(a, b) {
                var c = v.createDebugWindow("Decoration Types (add/remove undoable)",
                    400);
                c.setup.custom_fields.push(new Tk(bl, Uc.getDecorationTypeFields()));
                v.addButton(c, "add new", function() {
                    y.startUndoPack(a);
                    var d = new bl,
                        e = b.length;
                    y.pushArrayInsert(a, b, e);
                    b.splice(e, 0, d);
                    y.endUndoPack(a);
                    v.refreshAllFields(c)
                });
                v.addInstanceEdit(c, b, "decoration types", function(c) {
                    y.startUndoPack(a);
                    var d = new bl;
                    ch.copyInstanceShallow(b[c], d);
                    y.pushArrayInsert(a, b, c);
                    b.splice(c, 0, d);
                    y.endUndoPack(a)
                }, function(c) {
                    y.startUndoPack(a);
                    y.pushArrayRemove(a, b, c);
                    la.remove(b, b[c]);
                    y.endUndoPack(a)
                });
                return c
            };
            Uc.createRelationshipEdit = function(a, b) {
                var c = v.createDebugWindow("Relationships (add/remove undoable)", 350);
                c.setup.custom_fields.push(new Tk(cl, Uc.getRelationshipFields()));
                v.addButton(c, "add new", function() {
                    y.startUndoPack(a);
                    var d = new cl,
                        e = b.length;
                    y.pushArrayInsert(a, b, e);
                    b.splice(e, 0, d);
                    y.endUndoPack(a);
                    v.refreshAllFields(c)
                });
                v.addInstanceEdit(c, b, "relationships", function(c) {
                        y.startUndoPack(a);
                        var d = new cl;
                        ch.copyInstanceShallow(b[c], d);
                        y.pushArrayInsert(a, b, c);
                        b.splice(c, 0, d);
                        y.endUndoPack(a)
                    },
                    function(c) {
                        y.startUndoPack(a);
                        y.pushArrayRemove(a, b, c);
                        la.remove(b, b[c]);
                        y.endUndoPack(a)
                    });
                return c
            };
            var F = function() {};
            g["bikas.editor.EditorDo"] = F;
            F.__name__ = ["bikas", "editor", "EditorDo"];
            F.createEditor = function(a, b, c, d, e, f) {
                null == f && (f = !0);
                var h = new Ws;
                h.saving_types = e;
                h.refresh_prefabs_with_undo = f;
                h.container = a;
                h.background_shape = new Ke;
                h.entity_container = new S;
                h.edit_container = new S;
                h.menu_container = b;
                e = Ea.drawTextWithBackgroundToSource("Saving...", 32, 0, 0, !1, 1651777, 15199710, 1651777);
                h.saving_bitmap =
                    V.createBitmapUsingSource(e);
                h.saving_bitmap.set_x(5);
                h.saving_bitmap.set_y(5);
                e = Ea.drawTextWithBackgroundToSource("Saved!", 32, 0, 0, !1, 1651777, 15199710, 1651777);
                h.saved_bitmap = V.createBitmapUsingSource(e);
                h.saved_bitmap.set_x(5);
                h.saved_bitmap.set_y(5);
                e = Ea.drawTextWithBackgroundToSource("Error while saving! (Open NodeJS server and save again?)", 32, 0, 0, !1, 1651777, 15199710, 1651777);
                h.saving_error_bitmap = V.createBitmapUsingSource(e);
                h.saving_error_bitmap.set_x(5);
                h.saving_error_bitmap.set_y(5);
                h.size =
                    new rc(ia.get_current().stage.stageWidth, ia.get_current().stage.stageHeight);
                F.redrawBackground(h.background_shape, h.size);
                a.addChild(h.background_shape);
                a.addChild(h.entity_container);
                a.addChild(h.edit_container);
                h.stage_settings = F.createStageSettings();
                h.clipboard = new Qp;
                h.clipboard.type = lf.NONE;
                h.clipboard.copied_entities = [];
                h.mouse_state = new Mn;
                h.keyboard_state = new Rp;
                h.undo = y.createUndoList();
                h.editor_serial_data = J.createEditorSerialData();
                h.bitmap_assets = c;
                h.animation_assets = d;
                h.main_menu = ca.createMainMenu(h);
                ca.addMenuToContainer(h.main_menu.debug_window, b);
                h.entities_editor = new Rs;
                h.entities_editor.group = F.createGroupEntity();
                h.entities_editor.group.container_link = a;
                h.entities_editor.group.group.edit = F.createDefaultGroupEditComponent();
                h.entities_editor.entity_edits = [];
                na.addEntity(h.entities_editor.group);
                return h
            };
            F.createStageGroup = function() {
                var a = F.createGroupEntity();
                a.group.edit = F.createDefaultGroupEditComponent();
                a.name = "Stage";
                return a
            };
            F.createStageSettings = function() {
                var a = new Yp;
                a.mouse_snap_type =
                    Uj.RELATIVE;
                a.mouse_snap_size = 0;
                a.snap_to_nearest_entity_distance = 5;
                a.snap_to_nearest_polygon_point_distance = 0;
                a.snap_to_nearest_polygon_line_distance = 0;
                a.snap_to_straight_line_distance = 0;
                a.snap_to_nearest_polygon_grid_distance = 0;
                a.snap_to_nearest_polygon_grid_max_distance = 400;
                return a
            };
            F.createLibraryData = function() {
                var a = new Wp;
                a.stage_settings = F.createStageSettings();
                a.perlin_terrain_presets = Zc.createDefaultPresets();
                a.decorations = [];
                return a
            };
            F.createSerialSave = function(a) {
                var b = new Nn;
                b.name =
                    a;
                b.created_time_stamp = (new Date).getTime();
                b.save_time_stamp = 0;
                return b
            };
            F.createLibraryGroup = function() {
                var a = F.createGroupEntity();
                a.name = "Library";
                return a
            };
            F.enable = function(a) {
                a.running || (a.running = !0, ca.addMenuToContainer(a.main_menu.debug_window, a.menu_container), a.container.set_visible(!0), a.menu_container.set_visible(!0), ia.get_current().stage.set_focus(null))
            };
            F.disable = function(a) {
                a.running && (a.running = !1, v.removeFromContainer(a.main_menu.debug_window), a.container.set_visible(!1), a.menu_container.set_visible(!1))
            };
            F.overloadLibrary = function(a, b, c, d) {
                y.clear(a.undo);
                if (null != a.stage_group) {
                    var e = null;
                    e = function(a) {
                        if (null != a.group)
                            for (var b = 0, c = a.group.entities; b < c.length;) {
                                var d = c[b];
                                ++b;
                                e(d)
                            }
                        null != a.prefab_link && (a.prefab_link.library_group = null)
                    };
                    e(a.stage_group)
                }
                if (null != a.library_group) {
                    for (var f = 0, h = a.library_group.group.entities; f < h.length;) {
                        var k = h[f];
                        ++f;
                        na.removeEntityIncludingChildren(k)
                    }
                    F.destroyEntityIncludingChildren(a.library_group)
                }
                a.library_group = b;
                a.library_data = null == c ? F.createLibraryData() :
                    c;
                null == a.library_data.stage_settings && (a.library_data.stage_settings = F.createStageSettings());
                null == a.library_data.decorations && (a.library_data.decorations = []);
                a.stage_settings = a.library_data.stage_settings;
                a.library_save = d;
                var m = a.library_group.group.entities,
                    r = null;
                c = r = function(c, d) {
                    if (null != d.group)
                        for (var e = 0, f = d.group.entities; e < f.length;) {
                            var h = f[e];
                            ++e;
                            r(d, h)
                        }
                    d.container_link = c.display.contents;
                    d.parent = c;
                    if (null != d.bitmap_images)
                        for (c = 0, e = d.bitmap_images.images; c < e.length;) f = e[c], ++c, f.bitmap_data_source =
                            V.retrieveBitmapData(f.source_name, a.bitmap_assets);
                    if (null != d.prefab_link)
                        for (d.prefab_link.library_group = b, c = 0; c < m.length;)
                            if (e = m[c], ++c, d.prefab_link.guid == e.guid) {
                                d.prefab_link.prefab_entity = e;
                                break
                            }
                };
                for (d = 0; d < m.length;) f = m[d], ++d, f.prefab.links = [], c(a.library_group, f);
                c = F.getSortedPrefabsByLayersOfInnerPrefabs(m);
                for (f = d = 0; f < c.length;) h = c[f], ++f, h.display.depth_cache = d, na.addEntityIncludingChildren(h), h.prefab.bitmap_data_source = V.createAndDrawSource(h.display.contents, !0, !1, 1, 1), ++d;
                if (null !=
                    a.stage_group) {
                    var I = null;
                    I = function(a) {
                        if (null != a.group)
                            for (var c = 0, d = a.group.entities; c < d.length;) {
                                var e = d[c];
                                ++c;
                                I(e)
                            }
                        null != a.prefab_link && (a.prefab_link.library_group = b, na.refreshEntityIncludingChildren(a))
                    };
                    I(a.stage_group)
                }
                ca.overloadLibraryMenus(a)
            };
            F.overloadStage = function(a, b, c) {
                y.clear(a.undo);
                null != a.stage_group && F.removeAndDestroyEntityIncludingChildren(a.stage_group);
                for (var d = 0, e = a.entities_editor.entity_edits; d < e.length;) {
                    var f = e[d];
                    ++d;
                    F.destroyEntityEdit(f)
                }
                a.entities_editor.entity_edits = [];
                var h = null;
                d = h = function(b) {
                    if (null != b.group)
                        for (var c = 0, d = b.group.entities; c < d.length;) {
                            var e = d[c];
                            ++c;
                            h(e);
                            e.container_link = b.display.contents;
                            e.parent = b
                        }
                    if (null != b.bitmap_images)
                        for (c = 0, d = b.bitmap_images.images; c < d.length;) e = d[c], ++c, e.bitmap_data_source = V.retrieveBitmapData(e.source_name, a.bitmap_assets);
                    null != b.prefab_link && (b.prefab_link.library_group = a.library_group)
                };
                a.clipboard.type = lf.NONE;
                a.clipboard.copied_entities = [];
                a.stage_group = b;
                b.group.edit = F.createDefaultGroupEditComponent();
                a.current_group = b;
                a.stage_save = c;
                d(a.stage_group);
                a.stage_group.container_link = a.entity_container;
                na.addEntityIncludingChildren(a.stage_group);
                ca.overloadStageMenus(a);
                b.display.contents.get_graphics().clear();
                Ea.drawCross(b.display.contents.get_graphics(), 100, 1651777, 1, 1)
            };
            F.runEditor = function(a) {
                a.listeners_added ? w.trace("warning: editor already has listeners", {
                    fileName: "EditorDo.hx",
                    lineNumber: 327,
                    className: "bikas.editor.EditorDo",
                    methodName: "runEditor"
                }) : null == a.stage_group ? w.trace("warning: can't run editor with no stage group", {
                    fileName: "EditorDo.hx",
                    lineNumber: 331,
                    className: "bikas.editor.EditorDo",
                    methodName: "runEditor"
                }) : (a.mouse_event = function(b) {
                    if (a.running) {
                        var c = a.mouse_state,
                            d = a.container;
                        "mouseOver" == b.type ? c.is_overed = !0 : "mouseOut" == b.type ? c.is_overed = !1 : "mouseDown" == b.type ? (c.downed.x = d.get_mouseX(), c.downed.y = d.get_mouseY(), c.button_state = ya.DOWNED) : "mouseUp" == b.type ? (c.upped.x = d.get_mouseX(), c.upped.y = d.get_mouseY(), b = Math.abs(c.upped.x - c.downed.x), d = Math.abs(c.upped.y - c.downed.y), c.button_state = c.button_state ==
                            ya.DOWNED || c.button_state == ya.DRAGGED && 3 >= b && 3 >= d ? ya.CLICKED : ya.UPPED) : "middleClick" == b.type ? F.setEditorScaleWithUndo(a, 1) : "mouseWheel" == b.type && (0 < b.delta ? F.changeZoomWithUndo(a, Math.round(b.delta / 3)) : 0 > b.delta && F.changeZoomWithUndo(a, Math.round(b.delta / 3)))
                    }
                }, a.keyboard_event = function(b) {
                    var c = a.keyboard_state,
                        d = b.keyCode;
                    c.ctrl = b.ctrlKey;
                    c.shift = b.shiftKey;
                    c.alt = b.altKey;
                    a.running && ("keyDown" == b.type ? 16 != d && 17 != d && (c.pressed = d, c.holding = d) : "keyUp" == b.type && 16 != d && 17 != d && (c.released = d, c.holding = -1), null != a.container && null != a.container.stage && null != a.container.stage && (b = a.container.stage.get_focus(), null != b && E.is(b, hd) && 1 == aa.__cast(b, hd).get_type() && (c.holding = -1, c.pressed = -1, c.released = -1)))
                }, a.update_event = function(b) {
                    if (a.running) {
                        b = a.mouse_state;
                        var c = a.keyboard_state,
                            d = a.container;
                        b.current.x = d.get_mouseX();
                        b.current.y = d.get_mouseY();
                        null != a.stage_group && F.update(a);
                        b.button_state == ya.DOWNED && (b.button_state = ya.DRAGGED);
                        b.button_state == ya.CLICKED && (b.button_state = ya.UPPED);
                        c.pressed = -1;
                        c.released = -1
                    }
                }, a.container.addEventListener("mouseOver", a.mouse_event), a.container.addEventListener("mouseOut", a.mouse_event), a.container.addEventListener("mouseDown", a.mouse_event), ia.get_current().stage.addEventListener("mouseUp", a.mouse_event), ia.get_current().stage.addEventListener("mouseWheel", a.mouse_event), ia.get_current().stage.addEventListener("middleClick", a.mouse_event), ia.get_current().stage.addEventListener("keyDown", a.keyboard_event), ia.get_current().stage.addEventListener("keyUp",
                    a.keyboard_event), a.container.addEventListener("enterFrame", a.update_event), a.listeners_added = !0, a.running = !0)
            };
            F.setDefaultState = function(a) {
                a.deletable = !0;
                a.draggable = !0;
                a.groupable = !0;
                a.in_current_container = !1;
                a.overed = !1;
                a.overed_drawn = !0;
                a.selectable = !0;
                a.selected = !1;
                a.selected_drawn = !1;
                a.selected_draw_type = id.DEFAULT;
                a.transform_editable = !1
            };
            F.createAndSetDefaultComponents = function(a) {
                a.guid = wg.generate();
                a.name = "Entity";
                a.position = new W(0, 0);
                a.transform = new $d;
                a.transform.rotation = 0;
                a.transform.scale_x =
                    1;
                a.transform.scale_y = 1;
                a.display = new On;
                a.display.container = new S;
                a.display.contents = new S;
                a.display.container.addChild(a.display.contents);
                a.display.depth_cache = -1;
                a.internal_bounds = new Ie(0, 0, 0, 0);
                a.visible_bounds = new Ie(0, 0, 0, 0);
                a.parent = null;
                a.container_link = null;
                a.selected_shape = null;
                a.dragging = null
            };
            F.createDefaultGroupComponent = function() {
                var a = new Pn;
                a.entities = [];
                a.ungroupable = !0;
                a.edit = null;
                return a
            };
            F.createDefaultGroupEditComponent = function() {
                var a = new Js;
                a.dragging_entities = [];
                a.selected_entities = [];
                return a
            };
            F.createDefaultBitmapImageContainerComponent = function() {
                var a = new Xk;
                a.container = new S;
                a.images = [];
                return a
            };
            F.createDefaultBitmapImageComponent = function() {
                var a = new Je;
                a.bitmap = new If;
                a.offset_x = 0;
                a.offset_y = 0;
                a.rotation = 0;
                a.bitmap_animation = null;
                return a
            };
            F.createDefaultCircleComponent = function() {
                var a = new Zk;
                a.body_type = kc.NONE;
                a.editable = !0;
                a.fill_draw = !0;
                a.fill_draw_type = ij.DEFAULT;
                a.radius = 25;
                return a
            };
            F.createDefaultPolygonComponent = function() {
                var a = new jj;
                a.body_type = kc.NONE;
                a.convex_cache_points = null;
                a.convex_cached = !1;
                a.editable = !0;
                a.draw_type = Lg.DEFAULT;
                a.alpha = 1;
                a.color = 9546397;
                a.texture = null;
                var b = [];
                b.push(new W(-25, -25));
                b.push(new W(25, -25));
                b.push(new W(25, 25));
                b.push(new W(-25, 25));
                a.points = b;
                return a
            };
            F.createDefaultLineDraw = function() {
                var a = new Tp;
                a.shape = new Ke;
                a.start = new W(0, 0);
                a.end = new W(0, 0);
                a.thickness = 2;
                a.color = 1651777;
                return a
            };
            F.createDefaultPointDraw = function() {
                var a = new Up;
                a.shape = new Ke;
                return a
            };
            F.createDefaultStringDraw = function() {
                var a = new Vp;
                a.bitmap = new If;
                a.offset_x = 0;
                a.offset_y = 0;
                a.padding = 0;
                return a
            };
            F.createDefaultEntity = function() {
                var a = new Tj;
                F.setDefaultState(a);
                F.createAndSetDefaultComponents(a);
                return a
            };
            F.createGroupEntity = function() {
                var a = F.createDefaultEntity();
                a.name = "Group";
                a.selected_draw_type = id.GROUP;
                a.transform_editable = !0;
                a.group = F.createDefaultGroupComponent();
                return a
            };
            F.createBitmapEntity = function(a, b, c) {
                var d = F.createDefaultEntity();
                d.name = a;
                d.transform_editable = !0;
                d.bitmap_images = F.createDefaultBitmapImageContainerComponent();
                new Je;
                var e = F.createDefaultBitmapImageComponent();
                e.source_name = a;
                e.bitmap_data_source = b;
                null != c && (e.offset_x = c.offset_x, e.offset_y = c.offset_y);
                d.bitmap_images.images.push(e);
                return d
            };
            F.createCircleEntity = function() {
                var a = F.createDefaultEntity();
                a.name = "Circle";
                a.circle = F.createDefaultCircleComponent();
                return a
            };
            F.createPolygonEntity = function() {
                var a = F.createDefaultEntity();
                a.name = "Polygon";
                a.transform_editable = !0;
                a.polygon = F.createDefaultPolygonComponent();
                return a
            };
            F.createMarkerEntity = function() {
                var a =
                    F.createDefaultEntity();
                a.name = "Marker";
                a.transform_editable = !1;
                F.createAndAddPointDraw(a, Hd.CIRCLE_LIGHT, 10);
                a.additional.point_draw.cross_type = hj.DEFAULT;
                F.createAndAddStringDraw(a, a.name, Yc.DEFAULT, 12);
                a.additional.string_draw.offset_y = -20;
                return a
            };
            F.createTextEntity = function() {
                var a = F.createDefaultEntity();
                a.name = "Text";
                a.transform_editable = !1;
                F.createAndAddStringDraw(a, a.name, Yc.DEFAULT, 12);
                a.additional.string_draw.offset_y = -20;
                a.additional.string_draw.use_name = !0;
                return a
            };
            F.createPrefabLinkEntity =
                function(a, b) {
                    var c = F.createDefaultEntity();
                    c.name = b.name;
                    c.transform_editable = !0;
                    c.selected_draw_type = id.PREFAB_LINK;
                    var d = new Ah;
                    d.guid = b.guid;
                    d.library_group = a;
                    d.prefab_entity = b;
                    c.prefab_link = d;
                    return c
                };
            F.createEditEntity = function(a, b) {
                var c = F.createDefaultEntity();
                c.name = "Edit Entity";
                c.deletable = !1;
                c.groupable = !1;
                c.selected_draw_type = id.BOUNDS;
                c.transform_editable = !1;
                F.createAndAddPointDraw(c, a, b);
                return c
            };
            F.createTransformEditEntities = function(a, b, c, d) {
                var e = new Ms;
                e.all = [];
                var f = function() {
                        var a =
                            F.createEditEntity(Hd.SQUARE_DARK, 6);
                        e.all.push(a);
                        return a
                    },
                    h = function() {
                        var a = F.createEditEntity(Hd.CIRCLE_DARK, 6);
                        e.all.push(a);
                        return a
                    };
                d && (e.top_left = h());
                c && (e.top_right = f(), e.bottom_right = f(), e.bottom_left = f());
                a && (e.center_left = f(), e.center_right = f());
                b && (e.top_center = f(), e.bottom_center = f());
                return e
            };
            F.createAndAddLineDraw = function(a) {
                null == a.additional && (a.additional = new Yk);
                null != a.additional.line_draw ? w.trace("warning: LineDraw is already added", {
                    fileName: "EditorDo.hx",
                    lineNumber: 772,
                    className: "bikas.editor.EditorDo",
                    methodName: "createAndAddLineDraw"
                }) : a.additional.line_draw = F.createDefaultLineDraw();
                return a.additional.line_draw
            };
            F.createAndAddPointDraw = function(a, b, c) {
                null == a.additional && (a.additional = new Yk);
                if (null != a.additional.point_draw) w.trace("warning: PointDraw is already added", {
                    fileName: "EditorDo.hx",
                    lineNumber: 784,
                    className: "bikas.editor.EditorDo",
                    methodName: "createAndAddPointDraw"
                });
                else {
                    var d = F.createDefaultPointDraw();
                    d.type = b;
                    d.cross_type = hj.NONE;
                    d.size = c;
                    a.additional.point_draw =
                        d
                }
                return a.additional.point_draw
            };
            F.createAndAddStringDraw = function(a, b, c, d) {
                null == a.additional && (a.additional = new Yk);
                if (null != a.additional.string_draw) w.trace("warning: StringDraw is already added", {
                    fileName: "EditorDo.hx",
                    lineNumber: 800,
                    className: "bikas.editor.EditorDo",
                    methodName: "createAndAddStringDraw"
                });
                else {
                    var e = F.createDefaultStringDraw();
                    e.text = b;
                    e.type = c;
                    e.size = d;
                    a.additional.string_draw = e
                }
                return a.additional.string_draw
            };
            F.addEntityToGroup = function(a, b) {
                b.parent = a;
                b.container_link = a.display.contents;
                a.group.entities.push(b)
            };
            F.removeEntityFromGroup = function(a) {
                la.remove(a.parent.group.entities, a);
                a.parent = null;
                a.container_link = null
            };
            F.centerGroup = function(a, b) {
                for (var c = a.internal_bounds.x + a.internal_bounds.width / 2, d = a.internal_bounds.y + a.internal_bounds.height / 2, e = a.position.x - c, f = a.position.y - d, h = 0, k = a.group.entities; h < k.length;) {
                    var m = k[h];
                    ++h;
                    null != b && (y.pushChange(b, m.position, "x", m.position.x), y.pushChange(b, m.position, "y", m.position.y));
                    m.position.x += e;
                    m.position.y += f;
                    na.refreshPosition(m)
                }
                null !=
                    b && (y.pushChange(b, a.position, "x", a.position.x), y.pushChange(b, a.position, "y", a.position.y));
                a.position.x = c;
                a.position.y = d
            };
            F.gotoDeeperGroupWithUndo = function(a, b, c) {
                for (var d = 0, e = b.current_group.group.entities; d < e.length;) {
                    var f = e[d];
                    ++d;
                    Vj.remove(f)
                }
                d = 0;
                for (e = b.current_group.group.edit.dragging_entities.slice(); d < e.length;) f = e[d], ++d, $c.remove(f);
                y.pushChange(a, c, "selected", c.selected);
                c.selected = !1;
                y.pushChange(a, b.current_group.group, "edit", b.current_group.group.edit);
                b.current_group.group.edit =
                    null;
                y.pushChange(a, c.group, "edit", c.group.edit);
                c.group.edit = F.createDefaultGroupEditComponent();
                y.pushChange(a, b, "current_group", b.current_group);
                b.current_group = c;
                na.refreshEntityIncludingChildren(b.stage_group)
            };
            F.gotoUpperGroupWithUndo = function(a, b, c) {
                for (var d = 0, e = b.current_group.group.entities; d < e.length;) {
                    var f = e[d];
                    ++d;
                    Vj.remove(f)
                }
                d = 0;
                for (e = b.current_group.group.edit.dragging_entities.slice(); d < e.length;) f = e[d], ++d, $c.remove(f);
                d = 0;
                for (e = b.current_group.group.edit.selected_entities.slice(); d <
                    e.length;) f = e[d], ++d, y.pushChange(a, f, "selected", f.selected), Zb.remove(f);
                y.pushChange(a, b.current_group.group, "edit", b.current_group.group.edit);
                b.current_group.group.edit = null;
                y.pushChange(a, c.group, "edit", c.group.edit);
                c.group.edit = F.createDefaultGroupEditComponent();
                y.pushChange(a, b, "current_group", b.current_group);
                b.current_group = c
            };
            F.moveEntitiesToDifferentGroupWithUndo = function(a, b, c, d) {
                F.sortEntitiesByDepth(d);
                for (var e = 0; e < d.length;) {
                    var f = d[e];
                    ++e;
                    y.pushChange(a, f, "selected", f.selected)
                }
                y.pushEntitiesMoved(a,
                    d, b, c);
                a = c.display.contents.get_numChildren();
                for (b = 0; b < d.length;) e = d[b], ++b, e.display.depth_cache = a, na.removeEntity(e), F.removeEntityFromGroup(e), F.addEntityToGroup(c, e), na.addEntity(e), ++a
            };
            F.changeEntitiesDepth = function(a, b, c, d, e) {
                for (var f = !1, h = 0; h < e.length;) {
                    var k = e[h];
                    ++h;
                    var m = k.display.depth_cache;
                    d ? b ? m = 0 : c && (m = k.parent.display.contents.get_numChildren() - 1) : b ? --m : c && ++m;
                    if (0 <= m && m < k.parent.display.contents.get_numChildren()) {
                        y.pushDepth(a, k.parent, k, k.display.depth_cache);
                        f = !0;
                        var r = k.parent.display.contents;
                        r.removeChild(k.display.container);
                        r.addChildAt(k.display.container, m)
                    }
                }
                return f
            };
            F.createPrefabWithUndo = function(a, b, c) {
                var d = a.undo;
                y.startUndoPack(d);
                for (var e = F.createGroupEntity(), f = [], h, k = 0; k < c.length;) h = c[k], ++k, h = F.copyEntity(h, a.editor_serial_data, !1), h.selected = !1, f.push(h);
                F.sortEntitiesByDepth(f);
                for (h = k = 0; h < f.length;) {
                    var m = f[h];
                    ++h;
                    m.display.depth_cache = k;
                    F.removeEntityFromGroup(m);
                    F.addEntityToGroup(e, m);
                    na.addEntityIncludingChildren(m);
                    ++k
                }
                F.addEntityToGroup(a.library_group, e);
                y.pushEntitiesCreated(d,
                    [e]);
                na.addEntity(e);
                F.centerGroup(e);
                f = H.copyPoint(e.position);
                e.position.x = 0;
                e.position.y = 0;
                na.refreshEntityIncludingChildren(e);
                k = [];
                for (h = 0; h < c.length;) m = c[h], ++h, k.push(m);
                F.sortEntitiesByDepth(k);
                F.destroyEntitiesWithUndo(d, k);
                e.prefab = new Qn;
                e.prefab.bitmap_data_source = V.createAndDrawSource(e.display.contents, !0, !1, 1, 1);
                e.prefab.links = [];
                a = F.createPrefabLinkEntity(a.library_group, e);
                a.position.x = f.x;
                a.position.y = f.y;
                y.pushEntitiesCreated(d, [a]);
                F.addEntityToGroup(b, a);
                na.addEntity(a);
                a.selectable &&
                    (y.pushChange(d, a, "selected", a.selected), Zb.add(a));
                y.endUndoPack(d);
                na.refreshGroupLengthChanged(b);
                return [e, a]
            };
            F.restoreEntitiesWithUndo = function(a, b) {
                y.pushEntitiesCreated(a, b);
                a = [];
                for (var c = 0; c < b.length;) {
                    var d = b[c];
                    ++c;
                    F.addEntityToGroup(d.parent, d);
                    null != d.parent && -1 == a.indexOf(d.parent) && a.push(d.parent)
                }
                for (c = 0; c < b.length;) d = b[c], ++c, na.addEntity(d), na.refreshPrefabLinksIncludingChildren(d);
                for (b = 0; b < a.length;) c = a[b], ++b, na.refreshGroupLengthChanged(c), F.sortEntitiesByDepth(c.group.entities)
            };
            F.destroyEntitiesWithUndo = function(a, b) {
                y.pushEntitiesDestroyed(a, b);
                a = [];
                for (var c = 0; c < b.length;) {
                    var d = b[c];
                    ++c;
                    var e = d.parent;
                    var f = d.selected;
                    null != d.parent && -1 == a.indexOf(d.parent) && a.push(d.parent);
                    na.removeEntity(d);
                    na.removePrefabLinksIncludingChildren(d);
                    F.removeEntityFromGroup(d);
                    d.parent = e;
                    d.selected = f
                }
                for (b = 0; b < a.length;) e = a[b], ++b, na.refreshGroupLengthChanged(e)
            };
            F.destroyEntityIncludingChildren = function(a) {
                a.position = null;
                a.transform = null;
                a.internal_bounds = null;
                a.visible_bounds = null;
                null != a.parent && la.remove(a.parent.group.entities, a);
                a.parent = null;
                a.container_link = null;
                a.selected_shape = null;
                if (null != a.group) {
                    for (; 0 < a.group.entities.length;) F.destroyEntityIncludingChildren(a.group.entities[0]);
                    null != a.group.edit && (a.group.edit.selected_entities = null, a.group.edit.dragging_entities = null)
                }
                a.group = null;
                if (null != a.bitmap_images) {
                    for (var b = 0, c = a.bitmap_images.images; b < c.length;) {
                        var d = c[b];
                        ++b;
                        d.bitmap = null;
                        d.bitmap_animation = null;
                        d.bitmap_data_source = null
                    }
                    a.bitmap_images.images = null;
                    a.bitmap_images.container = null
                }
                null != a.prefab_link && null != a.prefab_link.bitmap && a.display.contents.removeChild(a.prefab_link.bitmap);
                if (null != a.prefab) {
                    b = 0;
                    for (c = a.prefab.links; b < c.length;) d = c[b], ++b, d.display.contents.removeChild(d.prefab_link.bitmap), d.prefab_link.prefab_entity = null, d.prefab_link.bitmap = null;
                    a.prefab.bitmap_data_source.bitmap_data.dispose();
                    a.prefab.bitmap_data_source = null
                }
                a.display = null;
                a.bitmap_images = null;
                a.circle = null;
                a.polygon = null;
                a.prefab_link = null;
                a.additional = null;
                a.right_click_event =
                    null;
                a.right_click_callback = null
            };
            F.removeAndDestroyEntityIncludingChildren = function(a) {
                na.removeEntityIncludingChildren(a);
                F.destroyEntityIncludingChildren(a)
            };
            F.saveToSharedObjects = function(a) {
                w.trace("saving to shared object...", {
                    fileName: "EditorDo.hx",
                    lineNumber: 1123,
                    className: "bikas.editor.EditorDo",
                    methodName: "saveToSharedObjects"
                });
                a.menu_container.addChild(a.saving_bitmap);
                var b = 0,
                    c = null;
                c = function(d) {
                    if (1 <= b) {
                        var e = ia.getTimer();
                        d = J.serializeStage(a.editor_serial_data, a);
                        var f = ia.getTimer() -
                            e;
                        e = ia.getTimer();
                        var h = J.serializeLibrary(a.editor_serial_data, a);
                        e = ia.getTimer() - e;
                        vd.saveToLocalSharedObject("stage", d);
                        vd.saveToLocalSharedObject("library", h);
                        F.traceSerialization("saved:stage", d, a.stage_save, f);
                        F.traceSerialization("saved:library", h, a.library_save, e);
                        a.menu_container.removeChild(a.saving_bitmap);
                        a.menu_container.removeEventListener("enterFrame", c);
                        w.trace("saved to shared object", {
                            fileName: "EditorDo.hx",
                            lineNumber: 1141,
                            className: "bikas.editor.EditorDo",
                            methodName: "saveToSharedObjects"
                        })
                    }
                    b +=
                        1
                };
                a.menu_container.addEventListener("enterFrame", c)
            };
            F.traceSerialization = function(a, b, c, d) {
                if (null == b) w.trace("bytes == null again..., check why :)", {
                    fileName: "EditorDo.hx",
                    lineNumber: 1150,
                    className: "bikas.editor.EditorDo",
                    methodName: "traceSerialization"
                });
                else {
                    var e = c.save_time_stamp;
                    a = a + " (" + d + "ms," + (Math.round(b.length / 1024 * 10) / 10 + "kb), name: ") + c.name;
                    c = ", created: " + E.string(new Date(c.created_time_stamp));
                    e = ", last saved: " + E.string(new Date(e));
                    w.trace(a + c + e, {
                        fileName: "EditorDo.hx",
                        lineNumber: 1160,
                        className: "bikas.editor.EditorDo",
                        methodName: "traceSerialization"
                    })
                }
            };
            F.loadStageAndLibraryDirectlyToEditor = function(a, b, c) {
                c = J.unserializeLibrary(a.editor_serial_data, c);
                b = J.unserializeStage(a.editor_serial_data, b);
                null != a.stage_group && F.removeAndDestroyEntityIncludingChildren(a.stage_group);
                if (null != a.library_group) {
                    for (var d = 0, e = a.library_group.group.entities; d < e.length;) {
                        var f = e[d];
                        ++d;
                        na.removeEntityIncludingChildren(f)
                    }
                    F.destroyEntityIncludingChildren(a.library_group)
                }
                a.stage_group = null;
                a.library_group =
                    null;
                ca.setTextForExpandBox(a.main_menu.library_expandbox, "Library");
                F.overloadLibrary(a, c.group, c.library_data, c.save);
                ca.setTextForExpandBox(a.main_menu.stage_expandbox, "Stage");
                F.overloadStage(a, b.group, b.save)
            };
            F.addNewPolygonPointEdit = function(a, b, c, d, e, f, h, k, m, r, I, g) {
                var tc = a.undo,
                    l = 0;
                for (m = m.slice(); l < m.length;) {
                    var mb = m[l];
                    ++l;
                    $c.remove(mb)
                }
                l = 0;
                for (r = r.slice(); l < r.length;) m = r[l], ++l, $c.remove(m);
                r = 0;
                for (I = I.slice(); r < I.length;) l = I[r], ++r, h.target != l && Zb.remove(l);
                I = 0;
                for (g = g.slice(); I < g.length;) r =
                    g[I], ++I, Zb.remove(r);
                g = h.target.polygon.points;
                k = g.indexOf(k.polygon_point) + 1;
                y.startUndoPack(tc);
                y.pushArrayInsert(tc, g, k);
                d = Va.convertPositionToLocal(d.display.contents, e.current, h.target.display.contents);
                g.splice(k, 0, d);
                F.updatePolygonEdit(h, a.entities_editor.group, f);
                e = 0;
                for (k = h.polygon_edit.edit_points; e < k.length;)
                    if (f = k[e], ++e, f.polygon_point == d) {
                        h = Va.convertPositionToLocal(h.target.display.container, d, f.entity.container_link);
                        f.entity.position.x = h.x;
                        f.entity.position.y = h.y;
                        Zb.add(f.entity);
                        break
                    } F.dragOrMoveEntityEdits(a, c, tc, b, !0);
                y.endUndoPack(tc)
            };
            F.updatePolygonEdit = function(a, b, c) {
                var d = a.target;
                a = a.polygon_edit;
                for (var e = d.polygon.points, f = [], h = []; null != d.parent;) h.push(d), d = d.parent;
                d = c.x;
                for (var k = c.y, m = d + c.width, r = k + c.height, I = 0; I < e.length;) {
                    var g = e[I];
                    ++I;
                    var l = g.x;
                    var Ba = g.y;
                    for (var mb = 0; mb < h.length;) {
                        var n = h[mb];
                        ++mb;
                        var p = n.transform;
                        c = H.getTransformX(l, Ba, p.scale_x, p.scale_y, .017453292519943 * p.rotation);
                        Ba = H.getTransformY(l, Ba, p.scale_x, p.scale_y, .017453292519943 * p.rotation);
                        l = c + n.position.x;
                        Ba += n.position.y
                    }
                    l < d || Ba < k || l > m || Ba > r || f.push(g)
                }
                h = [];
                k = 0;
                for (m = a.edit_points; k < m.length;) c = m[k], ++k, d = f.indexOf(c.polygon_point), -1 != d ? f.splice(d, 1) : c.entity.selected ? -1 == e.indexOf(c.polygon_point) && h.push(c) : h.push(c);
                for (d = 0; d < f.length;) k = f[d], ++d, 0 < h.length ? (h[0].polygon_point = k, h.shift()) : (e = new Os, e.entity = F.createEditEntity(Hd.SQUARE_LIGHT, 7), e.polygon_point = k, F.addEntityToGroup(b, e.entity), na.addEntity(e.entity), a.edit_points.push(e));
                for (; 0 < h.length;) F.removeAndDestroyEntityIncludingChildren(h[0].entity),
                    la.remove(a.edit_points, h[0]), h.shift()
            };
            F.dragOrMoveEntityEdits = function(a, b, c, d, e, f, h, k) {
                null == k && (k = 0);
                null == h && (h = 0);
                for (var m = 0; m < d.length;) {
                    var r = d[m];
                    ++m;
                    if (null != r.transform_edit) {
                        for (var I = !1, g = 0, l = r.transform_edit.all; g < l.length;) {
                            var Ba = l[g];
                            ++g;
                            if (null != Ba.dragging) {
                                I = !0;
                                break
                            }
                        }
                        if (!I)
                            for (I = 0, g = r.transform_edit.all; I < g.length;)
                                if (l = g[I], ++I, l.selected && l.draggable) {
                                    F.pushTransformEdit(a, c, r);
                                    e ? $c.add(l, F.getSnappedPosition(b.current, a.stage_settings.mouse_snap_size)) : (l.dragging = new W(0,
                                        0), l.position.x += h, l.position.y += k, f.push(l));
                                    break
                                }
                    }
                    null != r.circle_edit && (I = r.circle_edit.top_center, null == I.dragging && I.selected && I.draggable && (F.pushCircleEdit(a, c, r), e ? $c.add(I, F.getSnappedPosition(b.current, a.stage_settings.mouse_snap_size)) : (I.dragging = new W(0, 0), I.position.x += h, I.position.y += k, f.push(I))));
                    if (null != r.polygon_edit)
                        for (g = 0, l = r.polygon_edit.edit_points; g < l.length;) Ba = l[g], ++g, I = Ba.entity, null == I.dragging && I.selected && I.draggable && (F.pushPolygonEdit(a, c, r, Ba), e ? $c.add(I, F.getSnappedPosition(b.current,
                            a.stage_settings.mouse_snap_size)) : (I.dragging = new W(0, 0), I.position.x += h, I.position.y += k, f.push(I)))
                }
            };
            F.pushTransformEdit = function(a, b, c) {
                y.pushChange(b, c.target.transform, "scale_x", c.target.transform.scale_x);
                y.pushChange(b, c.target.transform, "scale_y", c.target.transform.scale_y);
                y.pushChange(b, c.target.transform, "rotation", c.target.transform.rotation);
                b = H.copyRectangle(c.target.internal_bounds);
                c.transform_edit.transform_points_before_drag = F.calculateTransformEditPoints(b, c.target.display.container,
                    a.entities_editor.group.display.contents);
                c.transform_edit.transform_before_drag = H.copyTransform(c.target.transform)
            };
            F.pushCircleEdit = function(a, b, c) {
                y.pushChange(b, c.target.circle, "radius", c.target.circle.radius);
                b = new W(0, -c.target.circle.radius);
                c.circle_edit.position_before = Va.convertPositionToLocal(c.target.display.container, b, a.entities_editor.group.display.contents);
                c.circle_edit.radius_before = c.target.circle.radius
            };
            F.pushPolygonEdit = function(a, b, c, d) {
                y.pushChange(b, d.polygon_point, "x", d.polygon_point.x);
                y.pushChange(b, d.polygon_point, "y", d.polygon_point.y);
                d.position_before = Va.convertPositionToLocal(c.target.display.container, d.polygon_point, a.entities_editor.group.display.contents);
                d.polygon_point_before = H.copyPoint(d.polygon_point)
            };
            F.redrawBackground = function(a, b) {
                a.get_graphics().beginFill(16777215, 1);
                a.get_graphics().drawRect(0, 0, b.width, b.height);
                a.get_graphics().endFill()
            };
            F.copyEntity = function(a, b, c) {
                var d = null;
                d = function(a, e, f) {
                    var h = a;
                    if (null != h)
                        if (11 == f[0]) {
                            a = aa.__cast(a, Array);
                            if (null ==
                                e) e = [];
                            else
                                for (e = aa.__cast(e, Array); e.length > a.length;) e.pop();
                            f = f.slice();
                            f.shift();
                            for (var k = 0, m = a.length; k < m;) {
                                var r = k++;
                                r >= e.length ? (h = d(a[r], null, f), e.push(h)) : (h = d(a[r], e[r], f), e[r] = h)
                            }
                            h = e
                        } else if (12 == f[0]) {
                        f = null;
                        h = 0;
                        for (k = b.classes; h < k.length;)
                            if (m = k[h], ++h, E.is(a, m.serial_type)) {
                                f = m;
                                break
                            } if (null == f) return w.trace("warning: couldn't find type for " + E.string(a), {
                            fileName: "EditorDo.hx",
                            lineNumber: 1463,
                            className: "bikas.editor.EditorDo",
                            methodName: "copyEntity"
                        }), null;
                        h = e;
                        null == h && (h = null != f.init_func ?
                            f.init_func() : Q.createInstance(f.serial_type, []));
                        f.serial_type == Je ? aa.__cast(h, Je).bitmap_data_source = aa.__cast(a, Je).bitmap_data_source : f.serial_type == Ah && (aa.__cast(h, Ah).prefab_entity = aa.__cast(a, Ah).prefab_entity, aa.__cast(h, Ah).library_group = aa.__cast(a, Ah).library_group);
                        e = f.fields.slice();
                        if (c && f.serial_type == Tj)
                            for (f = 0; f < e.length;)
                                if (k = e[f], ++f, "guid" == k.field_name) {
                                    la.remove(e, k);
                                    break
                                } for (m = 0; m < e.length;) r = e[m], ++m, f = T.field(a, r.field_name), k = T.field(h, r.field_name), T.setField(h, r.field_name,
                            d(f, k, r.value_type_flags))
                    } else 128 == f[0] ? (h = aa.__cast(e, W), null == h && (h = new W(0, 0)), h.x = aa.__cast(a, W).x, h.y = aa.__cast(a, W).y) : 129 == f[0] && (h = aa.__cast(e, $d), null == h && (h = new $d), a = aa.__cast(a, $d), h.scale_x = a.scale_x, h.scale_y = a.scale_y, h.rotation = a.rotation);
                    return h
                };
                var e = null,
                    f = e = function(a) {
                        if (null != a.group)
                            for (var b = 0, c = a.group.entities; b < c.length;) {
                                var d = c[b];
                                ++b;
                                e(d);
                                d.container_link = a.display.contents;
                                d.parent = a
                            }
                    },
                    h = aa.__cast(d(a, null, [12]), Tj);
                f(h);
                h.parent = a.parent;
                h.container_link = a.container_link;
                return h
            };
            F.applyTransformAndCutPolygonWithUndo = function(a, b, c) {
                var d = a.undo;
                F.applyTransformToPolygonPointsAndCenter(b, d);
                var e = b.polygon.points,
                    f = Va.convertPositionToLocal(a.container, new W(0, 0), b.display.contents);
                c ? (c = tb.cutByLeftX(e, f.x), f = tb.cutByRightX(e, f.x)) : (c = tb.cutByTopY(e, f.y), f = tb.cutByBottomY(e, f.y));
                e = [];
                if (null != c)
                    for (var h = 0; h < c.length;) {
                        var k = c[h];
                        ++h;
                        e.push(k)
                    }
                if (null != f)
                    for (c = 0; c < f.length;) h = f[c], ++c, e.push(h);
                if (null == e || 1 == e.length) w.trace("cut didn't happen", {
                    fileName: "EditorDo.hx",
                    lineNumber: 1567,
                    className: "bikas.editor.EditorDo",
                    methodName: "applyTransformAndCutPolygonWithUndo"
                });
                else {
                    c = [];
                    for (f = 0; f < e.length;) h = e[f], ++f, k = F.copyEntity(b, a.editor_serial_data, !0), k.polygon.points = h, c.push(k);
                    a = b.parent;
                    F.destroyEntitiesWithUndo(d, [b]);
                    for (b = 0; b < c.length;) e = c[b], ++b, e.display.depth_cache = -1, F.addEntityToGroup(a, e);
                    y.pushEntitiesCreated(d, c);
                    for (d = 0; d < c.length;) b = c[d], ++d, na.addEntityIncludingChildren(b), F.applyTransformToPolygonPointsAndCenter(b, null);
                    na.refreshGroupLengthChanged(a)
                }
            };
            F.clipPolygonUsinghxClipper = function(a, b, c) {
                var d = function(a) {
                        for (var b = [], c = 0; c < a.length;) {
                            var d = a[c];
                            ++c;
                            b.push(new Ce(Math.round(d.x), Math.round(d.y)))
                        }
                        return b
                    },
                    e = Sd.PFT_NON_ZERO,
                    f = [];
                f.push(d(a));
                a = [];
                a.push(d(b));
                b = new Fb;
                b.addPaths(f, Ue.PT_SUBJECT, !0);
                b.addPaths(a, Ue.PT_CLIP, !0);
                f = [];
                b.executePaths(c, f, e, e);
                c = [];
                for (e = 0; e < f.length;) {
                    b = f[e];
                    ++e;
                    d = [];
                    for (a = 0; a < b.length;) {
                        var h = b[a];
                        ++a;
                        d.push(new W(h.x, h.y))
                    }
                    c.push(d)
                }
                return c
            };
            F.applyTransformAndClipAnotherPolygonUsingThisPolygon = function(a,
                b, c) {
                var d = a.undo;
                F.applyTransformToPolygonPointsAndCenter(b, d);
                var e = Ub.copyPolygonWithOffset(b.polygon.points, b.position),
                    f = Ub.getPolygonBounds(e);
                Va.convertPositionToLocal(a.container, new W(0, 0), b.display.contents);
                for (var h = b.parent.group.entities, k = null, m = null, r = 0; r < h.length;) {
                    var I = h[r];
                    ++r;
                    if (I != b && null != I.polygon) {
                        var g = Ub.getPolygonBounds(I.polygon.points);
                        g.min_x += I.position.x;
                        g.min_y += I.position.y;
                        g.max_x += I.position.x;
                        g.max_y += I.position.y;
                        if (H.boundsIntersectOrContain(f, g)) {
                            k = Ub.copyPolygonWithOffset(I.polygon.points,
                                I.position);
                            m = F.clipPolygonUsinghxClipper(k, e, c);
                            k = [];
                            for (c = 0; c < m.length;) e = m[c], ++c, Ub.isPolygonClockwise(e) || e.reverse(), k.push(e);
                            m = I;
                            break
                        }
                    }
                }
                if (null != k && 0 < k.length) {
                    I = [];
                    for (c = 0; c < k.length;) e = k[c], ++c, b = F.copyEntity(m, a.editor_serial_data, !0), b.position.x = 0, b.position.y = 0, b.polygon.points = e, I.push(b);
                    a = m.parent;
                    F.destroyEntitiesWithUndo(d, [m]);
                    for (k = 0; k < I.length;) m = I[k], ++k, m.display.depth_cache = -1, F.addEntityToGroup(a, m);
                    y.pushEntitiesCreated(d, I);
                    for (d = 0; d < I.length;) k = I[d], ++d, na.addEntityIncludingChildren(k),
                        F.applyTransformToPolygonPointsAndCenter(k, null);
                    na.refreshGroupLengthChanged(a)
                }
            };
            F.applyTransformAndDoBoolOperationOnPolygon = function(a, b, c) {
                var d = "";
                c == Rd.BoolUnion ? d = "union" : c == Rd.BoolIntersect ? d = "intersect" : c == Rd.BoolDifference ? d = "difference" : c == Rd.BoolXor && (d = "xor");
                c = a.undo;
                F.applyTransformToPolygonPointsAndCenter(b, c);
                var e = Ub.copyPolygonWithOffset(b.polygon.points, b.position);
                Ub.getPolygonBounds(e);
                Va.convertPositionToLocal(a.container, new W(0, 0), b.display.contents);
                var f = null,
                    h = a.current_group.group.edit.selected_entities;
                if (0 < h.length) {
                    for (var k = 0; k < h.length;) {
                        var m = h[k];
                        ++k;
                        if (m != b && null != m.polygon) {
                            f = m;
                            break
                        }
                    }
                    if (null == f) w.trace("warning: no target polygon entity is selected", {
                        fileName: "EditorDo.hx",
                        lineNumber: 1734,
                        className: "bikas.editor.EditorDo",
                        methodName: "applyTransformAndDoBoolOperationOnPolygon"
                    });
                    else {
                        h = Ub.copyPolygonWithOffset(f.polygon.points, f.position);
                        b = [];
                        for (k = 0; k < h.length;) m = h[k], ++k, b.push([m.x, m.y]);
                        h = [];
                        for (k = 0; k < e.length;) m = e[k], ++k, h.push([m.x, m.y]);
                        e = [b];
                        b = [h];
                        if (dl.available)
                            if (w.trace("bikas.game.GameDo.doPolyBoolOperation: " +
                                    d, {
                                        fileName: "EditorDo.hx",
                                        lineNumber: 1758,
                                        className: "bikas.editor.EditorDo",
                                        methodName: "applyTransformAndDoBoolOperationOnPolygon"
                                    }), e = dl.call("bikas.game.GameDo.doPolyBoolOperation", e, b, d), null != e) {
                                d = [];
                                for (b = 0; b < e.length;) {
                                    h = e[b];
                                    ++b;
                                    k = [];
                                    for (m = 0; m < h.length;) {
                                        var r = h[m];
                                        ++m;
                                        k.push(new W(r[0], r[1]))
                                    }
                                    d.push(k)
                                }
                                if (null == d) w.trace("warning: no resulting polygons", {
                                    fileName: "EditorDo.hx",
                                    lineNumber: 1781,
                                    className: "bikas.editor.EditorDo",
                                    methodName: "applyTransformAndDoBoolOperationOnPolygon"
                                });
                                else {
                                    for (e =
                                        0; e < d.length;) b = d[e], ++e, Ub.isPolygonClockwise(b) || b.reverse();
                                    if (null != d && 0 < d.length) {
                                        e = [];
                                        for (b = 0; b < d.length;) h = d[b], ++b, k = F.copyEntity(f, a.editor_serial_data, !0), k.position.x = 0, k.position.y = 0, k.polygon.points = h, e.push(k);
                                        a = f.parent;
                                        F.destroyEntitiesWithUndo(c, [f]);
                                        for (f = 0; f < e.length;) d = e[f], ++f, d.display.depth_cache = -1, F.addEntityToGroup(a, d);
                                        y.pushEntitiesCreated(c, e);
                                        for (c = 0; c < e.length;) f = e[c], ++c, na.addEntityIncludingChildren(f), F.applyTransformToPolygonPointsAndCenter(f, null);
                                        na.refreshGroupLengthChanged(a)
                                    }
                                }
                            } else w.trace("warning: external function bikas.game.GameDo.doPolyBoolOperation does not exist or it returned null", {
                                fileName: "EditorDo.hx",
                                lineNumber: 1772,
                                className: "bikas.editor.EditorDo",
                                methodName: "applyTransformAndDoBoolOperationOnPolygon"
                            });
                        else w.trace("warning: ExternalInterface.available == false (unable to call javascript function which has bikas.game.GameDo.doPolyBoolOperation)", {
                            fileName: "EditorDo.hx",
                            lineNumber: 1776,
                            className: "bikas.editor.EditorDo",
                            methodName: "applyTransformAndDoBoolOperationOnPolygon"
                        })
                    }
                } else w.trace("warning: no entities are selected", {
                    fileName: "EditorDo.hx",
                    lineNumber: 1738,
                    className: "bikas.editor.EditorDo",
                    methodName: "applyTransformAndDoBoolOperationOnPolygon"
                })
            };
            F.merge2Polygons = function(a, b, c) {
                var d = a.undo;
                F.applyTransformToPolygonPointsAndCenter(b, d);
                F.applyTransformToPolygonPointsAndCenter(c, d);
                for (var e = H.copyPoints(b.polygon.points), f = H.copyPoints(c.polygon.points), h = 0; h < e.length;) {
                    var k = e[h];
                    ++h;
                    k.x += b.position.x;
                    k.y += b.position.y
                }
                for (h = 0; h < f.length;) k = f[h], ++h, k.x += c.position.x, k.y += c.position.y;
                e = Ub.merge2Polygons(e, f);
                null == e ? w.trace("unable to merge polygons", {
                    fileName: "EditorDo.hx",
                    lineNumber: 1837,
                    className: "bikas.editor.EditorDo",
                    methodName: "merge2Polygons"
                }) : (f = b.parent, a = F.copyEntity(b, a.editor_serial_data, !0), a.position.x = 0, a.position.y = 0, a.polygon.points = e, a.display.depth_cache = -1, F.destroyEntitiesWithUndo(d, [b, c]), F.addEntityToGroup(f, a), y.pushEntitiesCreated(d, [a]), na.addEntityIncludingChildren(a), F.applyTransformToPolygonPointsAndCenter(a, null), na.refreshGroupLengthChanged(f))
            };
            F.getSortedPrefabsByLayersOfInnerPrefabs = function(a) {
                for (var b = null, c = b = function(a, c) {
                        var d = c;
                        if (null != a.group)
                            for (var e =
                                    0, f = a.group.entities; e < f.length;) {
                                var h = f[e];
                                ++e;
                                null != h.group && (a = b(h, c), a > d && (d = a));
                                null != h.prefab_link && (a = c + 1, null != h.prefab_link.prefab_entity && (a = b(h.prefab_link.prefab_entity, a)), a > d && (d = a))
                            }
                        return d
                    }, d = [], e = 0; e < a.length;) {
                    var f = a[e];
                    ++e;
                    var h = new Vs;
                    h.count = c(f, 0);
                    h.entity = f;
                    d.push(h)
                }
                d.sort(function(a, b) {
                    return a.count > b.count ? 1 : a.count < b.count ? -1 : 0
                });
                a = [];
                for (c = 0; c < d.length;) e = d[c], ++c, a.push(e.entity);
                return a
            };
            F.replaceEntitiesInClipboardWith = function(a, b) {
                var c = null,
                    d = null;
                b.copied_entities = [];
                for (var e, f = 0; f < a.length;) {
                    var h = a[f];
                    ++f;
                    e = new xs;
                    e.entity = h;
                    e.relative_position = new W(0, 0);
                    b.copied_entities.push(e);
                    null == c ? (c = H.copyPoint(h.position), d = H.copyPoint(h.position)) : (c.x = H.min(c.x, h.position.x), c.y = H.min(c.y, h.position.y), d.x = H.max(d.x, h.position.x), d.y = H.max(d.y, h.position.y))
                }
                a = (c.x + d.x) / 2;
                c = (c.y + d.y) / 2;
                d = 0;
                for (e = b.copied_entities; d < e.length;) f = e[d], ++d, f.relative_position.x = f.entity.position.x - a, f.relative_position.y = f.entity.position.y - c;
                b.copied_entities.sort(function(a, b) {
                    if (a.entity.display.depth_cache >
                        b.entity.display.depth_cache) return 1;
                    if (a.entity.display.depth_cache < b.entity.display.depth_cache) return -1;
                    a.entity.display.depth_cache == b.entity.display.depth_cache && w.trace("warning: display_cache can't be the same", {
                        fileName: "EditorDo.hx",
                        lineNumber: 1940,
                        className: "bikas.editor.EditorDo",
                        methodName: "replaceEntitiesInClipboardWith"
                    });
                    return 0
                })
            };
            F.sortEntitiesByDepth = function(a) {
                a.sort(function(a, c) {
                    if (a.display.depth_cache > c.display.depth_cache) return 1;
                    if (a.display.depth_cache < c.display.depth_cache) return -1;
                    a.display.depth_cache == c.display.depth_cache && w.trace("warning: display_cache can't be the same", {
                        fileName: "EditorDo.hx",
                        lineNumber: 1957,
                        className: "bikas.editor.EditorDo",
                        methodName: "sortEntitiesByDepth"
                    });
                    return 0
                })
            };
            F.getMoveSizeByPressedKey = function(a, b) {
                var c = new W(0, 0);
                38 == a && (c.y = -b);
                40 == a && (c.y = b);
                37 == a && (c.x = -b);
                39 == a && (c.x = b);
                return c
            };
            F.moveDraggableEntitiesIfKeyPressed = function(a, b, c, d, e) {
                c = F.getMoveSizeByPressedKey(d, c);
                if (0 != c.x || 0 != c.y) {
                    d = !1;
                    y.startUndoPack(e);
                    for (var f = 0; f < b.length;) {
                        var h =
                            b[f];
                        ++f;
                        h.draggable && (d = !0, y.pushChange(e, h.position, "x", h.position.x), y.pushChange(e, h.position, "y", h.position.y), h.position.x += c.x, h.position.y += c.y, na.refreshPosition(h))
                    }
                    y.endUndoPack(e);
                    d && na.refreshGroupBoundsIncludingParents(a)
                }
            };
            F.changeZoomWithUndo = function(a, b) {
                var c = H.findIndexOfNearestValue(a.stage_group.transform.scale_x, a.zoom_levels);
                c += b;
                c >= a.zoom_levels.length ? c = a.zoom_levels.length - 1 : 0 > c && (c = 0);
                F.setEditorScaleWithUndo(a, a.zoom_levels[c])
            };
            F.setEditorScaleWithUndo = function(a, b) {
                var c =
                    a.undo;
                y.startUndoPack(c);
                var d = a.stage_group.transform.scale_x;
                y.pushChange(c, a.stage_group.transform, "scale_x", a.stage_group.transform.scale_x);
                y.pushChange(c, a.stage_group.transform, "scale_y", a.stage_group.transform.scale_y);
                a.stage_group.transform.scale_x = b;
                a.stage_group.transform.scale_y = b;
                var e = ia.get_current().stage.stageWidth / 2,
                    f = ia.get_current().stage.stageHeight / 2,
                    h = a.stage_group.position;
                e = b / d * (-h.x + e) + h.x - e;
                b = b / d * (-h.y + f) + h.y - f;
                y.pushChange(c, h, "x", h.x);
                y.pushChange(c, h, "y", h.y);
                h.x -=
                    e;
                h.y -= b;
                h.x = Math.round(h.x);
                h.y = Math.round(h.y);
                y.endUndoPack(c);
                Ei.refresh(a.stage_group);
                kj.refresh(a.stage_group);
                na.refreshGroupBoundsIncludingParents(a.stage_group)
            };
            F.getSnappedPosition = function(a, b) {
                var c = H.snap(a.x, b);
                a = H.snap(a.y, b);
                return new W(c, a)
            };
            F.applyTransformToPolygonPointsAndCenter = function(a, b) {
                for (var c = new W, d = null, e = null, f = 0, h = a.polygon.points; f < h.length;) {
                    var k = h[f];
                    ++f;
                    null != b && (y.pushPointChange(b, k), xb.applyTransformToPoint(k, c, a.transform));
                    null == d ? (d = H.copyPoint(k), e =
                        H.copyPoint(k)) : (d.x = H.min(d.x, k.x), d.y = H.min(d.y, k.y), e.x = H.max(e.x, k.x), e.y = H.max(e.y, k.y))
                }
                c = new W((d.x + e.x) / 2, (d.y + e.y) / 2);
                d = 0;
                for (e = a.polygon.points; d < e.length;) f = e[d], ++d, f.x -= c.x, f.y -= c.y;
                null != b && (y.pushPointChange(b, a.position), y.pushTransformChange(b, a.transform));
                a.position.x += c.x;
                a.position.y += c.y;
                a.transform.scale_x = 1;
                a.transform.scale_y = 1;
                a.transform.rotation = 0;
                na.refreshEntityIncludingChildren(a)
            };
            F.calculateTransformEditPoints = function(a, b, c) {
                var d = function(a, d) {
                        return null != b && null !=
                            c ? Va.convertPositionToLocal(b, new W(a, d), c) : new W(a, d)
                    },
                    e = new Ls;
                e.top_left = d(a.x, a.y);
                e.top_center = d(a.x + a.width / 2, a.y);
                e.top_right = d(a.x + a.width, a.y);
                e.center_right = d(a.x + a.width, a.y + a.height / 2);
                e.bottom_right = d(a.x + a.width, a.y + a.height);
                e.bottom_center = d(a.x + a.width / 2, a.y + a.height);
                e.bottom_left = d(a.x, a.y + a.height);
                e.center_left = d(a.x, a.y + a.height / 2);
                return e
            };
            F.findNearestSnap = function(a, b, c, d) {
                var e = d.snap_to_nearest_entity_distance,
                    f = d.snap_to_nearest_polygon_point_distance,
                    h = d.snap_to_nearest_polygon_line_distance,
                    k = d.snap_to_nearest_polygon_grid_distance;
                d = d.snap_to_nearest_polygon_grid_max_distance;
                if (0 < b.length) {
                    var m = new W(0, 0),
                        r = new W(0, 0),
                        I = new bh;
                    I.distance = e;
                    var g = new bh;
                    g.distance = f;
                    var l = new bh;
                    l.distance = h;
                    var Ba = new bh;
                    Ba.distance = d;
                    for (var mb = 0; mb < b.length;) {
                        var n = b[mb];
                        ++mb;
                        for (var p = 0; p < c.length;) {
                            var x = c[p];
                            ++p;
                            if (-1 == b.indexOf(x)) {
                                if (0 < e) {
                                    m.x = a.x + n.dragging.x;
                                    m.y = a.y + n.dragging.y;
                                    var zb = H.distanceBetweenPoints(x.position, m);
                                    zb <= I.distance && (m.x = x.position.x - n.dragging.x, m.y = x.position.y - n.dragging.y,
                                        I.distance = zb, I.position = H.copyPoint(m))
                                }
                                if (null != x.polygon && x.polygon.editable) {
                                    var w = H.copyRectangle(x.visible_bounds);
                                    xb.expandRectangle(w, H.max4(f, h, k, d));
                                    if (H.pointInRectangle(m, w)) {
                                        var u = x.polygon.points[x.polygon.points.length - 1];
                                        w = 0;
                                        for (var z = x.polygon.points; w < z.length;) {
                                            var q = z[w];
                                            ++w;
                                            if (0 < f) {
                                                m.x = a.x + n.dragging.x;
                                                m.y = a.y + n.dragging.y;
                                                var L = H.copyPoint(q);
                                                xb.applyTransformToPoint(L, x.position, x.transform);
                                                zb = H.distanceBetweenPoints(L, m);
                                                zb <= g.distance && (m.x = L.x - n.dragging.x, m.y = L.y - n.dragging.y,
                                                    g.distance = zb, g.position = H.copyPoint(m))
                                            }
                                            if (0 < h) {
                                                m.x = a.x + n.dragging.x;
                                                m.y = a.y + n.dragging.y;
                                                L = H.copyPoint(u);
                                                var D = H.copyPoint(q);
                                                xb.applyTransformToPoint(L, x.position, x.transform);
                                                xb.applyTransformToPoint(D, x.position, x.transform);
                                                H.isPointInLineRange(L, D, m) && (zb = H.distanceBetweenLineAndPoint(L, D, m), zb <= l.distance && (L = H.getPointPerpendicularToLine(L, D, m), m.x = L.x - n.dragging.x, m.y = L.y - n.dragging.y, l.distance = zb, l.position = H.copyPoint(m)))
                                            }
                                            0 < k && (m.x = H.snap(a.x + n.dragging.x, k), m.y = a.y + n.dragging.y, zb =
                                                H.copyPoint(u), u = H.copyPoint(q), xb.applyTransformToPoint(zb, x.position, x.transform), xb.applyTransformToPoint(u, x.position, x.transform), r.x = m.x, r.y = m.y + d, H.lineSegmentsIntersect(zb, u, m, r) && (L = H.getInfiniteLineIntersection(zb, u, m, r), zb = L.y - m.y, Math.abs(zb) <= Ba.distance && (u = H.snap(zb, k), L.y -= u, m.x = L.x - n.dragging.x, m.y = L.y - n.dragging.y, Ba.distance = zb, Ba.position = H.copyPoint(m))));
                                            u = q
                                        }
                                    }
                                }
                            }
                        }
                    }
                    return null != I.position ? I.position : null != g.position ? g.position : null != l.position ? l.position : null != Ba.position ? Ba.position :
                        null
                }
                return null
            };
            F.findNearestSnapForEditEntity = function(a, b, c, d, e, f, h, k, m, r, I) {
                if (0 < b.length) {
                    var g = new W(0, 0),
                        l, Ba = new bh;
                    Ba.distance = h;
                    var mb = new bh;
                    mb.distance = k;
                    mb.max_distance = k;
                    var n = new bh;
                    n.distance = m;
                    n.max_distance = m;
                    var p = new bh;
                    p.distance = r;
                    p.max_distance = r;
                    var x = new bh;
                    x.distance = r;
                    x.max_distance = r;
                    var zb = null,
                        w = l = null;
                    if (1 == e.length && 1 == c.length && 0 < r && null != c[0].polygon && c[0].polygon.editable) {
                        var u = 0;
                        for (d = d.entity_edits; u < d.length;) {
                            var z = d[u];
                            ++u;
                            if (z.target == c[0] && null != z.polygon_edit &&
                                2 < z.polygon_edit.edit_points.length) {
                                z = z.polygon_edit.edit_points;
                                for (var q = 0, L = z.length; q < L;) {
                                    var D = q++;
                                    z[D].entity == e[0] && (zb = 0 == D ? z[z.length - 1] : z[D - 1], l = z[D], w = D == z.length - 1 ? z[0] : z[D + 1])
                                }
                            }
                        }
                    }
                    null != l && 0 < r && (e = b[0], r = c[0], zb = zb.polygon_point, w = w.polygon_point, l = function(b, c, d, e, f, h) {
                        xb.applyTransformToPoint(f, b.position, b.transform);
                        xb.applyTransformToPoint(h, b.position, b.transform);
                        d.x = a.x + c.x;
                        d.y = a.y + c.y;
                        b = H.distanceBetweenLineAndPoint(f, h, d);
                        b <= e.distance && (E = H.getPointPerpendicularToLine(f, h,
                            d), d.x = E.x - c.x, d.y = E.y - c.y, e.distance = b, e.position = H.copyPoint(d), e.line_start = Id.subtract(f, c), e.line_end = Id.subtract(h, c))
                    }, u = H.copyPoint(zb), l(r, e, g, x, u, new W(zb.x + 100, zb.y)), l(r, e, g, p, H.copyPoint(zb), new W(zb.x, zb.y + 100)), zb = H.copyPoint(w), l(r, e, g, x, zb, new W(w.x + 100, w.y)), l(r, e, g, p, H.copyPoint(w), new W(w.x, w.y + 100)));
                    for (w = 0; w < b.length;)
                        for (zb = b[w], ++w, e = 0; e < f.length;)
                            if (r = f[e], ++e, -1 == c.indexOf(r)) {
                                0 < h && (g.x = a.x + zb.x, g.y = a.y + zb.y, l = H.distanceBetweenPoints(r.position, g), l <= Ba.distance && (g.x = r.position.x -
                                    zb.x, g.y = r.position.y - zb.y, Ba.distance = l, Ba.position = H.copyPoint(g)));
                                if (null != r.polygon && r.polygon.editable && (l = H.copyRectangle(r.visible_bounds), xb.expandRectangle(l, H.max(k, m)), H.pointInRectangle(g, l)))
                                    for (q = r.polygon.points[r.polygon.points.length - 1], u = 0, d = r.polygon.points; u < d.length;) {
                                        z = d[u];
                                        ++u;
                                        0 < k && (g.x = a.x + zb.x, g.y = a.y + zb.y, L = H.copyPoint(z), xb.applyTransformToPoint(L, r.position, r.transform), l = H.distanceBetweenPoints(L, g), l <= mb.distance && (g.x = L.x - zb.x, g.y = L.y - zb.y, mb.distance = l, mb.position =
                                            H.copyPoint(g)));
                                        if (0 < m && (q = H.copyPoint(q), L = H.copyPoint(z), xb.applyTransformToPoint(q, r.position, r.transform), xb.applyTransformToPoint(L, r.position, r.transform), H.isPointInLineRange(q, L, g) && (l = H.distanceBetweenLineAndPoint(q, L, g), l <= n.distance))) {
                                            var E = H.getPointPerpendicularToLine(q, L, g);
                                            g.x = E.x - zb.x;
                                            g.y = E.y - zb.y;
                                            n.distance = l;
                                            n.position = H.copyPoint(g);
                                            n.line_start = Id.subtract(q, zb);
                                            n.line_end = Id.subtract(L, zb)
                                        }
                                        q = z
                                    }
                                if (null != I && null != r.bitmap_images && (l = H.copyRectangle(r.visible_bounds), xb.expandRectangle(l,
                                        H.max(k, m)), H.pointInRectangle(g, l)))
                                    for (u = 0, d = r.bitmap_images.images; u < d.length;)
                                        if (l = d[u], ++u, I.exists(l.source_name))
                                            for (z = I.get(l.source_name), q = 0; q < z.length;) {
                                                L = z[q];
                                                ++q;
                                                var A = L[L.length - 1];
                                                for (D = 0; D < L.length;) {
                                                    var Ka = L[D];
                                                    ++D;
                                                    if (0 < k) {
                                                        g.x = a.x + zb.x;
                                                        g.y = a.y + zb.y;
                                                        var v = H.copyPoint(Ka);
                                                        xb.applyTransformToPoint(v, r.position, r.transform);
                                                        l = H.distanceBetweenPoints(v, g);
                                                        l <= mb.distance && (g.x = v.x - zb.x, g.y = v.y - zb.y, mb.distance = l, mb.position = H.copyPoint(g))
                                                    }
                                                    0 < m && (A = H.copyPoint(A), v = H.copyPoint(Ka), xb.applyTransformToPoint(A,
                                                        r.position, r.transform), xb.applyTransformToPoint(v, r.position, r.transform), H.isPointInLineRange(A, v, g) && (l = H.distanceBetweenLineAndPoint(A, v, g), l <= n.distance && (E = H.getPointPerpendicularToLine(A, v, g), g.x = E.x - zb.x, g.y = E.y - zb.y, n.distance = l, n.position = H.copyPoint(g), n.line_start = Id.subtract(A, zb), n.line_end = Id.subtract(v, zb))));
                                                    A = Ka
                                                }
                                            }
                            } b = function(a, b) {
                        var c = H.getInfiniteLineIntersection(a.line_start, a.line_end, b.line_start, b.line_end);
                        if (null != c) {
                            a = H.distanceBetweenPoints(a.position, c);
                            b = H.distanceBetweenPoints(b.position,
                                c);
                            var d = H.min(n.max_distance, x.max_distance);
                            return H.max(a, b) <= d ? c : null
                        }
                        return null
                    };
                    if (null != Ba.position) return Ba.position;
                    if (null != mb.position) return mb.position;
                    if (null != n.position) return Ba = null, null != x.position && (Ba = b(n, x)), null != p.position && null == Ba && (Ba = b(n, p)), null != Ba ? Ba : n.position;
                    if (null != x.position || null != p.position) return Ba = null, null != p.position && null != x.position && (Ba = b(p, x)), null != Ba ? Ba : null != x.position ? x.position : null != p.position ? p.position : null
                }
                return null
            };
            F.destroyEntityEdit =
                function(a) {
                    if (null != a.transform_edit)
                        for (var b = 0, c = a.transform_edit.all; b < c.length;) {
                            var d = c[b];
                            ++b;
                            F.removeAndDestroyEntityIncludingChildren(d)
                        }
                    null != a.circle_edit && F.removeAndDestroyEntityIncludingChildren(a.circle_edit.top_center);
                    if (null != a.polygon_edit)
                        for (b = 0, a = a.polygon_edit.edit_points; b < a.length;) c = a[b], ++b, F.removeAndDestroyEntityIncludingChildren(c.entity)
                };
            F.update = function(a) {
                for (var b = a.current_group, c = a.mouse_state, d = a.keyboard_state, e = a.stage_settings, f = a.clipboard, h = a.undo, k = b.group,
                        m = k.entities, r = k.edit.selected_entities, I = k.edit.dragging_entities, g = [], l = a.entities_editor.entity_edits, Ba = a.entities_editor.group.group.edit.selected_entities, mb = a.entities_editor.group.group.edit.dragging_entities, n = [], p = 0; p < l.length;) {
                    var x = l[p];
                    ++p;
                    g.push(x.target)
                }
                var zb = !1,
                    z = null,
                    q = null;
                a.main_menu.current_group != a.current_group && ca.overloadCurrentGroupHBox(a);
                null != a.main_menu.save_and_export_button && null != a.undo && (a.last_saved_undo_pack_count != a.undo.undo_packs.length ? 8198163 != a.main_menu.save_and_export_button.button.button_color_default &&
                    (a.main_menu.save_and_export_button.button.button_color_default = 8198163, u.refreshButtonGraphics(a.main_menu.save_and_export_button), u.draw(a.main_menu.save_and_export_button)) : 2577513 != a.main_menu.save_and_export_button.button.button_color_default && (a.main_menu.save_and_export_button.button.button_color_default = 2577513, u.refreshButtonGraphics(a.main_menu.save_and_export_button), u.draw(a.main_menu.save_and_export_button)));
                var L = new W(0, 0),
                    D = new W(ia.get_current().stage.stageWidth, ia.get_current().stage.stageHeight);
                if (a.size.width != ia.get_current().stage.stageWidth || a.size.height != ia.get_current().stage.stageHeight) a.size.width = a.container.stage.stageWidth, a.size.height = a.container.stage.stageHeight, F.redrawBackground(a.background_shape, a.size);
                var A = Va.convertPositionToLocal(ia.get_current().stage, L, a.stage_group.display.contents),
                    Ka = Va.convertPositionToLocal(ia.get_current().stage, D, a.stage_group.display.contents);
                var v = new Ie(A.x, A.y, Ka.x - A.x, Ka.y - A.y);
                A = Va.convertPositionToLocal(ia.get_current().stage, L,
                    a.entities_editor.group.display.contents);
                Ka = Va.convertPositionToLocal(ia.get_current().stage, D, a.entities_editor.group.display.contents);
                var t = new Ie(A.x, A.y, Ka.x - A.x, Ka.y - A.y);
                var pa = function(a, b, c) {
                        var d = new Mn;
                        d.current = Va.convertPositionToLocal(a, b.current, c);
                        d.downed = Va.convertPositionToLocal(a, b.downed, c);
                        d.upped = Va.convertPositionToLocal(a, b.upped, c);
                        d.is_overed = b.is_overed;
                        d.button_state = b.button_state;
                        d.last_clicked_time = b.last_clicked_time;
                        return d
                    },
                    B = pa(a.container, c, b.display.contents);
                a.local_mouse = B;
                for (var J = pa(a.container, c, a.entities_editor.group.display.contents), R = new Vk, Ca = new Vk, oa = new Vk, X = new Vk, S = 0; S < m.length;) {
                    var N = m[S];
                    ++S;
                    null == N.right_click_callback && (N.right_click_callback = function(b) {
                        b.in_current_container && ca.openEntityDebugWindow(a, b)
                    })
                }
                for (var O = function(a, b, c) {
                            for (var d, e = 0; e < a.length;) {
                                var f = a[e];
                                ++e;
                                d = !1;
                                H.pointInRectangle(b.current, f.visible_bounds) ? d = !0 : H.rectanglesIntersect(c, f.visible_bounds) && (d = !0);
                                f.display.container.get_visible() != d && f.display.container.set_visible(d)
                            }
                        },
                        C = function(a, b, c) {
                            for (var d, e, f = 0; f < a.length;) {
                                var h = a[f];
                                ++f;
                                e = !1;
                                if (h.display.container.get_visible() && (d = Va.convertPositionToLocal(b, c.current, h.display.container), H.pointInRectangle(d, h.internal_bounds))) {
                                    var k = !0;
                                    null != h.polygon && (k = H.pointInPolygon(d, h.polygon.points));
                                    k && h.display.depth_cache > R.depth && (e = !0)
                                }
                                e ? e && (c.is_overed && (R.depth = h.display.depth_cache, R.entity = h), c.button_state == ya.DOWNED ? h.display.depth_cache > Ca.depth && (Ca.depth = h.display.depth_cache, Ca.entity = h) : c.button_state == ya.UPPED ?
                                    h.display.depth_cache > oa.depth && (oa.depth = h.display.depth_cache, oa.entity = h) : c.button_state == ya.CLICKED && h.display.depth_cache > X.depth && (X.depth = h.display.depth_cache, X.entity = h)) : Vj.remove(h)
                            }
                        }, K = [], Q = 0; Q < l.length;) {
                    var G = l[Q];
                    ++Q;
                    if (null != G.transform_edit)
                        for (var P = 0, T = G.transform_edit.all; P < T.length;) {
                            var Y = T[P];
                            ++P;
                            K.push(Y)
                        }
                    if (null != G.polygon_edit)
                        for (var bb = 0, Lc = G.polygon_edit.edit_points; bb < Lc.length;) {
                            var U = Lc[bb];
                            ++bb;
                            K.push(U.entity);
                            U.entity.selected && (q = U, z = G)
                        }
                    null != G.circle_edit && K.push(G.circle_edit.top_center)
                }
                O(K,
                    J, t);
                C(K, a.entities_editor.group.display.contents, J);
                if (-1 != Ca.depth || -1 != oa.depth || 0 < mb.length) zb = !0;
                O(a.stage_group.group.entities, c, v);
                zb || C(m, b.display.contents, B); - 1 != R.depth && Vj.add(R.entity);
                var le = null;
                B.button_state == ya.CLICKED && null != X.entity && (X.entity == k.edit.last_clicked_entity && 500 >= ia.getTimer() - k.edit.last_click_time && 3 > H.distanceBetweenPoints(B.current, k.edit.last_click_point) && (le = X.entity), k.edit.last_click_time = ia.getTimer(), k.edit.last_clicked_entity = X.entity, k.edit.last_click_point =
                    H.copyPoint(B.current));
                var M = function() {
                    if (null != a.current_selection) {
                        var b = a.current_selection;
                        y.startUndoPack(h);
                        for (var c = 0, d = r.slice(); c < d.length;) {
                            var e = d[c];
                            ++c; - 1 == b.regular_entities.indexOf(e) && -1 == b.edit_target_entities.indexOf(e) && (y.pushChange(h, e, "selected", e.selected), e.selected = !1, Zb.refresh(e))
                        }
                        c = 0;
                        for (d = b.regular_entities; c < d.length;) e = d[c], ++c, e.selected || (y.pushChange(h, e, "selected", e.selected), e.selected = !0, Zb.refresh(e));
                        y.endUndoPack(h);
                        c = 0;
                        for (d = Ba.slice(); c < d.length;) e = d[c],
                            ++c, -1 == b.edit_entities.indexOf(e) && (e.selected = !1, Zb.refresh(e));
                        c = 0;
                        for (d = b.edit_entities; c < d.length;) e = d[c], ++c, e.selected || (e.selected = !0, Zb.refresh(e));
                        b.regular_entities = null;
                        b.edit_entities = null;
                        b.edit_target_entities = null;
                        a.container.removeChild(b.shape);
                        a.current_selection = null
                    }
                };
                if (80 == d.pressed || 80 == d.holding) {
                    if (null == a.polygon_creation) {
                        for (var ra = 0, Z = I.slice(); ra < Z.length;) {
                            var ha = Z[ra];
                            ++ra;
                            $c.remove(ha)
                        }
                        for (var ba = 0, ja = mb.slice(); ba < ja.length;) {
                            var ka = ja[ba];
                            ++ba;
                            $c.remove(ka)
                        }
                        for (var da =
                                0, ea = Ba.slice(); da < ea.length;) {
                            var fa = ea[da];
                            ++da;
                            Zb.remove(fa)
                        }
                        if (0 < a.current_group.group.edit.selected_entities.length) {
                            y.startUndoPack(a.undo);
                            for (var gb = 0, qa = a.current_group.group.edit.selected_entities.slice(); gb < qa.length;) {
                                var yc = qa[gb];
                                ++gb;
                                y.pushChange(a.undo, yc, "selected", yc.selected);
                                Zb.remove(yc)
                            }
                            y.endUndoPack(a.undo)
                        }
                    }
                    if (null == a.polygon_creation && a.mouse_state.button_state == ya.DOWNED) {
                        a.polygon_creation = new Ts;
                        a.polygon_creation.entity = null != a.keyboard_p_polygon_creation_func ? a.keyboard_p_polygon_creation_func(a) :
                            F.createPolygonEntity();
                        var bd = a.polygon_creation.entity;
                        y.startUndoPack(a.undo);
                        bd.selected = !0;
                        bd.position.x = a.local_mouse.current.x - bd.polygon.points[0].x;
                        bd.position.y = a.local_mouse.current.y - bd.polygon.points[0].y;
                        F.addEntityToGroup(a.current_group, bd);
                        na.addEntity(bd);
                        y.pushEntitiesCreated(a.undo, [bd]);
                        y.endUndoPack(a.undo);
                        a.mouse_state.button_state = ya.DRAGGED;
                        return
                    }
                    if ((a.mouse_state.button_state == ya.DOWNED || a.mouse_state.button_state == ya.DRAGGED) && null != a.polygon_creation && a.polygon_creation.progress_to_next)
                        for (var Fc =
                                0, ma = a.entities_editor.entity_edits; Fc < ma.length;) {
                            var Aa = ma[Fc];
                            ++Fc;
                            if (null != Aa.polygon_edit) {
                                var Gc = a.polygon_creation.current_point_index + 1;
                                if (Gc >= a.polygon_creation.entity.polygon.points.length) {
                                    F.addNewPolygonPointEdit(a, l, J, b, B, v, z, q, I, mb, r, Ba);
                                    return
                                }
                                for (var Ga = 0, sa = I.slice(); Ga < sa.length;) {
                                    var xa = sa[Ga];
                                    ++Ga;
                                    $c.remove(xa)
                                }
                                for (var ob = 0, wa = mb.slice(); ob < wa.length;) {
                                    var Ha = wa[ob];
                                    ++ob;
                                    $c.remove(Ha)
                                }
                                for (var za = 0, Fa = r.slice(); za < Fa.length;) {
                                    var ua = Fa[za];
                                    ++za;
                                    Aa.target != ua && Zb.remove(ua)
                                }
                                for (var ta =
                                        0, Ia = Ba.slice(); ta < Ia.length;) {
                                    var va = Ia[ta];
                                    ++ta;
                                    Zb.remove(va)
                                }
                                for (var Da = a.polygon_creation.entity.polygon.points[Gc], La = 0, Ja = Aa.polygon_edit.edit_points; La < Ja.length;) {
                                    var Pa = Ja[La];
                                    ++La;
                                    if (Pa.polygon_point == Da) {
                                        Zb.add(Pa.entity);
                                        y.startUndoPack(a.undo);
                                        y.pushPointChange(a.undo, Da);
                                        var Na = Va.convertPositionToLocal(b.display.contents, B.current, Aa.target.display.contents);
                                        Da.x = Na.x;
                                        Da.y = Na.y;
                                        var ab = Va.convertPositionToLocal(Aa.target.display.container, Da, Pa.entity.container_link);
                                        Pa.entity.position.x =
                                            ab.x;
                                        Pa.entity.position.y = ab.y;
                                        F.dragOrMoveEntityEdits(a, J, a.undo, a.entities_editor.entity_edits, !0);
                                        a.polygon_creation.current_point_index = Gc;
                                        a.polygon_creation.progress_to_next = !1;
                                        y.endUndoPack(a.undo);
                                        return
                                    }
                                }
                            }
                        }
                    a.mouse_state.button_state == ya.UPPED && null != a.polygon_creation && (a.polygon_creation.progress_to_next = !0)
                } else null != a.polygon_creation && (null != a.keyboard_p_polygon_finish_func && a.keyboard_p_polygon_finish_func(a, a.polygon_creation.entity), a.polygon_creation.entity = null, a.polygon_creation =
                    null);
                if (d.ctrl)
                    if (13 == d.pressed) {
                        if (null != a.on_ctrl_enter_pressed) a.on_ctrl_enter_pressed()
                    } else if (40 == d.pressed || 38 == d.pressed) {
                    y.startUndoPack(h);
                    var Pb = F.changeEntitiesDepth(h, 40 == d.pressed, 38 == d.pressed, 1 == d.shift, r);
                    y.endUndoPack(h);
                    Pb && (na.refreshDepthsInGroup(b), F.sortEntitiesByDepth(m))
                } else if (83 == d.pressed) - 1 != a.saving_types.indexOf(mf.FlashSharedObject) ? (F.saveToSharedObjects(a), a.last_saved_undo_pack_count = a.undo.undo_packs.length) : -1 != a.saving_types.indexOf(mf.NodeJSServer) && null !=
                    a.save_end_export_to_nodejs_server && (a.save_end_export_to_nodejs_server(), a.last_saved_undo_pack_count = a.undo.undo_packs.length);
                else if (71 == d.pressed)
                    if (d.shift) {
                        for (var Ta = [], db = [], $a = [], hb = 0; hb < r.length;) {
                            var Oa = r[hb];
                            ++hb;
                            if (null != Oa.group) Oa.group.ungroupable && Ta.push(Oa);
                            else if (null != Oa.prefab_link && null != Oa.prefab_link.prefab_entity) {
                                var Qa = F.copyEntity(Oa.prefab_link.prefab_entity, a.editor_serial_data, !0);
                                Qa.prefab = null;
                                Qa.position.x = Oa.position.x;
                                Qa.position.y = Oa.position.y;
                                Qa.transform.scale_x =
                                    Oa.transform.scale_x;
                                Qa.transform.scale_y = Oa.transform.scale_y;
                                Qa.transform.rotation = Oa.transform.rotation;
                                F.removeEntityFromGroup(Qa);
                                F.addEntityToGroup(b, Qa);
                                na.addEntityIncludingChildren(Qa);
                                Ta.push(Qa);
                                db.push(Oa);
                                $a.push(Qa)
                            }
                        }
                        y.startUndoPack(h);
                        y.pushEntitiesCreated(h, $a);
                        for (var Za = 0; Za < Ta.length;) {
                            var Xa = Ta[Za];
                            ++Za;
                            for (var pb = 0, Ya = Xa.group.entities; pb < Ya.length;) {
                                var Sa = Ya[pb];
                                ++pb;
                                y.pushChange(h, Sa.position, "x", Sa.position.x);
                                y.pushChange(h, Sa.position, "y", Sa.position.y);
                                y.pushChange(h, Sa.transform,
                                    "scale_x", Sa.transform.scale_x);
                                y.pushChange(h, Sa.transform, "scale_y", Sa.transform.scale_y);
                                y.pushChange(h, Sa.transform, "rotation", Sa.transform.rotation);
                                xb.applyTransform(Sa.position, Sa.transform, Xa.position, Xa.transform)
                            }
                            var kb = Xa.group.entities.slice();
                            F.moveEntitiesToDifferentGroupWithUndo(h, Xa, b, kb);
                            for (var fb = 0; fb < kb.length;) {
                                var jb = kb[fb];
                                ++fb;
                                jb.selectable && (y.pushChange(h, jb, "selected", jb.selected), Zb.add(jb))
                            }
                            db.push(Xa)
                        }
                        0 < db.length && F.destroyEntitiesWithUndo(h, db);
                        0 < Ta.length && na.refreshGroupLengthChanged(b);
                        y.endUndoPack(h)
                    } else {
                        for (var cb = [], Ac = 0; Ac < r.length;) {
                            var eb = r[Ac];
                            ++Ac;
                            eb.groupable && cb.push(eb)
                        }
                        if (0 < m.length) {
                            y.startUndoPack(h);
                            var $b = F.createGroupEntity();
                            F.addEntityToGroup(b, $b);
                            F.moveEntitiesToDifferentGroupWithUndo(h, b, $b, cb);
                            y.pushEntitiesCreated(h, [$b]);
                            na.addEntity($b);
                            F.centerGroup($b, h);
                            na.refreshGroupBoundsIncludingParents($b);
                            na.refreshDepthsInGroup(b);
                            $b.selectable && (y.pushChange(h, $b, "selected", $b.selected), Zb.add($b));
                            y.endUndoPack(h)
                        }
                    }
                else if (67 == d.released || 88 == d.released ||
                    68 == d.released) {
                    var Ua = function(b) {
                        for (var c = [], d, e = 0; e < b.length;) d = b[e], ++e, d = F.copyEntity(d, a.editor_serial_data, !0), c.push(d);
                        return c
                    };
                    if (67 == d.released) {
                        var ib = Ua(r);
                        if (0 < ib.length) {
                            for (var Ra = 0, wb = f.copied_entities; Ra < wb.length;) {
                                var Wa = wb[Ra];
                                ++Ra;
                                F.destroyEntityIncludingChildren(Wa.entity)
                            }
                            F.replaceEntitiesInClipboardWith(ib, f);
                            f.type = lf.COPY
                        }
                    } else if (88 == d.released) {
                        for (var rb = [], ub = 0; ub < r.length;) {
                            var qb = r[ub];
                            ++ub;
                            qb.deletable && rb.push(qb)
                        }
                        var lb = Ua(rb);
                        if (0 < lb.length) {
                            for (var yb = 0, tb =
                                    f.copied_entities; yb < tb.length;) {
                                var Rb = tb[yb];
                                ++yb;
                                F.destroyEntityIncludingChildren(Rb.entity)
                            }
                            F.replaceEntitiesInClipboardWith(lb, f);
                            f.type = lf.CUT;
                            y.startUndoPack(h);
                            F.sortEntitiesByDepth(rb);
                            F.destroyEntitiesWithUndo(h, rb);
                            y.endUndoPack(h);
                            na.refreshGroupLengthChanged(b)
                        }
                    } else if (68 == d.released) {
                        var vb = Ua(r);
                        if (0 < vb.length) {
                            for (var Bb = 0; Bb < vb.length;) {
                                var Gb = vb[Bb];
                                ++Bb;
                                Gb.selected = !1
                            }
                            var Db = new Qp;
                            Db.copied_entities = [];
                            F.replaceEntitiesInClipboardWith(vb, Db);
                            y.startUndoPack(h);
                            for (var sb = [], nd =
                                    0, Ub = Db.copied_entities; nd < Ub.length;) {
                                var Fb = Ub[nd];
                                ++nd;
                                var nb = Fb.entity;
                                nb.display.depth_cache = -1;
                                nb.position.x = B.current.x + Fb.relative_position.x;
                                nb.position.y = B.current.y + Fb.relative_position.y;
                                F.addEntityToGroup(b, nb);
                                sb.push(nb)
                            }
                            y.pushEntitiesCreated(h, sb);
                            for (var Kb = 0; Kb < sb.length;) {
                                var Ab = sb[Kb];
                                ++Kb;
                                na.addEntityIncludingChildren(Ab)
                            }
                            y.endUndoPack(h);
                            Db.copied_entities = null;
                            na.refreshGroupLengthChanged(b)
                        }
                    }
                } else if (86 == d.released) {
                    if (0 < f.copied_entities.length && (f.type == lf.COPY || f.type ==
                            lf.CUT)) {
                        y.startUndoPack(h);
                        var Qb = [],
                            Ma = !0;
                        f.type == lf.COPY ? Ma = !0 : f.type == lf.CUT && (Ma = !1);
                        for (var Ib = 0, Tb = f.copied_entities; Ib < Tb.length;) {
                            var Nb = Tb[Ib];
                            ++Ib;
                            var Lb = Nb.entity;
                            Lb.display.depth_cache = -1;
                            var Jb = F.copyEntity(Lb, a.editor_serial_data, Ma);
                            Jb.position.x = B.current.x + Nb.relative_position.x;
                            Jb.position.y = B.current.y + Nb.relative_position.y;
                            F.removeEntityFromGroup(Jb);
                            F.addEntityToGroup(b, Jb);
                            Qb.push(Jb)
                        }
                        y.pushEntitiesCreated(h, Qb);
                        for (var Yb = 0; Yb < Qb.length;) {
                            var bc = Qb[Yb];
                            ++Yb;
                            na.addEntityIncludingChildren(bc)
                        }
                        y.endUndoPack(h);
                        if (f.type == lf.CUT)
                            for (var gc = 0, Cb = f.copied_entities; gc < Cb.length;) {
                                var ec = Cb[gc];
                                ++gc;
                                F.destroyEntityIncludingChildren(ec.entity)
                            }
                        na.refreshGroupLengthChanged(b)
                    }
                } else if (90 == d.pressed) {
                    if (0 == I.length && 0 == a.entities_editor.group.group.edit.dragging_entities.length) {
                        var jc = function(b) {
                                var c = 0;
                                for (b = b.changes; c < b.length;) {
                                    var d = b[c];
                                    ++c;
                                    null != d.field && E.is(d.field.instance, Je) && "source_name" == d.field.field_name && (aa.__cast(d.field.instance, Je).bitmap_data_source = V.retrieveBitmapData(d.field.value, a.bitmap_assets))
                                }
                            },
                            od = null;
                        od = d.shift ? y.applyRedo(h) : y.applyUndo(h);
                        if (null != od && (jc(od), na.refreshEntityIncludingChildren(a.stage_group), a.refresh_prefabs_with_undo && null != a.library_group))
                            for (var cc = F.getSortedPrefabsByLayersOfInnerPrefabs(a.library_group.group.entities), ac = 0; ac < cc.length;) {
                                var kc = cc[ac];
                                ++ac;
                                na.refreshEntityIncludingChildren(kc)
                            }
                    }
                } else if (76 == d.pressed) {
                    0 < r.length && y.startUndoPack(h);
                    for (var Tc = 0; Tc < r.length;) {
                        var nc = r[Tc];
                        ++Tc;
                        y.pushChange(h, nc, "deletable", nc.deletable);
                        y.pushChange(h, nc, "draggable",
                            nc.draggable);
                        y.pushChange(h, nc, "transform_editable", nc.transform_editable);
                        nc.deletable || nc.draggable || nc.transform_editable ? (nc.deletable = !1, nc.draggable = !1, nc.transform_editable = !1) : (nc.deletable = !0, nc.draggable = !0, nc.transform_editable = !0);
                        na.refreshEntityIncludingChildren(nc)
                    }
                    0 < r.length && y.endUndoPack(h)
                } else if (77 == d.pressed) {
                    y.startUndoPack(h);
                    for (var qc = 0; qc < r.length;) {
                        var hc = r[qc];
                        ++qc;
                        null != hc.polygon && F.applyTransformToPolygonPointsAndCenter(hc, h)
                    }
                    y.endUndoPack(h)
                } else if (d.shift)
                    if (J.button_state ==
                        ya.DOWNED || J.button_state == ya.DRAGGED) {
                        if (null == a.current_selection) {
                            var ae = new Us;
                            ae.shape = new Ke;
                            ae.start = H.copyPoint(a.mouse_state.current);
                            ae.regular_entities = [];
                            ae.edit_entities = [];
                            ae.edit_target_entities = [];
                            a.current_selection = ae;
                            a.container.addChild(ae.shape)
                        } else ae = a.current_selection;
                        ae.bounds = H.createRectangleFrom2Points(ae.start, a.mouse_state.current);
                        var Hb = ae.shape.get_graphics();
                        Hb.clear();
                        Ea.drawBounds(Hb, ae.bounds, 16054256, .3, 9546397, 1, 1);
                        for (var Ob = b, Vd = []; null != Ob;) Vd.push(Ob),
                            Ob = Ob.parent;
                        var Vb = new W(0, 0),
                            Xb = new W(0, 0),
                            oc, ic = function(a, b, c) {
                                if (a.selectable) {
                                    Vb.x = a.visible_bounds.x;
                                    Vb.y = a.visible_bounds.y;
                                    Xb.x = a.visible_bounds.x + a.visible_bounds.width;
                                    Xb.y = a.visible_bounds.y + a.visible_bounds.height;
                                    if (null != c)
                                        for (a = 0; a < c.length;) {
                                            var d = c[a];
                                            ++a;
                                            xb.transformPoint(Vb, d.transform);
                                            xb.transformPoint(Xb, d.transform);
                                            Vb.x += d.position.x;
                                            Vb.y += d.position.y;
                                            Xb.x += d.position.x;
                                            Xb.y += d.position.y
                                        }
                                    oc = H.createRectangleFrom2Points(Vb, Xb);
                                    if (H.rectangleInRectangle(oc, b.bounds)) return Ea.drawBounds(Hb,
                                        oc, 16054256, 0, 1935032, 2, 1), !0
                                }
                                return !1
                            };
                        ae.regular_entities.splice(0, ae.regular_entities.length);
                        ae.edit_entities.splice(0, ae.edit_entities.length);
                        ae.edit_target_entities.splice(0, ae.edit_target_entities.length);
                        for (var rc = 0; rc < m.length;) {
                            var dc = m[rc];
                            ++rc;
                            ic(dc, ae, Vd) && ae.regular_entities.push(dc)
                        }
                        for (var dd = 0; dd < l.length;) {
                            var Eb = l[dd];
                            ++dd;
                            if (-1 == ae.regular_entities.indexOf(Eb.target) && (null != Eb.circle_edit && ic(Eb.circle_edit.top_center, ae) && (ae.edit_entities.push(Eb.circle_edit.top_center), -1 ==
                                    ae.edit_target_entities.indexOf(Eb.target) && ae.edit_target_entities.push(Eb.target)), null != Eb.polygon_edit))
                                for (var Pc = 0, Cc = Eb.polygon_edit.edit_points; Pc < Cc.length;) {
                                    var Dc = Cc[Pc];
                                    ++Pc;
                                    ic(Dc.entity, ae) && (ae.edit_entities.push(Dc.entity), -1 == ae.edit_target_entities.indexOf(Eb.target) && ae.edit_target_entities.push(Eb.target))
                                }
                        }
                        Hb.endFill()
                    } else M();
                else if (null != q && J.button_state == ya.DOWNED) F.addNewPolygonPointEdit(a, l, J, b, B, v, z, q, I, mb, r, Ba);
                else if (null != q && J.button_state == ya.DRAGGED)
                    for (var wc = 0; wc <
                        mb.length;) {
                        var Ec = mb[wc];
                        ++wc;
                        $c.refresh(Ec, F.getSnappedPosition(J.current, e.mouse_snap_size));
                        na.refreshPosition(Ec)
                    } else {
                        if (null != q && J.button_state == ya.UPPED && B.button_state == ya.UPPED)
                            for (var Wb = mb.slice(), mc = 0; mc < Wb.length;) {
                                var Jc = Wb[mc];
                                ++mc;
                                $c.remove(Jc)
                            }
                    } else if (d.shift) {
                        if (0 != d.pressed)
                            if (0 < Ba.length) {
                                if (0 == mb.length) {
                                    var lc = F.getMoveSizeByPressedKey(d.pressed, 10);
                                    if (0 != lc.x || 0 != lc.y) y.startUndoPack(h), F.dragOrMoveEntityEdits(a, J, h, l, !1, n, lc.x, lc.y), y.endUndoPack(h)
                                }
                            } else 0 < r.length && 0 ==
                                I.length && F.moveDraggableEntitiesIfKeyPressed(b, r, 10, d.pressed, h);
                        if (B.button_state == ya.CLICKED && -1 != X.depth)
                            if (X.entity.selected) {
                                for (var Yc = !0, Nc = 0; Nc < l.length;) {
                                    var Rc = l[Nc];
                                    ++Nc;
                                    if (null != Rc.polygon_edit && Rc.target == X.entity)
                                        for (var Sb = 0, Ic = Rc.polygon_edit.edit_points; Sb < Ic.length;) {
                                            var td = Ic[Sb];
                                            ++Sb;
                                            if (td.entity.selected) {
                                                Yc = !1;
                                                break
                                            }
                                        }
                                }
                                Yc && (y.startUndoPack(h), y.pushChange(h, X.entity, "selected", X.entity.selected), Zb.remove(X.entity), y.endUndoPack(h))
                            } else X.entity.selectable && (y.startUndoPack(h),
                                y.pushChange(h, X.entity, "selected", X.entity.selected), Zb.add(X.entity), y.endUndoPack(h))
                    } 107 != d.pressed || d.ctrl || d.shift || F.changeZoomWithUndo(a, 1);
                109 != d.pressed || d.ctrl || d.shift || F.changeZoomWithUndo(a, -1);
                if (46 == d.pressed && !d.ctrl) {
                    var ug = !1;
                    if (0 < Ba.length && !d.shift) {
                        y.startUndoPack(h);
                        for (var Qc = 0; Qc < l.length;) {
                            var Hc = l[Qc];
                            ++Qc;
                            if (null != Hc.polygon_edit) {
                                for (var Wc = Hc.target.polygon.points, Kc = Hc.polygon_edit.edit_points.slice(), vc, hg = !1, Oc = 0; Oc < Kc.length;) {
                                    var Uc = Kc[Oc];
                                    ++Oc;
                                    Uc.entity.selected &&
                                        (ug = !0, 3 < Wc.length && (hg = !0, F.removeAndDestroyEntityIncludingChildren(Uc.entity), la.remove(Hc.polygon_edit.edit_points, Uc), vc = Wc.indexOf(Uc.polygon_point), y.pushArrayRemove(h, Wc, vc), Wc.splice(vc, 1)))
                                }
                                hg && (Lf.refresh(Hc.target), yg.refresh(Hc.target), Zb.refresh(Hc.target))
                            }
                        }
                        y.endUndoPack(h)
                    }
                    if (!ug && 0 < r.length) {
                        for (var uc = [], ud = d.shift, hd = 0; hd < r.length;) {
                            var Zc = r[hd];
                            ++hd;
                            (Zc.deletable || ud) && uc.push(Zc)
                        }
                        y.startUndoPack(h);
                        F.sortEntitiesByDepth(uc);
                        F.destroyEntitiesWithUndo(h, uc);
                        y.endUndoPack(h);
                        0 < uc.length &&
                            na.refreshGroupLengthChanged(b)
                    }
                }
                if (119 == d.pressed && !d.ctrl && !d.shift) {
                    var xd = [];
                    if (null == a.library_group) w.trace("warning: no library", {
                        fileName: "EditorDo.hx",
                        lineNumber: 3671,
                        className: "bikas.editor.EditorDo",
                        methodName: "update"
                    });
                    else
                        for (var md = 0; md < r.length;) {
                            var Cd = r[md];
                            ++md;
                            Cd.groupable && xd.push(Cd)
                        }
                    if (0 < xd.length) {
                        var Bc = F.createPrefabWithUndo(a, b, xd),
                            qd = Bc[0],
                            Ed = Bc[1];
                        ca.openTextInputWindow(a, "Enter Name:", "Prefab", function(a) {
                            qd.name = a;
                            Ed.name = a
                        })
                    }
                }
                32 != d.holding || d.ctrl || d.shift || (B.button_state ==
                    ya.DOWNED ? null == a.stage_group.dragging && (y.startUndoPack(h), y.pushChange(h, a.stage_group.position, "x", a.stage_group.position.x), y.pushChange(h, a.stage_group.position, "y", a.stage_group.position.y), $c.add(a.stage_group, F.getSnappedPosition(c.current, e.mouse_snap_size)), y.endUndoPack(h)) : B.button_state == ya.DRAGGED ? null != a.stage_group.dragging && ($c.refresh(a.stage_group, F.getSnappedPosition(c.current, e.mouse_snap_size), 5), na.refreshPosition(a.stage_group)) : B.button_state == ya.UPPED && null != a.stage_group.dragging &&
                    $c.remove(a.stage_group));
                if (!d.ctrl && !d.shift) {
                    if (0 != d.pressed)
                        if (0 < Ba.length) {
                            if (0 == mb.length) {
                                var jd = F.getMoveSizeByPressedKey(d.pressed, 1);
                                if (0 != jd.x || 0 != jd.y) y.startUndoPack(h), F.dragOrMoveEntityEdits(a, J, h, l, !1, n, jd.x, jd.y), y.endUndoPack(h)
                            }
                        } else 0 < r.length && 0 == I.length && F.moveDraggableEntitiesIfKeyPressed(b, r, 1, d.pressed, h);
                    M();
                    if (zb) {
                        var sd = Ba.slice();
                        if (J.button_state == ya.DOWNED) {
                            if (!Ca.entity.selected)
                                for (var kd = 0; kd < sd.length;) {
                                    var Gd = sd[kd];
                                    ++kd;
                                    Zb.remove(Gd)
                                }
                            Ca.entity.selectable && (Ca.entity.selected ||
                                Zb.add(Ca.entity));
                            y.startUndoPack(h);
                            F.dragOrMoveEntityEdits(a, J, h, l, !0);
                            y.endUndoPack(h)
                        } else if (J.button_state == ya.DRAGGED) {
                            if (0 < mb.length) {
                                for (var rd = [], cd = 0; cd < mb.length;) {
                                    var Id = mb[cd];
                                    ++cd;
                                    var Dd = new W(Id.dragging.x + J.current.x, Id.dragging.y + J.current.y);
                                    Dd = Va.convertPositionToLocal(a.entities_editor.group.display.contents, Dd, b.display.contents);
                                    var Fd = Va.convertPositionToLocal(a.entities_editor.group.display.contents, J.current, b.display.contents),
                                        zd = new W;
                                    zd.x = Dd.x - Fd.x;
                                    zd.y = Dd.y - Fd.y;
                                    rd.push(zd)
                                }
                                var fd =
                                    null;
                                if (0 != J.current.x - J.downed.x || 0 != J.current.y - J.downed.y) fd = F.findNearestSnapForEditEntity(B.current, rd, g, a.entities_editor, mb, m, a.stage_settings.snap_to_nearest_entity_distance, a.stage_settings.snap_to_nearest_polygon_point_distance, a.stage_settings.snap_to_nearest_polygon_line_distance, a.stage_settings.snap_to_straight_line_distance, a.bitmap_polygons_map);
                                fd = null == fd ? F.getSnappedPosition(J.current, e.mouse_snap_size) : Va.convertPositionToLocal(b.display.contents, fd, a.entities_editor.group.display.contents);
                                for (var Xd = 0; Xd < mb.length;) {
                                    var Pd = mb[Xd];
                                    ++Xd;
                                    $c.refresh(Pd, fd);
                                    na.refreshPosition(Pd)
                                }
                            }
                        } else if (J.button_state == ya.UPPED)
                            for (var Td = mb.slice(), Nd = 0; Nd < Td.length;) {
                                var Yd = Td[Nd];
                                ++Nd;
                                $c.remove(Yd)
                            }
                    } else {
                        var gd = r.slice();
                        if (B.button_state == ya.DOWNED) {
                            if (-1 != Ca.depth) {
                                y.startUndoPack(h);
                                if (!Ca.entity.selected) {
                                    for (var wd = 0; wd < gd.length;) {
                                        var Iw = gd[wd];
                                        ++wd;
                                        y.pushChange(h, Iw, "selected", Iw.selected);
                                        Zb.remove(Iw)
                                    }
                                    Ca.entity.selectable && !Ca.entity.selected && (y.pushChange(h, Ca.entity, "selected", Ca.entity.selected),
                                        Zb.add(Ca.entity))
                                }
                                for (var sc = 0; sc < r.length;) {
                                    var yd = r[sc];
                                    ++sc;
                                    yd.draggable && (y.pushChange(h, yd.position, "x", yd.position.x), y.pushChange(h, yd.position, "y", yd.position.y), $c.add(yd, F.getSnappedPosition(B.current, e.mouse_snap_size)))
                                }
                            } else {
                                y.startUndoPack(h);
                                if (0 < gd.length)
                                    for (var ed = 0; ed < gd.length;) {
                                        var Xc = gd[ed];
                                        ++ed;
                                        y.pushChange(h, Xc, "selected", Xc.selected);
                                        Zb.remove(Xc)
                                    }
                                null == a.stage_group.dragging && (y.pushChange(h, a.stage_group.position, "x", a.stage_group.position.x), y.pushChange(h, a.stage_group.position,
                                    "y", a.stage_group.position.y), $c.add(a.stage_group, F.getSnappedPosition(c.current, e.mouse_snap_size)))
                            }
                            y.endUndoPack(h)
                        } else if (B.button_state == ya.DRAGGED)
                            if (0 < I.length) {
                                var Jd = null;
                                if (0 != B.current.x - B.downed.x || 0 != B.current.y - B.downed.y) Jd = F.findNearestSnap(B.current, I, m, a.stage_settings);
                                null == Jd && (Jd = F.getSnappedPosition(B.current, e.mouse_snap_size));
                                for (var ge = 0; ge < I.length;) {
                                    var ce = I[ge];
                                    ++ge;
                                    $c.refresh(ce, Jd);
                                    na.refreshPosition(ce);
                                    na.refreshGroupBoundsIncludingParents(b)
                                }
                            } else null != a.stage_group.dragging &&
                                ($c.refresh(a.stage_group, F.getSnappedPosition(c.current, e.mouse_snap_size)), na.refreshPosition(a.stage_group));
                        else if (B.button_state == ya.UPPED) {
                            if (0 < I.length)
                                for (var Od = 0, Zd = I.slice(); Od < Zd.length;) {
                                    var je = Zd[Od];
                                    ++Od;
                                    $c.remove(je)
                                }
                            null != a.stage_group.dragging && $c.remove(a.stage_group)
                        } else if (B.button_state == ya.CLICKED && 1 == r.length && le == r[0])
                            if (null != le.group) y.startUndoPack(h), F.gotoDeeperGroupWithUndo(h, a, le), y.endUndoPack(h);
                            else if (null != le.prefab_link && null != le.prefab_link.prefab_entity) {
                            var xc =
                                le,
                                Mg = xc.prefab_link.prefab_entity;
                            y.startUndoPack(h);
                            var $d = new Ks;
                            $d.saved_position = H.copyPoint(Mg.position);
                            $d.saved_transform = H.copyTransform(Mg.transform);
                            $d.prefab_link_entity = xc;
                            y.pushChange(h, Mg.prefab, "edit", Mg.prefab.edit);
                            Mg.prefab.edit = $d;
                            F.moveEntitiesToDifferentGroupWithUndo(h, a.library_group, b, [Mg]);
                            y.pushPointChange(h, Mg.position);
                            y.pushTransformChange(h, Mg.transform);
                            Mg.position.x = xc.position.x;
                            Mg.position.y = xc.position.y;
                            Mg.transform.scale_x = xc.transform.scale_x;
                            Mg.transform.scale_y =
                                xc.transform.scale_y;
                            Mg.transform.rotation = xc.transform.rotation;
                            y.pushChange(h, xc, "selected", xc.selected);
                            xc.selected = !1;
                            var me = xc.display.contents,
                                qe = xc.display.contents.get_visible();
                            y.pushChange(h, me, "visible", qe);
                            xc.display.contents.set_visible(!1);
                            na.refreshEntityIncludingChildren(xc);
                            F.gotoDeeperGroupWithUndo(h, a, Mg);
                            y.endUndoPack(h);
                            na.refreshDepthsInGroup(a.library_group)
                        }
                    }
                }
                for (var be = 0; be < m.length;) {
                    var Ad = m[be];
                    ++be;
                    if (null != Ad.polygon && Ad.polygon.draw_type == Lg.TEXTURE) {
                        var Sc = Ad.polygon.texture;
                        if (null != Sc) {
                            if (!Sc.bitmaps_updated) {
                                Sc.data.fillShape.get_graphics().clear();
                                Sc.data.lineShape.get_graphics().clear();
                                var Ae = V.retrieveBitmapData(Sc.fill_source_name, a.bitmap_assets);
                                Ye.setBitmapData(Sc.data, Ae.bitmap_data);
                                if ("" != Sc.line_source_name) {
                                    var ve = V.retrieveBitmapData(Sc.line_source_name, a.bitmap_assets);
                                    Ye.setLineBitmapData(Sc.data, ve.bitmap_data)
                                }
                                Sc.bitmaps_updated = !0
                            }
                            var we = Va.convertPositionToLocal(ia.get_current().stage, L, Ad.display.contents),
                                Be = Va.convertPositionToLocal(ia.get_current().stage,
                                    D, Ad.display.contents);
                            Ye.draw(Sc.data, we, Be, Sc.use_sutherland_hodgman);
                            yg.refresh(Ad);
                            Zb.refresh(Ad)
                        }
                    }
                }
                for (var id = 0, Rd; id < l.length;) Rd = l[id], Rd.target.selected && null != Rd.target.container_link || (F.destroyEntityEdit(Rd), l.splice(id, 1), --id), ++id;
                for (var Mc = 0; Mc < r.length;) {
                    var ad = r[Mc];
                    ++Mc;
                    for (var fe = !1, he = 0; he < l.length;) {
                        var ie = l[he];
                        ++he;
                        ie.target == ad && (fe = !0);
                        null != ie.polygon_edit && F.updatePolygonEdit(ie, a.entities_editor.group, v)
                    }
                    if (!fe) {
                        var ee = !1,
                            fc = new Qs;
                        null != ad.circle && ad.circle.editable &&
                            (fc.circle_edit = new Ns, fc.circle_edit.top_center = F.createEditEntity(Hd.SQUARE_LIGHT, 7), F.addEntityToGroup(a.entities_editor.group, fc.circle_edit.top_center), na.addEntity(fc.circle_edit.top_center), ee = !0);
                        null != ad.polygon && ad.polygon.editable && (fc.polygon_edit = new Ps, fc.polygon_edit.edit_points = [], ee = !0);
                        if (ad.transform_editable) {
                            var Qd = !0,
                                pd = !0,
                                oe = !0,
                                re = !0;
                            null != ad.group && (pd = Qd = !1);
                            null != ad.circle && (re = oe = pd = Qd = !1);
                            null != ad.prefab_link && (oe = pd = Qd = !1);
                            fc.transform_edit = F.createTransformEditEntities(Qd,
                                pd, oe, re);
                            for (var Vc = 0, se = fc.transform_edit.all; Vc < se.length;) {
                                var te = se[Vc];
                                ++Vc;
                                F.addEntityToGroup(a.entities_editor.group, te);
                                na.addEntity(te)
                            }
                            ee = !0
                        }
                        ee && (fc.target = ad, l.push(fc), g.push(ad), null != fc.polygon_edit && F.updatePolygonEdit(fc, a.entities_editor.group, v))
                    }
                }
                for (var ze = 0; ze < l.length;) {
                    var ld = l[ze];
                    ++ze;
                    var pc = [ld.target];
                    if (null != ld.transform_edit) {
                        var Bd = ld.transform_edit,
                            xe = [Bd.transform_before_drag],
                            zc = function(a, b) {
                                return function(c, d, e, f, h, k) {
                                    if (null != c && null != c.dragging) {
                                        for (var m = c.position,
                                                r = Va.convertPositionToLocal(b[0].container_link, b[0].position, c.container_link), I = b[0], g = I.transform.rotation; null != I.parent;) I = I.parent, g += I.transform.rotation;
                                        g = .017453292519943 * -g;
                                        I = H.rotatePoint(r, d, g);
                                        var l = H.rotatePoint(r, m, g);
                                        g = d.x - r.x;
                                        d = d.y - r.y;
                                        var tc = m.x - r.x;
                                        m = m.y - r.y;
                                        var Mb = Math.sqrt(tc * tc + m * m) / Math.sqrt(g * g + d * d);
                                        0 > H.dot(g, d, tc, m) && (Mb *= -1);
                                        e && (b[0].transform.scale_x = (l.x - r.x) / (I.x - r.x) * a[0].scale_x);
                                        f && (b[0].transform.scale_y = (l.y - r.y) / (I.y - r.y) * a[0].scale_y);
                                        h && (b[0].transform.scale_x =
                                            a[0].scale_x * Mb, b[0].transform.scale_y = a[0].scale_y * Mb);
                                        k && (e = a[0].rotation, f = 57.29577951308232 * H.angleDifferenceRad(Math.atan2(m, tc), Math.atan2(d, g)), b[0].transform.rotation = e + f);
                                        na.refreshPosition(c);
                                        kj.refresh(b[0]);
                                        yg.refresh(b[0])
                                    }
                                }
                            }(xe, pc);
                        if (null != xe[0]) {
                            var vd = ld.transform_edit.transform_points_before_drag;
                            zc(Bd.top_left, vd.top_left, !1, !1, !1, !0);
                            zc(Bd.top_center, vd.top_center, !1, !0, !1, !1);
                            zc(Bd.top_right, vd.top_right, !1, !1, !0, !1);
                            zc(Bd.center_right, vd.center_right, !0, !1, !1, !1);
                            zc(Bd.bottom_right,
                                vd.bottom_right, !1, !1, !0, !1);
                            zc(Bd.bottom_center, vd.bottom_center, !1, !0, !1, !1);
                            zc(Bd.bottom_left, vd.bottom_left, !1, !1, !0, !1);
                            zc(Bd.center_left, vd.center_left, !0, !1, !1, !1)
                        }
                    }
                    if (null != ld.circle_edit) {
                        var Ce = ld.circle_edit,
                            Sd = Ce.top_center,
                            Oe = Ce.radius_before,
                            Pe = Ce.position_before;
                        if (null != Sd.dragging) {
                            var Ud = function() {
                                    return function(a, b, c) {
                                        b = H.distance(a.x, a.y, b.x, b.y);
                                        return H.distance(a.x, a.y, c.x, c.y) / b
                                    }
                                }(),
                                Ee = Va.convertPositionToLocal(pc[0].container_link, pc[0].position, Sd.container_link),
                                Ge = Ud(Ee,
                                    Pe, Sd.position);
                            pc[0].circle.radius = Oe * Ge;
                            na.refreshPosition(Sd);
                            el.refresh(pc[0]);
                            yg.refresh(pc[0]);
                            Zb.refresh(pc[0])
                        }
                        var He = new W(0, -pc[0].circle.radius),
                            Me = Va.convertPositionToLocal(pc[0].display.container, He, Sd.container_link);
                        Sd.position.x = Me.x;
                        Sd.position.y = Me.y;
                        na.refreshPosition(Sd)
                    }
                    if (null != ld.polygon_edit)
                        for (var Wd, ne, ye, pe = 0, Qe = ld.polygon_edit.edit_points; pe < Qe.length;) {
                            var Re = Qe[pe];
                            ++pe;
                            Wd = Re.entity;
                            ne = Re.polygon_point;
                            null != Wd.dragging && (ye = Va.convertPositionToLocal(Wd.container_link,
                                Wd.position, pc[0].display.contents), ne.x = ye.x, ne.y = ye.y, na.refreshPosition(Wd), Lf.refresh(pc[0]), yg.refresh(pc[0]), Zb.refresh(pc[0]));
                            var Se = Va.convertPositionToLocal(pc[0].display.container, ne, Wd.container_link);
                            Wd.position.x = Se.x;
                            Wd.position.y = Se.y;
                            na.refreshPosition(Wd)
                        }
                    if (null != ld.transform_edit) {
                        var Kd = ld.transform_edit,
                            Ld = function() {
                                return function(a, b) {
                                    null != a && (a.position.x = b.x, a.position.y = b.y, na.refreshPosition(a))
                                }
                            }(),
                            Md = F.calculateTransformEditPoints(pc[0].internal_bounds, pc[0].display.container,
                                a.entities_editor.group.display.contents);
                        Ld(Kd.top_left, Md.top_left);
                        Ld(Kd.top_center, Md.top_center);
                        Ld(Kd.top_right, Md.top_right);
                        Ld(Kd.center_right, Md.center_right);
                        Ld(Kd.bottom_right, Md.bottom_right);
                        Ld(Kd.bottom_center, Md.bottom_center);
                        Ld(Kd.bottom_left, Md.bottom_left);
                        Ld(Kd.center_left, Md.center_left)
                    }
                }
                for (var ue = 0, De = a.quick_update_list; ue < De.length;) {
                    var Fe = De[ue];
                    ++ue;
                    Fe()
                }
                null != a.game_update && a.game_update(a);
                for (var ke = 0; ke < n.length;) {
                    var Le = n[ke];
                    ++ke;
                    Le.dragging = null
                }
            };
            var zg = function() {
                this.max_point_distance =
                    190;
                this.min_point_distance = 170;
                this.rotation = 0;
                this.height = 2E3;
                this.width_cut = 6E3;
                this.seed = .6767;
                this.octaves = 4;
                this.decay = .8;
                this.step_size = 10;
                this.count = 500;
                this.name = "default"
            };
            g["bikas.editor.PerlinTerrainPreset"] = zg;
            zg.__name__ = ["bikas", "editor", "PerlinTerrainPreset"];
            zg.prototype = {
                name: null,
                count: null,
                step_size: null,
                decay: null,
                octaves: null,
                seed: null,
                width_cut: null,
                height: null,
                rotation: null,
                min_point_distance: null,
                max_point_distance: null,
                __class__: zg
            };
            var Zs = function() {
                this.max_width = 0
            };
            g["bikas.editor.PerlinTerrainInfo"] =
                Zs;
            Zs.__name__ = ["bikas", "editor", "PerlinTerrainInfo"];
            Zs.prototype = {
                max_width: null,
                __class__: Zs
            };
            var Zc = function() {};
            g["bikas.editor.EditorPerlinTerrainDo"] = Zc;
            Zc.__name__ = ["bikas", "editor", "EditorPerlinTerrainDo"];
            Zc.createPreset = function(a, b, c, d, e, f, h, k, m, r, I) {
                var g = new zg;
                g.name = a;
                g.count = b;
                g.step_size = c;
                g.decay = d;
                g.octaves = e;
                g.seed = f;
                g.width_cut = h;
                g.height = k;
                g.rotation = m;
                g.min_point_distance = r;
                g.max_point_distance = I;
                return g
            };
            Zc.createDefaultPresets = function() {
                var a = [];
                a.push(Zc.createPreset("init",
                    400, 10, 1, 6, .5, 400, 400, 0, 9, 11));
                a.push(Zc.createPreset("default", 500, 10, .8, 4, .6767, 6E3, 2E3, 0, 170, 190));
                a.push(Zc.createPreset("hills_small", 500, 10, .7, 4, .697, 7E3, 3E3, 0, 100, 200));
                a.push(Zc.createPreset("hills_medium", 500, 10, 1, 3, .2344, 7E3, 6E3, 0, 100, 200));
                a.push(Zc.createPreset("plains", 500, 10, .6, 4, .2866, 8E3, 1E3, 0, 100, 200));
                return a
            };
            Zc.createPresetUI = function(a, b) {
                var c = v.createDebugWindow("Perlin Terrain (add/remove undoable)", 200);
                c.setup.custom_fields.push(new Tk(zg, Zc.getPerlinTerrainPresetFields()));
                v.addButton(c, "add new", function() {
                    y.startUndoPack(a);
                    var d = new zg,
                        e = b.length;
                    y.pushArrayInsert(a, b, e);
                    b.splice(e, 0, d);
                    y.endUndoPack(a);
                    v.refreshAllFields(c)
                });
                v.addInstanceEdit(c, b, "presets", function(c) {
                    y.startUndoPack(a);
                    var d = new zg;
                    ch.copyInstanceShallow(b[c], d);
                    y.pushArrayInsert(a, b, c);
                    b.splice(c, 0, d);
                    y.endUndoPack(a)
                }, function(c) {
                    y.startUndoPack(a);
                    y.pushArrayRemove(a, b, c);
                    la.remove(b, b[c]);
                    y.endUndoPack(a)
                });
                return c
            };
            Zc.createPolygonUI = function(a, b) {
                var c = v.createDebugWindow("Perlin Terrain",
                        300, !0, cc.DESTROY, 1280, 720, !1),
                    d = c.setup;
                c.setup.custom_fields.push(new Tk(zg, Zc.getPerlinTerrainPresetFields()));
                var e = new S;
                b.display.container.addChild(e);
                c.callbacks.debug_close_callbacks.push(function(a) {
                    b.display.container.removeChild(e)
                });
                var f = a.library_data.perlin_terrain_presets;
                if (0 == f.length) return w.trace("warning: no perlin presets", {
                    fileName: "EditorPerlinTerrainDo.hx",
                    lineNumber: 112,
                    className: "bikas.editor.EditorPerlinTerrainDo",
                    methodName: "createPolygonUI"
                }), c;
                var h = f[f.length - 1],
                    k = new zg;
                ch.copyInstanceShallow(h, k);
                var m = new Zs,
                    r = u.createBlock(d.width, 4 * d.height, d.padding),
                    I = Ub.getClosestPointToSpecifiedBound(b.polygon.points, !0, !1),
                    g = null,
                    l = u.createText("", bc.LEFT, d.width, d.height, d.padding),
                    Ba = function(a) {
                        m.max_width = a.count * a.step_size;
                        u.setText(l, "max_width: " + m.max_width)
                    },
                    mb = u.createHBox(!1, !1, d.width, d.height, d.padding),
                    n = u.createText("preset", bc.LEFT, d.width / 2, d.height, 0),
                    p = function() {
                        var a = u.createSelectBox(h, f, d.width / 2, d.height, d.internal_scrollable_max_height,
                            d.slider_size, 0, null);
                        a.select_box.select_callback = function(a) {
                            h = a;
                            ch.copyInstanceShallow(h, k);
                            v.refreshDebugFields(c.edit_fields);
                            a = e.get_graphics();
                            g = Zc.calculatePerlinAndDraw(b, a, k, I, r.sprite, r.size.width, r.size.height);
                            Ba(k)
                        };
                        return a
                    },
                    x = p(),
                    zb = function() {
                        u.destroyElement(x);
                        x = p();
                        u.addToBox(mb, x);
                        u.draw(mb);
                        var a = e.get_graphics();
                        g = Zc.calculatePerlinAndDraw(b, a, k, I, r.sprite, r.size.width, r.size.height);
                        Ba(k)
                    },
                    z = function() {
                        for (var a = new zg, d = 0, f = c.edit_fields; d < f.length;) {
                            var h = f[d];
                            ++d;
                            h.object =
                                a
                        }
                        v.applyChanges(c);
                        d = e.get_graphics();
                        g = Zc.calculatePerlinAndDraw(b, d, a, I, r.sprite, r.size.width, r.size.height);
                        Ba(a);
                        a = 0;
                        for (d = c.edit_fields; a < d.length;) f = d[a], ++a, f.object = k
                    },
                    q = e.get_graphics();
                g = Zc.calculatePerlinAndDraw(b, q, k, I, r.sprite, r.size.width, r.size.height);
                Ba(k);
                q = u.createText("perlin parameters:", bc.LEFT, d.width, d.height, d.padding);
                var L = u.createText("post processing:", bc.LEFT, d.width, d.height, d.padding),
                    D = u.createHBox(!1, !0, d.width, d.height, 0),
                    A = [],
                    Ka = u.createButton("Save Seed (Temp)",
                        d.width / 2, d.height, d.padding,
                        function() {
                            for (var a = 0, b = c.edit_fields; a < b.length;) {
                                var d = b[a];
                                ++a;
                                if ("seed" == d.field_name) {
                                    a = E.parseFloat(d.value);
                                    A.push(a);
                                    break
                                }
                            }
                        }),
                    t = u.createButton("Select Seed", d.width / 2, d.height, d.padding, function() {
                        for (var f = v.createDebugWindow("Select Seed", d.title_button_width, !1, cc.DESTROY, d.max_content_width, d.max_content_height, !1), h = 0; h < A.length;) {
                            var m = [A[h]];
                            ++h;
                            var l = m[0] + "";
                            m = function(a) {
                                return function() {
                                    for (var d = new zg, h = 0, m = c.edit_fields; h < m.length;) {
                                        var l = m[h];
                                        ++h;
                                        "seed" == l.field_name && (l.value = a[0], l.value_text.text.field.set_text($a.fromDynamic(l.value)));
                                        l.object = d
                                    }
                                    v.applyChanges(c);
                                    h = e.get_graphics();
                                    g = Zc.calculatePerlinAndDraw(b, h, d, I, r.sprite, r.size.width, r.size.height);
                                    Ba(d);
                                    d = 0;
                                    for (h = c.edit_fields; d < h.length;) m = h[d], ++d, m.object = k;
                                    v.close(f)
                                }
                            }(m);
                            v.addButton(f, l, m)
                        }
                        ca.openClickedDebugWindow(a.menu_container, f)
                    });
                u.addToBox(D, Ka);
                u.addToBox(D, t);
                Ka = u.createButton("randomize seed", d.width, d.height, d.padding, function() {
                    var a = new zg;
                    a.seed = Math.round(1E4 *
                        Math.random()) / 1E4;
                    for (var d = 0, f = c.edit_fields; d < f.length;) {
                        var h = f[d];
                        ++d;
                        "seed" == h.field_name && (h.value = a.seed, h.value_text.text.field.set_text($a.fromDynamic(h.value)));
                        h.object = a
                    }
                    v.applyChanges(c);
                    d = e.get_graphics();
                    g = Zc.calculatePerlinAndDraw(b, d, a, I, r.sprite, r.size.width, r.size.height);
                    Ba(a);
                    a = 0;
                    for (d = c.edit_fields; a < d.length;) f = d[a], ++a, f.object = k
                });
                t = u.createHBox(!1, !1, d.width, d.height, d.padding);
                var B = (d.width - d.padding) / 5 - d.padding,
                    pa = u.createButton("Draw", B, d.height, d.padding, function() {
                        z()
                    }),
                    J = u.createButton("Place", B, d.height, d.padding, function() {
                        if (null == g || null == I) w.trace("warning: current_points or top_right_point is null", {
                            fileName: "EditorPerlinTerrainDo.hx",
                            lineNumber: 244,
                            className: "bikas.editor.EditorPerlinTerrainDo",
                            methodName: "createPolygonUI"
                        });
                        else {
                            y.startUndoPack(a.undo);
                            y.pushChange(a.undo, b.polygon, "points", b.polygon.points);
                            var c = [];
                            c.push(I);
                            for (var d = 0; d < g.length;) {
                                var e = g[d];
                                ++d;
                                c.push(e)
                            }
                            d = b.polygon.points.indexOf(I) + 1;
                            e = b.polygon.points.length;
                            for (var f = e - 1, h = 0; h <
                                e && !(h++, d >= e && (d = 0), c.push(H.copyPoint(b.polygon.points[d])), ++d, --f, 0 >= f););
                            b.polygon.points = c;
                            na.refreshEntityIncludingChildren(b);
                            na.refreshGroupBoundsIncludingParents(b);
                            I = Ub.getClosestPointToSpecifiedBound(b.polygon.points, !0, !1);
                            z();
                            y.endUndoPack(a.undo)
                        }
                    }),
                    R = u.createButton("Reset", B, d.height, d.padding, function() {
                        ch.copyInstanceShallow(h, k);
                        v.refreshDebugFields(c.edit_fields);
                        zb()
                    }),
                    Ca = u.createButton("Save", B, d.height, d.padding, function() {
                        v.applyChanges(c);
                        ch.copyInstanceShallow(k, h);
                        v.refreshDebugFields(c.edit_fields);
                        zb()
                    });
                B = u.createButton("New", B, d.height, d.padding, function() {
                    for (var a = new zg, b = 0, d = c.edit_fields; b < d.length;) {
                        var e = d[b];
                        ++b;
                        e.object = a
                    }
                    v.applyChanges(c);
                    h = a;
                    f.push(a);
                    ch.copyInstanceShallow(a, k);
                    a = 0;
                    for (b = c.edit_fields; a < b.length;) d = b[a], ++a, d.object = k;
                    v.refreshDebugFields(c.edit_fields);
                    zb()
                });
                var X = u.createButton("Apply transform and center polygon", d.width, d.height, d.padding, function() {
                        y.startUndoPack(a.undo);
                        F.applyTransformToPolygonPointsAndCenter(b, a.undo);
                        v.refreshAllFields(c);
                        y.endUndoPack(a.undo);
                        I = Ub.getClosestPointToSpecifiedBound(b.polygon.points, !0, !1);
                        z()
                    }),
                    oa = u.createButton("Find top right corner and draw", d.width, d.height, d.padding, function() {
                        I = Ub.getClosestPointToSpecifiedBound(b.polygon.points, !0, !1);
                        z()
                    }),
                    N = u.createText("Preview:", bc.LEFT, d.width, d.height, d.padding);
                u.addToBox(mb, n);
                u.addToBox(mb, x);
                u.addToWindowBox(c.window, mb);
                u.addToBox(t, pa);
                u.addToBox(t, J);
                u.addToBox(t, R);
                u.addToBox(t, Ca);
                u.addToBox(t, B);
                v.addInstanceEdit(c, k, k.name);
                u.insertToBox(c.window.window_box.contents,
                    q, 1);
                u.insertToBox(c.window.window_box.contents, D, 8);
                u.insertToBox(c.window.window_box.contents, l, 9);
                u.insertToBox(c.window.window_box.contents, L, 10);
                u.addToWindowBox(c.window, Ka);
                u.addToWindowBox(c.window, t);
                u.addToWindowBox(c.window, X);
                u.addToWindowBox(c.window, oa);
                u.addToWindowBox(c.window, N);
                u.addToWindowBox(c.window, r);
                return c
            };
            Zc.getPerlinTerrainPresetFields = function() {
                return "name count step_size decay octaves seed width_cut height rotation min_point_distance max_point_distance".split(" ")
            };
            Zc.calculatePerlinAndDraw = function(a, b, c, d, e, f, h) {
                null == h && (h = -1);
                null == f && (f = -1);
                var k = yh.getPerlinNoise1D(c.count, c.octaves, c.decay, c.seed);
                d = Zc.createPointCurve(k, c, d);
                c = Zc.createPolygonPoints(d, c);
                Zc.drawCurveAndPoints(b, d, c);
                if (null != e && 0 < f && 0 < h && (b = Ub.getPolygonBounds(c), b = H.boundsToRectangle(b), f = (f - 4) / b.width, b = (h - 4) / b.height, f = f < b ? f : b, 0 < c.length)) {
                    b = c[0];
                    for (d = 0; d < c.length;) k = c[d], ++d, k.y >= b.y && (b = k);
                    d = 2 / f;
                    h = new W(-c[0].x + d, -b.y - d + h / f);
                    Zc.drawPreviewPoints(e.get_graphics(), c, h, f)
                }
                a.visible_bounds =
                    Va.convertRectangle(a.display.container.getBounds(a.container_link));
                return c
            };
            Zc.createPointCurve = function(a, b, c) {
                var d = b.step_size,
                    e = b.height,
                    f = a.length,
                    h = [],
                    k = a[0] * e;
                h.push(new W(c.x, c.y));
                for (var m = 0; m < f;) {
                    var r = m++;
                    var I = r * d;
                    var g = a[r] * e - k;
                    r = Math.sqrt(I * I + g * g);
                    g = Math.atan2(g, I) + b.rotation * Math.PI / 180;
                    I = Math.cos(g) * r;
                    g = Math.sin(g) * r;
                    if (I > b.width_cut) break;
                    else h.push(new W(I + c.x, g + c.y))
                }
                return h
            };
            Zc.createPolygonPoints = function(a, b) {
                for (var c = [], d = a.length, e = new Sk(b.seed), f = ma.linear(b.min_point_distance,
                        b.max_point_distance, e.getRandom()), h, k = null, m = 1; m < d;) {
                    var r = m++;
                    for (h = H.distanceBetweenPoints(a[r - 1], a[r]); f <= h;) c.push(Id.interpolate(a[r - 1], a[r], f / h)), null == k ? k = c[c.length - 1] : c[c.length - 1].y > k.y && (k = c[c.length - 1]), f += ma.linear(b.min_point_distance, b.max_point_distance, e.getRandom());
                    f -= h
                }
                null != k && (a = c[0].x, b = k.y + 100, c.push(new W(c[c.length - 1].x, k.y + 100)), c.push(new W(a, b)));
                return c
            };
            Zc.drawPreviewPoints = function(a, b, c, d) {
                if (0 == b.length) w.trace("warning: curve.length == 0", {
                    fileName: "EditorPerlinTerrainDo.hx",
                    lineNumber: 486,
                    className: "bikas.editor.EditorPerlinTerrainDo",
                    methodName: "drawPreviewPoints"
                });
                else {
                    var e = b.length;
                    a.clear();
                    a.lineStyle(1, 0, 1);
                    a.moveTo((b[0].x + c.x) * d, (b[0].y + c.y) * d);
                    for (var f = 1; f < e;) {
                        var h = f++;
                        a.lineTo((b[h].x + c.x) * d, (b[h].y + c.y) * d)
                    }
                    a.lineTo((b[0].x + c.x) * d, (b[0].y + c.y) * d)
                }
            };
            Zc.drawCurveAndPoints = function(a, b, c) {
                if (0 == b.length) w.trace("warning: curve.length == 0", {
                    fileName: "EditorPerlinTerrainDo.hx",
                    lineNumber: 503,
                    className: "bikas.editor.EditorPerlinTerrainDo",
                    methodName: "drawCurveAndPoints"
                });
                else if (0 == c.length) w.trace("warning: points.length == 0", {
                    fileName: "EditorPerlinTerrainDo.hx",
                    lineNumber: 507,
                    className: "bikas.editor.EditorPerlinTerrainDo",
                    methodName: "drawCurveAndPoints"
                });
                else {
                    var d = b.length;
                    a.clear();
                    a.lineStyle(1, 0, .3);
                    a.moveTo(b[0].x, b[0].y);
                    for (var e = 1; e < d;) {
                        var f = e++;
                        a.lineTo(b[f].x, b[f].y)
                    }
                    a.lineStyle(2, 0, 1);
                    d = c.length;
                    a.moveTo(c[0].x, c[0].y);
                    b = 0;
                    for (e = d; b < e;) f = b++, a.lineTo(c[f].x, c[f].y);
                    a.lineTo(c[0].x, c[0].y);
                    for (b = 0; b < d;) e = b++, a.drawRect(c[e].x - 5, c[e].y - 5, 10, 10)
                }
            };
            var O =
                function() {};
            g["bikas.serialization.BefDo"] = O;
            O.__name__ = ["bikas", "serialization", "BefDo"];
            O.createSerialData = function() {
                var a = new $s;
                a.classes = [];
                a.enum_cache = [];
                return a
            };
            O.pushClass = function(a, b, c) {
                var d = new Zp;
                d.full_class_name = Q.getClassName(b);
                d.serial_type = b;
                d.unserial_type = b;
                d.fields = [];
                d.ignore_fields = [];
                d.init_func = c;
                a.classes.push(d);
                return d
            };
            O.pushField = function(a, b, c) {
                var d = new $p;
                d.field_name = b;
                d.value_type_flags = [];
                d.value_type_flags.push(c);
                a.fields.push(d)
            };
            O.pushBool = function(a,
                b) {
                O.pushField(a, b, 0)
            };
            O.pushInt = function(a, b) {
                O.pushField(a, b, 3)
            };
            O.pushDouble = function(a, b) {
                O.pushField(a, b, 4)
            };
            O.pushString = function(a, b) {
                O.pushField(a, b, 5)
            };
            O.pushEnum = function(a, b) {
                O.pushField(a, b, 7)
            };
            O.pushArray = function(a, b, c) {
                var d = new $p;
                d.field_name = b;
                d.value_type_flags = c.slice();
                d.value_type_flags.unshift(11);
                a.fields.push(d)
            };
            O.pushInstance = function(a, b) {
                O.pushField(a, b, 12)
            };
            O.pushPoint = function(a, b) {
                O.pushField(a, b, 128)
            };
            O.pushTransform = function(a, b) {
                O.pushField(a, b, 129)
            };
            O.pushIgnore =
                function(a, b) {
                    a.ignore_fields.push(b)
                };
            O.validateSerialData = function(a) {
                for (var b = !0, c = 0, d = a.classes; c < d.length;) {
                    var e = d[c];
                    ++c;
                    a = Q.getInstanceFields(Q.resolveClass(e.full_class_name));
                    for (var f = 0; f < a.length;) {
                        var h = a[f];
                        ++f;
                        for (var k = !1, m = 0, r = e.fields; m < r.length;) {
                            var I = r[m];
                            ++m;
                            if (I.field_name == h) {
                                k = !0;
                                break
                            }
                        } - 1 != e.ignore_fields.indexOf(h) && (k = !0);
                        k || (w.trace("warning: field '" + h + "' in class '" + e.full_class_name + "' is not specified", {
                            fileName: "BefDo.hx",
                            lineNumber: 117,
                            className: "bikas.serialization.BefDo",
                            methodName: "validateSerialData"
                        }), b = !1)
                    }
                    for (f = 0; f < e.fields.length;) - 1 == a.indexOf(e.fields[f].field_name) && (w.trace("warning: field '" + e.fields[f].field_name + "' does not exist in class '" + e.full_class_name + "'", {
                            fileName: "BefDo.hx",
                            lineNumber: 124,
                            className: "bikas.serialization.BefDo",
                            methodName: "validateSerialData"
                        }), w.trace("auto-removing serial_field: '" + e.fields[f].field_name + "' from serial_class '" + e.full_class_name + "'", {
                            fileName: "BefDo.hx",
                            lineNumber: 125,
                            className: "bikas.serialization.BefDo",
                            methodName: "validateSerialData"
                        }),
                        e.fields.splice(f, 1), --f, b = !1), ++f;
                    for (f = 0; f < e.ignore_fields.length;) - 1 == a.indexOf(e.ignore_fields[f]) && w.trace("warning: ignore_field '" + e.ignore_fields[f] + "' does not exist in class '" + e.full_class_name + "'", {
                        fileName: "BefDo.hx",
                        lineNumber: 135,
                        className: "bikas.serialization.BefDo",
                        methodName: "validateSerialData"
                    }), ++f
                }
                return b
            };
            O.createTypeTableForSerialData = function(a) {
                var b = O.createByteCursorForSerialization(32768);
                b.pos = 0;
                O.setUInt16(b, a.classes.length);
                for (var c = 0, d = a.classes; c < d.length;) {
                    var e =
                        d[c];
                    ++c;
                    O.setString(b, e.full_class_name);
                    O.setUInt16(b, e.fields.length);
                    var f = 0;
                    for (e = e.fields; f < e.length;) {
                        var h = e[f];
                        ++f;
                        O.setString(b, h.field_name);
                        O.setByte(b, h.value_type_flags.length);
                        var k = 0;
                        for (h = h.value_type_flags; k < h.length;) {
                            var m = h[k];
                            ++k;
                            O.setByte(b, m)
                        }
                    }
                }
                c = b.pos;
                d = ub.alloc(c);
                d.blit(0, b.bytes, 0, c);
                a.type_table = d
            };
            O.createByteCursorForSerialization = function(a) {
                null == a && (a = 1048576);
                var b = new aq;
                b.alloc_size = a;
                b.bytes = ub.alloc(a);
                b.pos = 0;
                return b
            };
            O.allocateMoreIfNeeded = function(a, b) {
                if (a.pos +
                    b >= a.bytes.length) {
                    var c = a.bytes.length + a.alloc_size;
                    c < a.pos + b && (c = a.pos + b);
                    b = ub.alloc(c);
                    b.blit(0, a.bytes, 0, a.bytes.length);
                    a.bytes = b
                }
            };
            O.serialize = function(a, b, c, d) {
                null == d && (d = 1048576);
                if (null == a.type_table) return w.trace("warning: type_table is not created for this serial_data", {
                    fileName: "BefDo.hx",
                    lineNumber: 202,
                    className: "bikas.serialization.BefDo",
                    methodName: "serialize"
                }), null;
                d = O.createByteCursorForSerialization(d);
                d.pos = 0;
                O.setString(d, "BEF_v3");
                O.setInt32(d, 0);
                O.allocateMoreIfNeeded(d, a.type_table.length);
                d.bytes.blit(d.pos, a.type_table, 0, a.type_table.length);
                d.pos += a.type_table.length;
                a.enum_cache = [];
                O.setValue(d, a, b, c);
                a = d.pos;
                d.pos = 0;
                "BEF_v3" != O.getString(d) && w.trace("warning: something went wrong in serialization", {
                    fileName: "BefDo.hx",
                    lineNumber: 224,
                    className: "bikas.serialization.BefDo",
                    methodName: "serialize"
                });
                O.setInt32(d, a);
                b = ub.alloc(a);
                b.blit(0, d.bytes, 0, a);
                return b
            };
            O.unserialize = function(a, b) {
                var c = new aq;
                c.bytes = b;
                c.pos = 0;
                var d = O.getString(c);
                if ("BEF_v3" != d) return w.trace("error: wrong format name '" +
                    d + "'", {
                        fileName: "BefDo.hx",
                        lineNumber: 241,
                        className: "bikas.serialization.BefDo",
                        methodName: "unserialize"
                    }), null;
                if (O.getInt32(c) != b.length) return w.trace("error: invalid byte array", {
                    fileName: "BefDo.hx",
                    lineNumber: 247,
                    className: "bikas.serialization.BefDo",
                    methodName: "unserialize"
                }), null;
                d = O.getUInt16(c);
                b = new at;
                b.classes = [];
                b.enum_cache = [];
                for (var e, f = 0; f < d;) {
                    f++;
                    e = new bt;
                    e.fields = [];
                    e.serial_class = null;
                    e.full_class_name = O.getString(c);
                    for (var h = O.getUInt16(c), k = 0, m = a.classes; k < m.length;) {
                        var r =
                            m[k];
                        ++k;
                        if (r.full_class_name == e.full_class_name) {
                            e.serial_class = r;
                            break
                        }
                    }
                    null == e.serial_class && w.trace("warning: couldn't find match in serial_data for '" + e.full_class_name + "'", {
                        fileName: "BefDo.hx",
                        lineNumber: 269,
                        className: "bikas.serialization.BefDo",
                        methodName: "unserialize"
                    });
                    for (k = 0; k < h;) {
                        k++;
                        m = new ct;
                        m.field_name = O.getString(c);
                        m.value_type_flags = [];
                        r = 0;
                        for (var I = O.getByte(c); r < I;) r++, m.value_type_flags.push(O.getByte(c));
                        m.serial_field = null;
                        if (null != e.serial_class) {
                            r = 0;
                            for (I = e.serial_class.fields; r <
                                I.length;) {
                                var g = I[r];
                                ++r;
                                g.field_name == m.field_name && (m.serial_field = g)
                            }
                            if (null == m.serial_field) w.trace("warning: couldn't find serial_field for '" + m.field_name + "' in '" + e.full_class_name + "'", {
                                fileName: "BefDo.hx",
                                lineNumber: 287,
                                className: "bikas.serialization.BefDo",
                                methodName: "unserialize"
                            });
                            else if (m.value_type_flags.length != m.serial_field.value_type_flags.length) w.trace("warning: field value type flag length mismatch of '" + m.field_name + "' in '" + e.full_class_name + "'", {
                                fileName: "BefDo.hx",
                                lineNumber: 290,
                                className: "bikas.serialization.BefDo",
                                methodName: "unserialize"
                            }), m.serial_field = null;
                            else
                                for (r = 0, I = m.value_type_flags.length; r < I;)
                                    if (g = r++, m.value_type_flags[g] != m.serial_field.value_type_flags[g] && (12 != m.value_type_flags[g] || 128 != m.serial_field.value_type_flags[g] && 129 != m.serial_field.value_type_flags[g])) {
                                        w.trace("warning: field value flag mismatch of '" + m.field_name + "' in '" + e.full_class_name + "'", {
                                            fileName: "BefDo.hx",
                                            lineNumber: 302,
                                            className: "bikas.serialization.BefDo",
                                            methodName: "unserialize"
                                        });
                                        m.serial_field = null;
                                        break
                                    }
                        }
                        e.fields.push(m)
                    }
                    b.classes.push(e)
                }
                a = O.getByte(c);
                return O.getValue(c, b, a, null)
            };
            O.setByte = function(a, b) {
                O.allocateMoreIfNeeded(a, 1);
                a.bytes.set(a.pos, b);
                a.pos += 1
            };
            O.getByte = function(a) {
                var b = a.bytes.get(a.pos);
                a.pos += 1;
                return b
            };
            O.setUInt16 = function(a, b) {
                O.allocateMoreIfNeeded(a, 2);
                a.bytes.setUInt16(a.pos, b);
                a.pos += 2
            };
            O.getUInt16 = function(a) {
                var b = a.bytes.getUInt16(a.pos);
                a.pos += 2;
                return b
            };
            O.setInt32 = function(a, b) {
                O.allocateMoreIfNeeded(a, 4);
                var c = a.bytes,
                    d = a.pos;
                c.set(d,
                    b);
                c.set(d + 1, b >> 8);
                c.set(d + 2, b >> 16);
                c.set(d + 3, b >>> 24);
                a.pos += 4
            };
            O.getInt32 = function(a) {
                var b = a.bytes,
                    c = a.pos;
                b = b.get(c) | b.get(c + 1) << 8 | b.get(c + 2) << 16 | b.get(c + 3) << 24;
                a.pos += 4;
                return b
            };
            O.setDouble = function(a, b) {
                O.allocateMoreIfNeeded(a, 8);
                a.bytes.setDouble(a.pos, b);
                a.pos += 8
            };
            O.getDouble = function(a) {
                var b = a.bytes.getDouble(a.pos);
                a.pos += 8;
                return b
            };
            O.setString = function(a, b) {
                b = ub.ofString(b);
                O.setUInt16(a, b.length);
                O.allocateMoreIfNeeded(a, b.length);
                a.bytes.blit(a.pos, b, 0, b.length);
                a.pos += b.length
            };
            O.getString =
                function(a) {
                    var b = O.getUInt16(a),
                        c = a.bytes.getString(a.pos, b);
                    a.pos += b;
                    return c
                };
            O.setEnumValue = function(a, b, c) {
                var d = Q.getEnum(c),
                    e = 0,
                    f = !1,
                    h;
                var k = 0;
                for (h = b.enum_cache; k < h.length;) {
                    var m = h[k];
                    ++k;
                    if (m.type == d) {
                        f = !0;
                        h = !1;
                        for (var r = k = 0, I = m.values; r < I.length;) {
                            var g = I[r];
                            ++r;
                            if (g.value == c) {
                                h = !0;
                                break
                            }++k
                        }
                        h ? (O.setByte(a, 8), O.setUInt16(a, e), O.setUInt16(a, k)) : (k = new fl, k.value = c, k.name = Q.enumConstructor(c), m.values.push(k), O.setByte(a, 9), O.setUInt16(a, e), O.setString(a, k.name));
                        break
                    }++e
                }
                null == c ? (w.trace("warning: enum value is null", {
                    fileName: "BefDo.hx",
                    lineNumber: 438,
                    className: "bikas.serialization.BefDo",
                    methodName: "setEnumValue"
                }), O.setByte(a, 6)) : f || (e = new bq, e.type = d, e.name = Q.getEnumName(d), e.values = [], d = new fl, d.value = c, d.name = Q.enumConstructor(c), e.values.push(d), O.setByte(a, 10), O.setString(a, e.name), O.setString(a, d.name), b.enum_cache.push(e))
            };
            O.getEnum = function(a, b, c) {
                switch (b) {
                    case 8:
                        return b = O.getUInt16(a), a = O.getUInt16(a), c = c.enum_cache[b], a = c.values[a], null != c.type ? null != a.value ? a.value : null : null;
                    case 9:
                        b = O.getUInt16(a);
                        a = O.getString(a);
                        c = c.enum_cache[b];
                        b = c.type;
                        var d = new fl;
                        c.values.push(d);
                        d.name = a;
                        return null != b ? (d.value = Q.createEnum(b, a), d.value) : null;
                    case 10:
                        b = O.getString(a);
                        a = O.getString(a);
                        d = Q.resolveEnum(b);
                        var e = new bq;
                        e.name = b;
                        e.type = d;
                        e.values = [];
                        b = new fl;
                        b.name = a;
                        e.values.push(b);
                        c.enum_cache.push(e);
                        return null != d ? (b.value = Q.createEnum(d, a), b.value) : null;
                    default:
                        return w.trace("error: unrecognized enum flag " + b, {
                                fileName: "BefDo.hx",
                                lineNumber: 510,
                                className: "bikas.serialization.BefDo",
                                methodName: "getEnum"
                            }),
                            null
                }
            };
            O.setPoint = function(a, b) {
                O.setDouble(a, b.x);
                O.setDouble(a, b.y)
            };
            O.getPoint = function(a, b) {
                var c = O.getDouble(a);
                a = O.getDouble(a);
                if (null == b) return new W(c, a);
                b = aa.__cast(b, W);
                b.x = c;
                b.y = a;
                return b
            };
            O.setTransform = function(a, b) {
                O.setDouble(a, b.scale_x);
                O.setDouble(a, b.scale_y);
                O.setDouble(a, b.rotation)
            };
            O.getTransform = function(a, b) {
                var c = O.getDouble(a),
                    d = O.getDouble(a);
                a = O.getDouble(a);
                if (null == b) return b = new $d, b.scale_x = c, b.scale_y = d, b.rotation = a, b;
                b = aa.__cast(b, $d);
                b.scale_x = c;
                b.scale_y = d;
                b.rotation =
                    a;
                return b
            };
            O.setValue = function(a, b, c, d) {
                switch (d[0]) {
                    case 0:
                        1 == aa.__cast(c, Pp) ? O.setByte(a, 1) : O.setByte(a, 2);
                        break;
                    case 3:
                        O.setByte(a, 3);
                        O.setInt32(a, aa.__cast(c, Lv));
                        break;
                    case 4:
                        O.setByte(a, 4);
                        O.setDouble(a, aa.__cast(c, Jw));
                        break;
                    case 5:
                        O.setByte(a, 5);
                        O.setString(a, aa.__cast(c, String));
                        break;
                    case 7:
                        O.setEnumValue(a, b, c);
                        break;
                    case 11:
                        null == c ? O.setByte(a, 6) : (O.setByte(a, 11), d = d.slice(), d.shift(), O.setArray(a, b, d, aa.__cast(c, Array)));
                        break;
                    case 12:
                        if (null == c) O.setByte(a, 6);
                        else {
                            d = null;
                            for (var e =
                                    0, f = 0, h = b.classes; f < h.length;) {
                                var k = h[f];
                                ++f;
                                if (E.is(c, k.serial_type)) {
                                    d = k;
                                    break
                                }++e
                            }
                            null == d ? (w.trace("warning: couldn't find SerialClass for '" + E.string(c) + "'", {
                                fileName: "BefDo.hx",
                                lineNumber: 600,
                                className: "bikas.serialization.BefDo",
                                methodName: "setValue"
                            }), O.setByte(a, 6)) : (O.setByte(a, 12), O.setInstance(a, b, d, e, c))
                        }
                        break;
                    case 128:
                        null == c ? O.setByte(a, 6) : (O.setByte(a, 128), O.setPoint(a, aa.__cast(c, W)));
                        break;
                    case 129:
                        null == c ? O.setByte(a, 6) : (O.setByte(a, 129), O.setTransform(a, aa.__cast(c, $d)));
                        break;
                    default:
                        w.trace("error: unrecognized flag '" + d[0] + "'", {
                            fileName: "BefDo.hx",
                            lineNumber: 622,
                            className: "bikas.serialization.BefDo",
                            methodName: "setValue"
                        })
                }
            };
            O.getValue = function(a, b, c, d) {
                switch (c) {
                    case 1:
                        return !0;
                    case 2:
                        return !1;
                    case 3:
                        return O.getInt32(a);
                    case 4:
                        return O.getDouble(a);
                    case 5:
                        return O.getString(a);
                    case 6:
                        return null;
                    case 8:
                    case 9:
                    case 10:
                        return O.getEnum(a, c, b);
                    case 11:
                        return O.getArray(a, b, d);
                    case 12:
                        return O.getInstance(a, b, d);
                    case 128:
                        return O.getPoint(a, d);
                    case 129:
                        return O.getTransform(a,
                            d);
                    default:
                        return w.trace("error: unrecognized flag", {
                            fileName: "BefDo.hx",
                            lineNumber: 651,
                            className: "bikas.serialization.BefDo",
                            methodName: "getValue"
                        }), null
                }
            };
            O.setArray = function(a, b, c, d) {
                var e = a.pos;
                O.setInt32(a, 0);
                O.setByte(a, c[0]);
                O.setInt32(a, d.length);
                for (var f = 0; f < d.length;) {
                    var h = d[f];
                    ++f;
                    O.setValue(a, b, h, c)
                }
                b = a.pos;
                a.pos = e;
                O.setInt32(a, b - a.pos - 4);
                a.pos = b
            };
            O.getArray = function(a, b, c) {
                O.getInt32(a);
                O.getByte(a);
                var d = O.getInt32(a);
                if (null == c) c = [];
                else
                    for (; c.length > d;) c.pop();
                for (var e, f = 0; f <
                    d;) {
                    var h = f++;
                    e = O.getByte(a);
                    h >= c.length ? (e = O.getValue(a, b, e, null), c.push(e)) : (e = O.getValue(a, b, e, c[h]), c[h] = e)
                }
                return c
            };
            O.setInstance = function(a, b, c, d, e) {
                var f = c.fields;
                c = a.pos;
                O.setInt32(a, 0);
                O.setUInt16(a, d);
                for (var h = 0; h < f.length;) {
                    var k = f[h];
                    ++h;
                    d = T.field(e, k.field_name);
                    O.setValue(a, b, d, k.value_type_flags)
                }
                b = a.pos;
                a.pos = c;
                O.setInt32(a, b - a.pos - 4);
                a.pos = b
            };
            O.getInstance = function(a, b, c) {
                var d = O.getInt32(a),
                    e = a.pos,
                    f = O.getUInt16(a),
                    h = b.classes[f];
                f = h.serial_class;
                if (null == f) return w.trace("warning: skipping '" +
                    h.full_class_name + "', because serial_class does not exist anymore", {
                        fileName: "BefDo.hx",
                        lineNumber: 733,
                        className: "bikas.serialization.BefDo",
                        methodName: "getInstance"
                    }), a.pos = e + d, null;
                null == c && (c = null != f.init_func ? f.init_func() : Q.createInstance(f.unserial_type, []));
                d = 0;
                for (h = h.fields; d < h.length;) {
                    var k = h[d];
                    ++d;
                    var m = O.getByte(a);
                    e = k.field_name;
                    if (null == k.serial_field) w.trace("warning: skipping '" + e + "' in '" + f.full_class_name + "', because serial_field does not exist or types don't match", {
                        fileName: "BefDo.hx",
                        lineNumber: 752,
                        className: "bikas.serialization.BefDo",
                        methodName: "getInstance"
                    }), O.getValue(a, b, m, null);
                    else {
                        switch (m) {
                            case 6:
                                m = null;
                                break;
                            case 11:
                            case 12:
                            case 128:
                            case 129:
                                m = O.getValue(a, b, m, T.field(c, e));
                                break;
                            default:
                                m = O.getValue(a, b, m, null)
                        }
                        T.setField(c, e, m)
                    }
                }
                return c
            };
            var $p = function() {};
            g["bikas.serialization.SerialField"] = $p;
            $p.__name__ = ["bikas", "serialization", "SerialField"];
            $p.prototype = {
                field_name: null,
                value_type_flags: null,
                __class__: $p
            };
            var Zp = function() {
                this.init_func = null
            };
            g["bikas.serialization.SerialClass"] =
                Zp;
            Zp.__name__ = ["bikas", "serialization", "SerialClass"];
            Zp.prototype = {
                full_class_name: null,
                serial_type: null,
                unserial_type: null,
                fields: null,
                ignore_fields: null,
                init_func: null,
                __class__: Zp
            };
            var J = function() {};
            g["bikas.editor.EditorSerializer"] = J;
            J.__name__ = ["bikas", "editor", "EditorSerializer"];
            J.createEditorSerialData = function() {
                var a = O.createSerialData();
                J.pushGlobalClasses(a);
                var b = J.pushClass(a, Tj, F.createDefaultEntity);
                J.pushBool(b, "deletable");
                J.pushBool(b, "draggable");
                J.pushBool(b, "groupable");
                J.pushBool(b, "in_current_container");
                J.pushIgnore(b, "overed");
                J.pushIgnore(b, "overed_drawn");
                J.pushBool(b, "selectable");
                J.pushIgnore(b, "selected");
                J.pushIgnore(b, "selected_drawn");
                J.pushEnum(b, "selected_draw_type");
                J.pushBool(b, "transform_editable");
                J.pushString(b, "guid");
                J.pushString(b, "name");
                J.pushPoint(b, "position");
                J.pushTransform(b, "transform");
                J.pushInstance(b, "display");
                J.pushIgnore(b, "internal_bounds");
                J.pushIgnore(b, "visible_bounds");
                J.pushIgnore(b, "parent");
                J.pushIgnore(b, "container_link");
                J.pushIgnore(b, "selected_shape");
                J.pushIgnore(b, "dragging");
                J.pushIgnore(b, "dragging_mouse");
                J.pushIgnore(b, "dragging_entity_position");
                J.pushInstance(b, "group");
                J.pushInstance(b, "bitmap_images");
                J.pushInstance(b, "circle");
                J.pushInstance(b, "polygon");
                J.pushInstance(b, "prefab");
                J.pushInstance(b, "prefab_link");
                J.pushInstance(b, "additional");
                J.pushIgnore(b, "right_click_event");
                J.pushIgnore(b, "right_click_callback");
                b = J.pushClass(a, On);
                J.pushIgnore(b, "container");
                J.pushIgnore(b, "contents");
                J.pushInt(b,
                    "depth_cache");
                b = J.pushClass(a, Pn, F.createDefaultGroupComponent);
                J.pushArray(b, "entities", [12]);
                J.pushBool(b, "ungroupable");
                J.pushIgnore(b, "edit");
                b = J.pushClass(a, Xk, F.createDefaultBitmapImageContainerComponent);
                J.pushArray(b, "images", [12]);
                J.pushIgnore(b, "container");
                b = J.pushClass(a, Je, F.createDefaultBitmapImageComponent);
                J.pushString(b, "source_name");
                J.pushIgnore(b, "bitmap_data_source");
                J.pushIgnore(b, "bitmap");
                J.pushFloat(b, "offset_x");
                J.pushFloat(b, "offset_y");
                J.pushFloat(b, "rotation");
                J.pushInstance(b,
                    "bitmap_animation");
                b = J.pushClass(a, Kv);
                J.pushIgnore(b, "source");
                J.pushInt(b, "frame");
                b = J.pushClass(a, Zk, F.createDefaultCircleComponent);
                J.pushEnum(b, "body_type");
                J.pushBool(b, "editable");
                J.pushBool(b, "fill_draw");
                J.pushEnum(b, "fill_draw_type");
                J.pushFloat(b, "radius");
                b = J.pushClass(a, jj, F.createDefaultPolygonComponent);
                J.pushEnum(b, "body_type");
                J.pushArray(b, "points", [128]);
                J.pushArray(b, "convex_cache_points", [11, 128]);
                J.pushBool(b, "convex_cached");
                J.pushBool(b, "editable");
                J.pushEnum(b, "draw_type");
                J.pushInt(b, "color");
                J.pushFloat(b, "alpha");
                J.pushInstance(b, "texture");
                b = J.pushClass(a, Qn);
                J.pushIgnore(b, "bitmap_data_source");
                J.pushIgnore(b, "links");
                J.pushIgnore(b, "edit");
                b = J.pushClass(a, Ah);
                J.pushString(b, "guid");
                J.pushIgnore(b, "prefab_entity");
                J.pushIgnore(b, "library_group");
                J.pushIgnore(b, "bitmap");
                b = J.pushClass(a, $k);
                J.pushString(b, "fill_source_name");
                J.pushString(b, "line_source_name");
                J.pushIgnore(b, "fill_source_name_cache");
                J.pushIgnore(b, "line_source_name_cache");
                J.pushIgnore(b, "bitmaps_updated");
                J.pushBool(b, "use_sutherland_hodgman");
                J.pushIgnore(b, "data");
                b = J.pushClass(a, Yk);
                J.pushInstance(b, "line_draw");
                J.pushInstance(b, "point_draw");
                J.pushInstance(b, "string_draw");
                b = J.pushClass(a, Tp, F.createDefaultLineDraw);
                J.pushInstance(b, "start");
                J.pushInstance(b, "end");
                J.pushFloat(b, "thickness");
                J.pushInt(b, "color");
                J.pushIgnore(b, "shape");
                b = J.pushClass(a, Up, F.createDefaultPointDraw);
                J.pushEnum(b, "type");
                J.pushEnum(b, "cross_type");
                J.pushFloat(b, "size");
                J.pushIgnore(b, "shape");
                b = J.pushClass(a, Vp, F.createDefaultStringDraw);
                J.pushString(b, "text");
                J.pushEnum(b, "type");
                J.pushFloat(b, "size");
                J.pushFloat(b, "offset_x");
                J.pushFloat(b, "offset_y");
                J.pushFloat(b, "padding");
                J.pushIgnore(b, "bitmap");
                J.pushBool(b, "use_name");
                b = J.pushClass(a, Nn);
                J.pushString(b, "name");
                J.pushFloat(b, "created_time_stamp");
                J.pushFloat(b, "save_time_stamp");
                b = J.pushClass(a, fj);
                J.pushInstance(b, "save");
                J.pushInstance(b, "group");
                b = J.pushClass(a, gj);
                J.pushInstance(b, "save");
                J.pushInstance(b, "group");
                J.pushInstance(b, "library_data");
                b = J.pushClass(a, Wp);
                J.pushInstance(b,
                    "stage_settings");
                J.pushArray(b, "perlin_terrain_presets", [12]);
                J.pushArray(b, "default_bitmap_offsets", [12]);
                J.pushArray(b, "object_drop_menus", [12]);
                J.pushArray(b, "spectrums", [12]);
                J.pushArray(b, "decorations", [12]);
                b = J.pushClass(a, zg);
                J.pushString(b, "name");
                J.pushInt(b, "count");
                J.pushFloat(b, "step_size");
                J.pushFloat(b, "decay");
                J.pushInt(b, "octaves");
                J.pushFloat(b, "seed");
                J.pushFloat(b, "width_cut");
                J.pushFloat(b, "height");
                J.pushFloat(b, "rotation");
                J.pushFloat(b, "min_point_distance");
                J.pushFloat(b, "max_point_distance");
                b = J.pushClass(a, al);
                J.pushString(b, "name");
                J.pushFloat(b, "offset_x");
                J.pushFloat(b, "offset_y");
                b = J.pushClass(a, Rn);
                J.pushString(b, "name");
                J.pushString(b, "bitmap_names");
                J.pushString(b, "prefab_names");
                J.pushFloat(b, "window_width");
                J.pushFloat(b, "max_bitmap_height");
                J.pushBool(b, "place_on_top");
                J.pushBool(b, "transform_editable");
                J.pushBool(b, "display_as_bitmaps");
                b = J.pushClass(a, Sn);
                J.pushString(b, "name");
                J.pushArray(b, "spectrum_names", [5]);
                J.pushArray(b, "explored_archetypes", [12]);
                b = J.pushClass(a,
                    Xp);
                J.pushArray(b, "spectrum_names", [5]);
                b = J.pushClass(a, Tn);
                J.pushString(b, "name");
                J.pushFloat(b, "seed");
                J.pushFloat(b, "max_distance");
                J.pushFloat(b, "max_placement_count");
                J.pushArray(b, "decoration_types", [12]);
                J.pushArray(b, "relationships", [12]);
                b = J.pushClass(a, bl);
                J.pushString(b, "name");
                J.pushBool(b, "activated");
                J.pushArray(b, "asset_names", [5]);
                J.pushFloat(b, "min_distance");
                J.pushFloat(b, "max_distance");
                J.pushFloat(b, "min_scale");
                J.pushFloat(b, "max_scale");
                J.pushFloat(b, "min_rotation");
                J.pushFloat(b,
                    "max_rotation");
                J.pushFloat(b, "min_distance_for_same_types");
                J.pushFloat(b, "min_distance_for_different_types");
                J.pushFloat(b, "min_distance_to_remove_same_sprite");
                J.pushFloat(b, "adapt_rotation_to_polygon_coeff");
                J.pushIgnore(b, "dec_sprites");
                b = J.pushClass(a, cl);
                J.pushString(b, "name");
                J.pushBool(b, "activated");
                J.pushArray(b, "sources_names", [5]);
                J.pushString(b, "target_name");
                J.pushFloat(b, "attract_distance");
                J.pushFloat(b, "attract_placement_distance");
                J.pushFloat(b, "attract_chance_coeff");
                J.pushIgnore(b,
                    "sources");
                J.pushIgnore(b, "target");
                b = J.pushClass(a, Yp);
                J.pushEnum(b, "mouse_snap_type");
                J.pushInt(b, "mouse_snap_size");
                J.pushInt(b, "snap_to_nearest_entity_distance");
                J.pushInt(b, "snap_to_nearest_polygon_point_distance");
                J.pushInt(b, "snap_to_nearest_polygon_line_distance");
                J.pushInt(b, "snap_to_straight_line_distance");
                J.pushInt(b, "snap_to_nearest_polygon_grid_distance");
                J.pushInt(b, "snap_to_nearest_polygon_grid_max_distance");
                O.validateSerialData(a);
                O.createTypeTableForSerialData(a);
                return a
            };
            J.pushGlobalClasses =
                function(a) {
                    var b = J.pushClass(a, W);
                    J.pushFloat(b, "x");
                    J.pushFloat(b, "y");
                    J.pushIgnore(b, "toString");
                    b = J.pushClass(a, $d);
                    J.pushFloat(b, "scale_x");
                    J.pushFloat(b, "scale_y");
                    J.pushFloat(b, "rotation");
                    J.pushIgnore(b, "toString");
                    b = J.pushClass(a, Ie);
                    J.pushFloat(b, "x");
                    J.pushFloat(b, "y");
                    J.pushFloat(b, "width");
                    J.pushFloat(b, "height");
                    J.pushIgnore(b, "toString")
                };
            J.serializeStage = function(a, b) {
                var c = J.tempRemovePrefabEdits(b.current_group);
                F.sortEntitiesByDepth(b.stage_group.group.entities);
                na.refreshDepthsInGroup(b.stage_group);
                var d = new fj;
                b.stage_save.save_time_stamp = (new Date).getTime();
                d.save = b.stage_save;
                d.group = b.stage_group;
                a = O.serialize(a, d, [12]);
                d = null;
                null != a && (d = cq.run(a, 9));
                J.readdTempRemovedPrefabEdits(c);
                F.sortEntitiesByDepth(b.stage_group.group.entities);
                na.refreshDepthsInGroup(b.current_group);
                na.refreshDepthsInGroup(b.stage_group);
                return d
            };
            J.serializeLibrary = function(a, b) {
                var c = J.tempAddPrefabEdits(b.current_group, b.library_group),
                    d = J.tempRemoveTempAddedPrefabEdits(c);
                if (null != b.current_group.prefab)
                    for (var e =
                            0, f = 0, h = b.current_group.group.entities; f < h.length;) {
                        var k = h[f];
                        ++f;
                        k.display.depth_cache = e;
                        ++e
                    }
                e = new gj;
                b.library_save.save_time_stamp = (new Date).getTime();
                e.save = b.library_save;
                e.library_data = b.library_data;
                e.library_data.stage_settings = b.stage_settings;
                e.group = b.library_group;
                a = O.serialize(a, e, [12]);
                e = null;
                null != a && (e = cq.run(a, 9));
                J.readdTempRemovedPrefabEdits(d);
                J.removeTempAddedPrefabEdits(b.library_group, c);
                na.refreshDepthsInGroup(b.stage_group);
                na.refreshDepthsInGroup(b.current_group);
                return e
            };
            J.unserializeStage = function(a, b) {
                b = gl.run(b);
                a = O.unserialize(a, b);
                if (!E.is(a, fj)) return w.trace("error: wrong type, expected: " + E.string(fj) + ", got: " + E.string(a), {
                    fileName: "EditorSerializer.hx",
                    lineNumber: 418,
                    className: "bikas.editor.EditorSerializer",
                    methodName: "unserializeStage"
                }), null;
                a = aa.__cast(a, fj);
                return null == a.group ? (w.trace("error: no stage group", {
                    fileName: "EditorSerializer.hx",
                    lineNumber: 423,
                    className: "bikas.editor.EditorSerializer",
                    methodName: "unserializeStage"
                }), null) : a
            };
            J.unserializeLibrary =
                function(a, b) {
                    b = gl.run(b);
                    a = O.unserialize(a, b);
                    if (!E.is(a, gj)) return w.trace("error: wrong type, expected: " + E.string(gj) + ", got: " + E.string(a), {
                        fileName: "EditorSerializer.hx",
                        lineNumber: 433,
                        className: "bikas.editor.EditorSerializer",
                        methodName: "unserializeLibrary"
                    }), null;
                    a = aa.__cast(a, gj);
                    return null == a.group ? (w.trace("error: no stage group", {
                        fileName: "EditorSerializer.hx",
                        lineNumber: 438,
                        className: "bikas.editor.EditorSerializer",
                        methodName: "unserializeLibrary"
                    }), null) : a
                };
            J.tempRemovePrefabEdits = function(a) {
                for (var b = []; null != a;) {
                    if (null != a.prefab) {
                        var c = new Sp;
                        c.index = a.parent.group.entities.indexOf(a);
                        c.entity = a;
                        b.push(c);
                        a.parent.group.entities.splice(c.index, 1)
                    }
                    a = a.parent
                }
                return b
            };
            J.readdTempRemovedPrefabEdits = function(a) {
                for (var b = 0; b < a.length;) {
                    var c = a[b];
                    ++b;
                    c.entity.parent.group.entities.splice(c.index, 0, c.entity)
                }
            };
            J.tempAddPrefabEdits = function(a, b) {
                for (var c = []; null != a;) {
                    if (null != a.prefab) {
                        var d = new Fs;
                        d.entity = a;
                        d.position_before = a.position;
                        d.transform_before = a.transform;
                        d.depth_before = a.display.depth_cache;
                        a.position = a.prefab.edit.saved_position;
                        a.transform = a.prefab.edit.saved_transform;
                        a.display.depth_cache = -1;
                        c.push(d);
                        b.group.entities.push(a)
                    }
                    a = a.parent
                }
                return c
            };
            J.tempRemoveTempAddedPrefabEdits = function(a) {
                for (var b = [], c = null, d = c = function(a, b) {
                        if (null != b.group)
                            for (var d = 0, e = b.group.entities; d < e.length;) {
                                var f = e[d];
                                ++d;
                                if (c(a, f)) break
                            }
                        return null != b.prefab ? (d = new Sp, d.index = b.parent.group.entities.indexOf(b), d.entity = b, b.parent.group.entities.splice(d.index, 1), a.push(d), !0) : !1
                    }, e = 0; e < a.length;) {
                    var f =
                        a[e];
                    ++e;
                    if (null != f.entity.group) {
                        var h = 0;
                        for (f = f.entity.group.entities; h < f.length;) {
                            var k = f[h];
                            ++h;
                            if (d(b, k)) break
                        }
                    }
                }
                return b
            };
            J.removeTempAddedPrefabEdits = function(a, b) {
                for (var c = 0; c < b.length;) {
                    var d = b[c];
                    ++c;
                    d.entity.position = d.position_before;
                    d.entity.transform = d.transform_before;
                    d.entity.display.depth_cache = d.depth_before;
                    la.remove(a.group.entities, d.entity)
                }
            };
            var na = function() {};
            g["bikas.editor.Systems"] = na;
            na.__name__ = ["bikas", "editor", "Systems"];
            na.addEntity = function(a) {
                null != a.bitmap_images &&
                    Bh.add(a);
                null != a.circle && el.refresh(a);
                null != a.polygon && Lf.refresh(a);
                null != a.prefab_link && Wj.refresh(a);
                null != a.additional && (null != a.additional.line_draw && Xj.add(a), null != a.additional.string_draw && Wd.add(a), null != a.additional.point_draw && Yj.add(a));
                Zj.add(a);
                Ei.refresh(a);
                kj.refresh(a);
                yg.refresh(a);
                Zb.refresh(a);
                null != a.parent && null != a.parent.group.edit && (a.in_current_container = !0);
                dq.refresh(a)
            };
            na.removeEntity = function(a) {
                Zj.remove(a);
                $c.remove(a);
                Vj.remove(a);
                Zb.remove(a);
                kj.remove(a);
                null !=
                    a.bitmap_images && Bh.remove(a);
                null != a.circle && el.remove(a);
                null != a.polygon && Lf.remove(a);
                null != a.prefab_link && Wj.remove(a);
                null != a.additional && (null != a.additional.line_draw && Xj.remove(a), null != a.additional.string_draw && Wd.remove(a), null != a.additional.point_draw && Yj.remove(a));
                a.in_current_container = !1;
                dq.refresh(a)
            };
            na.addEntityIncludingChildren = function(a) {
                if (null != a.group)
                    for (var b = 0, c = a.group.entities; b < c.length;) {
                        var d = c[b];
                        ++b;
                        na.addEntityIncludingChildren(d)
                    }
                na.addEntity(a)
            };
            na.removeEntityIncludingChildren =
                function(a) {
                    na.removeEntity(a);
                    if (null != a.group) {
                        var b = 0;
                        for (a = a.group.entities; b < a.length;) {
                            var c = a[b];
                            ++b;
                            na.removeEntityIncludingChildren(c)
                        }
                    }
                };
            na.refreshEntityIncludingChildren = function(a) {
                if (null != a.group)
                    for (var b = 0, c = a.group.entities; b < c.length;) {
                        var d = c[b];
                        ++b;
                        na.refreshEntityIncludingChildren(d)
                    }
                null != a.bitmap_images && Bh.refresh(a);
                null != a.circle && el.refresh(a);
                null != a.polygon && Lf.refresh(a);
                null != a.prefab_link && Wj.refresh(a);
                null != a.additional && (null != a.additional.line_draw && Xj.refresh(a),
                    null != a.additional.string_draw && Wd.refresh(a), null != a.additional.point_draw && Yj.refresh(a));
                Zj.refresh(a);
                Ei.refresh(a);
                kj.refresh(a);
                yg.refresh(a);
                Zb.refresh(a);
                null != a.parent && (a.in_current_container = null != a.parent.group.edit ? !0 : !1);
                null != a.prefab && eq.refresh(a);
                dq.refresh(a)
            };
            na.refreshGroupBoundsIncludingParents = function(a) {
                for (; null != a;) {
                    var b = a;
                    Ei.refresh(b);
                    yg.refresh(b);
                    Zb.refresh(b);
                    a = a.parent
                }
            };
            na.refreshPosition = function(a) {
                Ei.refresh(a);
                yg.refresh(a)
            };
            na.refreshGroupLengthChanged = function(a) {
                na.refreshGroupBoundsIncludingParents(a);
                na.refreshDepthsInGroup(a)
            };
            na.refreshDepthsInGroup = function(a) {
                var b = 0;
                for (a = a.group.entities; b < a.length;) {
                    var c = a[b];
                    ++b;
                    Zj.refresh(c)
                }
            };
            na.refreshIfHasPrefabIncludingParents = function(a) {
                for (; null != a;)
                    if (null != a.prefab) {
                        na.refreshEntityIncludingChildren(a);
                        break
                    } else a = a.parent
            };
            na.refreshPrefabLinksIncludingChildren = function(a) {
                if (null != a.group)
                    for (var b = 0, c = a.group.entities; b < c.length;) {
                        var d = c[b];
                        ++b;
                        na.refreshPrefabLinksIncludingChildren(d)
                    }
                null != a.prefab_link && Wj.refresh(a)
            };
            na.removePrefabLinksIncludingChildren =
                function(a) {
                    if (null != a.group)
                        for (var b = 0, c = a.group.entities; b < c.length;) {
                            var d = c[b];
                            ++b;
                            na.removePrefabLinksIncludingChildren(d)
                        }
                    null != a.prefab_link && Wj.remove(a)
                };
            var Bh = function() {};
            g["bikas.editor.BitmapImagesSystem"] = Bh;
            Bh.__name__ = ["bikas", "editor", "BitmapImagesSystem"];
            Bh.add = function(a) {
                a.display.contents.addChild(a.bitmap_images.container);
                for (var b = 0, c = a.bitmap_images.images; b < c.length;) {
                    var d = c[b];
                    ++b;
                    a.bitmap_images.container.addChild(d.bitmap)
                }
                Bh.refresh(a)
            };
            Bh.remove = function(a) {
                a.display.contents.removeChild(a.bitmap_images.container);
                for (var b = 0, c = a.bitmap_images.images; b < c.length;) {
                    var d = c[b];
                    ++b;
                    null != d.bitmap.parent && a.bitmap_images.container.removeChild(d.bitmap)
                }
            };
            Bh.refresh = function(a) {
                var b = a.bitmap_images;
                null == a.bitmap_images.container.parent && a.display.contents.addChild(a.bitmap_images.container);
                b.images.length != b.container.get_numChildren() && b.container.removeChildren();
                for (var c = 0, d = b.images; c < d.length;) {
                    var e = d[c];
                    ++c;
                    a = e.bitmap_data_source;
                    e.bitmap.set_bitmapData(a.bitmap_data);
                    e.bitmap.set_x(-a.center_point.x +
                        e.offset_x);
                    e.bitmap.set_y(-a.center_point.y + e.offset_y);
                    e.bitmap.set_rotation(e.rotation);
                    null == e.bitmap.parent && b.container.addChild(e.bitmap);
                    e.bitmap.smoothing = !0
                }
            };
            var yg = function() {};
            g["bikas.editor.BoundsSystem"] = yg;
            yg.__name__ = ["bikas", "editor", "BoundsSystem"];
            yg.refresh = function(a) {
                var b = a.display,
                    c = b.container,
                    d = a.visible_bounds,
                    e = a.internal_bounds;
                a = a.container_link;
                0 == c.get_width() || 0 == c.get_height() ? (b = c.get_x(), c = c.get_y(), d.x = b, d.y = c, d.width = 0, d.height = 0, d = H.copyRectangle(d), e.x = d.x,
                    e.y = d.y, e.width = d.width, e.height = d.height) : (c = c.getBounds(a), d.x = c.x, d.y = c.y, d.width = c.width, d.height = c.height, d = b.contents.getBounds(b.container), e.x = d.x, e.y = d.y, e.width = d.width, e.height = d.height)
            };
            var el = function() {};
            g["bikas.editor.CircleFillDrawSystem"] = el;
            el.__name__ = ["bikas", "editor", "CircleFillDrawSystem"];
            el.remove = function(a) {
                a.display.contents.get_graphics().clear()
            };
            el.refresh = function(a) {
                var b = 1;
                switch (Q.enumIndex(a.circle.fill_draw_type)) {
                    case 0:
                        b = 1;
                        break;
                    case 1:
                        b = .5
                }
                a.display.contents.get_graphics().clear();
                Ea.drawCircle(a.display.contents.get_graphics(), a.circle.radius, 9546397, b, 1651777, 1, b)
            };
            var Zj = function() {};
            g["bikas.editor.DisplayContainerSystem"] = Zj;
            Zj.__name__ = ["bikas", "editor", "DisplayContainerSystem"];
            Zj.add = function(a) {
                var b = a.display;
                a = a.container_link;
                a.contains(b.container) || (-1 == b.depth_cache ? (b.depth_cache = a.get_numChildren(), a.addChild(b.container)) : b.depth_cache > a.get_numChildren() ? (w.trace("warning: something went wrong with depth_cache, are group entities sorted by depth?", {
                    fileName: "EditorSystems.hx",
                    lineNumber: 334,
                    className: "bikas.editor.DisplayContainerSystem",
                    methodName: "add"
                }), a.addChild(b.container)) : a.addChildAt(b.container, b.depth_cache))
            };
            Zj.remove = function(a) {
                var b = a.display;
                a = a.container_link;
                a.contains(b.container) && a.removeChild(b.container)
            };
            Zj.refresh = function(a) {
                var b = a.display;
                b.depth_cache = a.container_link.getChildIndex(b.container)
            };
            var Ei = function() {};
            g["bikas.editor.DisplayPositionSystem"] = Ei;
            Ei.__name__ = ["bikas", "editor", "DisplayPositionSystem"];
            Ei.refresh = function(a) {
                a.display.container.set_x(a.position.x);
                a.display.container.set_y(a.position.y)
            };
            var $c = function() {};
            g["bikas.editor.DragSystem"] = $c;
            $c.__name__ = ["bikas", "editor", "DragSystem"];
            $c.add = function(a, b) {
                null == a.dragging && (a.dragging = new W(0, 0), a.dragging.x = a.position.x - b.x, a.dragging.y = a.position.y - b.y, a.dragging_entity_position = new W(0, 0), a.dragging_entity_position.x = a.position.x, a.dragging_entity_position.y = a.position.y, a.dragging_mouse = new W(0, 0), a.dragging_mouse.x = b.x, a.dragging_mouse.y = b.y, null != a.parent && a.parent.group.edit.dragging_entities.push(a))
            };
            $c.remove = function(a) {
                null != a.dragging && (a.dragging = null, a.dragging_entity_position = null, a.dragging_mouse = null, null != a.parent && la.remove(a.parent.group.edit.dragging_entities, a))
            };
            $c.refresh = function(a, b, c) {
                null == c && (c = 1);
                null != a.dragging && (a.position.x = a.dragging_entity_position.x + (b.x - a.dragging_mouse.x) * c, a.position.y = a.dragging_entity_position.y + (b.y - a.dragging_mouse.y) * c);
                null != a.parent && (b = a.parent.group.edit.dragging_entities, -1 == b.indexOf(a) ? null != a.dragging && b.push(a) : null == a.dragging && la.remove(b,
                    a))
            };
            var Xj = function() {};
            g["bikas.editor.LineDrawSystem"] = Xj;
            Xj.__name__ = ["bikas", "editor", "LineDrawSystem"];
            Xj.add = function(a) {
                a.display.contents.addChild(a.additional.line_draw.shape);
                Xj.refresh(a)
            };
            Xj.remove = function(a) {
                a.display.contents.removeChild(a.additional.line_draw.shape)
            };
            Xj.refresh = function(a) {
                var b = a.additional.line_draw;
                a = b.shape.get_graphics();
                var c = b.start,
                    d = b.end,
                    e = b.thickness;
                b = b.color;
                a.clear();
                a.lineStyle(e, b, 1);
                a.moveTo(c.x, c.y);
                a.lineTo(d.x, d.y)
            };
            var Vj = function() {};
            g["bikas.editor.OveredSystem"] =
                Vj;
            Vj.__name__ = ["bikas", "editor", "OveredSystem"];
            Vj.add = function(a) {
                a.overed || (a.overed = !0);
                a.overed_drawn || (a.overed_drawn = !0, Ea.setBrightness(a.display.container, .1))
            };
            Vj.remove = function(a) {
                a.overed && (a.overed = !1);
                a.overed_drawn && (a.overed_drawn = !1, Ea.setBrightness(a.display.container, 0))
            };
            var Yj = function() {};
            g["bikas.editor.PointDrawSystem"] = Yj;
            Yj.__name__ = ["bikas", "editor", "PointDrawSystem"];
            Yj.add = function(a) {
                a.display.contents.addChild(a.additional.point_draw.shape);
                Yj.refresh(a)
            };
            Yj.remove =
                function(a) {
                    a.display.contents.removeChild(a.additional.point_draw.shape)
                };
            Yj.refresh = function(a) {
                a = a.additional.point_draw;
                var b = a.shape.get_graphics(),
                    c = a.size;
                b.clear();
                var d = .625 * c,
                    e = .7 * c,
                    f = 1651777;
                switch (Q.enumIndex(a.type)) {
                    case 0:
                        Ea.drawCircle(b, d, 9546397, 1, f, 1);
                        break;
                    case 1:
                        f = 15199710;
                        Ea.drawCircle(b, d, 1651777, 1, 1651777, 1);
                        break;
                    case 2:
                        Ea.drawCircle(b, d, 16054256, 1, f, 1);
                        break;
                    case 3:
                        Ea.drawRectangle(b, c, c, 9546397, 1, f, 1);
                        break;
                    case 4:
                        f = 15199710;
                        Ea.drawRectangle(b, c, c, 1651777, 1, 1651777, 1);
                        break;
                    case 5:
                        Ea.drawRectangle(b, c, c, 16054256, 1, f, 1)
                }
                switch (Q.enumIndex(a.cross_type)) {
                    case 1:
                        Ea.drawCross(b, e, f, 1)
                }
            };
            var Lf = function() {};
            g["bikas.editor.PolygonSystem"] = Lf;
            Lf.__name__ = ["bikas", "editor", "PolygonSystem"];
            Lf.remove = function(a) {
                a.display.contents.get_graphics().clear();
                Lf.removeTexture(a.polygon)
            };
            Lf.removeTexture = function(a) {
                null != a.texture && null != a.texture.data && (null != a.texture.data.fillShape.parent && a.texture.data.fillShape.parent.removeChild(a.texture.data.fillShape), null != a.texture.data.lineShape.parent &&
                    a.texture.data.lineShape.parent.removeChild(a.texture.data.lineShape), Ye.destroy(a.texture.data), a.texture.data = null)
            };
            Lf.refresh = function(a) {
                a.polygon.convex_cached = !1;
                var b = a.polygon;
                if (b.draw_type == Lg.DEFAULT) Lf.removeTexture(b), a.display.contents.get_graphics().clear(), Ea.drawPolygon(a.display.contents.get_graphics(), b.points, b.color, b.alpha, 1651777, 1, b.alpha);
                else if (b.draw_type == Lg.TEXTURE) {
                    a.display.contents.get_graphics().clear();
                    null == b.texture && (b.texture = new $k);
                    null == b.texture.data && (b.texture.data =
                        Ye.createPolygonTextureData(), a.display.contents.addChild(b.texture.data.fillShape), b.texture.bitmaps_updated = !1);
                    var c = b.texture;
                    c.fill_source_name != c.fill_source_name_cache && (c.fill_source_name_cache = c.fill_source_name, c.bitmaps_updated = !1);
                    c.line_source_name != c.line_source_name_cache && (c.line_source_name_cache = c.line_source_name, c.bitmaps_updated = !1);
                    "" != c.line_source_name ? null == c.data.lineShape.parent && a.display.contents.addChild(c.data.lineShape) : (null != c.data.lineShape.parent && c.data.lineShape.parent.removeChild(b.texture.data.lineShape),
                        null != c.data.lineBitmapData && Ye.setLineBitmapData(c.data, null));
                    Ye.setPoints(b.texture.data, b.points)
                }
            };
            var eq = function() {};
            g["bikas.editor.PrefabSystem"] = eq;
            eq.__name__ = ["bikas", "editor", "PrefabSystem"];
            eq.refresh = function(a) {
                var b = a.prefab;
                b.bitmap_data_source = V.createAndDrawSource(a.display.contents, !0, !1, 1, 1);
                a = 0;
                for (var c = b.links; a < c.length;) {
                    var d = c[a];
                    ++a;
                    null == d.prefab_link.bitmap ? d.prefab_link.bitmap = V.createBitmapUsingSource(b.bitmap_data_source) : (d.prefab_link.bitmap.set_bitmapData(b.bitmap_data_source.bitmap_data),
                        d.prefab_link.bitmap.set_x(-b.bitmap_data_source.center_point.x), d.prefab_link.bitmap.set_y(-b.bitmap_data_source.center_point.y), d.prefab_link.bitmap.smoothing = !0);
                    na.refreshEntityIncludingChildren(d)
                }
            };
            var Wj = function() {};
            g["bikas.editor.PrefabLinkSystem"] = Wj;
            Wj.__name__ = ["bikas", "editor", "PrefabLinkSystem"];
            Wj.refresh = function(a) {
                var b = a.prefab_link;
                if (null == b.library_group) w.trace("warning: library_group is null for " + a.name, {
                    fileName: "EditorSystems.hx",
                    lineNumber: 606,
                    className: "bikas.editor.PrefabLinkSystem",
                    methodName: "refresh"
                }), null != b.bitmap ? b.bitmap.get_bitmapData() != Me.placeholder.bitmap_data && (a.display.contents.removeChild(b.bitmap), b.bitmap = V.createBitmapUsingSource(Me.placeholder), a.display.contents.addChild(b.bitmap)) : (b.bitmap = V.createBitmapUsingSource(Me.placeholder), a.display.contents.addChild(b.bitmap));
                else if (null == b.prefab_entity || null == b.prefab_entity.container_link) {
                    null != b.bitmap && a.display.contents.removeChild(b.bitmap);
                    b.prefab_entity = null;
                    for (var c = 0, d = b.library_group.group.entities; c <
                        d.length;) {
                        var e = d[c];
                        ++c;
                        if (e.guid == b.guid) {
                            b.prefab_entity = e;
                            break
                        }
                    }
                    null == b.prefab_entity ? (w.trace("warning: couldn't find prefab for " + a.name, {
                        fileName: "EditorSystems.hx",
                        lineNumber: 629,
                        className: "bikas.editor.PrefabLinkSystem",
                        methodName: "refresh"
                    }), b.bitmap = V.createBitmapUsingSource(Me.placeholder)) : (null == b.prefab_entity.prefab.bitmap_data_source ? (w.trace("warning: prefab doesn't have bitmap_data_source " + b.prefab_entity.name, {
                        fileName: "EditorSystems.hx",
                        lineNumber: 634,
                        className: "bikas.editor.PrefabLinkSystem",
                        methodName: "refresh"
                    }), b.bitmap = V.createBitmapUsingSource(Me.placeholder)) : b.bitmap = V.createBitmapUsingSource(b.prefab_entity.prefab.bitmap_data_source), -1 == b.prefab_entity.prefab.links.indexOf(a) && b.prefab_entity.prefab.links.push(a));
                    a.display.contents.addChild(b.bitmap)
                } else null == b.bitmap && (null == b.prefab_entity.prefab.bitmap_data_source ? (w.trace("warning: prefab doesn't have bitmap_data_source  " + b.prefab_entity.name, {
                    fileName: "EditorSystems.hx",
                    lineNumber: 647,
                    className: "bikas.editor.PrefabLinkSystem",
                    methodName: "refresh"
                }), b.bitmap = V.createBitmapUsingSource(Me.placeholder)) : b.bitmap = V.createBitmapUsingSource(b.prefab_entity.prefab.bitmap_data_source), a.display.contents.addChild(b.bitmap)), -1 == b.prefab_entity.prefab.links.indexOf(a) && b.prefab_entity.prefab.links.push(a)
            };
            Wj.remove = function(a) {
                var b = a.prefab_link;
                null != b.prefab_entity && -1 != b.prefab_entity.prefab.links.indexOf(a) && la.remove(b.prefab_entity.prefab.links, a)
            };
            var dq = function() {};
            g["bikas.editor.RightClickSystem"] = dq;
            dq.__name__ = ["bikas",
                "editor", "RightClickSystem"
            ];
            dq.refresh = function(a) {
                a.in_current_container ? null == a.right_click_event && (a.right_click_event = function(b) {
                    a.in_current_container && null != a.right_click_callback && a.right_click_callback(a)
                }, a.display.container.addEventListener("rightClick", a.right_click_event)) : null != a.right_click_event && (a.display.container.removeEventListener("rightClick", a.right_click_event), a.right_click_event = null, a.right_click_callback = null)
            };
            var Zb = function() {};
            g["bikas.editor.SelectSystem"] = Zb;
            Zb.__name__ = ["bikas", "editor", "SelectSystem"];
            Zb.add = function(a) {
                a.selected || (a.selected = !0);
                Zb.refresh(a)
            };
            Zb.remove = function(a) {
                a.selected && (a.selected = !1);
                Zb.refresh(a)
            };
            Zb.refresh = function(a) {
                if (null != a.container_link && null != a.parent && null != a.parent.group.edit) {
                    var b = a.parent.group.edit.selected_entities;
                    a.selected ? -1 == b.indexOf(a) && b.push(a) : -1 != b.indexOf(a) && la.remove(b, a)
                }
                a.selected ? (a.selected_drawn || (null == a.selected_shape && (a.selected_shape = new Ke), b = a.display.container.get_numChildren(), a.display.container.addChildAt(a.selected_shape,
                    b), a.selected_drawn = !0), Zb.draw(a.selected_shape, a.internal_bounds, a.selected_draw_type, a.draggable)) : a.selected_drawn && (a.display.container.removeChild(a.selected_shape), a.selected_shape = null, a.selected_drawn = !1)
            };
            Zb.draw = function(a, b, c, d) {
                var e = 0;
                switch (Q.enumIndex(c)) {
                    case 0:
                        e = 9687278;
                        break;
                    case 1:
                        e = 9687278;
                        break;
                    case 2:
                        e = 10546070;
                        break;
                    case 3:
                        e = 15711890
                }
                var f = 1;
                d || (f = 2);
                a = a.get_graphics();
                a.clear();
                a.lineStyle(f, e, 1, !1, 1);
                a.moveTo(b.x, b.y);
                a.lineTo(b.x + b.width, b.y);
                a.lineTo(b.x + b.width, b.y + b.height);
                a.lineTo(b.x, b.y + b.height);
                a.lineTo(b.x, b.y);
                c != id.BOUNDS && (a.beginFill(e, 1), a.lineStyle(f, 1651777, 1, !1, 1), a.drawCircle(0, 0, 5), a.moveTo(-3, 0), a.lineTo(3, 0), a.moveTo(0, -3), a.lineTo(0, 3));
                a.endFill()
            };
            var Wd = function() {};
            g["bikas.editor.StringDrawSystem"] = Wd;
            Wd.__name__ = ["bikas", "editor", "StringDrawSystem"];
            Wd.add = function(a) {
                var b = a.display,
                    c = a.additional.string_draw,
                    d = b.contents.get_numChildren();
                b.contents.addChildAt(c.bitmap, d);
                Wd.refresh(a)
            };
            Wd.remove = function(a) {
                a.display.contents.removeChild(a.additional.string_draw.bitmap);
                Wd.removeFromCache(a)
            };
            Wd.refresh = function(a) {
                var b = a.additional.string_draw,
                    c = b.bitmap;
                var d = b.use_name ? a.name : b.text;
                var e = b.type,
                    f = b.size,
                    h = Wd.findCacheBySameFields(b, d);
                if (null == h) {
                    null != Wd.findCacheByEntity(a) && Wd.removeFromCache(a);
                    var k = h = 0,
                        m = 0;
                    switch (Q.enumIndex(e)) {
                        case 0:
                            h = 1651777;
                            k = 15199710;
                            m = 1651777;
                            break;
                        case 1:
                            h = 15199710;
                            m = k = 1651777;
                            break;
                        case 2:
                            h = 1651777;
                            k = 15199710;
                            m = 1651777;
                            break;
                        case 3:
                            h = 13772832;
                            k = 15199710;
                            m = 1651777;
                            break;
                        case 4:
                            h = 3253280;
                            k = 15199710;
                            m = 1651777;
                            break;
                        case 5:
                            h = 1935032,
                                k = 15199710, m = 1651777
                    }
                    k = Ea.drawTextWithBackgroundToSource(d, Math.round(f), 2 * b.padding, .35 * -f + 2 * b.padding, !1, h, k, m, 1);
                    h = new ws;
                    h.entities = [];
                    h.fields = new vs;
                    m = h.fields;
                    m.text = d;
                    m.type = e;
                    m.size = f;
                    h.source = k;
                    Uk.string_draw.push(h)
                }
                d = h.source;
                c.set_bitmapData(d.bitmap_data);
                c.set_x(-d.center_point.x + b.offset_x);
                c.set_y(-d.center_point.y + b.offset_y);
                c.smoothing = !0; - 1 == h.entities.indexOf(a) && h.entities.push(a)
            };
            Wd.findCacheBySameFields = function(a, b) {
                for (var c = 0, d = Uk.string_draw; c < d.length;) {
                    var e = d[c];
                    ++c;
                    var f = e.fields;
                    if (b == f.text && a.type == f.type && a.size == f.size && a.padding == f.padding) return e
                }
                return null
            };
            Wd.findCacheByEntity = function(a) {
                for (var b = 0, c = Uk.string_draw; b < c.length;) {
                    var d = c[b];
                    ++b;
                    if (-1 != d.entities.indexOf(a)) return d
                }
                return null
            };
            Wd.removeFromCache = function(a) {
                for (var b = 0, c = Uk.string_draw; b < c.length;) {
                    var d = c[b];
                    ++b;
                    var e = d.entities.indexOf(a); - 1 != e && (d.entities.splice(e, 1), 0 == d.entities.length && (d.source.bitmap_data.dispose(), la.remove(Uk.string_draw, d)))
                }
            };
            var kj = function() {};
            g["bikas.editor.TransformSystem"] =
                kj;
            kj.__name__ = ["bikas", "editor", "TransformSystem"];
            kj.remove = function(a) {
                a = a.display;
                a.container.set_scaleX(1);
                a.container.set_scaleY(1);
                a.container.set_rotation(0)
            };
            kj.refresh = function(a) {
                var b = a.display;
                a = a.transform;
                b.container.set_scaleX(a.scale_x);
                b.container.set_scaleY(a.scale_y);
                b.container.set_rotation(a.rotation)
            };
            var ca = function() {};
            g["bikas.editor.EditorUI"] = ca;
            ca.__name__ = ["bikas", "editor", "EditorUI"];
            ca.createMainMenu = function(a) {
                var b = new Gs,
                    c = v.createDebugWindow("Editor", b.editor_title_width,
                        !0, cc.CONFIRM, 720, 405);
                c.window.window_box.confirm_text = "Close editor without saving?";
                c.window.window_box.confirm_callback = function() {
                    w.trace("System.exit(0)", {
                        fileName: "EditorUI.hx",
                        lineNumber: 63,
                        className: "bikas.editor.EditorUI",
                        methodName: "createMainMenu"
                    });
                    fq.exit(0)
                };
                c.window.window_box.confirm_show_condition = function() {
                    return a.last_saved_undo_pack_count != a.undo.undo_packs.length ? !0 : !1
                };
                b.debug_window = c;
                b.stage_fields = [];
                b.stage_elements = [];
                var d = c.setup;
                var e = null != a.stage_group ? "Stage" : "Stage: none";
                var f = null != a.library_group ? "Library" : "Library: none";
                var h = u.createExpandBox(e, !1, d.width + 2 * d.padding, d.height, 0, 0),
                    k = u.createExpandBox(f, !1, d.width + 2 * d.padding, d.height, 0, 0);
                h.expand_box.all.padding.bottom = 2 * d.padding;
                k.expand_box.all.padding.bottom = 2 * d.padding;
                h.expand_box.contents.background.color = 15199453;
                k.expand_box.contents.background.color = 15199453;
                b.stage_expandbox = h;
                b.library_expandbox = k;
                e = ca.createHBox();
                f = ca.createHBox();
                var m = (d.width - 4 * d.padding) / 5,
                    r = function(b, c) {
                        return v.openOkCancelWindow(a.menu_container,
                            a.container.get_mouseX(), a.container.get_mouseY(), "Confirm", b, 200, c, null)
                    },
                    I = function(a, b, c) {
                        ca.addButtonToHBox(a, b, m, d.height, d.padding, c)
                    },
                    g = new gq,
                    l = function() {
                        for (var b = a.current_group; null != b;) {
                            if (null != b.prefab) return w.trace("can't do this operation, because currently editing prefab", {
                                fileName: "EditorUI.hx",
                                lineNumber: 125,
                                className: "bikas.editor.EditorUI",
                                methodName: "createMainMenu"
                            }), !1;
                            b = b.parent
                        }
                        return !0
                    }; - 1 != a.saving_types.indexOf(mf.FlashSharedObject) && v.addButton(c, "quick save to shared objects",
                    function() {
                        F.saveToSharedObjects(a)
                    }); - 1 != a.saving_types.indexOf(mf.FlashOneFile) && (v.addButton(c, "save and export everything to 1 file", function() {
                    null != a.save_and_export_everything_click && a.save_and_export_everything_click()
                }), v.addButton(c, "load everything from 1 file", function() {
                    null != a.load_everything && a.load_everything()
                }));
                if (-1 != a.saving_types.indexOf(mf.NodeJSServer)) {
                    var Ba = c.setup,
                        mb = u.createHBox(!1, !0, Ba.width, Ba.height, 0);
                    u.addToWindowBox(c.window, mb);
                    var n = u.createText("NodeJS", bc.LEFT,
                            50, Ba.height, Ba.padding),
                        p = u.createButton("save all", 60, Ba.height, Ba.padding, null),
                        x = u.createButton("load stage", 60, Ba.height, Ba.padding, null);
                    Ba = u.createButton("load library", 65, Ba.height, Ba.padding, null);
                    u.addToBox(mb, n);
                    u.addToBox(mb, p);
                    u.addToBox(mb, x);
                    u.addToBox(mb, Ba);
                    b.save_and_export_button = p;
                    p.button.click_callback = function() {
                        null != a.save_end_export_to_nodejs_server && (a.save_end_export_to_nodejs_server(), a.last_saved_undo_pack_count = a.undo.undo_packs.length)
                    };
                    x.button.click_callback = function() {
                        w.trace("not supported", {
                            fileName: "EditorUI.hx",
                            lineNumber: 196,
                            className: "bikas.editor.EditorUI",
                            methodName: "createMainMenu"
                        })
                    };
                    Ba.button.click_callback = function() {
                        w.trace("not supported", {
                            fileName: "EditorUI.hx",
                            lineNumber: 220,
                            className: "bikas.editor.EditorUI",
                            methodName: "createMainMenu"
                        })
                    }
                }
                v.addButton(c, "help", function() {
                    var b = v.createDebugWindow("Help", 400);
                    v.addText(b, "Mouse:", !0);
                    v.addText(b, "\thold left mouse - drag object/view");
                    v.addText(b, "\tSPACE+drag mouse - 5x drag stage");
                    v.addText(b, "\tSHIFT+left mouse click - select/deselect object");
                    v.addText(b, "\tCTRL+SHIFT+hold left mouse - select area");
                    v.addText(b, "\tleft mouse double click - edit group/prefab");
                    v.addText(b, "\tright mouse click - open object edit menu");
                    v.addText(b, "Keyboard:", !0);
                    v.addText(b, "\tCTRL+C - copy");
                    v.addText(b, "\tCTRL+X - cut");
                    v.addText(b, "\tCTRL+V - paste");
                    v.addText(b, "\tCTRL+D - duplicate");
                    v.addText(b, "\tCTRL+Z - undo");
                    v.addText(b, "\tCTRL+SHIFT+Z - redo");
                    v.addText(b, "\tCTRL+L - lock/unlock");
                    v.addText(b, "\tCTRL+S - save scene and library to shared objects");
                    v.addText(b, "\tCTRL+G - group");
                    v.addText(b, "\tF8 - convert to prefab");
                    v.addText(b, "\tCTRL+SHIFT+G - ungroup/break apart");
                    v.addText(b, "\tNUM_PLUS - zoom in");
                    v.addText(b, "\tNUM_MINUS - zoom out");
                    v.addText(b, "\tDELETE - delete selected objects");
                    v.addText(b, "\tSHIFT+DELETE - delete even non-deletable selected entities");
                    v.addText(b, "\tARROW_KEYS - move object by 1px.");
                    v.addText(b, "\tARROW_KEYS+SHIFT - move objects by 10px.");
                    v.addText(b, "\tCTRL+ARROW UP/DOWN - change depth.");
                    v.addText(b, "\tCTRL+SHIFT+ARROW UP/DOWN - bring depth to front/back");
                    v.addText(b, "Polygon:", !0);
                    v.addText(b, "\tCTRL+M - apply transform and center polygon");
                    v.addText(b, "\tCTRL+left mouse click - add polygon point");
                    v.addText(b, "\tCTRL+hold left mouse - add polygon point and drag");
                    v.addText(b, "\tCTRL+P - begin creating custom polygon attached with game-specific procedures");
                    v.addText(b, "Features:", !0);
                    v.addText(b, "\tSelect 2 dynamic/static parts and create pivot join to auto-name pivot joint");
                    v.addText(b, "Quirks:", !0);
                    v.addText(b, "\tSometimes ctrl key get stuck.");
                    v.addText(b, "\tCTRL+C and CTRL+V work on key release.");
                    v.addText(b, "\tDon't run engine while in the middle of dragging objects.");
                    v.addText(b, "\tAfter changing transform_editable - deselect/select object to update");
                    v.addText(b, "\tAfter changing polygon.editable - deselect/select object to update");
                    ca.openClickedDebugWindow(a.menu_container, b)
                });
                u.addToExpandBox(h, e);
                u.addToExpandBox(k, f);
                u.addToWindowBox(c.window, h);
                u.addToWindowBox(c.window, k);
                I(e, "New", function() {
                    if (l()) {
                        var b = function() {
                            var b =
                                F.createStageGroup(),
                                d = F.createSerialSave("Stage");
                            F.overloadStage(a, b, d);
                            v.resizeAndDraw(c)
                        };
                        null != a.stage_group ? r("Destroy current stage and create new?", b) : b()
                    }
                });
                I(f, "New", function() {
                    if (l()) {
                        var b = function() {
                            var b = F.createLibraryGroup(),
                                d = F.createLibraryData(),
                                e = F.createSerialSave("Library");
                            F.overloadLibrary(a, b, d, e);
                            v.resizeAndDraw(c)
                        };
                        null != a.library_group ? r("Destroy current library and create new?", b) : b()
                    }
                });
                I(e, "Load", function() {
                    if (l()) {
                        var b = function() {
                            var b = [vd.createStageFilter()];
                            vd.browseAndLoad(g,
                                b,
                                function(b, c) {
                                    if (E.is(c, Ng)) {
                                        c = ub.ofData(aa.__cast(c, Ng));
                                        var d = ia.getTimer(),
                                            e = J.unserializeStage(a.editor_serial_data, c);
                                        null != e && (F.overloadStage(a, e.group, e.save), F.traceSerialization("loaded:" + b, c, e.save, ia.getTimer() - d))
                                    } else w.trace("error: wrong data type " + E.string(c), {
                                        fileName: "EditorUI.hx",
                                        lineNumber: 334,
                                        className: "bikas.editor.EditorUI",
                                        methodName: "createMainMenu"
                                    })
                                })
                        };
                        null != a.stage_group ? r("Destroy current stage and load?", b) : b()
                    }
                });
                I(f, "Load", function() {
                    if (l()) {
                        var b = function() {
                            var b = [vd.createLibraryFilter()];
                            vd.browseAndLoad(g, b, function(b, c) {
                                if (E.is(c, Ng)) {
                                    c = ub.ofData(aa.__cast(c, Ng));
                                    var d = ia.getTimer(),
                                        e = J.unserializeLibrary(a.editor_serial_data, c);
                                    null != e && (F.overloadLibrary(a, e.group, e.library_data, e.save), F.traceSerialization("loaded:" + b, c, e.save, ia.getTimer() - d))
                                } else w.trace("error: wrong data type " + E.string(c), {
                                    fileName: "EditorUI.hx",
                                    lineNumber: 360,
                                    className: "bikas.editor.EditorUI",
                                    methodName: "createMainMenu"
                                })
                            })
                        };
                        null != a.library_group ? r("Destroy current library and load?",
                            b) : b()
                    }
                });
                I(e, "Save", function() {
                    if (null != a.stage_group) {
                        var b = ia.getTimer(),
                            c = J.serializeStage(a.editor_serial_data, a),
                            d = ia.getTimer() - b;
                        b = c.getData();
                        vd.browseAndSave(g, b, a.stage_save.name + ".befe", function(b) {
                            F.traceSerialization("saved:" + b, c, a.stage_save, d)
                        })
                    } else w.trace("nothing to save", {
                        fileName: "EditorUI.hx",
                        lineNumber: 384,
                        className: "bikas.editor.EditorUI",
                        methodName: "createMainMenu"
                    })
                });
                I(f, "Save", function() {
                    if (null != a.library_group) {
                        var b = ia.getTimer(),
                            c = J.serializeLibrary(a.editor_serial_data,
                                a),
                            d = ia.getTimer() - b;
                        b = c.getData();
                        vd.browseAndSave(g, b, a.library_save.name + ".befe", function(b) {
                            F.traceSerialization("saved:" + b, c, a.library_save, d)
                        })
                    } else w.trace("nothing to save", {
                        fileName: "EditorUI.hx",
                        lineNumber: 396,
                        className: "bikas.editor.EditorUI",
                        methodName: "createMainMenu"
                    })
                });
                I(e, "Export", function() {
                    null != a.stage_group ? null != a.export_stage_click && a.export_stage_click() : w.trace("nothing to save", {
                        fileName: "EditorUI.hx",
                        lineNumber: 410,
                        className: "bikas.editor.EditorUI",
                        methodName: "createMainMenu"
                    })
                });
                I(f, "Export", function() {
                    null != a.library_group ? null != a.export_library_click && a.export_library_click() : w.trace("nothing to save", {
                        fileName: "EditorUI.hx",
                        lineNumber: 419,
                        className: "bikas.editor.EditorUI",
                        methodName: "createMainMenu"
                    })
                });
                I(e, "Destroy", function() {
                    l() && (null != a.stage_group ? r("Destroy current stage?", function() {
                        y.clear(a.undo);
                        for (var d = 0, e = a.entities_editor.entity_edits; d < e.length;) {
                            var f = e[d];
                            ++d;
                            F.destroyEntityEdit(f)
                        }
                        a.entities_editor.entity_edits = [];
                        F.removeAndDestroyEntityIncludingChildren(a.stage_group);
                        a.stage_group = null;
                        ca.clearStageMenu(b);
                        ca.setTextForExpandBox(h, "Stage: none");
                        v.resizeAndDraw(c)
                    }) : w.trace("nothing to destroy", {
                        fileName: "EditorUI.hx",
                        lineNumber: 446,
                        className: "bikas.editor.EditorUI",
                        methodName: "createMainMenu"
                    }))
                });
                I(f, "Destroy", function() {
                    l() && (null != a.library_group ? r("Destroy current library?", function() {
                        y.clear(a.undo);
                        for (var d = 0, e = a.library_group.group.entities; d < e.length;) {
                            var f = e[d];
                            ++d;
                            na.removeEntityIncludingChildren(f)
                        }
                        F.destroyEntityIncludingChildren(a.library_group);
                        if (null != a.stage_group) {
                            var h = null;
                            h = function(a) {
                                if (null != a.group)
                                    for (var b = 0, c = a.group.entities; b < c.length;) {
                                        var d = c[b];
                                        ++b;
                                        h(d)
                                    }
                                null != a.prefab_link && (a.prefab_link.library_group = null)
                            };
                            h(a.stage_group);
                            na.refreshEntityIncludingChildren(a.stage_group)
                        }
                        a.library_group = null;
                        ca.clearLibraryMenu(b);
                        ca.setTextForExpandBox(k, "Library: none");
                        v.resizeAndDraw(c)
                    }) : w.trace("nothing to destroy", {
                        fileName: "EditorUI.hx",
                        lineNumber: 480,
                        className: "bikas.editor.EditorUI",
                        methodName: "createMainMenu"
                    }))
                });
                return b
            };
            ca.openLibraryData = function(a) {
                var b = v.createDebugWindow(E.string(a.library_data), a.main_menu.entity_title_width, !0);
                v.addButton(b, "stage settings", function() {
                    var b = v.createDebugWindow("Stage Settings", 400);
                    v.addInstanceEdit(b, a.library_data.stage_settings, "stage settings");
                    ca.openClickedDebugWindow(a.menu_container, b)
                });
                v.addButton(b, "perlin terrain presets", function() {
                    var b = Zc.createPresetUI(a.undo, a.library_data.perlin_terrain_presets);
                    ca.openClickedDebugWindow(a.menu_container, b)
                });
                v.addButton(b,
                    "default bitmap offsets",
                    function() {
                        var b = a.undo,
                            d = v.createDebugWindow("Default Bitmap Offsets", 200),
                            e = a.library_data.default_bitmap_offsets;
                        v.addInstanceEdit(d, e, "default bitmap offsets", function(a) {
                            y.startUndoPack(b);
                            var c = new al;
                            ch.copyInstanceShallow(e[a], c);
                            y.pushArrayInsert(b, e, a);
                            e.splice(a, 0, c);
                            y.endUndoPack(b)
                        }, function(a) {
                            y.startUndoPack(b);
                            y.pushArrayRemove(b, e, a);
                            la.remove(e, e[a]);
                            y.endUndoPack(b)
                        });
                        ca.openClickedDebugWindow(a.menu_container, d)
                    });
                v.addButton(b, "object drop menus", function() {
                    var b =
                        a.undo,
                        d = v.createDebugWindow("Object Drop Menus", 300),
                        e = a.library_data.object_drop_menus;
                    v.addButton(d, "add new", function() {
                        y.startUndoPack(b);
                        var a = new Rn,
                            c = e.length;
                        y.pushArrayInsert(b, e, c);
                        e.splice(c, 0, a);
                        y.endUndoPack(b);
                        v.refreshAllFields(d)
                    });
                    v.addInstanceEdit(d, e, "object drop menus", function(a) {
                        y.startUndoPack(b);
                        var c = new Rn;
                        ch.copyInstanceShallow(e[a], c);
                        y.pushArrayInsert(b, e, a);
                        e.splice(a, 0, c);
                        y.endUndoPack(b)
                    }, function(a) {
                        y.startUndoPack(b);
                        y.pushArrayRemove(b, e, a);
                        la.remove(e, e[a]);
                        y.endUndoPack(b)
                    });
                    ca.openClickedDebugWindow(a.menu_container, d)
                });
                v.addButton(b, "spectrums", function() {
                    var b = a.undo,
                        d = v.createDebugWindow("Spectrums", 300),
                        e = a.library_data.spectrums;
                    v.addButton(d, "add new", function() {
                        y.startUndoPack(b);
                        var a = new Sn,
                            c = e.length;
                        y.pushArrayInsert(b, e, c);
                        e.splice(c, 0, a);
                        y.endUndoPack(b);
                        v.refreshAllFields(d)
                    });
                    v.addInstanceEdit(d, e, "spectrums", function(a) {
                        y.startUndoPack(b);
                        var c = new Sn;
                        y.pushArrayInsert(b, e, a);
                        e.splice(a, 0, c);
                        y.endUndoPack(b)
                    }, function(a) {
                        y.startUndoPack(b);
                        y.pushArrayRemove(b,
                            e, a);
                        la.remove(e, e[a]);
                        y.endUndoPack(b)
                    });
                    ca.openClickedDebugWindow(a.menu_container, d)
                });
                v.addButton(b, "decorations", function() {
                    var b = Uc.createDecorationEdit(a, a.undo, a.library_data.decorations);
                    ca.openClickedDebugWindow(a.menu_container, b)
                });
                ca.openClickedDebugWindow(a.menu_container, b)
            };
            ca.openSerialSave = function(a, b, c, d, e) {
                var f = v.createDebugWindow(E.string(b), a.main_menu.entity_title_width, !0);
                v.addEdit(f, b, "name");
                v.addView(f, b, "created_time_stamp");
                v.addView(f, b, "save_time_stamp");
                f.callbacks.debug_field_after_apply =
                    function(a) {
                        "name" == a.field_name && (u.setText(c, a.value), ca.setTextForExpandBox(d, e + " (" + a.value + ")"), u.draw(c))
                    };
                ca.openClickedDebugWindow(a.menu_container, f)
            };
            ca.overloadStageMenus = function(a) {
                ca.clearStageMenu(a.main_menu);
                var b = a.main_menu,
                    c = b.debug_window,
                    d = c.setup,
                    e = function(a, d) {
                        a = v.addButton(c, a, d);
                        b.stage_elements.push(a)
                    },
                    f = ca.createHBox();
                u.addToExpandBox(b.stage_expandbox, f);
                b.current_stage_hbox = f;
                var h = (d.width - 2 * d.padding) / 3;
                b.stage_hbox_button_width = h;
                var k = b.stage_elements;
                b.stage_name_element =
                    ca.addTextToHBox(f, a.stage_save.name, h, d.height, d.padding);
                ca.setTextForExpandBox(b.stage_expandbox, "Stage (" + a.stage_save.name + ")");
                ca.addButtonToHBox(f, "Serial Save", h, d.height, d.padding, function() {
                    ca.openSerialSave(a, a.stage_save, a.main_menu.stage_name_element, b.stage_expandbox, "Stage")
                });
                ca.addButtonToHBox(f, "Stage", h, d.height, d.padding, function() {
                    ca.openEntityDebugWindow(a, a.stage_group)
                });
                (function() {
                    var a = v.addSpace(c, .25);
                    b.stage_elements.push(a)
                })();
                e("Load Game", function() {
                    if (null != a.on_load_clicked) a.on_load_clicked()
                });
                e("Editor Debug", function() {
                    ca.openEditorDebugWindow(a, c, d)
                });
                e = u.createHBox(!1, !1, 0, 0, 0);
                u.addToWindowBox(c.window, e);
                k.push(e);
                k = (d.width - 4 * d.padding) / 5;
                ca.addTextToHBox(e, "Create", k, d.height, d.padding);
                ca.addButtonToHBox(e, "Objects", k, d.height, d.padding, function() {
                    var b = ca.createCreationWindow(d, "Objects", 50, d.max_content_height),
                        e = b.window_box.contents;
                    ca.addCreationButton(a, d, e, 50, "Circle", function() {
                        return F.createCircleEntity()
                    });
                    ca.addCreationButton(a, d, e, 50, "Polygon", function() {
                        return F.createPolygonEntity()
                    });
                    ca.addCreationButton(a, d, e, 50, "Text", function() {
                        return F.createTextEntity()
                    });
                    ca.addCreationButton(a, d, e, 50, "Marker", function() {
                        return F.createMarkerEntity()
                    });
                    ca.addCreationButton(a, d, e, 50, "Line Marker", function() {
                        var a = F.createMarkerEntity();
                        F.createAndAddLineDraw(a);
                        a.additional.line_draw.color = 1651777;
                        a.additional.line_draw.start.x = -50;
                        a.additional.line_draw.end.x = 50;
                        return a
                    });
                    ca.showCreationWindow(a, c, b)
                });
                ca.addButtonToHBox(e, "Game", k, d.height, d.padding, function() {
                    if (null != a.game_menu_click) a.game_menu_click();
                    else {
                        var b = v.createDebugWindow("Game", 200, !0, cc.DESTROY);
                        v.addButton(b, "Custom Procedures", function() {
                            var b = v.createDebugWindow("Custom Procedures", 600, !0, cc.DESTROY);
                            v.addButton(b, "print anchors and positions of selected bitmap entities relative to the selected marker", function() {
                                for (var b = a.current_group.group.edit.selected_entities, c = null, d = [], e = 0; e < b.length;) {
                                    var f = b[e];
                                    ++e;
                                    null != f.additional && (null != c || null == f.additional.point_draw && null == f.additional.string_draw || (c = f));
                                    null != f.bitmap_images &&
                                        1 <= f.bitmap_images.images.length && d.push(f)
                                }
                                if (null == c) w.trace("warning: no marker entity selected", {
                                    fileName: "EditorUI.hx",
                                    lineNumber: 767,
                                    className: "bikas.editor.EditorUI",
                                    methodName: "overloadStageMenus"
                                });
                                else if (0 == d.length) w.trace("warning: no bitmap entities selected", {
                                    fileName: "EditorUI.hx",
                                    lineNumber: 771,
                                    className: "bikas.editor.EditorUI",
                                    methodName: "overloadStageMenus"
                                });
                                else
                                    for (b = 0; b < d.length;) {
                                        e = d[b];
                                        ++b;
                                        var h = e.bitmap_images.images[0];
                                        f = (h.bitmap_data_source.center_point.x - h.offset_x) /
                                            h.bitmap_data_source.original_width;
                                        h = (h.bitmap_data_source.center_point.y - h.offset_y) / h.bitmap_data_source.original_height;
                                        var k = e.transform.scale_x,
                                            m = e.transform.scale_y,
                                            r = e.position.x - c.position.x,
                                            I = e.position.y - c.position.y;
                                        w.trace("", {
                                            fileName: "EditorUI.hx",
                                            lineNumber: 784,
                                            className: "bikas.editor.EditorUI",
                                            methodName: "overloadStageMenus"
                                        });
                                        w.trace(e.name + ".anchor.x = " + f + ";", {
                                            fileName: "EditorUI.hx",
                                            lineNumber: 785,
                                            className: "bikas.editor.EditorUI",
                                            methodName: "overloadStageMenus"
                                        });
                                        w.trace(e.name +
                                            ".anchor.y = " + h + ";", {
                                                fileName: "EditorUI.hx",
                                                lineNumber: 786,
                                                className: "bikas.editor.EditorUI",
                                                methodName: "overloadStageMenus"
                                            });
                                        if (1 != k || 1 != m) w.trace(e.name + ".scale.x = " + k + ";", {
                                            fileName: "EditorUI.hx",
                                            lineNumber: 788,
                                            className: "bikas.editor.EditorUI",
                                            methodName: "overloadStageMenus"
                                        }), w.trace(e.name + ".scale.y = " + m + ";", {
                                            fileName: "EditorUI.hx",
                                            lineNumber: 789,
                                            className: "bikas.editor.EditorUI",
                                            methodName: "overloadStageMenus"
                                        });
                                        w.trace(e.name + ".position.x = " + r + ";", {
                                            fileName: "EditorUI.hx",
                                            lineNumber: 791,
                                            className: "bikas.editor.EditorUI",
                                            methodName: "overloadStageMenus"
                                        });
                                        w.trace(e.name + ".position.y = " + I + ";", {
                                            fileName: "EditorUI.hx",
                                            lineNumber: 792,
                                            className: "bikas.editor.EditorUI",
                                            methodName: "overloadStageMenus"
                                        })
                                    }
                            });
                            ca.openClickedDebugWindow(a.menu_container, b)
                        });
                        if (null != a.library_data) {
                            if (null != a.library_data.object_drop_menus && 0 < a.library_data.object_drop_menus.length)
                                for (var e = 0, f = a.library_data.object_drop_menus; e < f.length;) {
                                    var h = [f[e]];
                                    ++e;
                                    var k = [h[0].name];
                                    v.addButton(b, k[0], function(b, e) {
                                        return function() {
                                            var f =
                                                e[0].bitmap_names.split(";"),
                                                h = e[0].prefab_names.split(";");
                                            f = f.filter(function() {
                                                return function(a) {
                                                    return "" != a ? !0 : !1
                                                }
                                            }());
                                            h = h.filter(function() {
                                                return function(a) {
                                                    return "" != a ? !0 : !1
                                                }
                                            }());
                                            f = ca.openBitmapCreationWindow(a, c, d, b[0], e[0].window_width, e[0].place_on_top, e[0].transform_editable, f, h, e[0].display_as_bitmaps, e[0].max_bitmap_height);
                                            u.resizeToFitAll(f);
                                            u.draw(f)
                                        }
                                    }(k, h))
                                }
                            if (null != a.library_data.spectrums && 0 < a.library_data.spectrums.length)
                                for (e = 0, f = a.library_data.spectrums; e < f.length;) h = [f[e]],
                                    ++e, k = [h[0].name], v.addButton(b, k[0], function(b, c) {
                                        return function() {
                                            var e = 2 * d.title_button_width,
                                                f = 2 * d.max_content_width,
                                                h = 2 * d.width,
                                                k = v.createDebugWindow(b[0], e, !1, cc.DESTROY, f, d.max_content_height, !0),
                                                m = d.height,
                                                r = d.padding,
                                                I = function(b, c) {
                                                    return function() {
                                                        for (var h = v.createDebugWindow(b[0], e, !1, cc.DESTROY, f, d.max_content_height, !1), k = 0, m = c[0].explored_archetypes; k < m.length;) {
                                                            var r = m[k];
                                                            ++k;
                                                            v.addText(h, E.string(r.spectrum_names) + "")
                                                        }
                                                        ca.openClickedDebugWindow(a.menu_container, h)
                                                    }
                                                }(b, c);
                                            m = u.createButton("open explored archetypes",
                                                h, m, r, I);
                                            u.addToWindowBox(k.window, m);
                                            m = u.createText("Spectrums", bc.CENTER, h, d.height, d.padding);
                                            u.addToWindowBox(k.window, m);
                                            var g = [],
                                                l = [];
                                            m = 0;
                                            for (r = c[0].spectrum_names; m < r.length;) {
                                                I = r[m];
                                                ++m;
                                                var tc = new Ss;
                                                tc.name = I;
                                                tc.debug_field = v.addEdit(k, tc, "type", I);
                                                tc.debug_field.after_apply = function(a) {
                                                    return function(b) {
                                                        ca.generateArchetypes(h, d, g, k.window, l, a[0].explored_archetypes)
                                                    }
                                                }(c);
                                                ca.refreshSpectrumSwitch(tc, c[0].explored_archetypes);
                                                l.push(tc)
                                            }
                                            m = u.createText("Archetypes", bc.CENTER, h, d.height, d.padding);
                                            u.addToWindowBox(k.window, m);
                                            ca.generateArchetypes(h, d, g, k.window, l, c[0].explored_archetypes);
                                            ca.openClickedDebugWindow(a.menu_container, k)
                                        }
                                    }(k, h))
                        }
                        ca.openClickedDebugWindow(a.menu_container, b)
                    }
                });
                ca.addButtonToHBox(e, "Bitmaps", k, d.height, d.padding, function() {
                    for (var b = [], e = a.bitmap_assets.keys(); e.hasNext();) {
                        var f = e.next();
                        b.push(f)
                    }
                    b.sort(function(a, b) {
                        a = a.toLowerCase();
                        b = b.toLowerCase();
                        return a < b ? -1 : a > b ? 1 : 0
                    });
                    ca.openBitmapCreationWindow(a, c, d, "All Bitmaps", 150, a.place_bitmaps_on_top, !0, b)
                });
                ca.addButtonToHBox(e, "Prefabs", k, d.height, d.padding, function() {
                    if (null == a.library_group) w.trace("no library_group", {
                        fileName: "EditorUI.hx",
                        lineNumber: 925,
                        className: "bikas.editor.EditorUI",
                        methodName: "overloadStageMenus"
                    });
                    else {
                        var b = ca.createCreationWindow(d, "Prefabs (" + a.library_group.name + ")", 100, d.max_content_height),
                            e = b.window_box.contents,
                            f = u.createCheckBox("place_prefabs_on_top", a.place_prefabs_on_top, 100 + 3 * d.height + d.padding, d.height, d.padding, function(b) {
                                a.place_prefabs_on_top = b
                            });
                        u.addToBox(e,
                            f);
                        f = u.createButton("Refresh", 100 + 3 * d.height + d.padding, d.height, d.padding, null);
                        f.text.align = bc.CENTER;
                        u.addToBox(e, f);
                        var h = u.createVBox(!1, !1, 0, 0, 0);
                        h.padding.top = 2 * d.padding;
                        u.addToBox(e, h);
                        var k = [],
                            g = [],
                            l = null,
                            n = l = function() {
                                for (var c = 0; c < k.length;) {
                                    var e = k[c];
                                    ++c;
                                    u.destroyElement(e)
                                }
                                k.splice(0, k.length);
                                g.splice(0, g.length);
                                if (null != a.library_group)
                                    for (c = a.library_group.group.entities.slice(), c.sort(function(a, b) {
                                            a = a.name.toLowerCase();
                                            b = b.name.toLowerCase();
                                            return a < b ? -1 : a > b ? 1 : 0
                                        }), e = 0; e < c.length;) {
                                        var f = [c[e]];
                                        ++e;
                                        var m = u.createHBox(!1, !1, 0, 0, 0),
                                            r = u.createButtonWithoutText(d.height, d.height, d.padding, function(c) {
                                                return function() {
                                                    if (-1 == a.library_group.group.entities.indexOf(c[0])) w.trace("warning: prefab does not exist anymore, click refresh", {
                                                        fileName: "EditorUI.hx",
                                                        lineNumber: 967,
                                                        className: "bikas.editor.EditorUI",
                                                        methodName: "overloadStageMenus"
                                                    });
                                                    else {
                                                        y.startUndoPack(a.undo);
                                                        var d = c[0].prefab.links.slice();
                                                        F.destroyEntitiesWithUndo(a.undo, [c[0]]);
                                                        for (var e = 0; e < d.length;) {
                                                            var f = d[e];
                                                            ++e;
                                                            f.prefab_link.prefab_entity =
                                                                null;
                                                            na.refreshEntityIncludingChildren(f)
                                                        }
                                                        d = F.getSortedPrefabsByLayersOfInnerPrefabs(a.library_group.group.entities);
                                                        if (a.refresh_prefabs_with_undo)
                                                            for (e = 0; e < d.length;) f = d[e], ++e, na.refreshEntityIncludingChildren(f);
                                                        y.endUndoPack(a.undo);
                                                        l();
                                                        u.resizeToFitAll(b);
                                                        u.draw(b)
                                                    }
                                                }
                                            }(f));
                                        r.graphics = new S;
                                        r.sprite.addChild(r.graphics);
                                        u.drawCross(r.graphics.get_graphics(), r.size, .2, 16054256, 1);
                                        u.addToBox(m, r);
                                        r = u.createButtonWithoutText(d.height, d.height, d.padding, function(b) {
                                            return function() {
                                                -1 == a.library_group.group.entities.indexOf(b[0]) ?
                                                    w.trace("warning: prefab does not exist anymore, click refresh", {
                                                        fileName: "EditorUI.hx",
                                                        lineNumber: 996,
                                                        className: "bikas.editor.EditorUI",
                                                        methodName: "overloadStageMenus"
                                                    }) : ca.openEntityDebugWindow(a, b[0])
                                            }
                                        }(f));
                                        r.graphics = new S;
                                        r.sprite.addChild(r.graphics);
                                        u.drawProperties(r.graphics.get_graphics(), r.size, .3, 16054256, 1);
                                        u.addToBox(m, r);
                                        ca.addPrefabLinkCreationButton(f[0], a, d, m, 100 - d.height - d.padding, f[0].name, !0);
                                        u.addToBox(h, m);
                                        g.push(f[0]);
                                        k.push(m)
                                    }
                            },
                            p = function() {
                                n();
                                u.resizeToFitAll(b);
                                u.draw(b)
                            };
                        f.button.click_callback = function() {
                            p()
                        };
                        n();
                        ca.showCreationWindow(a, c, b);
                        var x = function(b) {
                            if (null == a.library_group) {
                                if (0 < k.length) {
                                    for (b = 0; b < k.length;) {
                                        var c = k[b];
                                        ++b;
                                        u.destroyElement(c)
                                    }
                                    k = [];
                                    g = [];
                                    p()
                                }
                            } else if (g.length != a.library_group.group.entities.length) p();
                            else {
                                b = !1;
                                c = 0;
                                for (var d = g.length; c < d;) {
                                    var e = c++,
                                        f = g[e]; - 1 == a.library_group.group.entities.indexOf(f) ? b = !0 : k[e].box.children[2].text.field.get_text() != f.name && (b = !0)
                                }
                                b && p()
                            }
                        };
                        b.sprite.addEventListener("enterFrame", x);
                        b.window_box.close_callback =
                            function() {
                                b.sprite.removeEventListener("enterFrame", x)
                            }
                    }
                });
                (function(a, d, e) {
                    a = v.addView(c, d, e, a);
                    b.stage_fields.push(a)
                })("Zoom", a.stage_group.transform, "scale_x");
                v.resizeAndDraw(c)
            };
            ca.overloadLibraryMenus = function(a) {
                ca.clearLibraryMenu(a.main_menu);
                var b = a.main_menu,
                    c = b.debug_window,
                    d = c.setup,
                    e = ca.createHBox();
                u.addToExpandBox(b.library_expandbox, e);
                b.current_library_hbox = e;
                var f = (d.width - 3 * d.padding) / 4;
                b.stage_hbox_button_width = f;
                b.library_name_element = ca.addTextToHBox(e, a.library_save.name,
                    f, d.height, d.padding);
                ca.setTextForExpandBox(b.library_expandbox, "Library (" + a.library_save.name + ")");
                ca.addButtonToHBox(e, "Serial Save", f, d.height, d.padding, function() {
                    ca.openSerialSave(a, a.library_save, a.main_menu.library_name_element, b.library_expandbox, "Library")
                });
                ca.addButtonToHBox(e, "Data", f, d.height, d.padding, function() {
                    ca.openLibraryData(a)
                });
                ca.addButtonToHBox(e, "Library", f, d.height, d.padding, function() {
                    ca.openEntityDebugWindow(a, a.library_group)
                });
                v.resizeAndDraw(c)
            };
            ca.overloadCurrentGroupHBox =
                function(a) {
                    var b = a.main_menu,
                        c = b.debug_window,
                        d = c.setup,
                        e = b.stage_elements;
                    null != b.current_group_hbox && (u.destroyElement(b.current_group_hbox), la.remove(e, b.current_group_hbox));
                    b.current_group_hbox = u.createHBox(!1, !0, 0, 0, 0);
                    e.push(b.current_group_hbox);
                    u.addToWindowBox(c.window, b.current_group_hbox);
                    ca.addTextToHBox(b.current_group_hbox, "Current", b.stage_hbox_button_width, d.height, d.padding);
                    var f = 0;
                    e = a.current_group;
                    for (c = []; null != e;) ++f, c.push(e), e = e.parent;
                    e = f;
                    f = (d.width - b.stage_hbox_button_width -
                        d.padding - d.padding * (e - 1)) / e;
                    for (e = a.current_group; 0 < c.length;) e = [c.pop()], ca.addButtonToHBox(b.current_group_hbox, e[0].name, f, d.height, d.padding, function(c) {
                        return function() {
                            if (c[0] == b.current_group) {
                                y.startUndoPack(a.undo);
                                y.pushChange(a.undo, a.stage_group.transform, "scale_x", a.stage_group.transform.scale_x);
                                y.pushChange(a.undo, a.stage_group.transform, "scale_y", a.stage_group.transform.scale_x);
                                a.stage_group.transform.scale_x = 1;
                                a.stage_group.transform.scale_y = 1;
                                kj.refresh(a.stage_group);
                                var d = Va.convertPositionToLocal(a.current_group.container_link,
                                    a.current_group.position, a.stage_group.display.contents);
                                d.x -= a.size.width / 2;
                                d.y -= a.size.height / 2;
                                y.pushChange(a.undo, a.stage_group.position, "x", a.stage_group.position.x);
                                y.pushChange(a.undo, a.stage_group.position, "y", a.stage_group.position.y);
                                a.stage_group.position.x = -d.x;
                                a.stage_group.position.y = -d.y;
                                Ei.refresh(a.stage_group);
                                y.endUndoPack(a.undo)
                            } else {
                                d = a.undo;
                                y.startUndoPack(d);
                                for (var e = a.current_group, f = a.current_group; f.parent != c[0];) {
                                    if (null == f.parent) {
                                        w.trace("warning: it's not upper group", {
                                            fileName: "EditorUI.hx",
                                            lineNumber: 1218,
                                            className: "bikas.editor.EditorUI",
                                            methodName: "overloadCurrentGroupHBox"
                                        });
                                        break
                                    }
                                    if (f.parent == c[0]) break;
                                    f = f.parent
                                }
                                F.gotoUpperGroupWithUndo(a.undo, a, c[0]);
                                null != f.prefab ? (y.pushChange(d, f.prefab.edit.prefab_link_entity, "selected", f.prefab.edit.prefab_link_entity.selected), f.prefab.edit.prefab_link_entity.selected = !0) : (y.pushChange(d, f, "selected", f.selected), f.selected = !0);
                                for (; e != c[0];) {
                                    f = e.parent;
                                    if (null != e.prefab) {
                                        y.pushPointChange(d, e.position);
                                        y.pushTransformChange(d,
                                            e.transform);
                                        e.position.x = e.prefab.edit.saved_position.x;
                                        e.position.y = e.prefab.edit.saved_position.y;
                                        e.transform.scale_x = e.prefab.edit.saved_transform.scale_x;
                                        e.transform.scale_y = e.prefab.edit.saved_transform.scale_y;
                                        e.transform.rotation = e.prefab.edit.saved_transform.rotation;
                                        y.pushChange(d, e.prefab.edit.prefab_link_entity.display.contents, "visible", e.prefab.edit.prefab_link_entity.display.contents.get_visible());
                                        e.prefab.edit.prefab_link_entity.display.contents.set_visible(!0);
                                        y.pushChange(d, e.prefab,
                                            "edit", e.prefab.edit);
                                        e.prefab.edit = null;
                                        F.moveEntitiesToDifferentGroupWithUndo(d, e.parent, a.library_group, [e]);
                                        eq.refresh(e);
                                        var h = 0;
                                        for (e = e.prefab.links; h < e.length;) {
                                            var g = e[h];
                                            ++h;
                                            na.refreshIfHasPrefabIncludingParents(g)
                                        }
                                    }
                                    e = f
                                }
                                y.endUndoPack(d);
                                na.refreshDepthsInGroup(a.library_group);
                                na.refreshEntityIncludingChildren(a.stage_group)
                            }
                        }
                    }(e));
                    b.current_group = a.current_group;
                    v.resizeAndDraw(a.main_menu.debug_window)
                };
            ca.openEntityDebugWindow = function(a, b) {
                var c = v.createDebugWindow(b.name, a.main_menu.entity_title_width,
                        !0),
                    d = a.editor_serial_data,
                    e = function(a, b) {
                        var c = 0;
                        for (a = a.classes; c < a.length;) {
                            var d = a[c];
                            ++c;
                            if (E.is(b, d.serial_type)) return d
                        }
                        return null
                    },
                    f = function(c, d, f, h) {
                        null != f && null != f && v.addButton(c, h, function() {
                            for (var c = v.createDebugWindow(h, a.main_menu.entity_title_width, !0), k = e(d, f), m, r, I = 0, g = k.fields; I < g.length;) {
                                var l = g[I];
                                ++I;
                                m = l;
                                r = T.field(f, l.field_name);
                                E.is(r, W) ? (v.addEdit(c, r, "x", h + "." + l.field_name), v.addEdit(c, r, "y", h + "." + l.field_name)) : r instanceof Array && null == r.__enum__ ? (r = [r], 0 < r[0].length &&
                                    E.is(r[0][0], W) && v.addButton(c, h + "." + l.field_name, function(c) {
                                        return function() {
                                            ca.openPointArrayEditDebugWindow(a, b, h + " (re-open if something changed externally)", c[0], 3)
                                        }
                                    }(r))) : k.serial_type == jj && "texture" == l.field_name ? v.addButton(c, "polygon.texture", function() {
                                    return function() {
                                        null != T.field(f, m.field_name) && ca.openEntityPolygonTextureWindow(a, b, aa.__cast(T.field(f, m.field_name), $k))
                                    }
                                }()) : v.addEdit(c, f, l.field_name, h + "." + l.field_name)
                            }
                            if (k.serial_type == jj) {
                                k = v.addButton(c, "drag (transform not supported)",
                                    function() {});
                                var tc = new W,
                                    Mb = [],
                                    n = new W,
                                    p = function() {
                                        var c = -a.mouse_state.current.x + n.x,
                                            d = -a.mouse_state.current.y + n.y;
                                        b.position.x = tc.x - c;
                                        b.position.y = tc.y - d;
                                        for (var e = 0, f = H.minInt(Mb.length, b.polygon.points.length); e < f;) {
                                            var h = e++;
                                            b.polygon.points[h].x = Mb[h].x + c;
                                            b.polygon.points[h].y = Mb[h].y + d
                                        }
                                        Ei.refresh(b);
                                        Lf.refresh(b);
                                        na.refreshGroupBoundsIncludingParents(b)
                                    };
                                k.button.down_callback = function() {
                                    n.x = a.mouse_state.current.x;
                                    n.y = a.mouse_state.current.y;
                                    y.startUndoPack(a.undo);
                                    y.pushPointChange(a.undo,
                                        b.position);
                                    tc.x = b.position.x;
                                    tc.y = b.position.y;
                                    Mb = [];
                                    for (var c = 0, d = b.polygon.points; c < d.length;) {
                                        var e = d[c];
                                        ++c;
                                        y.pushPointChange(a.undo, e);
                                        e = Id.copy(e);
                                        Mb.push(e)
                                    }
                                    y.endUndoPack(a.undo);
                                    a.quick_update_list.push(p)
                                };
                                k.button.up_callback = function() {
                                    Mb = [];
                                    la.remove(a.quick_update_list, p);
                                    na.refreshEntityIncludingChildren(b);
                                    na.refreshGroupBoundsIncludingParents(b)
                                }
                            }
                            ca.openClickedDebugWindow(a.menu_container, c);
                            ca.addEntityEditCallbacks(a, b, c)
                        })
                    };
                v.addView(c, b, "guid");
                v.addEdit(c, b, "name");
                v.addEdit(c,
                    b, "draggable");
                v.addEdit(c, b, "deletable");
                v.addEdit(c, b, "selectable");
                v.addEdit(c, b, "transform_editable");
                v.addEdit(c, b.position, "x", "position.x");
                v.addEdit(c, b.position, "y", "position.y");
                v.addEdit(c, b.transform, "scale_x", "transform.scale_x");
                v.addEdit(c, b.transform, "scale_y", "transform.scale_y");
                v.addEdit(c, b.transform, "rotation", "transform.rotation");
                f(c, d, b.circle, "circle");
                f(c, d, b.polygon, "polygon");
                null != b.additional && (f(c, d, b.additional.line_draw, "additional.line_draw"), f(c, d, b.additional.point_draw,
                    "additional.point_draw"), f(c, d, b.additional.string_draw, "additional.string_draw"));
                null != b.prefab_link && (null != b.prefab_link.prefab_entity ? v.addButton(c, "prefab_link to " + b.prefab_link.prefab_entity.name, function() {
                    ca.openEntityDebugWindow(a, b.prefab_link.prefab_entity)
                }) : v.addView(c, b.prefab_link, "guid", "prefab_link.guid"));
                null != b.parent && v.addButton(c, "parent (" + b.parent.name + ")", function() {
                    ca.openEntityDebugWindow(a, b.parent)
                });
                null != b.group && v.addButton(c, "group.entities", function() {
                    null != b.group &&
                        ca.openEntityListDebugWindow(a, "group.entities", b.group.entities)
                });
                v.addText(c, "Procedures", !1, bc.CENTER);
                null == b.group && (v.addButton(c, "Attach bitmap", function() {
                    var c = v.openTextInputWindow(a.menu_container, 0, 0, "Enter Name:", "", 200, function(c) {
                        y.startUndoPack(a.undo);
                        null == b.bitmap_images && (y.pushChange(a.undo, b, "bitmap_images", b.bitmap_images), b.bitmap_images = F.createDefaultBitmapImageContainerComponent());
                        var d = F.createDefaultBitmapImageComponent();
                        d.source_name = c;
                        d.bitmap_data_source = V.retrieveBitmapData(c,
                            a.bitmap_assets);
                        y.pushContainerSwitch(a.undo, null, b.bitmap_images.container, [d.bitmap]);
                        y.pushArrayInsert(a.undo, b.bitmap_images.images, b.bitmap_images.images.length);
                        b.bitmap_images.images.push(d);
                        Bh.refresh(b);
                        yg.refresh(b);
                        Zb.refresh(b);
                        y.endUndoPack(a.undo)
                    });
                    ca.setToMousePosition(a.menu_container, c)
                }), v.addButton(c, "Edit bitmaps", function() {
                    null != b.bitmap_images && ca.openImageListDebugWindow(a, b, b.bitmap_images.images)
                }), v.addButton(c, "Remove bitmap", function() {
                    null != b.bitmap_images && ca.openImageRemoveDebugWindow(a,
                        b, b.bitmap_images.images)
                }));
                if (null == b.group && null != b.bitmap_images) {
                    var h = function(a, b) {
                        if (0 == a.bitmap_images.images.length) w.trace("warning: entity has no images", {
                            fileName: "EditorUI.hx",
                            lineNumber: 1471,
                            className: "bikas.editor.EditorUI",
                            methodName: "openEntityDebugWindow"
                        });
                        else {
                            var c = a.bitmap_images.images[0].bitmap;
                            null == a.polygon && (a.polygon = F.createDefaultPolygonComponent());
                            a.polygon.body_type = b;
                            var d = c.getBounds(c.parent);
                            b = new W(d.x, d.y);
                            c = new W(d.x + d.width, d.y);
                            var e = new W(d.x + d.width, d.y +
                                d.height);
                            d = new W(d.x, d.y + d.height);
                            a.polygon.points = [b, c, e, d];
                            na.refreshEntityIncludingChildren(a)
                        }
                    };
                    v.addButton(c, "Make dynamic polygon around bitmap (non-undoable)", function() {
                        h(b, kc.DYNAMIC)
                    });
                    v.addButton(c, "Make static polygon around bitmap (non-undoable)", function() {
                        h(b, kc.STATIC)
                    })
                }
                if (null != b.polygon) {
                    v.addButton(c, "Apply transform and center", function() {
                        y.startUndoPack(a.undo);
                        F.applyTransformToPolygonPointsAndCenter(b, a.undo);
                        v.refreshAllFields(c);
                        y.endUndoPack(a.undo)
                    });
                    f = "Apply transform and cut polygon by left visible stage;Apply transform and cut polygon by top visible stage;Reverse polygon points;Apply transform and do external polygon bool operation: union;Apply transform and do external polygon bool operation: intersect;Apply transform and do external polygon bool operation: difference;Apply transform and do external polygon bool operation: xor;Merge 2 selected polygons (unstable);Generate perlin terrain".split(";");
                    d = u.createText("Custom Operation (some are unstable!):", bc.LEFT, c.setup.width, c.setup.height, c.setup.padding);
                    var k = null,
                        m = f[0];
                    f = u.createSelectBox(m, f, c.setup.width, c.setup.height, c.setup.max_content_height, c.setup.width, c.setup.padding, function(a) {
                        m = a;
                        null != k && u.setText(k, a)
                    });
                    u.addToWindowBox(c.window, d);
                    u.addToWindowBox(c.window, f);
                    k = v.addButton(c, "Perform custom operation", function() {
                        var d = m;
                        if ("Apply transform and cut polygon by left visible stage" == d) y.startUndoPack(a.undo), F.applyTransformAndCutPolygonWithUndo(a,
                            b, !0), y.endUndoPack(a.undo), v.close(c);
                        else if ("Apply transform and cut polygon by top visible stage" == d) y.startUndoPack(a.undo), F.applyTransformAndCutPolygonWithUndo(a, b, !1), y.endUndoPack(a.undo), v.close(c);
                        else if ("Apply transform and cut 1 other polygon (converts to Int points!)" == d) y.startUndoPack(a.undo), F.applyTransformAndClipAnotherPolygonUsingThisPolygon(a, b, Ze.CT_DIFFERENCE), y.endUndoPack(a.undo);
                        else if ("Reverse polygon points" == d) {
                            y.startUndoPack(a.undo);
                            y.pushChange(a.undo, b.polygon, "points",
                                b.polygon.points);
                            for (var e = [], f = 0, h = b.polygon.points; f < h.length;) {
                                var k = h[f];
                                ++f;
                                e.push(H.copyPoint(k))
                            }
                            e.reverse();
                            b.polygon.points = e;
                            Lf.refresh(b);
                            y.endUndoPack(a.undo)
                        }
                        if ("Apply transform and do external polygon bool operation: union" == d) y.startUndoPack(a.undo), F.applyTransformAndDoBoolOperationOnPolygon(a, b, Rd.BoolUnion), y.endUndoPack(a.undo);
                        else if ("Apply transform and do external polygon bool operation: intersect" == d) y.startUndoPack(a.undo), F.applyTransformAndDoBoolOperationOnPolygon(a, b,
                            Rd.BoolIntersect), y.endUndoPack(a.undo);
                        else if ("Apply transform and do external polygon bool operation: difference" == d) y.startUndoPack(a.undo), F.applyTransformAndDoBoolOperationOnPolygon(a, b, Rd.BoolDifference), y.endUndoPack(a.undo);
                        else if ("Apply transform and do external polygon bool operation: xor" == d) y.startUndoPack(a.undo), F.applyTransformAndDoBoolOperationOnPolygon(a, b, Rd.BoolXor), y.endUndoPack(a.undo);
                        else if ("Merge 2 selected polygons (unstable)" == d)
                            if (d = a.current_group.group.edit.selected_entities,
                                2 == d.length) {
                                e = !0;
                                for (f = 0; f < d.length;)
                                    if (h = d[f], ++f, null == h.polygon) {
                                        w.trace("warning: entity does not contain polygon", {
                                            fileName: "EditorUI.hx",
                                            lineNumber: 1602,
                                            className: "bikas.editor.EditorUI",
                                            methodName: "openEntityDebugWindow"
                                        });
                                        e = !1;
                                        break
                                    } e && (e = d[0], d = d[1], y.startUndoPack(a.undo), F.merge2Polygons(a, e, d), y.endUndoPack(a.undo))
                            } else w.trace("warning: wrong number of selected polygons (must be 2)", {
                                fileName: "EditorUI.hx",
                                lineNumber: 1615,
                                className: "bikas.editor.EditorUI",
                                methodName: "openEntityDebugWindow"
                            });
                        else "Generate perlin terrain" == d && (d = Zc.createPolygonUI(a, b), ca.openClickedDebugWindow(a.menu_container, d))
                    });
                    u.setText(k, m)
                }
                null != b.group && v.addButton(c, "Convert all inner body_type to NapeBodyType.DYNAMIC", function() {
                    var c = 0,
                        d = null,
                        e = d = function(b) {
                            if (null != b.group)
                                for (var e = 0, f = b.group.entities; e < f.length;) {
                                    var h = f[e];
                                    ++e;
                                    d(h)
                                }
                            null != b.polygon && b.polygon.body_type != kc.DYNAMIC && (y.pushChange(a.undo, b.polygon, "body_type", b.polygon.body_type), b.polygon.body_type = kc.DYNAMIC, c += 1);
                            null != b.circle && b.circle.body_type !=
                                kc.DYNAMIC && (y.pushChange(a.undo, b.circle, "body_type", b.circle.body_type), b.circle.body_type = kc.DYNAMIC, c += 1)
                        };
                    y.startUndoPack(a.undo);
                    e(b);
                    w.trace("converted " + c + " entities", {
                        fileName: "EditorUI.hx",
                        lineNumber: 1651,
                        className: "bikas.editor.EditorUI",
                        methodName: "openEntityDebugWindow"
                    });
                    y.endUndoPack(a.undo)
                });
                ca.addEntityEditCallbacks(a, b, c)
            };
            ca.addEntityEditCallbacks = function(a, b, c) {
                c.callbacks.before_apply = function(b) {
                    y.startUndoPack(a.undo)
                };
                c.callbacks.debug_field_before_apply = function(b) {
                    y.pushChange(a.undo,
                        b.object, b.field_name, null)
                };
                c.callbacks.debug_field_after_apply = function(b) {
                    if (E.is(b.object, Je) && "source_name" == b.field_name) {
                        var c = aa.__cast(T.field(b.object, b.field_name), String);
                        aa.__cast(b.object, Je).bitmap_data_source = V.retrieveBitmapData(c, a.bitmap_assets)
                    }
                };
                c.callbacks.after_apply = function(c) {
                    y.endUndoPack(a.undo);
                    null != b.container_link && (na.refreshIfHasPrefabIncludingParents(b), na.refreshEntityIncludingChildren(b))
                };
                ca.openClickedDebugWindow(a.menu_container, c)
            };
            ca.refreshSpectrumSwitch =
                function(a, b) {
                    for (var c = 0, d = 0; d < b.length;) {
                        var e = b[d];
                        ++d; - 1 != e.spectrum_names.indexOf(a.name) && ++c
                    }
                    u.setText(a.debug_field.name_text, a.name + " (" + c + ")")
                };
            ca.generateArchetypes = function(a, b, c, d, e, f) {
                for (var h = 0; h < c.length;) {
                    var k = c[h];
                    ++h;
                    u.destroyElement(k)
                }
                c.splice(0, c.length);
                u.resizeToFitAll(d);
                u.draw(d);
                var m = [],
                    r = [];
                for (h = 0; h < e.length;) k = e[h], ++h, k.type != zf.On && k.type != zf.Forced || m.push(k), k.type == zf.Forced && r.push(k.name);
                h = function(a, b) {
                    for (a = 0; a < f.length;) {
                        var c = f[a];
                        ++a;
                        if (c.spectrum_names.length ==
                            b.length) {
                            for (var d = !0, e = 0, h = c.spectrum_names.length; e < h;) {
                                var k = e++;
                                if (c.spectrum_names[k] != b[k]) {
                                    d = !1;
                                    break
                                }
                            }
                            if (d) return c
                        }
                    }
                    return null
                };
                k = Math.round(Math.pow(2, m.length));
                for (var I = [], g = 1; g < k;) {
                    for (var l = g++, Ba = [], n = 0, p = m.length; n < p;) {
                        var x = n++;
                        1 == (l & 1 << x) >> x && Ba.push(m[x].name)
                    }
                    I.push(Ba)
                }
                m = [];
                for (g = 0; g < I.length;) {
                    l = I[g];
                    ++g;
                    Ba = !0;
                    if (0 < r.length)
                        for (Ba = !1, n = 0; n < r.length;)
                            if (p = r[n], ++n, -1 != l.indexOf(p)) {
                                Ba = !0;
                                break
                            } Ba && m.push(l)
                }
                I = m;
                var w = I.slice(),
                    z = function(a, b) {
                        for (var c = 0, d = 0; d < a.length;) {
                            var e =
                                a[d];
                            ++d;
                            if (e.length == b.length) {
                                for (var f = !0, h = 0, k = e.length; h < k;) {
                                    var m = h++;
                                    e[m] != b[m] && (f = !1)
                                }
                                if (f) return c
                            }++c
                        }
                        return -1
                    };
                I.sort(function(a, b) {
                    if (a.length > b.length) return 1;
                    if (a.length < b.length) return -1;
                    a = z(w, a);
                    b = z(w, b);
                    return a > b ? 1 : a < b ? -1 : 0
                });
                r = 0;
                for (m = I.length; r < m;)
                    if (l = r++, g = [I[l]], 128 >= l) l = [h(f, g[0])], Ba = null != l[0], g = u.createCheckBox(E.string(g[0]) + "", Ba, a, b.height, b.padding, function(a, b) {
                        return function(c) {
                            c ? null == a[0] && (c = new Xp, c.spectrum_names = b[0].slice(), f.push(c), a[0] = c) : null != a[0] &&
                                (la.remove(f, a[0]), a[0] = null);
                            for (c = 0; c < e.length;) {
                                var d = e[c];
                                ++c;
                                ca.refreshSpectrumSwitch(d, f)
                            }
                        }
                    }(l, g)), u.addToWindowBox(d, g), c.push(g);
                    else {
                        a = u.createText("variation limit exceeded: 128, count: " + k, bc.LEFT, a, b.height, b.padding);
                        u.addToWindowBox(d, a);
                        c.push(a);
                        break
                    } u.resizeToFitAll(d);
                u.draw(d)
            };
            ca.openBitmapCreationWindow = function(a, b, c, d, e, f, h, k, m, r, I) {
                null == I && (I = 100);
                null == r && (r = !1);
                d = ca.createCreationWindow(c, d, e, c.max_content_height);
                var g = d.window_box.contents,
                    l = f;
                f = e + 40;
                r && (f = 90);
                f = u.createCheckBox("place on top",
                    l, f, c.height, c.padding,
                    function(a) {
                        l = a
                    });
                u.addToBox(g, f);
                var Ba = null;
                f = null;
                if (r) {
                    Ba = [];
                    g.box.layout_type = Be.HBOX;
                    for (var n = r = 0; n < k.length;) {
                        var p = k[n];
                        ++n;
                        p = V.retrieveBitmapData(p, a.bitmap_assets);
                        p = V.createBitmapUsingSource(p);
                        p.set_x(0);
                        p.set_y(0);
                        r += p.get_width();
                        Ba.push(p)
                    }
                    if (null != m)
                        for (f = [], n = 0; n < m.length;) {
                            p = m[n];
                            ++n;
                            for (var x = 0, w = a.library_group.group.entities; x < w.length;) {
                                var z = w[x];
                                ++x;
                                if (z.name == p) {
                                    p = V.createBitmapUsingSource(z.prefab.bitmap_data_source);
                                    p.set_x(0);
                                    p.set_y(0);
                                    r += p.get_width();
                                    f.push(p);
                                    break
                                }
                            }
                        }
                    n = e / r;
                    r = [];
                    if (null != Ba)
                        for (p = 0; p < Ba.length;) x = Ba[p], ++p, r.push(x);
                    if (null != f)
                        for (p = 0; p < f.length;) x = f[p], ++p, r.push(x);
                    for (x = p = 0; x < r.length;) w = r[x], ++x, z = w, z.set_width(z.get_width() * n), z = w, z.set_height(z.get_height() * n), w.get_height() >= p && (p = w.get_height());
                    if (p > I)
                        for (I /= p, n = 0; n < r.length;) p = r[n], ++n, x = p, x.set_width(x.get_width() * I), p.set_height(p.get_height() * I)
                }
                I = 0;
                for (r = k.length; I < r;) p = I++, x = [k[p]], n = null, null != Ba && (n = Ba[p]), p = x[0], x = function(b) {
                    return function() {
                        for (var c = null,
                                d = 0, e = a.library_data.default_bitmap_offsets; d < e.length;) {
                            var f = e[d];
                            ++d;
                            if (f.name == b[0]) {
                                c = f;
                                break
                            }
                        }
                        c = F.createBitmapEntity(b[0], V.retrieveBitmapData(b[0], a.bitmap_assets), c);
                        c.transform_editable = h;
                        return c
                    }
                }(x), w = function() {
                    return function() {
                        return l
                    }
                }(), ca.addCreationButton(a, c, g, e, p, x, w, n);
                if (null != m)
                    for (k = 0, Ba = m.length; k < Ba;)
                        if (n = k++, I = m[n], r = null, null != f && (r = f[n]), null != a.library_group)
                            for (n = 0, p = a.library_group.group.entities; n < p.length;) x = p[n], ++n, x.name == I && ca.addPrefabLinkCreationButton(x,
                                a, c, g, e, x.name, h, r,
                                function() {
                                    return l
                                });
                ca.showCreationWindow(a, b, d);
                return d
            };
            ca.openEditorDebugWindow = function(a, b, c) {
                c = v.createDebugWindow("Editor Debug", c.title_button_width, !0, cc.DESTROY);
                v.addButton(c, "show warning if entites with same guid exist", function() {
                    var b = !1,
                        c = null,
                        d = c = function(a, d) {
                            if (-1 == d.indexOf(a.guid)) {
                                if (d.push(a.guid), null != a.group) {
                                    var e = 0;
                                    for (a = a.group.entities; e < a.length;) {
                                        var f = a[e];
                                        ++e;
                                        c(f, d)
                                    }
                                }
                            } else b = !0, w.trace("warning: found entity with same guid: " + a.name + ", guid = " +
                                a.guid, {
                                    fileName: "EditorUI.hx",
                                    lineNumber: 2033,
                                    className: "bikas.editor.EditorUI",
                                    methodName: "openEditorDebugWindow"
                                })
                        };
                    b || w.trace("all seems to be OK", {
                        fileName: "EditorUI.hx",
                        lineNumber: 2037,
                        className: "bikas.editor.EditorUI",
                        methodName: "openEditorDebugWindow"
                    });
                    d(a.stage_group, [])
                });
                v.addButton(c, "show depth_cache for library entities", function() {
                    w.trace("depths:", {
                        fileName: "EditorUI.hx",
                        lineNumber: 2042,
                        className: "bikas.editor.EditorUI",
                        methodName: "openEditorDebugWindow"
                    });
                    for (var b = 0, c = a.library_group.group.entities; b <
                        c.length;) {
                        var d = c[b];
                        ++b;
                        w.trace(d.name + ": " + d.display.depth_cache, {
                            fileName: "EditorUI.hx",
                            lineNumber: 2044,
                            className: "bikas.editor.EditorUI",
                            methodName: "openEditorDebugWindow"
                        })
                    }
                });
                v.addButton(c, "print link count for each prefab", function() {
                    w.trace("link count:", {
                        fileName: "EditorUI.hx",
                        lineNumber: 2048,
                        className: "bikas.editor.EditorUI",
                        methodName: "openEditorDebugWindow"
                    });
                    for (var b = 0, c = a.library_group.group.entities; b < c.length;) {
                        var d = c[b];
                        ++b;
                        w.trace(d.name + ": " + d.prefab.links.length, {
                            fileName: "EditorUI.hx",
                            lineNumber: 2050,
                            className: "bikas.editor.EditorUI",
                            methodName: "openEditorDebugWindow"
                        })
                    }
                });
                var d = null,
                    e = d = function(a, b) {
                        w.trace(b + a.name, {
                            fileName: "EditorUI.hx",
                            lineNumber: 2054,
                            className: "bikas.editor.EditorUI",
                            methodName: "openEditorDebugWindow"
                        });
                        if (null != a.group) {
                            var c = 0;
                            for (a = a.group.entities; c < a.length;) {
                                var e = a[c];
                                ++c;
                                d(e, b + "-")
                            }
                        }
                    };
                v.addButton(c, "reduce size of all markers", function() {
                    y.startUndoPack(a.undo);
                    for (var b = 0, c = a.stage_group.group.entities; b < c.length;) {
                        var d = c[b];
                        ++b;
                        null != d.additional &&
                            (null != d.additional.string_draw && (y.pushChange(a.undo, d.additional.string_draw, "size", d.additional.string_draw.size), y.pushChange(a.undo, d.additional.string_draw, "offset_y", d.additional.string_draw.offset_y), d.additional.string_draw.size = 10, d.additional.string_draw.offset_y = -12), null != d.additional.point_draw && (y.pushChange(a.undo, d.additional.point_draw, "size", d.additional.point_draw.size), d.additional.point_draw.size = 6))
                    }
                    y.endUndoPack(a.undo);
                    na.refreshEntityIncludingChildren(a.stage_group)
                });
                v.addButton(c,
                    "print library_group tree",
                    function() {
                        e(a.library_group, "")
                    });
                v.addButton(c, "print stage_group tree", function() {
                    e(a.stage_group, "")
                });
                v.addView(c, a, "library_group");
                v.addView(c, a, "stage_group");
                v.addView(c, a.container, "stage");
                v.resizeAndDraw(c);
                b = u.getTopRightPosition(b.window);
                v.addToContainer(a.menu_container, c, b.x, b.y)
            };
            ca.openTextInputWindow = function(a, b, c, d) {
                a = v.openTextInputWindow(a.menu_container, a.size.width / 2, a.size.height / 2, b, c, 200, d);
                b = a.window.sprite;
                b.set_x(b.get_x() - a.window.size.width /
                    2);
                b = a.window.sprite;
                b.set_y(b.get_y() - a.window.size.height / 2)
            };
            ca.openEntityPolygonTextureWindow = function(a, b, c) {
                var d = v.createDebugWindow("texture", a.main_menu.entity_title_width, !0);
                v.addEdit(d, c, "fill_source_name");
                v.addEdit(d, c, "line_source_name");
                v.addEdit(d, c, "use_sutherland_hodgman");
                ca.openClickedDebugWindow(a.menu_container, d);
                ca.addEntityEditCallbacks(a, b, d)
            };
            ca.openImageListDebugWindow = function(a, b, c) {
                for (var d = v.createDebugWindow("edit image", a.main_menu.entity_title_width, !0), e = 0; e <
                    c.length;) {
                    var f = [c[e]];
                    ++e;
                    v.addButton(d, f[0].source_name, function(c) {
                        return function() {
                            var d = v.createDebugWindow("image", a.main_menu.entity_title_width);
                            v.addEdit(d, c[0], "source_name");
                            v.addEdit(d, c[0], "offset_x");
                            v.addEdit(d, c[0], "offset_y");
                            v.addEdit(d, c[0], "rotation");
                            var e = function() {
                                return function() {}
                            }();
                            e = v.addButton(d, "drag", e);
                            var f = new W,
                                h = function(c) {
                                    return function() {
                                        c[0].offset_x = a.mouse_state.current.x - f.x;
                                        c[0].offset_y = a.mouse_state.current.y - f.y;
                                        v.refreshDebugFields(d.edit_fields);
                                        Bh.refresh(b)
                                    }
                                }(c);
                            e.button.down_callback = function(b) {
                                return function() {
                                    f.x = a.mouse_state.current.x - b[0].offset_x;
                                    f.y = a.mouse_state.current.y - b[0].offset_y;
                                    y.startUndoPack(a.undo);
                                    y.pushChange(a.undo, b[0], "offset_x", b[0].offset_x);
                                    y.pushChange(a.undo, b[0], "offset_y", b[0].offset_y);
                                    y.endUndoPack(a.undo);
                                    a.quick_update_list.push(h)
                                }
                            }(c);
                            e.button.up_callback = function() {
                                return function() {
                                    la.remove(a.quick_update_list, h);
                                    na.refreshEntityIncludingChildren(b);
                                    na.refreshGroupBoundsIncludingParents(b)
                                }
                            }();
                            e = function(b) {
                                return function() {
                                    for (var c = null, d = 0, e = a.library_data.default_bitmap_offsets; d < e.length;) {
                                        var f = e[d];
                                        ++d;
                                        if (f.name == b[0].source_name) {
                                            f.offset_x = b[0].offset_x;
                                            f.offset_y = b[0].offset_y;
                                            c = f;
                                            break
                                        }
                                    }
                                    null == c && (c = new al, c.name = b[0].source_name, c.offset_x = b[0].offset_x, c.offset_y = b[0].offset_y, a.library_data.default_bitmap_offsets.push(c))
                                }
                            }(c);
                            v.addButton(d, "set as default bitmap offset", e);
                            ca.openClickedDebugWindow(a.menu_container, d);
                            ca.addEntityEditCallbacks(a, b, d)
                        }
                    }(f))
                }
                ca.openClickedDebugWindow(a.menu_container,
                    d);
                ca.addEntityEditCallbacks(a, b, d)
            };
            ca.openImageRemoveDebugWindow = function(a, b, c) {
                for (var d = v.createDebugWindow("remove images", a.main_menu.entity_title_width, !0), e = 0; e < c.length;) {
                    var f = [c[e]];
                    ++e;
                    var h = f[0].source_name;
                    f = function(b) {
                        return function() {
                            var e = c.indexOf(b[0]); - 1 != e && (y.startUndoPack(a.undo), y.pushArrayRemove(a.undo, c, e), c.splice(e, 1), y.endUndoPack(a.undo), v.applyChanges(d), v.close(d))
                        }
                    }(f);
                    v.addButton(d, h, f)
                }
                ca.openClickedDebugWindow(a.menu_container, d);
                ca.addEntityEditCallbacks(a,
                    b, d)
            };
            ca.openEntityListDebugWindow = function(a, b, c) {
                b = v.createDebugWindow(b, a.main_menu.debug_window.setup.title_button_width, !0);
                for (var d = 0; d < c.length;) {
                    var e = [c[d]];
                    ++d;
                    v.addButton(b, e[0].name, function(b) {
                        return function() {
                            ca.openEntityDebugWindow(a, b[0])
                        }
                    }(e))
                }
                ca.openClickedDebugWindow(a.menu_container, b)
            };
            ca.openPointArrayEditDebugWindow = function(a, b, c, d, e) {
                null == e && (e = 0);
                var f = d.slice(),
                    h = v.createDebugWindow(c, a.main_menu.entity_title_width, !0),
                    k = v.getWindowSetupCopy(h.setup),
                    m = [];
                k.width = (h.setup.width -
                    2 * h.setup.height - 3 * k.padding) / 2;
                var r = null;
                c = r = function(a, b) {
                    var c = new Hs;
                    c.point = a;
                    c.hbox = u.createHBox(!0, !0, k.width, k.height, 0);
                    c.field_x = v.createDebugField(!0, h, k, k.width, "x:", a, "x", a.x);
                    c.field_y = v.createDebugField(!0, h, k, k.width, "y:", a, "y", a.y);
                    h.all_fields.push(c.field_x);
                    h.all_fields.push(c.field_y);
                    h.edit_fields.push(c.field_x);
                    h.edit_fields.push(c.field_y);
                    c.add_button = u.createButton("+", k.height, k.height, k.padding, function() {
                        var a = f.indexOf(c.point);
                        if (-1 != a) {
                            var b = new W(c.point.x, c.point.y),
                                e = new Wk;
                            e.type = qf.INSERT;
                            e.array = d;
                            e.index = a;
                            e.value = b;
                            m.push(e);
                            f.splice(a, 0, b);
                            r(b, a)
                        } else v.removeAndDestroyDebugField(h, c.field_x), v.removeAndDestroyDebugField(h, c.field_y), u.destroyElement(c.hbox);
                        v.resizeAndDraw(h)
                    });
                    c.remove_button = u.createButton("-", k.height, k.height, k.padding, function() {
                        if (f.length > e) {
                            var a = f.indexOf(c.point);
                            if (-1 != a) {
                                var b = new Wk;
                                b.type = qf.REMOVE;
                                b.array = d;
                                b.index = a;
                                b.value = d[a];
                                f.splice(a, 1);
                                m.push(b)
                            }
                            v.removeAndDestroyDebugField(h, c.field_x);
                            v.removeAndDestroyDebugField(h,
                                c.field_y);
                            u.destroyElement(c.hbox);
                            v.resizeAndDraw(h)
                        }
                    });
                    c.add_button.text.format.size = 15;
                    c.add_button.text.align = bc.CENTER;
                    c.remove_button.text.format.size = 15;
                    c.remove_button.text.align = bc.CENTER;
                    u.addToBox(c.hbox, c.field_x.element);
                    u.addToBox(c.hbox, c.field_y.element);
                    u.addToBox(c.hbox, c.add_button);
                    u.addToBox(c.hbox, c.remove_button);
                    u.insertToBox(h.window.window_box.contents, c.hbox, b);
                    return c
                };
                for (var I = 0, g = 0; g < f.length;) {
                    var l = f[g];
                    ++g;
                    c(l, I);
                    ++I
                }
                var Ba = [];
                h.callbacks.before_apply = function(a) {
                    Ba = []
                };
                h.callbacks.debug_field_before_apply = function(a) {
                    a = f.indexOf(a.object);
                    for (var b = !1, c = 0; c < Ba.length;) {
                        var d = Ba[c];
                        ++c;
                        if (-1 != d.index) {
                            b = !0;
                            break
                        }
                    }
                    b || (b = new Is, b.index = a, b.point = new W(f[a].x, f[a].y), Ba.push(b))
                };
                var n = function(a) {
                    var b = new Di;
                    b.type = Eb.ARRAY_CHANGED;
                    b.array = a;
                    return b
                };
                h.callbacks.after_apply = function(c) {
                    y.startUndoPack(a.undo);
                    for (c = 0; c < Ba.length;) {
                        var e = Ba[c];
                        ++c;
                        var h = new Wk;
                        h.type = qf.CHANGE;
                        h.array = f;
                        h.index = e.index;
                        h.value = e.point;
                        m.push(h)
                    }
                    for (c = 0; c < m.length;) switch (e = m[c],
                        ++c, Q.enumIndex(e.type)) {
                        case 0:
                            h = f[e.index].x;
                            var k = f[e.index].y,
                                r = aa.__cast(e.value, W).x,
                                I = aa.__cast(e.value, W).y;
                            d[e.index].x = r;
                            d[e.index].y = I;
                            y.pushChange(a.undo, d[e.index], "x", d[e.index].x);
                            y.pushChange(a.undo, d[e.index], "y", d[e.index].y);
                            d[e.index].x = h;
                            d[e.index].y = k;
                            break;
                        case 1:
                            y.pushUndoChangeDirectly(a.undo, n(e));
                            d.splice(e.index, 0, e.value);
                            break;
                        case 2:
                            y.pushUndoChangeDirectly(a.undo, n(e)), d.splice(e.index, 1)
                    }
                    m = [];
                    y.endUndoPack(a.undo);
                    na.refreshIfHasPrefabIncludingParents(b);
                    na.refreshEntityIncludingChildren(a.stage_group)
                };
                ca.openClickedDebugWindow(a.menu_container, h)
            };
            ca.addPrefabLinkCreationButton = function(a, b, c, d, e, f, h, k, m) {
                return ca.addCreationButton(b, c, d, e, a.name, function() {
                    if (-1 == b.library_group.group.entities.indexOf(a)) return w.trace("warning: prefab does not exist anymore (refresh menu)", {
                        fileName: "EditorUI.hx",
                        lineNumber: 2360,
                        className: "bikas.editor.EditorUI",
                        methodName: "addPrefabLinkCreationButton"
                    }), null;
                    var c = !0;
                    if (null != b.current_group.prefab)
                        if (b.current_group == a) w.trace("can't put same prefab in same prefab", {
                            fileName: "EditorUI.hx",
                            lineNumber: 2366,
                            className: "bikas.editor.EditorUI",
                            methodName: "addPrefabLinkCreationButton"
                        }), c = !1;
                        else {
                            var d = null;
                            d = function(a, b) {
                                if (null != a.group)
                                    for (var c = 0, e = a.group.entities; c < e.length;) {
                                        var f = e[c];
                                        ++c;
                                        if (d(f, b)) return !0
                                    }
                                return null != a.prefab_link && (a.prefab_link.guid == b.guid || a.prefab_link.prefab_entity == b || null != a.prefab_link.prefab_entity && d(a.prefab_link.prefab_entity, b)) ? !0 : !1
                            };
                            d(a, b.current_group) && (w.trace("this prefab is contained within prefab you are trying to add, can't add as it would cause infinite turtles all the way down", {
                                fileName: "EditorUI.hx",
                                lineNumber: 2395,
                                className: "bikas.editor.EditorUI",
                                methodName: "addPrefabLinkCreationButton"
                            }), c = !1)
                        } return c ? (c = F.createPrefabLinkEntity(b.library_group, a), c.transform_editable = h, c) : null
                }, function() {
                    return null != m ? m() : b.place_prefabs_on_top
                }, k)
            };
            ca.addCreationButton = function(a, b, c, d, e, f, h, k) {
                var m = null != k ? u.createBitmapButton(k, b.padding, null) : u.createButton(e, d + 2 * b.height, b.height, b.padding, null);
                u.addToBox(c, m);
                var r = !1;
                m.button.up_callback = function() {
                    r = !1
                };
                m.button.out_callback =
                    function() {
                        if (m.button.downed && !r && (r = !0, null != a.stage_group)) {
                            var b = f();
                            if (null != b) {
                                y.startUndoPack(a.undo);
                                if (0 < a.current_group.group.edit.selected_entities.length)
                                    for (var c = 0, d = a.current_group.group.edit.selected_entities.slice(); c < d.length;) {
                                        var e = d[c];
                                        ++c;
                                        y.pushChange(a.undo, e, "selected", e.selected);
                                        Zb.remove(e)
                                    }
                                b.selected = !0;
                                b.position.x = a.local_mouse.current.x;
                                b.position.y = a.local_mouse.current.y;
                                F.addEntityToGroup(a.current_group, b);
                                na.addEntity(b);
                                $c.add(b, F.getSnappedPosition(a.local_mouse.current,
                                    a.stage_settings.mouse_snap_size));
                                y.pushEntitiesCreated(a.undo, [b]);
                                null != h && (h() || F.changeEntitiesDepth(a.undo, !0, !1, !0, [b]));
                                y.endUndoPack(a.undo);
                                a.mouse_state.button_state = ya.DRAGGED
                            }
                        }
                    };
                return m
            };
            ca.showCreationWindow = function(a, b, c) {
                u.resizeToFitAll(c);
                u.draw(c);
                b = u.getTopRightPosition(b.window);
                u.addToContainer(a.menu_container, c, b.x, b.y)
            };
            ca.createCreationWindow = function(a, b, c, d) {
                return u.createWindowBox(b, cc.DESTROY, a.height, c, a.max_content_width, d, a.slider_size, a.padding, null)
            };
            ca.createHBox =
                function() {
                    return u.createBox(Be.HBOX, !1, !0, 0, 0, 0)
                };
            ca.setTextForExpandBox = function(a, b) {
                a.expand_box.title_button.text.field.set_text(b);
                u.draw(a)
            };
            ca.addButtonToHBox = function(a, b, c, d, e, f) {
                b = u.createButton(b, c, d, e, f);
                u.addToBox(a, b);
                return b
            };
            ca.addTextToHBox = function(a, b, c, d, e) {
                b = u.createText(b, bc.LEFT, c, d, e);
                u.addToBox(a, b);
                return b
            };
            ca.addMenuToContainer = function(a, b) {
                var c = a.setup.padding;
                v.addToContainer(b, a, c, c)
            };
            ca.openClickedDebugWindow = function(a, b) {
                v.resizeAndDraw(b);
                var c = v.getDefaultDebugWindowOpenPositionX(a,
                        b.setup),
                    d = v.getDefaultDebugWindowOpenPositionY(a, b.setup);
                v.addToContainer(a, b, c, d)
            };
            ca.setToMousePosition = function(a, b) {
                b.window.sprite.set_x(v.getDefaultDebugWindowOpenPositionX(a, b.setup));
                b.window.sprite.set_y(v.getDefaultDebugWindowOpenPositionY(a, b.setup))
            };
            ca.clearStageMenu = function(a) {
                for (var b = 0, c = a.stage_fields; b < c.length;) {
                    var d = c[b];
                    ++b;
                    v.removeAndDestroyDebugField(a.debug_window, d)
                }
                a.stage_fields = [];
                b = 0;
                for (c = a.stage_elements; b < c.length;) d = c[b], ++b, u.destroyElement(d);
                null != a.current_stage_hbox &&
                    u.destroyElement(a.current_stage_hbox);
                a.stage_elements = [];
                a.current_stage_hbox = null;
                a.current_group_hbox = null
            };
            ca.clearLibraryMenu = function(a) {
                null != a.current_library_hbox && u.destroyElement(a.current_library_hbox);
                a.current_library_hbox = null
            };
            var y = function() {};
            g["bikas.editor.EditorUndo"] = y;
            y.__name__ = ["bikas", "editor", "EditorUndo"];
            y.createUndoList = function() {
                var a = new Es;
                a.undo_packs = [];
                a.redo_packs = [];
                return a
            };
            y.startPack = function(a) {
                null != a.current_pack ? w.trace("warning: current pack is not ended", {
                    fileName: "EditorUndo.hx",
                    lineNumber: 25,
                    className: "bikas.editor.EditorUndo",
                    methodName: "startPack"
                }) : (a.current_pack = new Ds, a.current_pack.changes = [])
            };
            y.startUndoPack = function(a) {
                y.startPack(a)
            };
            y.endPack = function(a, b) {
                if (null == a.current_pack) return w.trace("warning: current pack is not started", {
                    fileName: "EditorUndo.hx",
                    lineNumber: 38,
                    className: "bikas.editor.EditorUndo",
                    methodName: "endPack"
                }), !1;
                if (0 < a.current_pack.changes.length) return b.push(a.current_pack), a.current_pack = null, !0;
                a.current_pack =
                    null;
                return !1
            };
            y.endUndoPack = function(a) {
                y.endPack(a, a.undo_packs) && (y.destroyEntitiesInPacks(a.redo_packs), a.redo_packs = [])
            };
            y.destroyEntitiesInPacks = function(a) {
                for (var b = 0; b < a.length;) {
                    var c = a[b];
                    ++b;
                    var d = 0;
                    for (c = c.changes; d < c.length;) {
                        var e = c[d];
                        ++d;
                        if (e.type == Eb.ENTITIES_DESTROYED) {
                            var f = 0;
                            for (e = e.entities.entities; f < e.length;) {
                                var h = e[f];
                                ++f;
                                if (null != h.group)
                                    for (var k = 0, m = h.group.entities; k < m.length;) {
                                        var r = m[k];
                                        ++k;
                                        na.removeEntityIncludingChildren(r)
                                    }
                                F.destroyEntityIncludingChildren(h)
                            }
                        }
                    }
                }
            };
            y.clear = function(a) {
                y.destroyEntitiesInPacks(a.undo_packs);
                y.destroyEntitiesInPacks(a.redo_packs);
                a.current_pack = null;
                a.undo_packs = [];
                a.redo_packs = []
            };
            y.pushUndoChangeDirectly = function(a, b) {
                null == a.current_pack ? w.trace("warning: current pack is not started", {
                    fileName: "EditorUndo.hx",
                    lineNumber: 95,
                    className: "bikas.editor.EditorUndo",
                    methodName: "pushUndoChangeDirectly"
                }) : a.current_pack.changes.push(b)
            };
            y.pushChange = function(a, b, c, d) {
                if (null == a.current_pack) w.trace("warning: current pack is not started", {
                    fileName: "EditorUndo.hx",
                    lineNumber: 104,
                    className: "bikas.editor.EditorUndo",
                    methodName: "pushChange"
                });
                else {
                    var e = new Di;
                    e.type = Eb.INSTANCE_FIELD_CHANGED;
                    e.field = new ys;
                    e.field.instance = b;
                    e.field.field_name = c;
                    null != d ? (T.field(b, c) != d && w.trace("warning: value mismatch", {
                        fileName: "EditorUndo.hx",
                        lineNumber: 114,
                        className: "bikas.editor.EditorUndo",
                        methodName: "pushChange"
                    }), e.field.value = d) : e.field.value = T.field(b, c);
                    y.pushUndoChangeDirectly(a, e)
                }
            };
            y.pushPointChange = function(a, b) {
                y.pushChange(a, b, "x",
                    b.x);
                y.pushChange(a, b, "y", b.y)
            };
            y.pushTransformChange = function(a, b) {
                y.pushChange(a, b, "scale_x", b.scale_x);
                y.pushChange(a, b, "scale_y", b.scale_y);
                y.pushChange(a, b, "rotation", b.rotation)
            };
            y.pushArray = function(a, b, c, d) {
                if (null == a.current_pack) w.trace("warning: current pack is not started", {
                    fileName: "EditorUndo.hx",
                    lineNumber: 136,
                    className: "bikas.editor.EditorUndo",
                    methodName: "pushArray"
                });
                else {
                    var e = new Di;
                    e.type = Eb.ARRAY_CHANGED;
                    e.array = new Wk;
                    e.array.type = d;
                    e.array.array = b;
                    e.array.index = c;
                    d == qf.CHANGE ?
                        e.array.value = b[c] : d == qf.REMOVE && (e.array.value = b[c]);
                    y.pushUndoChangeDirectly(a, e)
                }
            };
            y.pushArrayInsert = function(a, b, c) {
                y.pushArray(a, b, c, qf.INSERT)
            };
            y.pushArrayRemove = function(a, b, c) {
                y.pushArray(a, b, c, qf.REMOVE)
            };
            y.pushArrayChange = function(a, b, c) {
                y.pushArray(a, b, c, qf.CHANGE)
            };
            y.pushDepth = function(a, b, c, d) {
                if (null == a.current_pack) w.trace("warning: current pack is not started", {
                    fileName: "EditorUndo.hx",
                    lineNumber: 170,
                    className: "bikas.editor.EditorUndo",
                    methodName: "pushDepth"
                });
                else {
                    var e = new Di;
                    e.type =
                        Eb.DEPTH_CHANGED;
                    e.depth = new Bs;
                    e.depth.group = b;
                    e.depth.entity = c;
                    e.depth.depth = d;
                    y.pushUndoChangeDirectly(a, e)
                }
            };
            y.pushContainerSwitch = function(a, b, c, d) {
                if (null == a.current_pack) w.trace("warning: current pack is not started", {
                    fileName: "EditorUndo.hx",
                    lineNumber: 184,
                    className: "bikas.editor.EditorUndo",
                    methodName: "pushContainerSwitch"
                });
                else {
                    var e = new Di;
                    e.type = Eb.CONTAINER_SWITCHED;
                    e.container_switch = new Cs;
                    e.container_switch.previous = b;
                    e.container_switch.current = c;
                    e.container_switch.objects = d;
                    y.pushUndoChangeDirectly(a,
                        e)
                }
            };
            y.pushEntities = function(a, b, c) {
                if (null == a.current_pack) w.trace("warning: current pack is not started", {
                    fileName: "EditorUndo.hx",
                    lineNumber: 198,
                    className: "bikas.editor.EditorUndo",
                    methodName: "pushEntities"
                });
                else {
                    var d = new Di;
                    d.type = b;
                    d.entities = new zs;
                    d.entities.entities = c;
                    y.pushUndoChangeDirectly(a, d)
                }
            };
            y.pushEntitiesDestroyed = function(a, b) {
                y.pushEntities(a, Eb.ENTITIES_DESTROYED, b)
            };
            y.pushEntitiesCreated = function(a, b) {
                y.pushEntities(a, Eb.ENTITIES_CREATED, b)
            };
            y.pushEntitiesMoved = function(a, b,
                c, d) {
                if (null == a.current_pack) w.trace("warning: current pack is not started", {
                    fileName: "EditorUndo.hx",
                    lineNumber: 219,
                    className: "bikas.editor.EditorUndo",
                    methodName: "pushEntitiesMoved"
                });
                else {
                    var e = new Di;
                    e.type = Eb.ENTITIES_MOVED;
                    e.entities_moved = new As;
                    e.entities_moved.entities = b;
                    e.entities_moved.from_group = c;
                    e.entities_moved.to_group = d;
                    e.entities_moved.depths = [];
                    for (c = 0; c < b.length;) d = b[c], ++c, e.entities_moved.depths.push(d.display.depth_cache);
                    y.pushUndoChangeDirectly(a, e)
                }
            };
            y.applyPack = function(a,
                b, c) {
                if (null != a.current_pack) return w.trace("warning: current pack is not finished", {
                    fileName: "EditorUndo.hx",
                    lineNumber: 241,
                    className: "bikas.editor.EditorUndo",
                    methodName: "applyPack"
                }), null;
                if (0 < b.length) {
                    var d = b[b.length - 1].changes,
                        e = d.length - 1;
                    for (y.startPack(a); 0 <= e;) {
                        var f = d[e];
                        --e;
                        switch (Q.enumIndex(f.type)) {
                            case 0:
                                f = f.field;
                                y.pushChange(a, f.instance, f.field_name, null);
                                T.setField(f.instance, f.field_name, f.value);
                                break;
                            case 1:
                                f = f.array;
                                switch (Q.enumIndex(f.type)) {
                                    case 0:
                                        y.pushArrayChange(a, f.array,
                                            f.index);
                                        f.array[f.index] = f.value;
                                        break;
                                    case 1:
                                        y.pushArrayRemove(a, f.array, f.index);
                                        f.array.splice(f.index, 1);
                                        break;
                                    case 2:
                                        y.pushArrayInsert(a, f.array, f.index), f.array.splice(f.index, 0, f.value)
                                }
                                break;
                            case 2:
                                f = f.depth;
                                y.pushDepth(a, f.group, f.entity, f.entity.display.depth_cache);
                                var h = f.group.display.contents;
                                h.removeChild(f.entity.display.container);
                                h.addChildAt(f.entity.display.container, f.depth);
                                na.refreshDepthsInGroup(f.group);
                                F.sortEntitiesByDepth(f.group.group.entities);
                                break;
                            case 3:
                                f = f.container_switch;
                                y.pushContainerSwitch(a, f.current, f.previous, f.objects);
                                h = 0;
                                for (var k = f.objects; h < k.length;) {
                                    var m = k[h];
                                    ++h;
                                    null != f.current && f.current.removeChild(m);
                                    null != f.previous && f.previous.addChild(m)
                                }
                                break;
                            case 4:
                                F.destroyEntitiesWithUndo(a, f.entities.entities);
                                break;
                            case 5:
                                F.restoreEntitiesWithUndo(a, f.entities.entities);
                                break;
                            case 6:
                                f = f.entities_moved;
                                y.pushEntitiesMoved(a, f.entities, f.to_group, f.from_group);
                                h = 0;
                                for (k = f.entities.length; h < k;) m = h++, f.entities[m].display.depth_cache = f.depths[m];
                                if (null != f.to_group) {
                                    h =
                                        0;
                                    for (k = f.entities; h < k.length;) m = k[h], ++h, na.removeEntity(m), F.removeEntityFromGroup(m);
                                    na.refreshGroupLengthChanged(f.to_group)
                                }
                                if (null != f.from_group) {
                                    h = 0;
                                    for (k = f.entities; h < k.length;) m = k[h], ++h, F.addEntityToGroup(f.from_group, m), na.addEntity(m);
                                    na.refreshGroupLengthChanged(f.from_group)
                                }
                        }
                    }
                    y.endPack(a, c);
                    return b.pop()
                }
                return null
            };
            y.applyUndo = function(a) {
                return y.applyPack(a, a.undo_packs, a.redo_packs)
            };
            y.applyRedo = function(a) {
                return y.applyPack(a, a.redo_packs, a.undo_packs)
            };
            var wg = function() {};
            g["bikas.editor.GUID"] = wg;
            wg.__name__ = ["bikas", "editor", "GUID"];
            wg.init = function() {
                var a = (new Date).getTime();
                wg.guid_prefix = wg.toBase62(a - 141912E7) + "-";
                wg.guid_postfix = 0
            };
            wg.toBase62 = function(a) {
                for (var b = []; 0 < a;) b.push("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".charAt(E["int"](a % 62))), a = Math.floor(a / 62);
                b.reverse();
                return b.join("")
            };
            wg.generate = function() {
                return wg.guid_prefix + wg.guid_postfix++
            };
            var hl = function() {};
            g["bikas.engine.SerialStageHeader"] = hl;
            hl.__name__ = ["bikas",
                "engine", "SerialStageHeader"
            ];
            hl.prototype = {
                save: null,
                group: null,
                __class__: hl
            };
            var il = function() {};
            g["bikas.engine.SerialLibraryHeader"] = il;
            il.__name__ = ["bikas", "engine", "SerialLibraryHeader"];
            il.prototype = {
                save: null,
                group: null,
                __class__: il
            };
            var hq = function() {};
            g["bikas.engine.Display"] = hq;
            hq.__name__ = ["bikas", "engine", "Display"];
            hq.prototype = {
                container: null,
                depth_cache: null,
                __class__: hq
            };
            var iq = function() {};
            g["bikas.engine.Group"] = iq;
            iq.__name__ = ["bikas", "engine", "Group"];
            iq.prototype = {
                entities: null,
                __class__: iq
            };
            var jl = function() {};
            g["bikas.engine.Prefab"] = jl;
            jl.__name__ = ["bikas", "engine", "Prefab"];
            jl.prototype = {
                prefab_link_name: null,
                __class__: jl
            };
            var lj = function() {};
            g["bikas.engine.PrefabLink"] = lj;
            lj.__name__ = ["bikas", "engine", "PrefabLink"];
            lj.prototype = {
                guid: null,
                prefab_entity: null,
                __class__: lj
            };
            var ak = function() {
                this.parent = this.container_link = this.group = this.bitmap_images = this.circle = this.polygon = this.prefab = this.prefab_link = this.body = this.offset = this.offset_rotated = null
            };
            g["bikas.engine.Entity"] =
                ak;
            ak.__name__ = ["bikas", "engine", "Entity"];
            ak.prototype = {
                guid: null,
                name: null,
                display: null,
                parent: null,
                container_link: null,
                position: null,
                transform: null,
                group: null,
                bitmap_images: null,
                circle: null,
                polygon: null,
                prefab: null,
                prefab_link: null,
                body: null,
                offset: null,
                offset_rotated: null,
                __class__: ak
            };
            var kl = function() {
                this.nodejs_server_save_path = this.html5_save_function_name = "";
                this.nodejs_save_current_working_files = !0
            };
            g["bikas.engine.Engine"] = kl;
            kl.__name__ = ["bikas", "engine", "Engine"];
            kl.prototype = {
                editor: null,
                stage_engine_save: null,
                library_engine_save: null,
                engine_serial_data: null,
                nodejs_save_current_working_files: null,
                nodejs_server_save_path: null,
                html5_save_function_name: null,
                __class__: kl
            };
            var dt = function() {
                this.debug_drawn = !1;
                this.debug = null
            };
            g["bikas.engine.World"] = dt;
            dt.__name__ = ["bikas", "engine", "World"];
            dt.prototype = {
                space: null,
                debug: null,
                debug_drawn: null,
                container: null,
                __class__: dt
            };
            var et = function() {};
            g["bikas.engine.InnerPrefabCount"] = et;
            et.__name__ = ["bikas", "engine", "InnerPrefabCount"];
            et.prototype = {
                entity: null,
                count: null,
                __class__: et
            };
            var ft = function() {};
            g["bikas.engine.SaveRequest"] = ft;
            ft.__name__ = ["bikas", "engine", "SaveRequest"];
            ft.prototype = {
                url_request: null,
                file_name: null,
                path: null,
                source_data: null,
                __class__: ft
            };
            var Ha = function() {};
            g["bikas.engine.EngineDo"] = Ha;
            Ha.__name__ = ["bikas", "engine", "EngineDo"];
            Ha.createEngine = function(a, b, c, d, e) {
                null == e && (e = "");
                null == d && (d = "");
                null == c && (c = !0);
                var f = new kl;
                kl.step_size = 1 / ia.get_current().stage.get_frameRate();
                f.editor = a;
                f.nodejs_save_current_working_files =
                    c;
                f.nodejs_server_save_path = d;
                f.html5_save_function_name = e;
                if (null != a) {
                    var h = new gq;
                    a.export_stage_click = function() {
                        var b = ia.getTimer(),
                            c = Ha.serializeStageForEngine(f.engine_serial_data, a),
                            d = ia.getTimer() - b;
                        b = c.getData();
                        vd.browseAndSave(h, b, a.stage_save.name + ".befg", function(b) {
                            F.traceSerialization("saved:" + b, c, a.stage_save, d)
                        })
                    };
                    a.export_library_click = function() {
                        var b = ia.getTimer(),
                            c = Ha.serializeLibraryForEngine(f.engine_serial_data, a),
                            d = ia.getTimer() - b;
                        b = c.getData();
                        vd.browseAndSave(h, b, a.library_save.name +
                            ".befg",
                            function(b) {
                                F.traceSerialization("saved:" + b, c, a.library_save, d)
                            })
                    };
                    a.save_and_export_everything_click = function() {
                        var b = Ha.serializeAll(a, f).getData();
                        vd.browseAndSave(h, b, "Everything.befa", function(a) {
                            w.trace("saved:" + a, {
                                fileName: "EngineDo.hx",
                                lineNumber: 113,
                                className: "bikas.engine.EngineDo",
                                methodName: "createEngine"
                            })
                        })
                    }; - 1 != b.indexOf(mf.NodeJSServer) && (a.save_end_export_to_nodejs_server = function() {
                        var b = J.serializeLibrary(a.editor_serial_data, a),
                            c = J.serializeStage(a.editor_serial_data, a),
                            d = Ha.serializeLibraryForEngine(f.engine_serial_data, a),
                            e = Ha.serializeStageForEngine(f.engine_serial_data, a),
                            h = a.stage_save.name + ".befs",
                            g = a.library_save.name + ".befl",
                            l = a.stage_save.name + ".befgs",
                            n = a.library_save.name + ".befgl",
                            p = h + "," + g + "," + l + "," + n,
                            x = !1,
                            u = !1,
                            z = 0;
                        if (dl.available && "" != f.html5_save_function_name) z += 1, dl.call(f.html5_save_function_name, [f.nodejs_server_save_path + h, f.nodejs_server_save_path + g, f.nodejs_server_save_path + l, f.nodejs_server_save_path + n, f.nodejs_server_save_path + "current_working_files.txt"],
                            ["String", "String", "String", "String", "String"], [Mc.encode(c), Mc.encode(b), Mc.encode(e), Mc.encode(d), p]), x = !0, --z, w.trace("TODO: receive completed event in HTML5 game", {
                            fileName: "EngineDo.hx",
                            lineNumber: 181,
                            className: "bikas.engine.EngineDo",
                            methodName: "createEngine"
                        });
                        else {
                            var q = [];
                            c = Ha.createSaveRequest(f.nodejs_server_save_path, h, Mc.encode(c), "String");
                            q.push(c);
                            b = Ha.createSaveRequest(f.nodejs_server_save_path, g, Mc.encode(b), "String");
                            q.push(b);
                            e = Ha.createSaveRequest(f.nodejs_server_save_path, l,
                                Mc.encode(e), "String");
                            q.push(e);
                            d = Ha.createSaveRequest(f.nodejs_server_save_path, n, Mc.encode(d), "String");
                            q.push(d);
                            d = Ha.createSaveRequest(f.nodejs_server_save_path, "current_working_files.txt", p, "String");
                            q.push(d);
                            var L = null;
                            L = Ha.createURLLoader(1, function(a) {
                                q.shift();
                                0 < q.length ? (z += 1, L.load(q[0].url_request)) : (w.trace("all saves sent to node.js server", {
                                    fileName: "EngineDo.hx",
                                    lineNumber: 201,
                                    className: "bikas.engine.EngineDo",
                                    methodName: "createEngine"
                                }), x = !0)
                            });
                            z += 1;
                            L.load(q[0].url_request);
                            L.addEventListener("complete",
                                function(a) {
                                    --z
                                });
                            L.addEventListener("ioError", function(a) {
                                w.trace("error while saving: " + a.text, {
                                    fileName: "EngineDo.hx",
                                    lineNumber: 218,
                                    className: "bikas.engine.EngineDo",
                                    methodName: "createEngine"
                                });
                                u = !0
                            })
                        }
                        var D = null;
                        d = D = function(b) {
                            a.saving_bitmap.set_visible(!1);
                            a.saved_bitmap.set_visible(!1);
                            a.saving_error_bitmap.set_visible(!1);
                            u ? (a.saving_error_bitmap.set_visible(!0), a.saving_bitmap.removeEventListener("enterFrame", D)) : 0 < z ? a.saving_bitmap.set_visible(!0) : x && 0 == z && (a.saved_bitmap.set_visible(!0),
                                b = a.saved_bitmap, b.set_alpha(b.get_alpha() - .016666666666666666), 0 >= a.saved_bitmap.get_alpha() && (a.saving_bitmap.removeEventListener("enterFrame", D), a.menu_container.removeChild(a.saving_bitmap), a.menu_container.removeChild(a.saved_bitmap), a.menu_container.removeChild(a.saving_error_bitmap)))
                        };
                        a.saving_bitmap.set_x(a.menu_container.stage.stageWidth / 2 - a.saving_bitmap.get_width() / 2);
                        a.saving_bitmap.set_y(a.menu_container.stage.stageHeight / 2 - a.saving_bitmap.get_height() / 2);
                        a.saved_bitmap.set_x(a.menu_container.stage.stageWidth /
                            2 - a.saved_bitmap.get_width() / 2);
                        a.saved_bitmap.set_y(a.menu_container.stage.stageHeight / 2 - a.saved_bitmap.get_height() / 2);
                        a.saving_error_bitmap.set_x(a.menu_container.stage.stageWidth / 2 - a.saving_error_bitmap.get_width() / 2);
                        a.saving_error_bitmap.set_y(a.menu_container.stage.stageHeight / 2 - a.saving_error_bitmap.get_height() / 2);
                        a.saving_bitmap.set_visible(!1);
                        a.saved_bitmap.set_visible(!1);
                        a.saving_error_bitmap.set_visible(!1);
                        a.saving_bitmap.set_alpha(1);
                        a.saved_bitmap.set_alpha(1);
                        a.saving_error_bitmap.set_alpha(1);
                        a.menu_container.contains(a.saving_bitmap) || a.menu_container.addChild(a.saving_bitmap);
                        a.menu_container.contains(a.saved_bitmap) || a.menu_container.addChild(a.saved_bitmap);
                        a.menu_container.contains(a.saving_error_bitmap) || a.menu_container.addChild(a.saving_error_bitmap);
                        a.saving_bitmap.addEventListener("enterFrame", d);
                        w.trace("sent files to save: " + p + " (" + E.string(new Date) + ")", {
                            fileName: "EngineDo.hx",
                            lineNumber: 271,
                            className: "bikas.engine.EngineDo",
                            methodName: "createEngine"
                        })
                    });
                    a.load_everything =
                        function() {
                            var b = [new Un("Bikas Encoding Format - Concatenated Editor And Game File (*.befa)", "*.befa")];
                            vd.browseAndLoad(h, b, function(b, c) {
                                b = ub.ofData(aa.__cast(c, Ng));
                                c = 0;
                                var d = b.getInt32(c);
                                c += 4;
                                var e = b.getInt32(c);
                                c = c + 4 + 8;
                                var f = ub.alloc(d);
                                f.blit(0, b, c, d);
                                c += d;
                                d = ub.alloc(e);
                                d.blit(0, b, c, e);
                                F.loadStageAndLibraryDirectlyToEditor(a, d, f)
                            })
                        }
                }
                return f
            };
            Ha.createSaveRequest = function(a, b, c, d) {
                var e = new Fi("http://127.0.0.1:8000");
                e.method = "POST";
                e.data = JSON.stringify({
                    name: a + b,
                    type: d,
                    data: c
                });
                d = new ft;
                d.path = a;
                d.file_name = b;
                d.url_request = e;
                d.source_data = c;
                return d
            };
            Ha.createURLLoader = function(a, b) {
                var c = new Vn;
                c.dataFormat = a;
                null != b && c.addEventListener("complete", b);
                c.addEventListener("ioError", function(a) {
                    w.trace("io error: " + E.string(a), {
                        fileName: "EngineDo.hx",
                        lineNumber: 401,
                        className: "bikas.engine.EngineDo",
                        methodName: "createURLLoader"
                    })
                });
                return c
            };
            Ha.serializeStageForEngine = function(a, b) {
                Ha.performDataCachesForEngine(b.stage_group);
                return J.serializeStage(a, b)
            };
            Ha.serializeLibraryForEngine =
                function(a, b) {
                    Ha.performDataCachesForEngine(b.library_group);
                    return J.serializeLibrary(a, b)
                };
            Ha.serializeAll = function(a, b) {
                var c = J.serializeLibrary(a.editor_serial_data, a),
                    d = J.serializeStage(a.editor_serial_data, a),
                    e = Ha.serializeLibraryForEngine(b.engine_serial_data, a);
                a = Ha.serializeStageForEngine(b.engine_serial_data, a);
                b = c.length;
                var f = d.length,
                    h = e.length,
                    k = a.length,
                    m = ub.alloc(16 + b + f + h + k),
                    r = 0;
                m.setInt32(r, b);
                r += 4;
                m.setInt32(r, f);
                r += 4;
                m.setInt32(r, h);
                r += 4;
                m.setInt32(r, k);
                r += 4;
                m.blit(r, c, 0, b);
                r +=
                    b;
                m.blit(r, d, 0, f);
                r += f;
                m.blit(r, e, 0, h);
                m.blit(r + h, a, 0, k);
                return m
            };
            Ha.performDataCachesForEngine = function(a) {
                Ha.performConvexDecompositions(a)
            };
            Ha.performConvexDecompositions = function(a) {
                if (null != a.group)
                    for (var b = 0, c = a.group.entities; b < c.length;) {
                        var d = c[b];
                        ++b;
                        Ha.performConvexDecompositions(d)
                    }
                null == a.polygon || a.polygon.body_type != kc.STATIC && a.polygon.body_type != kc.DYNAMIC || a.polygon.convex_cached && null != a.polygon.convex_cache_points || (a.polygon.convex_cache_points = Ha.decomposePolygonToConvexes(a.polygon.points,
                    a), null != a.polygon.convex_cache_points && (a.polygon.convex_cached = !0))
            };
            Ha.loadFromSharedObject = function(a, b, c) {
                var d = vd.loadLocalSharedObject(b),
                    e = vd.loadLocalSharedObject(c);
                if (null != d && null != e) {
                    d = d.b;
                    e = e.b;
                    if (E.is(e, Ng)) {
                        ia.getTimer();
                        e = ub.ofData(aa.__cast(e, Ng));
                        var f = ia.getTimer(),
                            h = J.unserializeLibrary(a.editor_serial_data, e);
                        null != h && (ca.setTextForExpandBox(a.main_menu.library_expandbox, "Library"), F.overloadLibrary(a, h.group, h.library_data, h.save), F.traceSerialization("loaded (library): " + c,
                            e, a.library_save, ia.getTimer() - f))
                    }
                    E.is(d, Ng) && (ia.getTimer(), c = ub.ofData(aa.__cast(d, Ng)), d = ia.getTimer(), e = J.unserializeStage(a.editor_serial_data, c), null != e && (ca.setTextForExpandBox(a.main_menu.stage_expandbox, "Stage"), F.overloadStage(a, e.group, e.save), F.traceSerialization("loaded (stage): " + b, c, a.stage_save, ia.getTimer() - d)))
                }
            };
            Ha.overloadLibrary = function(a, b, c, d) {
                null != b && (w.trace("warning: current_library_group should be null", {
                    fileName: "EngineDo.hx",
                    lineNumber: 515,
                    className: "bikas.engine.EngineDo",
                    methodName: "overloadLibrary"
                }), Ha.destroyEntityIncludingChildren(b));
                var e = a.group.entities,
                    f = null;
                b = f = function(a, b) {
                    if (null != b.group)
                        for (var d = 0, h = b.group.entities; d < h.length;) {
                            var k = h[d];
                            ++d;
                            f(b, k)
                        }
                    b.parent = a;
                    if (null != b.bitmap_images)
                        for (a = 0, d = b.bitmap_images.images; a < d.length;) h = d[a], ++a, h.bitmap_data_source = V.retrieveBitmapData(h.source_name, c);
                    if (null != b.prefab_link)
                        for (a = 0; a < e.length;)
                            if (d = e[a], ++a, b.prefab_link.guid == d.guid) {
                                b.prefab_link.prefab_entity = d;
                                break
                            }
                };
                for (var h = 0; h < e.length;) {
                    var k =
                        e[h];
                    ++h;
                    b(a, k)
                }
                b = Ha.getSortedPrefabsByLayersOfInnerPrefabs(e);
                for (h = 0; h < b.length;) k = b[h], ++h, Ha.flatten(d, k);
                return a
            };
            Ha.overloadStage = function(a, b, c, d, e, f, h) {
                if (null != b) return w.trace("warning: current_stage_group should be null", {
                    fileName: "EngineDo.hx",
                    lineNumber: 561,
                    className: "bikas.engine.EngineDo",
                    methodName: "overloadStage"
                }), Ha.destroyEntityIncludingChildren(b), null;
                var k = null;
                null != c && (k = c.group.entities);
                var m = null;
                m = function(a) {
                    if (null != a.group)
                        for (var b = 0, c = a.group.entities; b < c.length;) {
                            var d =
                                c[b];
                            ++b;
                            m(d);
                            d.parent = a
                        }
                    if (null != a.bitmap_images)
                        for (b = 0, c = a.bitmap_images.images; b < c.length;) d = c[b], ++b, d.bitmap_data_source = V.retrieveBitmapData(d.source_name, e);
                    if (null != k && null != a.prefab_link)
                        for (b = 0; b < k.length;)
                            if (c = k[b], ++b, a.prefab_link.guid == c.guid) {
                                a.prefab_link.prefab_entity = c;
                                break
                            }
                };
                m(a);
                null != h && h(a);
                Ha.flatten(f, a);
                Ha.flattenPolygonEntities(a);
                var r = null;
                r = function(a, b, c) {
                    if (null != a.group) {
                        var d = 0;
                        for (a = a.group.entities; d < a.length;) {
                            var e = a[d];
                            ++d;
                            b = r(e, b, c)
                        }
                    } else a.container_link =
                        c, a.display.depth_cache = b, ++b;
                    return b
                };
                a.container_link = d;
                r(a, 0, a.display.container);
                Ch.addEntityIncludingChildren(a);
                return a
            };
            Ha.getSortedPrefabsByLayersOfInnerPrefabs = function(a) {
                for (var b = null, c = b = function(a, c) {
                        var d = c;
                        if (null != a.group)
                            for (var e = 0, f = a.group.entities; e < f.length;) {
                                var h = f[e];
                                ++e;
                                null != h.group && (a = b(h, c), a > d && (d = a));
                                null != h.prefab_link && (a = c + 1, null != h.prefab_link.prefab_entity && (a = b(h.prefab_link.prefab_entity, a)), a > d && (d = a))
                            }
                        return d
                    }, d = [], e = 0; e < a.length;) {
                    var f = a[e];
                    ++e;
                    var h =
                        new et;
                    h.count = c(f, 0);
                    h.entity = f;
                    d.push(h)
                }
                d.sort(function(a, b) {
                    return a.count > b.count ? 1 : a.count < b.count ? -1 : 0
                });
                a = [];
                for (c = 0; c < d.length;) e = d[c], ++c, a.push(e.entity);
                return a
            };
            Ha.createAndSetDefaultComponents = function(a) {
                a.guid = wg.generate();
                a.name = "Entity";
                a.position = new W(0, 0);
                a.transform = new $d;
                a.transform.rotation = 0;
                a.transform.scale_x = 1;
                a.transform.scale_y = 1;
                a.display = new hq;
                a.display.container = new S;
                a.display.depth_cache = -1;
                a.parent = null;
                a.container_link = null
            };
            Ha.createDefaultGroupComponent =
                function() {
                    var a = new iq;
                    a.entities = [];
                    return a
                };
            Ha.createDefaultEntity = function() {
                var a = new ak;
                Ha.createAndSetDefaultComponents(a);
                return a
            };
            Ha.createAndAddBitmap = function(a, b, c) {
                null == a.bitmap_images && (a.bitmap_images = Ha.createDefaultBitmapImageContainerComponent());
                new Je;
                var d = Ha.createDefaultBitmapImageComponent();
                d.source_name = b;
                d.bitmap_data_source = c;
                a.bitmap_images.images.push(d);
                return d
            };
            Ha.createDefaultBitmapImageContainerComponent = function() {
                var a = new Xk;
                a.container = new S;
                a.images = [];
                return a
            };
            Ha.createDefaultBitmapImageComponent = function() {
                var a = new Je;
                a.bitmap = new If;
                a.offset_x = 0;
                a.offset_y = 0;
                a.rotation = 0;
                a.bitmap_animation = null;
                return a
            };
            Ha.createDefaultCircleComponent = function() {
                var a = new Zk;
                a.body_type = kc.NONE;
                a.editable = !0;
                a.fill_draw = !0;
                a.fill_draw_type = ij.DEFAULT;
                a.radius = 25;
                return a
            };
            Ha.createDefaultPolygonComponent = function() {
                var a = new jj;
                a.body_type = kc.NONE;
                a.convex_cache_points = null;
                a.convex_cached = !1;
                a.editable = !0;
                a.draw_type = Lg.DEFAULT;
                a.alpha = 1;
                a.color = 9546397;
                a.texture =
                    null;
                var b = [];
                b.push(new W(-25, -25));
                b.push(new W(25, -25));
                b.push(new W(25, 25));
                b.push(new W(-25, 25));
                a.points = b;
                return a
            };
            Ha.destroyEntityIncludingChildren = function(a) {
                a.position = null;
                a.transform = null;
                null != a.parent && la.remove(a.parent.group.entities, a);
                a.parent = null;
                a.container_link = null;
                if (null != a.group)
                    for (; 0 < a.group.entities.length;) Ha.destroyEntityIncludingChildren(a.group.entities[0]);
                a.group = null;
                if (null != a.bitmap_images) {
                    for (var b = 0, c = a.bitmap_images.images; b < c.length;) {
                        var d = c[b];
                        ++b;
                        d.bitmap =
                            null;
                        d.bitmap_animation = null;
                        d.bitmap_data_source = null
                    }
                    a.bitmap_images = null
                }
                a.display = null;
                a.bitmap_images = null;
                a.circle = null;
                a.polygon = null;
                a.prefab_link = null
            };
            Ha.flatten = function(a, b) {
                if (null != b.prefab_link)
                    if (null == b.prefab_link.prefab_entity) w.trace("warning: prefab_entity is null for " + b.name, {
                        fileName: "EngineDo.hx",
                        lineNumber: 814,
                        className: "bikas.engine.EngineDo",
                        methodName: "flatten"
                    });
                    else {
                        var c = Ha.copyEntity(b.prefab_link.prefab_entity, a, !1);
                        b.prefab_link = null;
                        b.group = c.group;
                        b.prefab = c.prefab;
                        b.prefab.prefab_link_name = b.name
                    } if (null != b.group) {
                    c = 0;
                    for (var d = b.group.entities; c < d.length;) {
                        var e = d[c];
                        ++c;
                        xb.applyTransform(e.position, e.transform, b.position, b.transform);
                        Ha.flatten(a, e)
                    }
                    b.position.x = 0;
                    b.position.y = 0;
                    b.transform.scale_x = 1;
                    b.transform.scale_y = 1;
                    b.transform.rotation = 0
                }
            };
            Ha.flattenPolygonEntities = function(a) {
                if (null != a.polygon) {
                    for (var b = new W, c = 0, d = a.polygon.points; c < d.length;) {
                        var e = d[c];
                        ++c;
                        xb.applyTransformToPoint(e, b, a.transform)
                    }
                    if (null != a.polygon.convex_cache_points)
                        for (c =
                            0, d = a.polygon.convex_cache_points; c < d.length;) {
                            e = d[c];
                            ++c;
                            for (var f = 0; f < e.length;) {
                                var h = e[f];
                                ++f;
                                xb.applyTransformToPoint(h, b, a.transform)
                            }
                        }
                    a.transform.scale_x = 1;
                    a.transform.scale_y = 1;
                    a.transform.rotation = 0
                }
                if (null != a.group)
                    for (b = 0, a = a.group.entities; b < a.length;) c = a[b], ++b, Ha.flattenPolygonEntities(c)
            };
            Ha.copyValue = function(a, b, c, d, e) {
                var f = c;
                if (null != f)
                    if (11 == e[0]) {
                        c = aa.__cast(c, Array);
                        if (null == d) d = [];
                        else
                            for (d = aa.__cast(d, Array); d.length > c.length;) d.pop();
                        e = e.slice();
                        e.shift();
                        for (var h = 0, k = c.length; h <
                            k;) {
                            var m = h++;
                            m >= d.length ? (f = Ha.copyValue(a, b, c[m], null, e), d.push(f)) : (f = Ha.copyValue(a, b, c[m], d[m], e), d[m] = f)
                        }
                        f = d
                    } else if (12 == e[0]) {
                    f = null;
                    e = 0;
                    for (h = a.classes; e < h.length;)
                        if (k = h[e], ++e, E.is(c, k.unserial_type)) {
                            f = k;
                            break
                        } e = f.unserial_type;
                    if (null == f) return w.trace("warning: couldn't find type for " + E.string(c), {
                        fileName: "EngineDo.hx",
                        lineNumber: 907,
                        className: "bikas.engine.EngineDo",
                        methodName: "copyValue"
                    }), null;
                    null == d && (d = null != f.init_func ? f.init_func() : Q.createInstance(e, []));
                    e == Je ? aa.__cast(d,
                        Je).bitmap_data_source = aa.__cast(c, Je).bitmap_data_source : e == lj ? (aa.__cast(d, lj).guid = aa.__cast(c, lj).guid, aa.__cast(d, lj).prefab_entity = aa.__cast(c, lj).prefab_entity) : e == jl && (aa.__cast(d, jl).prefab_link_name = aa.__cast(c, jl).prefab_link_name);
                    f = f.fields.slice();
                    if (b && e == ak)
                        for (e = 0; e < f.length;)
                            if (h = f[e], ++e, "guid" == h.field_name) {
                                la.remove(f, h);
                                break
                            } for (k = 0; k < f.length;) m = f[k], ++k, e = T.field(c, m.field_name), h = T.field(d, m.field_name), T.setField(d, m.field_name, Ha.copyValue(a, b, e, h, m.value_type_flags));
                    f = d
                } else 128 == e[0] ? (a = aa.__cast(d, W), null == a && (a = new W(0, 0)), a.x = aa.__cast(c, W).x, a.y = aa.__cast(c, W).y, f = a) : 129 == e[0] && (a = aa.__cast(d, $d), null == a && (a = new $d), b = aa.__cast(c, $d), a.scale_x = b.scale_x, a.scale_y = b.scale_y, a.rotation = b.rotation, f = a);
                return f
            };
            Ha.resolveParentReferences = function(a) {
                if (null != a.group)
                    for (var b = 0, c = a.group.entities; b < c.length;) {
                        var d = c[b];
                        ++b;
                        Ha.resolveParentReferences(d);
                        d.parent = a
                    }
            };
            Ha.copyEntity = function(a, b, c) {
                b = aa.__cast(Ha.copyValue(b, c, a, null, [12]), ak);
                Ha.resolveParentReferences(b);
                b.parent = a.parent;
                return b
            };
            Ha.createBodiesForEntities = function(a, b, c, d) {
                if (null != a.group)
                    for (var e = 0, f = a.group.entities; e < f.length;) {
                        var h = f[e];
                        ++e;
                        if (!Ha.createBodiesForEntities(h, b, c, d)) return !1
                    }
                f = kc.NONE;
                null != a.polygon && a.polygon.body_type != kc.NONE && (f = a.polygon.body_type);
                if (null != a.circle && a.circle.body_type != kc.NONE) {
                    if (f != kc.NONE && f != a.circle.body_type) return w.trace("error: circle and polygon type mismatch", {
                            fileName: "EngineDo.hx",
                            lineNumber: 1013,
                            className: "bikas.engine.EngineDo",
                            methodName: "createBodiesForEntities"
                        }),
                        !1;
                    f = a.circle.body_type
                }
                if (f != kc.NONE) {
                    e = new Ag;
                    a.body = e;
                    b.push(a);
                    switch (Q.enumIndex(f)) {
                        case 1:
                            e.set_type(Pc.get_STATIC());
                            break;
                        case 2:
                            e.set_type(Pc.get_DYNAMIC())
                    }
                    if (null != a.polygon)
                        if (null == a.polygon.convex_cache_points) w.trace("warning: convex_cache_points == null (added basic box)", {
                            fileName: "EngineDo.hx",
                            lineNumber: 1034,
                            className: "bikas.engine.EngineDo",
                            methodName: "createBodiesForEntities"
                        }), e.get_shapes().add(new ad(ad.box(10, 10), c, d));
                        else if (0 == a.polygon.convex_cache_points.length) w.trace("warning: no cached convexes in polygon (added basic box)", {
                        fileName: "EngineDo.hx",
                        lineNumber: 1038,
                        className: "bikas.engine.EngineDo",
                        methodName: "createBodiesForEntities"
                    }), e.get_shapes().add(new ad(ad.box(10, 10), c, d));
                    else
                        for (b = 0, f = a.polygon.convex_cache_points; b < f.length;) h = f[b], ++b, Ha.addConvexPolygonToShapeList(e.get_shapes(), h);
                    if (null != a.circle) {
                        if (0 >= a.circle.radius) return w.trace("error: circle radius is 0 or less", {
                            fileName: "EngineDo.hx",
                            lineNumber: 1048,
                            className: "bikas.engine.EngineDo",
                            methodName: "createBodiesForEntities"
                        }), !1;
                        e.get_shapes().add(new bk(Math.abs(a.circle.radius)))
                    }
                    Ha.fixBodyIfEmpty(e);
                    b = a.transform.scale_x;
                    f = a.transform.scale_y;
                    if (1 != b || 1 != f)
                        for (null != a.circle && b != f && (w.trace("warning: circle has different scale x and y", {
                                fileName: "EngineDo.hx",
                                lineNumber: 1062,
                                className: "bikas.engine.EngineDo",
                                methodName: "createBodiesForEntities"
                            }), f = b), h = e.get_shapes().iterator(); h.hasNext();) h.next().scale(b, f);
                    b = .017453292519943 * a.transform.rotation;
                    e.setShapeFilters(d);
                    e.setShapeMaterials(c);
                    e.get_shapes().empty() || e.align();
                    a.offset = new Wa(e.get_position().get_x(), e.get_position().get_y());
                    a.offset_rotated = new Wa(a.offset.get_x(), a.offset.get_y());
                    a.offset_rotated.rotate(b);
                    e.get_position().set_x(a.position.x + a.offset_rotated.get_x());
                    e.get_position().set_y(a.position.y + a.offset_rotated.get_y());
                    e.set_rotation(b)
                }
                return !0
            };
            Ha.setSpaceIncludingChildren = function(a, b) {
                if (null != a.group)
                    for (var c = 0, d = a.group.entities; c < d.length;) {
                        var e = d[c];
                        ++c;
                        Ha.setSpaceIncludingChildren(e, b)
                    }
                null != a.body && a.body.set_space(b)
            };
            Ha.fixBodyIfEmpty = function(a) {
                0 == a.get_shapes().get_length() ? (a.set_allowMovement(!1),
                    a.set_allowRotation(!1)) : (a.get_allowMovement() || a.set_allowMovement(!0), a.get_allowRotation() || a.set_allowRotation(!0))
            };
            Ha.decomposePolygonToConvexes = function(a, b) {
                if (3 > a.length) return w.trace("warning: polygon has less than 3 points", {
                    fileName: "EngineDo.hx",
                    lineNumber: 1119,
                    className: "bikas.engine.EngineDo",
                    methodName: "decomposePolygonToConvexes"
                }), null;
                for (var c = new Dh, d = 0; d < a.length;) {
                    var e = a[d];
                    ++d;
                    c.push(new Wa(e.x, e.y))
                }
                if (!c.isSimple()) {
                    c.clear();
                    d = 0;
                    for (e = a.length; d < e;) {
                        for (var f = d++, h = !1,
                                k = f + 1, m = a.length; k < m;) {
                            var r = k++;
                            if (H.pointsEqual(a[f], a[r])) {
                                null != b ? w.trace("warning: found point with same position: " + E.string(a[f]) + " (entity.name: " + b.name + ")", {
                                    fileName: "EngineDo.hx",
                                    lineNumber: 1134,
                                    className: "bikas.engine.EngineDo",
                                    methodName: "decomposePolygonToConvexes"
                                }) : w.trace("warning: found point with same position: " + E.string(a[f]), {
                                    fileName: "EngineDo.hx",
                                    lineNumber: 1136,
                                    className: "bikas.engine.EngineDo",
                                    methodName: "decomposePolygonToConvexes"
                                });
                                h = !0;
                                break
                            }
                        }
                        h || c.push(new Wa(a[f].x,
                            a[f].y))
                    }
                    if (!c.isSimple()) return c = "", null != b.parent && (c = ", parent: " + b.parent.name), w.trace("error: can't have self-intersecting polygon (entity: " + b.name + c + ")", {
                        fileName: "EngineDo.hx",
                        lineNumber: 1152,
                        className: "bikas.engine.EngineDo",
                        methodName: "decomposePolygonToConvexes"
                    }), null
                }
                b = c.convexDecomposition();
                b.get_length();
                a = [];
                for (d = b.iterator(); d.hasNext();)
                    for (e = d.next(), a.push([]), e = e.iterator(); e.hasNext();) f = e.next(), a[a.length - 1].push(new W(f.get_x(), f.get_y()));
                for (; !b.empty();) d = b.pop(), d.dispose();
                c.dispose();
                return a
            };
            Ha.addConvexPolygonToShapeList = function(a, b) {
                3 > b.length && w.trace("warning: polygon has less than 3 points", {
                    fileName: "EngineDo.hx",
                    lineNumber: 1178,
                    className: "bikas.engine.EngineDo",
                    methodName: "addConvexPolygonToShapeList"
                });
                for (var c = [], d = 0; d < b.length;) {
                    var e = b[d];
                    ++d;
                    c.push(new Wa(e.x, e.y))
                }
                a.add(new ad(c));
                for (a = 0; a < c.length;) b = c[a], ++a, b.dispose()
            };
            Ha.createWorld = function(a, b, c, d) {
                b = new dt;
                b.space = new gt(new Wa(0, 0), dh.get_DYNAMIC_AABB_TREE());
                b.container = a;
                return b
            };
            Ha.updateWorld =
                function(a, b, c, d, e, f) {
                    b && (0 >= d && (d = 1), 0 >= e && (e = 1), null == f ? a.space.step(kl.step_size, d, e) : a.space.step(f, d, e));
                    null != a.debug && (c ? (a.debug.display.scaleX != a.container.get_scaleX() && (a.debug.display.scaleX = a.container.get_scaleY()), a.debug.display.scaleY != a.container.get_scaleX() && (a.debug.display.scaleY = a.container.get_scaleY()), a.debug.clear(), a.debug.draw(a.space), a.debug.flush(), a.debug_drawn = !0) : a.debug_drawn && (a.debug.clear(), a.debug.flush(), a.debug_drawn = !1))
                };
            var Ja = function() {};
            g["bikas.engine.EngineSerializer"] =
                Ja;
            Ja.__name__ = ["bikas", "engine", "EngineSerializer"];
            Ja.createEngineSerialData = function(a) {
                null == a && (a = !0);
                var b = O.createSerialData(),
                    c = function(a, b, c, d) {
                        var e = new Zp;
                        e.full_class_name = Q.getClassName(c);
                        e.serial_type = b;
                        e.unserial_type = c;
                        e.fields = [];
                        e.ignore_fields = [];
                        e.init_func = d;
                        a.classes.push(e);
                        return e
                    };
                J.pushGlobalClasses(b);
                var d = c(b, Tj, ak, Ha.createDefaultEntity);
                Ja.pushString(d, "guid");
                Ja.pushString(d, "name");
                Ja.pushInstance(d, "position");
                Ja.pushInstance(d, "transform");
                Ja.pushInstance(d, "display");
                Ja.pushIgnore(d, "parent");
                Ja.pushIgnore(d, "container_link");
                Ja.pushInstance(d, "group");
                Ja.pushInstance(d, "bitmap_images");
                Ja.pushInstance(d, "circle");
                Ja.pushInstance(d, "polygon");
                Ja.pushInstance(d, "prefab");
                Ja.pushInstance(d, "prefab_link");
                Ja.pushIgnore(d, "body");
                Ja.pushIgnore(d, "offset");
                Ja.pushIgnore(d, "offset_rotated");
                d = c(b, On, hq, null);
                Ja.pushIgnore(d, "container");
                Ja.pushIgnore(d, "depth_cache");
                d = c(b, Pn, iq, Ha.createDefaultGroupComponent);
                Ja.pushArray(d, "entities", [12]);
                d = Ja.pushClass(b, Xk, Ha.createDefaultBitmapImageContainerComponent);
                Ja.pushArray(d, "images", [12]);
                Ja.pushIgnore(d, "container");
                d = Ja.pushClass(b, Je, Ha.createDefaultBitmapImageComponent);
                Ja.pushString(d, "source_name");
                Ja.pushIgnore(d, "bitmap_data_source");
                Ja.pushIgnore(d, "bitmap");
                Ja.pushDouble(d, "offset_x");
                Ja.pushDouble(d, "offset_y");
                Ja.pushDouble(d, "rotation");
                Ja.pushInstance(d, "bitmap_animation");
                d = Ja.pushClass(b, Kv, null);
                Ja.pushIgnore(d, "source");
                Ja.pushInt(d, "frame");
                d = Ja.pushClass(b, Zk, Ha.createDefaultCircleComponent);
                Ja.pushEnum(d, "body_type");
                Ja.pushBool(d,
                    "editable");
                Ja.pushBool(d, "fill_draw");
                Ja.pushEnum(d, "fill_draw_type");
                Ja.pushDouble(d, "radius");
                d = Ja.pushClass(b, jj, Ha.createDefaultPolygonComponent);
                Ja.pushEnum(d, "body_type");
                Ja.pushArray(d, "points", [12]);
                Ja.pushArray(d, "convex_cache_points", [11, 12]);
                Ja.pushBool(d, "convex_cached");
                Ja.pushIgnore(d, "editable");
                Ja.pushEnum(d, "draw_type");
                Ja.pushInt(d, "color");
                Ja.pushDouble(d, "alpha");
                Ja.pushInstance(d, "texture");
                d = c(b, Qn, jl, null);
                Ja.pushIgnore(d, "prefab_link_name");
                d = c(b, Ah, lj, null);
                Ja.pushString(d,
                    "guid");
                Ja.pushIgnore(d, "prefab_entity");
                d = Ja.pushClass(b, $k, null);
                Ja.pushString(d, "fill_source_name");
                Ja.pushString(d, "line_source_name");
                Ja.pushIgnore(d, "fill_source_name_cache");
                Ja.pushIgnore(d, "line_source_name_cache");
                Ja.pushIgnore(d, "bitmaps_updated");
                Ja.pushBool(d, "use_sutherland_hodgman");
                Ja.pushIgnore(d, "data");
                d = Ja.pushClass(b, Nn, null);
                Ja.pushString(d, "name");
                Ja.pushDouble(d, "created_time_stamp");
                Ja.pushDouble(d, "save_time_stamp");
                d = c(b, fj, hl, null);
                Ja.pushInstance(d, "save");
                Ja.pushInstance(d,
                    "group");
                d = c(b, gj, il, null);
                Ja.pushInstance(d, "save");
                Ja.pushInstance(d, "group");
                a && O.validateSerialData(b);
                O.createTypeTableForSerialData(b);
                return b
            };
            Ja.unserializeStageEngine = function(a, b) {
                b = gl.run(b);
                a = O.unserialize(a, b);
                if (!E.is(a, hl)) return w.trace("error: wrong type, expected: " + E.string(hl) + ", got: " + E.string(a), {
                    fileName: "EngineSerializer.hx",
                    lineNumber: 179,
                    className: "bikas.engine.EngineSerializer",
                    methodName: "unserializeStageEngine"
                }), null;
                a = aa.__cast(a, hl);
                return null == a.group ? (w.trace("error: no stage group", {
                    fileName: "EngineSerializer.hx",
                    lineNumber: 184,
                    className: "bikas.engine.EngineSerializer",
                    methodName: "unserializeStageEngine"
                }), null) : a
            };
            Ja.unserializeLibraryEngine = function(a, b) {
                b = gl.run(b);
                a = O.unserialize(a, b);
                if (!E.is(a, il)) return w.trace("error: wrong type, expected: " + E.string(il) + ", got: " + E.string(a), {
                    fileName: "EngineSerializer.hx",
                    lineNumber: 194,
                    className: "bikas.engine.EngineSerializer",
                    methodName: "unserializeLibraryEngine"
                }), null;
                a = aa.__cast(a, il);
                return null == a.group ? (w.trace("error: no stage group", {
                    fileName: "EngineSerializer.hx",
                    lineNumber: 199,
                    className: "bikas.engine.EngineSerializer",
                    methodName: "unserializeLibraryEngine"
                }), null) : a
            };
            Ja.convertEditorToEngineEntity = function(a, b) {
                var c = null;
                c = function(a, d, e) {
                    var f = a;
                    if (null != f)
                        if (11 == e[0]) {
                            a = aa.__cast(a, Array);
                            d = null == d ? [] : aa.__cast(d, Array);
                            e = e.slice();
                            e.shift();
                            for (var h = 0, k = a.length; h < k;) {
                                var g = h++;
                                g >= d.length ? (f = c(a[g], null, e), d.push(f)) : (f = c(a[g], d[g], e), d[g] = f)
                            }
                            f = d
                        } else if (12 == e[0]) {
                        f = null;
                        e = 0;
                        for (h = b.classes; e < h.length;)
                            if (k = h[e], ++e, E.is(a,
                                    k.serial_type)) {
                                f = k;
                                break
                            } e = f.unserial_type;
                        if (null == f) return w.trace("warning: couldn't find type for " + E.string(a), {
                            fileName: "EngineSerializer.hx",
                            lineNumber: 246,
                            className: "bikas.engine.EngineSerializer",
                            methodName: "convertEditorToEngineEntity"
                        }), null;
                        null == d && (d = null != f.init_func ? f.init_func() : Q.createInstance(e, []));
                        f.serial_type == Je && (aa.__cast(d, Je).bitmap_data_source = aa.__cast(a, Je).bitmap_data_source);
                        f = f.fields.slice();
                        for (k = 0; k < f.length;) g = f[k], ++k, e = T.field(a, g.field_name), h = T.field(d,
                            g.field_name), T.setField(d, g.field_name, c(e, h, g.value_type_flags));
                        f = d
                    }
                    return f
                };
                var d = null,
                    e = d = function(a) {
                        if (null != a.group)
                            for (var b = 0, c = a.group.entities; b < c.length;) {
                                var e = c[b];
                                ++b;
                                d(e);
                                e.parent = a
                            }
                    };
                a = aa.__cast(c(a, null, [12]), ak);
                e(a);
                return a
            };
            var Ch = function() {};
            g["bikas.engine.EngineSystems"] = Ch;
            Ch.__name__ = ["bikas", "engine", "EngineSystems"];
            Ch.addEntity = function(a) {
                null != a.bitmap_images && ck.add(a);
                null != a.circle && jq.refresh(a);
                null != a.polygon && Wn.refresh(a);
                kq.add(a);
                Mv.refresh(a);
                lq.refresh(a)
            };
            Ch.removeEntity = function(a) {
                lq.remove(a);
                kq.remove(a);
                null != a.bitmap_images && ck.remove(a);
                null != a.circle && jq.remove(a);
                null != a.polygon && Wn.remove(a)
            };
            Ch.addEntityIncludingChildren = function(a) {
                if (null != a.group)
                    for (var b = 0, c = a.group.entities; b < c.length;) {
                        var d = c[b];
                        ++b;
                        Ch.addEntityIncludingChildren(d)
                    }
                Ch.addEntity(a)
            };
            Ch.removeEntityIncludingChildren = function(a) {
                Ch.removeEntity(a);
                if (null != a.group) {
                    var b = 0;
                    for (a = a.group.entities; b < a.length;) {
                        var c = a[b];
                        ++b;
                        Ch.removeEntityIncludingChildren(c)
                    }
                }
            };
            var ck =
                function() {};
            g["bikas.engine.BitmapImagesSystem"] = ck;
            ck.__name__ = ["bikas", "engine", "BitmapImagesSystem"];
            ck.add = function(a) {
                ck.refresh(a);
                for (var b = 0, c = a.bitmap_images.images; b < c.length;) {
                    var d = c[b];
                    ++b;
                    a.display.container.addChild(d.bitmap)
                }
            };
            ck.remove = function(a) {
                for (var b = 0, c = a.bitmap_images.images; b < c.length;) {
                    var d = c[b];
                    ++b;
                    a.display.container.removeChild(d.bitmap)
                }
            };
            ck.refresh = function(a) {
                for (var b, c = 0, d = a.bitmap_images.images; c < d.length;) {
                    var e = d[c];
                    ++c;
                    b = e.bitmap_data_source;
                    null == e.bitmap.parent &&
                        a.display.container.addChild(e.bitmap);
                    e.bitmap.set_bitmapData(b.bitmap_data);
                    e.bitmap.set_x(-b.center_point.x + e.offset_x);
                    e.bitmap.set_y(-b.center_point.y + e.offset_y);
                    e.bitmap.set_rotation(e.rotation)
                }
            };
            var jq = function() {};
            g["bikas.engine.CircleFillDrawSystem"] = jq;
            jq.__name__ = ["bikas", "engine", "CircleFillDrawSystem"];
            jq.remove = function(a) {
                a.display.container.get_graphics().clear()
            };
            jq.refresh = function(a) {
                var b = 1;
                switch (Q.enumIndex(a.circle.fill_draw_type)) {
                    case 0:
                        b = 1;
                        break;
                    case 1:
                        b = .5
                }
                a.display.container.get_graphics().clear();
                Ea.drawCircle(a.display.container.get_graphics(), a.circle.radius, 9546397, b, 1651777, 1, b)
            };
            var kq = function() {};
            g["bikas.engine.DisplayContainerSystem"] = kq;
            kq.__name__ = ["bikas", "engine", "DisplayContainerSystem"];
            kq.add = function(a) {
                var b = a.display;
                a = a.container_link;
                null == a || a.contains(b.container) || (-1 == b.depth_cache ? (b.depth_cache = a.get_numChildren(), a.addChild(b.container)) : b.depth_cache > a.get_numChildren() ? (w.trace("warning: something went wrong with depth_cache, are group entities sorted by depth?", {
                    fileName: "EngineSystems.hx",
                    lineNumber: 145,
                    className: "bikas.engine.DisplayContainerSystem",
                    methodName: "add"
                }), a.addChild(b.container)) : a.addChildAt(b.container, b.depth_cache))
            };
            kq.remove = function(a) {
                var b = a.display;
                a = a.container_link;
                null != a && a.contains(b.container) && a.removeChild(b.container)
            };
            var Mv = function() {};
            g["bikas.engine.DisplayPositionSystem"] = Mv;
            Mv.__name__ = ["bikas", "engine", "DisplayPositionSystem"];
            Mv.refresh = function(a) {
                a.display.container.set_x(a.position.x);
                a.display.container.set_y(a.position.y)
            };
            var Xn = function() {};
            g["bikas.engine.NapeSystem"] = Xn;
            Xn.__name__ = ["bikas", "engine", "NapeSystem"];
            Xn.refresh = function(a) {
                var b = a.offset,
                    c = a.offset_rotated;
                c.set_x(b.get_x());
                c.set_y(b.get_y());
                c.rotate(a.body.get_rotation());
                b = a.body.get_position().get_x();
                var d = c.get_x();
                a.position.x = b - d;
                b = a.body.get_position().get_y();
                c = c.get_y();
                a.position.y = b - c;
                a.display.container.set_x(a.position.x);
                a.display.container.set_y(a.position.y);
                a.display.container.set_rotation(57.29577951308232 * Xn.normalizeAngle(a.body.get_rotation()))
            };
            Xn.normalizeAngle = function(a) {
                a = (a % eh.PI2 + eh.PI2) % eh.PI2;
                a > eh.PI && (a -= eh.PI2);
                return a
            };
            var Wn = function() {};
            g["bikas.engine.PolygonSystem"] = Wn;
            Wn.__name__ = ["bikas", "engine", "PolygonSystem"];
            Wn.remove = function(a) {
                a.display.container.get_graphics().clear()
            };
            Wn.refresh = function(a) {
                a.display.container.get_graphics().clear();
                Ea.drawPolygon(a.display.container.get_graphics(), a.polygon.points, 9546397, 1, 1651777, 1, 1)
            };
            var lq = function() {};
            g["bikas.engine.TransformSystem"] = lq;
            lq.__name__ = ["bikas", "engine", "TransformSystem"];
            lq.refresh = function(a) {
                var b = a.display;
                a = a.transform;
                b.container.set_scaleX(a.scale_x);
                b.container.set_scaleY(a.scale_y);
                b.container.set_rotation(a.rotation)
            };
            lq.remove = function(a) {
                a = a.display;
                a.container.set_scaleX(1);
                a.container.set_scaleY(1);
                a.container.set_rotation(0)
            };
            var Yn = function() {};
            g["bikas.flash.FlashDomainCheck"] = Yn;
            Yn.__name__ = ["bikas", "flash", "FlashDomainCheck"];
            Yn.checkDomain = function(a, b) {
                a = a.get_loaderInfo().url;
                var c = a.indexOf("://") + 3,
                    d = a.indexOf("/", c) - c;
                a = la.substr(a, c, d);
                b = [b];
                for (c = 0; c < b.length;)
                    if (d = b[c], ++c, la.substr(a, -d.length, d.length) == d) return !0;
                return !1
            };
            var gq = function() {
                this.in_progress = !1;
                this.file_reference = new mq
            };
            g["bikas.flash.FlashFileReferenceData"] = gq;
            gq.__name__ = ["bikas", "flash", "FlashFileReferenceData"];
            gq.prototype = {
                file_reference: null,
                in_progress: null,
                __class__: gq
            };
            var vd = function() {};
            g["bikas.flash.FlashFile"] = vd;
            vd.__name__ = ["bikas", "flash", "FlashFile"];
            vd.createStageFilter = function() {
                return new Un("Bikas Encoding Format - Editor Stage File (*.befs)",
                    "*.befs")
            };
            vd.createLibraryFilter = function() {
                return new Un("Bikas Encoding Format - Editor Library File (*.befl)", "*.befl")
            };
            vd.browseAndSave = function(a, b, c, d) {
                null == c && (c = "file.bef");
                var e = a.file_reference,
                    f = null;
                if (a.in_progress) w.trace("warning: can't save because file reference is in progress", {
                    fileName: "FlashFile.hx",
                    lineNumber: 51,
                    className: "bikas.flash.FlashFile",
                    methodName: "browseAndSave"
                });
                else {
                    var h = function(a) {
                            f()
                        },
                        k = function(a) {
                            null != d && d(e.name);
                            f()
                        },
                        m = function(a) {
                            w.trace("IOErrorEvent: " +
                                E.string(a), {
                                    fileName: "FlashFile.hx",
                                    lineNumber: 64,
                                    className: "bikas.flash.FlashFile",
                                    methodName: "browseAndSave"
                                });
                            f()
                        },
                        r = function(a) {
                            w.trace("SecurityErrorEvent: " + E.string(a), {
                                fileName: "FlashFile.hx",
                                lineNumber: 68,
                                className: "bikas.flash.FlashFile",
                                methodName: "browseAndSave"
                            });
                            f()
                        };
                    e.addEventListener("cancel", h);
                    e.addEventListener("complete", k);
                    e.addEventListener("ioError", m);
                    e.addEventListener("securityError", r);
                    f = function() {
                        e.cancel();
                        a.in_progress = !1;
                        e.removeEventListener("cancel", h);
                        e.removeEventListener("complete",
                            k);
                        e.removeEventListener("ioError", m);
                        e.removeEventListener("securityError", r)
                    };
                    e.cancel();
                    e.save(b, c);
                    a.in_progress = !0
                }
            };
            vd.browseAndLoad = function(a, b, c) {
                var d = a.file_reference,
                    e = null;
                if (a.in_progress) w.trace("warning: can't save because file reference is in progress", {
                    fileName: "FlashFile.hx",
                    lineNumber: 96,
                    className: "bikas.flash.FlashFile",
                    methodName: "browseAndLoad"
                });
                else {
                    var f = function(a) {
                            e()
                        },
                        h = function(a) {
                            null != c && c(d.name, d.data);
                            e()
                        },
                        k = function(a) {
                            w.trace("IOErrorEvent: " + E.string(a), {
                                fileName: "FlashFile.hx",
                                lineNumber: 109,
                                className: "bikas.flash.FlashFile",
                                methodName: "browseAndLoad"
                            });
                            e()
                        },
                        m = function(a) {
                            w.trace("SecurityErrorEvent: " + E.string(a), {
                                fileName: "FlashFile.hx",
                                lineNumber: 113,
                                className: "bikas.flash.FlashFile",
                                methodName: "browseAndLoad"
                            });
                            e()
                        },
                        r = function(a) {
                            d.load()
                        };
                    d.addEventListener("cancel", f);
                    d.addEventListener("complete", h);
                    d.addEventListener("ioError", k);
                    d.addEventListener("securityError", m);
                    d.addEventListener("select", r);
                    e = function() {
                        d.cancel();
                        a.in_progress = !1;
                        d.removeEventListener("cancel",
                            f);
                        d.removeEventListener("complete", h);
                        d.removeEventListener("ioError", k);
                        d.removeEventListener("securityError", m);
                        d.removeEventListener("select", r)
                    };
                    d.cancel();
                    d.browse(b);
                    a.in_progress = !0
                }
            };
            vd.loadLocalSharedObject = function(a) {
                a = me.getLocal(a);
                return null != a.data.save ? a.data.save : null
            };
            vd.saveToLocalSharedObject = function(a, b) {
                a = me.getLocal(a);
                a.data.save = b;
                a.flush()
            };
            var Va = function() {};
            g["bikas.flash.FlashFunc"] = Va;
            Va.__name__ = ["bikas", "flash", "FlashFunc"];
            Va.convertPositionToLocal = function(a,
                b, c) {
                a = c.globalToLocal(a.localToGlobal(new Ta(b.x, b.y)));
                return new W(a.x, a.y)
            };
            Va.convertRectangle = function(a) {
                return new Ie(a.x, a.y, a.width, a.height)
            };
            Va.createBrightnessFilter = function(a) {
                a *= 1.02;
                var b = [];
                b = b.concat([1, 0, 0, 0, a]);
                b = b.concat([0, 1, 0, 0, a]);
                b = b.concat([0, 0, 1, 0, a]);
                b = b.concat([0, 0, 0, 1, 0]);
                return new Eh(b)
            };
            Va.createContrastFilter = function(a) {
                a = a / 100 + 1;
                var b = 128 * (1 - a),
                    c = [];
                c = c.concat([a, 0, 0, 0, b]);
                c = c.concat([0, a, 0, 0, b]);
                c = c.concat([0, 0, a, 0, b]);
                c = c.concat([0, 0, 0, 1, 0]);
                return new Eh(c)
            };
            Va.createSaturationFilter = function(a) {
                a = a / 100 + 1;
                var b = 1 - a,
                    c = .212671 * b,
                    d = .71516 * b;
                b *= .072169;
                var e = [];
                e = e.concat([c + a, d, b, 0, 0]);
                e = e.concat([c, d + a, b, 0, 0]);
                e = e.concat([c, d, b + a, 0, 0]);
                e = e.concat([0, 0, 0, 1, 0]);
                return new Eh(e)
            };
            Va.applyColorMatrixFilterToColor = function(a, b) {
                var c = b.get_matrix();
                b = E["int"](Math.max(0, Math.min(c[0] * a.red + c[1] * a.green + c[2] * a.blue + c[3] * a.alpha + c[4], 255)));
                var d = E["int"](Math.max(0, Math.min(c[5] * a.red + c[6] * a.green + c[7] * a.blue + c[8] * a.alpha + c[9], 255))),
                    e = E["int"](Math.max(0, Math.min(c[10] *
                        a.red + c[11] * a.green + c[12] * a.blue + c[13] * a.alpha + c[14], 255)));
                c = E["int"](Math.max(0, Math.min(c[15] * a.red + c[16] * a.green + c[17] * a.blue + c[18] * a.alpha + c[19], 255)));
                a.red = b;
                a.green = d;
                a.blue = e;
                a.alpha = c
            };
            Va.copyGlowFilter = function(a, b, c, d, e, f, h, k, m) {
                a = new Qc(a.get_color(), a.get_alpha(), a.get_blurX(), a.get_blurY(), a.get_strength(), a.get_quality(), a.get_inner(), a.get_knockout());
                null != b && a.set_color(b);
                null != c && a.set_alpha(c);
                null != d && a.set_blurX(d);
                null != e && a.set_blurY(e);
                null != f && a.set_strength(f);
                null != h &&
                    a.set_quality(h);
                null != k && a.set_inner(k);
                null != m && a.set_knockout(m);
                return a
            };
            var Cd = function() {};
            g["bikas.game.CanvasDrawDo"] = Cd;
            Cd.__name__ = ["bikas", "game", "CanvasDrawDo"];
            Cd.drawPolygon = function(a, b, c, d, e) {
                if (3 > d.length) w.trace("warning: polygon contains less than 3 points", {
                    fileName: "CanvasDrawDo.hx",
                    lineNumber: 24,
                    className: "bikas.game.CanvasDrawDo",
                    methodName: "drawPolygon"
                });
                else {
                    a.fillStyle = "#" + Ne.rgbIntToRGBHexString(b);
                    a.globalAlpha = c;
                    a.beginPath();
                    b = !1;
                    null != e && (d.length == e.length ? b = !0 : w.trace("warning: points.length != commands.length", {
                        fileName: "CanvasDrawDo.hx",
                        lineNumber: 37,
                        className: "bikas.game.CanvasDrawDo",
                        methodName: "drawPolygon"
                    }));
                    if (b)
                        for (b = 0, c = d.length; b < c;) {
                            var f = b++;
                            e[f] == fh.draw_command_move_to ? a.moveTo(d[f].x, d[f].y) : e[f] == fh.draw_command_line_to ? a.lineTo(d[f].x, d[f].y) : w.trace("warning: unrecognized command " + e[f], {
                                fileName: "CanvasDrawDo.hx",
                                lineNumber: 53,
                                className: "bikas.game.CanvasDrawDo",
                                methodName: "drawPolygon"
                            })
                        } else
                            for (a.moveTo(d[0].x, d[0].y), e = 1, b = d.length; e < b;) c = e++, a.lineTo(d[c].x, d[c].y);
                    a.closePath();
                    a.fill()
                }
            };
            Cd.drawStroke = function(a, b, c, d, e, f, h) {
                null == h && (h = "");
                null == f && (f = "");
                a.strokeStyle = "#" + Ne.rgbIntToRGBHexString(c);
                a.lineWidth = e;
                c = a.lineCap;
                e = a.lineJoin;
                "" != f && (a.lineCap = f);
                "" != h && (a.lineJoin = h);
                a.globalAlpha = d;
                a.beginPath();
                a.moveTo(b[0].x, b[0].y);
                d = 1;
                for (f = b.length; d < f;) h = d++, a.lineTo(b[h].x, b[h].y);
                a.closePath();
                a.stroke();
                a.lineCap = c;
                a.lineJoin = e
            };
            Cd.drawRailGraphics = function(a, b, c, d, e, f, h, k, m, r) {
                null == r && (r = 3);
                null == m && (m = 4);
                a.fillStyle = "#" + Ne.rgbIntToRGBHexString(h);
                a.strokeStyle =
                    "#" + Ne.rgbIntToRGBHexString(h);
                a.lineWidth = r;
                a.beginPath();
                h = e;
                k = Math.PI / 90;
                r = 0;
                var I = Math.abs(H.angleDifferenceRad(f, h)),
                    g = !1,
                    l = Math.cos(e) * d + b;
                e = Math.sin(e) * d + c;
                for (var n = Math.cos(f) * d + b, p = Math.sin(f) * d + c; 0 < I;) {
                    f = Math.cos(h) * d + b;
                    var x = Math.sin(h) * d + c;
                    g ? (a.moveTo(f, x), g = !1) : a.lineTo(f, x);
                    h += k;
                    h = H.normalizeAngle(h);
                    I -= k;
                    if (360 < r++) {
                        w.trace("loop broke :(", {
                            fileName: "CanvasDrawDo.hx",
                            lineNumber: 145,
                            className: "bikas.game.CanvasDrawDo",
                            methodName: "drawRailGraphics"
                        });
                        break
                    }
                }
                a.lineTo(n, p);
                a.stroke();
                a.beginPath();
                a.arc(l, e, m, 0, 2 * Math.PI);
                a.fill();
                a.beginPath();
                a.arc(n, p, m, 0, 2 * Math.PI);
                a.fill()
            };
            Cd.createBitmapDataSourceForCanvas = function(a, b, c, d) {
                a = Kb.fromCanvas(a);
                var e = new Me(vg.BitmapDataSourceGenerated);
                e.bitmap_data = a;
                e.center_point = b;
                e.scale = d;
                e.original_width = H.boundsWidth(c);
                e.original_height = H.boundsHeight(c);
                return e
            };
            Cd.drawPlayWindowAndMakeBitmapDataSource = function(a, b) {
                for (var c = [], d = 0; d < a.length;) {
                    var e = a[d];
                    ++d;
                    c.push(e.points)
                }
                var f = Ub.getBoundsFromSeveralPolygons(c);
                c = H.copyBounds(f);
                d = Math.ceil(sa.level_black_outer_border.get_blurX() * b * 1.1) + 2;
                xb.expandBounds(f, d);
                d = new W(0, 0);
                d.x = -f.min_x;
                d.y = -f.min_y;
                e = La.get_document().createElement("canvas");
                e.width = Math.ceil(H.boundsWidth(f));
                e.height = Math.ceil(H.boundsHeight(f));
                var h = e.getContext("2d", "2d");
                h.translate(-f.min_x, -f.min_y);
                h.globalCompositeOperation = "source-over";
                f = Xa.paper_2x.bitmap_data.image.buffer.get_src();
                f = h.createPattern(f, "repeat");
                for (var k = Va.createBrightnessFilter(10), m = Va.createContrastFilter(10), r = 0; r < a.length;) {
                    var I =
                        a[r];
                    ++r;
                    h.globalCompositeOperation = "source-over";
                    var g = Ne.rgbIntToColorARGB(I.color);
                    Va.applyColorMatrixFilterToColor(g, k);
                    Va.applyColorMatrixFilterToColor(g, m);
                    g = Ne.colorARGBIntToRGBInt(g);
                    Cd.drawPolygon(h, g, I.alpha, I.points, I.commands);
                    Cd.drawPolygon(h, g, I.alpha, I.points, I.commands);
                    h.globalCompositeOperation = "multiply";
                    h.fillStyle = f;
                    h.beginPath();
                    h.moveTo(I.points[0].x, I.points[0].y);
                    g = 1;
                    for (var l = I.points.length; g < l;) {
                        var n = g++;
                        h.lineTo(I.points[n].x, I.points[n].y)
                    }
                    h.closePath();
                    h.fill()
                }
                h.globalCompositeOperation =
                    "destination-over";
                for (f = 0; f < a.length;) k = a[f], ++f, Cd.drawStroke(h, k.points, sa.level_highlight_color, 1, sa.level_black_outer_border.get_blurX() * b * 1.1, "round", "round");
                for (f = 0; f < a.length;) k = a[f], ++f, Cd.drawStroke(h, k.points, sa.level_shade_color, 1, sa.level_black_outer_border.get_blurX() * b * 2.2, "round", "round");
                return Cd.createBitmapDataSourceForCanvas(e, d, c, b)
            };
            Cd.drawFinalShapeAndMakeBitmapDataSource = function(a, b, c, d, e) {
                a = [];
                var f = new W(0, 0);
                d = new $d;
                d.scale_x = e;
                d.scale_y = e;
                for (var h = 0; h < b.length;) {
                    var k =
                        b[h];
                    ++h;
                    k = H.copyPoint(k);
                    xb.applyTransformToPoint(k, f, d);
                    a.push(k)
                }
                h = new W(0, 0);
                h.x = 0;
                h.y = 0;
                xb.applyTransformToPoint(h, f, d);
                k = Ub.getPolygonBounds(a);
                b = H.copyBounds(k);
                d = Math.ceil(sa.level_black_outer_border.get_blurX() * d.scale_x * 1.5);
                xb.expandBounds(k, d);
                d = new W(0, 0);
                d.x = h.x - k.min_x;
                d.y = h.y - k.min_y;
                f = La.get_document().createElement("canvas");
                f.width = Math.ceil(H.boundsWidth(k));
                f.height = Math.ceil(H.boundsHeight(k));
                h = f.getContext("2d", "2d");
                h.translate(-k.min_x, -k.min_y);
                h.globalCompositeOperation =
                    "source-over";
                for (k = 0; k < c.length;) {
                    var m = c[k];
                    ++k;
                    Cd.drawPolygon(h, m.color, m.alpha, m.points, m.commands);
                    Cd.drawPolygon(h, m.color, m.alpha, m.points, m.commands)
                }
                h.globalCompositeOperation = "multiply";
                c = Xa.paper_2x.bitmap_data.image.buffer.get_src();
                c = h.createPattern(c, "repeat");
                h.fillStyle = c;
                h.beginPath();
                h.moveTo(a[0].x, a[0].y);
                c = 1;
                for (k = a.length; c < k;) m = c++, h.lineTo(a[m].x, a[m].y);
                h.closePath();
                h.fill();
                h.globalCompositeOperation = "source-atop";
                Cd.drawStroke(h, a, sa.level_highlight_color, 1, sa.level_white_inner_border.get_blurX() *
                    e, "round", "round");
                h.globalCompositeOperation = "destination-over";
                Cd.drawStroke(h, a, sa.level_shade_color, 1, sa.level_black_outer_border.get_blurX() * e * 1.2, "round", "round");
                h.globalCompositeOperation = "source-over";
                return Cd.createBitmapDataSourceForCanvas(f, d, b, e)
            };
            Cd.drawLevelPartAndMakeBitmapDataSource = function(a, b, c, d) {
                var e = [],
                    f = new W(0, 0),
                    h = new $d;
                h.scale_x = d;
                h.scale_y = d;
                for (var k = 0, m = a.entity.polygon.points; k < m.length;) {
                    var r = m[k];
                    ++k;
                    r = H.copyPoint(r);
                    r.x += a.entity.position.x - b.x;
                    r.y += a.entity.position.y -
                        b.y;
                    xb.applyTransformToPoint(r, f, h);
                    e.push(r)
                }
                k = new W(0, 0);
                k.x += a.entity.position.x - b.x;
                k.y += a.entity.position.y - b.y;
                xb.applyTransformToPoint(k, f, h);
                m = Ub.getPolygonBounds(e);
                a = H.copyBounds(m);
                b = Math.ceil(sa.level_black_outer_border.get_blurX() * h.scale_x * 1.5);
                xb.expandBounds(m, b);
                b = new W(0, 0);
                b.x = k.x - m.min_x;
                b.y = k.y - m.min_y;
                f = La.get_document().createElement("canvas");
                f.width = Math.ceil(H.boundsWidth(m));
                f.height = Math.ceil(H.boundsHeight(m));
                k = f.getContext("2d", "2d");
                k.translate(-m.min_x, -m.min_y);
                k.save();
                k.globalCompositeOperation = "source-over";
                Cd.drawPolygon(k, 0, 0, e);
                k.clip();
                for (m = 0; m < c.length;) r = c[m], ++m, Cd.drawPolygon(k, r.color, r.alpha, r.points, r.commands), Cd.drawPolygon(k, r.color, r.alpha, r.points, r.commands);
                k.globalCompositeOperation = "multiply";
                c = Xa.paper_2x.bitmap_data.image.buffer.get_src();
                c = k.createPattern(c, "repeat");
                k.fillStyle = c;
                k.beginPath();
                k.moveTo(e[0].x, e[0].y);
                c = 1;
                for (m = e.length; c < m;) r = c++, k.lineTo(e[r].x, e[r].y);
                k.moveTo(e[0].x, e[0].y);
                c = 1;
                for (m = e.length; c < m;) r = c++, k.lineTo(e[r].x,
                    e[r].y);
                k.closePath();
                k.fill();
                k.restore();
                k.globalCompositeOperation = "source-atop";
                Cd.drawStroke(k, e, sa.level_highlight_color, 1, sa.level_white_inner_border.get_blurX() * h.scale_x, "round", "round");
                k.globalCompositeOperation = "destination-over";
                Cd.drawStroke(k, e, sa.area_shade_color, 1, sa.level_black_outer_border.get_blurX() * h.scale_x * 1.2, "round", "round");
                return Cd.createBitmapDataSourceForCanvas(f, b, a, d)
            };
            var ht = function(a) {
                this.is_arc_plus_rotator = !1;
                this.arc_to_angle = 45;
                this.arc_from_angle = -45;
                this.before_comma =
                    "p0+p1";
                this.arc_edit_debug_window = null;
                this.lines = new S;
                this.is_arc = this.is_arc_circle = this.is_area_start = this.is_area_end = !1;
                this.parts = [];
                this.marker = new nq(a)
            };
            g["bikas.game.ConnectorGraphics"] = ht;
            ht.__name__ = ["bikas", "game", "ConnectorGraphics"];
            ht.prototype = {
                marker: null,
                parts: null,
                is_arc: null,
                is_arc_circle: null,
                is_area_start: null,
                is_area_end: null,
                lines: null,
                arc_edit_debug_window: null,
                before_comma: null,
                arc_from_angle: null,
                arc_to_angle: null,
                is_arc_plus_rotator: null,
                field_from: null,
                field_to: null,
                __class__: ht
            };
            var nq = function(a) {
                this.sprite = new S;
                this.exists = !0;
                this.position_cache = new W(0, 0);
                this.name_cache = "";
                this.entity = a
            };
            g["bikas.game.ConnectorPart"] = nq;
            nq.__name__ = ["bikas", "game", "ConnectorPart"];
            nq.prototype = {
                entity: null,
                name_cache: null,
                position_cache: null,
                exists: null,
                sprite: null,
                __class__: nq
            };
            var it = function() {
                this.levels = []
            };
            g["bikas.game.FinalShapeView"] = it;
            it.__name__ = ["bikas", "game", "FinalShapeView"];
            it.prototype = {
                container: null,
                dot_grid: null,
                background: null,
                levels: null,
                __class__: it
            };
            var jt = function() {};
            g["bikas.game.FinalShapeLevel"] = jt;
            jt.__name__ = ["bikas", "game", "FinalShapeLevel"];
            jt.prototype = {
                scale: null,
                bitmap: null,
                source: null,
                __class__: jt
            };
            var Bc = function() {
                this.final_shape_view = null;
                this.connectors = [];
                this.borders = null
            };
            g["bikas.game.EditorGame"] = Bc;
            Bc.__name__ = ["bikas", "game", "EditorGame"];
            Bc.prototype = {
                game_levels: null,
                borders: null,
                connectors: null,
                final_shape_view: null,
                __class__: Bc
            };
            var Fa = function() {};
            g["bikas.game.EditorGameDo"] = Fa;
            Fa.__name__ = ["bikas", "game", "EditorGameDo"];
            Fa.create = function(a, b) {
                var c = new Bc;
                c.game_levels = b;
                a.keyboard_p_polygon_creation_func = Fa.createDynamicPart;
                a.keyboard_p_polygon_finish_func = Fa.finishCreatingDynamicPart;
                return c
            };
            Fa.showGameEditorMenu = function(a, b, c, d) {
                var e = a.main_menu.debug_window.setup,
                    f = ca.createCreationWindow(e, "Game", 120, 600),
                    h = f.window_box.contents;
                Fa.addButton(h, 120, e, "Additional Procedures", function() {
                    var e = v.createDebugWindow("Additional Procedures", 400, !0, cc.DESTROY);
                    v.addButton(e, "Procedures For Adding Levels", function() {
                        Fa.openLevelAddingProcedures(a)
                    });
                    v.addButton(e, "Center and Align Polygons in Selected Prefabs (with undo)", function() {
                        y.startUndoPack(a.undo);
                        for (var b = [], c = 0, d = a.current_group.group.entities; c < d.length;) {
                            var e = d[c];
                            ++c;
                            e.selected && null != e.prefab_link && null != e.prefab_link.prefab_entity && b.push(e.prefab_link.prefab_entity)
                        }
                        for (d = c = 0; d < b.length;) {
                            e = b[d];
                            ++d;
                            w.trace("process prefab: " + e.name, {
                                fileName: "EditorGameDo.hx",
                                lineNumber: 122,
                                className: "bikas.game.EditorGameDo",
                                methodName: "showGameEditorMenu"
                            });
                            for (var f = !1, h = 0, k = e.group.entities; h <
                                k.length;) {
                                var g = k[h];
                                ++h;
                                null != g.polygon && g.polygon.body_type == kc.DYNAMIC && (Fa.flattenAndAlignPolygonEntityWithUndo(g, a.undo), na.refreshGroupBoundsIncludingParents(g), f = !0)
                            }
                            f && (eq.refresh(e), ++c)
                        }
                        w.trace("total processed: " + c, {
                            fileName: "EditorGameDo.hx",
                            lineNumber: 154,
                            className: "bikas.game.EditorGameDo",
                            methodName: "showGameEditorMenu"
                        });
                        y.endUndoPack(a.undo)
                    });
                    v.addButton(e, "Open/Close Final Shape View", function() {
                        Fa.openCloseFinalShapeView(a, b, d, 1)
                    });
                    v.addButton(e, "Final Shape Editor", function() {
                        Fa.openFinalShapeEditor(a,
                            b, c, d)
                    });
                    v.addButton(e, "Rename Level Shape Bitmaps from year2019 to year2020", function() {
                        var b = function(a) {
                            a = ka.replace(a, "level_year2019_week41", "level_year2020");
                            a = ka.replace(a, "level_year2019_week42", "level_year2020");
                            a = ka.replace(a, "level_year2019_week43", "level_year2020");
                            return a = ka.replace(a, "level_year2019_week44", "level_year2020")
                        };
                        if (null != a.library_group) {
                            w.trace(a.library_group.name, {
                                fileName: "EditorGameDo.hx",
                                lineNumber: 192,
                                className: "bikas.game.EditorGameDo",
                                methodName: "showGameEditorMenu"
                            });
                            for (var c = 0, d = a.library_group.group.entities; c < d.length;) {
                                var e = d[c];
                                ++c;
                                e.name = b(e.name);
                                w.trace("\t" + e.name, {
                                    fileName: "EditorGameDo.hx",
                                    lineNumber: 197,
                                    className: "bikas.game.EditorGameDo",
                                    methodName: "showGameEditorMenu"
                                });
                                if (null != e.group)
                                    for (var f = 0, h = e.group.entities; f < h.length;) {
                                        var k = h[f];
                                        ++f;
                                        if (null != k.bitmap_images && 1 == k.bitmap_images.images.length) {
                                            var g = k.bitmap_images.images[0];
                                            g.source_name = b(g.source_name);
                                            w.trace("\t\t" + e.name, {
                                                fileName: "EditorGameDo.hx",
                                                lineNumber: 205,
                                                className: "bikas.game.EditorGameDo",
                                                methodName: "showGameEditorMenu"
                                            });
                                            g.bitmap_data_source = V.retrieveBitmapData(g.source_name, a.bitmap_assets);
                                            Bh.refresh(k)
                                        }
                                    }
                            }
                        }
                        w.trace(a.stage_group.name, {
                            fileName: "EditorGameDo.hx",
                            lineNumber: 215,
                            className: "bikas.game.EditorGameDo",
                            methodName: "showGameEditorMenu"
                        });
                        c = 0;
                        for (d = a.stage_group.group.entities; c < d.length;) e = d[c], ++c, e.name = b(e.name), w.trace("\t" + e.name, {
                            fileName: "EditorGameDo.hx",
                            lineNumber: 218,
                            className: "bikas.game.EditorGameDo",
                            methodName: "showGameEditorMenu"
                        });
                        if (null != a.library_group)
                            for (b =
                                F.getSortedPrefabsByLayersOfInnerPrefabs(a.library_group.group.entities), c = 0; c < b.length;) d = b[c], ++c, na.refreshEntityIncludingChildren(d);
                        na.refreshEntityIncludingChildren(a.stage_group)
                    });
                    ca.openClickedDebugWindow(a.menu_container, e)
                });
                Fa.addButton(h, 120, e, "Lock and Rename Bitmap", function() {
                    for (var b = null, c = 0, d = a.current_group.group.entities; c < d.length;) {
                        var e = d[c];
                        ++c;
                        null != e.bitmap_images && 0 < e.bitmap_images.images.length && (b = e)
                    }
                    null != b ? (c = b.name, b.deletable = !1, b.transform_editable = !1, b.draggable = !1, b.name = "shape", w.trace("locked and renamed " + c + " to " + b.name, {
                        fileName: "EditorGameDo.hx",
                        lineNumber: 253,
                        className: "bikas.game.EditorGameDo",
                        methodName: "showGameEditorMenu"
                    })) : w.trace("didn't find any bitmap to rename", {
                        fileName: "EditorGameDo.hx",
                        lineNumber: 255,
                        className: "bikas.game.EditorGameDo",
                        methodName: "showGameEditorMenu"
                    })
                });
                Fa.addButton(h, 120, e, "Lock and Align Polygons", function() {
                    y.startUndoPack(a.undo);
                    for (var b = 0, c = a.current_group.group.entities; b < c.length;) {
                        var d = c[b];
                        ++b;
                        if (null != d.polygon) {
                            if (d.deletable ||
                                d.draggable || d.transform_editable) y.pushChange(a.undo, d, "deletable", d.deletable), y.pushChange(a.undo, d, "draggable", d.draggable), y.pushChange(a.undo, d, "transform_editable", d.transform_editable), d.deletable = !1, d.draggable = !1, d.transform_editable = !1;
                            Fa.flattenAndAlignPolygonEntityWithUndo(d, a.undo)
                        }
                    }
                    y.endUndoPack(a.undo)
                });
                Fa.addButton(h, 120, e, "Align Selected Polygons", function() {
                    y.startUndoPack(a.undo);
                    for (var b = 0, c = a.current_group.group.entities; b < c.length;) {
                        var d = c[b];
                        ++b;
                        d.selected && null != d.polygon &&
                            Fa.flattenAndAlignPolygonEntityWithUndo(d, a.undo)
                    }
                    y.endUndoPack(a.undo)
                });
                Fa.addButton(h, 120, e, "Snap Points for 1 Selected Polygon (no grid)", function() {
                    for (var b = [], c = [], d = 0, e = a.current_group.group.entities; d < e.length;) {
                        var f = e[d];
                        ++d;
                        f.selected && c.push(f);
                        f.selected && null != f.polygon && b.push(f)
                    }
                    1 < c.length ? w.trace("warning: too many entities selected", {
                        fileName: "EditorGameDo.hx",
                        lineNumber: 307,
                        className: "bikas.game.EditorGameDo",
                        methodName: "showGameEditorMenu"
                    }) : 0 == b.length ? w.trace("warning: no polygons is selected", {
                        fileName: "EditorGameDo.hx",
                        lineNumber: 310,
                        className: "bikas.game.EditorGameDo",
                        methodName: "showGameEditorMenu"
                    }) : 1 == b.length ? (y.startUndoPack(a.undo), Fa.snapPointsForSelectedPolygon(a, b[0], a.undo), y.endUndoPack(a.undo)) : 1 < b.length && w.trace("warning: more than 1 polygon is selected", {
                        fileName: "EditorGameDo.hx",
                        lineNumber: 320,
                        className: "bikas.game.EditorGameDo",
                        methodName: "showGameEditorMenu"
                    })
                });
                ca.addCreationButton(a, e, h, 120, "Center Part", function() {
                    var a = F.createMarkerEntity();
                    a.name = "center";
                    a.additional.string_draw.use_name = !0;
                    return a
                });
                ca.addCreationButton(a, e, h, 120, "Shape Part", Fa.createShapePart);
                ca.addCreationButton(a, e, h, 120, "Static Part", function() {
                    return Fa.createStaticPart(a)
                });
                ca.addCreationButton(a, e, h, 120, "Dynamic Part", function() {
                    return Fa.createDynamicPart(a)
                });
                ca.addCreationButton(a, e, h, 120, "Dynamic Part, Layer2", function() {
                    var b = Fa.createDynamicPart(a);
                    b.name += ",L2";
                    return b
                });
                ca.addCreationButton(a, e, h, 120, "Pivot Joint", function() {
                    var b = Fa.getPartNumbers(a, !1);
                    return Fa.createConnectorMarker("p" + b[0] +
                        "+p" + b[1])
                });
                ca.addCreationButton(a, e, h, 120, "Rotator Joint", function() {
                    var b = Fa.getPartNumbers(a, !0);
                    return Fa.createConnectorMarker("p" + b[0] + "+p" + b[1] + ", rot")
                });
                ca.addCreationButton(a, e, h, 120, "Rail Joint", function() {
                    var b = Fa.getPartNumbers(a, !0);
                    return Fa.createConnectorMarker("p" + b[0] + "+p" + b[1] + ", limit from -45 to 45")
                });
                ca.addCreationButton(a, e, h, 120, "Rail Joint +Rot", function() {
                    var b = Fa.getPartNumbers(a, !0);
                    return Fa.createConnectorMarker("p" + b[0] + "+p" + b[1] + ", limit from -45 to 45 +rot")
                });
                ca.addCreationButton(a, e, h, 120, "Circle Joint", function() {
                    var b = Fa.getPartNumbers(a, !0);
                    return Fa.createConnectorMarker("p" + b[0] + "+p" + b[1] + ", circle")
                });
                ca.addCreationButton(a, e, h, 120, "Circle Joint +Rot", function() {
                    var b = Fa.getPartNumbers(a, !0);
                    return Fa.createConnectorMarker("p" + b[0] + "+p" + b[1] + ", circle +rot")
                });
                ca.addCreationButton(a, e, h, 120, "Area Start", function() {
                    var b = Fa.getPartNumbers(a, !0, !0);
                    return Fa.createConnectorMarker("p" + b[0] + "+p" + b[1] + ", area_start")
                });
                ca.addCreationButton(a, e, h, 120,
                    "Area End",
                    function() {
                        var b = Fa.getPartNumbers(a, !0, !0);
                        return Fa.createConnectorMarker("p" + b[0] + "+p" + b[1] + ", area_end")
                    });
                Fa.addButton(h, 120, e, "Un/Mark Part as Layer 2", function() {
                    y.startUndoPack(a.undo);
                    for (var b = a.current_group.group.edit.selected_entities, c = 0; c < b.length;) {
                        var d = b[c];
                        ++c;
                        if ("" != d.name) {
                            for (var e = !1, f = d.name.split(","), h = 0; h < f.length;) {
                                var g = f[h];
                                ++h;
                                if ("L2" == ka.replace(g, " ", "")) {
                                    e = !0;
                                    break
                                }
                            }
                            e ? (y.pushChange(a.undo, d, "name", d.name), y.pushChange(a.undo, d, "name", d.name), d.name = ka.replace(d.name,
                                ",L2", ""), d.name = ka.replace(d.name, ", L2", "")) : (y.pushChange(a.undo, d, "name", d.name), d.name += ",L2");
                            Wd.refresh(d)
                        }
                    }
                    y.endUndoPack(a.undo)
                });
                Fa.addButton(h, 120, e, "Switch Part to Dynamic/Static", function() {
                    y.startUndoPack(a.undo);
                    for (var b = a.current_group.group.edit.selected_entities, c = 0; c < b.length;) {
                        var d = b[c];
                        ++c;
                        null != d.polygon && (d.polygon.body_type == kc.STATIC ? (y.pushChange(a.undo, d, "deletable", d.deletable), y.pushChange(a.undo, d.polygon, "body_type", d.polygon.body_type), d.deletable = !0, d.polygon.body_type =
                            kc.DYNAMIC, Lf.refresh(d), null != d.additional && null != d.additional.string_draw && (y.pushChange(a.undo, d.additional.string_draw, "type", d.additional.string_draw.type), d.additional.string_draw.type = Yc.DEFAULT, Wd.refresh(d))) : d.polygon.body_type == kc.DYNAMIC && (y.pushChange(a.undo, d, "deletable", d.deletable), y.pushChange(a.undo, d.polygon, "body_type", d.polygon.body_type), d.deletable = !1, d.polygon.body_type = kc.STATIC, Lf.refresh(d), null != d.additional && null != d.additional.string_draw && (y.pushChange(a.undo, d.additional.string_draw,
                            "type", d.additional.string_draw.type), d.additional.string_draw.type = Yc.DARK, Wd.refresh(d))))
                    }
                    y.endUndoPack(a.undo)
                });
                ca.showCreationWindow(a, a.main_menu.debug_window, f)
            };
            Fa.openLevelAddingProcedures = function(a) {
                var b = v.createDebugWindow("Procedures For Adding Levels", 400, !0, cc.DESTROY);
                v.addText(b, "1. add bitmaps to stage manually");
                v.addButton(b, "2. auto-add shapes to all bitmaps", function() {
                    for (var b = [], d = 0, e = a.current_group.group.entities; d < e.length;) {
                        var f = e[d];
                        ++d;
                        if (null != f.bitmap_images && 1 ==
                            f.bitmap_images.images.length) {
                            var h = f.bitmap_images.images[0].source_name;
                            if (a.bitmap_polygons_map.exists(h)) {
                                for (var k = !1, m = 0, r = a.current_group.group.entities; m < r.length;) {
                                    var I = r[m];
                                    ++m;
                                    if (null != I.polygon && "shape" == I.name && 300 > H.distanceBetweenPoints(I.position, f.position)) {
                                        k = !0;
                                        break
                                    }
                                }
                                if (!k && (h = a.bitmap_polygons_map.get(h), 0 < h.length)) {
                                    k = Ub.mergeSeveralPolygonsAtPoints(h, 1);
                                    h = [];
                                    m = 0;
                                    for (r = k.length; m < r;) {
                                        var g = m++;
                                        I = 0 == g ? k[k.length - 1] : k[g - 1];
                                        g = k[g];
                                        2 < H.distanceBetweenPoints(I, g) && h.push(H.copyPoint(g))
                                    }
                                    3 >
                                        h.length ? w.trace("skip: " + f.name + ", because largest polygon has less than 3 points (maybe has curved shapes which are skipped)", {
                                            fileName: "EditorGameDo.hx",
                                            lineNumber: 578,
                                            className: "bikas.game.EditorGameDo",
                                            methodName: "openLevelAddingProcedures"
                                        }) : (Ub.isPolygonClockwise(h) || h.reverse(), k = Fa.createShapePart(), k.polygon.points = h, k.position.x = f.position.x, k.position.y = f.position.y, b.push(k), w.trace("add shape for: " + f.name, {
                                            fileName: "EditorGameDo.hx",
                                            lineNumber: 592,
                                            className: "bikas.game.EditorGameDo",
                                            methodName: "openLevelAddingProcedures"
                                        }))
                                }
                            }
                        }
                    }
                    if (0 < b.length) {
                        y.startUndoPack(a.undo);
                        for (d = 0; d < b.length;) e = b[d], ++d, F.addEntityToGroup(a.current_group, e), na.addEntity(e);
                        y.pushEntitiesCreated(a.undo, b);
                        y.endUndoPack(a.undo)
                    }
                    w.trace("added: " + b.length + " shape entities", {
                        fileName: "EditorGameDo.hx",
                        lineNumber: 616,
                        className: "bikas.game.EditorGameDo",
                        methodName: "openLevelAddingProcedures"
                    })
                });
                v.addButton(b, "3. lock bitmaps", function() {
                    for (var b = 0, d = 0, e = a.current_group.group.entities; d < e.length;) {
                        var f =
                            e[d];
                        ++d;
                        null != f.bitmap_images && 1 == f.bitmap_images.images.length && (f.deletable || f.transform_editable || f.draggable) && (f.deletable = !1, f.transform_editable = !1, f.draggable = !1, ++b)
                    }
                    w.trace("locked " + b + " bitmaps", {
                        fileName: "EditorGameDo.hx",
                        lineNumber: 633,
                        className: "bikas.game.EditorGameDo",
                        methodName: "openLevelAddingProcedures"
                    })
                });
                v.addText(b, "4. correct and finish polygons for shapes manually");
                v.addButton(b, "5. convert all bitmaps with nearest shapes to prefab levels, lock and align too", function() {
                    var b = [];
                    y.startUndoPack(a.undo);
                    for (var d = 0, e = a.current_group.group.entities; d < e.length;) {
                        var f = e[d];
                        ++d;
                        if (null != f.bitmap_images && 1 == f.bitmap_images.images.length) {
                            for (var h = a.current_group.group.entities[0], k = H.distanceBetweenPoints(h.position, f.position), m = 0, r = a.current_group.group.entities; m < r.length;) {
                                var I = r[m];
                                ++m;
                                if (null != I.polygon && "shape" == I.name) {
                                    var g = H.distanceBetweenPoints(I.position, f.position);
                                    g < k && (h = I, k = g)
                                }
                            }
                            300 > k && (k = [f, h], f.deletable = !1, f.transform_editable = !1, f.draggable = !1, F.applyTransformToPolygonPointsAndCenter(h,
                                a.undo), b.push(k))
                        }
                    }
                    y.endUndoPack(a.undo);
                    for (d = 0; d < b.length;) {
                        e = b[d];
                        ++d;
                        f = e[0];
                        h = F.createPrefabWithUndo(a, a.current_group, e);
                        e = h[0];
                        h = h[1];
                        e.name = f.name;
                        h.name = e.name;
                        f = 0;
                        for (h = e.group.entities; f < h.length;)
                            if (k = h[f], ++f, null != k.bitmap_images) {
                                k.name = "shape";
                                break
                            } w.trace("created " + e.name + " prefab", {
                            fileName: "EditorGameDo.hx",
                            lineNumber: 696,
                            className: "bikas.game.EditorGameDo",
                            methodName: "openLevelAddingProcedures"
                        })
                    }
                    w.trace("created: " + b.length + " prefabs", {
                        fileName: "EditorGameDo.hx",
                        lineNumber: 698,
                        className: "bikas.game.EditorGameDo",
                        methodName: "openLevelAddingProcedures"
                    })
                });
                ca.openClickedDebugWindow(a.menu_container, b);
                return b
            };
            Fa.createShapePart = function() {
                var a = F.createPolygonEntity();
                F.createAndAddStringDraw(a, "", Yc.BLUE, 10);
                a.transform_editable = !1;
                a.draggable = !1;
                a.deletable = !1;
                a.selected_draw_type = id.BOUNDS;
                a.polygon.body_type = kc.NONE;
                a.polygon.draw_type = Lg.DEFAULT;
                a.polygon.color = 16054256;
                a.polygon.alpha = .5;
                a.additional.string_draw.use_name = !0;
                a.name = "shape";
                return a
            };
            Fa.createStaticPart =
                function(a) {
                    var b = F.createPolygonEntity();
                    F.createAndAddStringDraw(b, "", Yc.DARK, 8);
                    b.transform_editable = !1;
                    b.draggable = !1;
                    b.deletable = !1;
                    b.selected_draw_type = id.BOUNDS;
                    b.polygon.body_type = kc.STATIC;
                    b.polygon.color = 4087919;
                    b.polygon.alpha = .5;
                    b.additional.string_draw.use_name = !0;
                    b.name = "p" + Fa.findNextPartNum(a.current_group);
                    return b
                };
            Fa.createDynamicPart = function(a) {
                var b = F.createPolygonEntity();
                F.createAndAddStringDraw(b, "", Yc.DEFAULT, 8);
                b.transform_editable = !1;
                b.draggable = !1;
                b.selected_draw_type =
                    id.BOUNDS;
                b.polygon.body_type = kc.DYNAMIC;
                b.polygon.color = 4087919;
                b.polygon.alpha = .5;
                b.additional.string_draw.use_name = !0;
                b.name = "p" + Fa.findNextPartNum(a.current_group);
                return b
            };
            Fa.finishCreatingDynamicPart = function(a, b) {
                if (null != b.display && null != b.display.container && null != b.display.container.parent && null != b.polygon && null != b.polygon.points) {
                    y.startUndoPack(a.undo);
                    Fa.flattenAndAlignPolygonEntityWithUndo(b, a.undo);
                    if (b.deletable || b.draggable || b.transform_editable) y.pushChange(a.undo, b, "deletable",
                        b.deletable), y.pushChange(a.undo, b, "draggable", b.draggable), y.pushChange(a.undo, b, "transform_editable", b.transform_editable), b.deletable = !1, b.draggable = !1, b.transform_editable = !1;
                    y.endUndoPack(a.undo)
                }
            };
            Fa.createConnectorMarker = function(a) {
                var b = F.createMarkerEntity();
                b.additional.string_draw.size = 10;
                b.additional.string_draw.offset_y = -12;
                b.additional.point_draw.size = 6;
                b.name = a;
                b.additional.string_draw.use_name = !0;
                return b
            };
            Fa.destroyFinalShapeView = function(a) {
                if (null != a.final_shape_view) {
                    var b = a.final_shape_view;
                    D.destroyBackground(b.background);
                    b.container.parent.removeChild(b.container);
                    for (var c = 0, d = b.levels; c < d.length;) {
                        var e = d[c];
                        ++c;
                        null != e && (b.container.removeChild(e.bitmap), e.bitmap.set_bitmapData(null), V.destroyBitmapDataSource(e.source), e.bitmap = null, e.source = null)
                    }
                    b.dot_grid = null;
                    b.background = null;
                    b.levels = null;
                    a.final_shape_view = null
                }
            };
            Fa.openFinalShapeEditor = function(a, b, c, d) {
                var e = v.createDebugWindow("Final Shape", 400, !0, cc.DESTROY),
                    f = function(a, b) {
                        var c = T.field(sa, b);
                        v.addEdit(a, c, "blurX",
                            b + ".blurX");
                        v.addEdit(a, c, "blurY", b + ".blurY");
                        v.addEdit(a, c, "strength", b + ".strength")
                    };
                Bc.level_highlight_color_grey_value = Ne.rgbIntToColorARGBInt(sa.level_highlight_color).red;
                Bc.level_highlight_snapped_color_grey_value = Ne.rgbIntToColorARGBInt(sa.level_highlight_snapped_color).red;
                Bc.level_shade_color_grey_value = Ne.rgbIntToColorARGBInt(sa.level_shade_color).red;
                v.addEdit(e, Bc, "final_shape_scale");
                v.addEdit(e, Bc, "color_filter_brightness");
                v.addEdit(e, Bc, "color_filter_contrast");
                v.addEdit(e, Bc, "color_filter_saturation");
                v.addEdit(e, Bc, "level_highlight_color_grey_value");
                v.addEdit(e, Bc, "level_highlight_snapped_color_grey_value");
                v.addEdit(e, Bc, "level_shade_color_grey_value");
                f(e, "level_white_inner_border");
                f(e, "level_black_outer_border");
                var h = D.extractPrefabLevelName(a);
                v.addButton(e, "next level", function() {
                    var c = Fa.getSequentialLevelNameInGameAssets(b.game_levels, h, 1);
                    "" != c && (h = c, null != b.final_shape_view && Fa.destroyFinalShapeView(b), Fa.openCloseFinalShapeView(a, b, d, Bc.final_shape_scale, h))
                });
                v.addButton(e, "previous level",
                    function() {
                        var c = Fa.getSequentialLevelNameInGameAssets(b.game_levels, h, -1);
                        "" != c && (h = c, null != b.final_shape_view && Fa.destroyFinalShapeView(b), Fa.openCloseFinalShapeView(a, b, d, Bc.final_shape_scale, h))
                    });
                e.callbacks.after_apply = function(e) {
                    null != b.final_shape_view && Fa.destroyFinalShapeView(b);
                    e = Bc.level_highlight_color_grey_value;
                    var f = Bc.level_highlight_snapped_color_grey_value,
                        k = Bc.level_shade_color_grey_value;
                    sa.level_highlight_color = Ne.rgbIntsToRGBInt(e, e, e);
                    sa.level_highlight_snapped_color = Ne.rgbIntsToRGBInt(f,
                        f, f);
                    sa.level_shade_color = Ne.rgbIntsToRGBInt(k, k, k);
                    e = Va.createBrightnessFilter(Bc.color_filter_brightness);
                    f = Va.createContrastFilter(Bc.color_filter_contrast);
                    k = Va.createSaturationFilter(Bc.color_filter_saturation);
                    Fa.openCloseFinalShapeView(a, b, d, Bc.final_shape_scale, h, [e, f, k]);
                    cb.recreateLevelAssetCache(c.cache, c.game_levels, c.size, c.graphics_scale);
                    w.trace("StringTools.hex(GameStyle.level_highlight_color): " + ka.hex(sa.level_highlight_color), {
                        fileName: "GlobalMacro.hx",
                        lineNumber: 36,
                        className: "bikas.game.EditorGameDo",
                        methodName: "openFinalShapeEditor"
                    });
                    w.trace("StringTools.hex(GameStyle.level_highlight_snapped_color): " + ka.hex(sa.level_highlight_snapped_color), {
                        fileName: "GlobalMacro.hx",
                        lineNumber: 36,
                        className: "bikas.game.EditorGameDo",
                        methodName: "openFinalShapeEditor"
                    });
                    w.trace("StringTools.hex(GameStyle.level_shade_color): " + ka.hex(sa.level_shade_color), {
                        fileName: "GlobalMacro.hx",
                        lineNumber: 36,
                        className: "bikas.game.EditorGameDo",
                        methodName: "openFinalShapeEditor"
                    })
                };
                ca.openClickedDebugWindow(a.menu_container,
                    e)
            };
            Fa.openCloseFinalShapeView = function(a, b, c, d, e, f) {
                if (null != b.final_shape_view) Fa.destroyFinalShapeView(b);
                else {
                    var h = null,
                        k = null,
                        m = a.current_group.group.entities;
                    null == e && (e = D.extractPrefabLevelName(a));
                    if (null != e)
                        for (var r = 0, I = a.stage_group.group.entities; r < I.length;) {
                            var g = I[r];
                            ++r;
                            null != g.prefab_link && null != g.prefab_link.prefab_entity && g.prefab_link.prefab_entity.name == e && (m = g.prefab_link.prefab_entity.group.entities)
                        }
                    for (e = 0; e < m.length;) r = m[e], ++e, "shape" == r.name && null != r.polygon && r.polygon.body_type ==
                        kc.NONE && (h = r), null != r.bitmap_images && 0 < r.bitmap_images.images.length && (k = r);
                    if (null != h && null != k) {
                        b = b.final_shape_view = new it;
                        b.container = new S;
                        m = gc.default_size.width * d;
                        e = gc.default_size.height * d;
                        b.dot_grid = D.generateDotGrid(m, e);
                        b.background = D.createAndDrawBackground(d, m, e, b.dot_grid, [], !0);
                        b.container.addChild(b.background.bitmap);
                        b.levels.push(Fa.createFinalShapeLevel(h, k, c, d, f));
                        d = c = 0;
                        for (f = b.levels; d < f.length;) h = f[d], ++d, null != h && (c += h.bitmap.get_width() + 10);
                        d = 0;
                        for (f = b.levels.length; d < f;) h =
                            d++, k = b.levels[h], null != k && (1 == b.levels.length ? k.bitmap.set_x(b.background.bitmap.get_width() / 2 - k.bitmap.get_width() / 2) : k.bitmap.set_x(ma.linear(b.background.bitmap.get_width() / 2 - c / 2 - k.bitmap.get_width() / 2, b.background.bitmap.get_width() / 2 + c / 2 - k.bitmap.get_width() / 2, h / (b.levels.length - 1))), k.bitmap.set_y(b.background.bitmap.get_height() / 2 - k.bitmap.get_height() / 2), b.container.addChild(k.bitmap));
                        b.container.set_x(a.menu_container.stage.stageWidth / 2 - b.container.get_width() / 2);
                        b.container.set_y(a.menu_container.stage.stageHeight /
                            2 - b.container.get_height() / 2);
                        a.menu_container.addChildAt(b.container, 0)
                    }
                }
            };
            Fa.createFinalShapeLevel = function(a, b, c, d, e) {
                var f = new jt;
                f.scale = d;
                var h = b.bitmap_images.images[0].source_name;
                if (c.exists(h)) h = c.get(h);
                else return w.trace("warning: movie clip equivalent does not exist for " + h, {
                    fileName: "EditorGameDo.hx",
                    lineNumber: 1043,
                    className: "bikas.game.EditorGameDo",
                    methodName: "createFinalShapeLevel"
                }), null;
                c = new S;
                h = aa.__cast(Q.createInstance(h, []), n);
                h.set_scaleX(h.set_scaleY(b.display.container.get_scaleX()));
                h.set_x(b.display.container.get_x());
                h.set_y(b.display.container.get_y());
                null != e && h.set_filters(e);
                b = new Ke;
                b.set_x(a.position.x);
                b.set_y(a.position.y);
                b.get_graphics().beginBitmapFill(Xa.paper.bitmap_data, null, !0, !0);
                e = new W(0, 0);
                var k = new $d;
                k.scale_x = d;
                k.scale_y = d;
                for (var m = 0, r = a.polygon.points.length; m < r;) {
                    var I = m++,
                        g = H.copyPoint(a.polygon.points[I]);
                    xb.applyTransformToPoint(g, e, k);
                    0 == I ? b.get_graphics().moveTo(g.x, g.y) : b.get_graphics().lineTo(g.x, g.y)
                }
                b.get_graphics().endFill();
                b.set_blendMode(9);
                b.set_scaleX(1 / d);
                b.set_scaleY(1 / d);
                c.set_scaleX(d);
                c.set_scaleY(d);
                c.addChild(h);
                c.addChild(b);
                a = cb.createLevelGlowFilters(d);
                c.set_filters(a.regular_part_filters);
                f.source = V.createAndDrawSource(c, !0, !0, 5, 5);
                f.bitmap = V.createBitmapUsingSource(f.source);
                f.bitmap.set_scaleX(1);
                f.bitmap.set_scaleY(1);
                return f
            };
            Fa.getSequentialLevelNameInGameAssets = function(a, b, c) {
                if ("" == b) return "";
                var d = a.level_map.get(b);
                if (null != d) {
                    a = d.parent_pack;
                    b = a.parent_timeline;
                    var e = b.packs.indexOf(a);
                    c = a.levels.indexOf(d) +
                        c;
                    0 > c ? (--e, 0 > e && (e = b.packs.length - 1), c = b.packs[e].levels.length - 1) : c >= a.levels.length && (c = 0, ++e, e >= b.packs.length && (e = 0));
                    return b.packs[e].levels[c].prefab_name
                }
                return ""
            };
            Fa.findNextPartNum = function(a) {
                for (var b = 0; 999 > b;) {
                    for (var c = b++, d = !1, e = 0, f = a.group.entities; e < f.length;) {
                        var h = f[e];
                        ++e;
                        if (Fa.isBodyPart(h) && c == E.parseInt(la.substr(Fa.getPartName(h), 1, null))) {
                            d = !0;
                            break
                        }
                    }
                    if (!d) return c
                }
                w.trace("warning: too many parts", {
                    fileName: "EditorGameDo.hx",
                    lineNumber: 1167,
                    className: "bikas.game.EditorGameDo",
                    methodName: "findNextPartNum"
                });
                return 0
            };
            Fa.isBodyPart = function(a) {
                a = a.name;
                return "p" == a.charAt(0) ? -1 == a.indexOf("+") ? !0 : !1 : !1
            };
            Fa.getAllPartsNumsSorted = function(a, b, c) {
                for (var d = [], e = 0; e < a.length;) {
                    var f = a[e];
                    ++e;
                    var h = !1;
                    b && null != f.polygon && f.polygon.body_type == kc.STATIC && (h = !0);
                    c && null != f.polygon && f.polygon.body_type == kc.DYNAMIC && (h = !0);
                    h && Fa.isBodyPart(f) && (f = E.parseInt(la.substr(Fa.getPartName(f), 1, null)), d.push(f))
                }
                d.sort(function(a, b) {
                    return a > b ? 1 : a < b ? -1 : 0
                });
                return d
            };
            Fa.getPartNumbers = function(a,
                b, c) {
                null == c && (c = !1);
                var d = Fa.getAllPartsNumsSorted(a.current_group.group.entities, !0, !0),
                    e = a.current_group.group.edit.selected_entities,
                    f = !1,
                    h = 0,
                    k = 1;
                if (0 < e.length) {
                    if (c && 1 == e.length && null == e[0].polygon && null != e[0].additional && null != e[0].additional.string_draw && (c = e[0].name.split(","), 2 == c.length)) {
                        var m = Nc.removeSpacesAtStartAndEnd(c[1]);
                        if ("area_start" == m || "area_end" == m)
                            if (m = c[0].split("+"), 2 == m.length && (c = Nc.removeSpacesAtStartAndEnd(m[0]), m = Nc.removeSpacesAtStartAndEnd(m[1]), c = ka.replace(c, "p",
                                    ""), m = ka.replace(m, "p", ""), c = E.parseInt(c), m = E.parseInt(m), null != c && null != m)) return [c, m]
                    }
                    c = Fa.getAllPartsNumsSorted(e, !0, !0);
                    2 == c.length && (h = c[0], k = c[1], f = !0)
                }
                f || (b && (0 < e.length ? (a = Fa.getAllPartsNumsSorted(a.current_group.group.entities, !0, !1), e = Fa.getAllPartsNumsSorted(e, !1, !0), d = [], 0 < a.length && d.push(a[0]), 0 < e.length && d.push(e[0])) : d = Fa.getAllPartsNumsSorted(a.current_group.group.entities, !0, !1)), 1 == d.length ? (h = d[0], k = h + 1) : 1 < d.length ? (h = d[d.length - 2], k = d[d.length - 1]) : (h = 0, k = 1));
                return [h, k]
            };
            Fa.addButton =
                function(a, b, c, d, e) {
                    ca.addButtonToHBox(a, d, b + 2 * c.height, c.height, c.padding, e)
                };
            Fa.findPartByName = function(a, b) {
                var c = 0;
                for (a = a.group.entities; c < a.length;) {
                    var d = a[c];
                    ++c;
                    if (Fa.getPartName(d) == b) return d
                }
                return null
            };
            Fa.getPartName = function(a) {
                var b = a.name.split(",");
                return null == b ? a.name : 0 < b.length ? Nc.removeSpacesAtStartAndEnd(b[0]) : a.name
            };
            Fa.flattenAndAlignPolygonEntityWithUndo = function(a, b) {
                F.applyTransformToPolygonPointsAndCenter(a, b);
                if (a.polygon.body_type == kc.STATIC || a.polygon.body_type == kc.DYNAMIC) {
                    var c =
                        oq.createBodyFromPolygon(a.polygon.points, Pc.get_DYNAMIC(), pd.normal, dk.very_light, 1, 1, 0);
                    if (null == c) {
                        w.trace("warning: body == null", {
                            fileName: "EditorGameDo.hx",
                            lineNumber: 1338,
                            className: "bikas.game.EditorGameDo",
                            methodName: "flattenAndAlignPolygonEntityWithUndo"
                        });
                        return
                    }
                    for (var d = 0, e = a.polygon.points; d < e.length;) {
                        var f = e[d];
                        ++d;
                        y.pushPointChange(b, f);
                        f.x -= c.get_position().get_x();
                        f.y -= c.get_position().get_y()
                    }
                    y.pushPointChange(b, a.position);
                    a.position.x += c.get_position().get_x();
                    a.position.y += c.get_position().get_y()
                }
                Lf.refresh(a);
                Ei.refresh(a);
                yg.refresh(a);
                a.selected && Zb.refresh(a)
            };
            Fa.snapPointsForSelectedPolygon = function(a, b, c) {
                b = a.current_group.group.entities;
                for (var d = [new W(0, 0)], e = [], f = 0, h = a.entities_editor.entity_edits; f < h.length;) {
                    var k = h[f];
                    ++f;
                    e.push(k.target)
                }
                new W(0, 0);
                f = a.entities_editor.entity_edits[0];
                h = 0;
                for (k = f.polygon_edit.edit_points; h < k.length;) {
                    var m = k[h];
                    ++h;
                    var r = [m.entity],
                        g = Va.convertPositionToLocal(a.entities_editor.group.display.contents, m.entity.position, a.current_group.display.contents);
                    F.pushPolygonEdit(a,
                        c, f, m);
                    m = F.findNearestSnapForEditEntity(g, d, e, a.entities_editor, r, b, a.stage_settings.snap_to_nearest_entity_distance, a.stage_settings.snap_to_nearest_polygon_point_distance, a.stage_settings.snap_to_nearest_polygon_line_distance, a.stage_settings.snap_to_straight_line_distance, a.bitmap_polygons_map);
                    if (null != m)
                        for (m = Va.convertPositionToLocal(a.current_group.display.contents, m, a.entities_editor.group.display.contents), g = 0; g < r.length;) {
                            var l = r[g];
                            ++g;
                            l.position.x = m.x;
                            l.position.y = m.y;
                            na.refreshPosition(l)
                        }
                }
                a =
                    f.target;
                c = 0;
                for (b = f.polygon_edit.edit_points; c < b.length;) e = b[c], ++c, d = e.entity, e = e.polygon_point, f = Va.convertPositionToLocal(d.container_link, d.position, a.display.contents), e.x = f.x, e.y = f.y, na.refreshPosition(d), Lf.refresh(a), yg.refresh(a), Zb.refresh(a), e = Va.convertPositionToLocal(a.display.container, e, d.container_link), d.position.x = e.x, d.position.y = e.y, na.refreshPosition(d)
            };
            Fa.destroyConnectorPart = function(a) {
                null != a.sprite && null != a.sprite.parent && a.sprite.parent.removeChild(a.sprite);
                a.entity =
                    null;
                a.position_cache = null;
                a.sprite = null
            };
            Fa.isConnectorPartChanged = function(a) {
                return a.name_cache != a.entity.name ? !0 : H.pointsEqual(a.position_cache, a.entity.position) ? !1 : !0
            };
            Fa.refreshConnectorCache = function(a) {
                a.name_cache = a.entity.name;
                a.position_cache.x = a.entity.position.x;
                a.position_cache.y = a.entity.position.y
            };
            Fa.update = function(a, b) {
                Fa.updateBorderDrawing(a, b);
                Fa.updateConnectorDrawing(a, b.connectors)
            };
            Fa.updateBorderDrawing = function(a, b) {
                for (var c = !1, d = 0, e = a.current_group.group.entities; d <
                    e.length;) {
                    var f = e[d];
                    ++d;
                    if ("p0" == Fa.getPartName(f)) {
                        c = !0;
                        break
                    }
                }
                if (c) null == b.borders && (b.borders = new S, b.borders.get_graphics().clear(), b.borders.get_graphics().lineStyle(1, 0), b.borders.get_graphics().drawRect(-320, -180, 640, 360), a.current_group.display.contents.addChildAt(b.borders, 0));
                else if (null != b.borders) {
                    c = b.borders.parent;
                    c.removeChild(b.borders);
                    d = 0;
                    for (a = a.library_group.group.entities; d < a.length;)
                        if (e = a[d], ++d, e.display.contents == c) {
                            na.refreshEntityIncludingChildren(e);
                            break
                        } b.borders =
                        null
                }
            };
            Fa.updateConnectorDrawing = function(a, b) {
                for (var c = 0, d = a.current_group.group.entities; c < d.length;) {
                    var e = d[c];
                    ++c;
                    if (-1 != e.name.indexOf("+")) {
                        var f = e.name.split(","),
                            h = !1,
                            k = !1,
                            m = !1,
                            r = !1;
                        if (1 == f.length) h = !1;
                        else if (1 < f.length) {
                            for (var g = 0; g < f.length;) {
                                var l = f[g];
                                ++g;
                                if (-1 != l.indexOf("limit")) {
                                    h = !0;
                                    break
                                } else if (-1 != l.indexOf("circle")) {
                                    k = !0;
                                    break
                                }
                            }
                            m = "area_start" == Nc.removeSpacesAtStartAndEnd(f[1]);
                            r = "area_end" == Nc.removeSpacesAtStartAndEnd(f[1])
                        }
                        for (var Mb = null, n = 0; n < b.length;) {
                            var p = b[n];
                            ++n;
                            if (p.marker.entity == e) {
                                Mb = p;
                                break
                            }
                        }
                        null == Mb && (Mb = new ht(e), b.push(Mb));
                        Mb.is_arc = h;
                        Mb.is_arc_circle = k;
                        Mb.is_area_start = m;
                        Mb.is_area_end = r;
                        var x = f[0].split("+");
                        if (0 < x.length) {
                            for (var w = 0, z = Mb.parts; w < z.length;) {
                                var u = z[w];
                                ++w;
                                u.exists = !1
                            }
                            for (var q = 0; q < x.length;) {
                                var L = x[q];
                                ++q;
                                for (var A = null, Ka = 0, y = Mb.parts; Ka < y.length;) {
                                    var t = y[Ka];
                                    ++Ka;
                                    if (t.entity.name == L) {
                                        A = t;
                                        break
                                    }
                                }
                                if (null == A) {
                                    var B = Fa.findPartByName(a.current_group, L);
                                    null != B && (A = new nq(B), Mb.parts.push(A))
                                }
                                null != A && (A.exists = !0)
                            }
                            for (var pa = [], J = 0, R = Mb.parts; J < R.length;) {
                                var Ca = R[J];
                                ++J;
                                Ca.exists || pa.push(Ca)
                            }
                            for (var X = 0; X < pa.length;) {
                                var oa = pa[X];
                                ++X;
                                Fa.destroyConnectorPart(oa);
                                la.remove(Mb.parts, oa)
                            }
                        }
                    }
                }
                for (var N = [], O = 0; O < b.length;) {
                    var K = b[O];
                    ++O;
                    var C = !1;
                    K.marker.entity.parent != a.current_group && (C = !0);
                    null == K.marker.entity.container_link && (C = !0);
                    if (C) N.push(K);
                    else {
                        var Q = !1;
                        if (Fa.isConnectorPartChanged(K.marker)) Q = !0;
                        else
                            for (var G = 0, P = K.parts; G < P.length;) {
                                var T = P[G];
                                ++G;
                                if (Fa.isConnectorPartChanged(T)) {
                                    Q = !0;
                                    break
                                }
                            }
                        if (Q) {
                            Fa.refreshConnectorCache(K.marker);
                            for (var V = 0, Y = K.parts; V < Y.length;) {
                                var le = Y[V];
                                ++V;
                                Fa.refreshConnectorCache(le)
                            }
                            K.lines.get_graphics().clear();
                            K.lines.get_graphics().lineStyle(2, 1651777);
                            K.lines.set_x(K.marker.entity.position.x);
                            K.lines.set_y(K.marker.entity.position.y);
                            for (var bb = 0, Lc = K.parts; bb < Lc.length;) {
                                var U = Lc[bb];
                                ++bb;
                                var M = U.sprite.get_graphics();
                                M.clear();
                                M.lineStyle(2, 1651777);
                                M.drawCircle(0, 0, 10);
                                U.sprite.set_x(U.entity.position.x);
                                U.sprite.set_y(U.entity.position.y);
                                var aa = new W;
                                aa.x = K.marker.entity.position.x - U.entity.position.x;
                                aa.y = K.marker.entity.position.y - U.entity.position.y;
                                Og.normalize(aa);
                                Og.multiply(aa, 10);
                                K.lines.get_graphics().moveTo(0, 0);
                                K.lines.get_graphics().lineTo(U.entity.position.x - K.marker.entity.position.x, U.entity.position.y - K.marker.entity.position.y);
                                null == U.sprite.parent && a.current_group.display.contents.addChild(U.sprite)
                            }
                            null == K.lines.parent && a.current_group.display.contents.addChild(K.lines);
                            if (K.is_arc || K.is_arc_circle) {
                                var ca = K.marker.entity.name.split(",");
                                if (1 == ca.length) continue;
                                for (var ra =
                                        null, Z = 0, ba = K.parts; Z < ba.length;) {
                                    var ha = ba[Z];
                                    ++Z;
                                    if (null != ha.entity.polygon && ha.entity.polygon.body_type == kc.DYNAMIC) {
                                        ra = ha.entity;
                                        break
                                    }
                                }
                                if (null == ra) continue;
                                if (K.is_arc) {
                                    for (var ja = "", da = 0; da < ca.length;) {
                                        var ka = ca[da];
                                        ++da;
                                        if (-1 != ka.indexOf("limit")) {
                                            ja = Nc.removeSpacesAtStartAndEnd(ka);
                                            break
                                        }
                                    }
                                    if ("" == ja) continue;
                                    var ea = ja.split(" ");
                                    if (5 > ea.length) continue;
                                    var gb = .017453292519943 * E.parseFloat(ea[2]),
                                        fa = .017453292519943 * E.parseFloat(ea[4]),
                                        yc = K.marker.entity.position,
                                        qa = H.distanceBetweenPoints(ra.position,
                                            K.marker.entity.position),
                                        bd = Id.subtract(ra.position, yc),
                                        ia = Id.angle(bd),
                                        Aa = D.createRailGraphics(yc.x, yc.y, qa, H.normalizeAngle(gb + ia), H.normalizeAngle(fa + ia), 1651777, 3, 5);
                                    null != K.marker.sprite && null != K.marker.sprite.parent && K.marker.sprite.parent.removeChild(K.marker.sprite);
                                    K.marker.sprite = Aa;
                                    a.current_group.display.contents.addChild(K.marker.sprite)
                                } else if (K.is_arc_circle) {
                                    for (var Fc = !1, ma = 0; ma < ca.length;) {
                                        var Gc = ca[ma];
                                        ++ma;
                                        if (-1 != Gc.indexOf("circle")) {
                                            Fc = !0;
                                            break
                                        }
                                    }
                                    if (!Fc) continue;
                                    var Ga = K.marker.entity.position,
                                        sa = H.distanceBetweenPoints(ra.position, K.marker.entity.position),
                                        ob = D.createCircleGraphics(Ga.x, Ga.y, sa, 1651777);
                                    null != K.marker.sprite && null != K.marker.sprite.parent && K.marker.sprite.parent.removeChild(K.marker.sprite);
                                    K.marker.sprite = ob;
                                    a.current_group.display.contents.addChild(K.marker.sprite)
                                }
                            }
                            if (K.is_area_start || K.is_area_end) {
                                for (var xa = null, wa = 0, Ea = K.parts; wa < Ea.length;) {
                                    var za = Ea[wa];
                                    ++wa;
                                    if (null != za.entity.polygon && za.entity.polygon.body_type == kc.DYNAMIC) {
                                        xa = za.entity;
                                        break
                                    }
                                }
                                if (null == xa) continue;
                                for (var Ha = Nc.removeSpacesAtStartAndEnd(K.marker.entity.name.split(",")[0]), ua = null, ta = 0; ta < b.length;) {
                                    var Da = b[ta];
                                    ++ta;
                                    if ((Da.is_area_start || Da.is_area_end) && Da.marker.entity.name != K.marker.entity.name) {
                                        var Ia = Nc.removeSpacesAtStartAndEnd(Da.marker.entity.name.split(",")[0]);
                                        if (Ha == Ia) {
                                            ua = Da;
                                            break
                                        }
                                    }
                                }
                                var va = Id.copy(K.marker.entity.position),
                                    ya = Id.copy(xa.position),
                                    La = K,
                                    Ja = K.marker.entity.display.depth_cache;
                                null != ua && (Ja = H.minInt(ua.marker.entity.display.depth_cache, Ja), ua.is_area_start && (La = ua),
                                    null != ua.marker.sprite.parent && ua.marker.sprite.parent.removeChild(ua.marker.sprite), ya = Id.copy(ua.marker.entity.position));
                                var Pa = H.createRectangleFrom2Points(va, ya);
                                Zn.createRectangle(Pa.width, Pa.height, 0, .1);
                                var Oa = H.createBoundsFrom2Points(va, ya),
                                    Na = new S;
                                Na.get_graphics().beginFill(0, .075);
                                var Qa = Cc.area_connection_circle_radius + 1.25;
                                Na.get_graphics().drawRoundRect(0 - Qa, 0 - Qa, Oa.max_x - Oa.min_x + 2 * Qa, Oa.max_y - Oa.min_y + 2 * Qa, Cc.area_rounded_rectangle_border_size, Cc.area_rounded_rectangle_border_size);
                                Na.get_graphics().beginFill(0, .15);
                                Na.get_graphics().drawRect(0, 0, Pa.width, Pa.height);
                                Na.get_graphics().endFill();
                                Na.set_x(Pa.x);
                                Na.set_y(Pa.y);
                                null != La.marker.sprite && null != La.marker.sprite.parent && La.marker.sprite.parent.removeChild(La.marker.sprite);
                                La.marker.sprite = Na;
                                a.current_group.display.contents.addChildAt(La.marker.sprite, Ja)
                            }
                        }
                        K.lines.set_visible(!1);
                        for (var Ta = !1, ab = 0, Va = K.parts; ab < Va.length;) {
                            var Pb = Va[ab];
                            ++ab;
                            Pb.entity.overed && (Ta = !0, K.lines.set_visible(!0))
                        }(Ta || K.marker.entity.overed) &&
                        K.lines.set_visible(!0);
                        Ta && !K.marker.entity.selected ? K.marker.entity.additional.string_draw.type != Yc.RED && (K.marker.entity.additional.string_draw.type = Yc.RED, Wd.refresh(K.marker.entity)) : K.marker.entity.additional.string_draw.type != Yc.DEFAULT && (K.marker.entity.additional.string_draw.type = Yc.DEFAULT, Wd.refresh(K.marker.entity));
                        if (K.marker.entity.selected) {
                            K.lines.set_visible(!0);
                            K.lines.set_alpha(1);
                            for (var db = 0, Sa = K.parts; db < Sa.length;) {
                                var Xa = Sa[db];
                                ++db;
                                Xa.sprite.set_alpha(1)
                            }(K.is_arc || K.is_arc_circle) &&
                            K.marker.sprite.set_alpha(1)
                        } else {
                            K.lines.set_alpha(.5);
                            if (K.is_arc || K.is_arc_circle) K.marker.entity.overed || Ta ? K.marker.sprite.set_alpha(.6) : K.marker.sprite.set_alpha(.3);
                            for (var hb = 0, $a = K.parts; hb < $a.length;) {
                                var Za = $a[hb];
                                ++hb;
                                Za.sprite.get_visible() && Za.sprite.set_alpha(.3)
                            }
                        }
                    }
                }
                for (var pb = null, $b = 0; $b < b.length;) {
                    var Ya = b[$b];
                    ++$b;
                    Ya.is_arc || Ya.is_arc_circle ? Ya.marker.entity.selected ? pb = Ya : null != Ya.arc_edit_debug_window && (v.close(Ya.arc_edit_debug_window), Ya.arc_edit_debug_window = null) : null != Ya.arc_edit_debug_window &&
                        (v.close(Ya.arc_edit_debug_window), Ya.arc_edit_debug_window = null)
                }
                if (null != pb) {
                    var Ac = pb;
                    if (Ac.is_arc && null == Ac.arc_edit_debug_window) {
                        var kb = Ac.marker.entity.name.split(","),
                            jb = Nc.removeSpacesAtStartAndEnd(kb[1]).split(" "),
                            fb = E.parseFloat(jb[2]),
                            cb = E.parseFloat(jb[4]);
                        Ac.before_comma = kb[0];
                        Ac.arc_from_angle = fb;
                        Ac.arc_to_angle = cb;
                        Ac.is_arc_plus_rotator = !1;
                        6 == jb.length && "+rot" == jb[5] && (Ac.is_arc_plus_rotator = !0);
                        pb.arc_edit_debug_window = v.createDebugWindow("Rail", 200, !0, cc.DESTROY, 1280, 720, !1);
                        var Ua =
                            pb.arc_edit_debug_window;
                        Ac.field_from = v.addEdit(Ua, Ac, "arc_from_angle");
                        Ac.field_to = v.addEdit(Ua, Ac, "arc_to_angle");
                        v.addButton(Ua, "flip", function() {
                            var a = Ac.arc_from_angle;
                            Ac.field_from.value_text.text.field.set_text(-1 * Ac.arc_to_angle + "");
                            Ac.field_to.value_text.text.field.set_text(-1 * a + "")
                        });
                        Ac.before_comma = kb[0];
                        v.resizeAndDraw(Ua);
                        v.addToContainer(a.menu_container, Ua, 500, 5)
                    }
                    if (Ac.is_arc && null != Ac.arc_edit_debug_window.window) {
                        var eb = !1,
                            ib = v.parseFloat(Ac.field_from.value_text.text.field.get_text());
                        Ac.arc_from_angle != ib && (Ac.arc_from_angle = ib, eb = !0);
                        var Ra = v.parseFloat(Ac.field_to.value_text.text.field.get_text());
                        Ac.arc_to_angle != Ra && (Ac.arc_to_angle = Ra, eb = !0);
                        if (eb) {
                            Ac.arc_from_angle > Ac.arc_to_angle && (Ac.arc_from_angle = Ac.arc_to_angle - 45);
                            var rb = Ac.before_comma + ", limit from " + Ac.arc_from_angle + " to " + Ac.arc_to_angle;
                            Ac.is_arc_plus_rotator && (rb += " +rot");
                            Ac.marker.entity.name = rb;
                            v.refreshAllFields(Ac.arc_edit_debug_window);
                            na.refreshEntityIncludingChildren(Ac.marker.entity)
                        }
                    }
                }
                if (0 < N.length) {
                    for (var wb =
                            F.getSortedPrefabsByLayersOfInnerPrefabs(a.library_group.group.entities), xb = [], ub = 0; ub < N.length;) {
                        var Wa = N[ub];
                        ++ub;
                        for (var yb = 0; yb < wb.length;) {
                            var qb = wb[yb];
                            ++yb;
                            qb == Wa.marker.entity.parent && -1 == xb.indexOf(qb) && xb.push(qb)
                        }
                        null != Wa.arc_edit_debug_window && (v.close(Wa.arc_edit_debug_window), Wa.arc_edit_debug_window = null);
                        for (var lb = 0, vb = Wa.parts; lb < vb.length;) {
                            var nc = vb[lb];
                            ++lb;
                            Fa.destroyConnectorPart(nc)
                        }
                        null != Wa.lines.parent && Wa.lines.parent.removeChild(Wa.lines);
                        Fa.destroyConnectorPart(Wa.marker);
                        Wa.marker = null;
                        Wa.parts = null;
                        la.remove(b, Wa)
                    }
                    for (var tb = 0; tb < xb.length;) {
                        var Rb = xb[tb];
                        ++tb;
                        na.refreshEntityIncludingChildren(Rb)
                    }
                    na.refreshEntityIncludingChildren(a.stage_group)
                }
                N = null
            };
            var cb = function() {};
            g["bikas.game.GameAssetCacheDo"] = cb;
            cb.__name__ = ["bikas", "game", "GameAssetCacheDo"];
            cb.recreateLevelAssetCache = function(a, b, c, d) {
                var e = sa.level_highlight_color,
                    f = sa.level_highlight_snapped_color,
                    h = sa.level_shade_color;
                a.level_filters = cb.createLevelGlowFilters(d);
                b = function(a, b, c, d, e, f) {
                    if (a.created_at_scale !=
                        f || null == a.regular || null == a.snapped || null == a.regular_layer2 || null == a.snapped_layer2) {
                        a.created_at_scale = f;
                        null != a.regular && a.regular.bitmap_data.dispose();
                        null != a.snapped && a.snapped.bitmap_data.dispose();
                        null != a.regular_layer2 && a.regular_layer2.bitmap_data.dispose();
                        null != a.snapped_layer2 && a.snapped_layer2.bitmap_data.dispose();
                        var h = new S,
                            k = new S;
                        d(h.get_graphics());
                        e(k.get_graphics());
                        h.set_scaleX(f);
                        h.set_scaleY(f);
                        k.set_scaleX(f);
                        k.set_scaleY(f);
                        h.set_filters(b);
                        k.set_filters(c);
                        b = Math.round(5 *
                            f);
                        a.regular = V.createAndDrawSource(h, !0, !1, b, b);
                        a.snapped = V.createAndDrawSource(k, !0, !1, b, b);
                        h.set_scaleX(1.1 * h.get_scaleX());
                        h.set_scaleY(1.1 * h.get_scaleY());
                        k.set_scaleX(1.1 * k.get_scaleX());
                        k.set_scaleY(1.1 * k.get_scaleY());
                        a.regular_layer2 = V.createAndDrawSource(h, !0, !1, b, b);
                        a.snapped_layer2 = V.createAndDrawSource(k, !0, !1, b, b);
                        h.get_graphics().clear();
                        k.get_graphics().clear()
                    }
                };
                b(a.connection_pivot, [], [], function(a) {
                    Ea.drawCircle(a, 7, h, 1, 0, 0, 0);
                    Ea.drawCircle(a, 5, e, 1, 0, 0, 0);
                    Ea.drawCircle(a, 2.5, h, 1,
                        0, 0, 0)
                }, function(a) {
                    Ea.drawCircle(a, 5.95, h, 1, 0, 0, 0);
                    Ea.drawCircle(a, 4.25, f, 1, 0, 0, 0);
                    Ea.drawCircle(a, 2.125, h, 1, 0, 0, 0)
                }, d);
                b(a.connection_rotator, [], [], function(a) {
                    Ea.drawCircle(a, 8, h, 1, 0, 0, 0);
                    Ea.drawCircle(a, 6, e, 1, 0, 0, 0);
                    Ea.drawCircle(a, 4.5, h, 1, 0, 0, 0);
                    Ea.drawCircle(a, 2, e, 1, 0, 0, 0)
                }, function(a) {
                    Ea.drawCircle(a, 6.8, h, 1, 0, 0, 0);
                    Ea.drawCircle(a, 5.1, f, 1, 0, 0, 0);
                    Ea.drawCircle(a, 4.5 * .85, h, 1, 0, 0, 0);
                    Ea.drawCircle(a, 1.7, f, 1, 0, 0, 0)
                }, d);
                b(a.connection_rail, [], [], function(a) {
                    Ea.drawCircle(a, 6, h, 1, 0, 0, 0);
                    Ea.drawCircle(a,
                        4, e, 1, 0, 0, 0)
                }, function(a) {
                    Ea.drawCircle(a, 5.1, h, 1, 0, 0, 0);
                    Ea.drawCircle(a, 3.4, f, 1, 0, 0, 0)
                }, d);
                b(a.connection_rail_rotator, [], [], function(a) {
                    Ea.drawCircle(a, 7.5, h, 1, 0, 0, 0);
                    Ea.drawCircle(a, 5.5, e, 1, 0, 0, 0);
                    Ea.drawCircle(a, 2, h, 1, 0, 0, 0)
                }, function(a) {
                    Ea.drawCircle(a, 6.375, h, 1, 0, 0, 0);
                    Ea.drawCircle(a, 4.675, f, 1, 0, 0, 0);
                    Ea.drawCircle(a, 1.7, h, 1, 0, 0, 0)
                }, d);
                b(a.connection_area, [], [], function(a) {
                    Ea.drawRoundedRectangle(a, 1.4 * Cc.area_connection_rounded_graphics_size, 1.4 * Cc.area_connection_rounded_graphics_size, 1.4 *
                        Cc.area_connection_rounded_graphics_ellipse, 1.4 * Cc.area_connection_rounded_graphics_ellipse, h, 1, 0, 0);
                    Ea.drawRoundedRectangle(a, Cc.area_connection_rounded_graphics_size, Cc.area_connection_rounded_graphics_size, Cc.area_connection_rounded_graphics_ellipse, Cc.area_connection_rounded_graphics_ellipse, e, 1, 0, 0)
                }, function(a) {
                    Ea.drawRoundedRectangle(a, 1.4 * Cc.area_connection_rounded_graphics_size_snapped, 1.4 * Cc.area_connection_rounded_graphics_size_snapped, 1.4 * Cc.area_connection_rounded_graphics_ellipse_snapped,
                        1.4 * Cc.area_connection_rounded_graphics_ellipse_snapped, h, 1, 0, 0);
                    Ea.drawRoundedRectangle(a, Cc.area_connection_rounded_graphics_size_snapped, Cc.area_connection_rounded_graphics_size_snapped, Cc.area_connection_rounded_graphics_ellipse_snapped, Cc.area_connection_rounded_graphics_ellipse_snapped, f, 1, 0, 0)
                }, d)
            };
            cb.recreateMainMenuAndPlayWindowAssetCache = function(a, b, c, d) {
                null != a.main_menu_sources && (V.destroyBitmapDataSource(a.main_menu_sources.middle_line), V.destroyBitmapDataSource(a.main_menu_sources.timeline_line));
                if (null == a.main_menu_sources) {
                    var e = function(a, b) {
                        return D.findCacheImage(a, b).source
                    };
                    a.main_menu_sources = new kt;
                    a.main_menu_sources.title_text = e(d, "main_menu_title_text");
                    a.main_menu_sources.star = e(d, "main_menu_star");
                    a.main_menu_sources.star_empty = e(d, "main_menu_star_empty");
                    a.main_menu_sources.star_big = e(d, "main_menu_star_big");
                    a.main_menu_sources.star_effect = e(d, "main_menu_star_effect");
                    a.main_menu_sources.weekly_text = e(d, "main_menu_weekly_text");
                    a.main_menu_sources.credits_text = e(d, "main_menu_credits_text");
                    b = function(a, b, c) {
                        var d = new lt;
                        d.locked = e(a, c + "locked");
                        d.unlocked = e(a, c + "unlocked");
                        d.downed = e(a, c + "downed");
                        d.next = e(a, c + "next");
                        d.next_downed = e(a, c + "next_downed");
                        d.completed = e(a, c + "completed");
                        if (b)
                            for (d.text_numbers = [], b = 0; 10 > b;) {
                                var f = b++;
                                d.text_numbers.push(e(a, c + "text_number_" + (f + 1)))
                            }
                        return d
                    };
                    a.main_menu_sources.timeline_icons = b(d, !1, "main_menu_timeline_icons_");
                    a.main_menu_sources.window_icons = b(d, !0, "main_menu_window_icons_");
                    a.main_menu_sources.weekly_history_icons = null;
                    a.main_menu_sources.inter_level_icons =
                        b(d, !0, "main_menu_inter_level_icons_")
                }
                d = Ia.getLevelPackIconRadius(c);
                cb.createLinesForMainMenu(a, c, d, d / Ab.timeline_icon_radius)
            };
            cb.createLinesForMainMenu = function(a, b, c, d) {
                c = sa.main_menu_middle_line_color;
                var e = H.clampMin(3 * d, 3),
                    f = new Ke;
                Ea.drawLine(f.get_graphics(), 0, 0, 0, b.height * Ab.middle_line_height_coeff, c, e, 1);
                a.main_menu_sources.middle_line = V.createAndDrawSource(f, !0, !1, 5, 5);
                b = Ia.getTimelineWidth(b, 5);
                d = H.clampMin(2.5 * d, 2.5);
                c = new Ke;
                c.get_graphics().beginFill(sa.level_pack_icon_border_color,
                    1);
                c.get_graphics().lineStyle(0, 0, 0);
                c.get_graphics().drawRect(0, -d / 2, b, d);
                c.get_graphics().endFill();
                a.main_menu_sources.timeline_line = V.createAndDrawSource(c, !0, !1, 5, 5)
            };
            cb.createLevelPackIconSourceForTimeline = function(a, b) {
                var c = Ia.getLevelPackIconRadius(b),
                    d = c / Ab.timeline_icon_radius;
                b = null;
                null != a ? null != a.icon_object_class && (b = aa.__cast(Q.createInstance(a.icon_object_class, []), n), b.set_scaleX(.075 * a.icon_scale_coeff * d), b.set_scaleY(.075 * a.icon_scale_coeff * d)) : w.trace("warning: pack == null", {
                    fileName: "GameAssetCacheDo.hx",
                    lineNumber: 708,
                    className: "bikas.game.GameAssetCacheDo",
                    methodName: "createLevelPackIconSourceForTimeline"
                });
                null == b && (b = Zn.createCircle(c / 2));
                a = new pq;
                a.color = V.createAndDrawSource(b, !0, !1, 5, 5);
                c = Va.createSaturationFilter(-100);
                b.set_filters([c]);
                a.grey = V.createAndDrawSource(b, !0, !1, 5, 5);
                return a
            };
            cb.recreatePauseMenuSources = function(a, b, c) {
                null != a.pause_menu_sources && V.destroyBitmapDataSource(a.pause_menu_sources.menu_background);
                null == a.pause_menu_sources && (a.pause_menu_sources =
                    cb.createPauseMenuBitmapSourcesFromImages(a, c));
                c = .8 * Ia.getPauseMenuButtonScale(b);
                (new Ya).scale(c, c);
                c = new S;
                Ea.drawRectangleFrom0(c.get_graphics(), b.width, b.height, sa.level_highlight_color, 1, 0, 0, 0);
                a.pause_menu_sources.menu_background = V.createAndDrawSource(c, !1, !1, 0, 0)
            };
            cb.createPauseMenuBitmapSourcesFromImages = function(a, b) {
                a = new mt;
                var c = function(a, b) {
                    return D.findCacheImage(a, b).source
                };
                a.pause_button_background = c(b, "pause_menu_pause_button_background");
                a.downed_pause_button_background = c(b,
                    "pause_menu_downed_pause_button_background");
                a.pause = c(b, "pause_menu_pause");
                a.pause_close = c(b, "pause_menu_pause_close");
                a.inlevel_reload = c(b, "pause_menu_inlevel_reload");
                a.inlevel_reload_circle = c(b, "pause_menu_inlevel_reload_circle");
                a.button_background = c(b, "pause_menu_button_background");
                a.downed_button_background = c(b, "pause_menu_downed_button_background");
                a.music = c(b, "pause_menu_music");
                a.sound = c(b, "pause_menu_sound");
                a.line_cross = c(b, "pause_menu_line_cross");
                a.wrench = c(b, "pause_menu_wrench");
                a.menu = c(b, "pause_menu_menu");
                a.play = c(b, "pause_menu_play");
                a.reload = c(b, "pause_menu_reload");
                a.skip0 = c(b, "pause_menu_skip0");
                a.skip1 = c(b, "pause_menu_skip1");
                a.skip2 = c(b, "pause_menu_skip2");
                a.skip3 = c(b, "pause_menu_skip3");
                return a
            };
            cb.createLevelGlowFilters = function(a) {
                var b = new $n,
                    c = sa.level_highlight_color,
                    d = sa.level_shade_color;
                b.white_inner_border = Va.copyGlowFilter(sa.level_white_inner_border, c);
                b.black_outer_border = Va.copyGlowFilter(sa.level_black_outer_border, d);
                b.price_outer_border = Va.copyGlowFilter(sa.price_outer_border,
                    sa.window_buy_text_color);
                Ea.scaleGlowFilter(b.price_outer_border, a);
                b.white_inner_border_layer2 = Va.copyGlowFilter(sa.level_white_inner_border_layer2, c);
                b.shadow_glow_layer2 = Va.copyGlowFilter(sa.level_shadow_glow_layer2, d);
                Ea.scaleGlowFilter(b.white_inner_border, a);
                Ea.scaleGlowFilter(b.black_outer_border, a);
                Ea.scaleGlowFilter(b.white_inner_border_layer2, a);
                Ea.scaleGlowFilter(b.shadow_glow_layer2, a);
                b.regular_part_filters = [b.white_inner_border, b.black_outer_border];
                b.layer2_part_filters = [b.white_inner_border_layer2,
                    b.black_outer_border, b.shadow_glow_layer2
                ];
                return b
            };
            cb.createBitmap = function(a, b) {
                var c = V.createBitmapUsingSource(a);
                switch (Q.enumIndex(a.type)) {
                    case 1:
                        cb.setScaleToBitmap(c, a, b)
                }
                return c
            };
            cb.createBitmapInContainer = function(a, b) {
                var c = new Mp;
                c.source = a;
                c.container = new S;
                c.bitmap = cb.createBitmap(a, b);
                c.container.addChild(c.bitmap);
                return c
            };
            cb.setBitmapUsingSource = function(a, b) {
                V.setBitmapUsingSource(a, b);
                a.set_x(-b.center_point.x * a.get_scaleX());
                a.set_y(-b.center_point.y * a.get_scaleY())
            };
            cb.setScaleToBitmap =
                function(a, b, c) {
                    c /= b.scale;
                    a.set_scaleX(c);
                    a.set_scaleY(c);
                    a.set_x(-b.center_point.x * c);
                    a.set_y(-b.center_point.y * c)
                };
            var ig = function() {
                this.__leftExtension = this.__bottomExtension = 0;
                this.__needSecondBitmapData = !0;
                this.__numShaderPasses = 0;
                this.__preserveObject = !1;
                this.__rightExtension = 0;
                this.__shaderBlendMode = 10;
                this.__topExtension = 0;
                this.__smooth = !0
            };
            g["openfl.filters.BitmapFilter"] = ig;
            ig.__name__ = ["openfl", "filters", "BitmapFilter"];
            ig.prototype = {
                __bottomExtension: null,
                __leftExtension: null,
                __needSecondBitmapData: null,
                __numShaderPasses: null,
                __preserveObject: null,
                __renderDirty: null,
                __rightExtension: null,
                __shaderBlendMode: null,
                __smooth: null,
                __topExtension: null,
                __applyFilter: function(a, b, c, d) {
                    return b
                },
                __initShader: function(a, b, c) {
                    return null
                },
                __class__: ig
            };
            var Uf = function(a) {
                this.byteCode = a;
                this.precisionHint = 1;
                this.__glSourceDirty = !0;
                this.__numPasses = 1;
                this.__data = nt._new(a)
            };
            g["openfl.display.Shader"] = Uf;
            Uf.__name__ = ["openfl", "display", "Shader"];
            Uf.prototype = {
                byteCode: null,
                glProgram: null,
                precisionHint: null,
                program: null,
                __alpha: null,
                __bitmap: null,
                __colorMultiplier: null,
                __colorOffset: null,
                __context: null,
                __data: null,
                __glFragmentSource: null,
                __glSourceDirty: null,
                __glVertexSource: null,
                __hasColorTransform: null,
                __inputBitmapData: null,
                __isGenerated: null,
                __matrix: null,
                __numPasses: null,
                __paramBool: null,
                __paramFloat: null,
                __paramInt: null,
                __position: null,
                __textureCoord: null,
                __texture: null,
                __textureSize: null,
                __clearUseArray: function() {
                    for (var a = 0, b = this.__paramBool; a < b.length;) {
                        var c = b[a];
                        ++a;
                        c.__useArray = !1
                    }
                    a = 0;
                    for (b = this.__paramFloat; a <
                        b.length;) c = b[a], ++a, c.__useArray = !1;
                    a = 0;
                    for (b = this.__paramInt; a < b.length;) c = b[a], ++a, c.__useArray = !1
                },
                __createGLShader: function(a, b) {
                    var c = this.__context.gl,
                        d = c.createShader(b);
                    c.shaderSource(d, a);
                    c.compileShader(d);
                    0 == c.getShaderParameter(d, c.COMPILE_STATUS) && (b = b == c.VERTEX_SHADER ? "Error compiling vertex shader" : "Error compiling fragment shader", b += "\n" + c.getShaderInfoLog(d), Za.error(b + ("\n" + a), {
                        fileName: "Shader.hx",
                        lineNumber: 329,
                        className: "openfl.display.Shader",
                        methodName: "__createGLShader"
                    }));
                    return d
                },
                __createGLProgram: function(a, b) {
                    var c = this.__context.gl;
                    a = this.__createGLShader(a, c.VERTEX_SHADER);
                    var d = this.__createGLShader(b, c.FRAGMENT_SHADER);
                    b = c.createProgram();
                    for (var e = 0, f = this.__paramFloat; e < f.length;) {
                        var h = f[e];
                        ++e;
                        if (-1 < h.name.indexOf("Position") && ka.startsWith(h.name, "openfl_")) {
                            c.bindAttribLocation(b, 0, h.name);
                            break
                        }
                    }
                    c.attachShader(b, a);
                    c.attachShader(b, d);
                    c.linkProgram(b);
                    0 == c.getProgramParameter(b, c.LINK_STATUS) && (c = "Unable to initialize the shader program\n" + c.getProgramInfoLog(b),
                        Za.error(c, {
                            fileName: "Shader.hx",
                            lineNumber: 362,
                            className: "openfl.display.Shader",
                            methodName: "__createGLProgram"
                        }));
                    return b
                },
                __disable: function() {
                    null != this.program && this.__disableGL()
                },
                __disableGL: function() {
                    for (var a = this.__context.gl, b = 0, c = 0, d = this.__inputBitmapData; c < d.length;) {
                        var e = d[c];
                        ++c;
                        e.__disableGL(this.__context, b);
                        ++b
                    }
                    b = 0;
                    for (c = this.__paramBool; b < c.length;) d = c[b], ++b, d.__disableGL(this.__context);
                    b = 0;
                    for (c = this.__paramFloat; b < c.length;) d = c[b], ++b, d.__disableGL(this.__context);
                    b = 0;
                    for (c =
                        this.__paramInt; b < c.length;) d = c[b], ++b, d.__disableGL(this.__context);
                    this.__context.__bindGLArrayBuffer(null);
                    "opengl" == this.__context.__context.type && a.disable(a.TEXTURE_2D)
                },
                __enable: function() {
                    this.__init();
                    null != this.program && this.__enableGL()
                },
                __enableGL: function() {
                    for (var a = 0, b = this.__context.gl, c = 0, d = this.__inputBitmapData; c < d.length;) {
                        var e = d[c];
                        ++c;
                        b.uniform1i(e.index, a);
                        ++a
                    }
                    "opengl" == this.__context.__context.type && 0 < a && b.enable(b.TEXTURE_2D)
                },
                __init: function() {
                    null == this.__data && (this.__data =
                        nt._new(null));
                    null == this.__glFragmentSource || null == this.__glVertexSource || null != this.program && !this.__glSourceDirty || this.__initGL()
                },
                __initGL: function() {
                    if (this.__glSourceDirty || null == this.__paramBool) this.__glSourceDirty = !1, this.program = null, this.__inputBitmapData = [], this.__paramBool = [], this.__paramFloat = [], this.__paramInt = [], this.__processGLData(this.get_glVertexSource(), "attribute"), this.__processGLData(this.get_glVertexSource(), "uniform"), this.__processGLData(this.get_glFragmentSource(), "uniform");
                    if (null != this.__context && null == this.program) {
                        var a = this.__context.gl,
                            b = "#ifdef GL_ES\n\t\t\t\t" + (1 == this.precisionHint ? "#ifdef GL_FRAGMENT_PRECISION_HIGH\n\t\t\t\tprecision highp float;\n\t\t\t\t#else\n\t\t\t\tprecision mediump float;\n\t\t\t\t#endif" : "precision lowp float;") + "\n\t\t\t\t#endif\n\t\t\t\t",
                            c = b + this.get_glVertexSource();
                        b += this.get_glFragmentSource();
                        var d = c + b;
                        this.__context.__programs.exists(d) ? this.program = this.__context.__programs.get(d) : (this.program = this.__context.createProgram(1),
                            this.program.__glProgram = this.__createGLProgram(c, b), this.__context.__programs.set(d, this.program));
                        if (null != this.program) {
                            this.glProgram = this.program.__glProgram;
                            c = 0;
                            for (b = this.__inputBitmapData; c < b.length;) d = b[c], ++c, d.index = d.__isUniform ? a.getUniformLocation(this.glProgram, d.name) : a.getAttribLocation(this.glProgram, d.name);
                            c = 0;
                            for (b = this.__paramBool; c < b.length;) d = b[c], ++c, d.index = d.__isUniform ? a.getUniformLocation(this.glProgram, d.name) : a.getAttribLocation(this.glProgram, d.name);
                            c = 0;
                            for (b = this.__paramFloat; c <
                                b.length;) d = b[c], ++c, d.index = d.__isUniform ? a.getUniformLocation(this.glProgram, d.name) : a.getAttribLocation(this.glProgram, d.name);
                            c = 0;
                            for (b = this.__paramInt; c < b.length;) d = b[c], ++c, d.index = d.__isUniform ? a.getUniformLocation(this.glProgram, d.name) : a.getAttribLocation(this.glProgram, d.name)
                        }
                    }
                },
                __processGLData: function(a, b) {
                    var c = 0,
                        d;
                    for (d = "uniform" == b ? new Ga("uniform ([A-Za-z0-9]+) ([A-Za-z0-9_]+)", "") : new Ga("attribute ([A-Za-z0-9]+) ([A-Za-z0-9_]+)", ""); d.matchSub(a, c);) {
                        var e = d.matched(1);
                        var f = d.matched(2);
                        if (!ka.startsWith(f, "gl_")) {
                            c = "uniform" == b;
                            if (ka.startsWith(e, "sampler")) {
                                e = new qq;
                                e.name = f;
                                e.__isUniform = c;
                                this.__inputBitmapData.push(e);
                                switch (f) {
                                    case "bitmap":
                                        this.__bitmap = e;
                                        break;
                                    case "openfl_Texture":
                                        this.__texture = e
                                }
                                T.setField(this.__data, f, e);
                                this.__isGenerated && T.setField(this, f, e)
                            } else if (!T.hasField(this.__data, f) || null == T.field(this.__data, f)) {
                                switch (e) {
                                    case "bool":
                                        var h = 0;
                                        break;
                                    case "bvec2":
                                        h = 1;
                                        break;
                                    case "bvec3":
                                        h = 2;
                                        break;
                                    case "bvec4":
                                        h = 3;
                                        break;
                                    case "dvec2":
                                    case "vec2":
                                        h = 5;
                                        break;
                                    case "dvec3":
                                    case "vec3":
                                        h =
                                            6;
                                        break;
                                    case "double":
                                    case "float":
                                        h = 4;
                                        break;
                                    case "ivec3":
                                    case "uvec3":
                                        h = 10;
                                        break;
                                    case "ivec4":
                                    case "uvec4":
                                        h = 11;
                                        break;
                                    case "mat2":
                                    case "mat2x2":
                                        h = 12;
                                        break;
                                    case "mat2x3":
                                        h = 13;
                                        break;
                                    case "mat2x4":
                                        h = 14;
                                        break;
                                    case "mat3x2":
                                        h = 15;
                                        break;
                                    case "mat3":
                                    case "mat3x3":
                                        h = 16;
                                        break;
                                    case "mat3x4":
                                        h = 17;
                                        break;
                                    case "mat4":
                                    case "mat4x4":
                                        h = 20;
                                        break;
                                    case "mat4x2":
                                        h = 18;
                                        break;
                                    case "mat4x3":
                                        h = 19;
                                        break;
                                    case "int":
                                    case "uint":
                                        h = 8;
                                        break;
                                    case "ivec2":
                                    case "uvec2":
                                        h = 9;
                                        break;
                                    case "dvec4":
                                    case "vec4":
                                        h = 7;
                                        break;
                                    default:
                                        h = null
                                }
                                switch (h) {
                                    case 1:
                                    case 5:
                                    case 9:
                                        e =
                                            2;
                                        break;
                                    case 3:
                                    case 7:
                                    case 11:
                                    case 12:
                                        e = 4;
                                        break;
                                    case 2:
                                    case 6:
                                    case 10:
                                        e = 3;
                                        break;
                                    case 16:
                                        e = 9;
                                        break;
                                    case 20:
                                        e = 16;
                                        break;
                                    default:
                                        e = 1
                                }
                                switch (h) {
                                    case 12:
                                        var k = 2;
                                        break;
                                    case 16:
                                        k = 3;
                                        break;
                                    case 20:
                                        k = 4;
                                        break;
                                    default:
                                        k = 1
                                }
                                switch (h) {
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        var m = new ll;
                                        m.set_name(f);
                                        m.type = h;
                                        m.__arrayLength = k;
                                        m.__isBool = !0;
                                        m.__isUniform = c;
                                        m.__length = e;
                                        this.__paramBool.push(m);
                                        "openfl_HasColorTransform" == f && (this.__hasColorTransform = m);
                                        T.setField(this.__data, f, m);
                                        this.__isGenerated && T.setField(this, f, m);
                                        break;
                                    case 8:
                                    case 9:
                                    case 10:
                                    case 11:
                                        m = new ll;
                                        m.set_name(f);
                                        m.type = h;
                                        m.__arrayLength = k;
                                        m.__isInt = !0;
                                        m.__isUniform = c;
                                        m.__length = e;
                                        this.__paramInt.push(m);
                                        T.setField(this.__data, f, m);
                                        this.__isGenerated && T.setField(this, f, m);
                                        break;
                                    default:
                                        m = new ll;
                                        m.set_name(f);
                                        m.type = h;
                                        m.__arrayLength = k;
                                        0 < k && (h = k * k, h = null != h ? new jg(h) : null, m.__uniformMatrix = h);
                                        m.__isFloat = !0;
                                        m.__isUniform = c;
                                        m.__length = e;
                                        this.__paramFloat.push(m);
                                        if (ka.startsWith(f, "openfl_")) switch (f) {
                                            case "openfl_Alpha":
                                                this.__alpha = m;
                                                break;
                                            case "openfl_ColorMultiplier":
                                                this.__colorMultiplier =
                                                    m;
                                                break;
                                            case "openfl_ColorOffset":
                                                this.__colorOffset = m;
                                                break;
                                            case "openfl_Matrix":
                                                this.__matrix = m;
                                                break;
                                            case "openfl_Position":
                                                this.__position = m;
                                                break;
                                            case "openfl_TextureCoord":
                                                this.__textureCoord = m;
                                                break;
                                            case "openfl_TextureSize":
                                                this.__textureSize = m
                                        }
                                        T.setField(this.__data, f, m);
                                        this.__isGenerated && T.setField(this, f, m)
                                }
                            }
                            f = d.matchedPos();
                            c = f.pos + f.len
                        }
                    }
                },
                __update: function() {
                    null != this.program && this.__updateGL()
                },
                __updateFromBuffer: function(a, b) {
                    null != this.program && this.__updateGLFromBuffer(a, b)
                },
                __updateGL: function() {
                    for (var a = 0, b = 0, c = this.__inputBitmapData; b < c.length;) {
                        var d = c[b];
                        ++b;
                        d.__updateGL(this.__context, a);
                        ++a
                    }
                    a = 0;
                    for (b = this.__paramBool; a < b.length;) c = b[a], ++a, c.__updateGL(this.__context);
                    a = 0;
                    for (b = this.__paramFloat; a < b.length;) c = b[a], ++a, c.__updateGL(this.__context);
                    a = 0;
                    for (b = this.__paramInt; a < b.length;) c = b[a], ++a, c.__updateGL(this.__context)
                },
                __updateGLFromBuffer: function(a, b) {
                    for (var c = 0, d, e, f, h, k, m = 0, r = a.inputCount; m < r;) k = m++, d = a.inputRefs[k], e = a.inputs[k], f = a.inputFilter[k],
                        h = a.inputMipFilter[k], k = a.inputWrap[k], null != e && (d.__updateGL(this.__context, c, e, f, h, k), ++c);
                    c = this.__context.gl;
                    0 < a.paramDataLength ? (null == a.paramDataBuffer && (a.paramDataBuffer = c.createBuffer()), this.__context.__bindGLArrayBuffer(a.paramDataBuffer), Td.bufferData(c, c.ARRAY_BUFFER, a.paramData, c.DYNAMIC_DRAW)) : this.__context.__bindGLArrayBuffer(null);
                    e = d = c = 0;
                    f = a.paramBoolCount;
                    h = a.paramFloatCount;
                    m = a.paramData;
                    for (var g, l = k = null, Mb = null, n = 0, p = a.paramCount; n < p;) {
                        var x = n++;
                        r = !1;
                        if (x < f) {
                            g = a.paramRefs_Bool[c];
                            for (var w = 0, z = a.overrideBoolCount; w < z;) {
                                var u = w++;
                                if (g.name == a.overrideBoolNames[u]) {
                                    k = a.overrideBoolValues[u];
                                    r = !0;
                                    break
                                }
                            }
                            r ? g.__updateGL(this.__context, k) : g.__updateGLFromBuffer(this.__context, m, a.paramPositions[x], a.paramLengths[x], b);
                            ++c
                        } else if (x < f + h) {
                            g = a.paramRefs_Float[d];
                            w = 0;
                            for (z = a.overrideFloatCount; w < z;)
                                if (u = w++, g.name == a.overrideFloatNames[u]) {
                                    l = a.overrideFloatValues[u];
                                    r = !0;
                                    break
                                } r ? g.__updateGL(this.__context, l) : g.__updateGLFromBuffer(this.__context, m, a.paramPositions[x], a.paramLengths[x],
                                b);
                            ++d
                        } else {
                            g = a.paramRefs_Int[e];
                            w = 0;
                            for (z = a.overrideIntCount; w < z;)
                                if (u = w++, g.name == a.overrideIntNames[u]) {
                                    Mb = a.overrideIntValues[u];
                                    r = !0;
                                    break
                                } r ? g.__updateGL(this.__context, Mb) : g.__updateGLFromBuffer(this.__context, m, a.paramPositions[x], a.paramLengths[x], b);
                            ++e
                        }
                    }
                },
                get_glFragmentSource: function() {
                    return this.__glFragmentSource
                },
                get_glVertexSource: function() {
                    return this.__glVertexSource
                },
                __class__: Uf
            };
            var Dc = function(a) {
                null == this.__glFragmentSource && (this.__glFragmentSource = "varying vec2 openfl_TextureCoordv;\n\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\tgl_FragColor = texture2D (openfl_Texture, openfl_TextureCoordv);\n\n\t\t}");
                null == this.__glVertexSource && (this.__glVertexSource = "attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}");
                Uf.call(this, a);
                this.__isGenerated = !0;
                this.__initGL()
            };
            g["openfl.filters.BitmapFilterShader"] = Dc;
            Dc.__name__ = ["openfl",
                "filters", "BitmapFilterShader"
            ];
            Dc.__super__ = Uf;
            Dc.prototype = p(Uf.prototype, {
                openfl_Position: null,
                openfl_TextureCoord: null,
                openfl_Matrix: null,
                openfl_TextureSize: null,
                openfl_Texture: null,
                __class__: Dc
            });
            var rq = function() {
                null == this.__glFragmentSource && (this.__glFragmentSource = "\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform vec4 uColor;\n\t\tuniform float uStrength;\n\t\tvarying vec2 vTexCoord;\n\t\tvarying vec2 vBlurCoords[6];\n\n\t\tvoid main(void)\n\t\t{\n            vec4 texel = texture2D(openfl_Texture, vTexCoord);\n\n            vec3 contributions = vec3(0.00443, 0.05399, 0.24197);\n            vec3 top = vec3(\n                texture2D(openfl_Texture, vBlurCoords[0]).a,\n                texture2D(openfl_Texture, vBlurCoords[1]).a,\n                texture2D(openfl_Texture, vBlurCoords[2]).a\n            );\n            vec3 bottom = vec3(\n                texture2D(openfl_Texture, vBlurCoords[3]).a,\n                texture2D(openfl_Texture, vBlurCoords[4]).a,\n                texture2D(openfl_Texture, vBlurCoords[5]).a\n            );\n\n            float a = texel.a * 0.39894;\n\t\t\ta += dot(top, contributions.xyz);\n            a += dot(bottom, contributions.zyx);\n\n\t\t\tgl_FragColor = uColor * clamp(a * uStrength, 0.0, 1.0);\n\t\t}\n\t");
                null == this.__glVertexSource && (this.__glVertexSource = "\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tuniform vec2 uRadius;\n\t\tvarying vec2 vTexCoord;\n\t\tvarying vec2 vBlurCoords[6];\n\n\t\tvoid main(void) {\n\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\tvTexCoord = openfl_TextureCoord;\n\n\t\t\tvec3 offset = vec3(0.5, 0.75, 1.0);\n\t\t\tvec2 r = uRadius / openfl_TextureSize;\n\t\t\tvBlurCoords[0] = openfl_TextureCoord - r * offset.z;\n\t\t\tvBlurCoords[1] = openfl_TextureCoord - r * offset.y;\n\t\t\tvBlurCoords[2] = openfl_TextureCoord - r * offset.x;\n\t\t\tvBlurCoords[3] = openfl_TextureCoord + r * offset.x;\n\t\t\tvBlurCoords[4] = openfl_TextureCoord + r * offset.y;\n\t\t\tvBlurCoords[5] = openfl_TextureCoord + r * offset.z;\n\t\t}\n\t");
                Dc.call(this);
                this.uRadius.value = [0, 0];
                this.uColor.value = [0, 0, 0, 0];
                this.uStrength.value = [1];
                this.__isGenerated = !0;
                this.__initGL()
            };
            g["openfl.filters._GlowFilter.BlurAlphaShader"] = rq;
            rq.__name__ = ["openfl", "filters", "_GlowFilter", "BlurAlphaShader"];
            rq.__super__ = Dc;
            rq.prototype = p(Dc.prototype, {
                uRadius: null,
                uColor: null,
                uStrength: null,
                __class__: rq
            });
            var nt = {};
            g["openfl.display._ShaderData.ShaderData_Impl_"] = nt;
            nt.__name__ = ["openfl", "display", "_ShaderData", "ShaderData_Impl_"];
            nt._new = function(a) {
                return {}
            };
            var sq = function() {
                null == this.__glFragmentSource && (this.__glFragmentSource = "\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform sampler2D sourceBitmap;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tvec4 src = texture2D(sourceBitmap, textureCoords.xy);\n\t\t\tvec4 glow = texture2D(openfl_Texture, textureCoords.zw);\n\n\t\t\tgl_FragColor = glow * (1.0 - src.a);\n\t\t}\n\t");
                null == this.__glVertexSource && (this.__glVertexSource = "attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform vec2 offset;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\ttextureCoords = vec4(openfl_TextureCoord, openfl_TextureCoord - offset / openfl_TextureSize);\n\t\t}\n\t");
                Dc.call(this);
                this.offset.value = [0, 0];
                this.__isGenerated = !0;
                this.__initGL()
            };
            g["openfl.filters._GlowFilter.CombineKnockoutShader"] = sq;
            sq.__name__ = ["openfl", "filters", "_GlowFilter", "CombineKnockoutShader"];
            sq.__super__ = Dc;
            sq.prototype = p(Dc.prototype, {
                offset: null,
                sourceBitmap: null,
                __class__: sq
            });
            var tq = function() {
                null == this.__glFragmentSource && (this.__glFragmentSource = "\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform sampler2D sourceBitmap;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tvec4 src = texture2D(sourceBitmap, textureCoords.xy);\n\t\t\tvec4 glow = texture2D(openfl_Texture, textureCoords.zw);\n\n\t\t\tgl_FragColor = src + glow * (1.0 - src.a);\n\t\t}\n\t");
                null == this.__glVertexSource && (this.__glVertexSource = "attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform vec2 offset;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\ttextureCoords = vec4(openfl_TextureCoord, openfl_TextureCoord - offset / openfl_TextureSize);\n\t\t}\n\t");
                Dc.call(this);
                this.offset.value = [0, 0];
                this.__isGenerated = !0;
                this.__initGL()
            };
            g["openfl.filters._GlowFilter.CombineShader"] = tq;
            tq.__name__ = ["openfl", "filters", "_GlowFilter", "CombineShader"];
            tq.__super__ = Dc;
            tq.prototype = p(Dc.prototype, {
                offset: null,
                sourceBitmap: null,
                __class__: tq
            });
            var uq = function() {
                null == this.__glFragmentSource && (this.__glFragmentSource = "\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform sampler2D sourceBitmap;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tvec4 src = texture2D(sourceBitmap, textureCoords.xy);\n\t\t\tvec4 glow = texture2D(openfl_Texture, textureCoords.zw);\n\n\t\t\tgl_FragColor = glow * src.a;\n\t\t}\n\t");
                null == this.__glVertexSource && (this.__glVertexSource = "attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform vec2 offset;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\ttextureCoords = vec4(openfl_TextureCoord, openfl_TextureCoord - offset / openfl_TextureSize);\n\t\t}\n\t");
                Dc.call(this);
                this.offset.value = [0, 0];
                this.__isGenerated = !0;
                this.__initGL()
            };
            g["openfl.filters._GlowFilter.InnerCombineKnockoutShader"] = uq;
            uq.__name__ = ["openfl", "filters", "_GlowFilter", "InnerCombineKnockoutShader"];
            uq.__super__ = Dc;
            uq.prototype = p(Dc.prototype, {
                offset: null,
                sourceBitmap: null,
                __class__: uq
            });
            var vq = function() {
                null == this.__glFragmentSource && (this.__glFragmentSource = "\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform sampler2D sourceBitmap;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tvec4 src = texture2D(sourceBitmap, textureCoords.xy);\n\t\t\tvec4 glow = texture2D(openfl_Texture, textureCoords.zw);\n\n\t\t\tgl_FragColor = vec4((src.rgb * (1.0 - glow.a)) + (glow.rgb * src.a), src.a);\n\t\t}\n\t");
                null == this.__glVertexSource && (this.__glVertexSource = "attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform vec2 offset;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\ttextureCoords = vec4(openfl_TextureCoord, openfl_TextureCoord - offset / openfl_TextureSize);\n\t\t}\n\t");
                Dc.call(this);
                this.offset.value = [0, 0];
                this.__isGenerated = !0;
                this.__initGL()
            };
            g["openfl.filters._GlowFilter.InnerCombineShader"] = vq;
            vq.__name__ = ["openfl", "filters", "_GlowFilter", "InnerCombineShader"];
            vq.__super__ = Dc;
            vq.prototype = p(Dc.prototype, {
                offset: null,
                sourceBitmap: null,
                __class__: vq
            });
            var wq = function() {
                null == this.__glFragmentSource && (this.__glFragmentSource = "\n\t\tuniform sampler2D openfl_Texture;\n\t\tvarying vec2 vTexCoord;\n\n\t\tvoid main(void) {\n\t\t\tvec4 texel = texture2D(openfl_Texture, vTexCoord);\n\t\t\tgl_FragColor = vec4(texel.rgb, 1.0 - texel.a);\n\t\t}\n\t");
                null == this.__glVertexSource && (this.__glVertexSource = "\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tuniform mat4 openfl_Matrix;\n\t\tvarying vec2 vTexCoord;\n\n\t\tvoid main(void) {\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\tvTexCoord = openfl_TextureCoord;\n\t\t}\n\t");
                Dc.call(this);
                this.__isGenerated = !0;
                this.__initGL()
            };
            g["openfl.filters._GlowFilter.InvertAlphaShader"] = wq;
            wq.__name__ = ["openfl", "filters", "_GlowFilter", "InvertAlphaShader"];
            wq.__super__ =
                Dc;
            wq.prototype = p(Dc.prototype, {
                __class__: wq
            });
            var Qc = function(a, b, c, d, e, f, h, k) {
                null == k && (k = !1);
                null == h && (h = !1);
                null == f && (f = 1);
                null == e && (e = 2);
                null == d && (d = 6);
                null == c && (c = 6);
                null == b && (b = 1);
                null == a && (a = 16711680);
                ig.call(this);
                this.__color = a;
                this.__alpha = b;
                this.__blurX = c;
                this.__blurY = d;
                this.__strength = e;
                this.__inner = h;
                this.__knockout = k;
                this.__quality = f;
                this.__updateSize();
                this.__renderDirty = this.__preserveObject = this.__needSecondBitmapData = !0
            };
            g["openfl.filters.GlowFilter"] = Qc;
            Qc.__name__ = ["openfl", "filters",
                "GlowFilter"
            ];
            Qc.__super__ = ig;
            Qc.prototype = p(ig.prototype, {
                __alpha: null,
                __blurX: null,
                __blurY: null,
                __color: null,
                __horizontalPasses: null,
                __inner: null,
                __knockout: null,
                __quality: null,
                __strength: null,
                __verticalPasses: null,
                __applyFilter: function(a, b, c, d) {
                    var e = this.__color >> 16 & 255,
                        f = this.__color >> 8 & 255,
                        h = this.__color & 255;
                    c = Jd.gaussianBlur(a.image, b.image, c.__toLimeRectangle(), d.__toLimeVector2(), this.__blurX, this.__blurY, this.__quality, this.__strength);
                    c.colorTransform(c.get_rect(), (new mc(0, 0, 0, this.__alpha,
                        e, f, h, 0)).__toLimeColorMatrix());
                    return c == a.image ? a : b
                },
                __initShader: function(a, b, c) {
                    if (this.__inner && 0 == b) return Qc.__invertAlphaShader;
                    a = b - (this.__inner ? 1 : 0);
                    b = this.__horizontalPasses + this.__verticalPasses;
                    if (a < b) {
                        c = Qc.__blurAlphaShader;
                        if (a < this.__horizontalPasses) {
                            var d = .5 * Math.pow(.5, a >> 1);
                            c.uRadius.value[0] = this.get_blurX() * d;
                            c.uRadius.value[1] = 0
                        } else d = .5 * Math.pow(.5, a - this.__horizontalPasses >> 1), c.uRadius.value[0] = 0, c.uRadius.value[1] = this.get_blurY() * d;
                        c.uColor.value[0] = (this.get_color() >>
                            16 & 255) / 255;
                        c.uColor.value[1] = (this.get_color() >> 8 & 255) / 255;
                        c.uColor.value[2] = (this.get_color() & 255) / 255;
                        c.uColor.value[3] = this.get_alpha();
                        c.uStrength.value[0] = a == b - 1 ? this.__strength : 1;
                        return c
                    }
                    if (this.__inner) {
                        if (this.__knockout) return a = Qc.__innerCombineKnockoutShader, a.sourceBitmap.input = c, a.offset.value[0] = 0, a.offset.value[1] = 0, a;
                        a = Qc.__innerCombineShader;
                        a.sourceBitmap.input = c;
                        a.offset.value[0] = 0;
                        a.offset.value[1] = 0;
                        return a
                    }
                    if (this.__knockout) return a = Qc.__combineKnockoutShader, a.sourceBitmap.input =
                        c, a.offset.value[0] = 0, a.offset.value[1] = 0, a;
                    a = Qc.__combineShader;
                    a.sourceBitmap.input = c;
                    a.offset.value[0] = 0;
                    a.offset.value[1] = 0;
                    return a
                },
                __updateSize: function() {
                    this.__rightExtension = this.__leftExtension = 0 < this.__blurX ? Math.ceil(1.5 * this.__blurX) : 0;
                    this.__bottomExtension = this.__topExtension = 0 < this.__blurY ? Math.ceil(1.5 * this.__blurY) : 0;
                    this.__calculateNumShaderPasses()
                },
                __calculateNumShaderPasses: function() {
                    this.__horizontalPasses = 0 >= this.__blurX ? 0 : Math.round(this.__quality / 4 * this.__blurX) + 1;
                    this.__verticalPasses =
                        0 >= this.__blurY ? 0 : Math.round(this.__quality / 4 * this.__blurY) + 1;
                    this.__numShaderPasses = this.__horizontalPasses + this.__verticalPasses + (this.__inner ? 2 : 1)
                },
                get_alpha: function() {
                    return this.__alpha
                },
                set_alpha: function(a) {
                    a != this.__alpha && (this.__renderDirty = !0);
                    return this.__alpha = a
                },
                get_blurX: function() {
                    return this.__blurX
                },
                set_blurX: function(a) {
                    a != this.__blurX && (this.__blurX = a, this.__renderDirty = !0, this.__updateSize());
                    return a
                },
                get_blurY: function() {
                    return this.__blurY
                },
                set_blurY: function(a) {
                    a != this.__blurY &&
                        (this.__blurY = a, this.__renderDirty = !0, this.__updateSize());
                    return a
                },
                get_color: function() {
                    return this.__color
                },
                set_color: function(a) {
                    a != this.__color && (this.__renderDirty = !0);
                    return this.__color = a
                },
                get_inner: function() {
                    return this.__inner
                },
                set_inner: function(a) {
                    a != this.__inner && (this.__renderDirty = !0, this.__calculateNumShaderPasses());
                    return this.__inner = a
                },
                get_knockout: function() {
                    return this.__knockout
                },
                set_knockout: function(a) {
                    a != this.__knockout && (this.__renderDirty = !0, this.__calculateNumShaderPasses());
                    return this.__knockout = a
                },
                get_quality: function() {
                    return this.__quality
                },
                set_quality: function(a) {
                    a != this.__quality && (this.__renderDirty = !0, this.__calculateNumShaderPasses());
                    return this.__quality = a
                },
                get_strength: function() {
                    return this.__strength
                },
                set_strength: function(a) {
                    a != this.__strength && (this.__renderDirty = !0);
                    return this.__strength = a
                },
                __class__: Qc
            });
            var sa = function() {};
            g["bikas.game.GameStyle"] = sa;
            sa.__name__ = ["bikas", "game", "GameStyle"];
            var Bg = g["bikas.game.ButtonType"] = {
                __ename__: ["bikas", "game",
                    "ButtonType"
                ],
                __constructs__: ["ButtonRadiusDisplayObject", "ButtonRadiusPosition", "ButtonRectangle"]
            };
            Bg.ButtonRadiusDisplayObject = ["ButtonRadiusDisplayObject", 0];
            Bg.ButtonRadiusDisplayObject.toString = l;
            Bg.ButtonRadiusDisplayObject.__enum__ = Bg;
            Bg.ButtonRadiusPosition = ["ButtonRadiusPosition", 1];
            Bg.ButtonRadiusPosition.toString = l;
            Bg.ButtonRadiusPosition.__enum__ = Bg;
            Bg.ButtonRectangle = ["ButtonRectangle", 2];
            Bg.ButtonRectangle.toString = l;
            Bg.ButtonRectangle.__enum__ = Bg;
            var ao = function() {
                this.display_object_reference =
                    this.position = this.rectangle = null;
                this.radius = 10
            };
            g["bikas.game.Button"] = ao;
            ao.__name__ = ["bikas", "game", "Button"];
            ao.prototype = {
                type: null,
                radius: null,
                display_object_reference: null,
                position: null,
                rectangle: null,
                __class__: ao
            };
            var gh = function() {};
            g["bikas.game.IButton"] = gh;
            gh.__name__ = ["bikas", "game", "IButton"];
            gh.prototype = {
                button: null,
                __class__: gh
            };
            var ot = function() {
                this.step_size = .016666666666666666;
                this.current_frame_timestamp = this.last_frame_timestamp = this.delta = this.original_dc = this.dc = this.elapsed_total_time =
                    0;
                this.max_delta = 33.333333333333336;
                this.min_delta = 8.333333333333334
            };
            g["bikas.game.Step"] = ot;
            ot.__name__ = ["bikas", "game", "Step"];
            ot.prototype = {
                min_delta: null,
                max_delta: null,
                current_frame_timestamp: null,
                last_frame_timestamp: null,
                delta: null,
                original_dc: null,
                dc: null,
                elapsed_total_time: null,
                step_size: null,
                __class__: ot
            };
            var xq = function() {};
            g["bikas.game.Line"] = xq;
            xq.__name__ = ["bikas", "game", "Line"];
            xq.prototype = {
                p1: null,
                p2: null,
                angle: null,
                p1_index: null,
                p2_index: null,
                __class__: xq
            };
            var pt = function() {};
            g["bikas.game.Image"] = pt;
            pt.__name__ = ["bikas", "game", "Image"];
            pt.prototype = {
                name: null,
                source: null,
                __class__: pt
            };
            var yq = function() {
                this.images = [];
                this.game_graphics_scale = 2;
                this.game_size_height = 720;
                this.game_size_width = 1280
            };
            g["bikas.game.ImagePack"] = yq;
            yq.__name__ = ["bikas", "game", "ImagePack"];
            yq.prototype = {
                name: null,
                game_size_width: null,
                game_size_height: null,
                game_graphics_scale: null,
                images: null,
                __class__: yq
            };
            var qt = function() {
                this.levels = [];
                this.all_image_map = new fb;
                this.all_packs = []
            };
            g["bikas.game.ExportedImages"] =
                qt;
            qt.__name__ = ["bikas", "game", "ExportedImages"];
            qt.prototype = {
                all_packs: null,
                all_image_map: null,
                levels: null,
                buttons: null,
                cache: null,
                pngs: null,
                __class__: qt
            };
            var rt = function() {
                this.transition_in_sound_played = !1;
                this.time = -1;
                this.scale = 1;
                this.last_rotation_for_sounds = 0;
                this.sound_rotation_click_angle = Math.PI / 4;
                this.is_static_part = this.is_layer2 = this.snapped = this.snapped_in_final_place = !1;
                this.init_state = this.final_state = null;
                this.bitmap_data_source_is_generated = !1;
                this.lines = [];
                this.back_part = this.back_connection =
                    null;
                this.additional_parts = []
            };
            g["bikas.game.Part"] = rt;
            rt.__name__ = ["bikas", "game", "Part"];
            rt.prototype = {
                entity: null,
                additional_parts: null,
                all_connections: null,
                back_part: null,
                back_connection: null,
                forward_parts: null,
                forward_connections: null,
                lines: null,
                bitmap_data_source: null,
                bitmap_data_source_is_generated: null,
                init_state: null,
                final_state: null,
                is_static_part: null,
                is_layer2: null,
                snapped: null,
                snapped_in_final_place: null,
                sound_rotation_click_angle: null,
                last_rotation_for_sounds: null,
                scale: null,
                time: null,
                transition_in_sound_played: null,
                __class__: rt
            };
            var st = function() {
                this.init_state = this.final_state = null
            };
            g["bikas.game.AdditionalPart"] = st;
            st.__name__ = ["bikas", "game", "AdditionalPart"];
            st.prototype = {
                body: null,
                init_state: null,
                final_state: null,
                __class__: st
            };
            var Rc = g["bikas.game.ConnectionType"] = {
                __ename__: ["bikas", "game", "ConnectionType"],
                __constructs__: ["ConnectionPivot", "ConnectionRotator", "ConnectionRail", "ConnectionArea"]
            };
            Rc.ConnectionPivot = ["ConnectionPivot", 0];
            Rc.ConnectionPivot.toString = l;
            Rc.ConnectionPivot.__enum__ =
                Rc;
            Rc.ConnectionRotator = ["ConnectionRotator", 1];
            Rc.ConnectionRotator.toString = l;
            Rc.ConnectionRotator.__enum__ = Rc;
            Rc.ConnectionRail = ["ConnectionRail", 2];
            Rc.ConnectionRail.toString = l;
            Rc.ConnectionRail.__enum__ = Rc;
            Rc.ConnectionArea = ["ConnectionArea", 3];
            Rc.ConnectionArea.toString = l;
            Rc.ConnectionArea.__enum__ = Rc;
            var zq = function() {
                this.scale = 1;
                this.pivot_joint = this.line_joint = this.angle_joint = this.rail_rot_pivot_joint = this.rail = this.area = null
            };
            g["bikas.game.Connection"] = zq;
            zq.__name__ = ["bikas", "game", "Connection"];
            zq.prototype = {
                connection_type: null,
                regular_source: null,
                snapped_source: null,
                entity: null,
                part1: null,
                part2: null,
                body1: null,
                body2: null,
                anchor1: null,
                anchor2: null,
                pivot_joint: null,
                line_joint: null,
                angle_joint: null,
                rail_rot_pivot_joint: null,
                rail: null,
                area: null,
                scale: null,
                bitmap_container: null,
                __class__: zq
            };
            var Mf = g["bikas.game.RailType"] = {
                __ename__: ["bikas", "game", "RailType"],
                __constructs__: ["RailLimited", "RailCircle"]
            };
            Mf.RailLimited = ["RailLimited", 0];
            Mf.RailLimited.toString = l;
            Mf.RailLimited.__enum__ = Mf;
            Mf.RailCircle = ["RailCircle", 1];
            Mf.RailCircle.toString = l;
            Mf.RailCircle.__enum__ = Mf;
            var tt = function() {};
            g["bikas.game.Rail"] = tt;
            tt.__name__ = ["bikas", "game", "Rail"];
            tt.prototype = {
                type: null,
                part: null,
                marker_center: null,
                local_body_center: null,
                radius: null,
                __class__: tt
            };
            var Aq = function() {
                this.walls = [];
                this.center_offset = new W;
                this.bounds = new mj;
                this.end = new W;
                this.start = new W
            };
            g["bikas.game.Area"] = Aq;
            Aq.__name__ = ["bikas", "game", "Area"];
            Aq.prototype = {
                part: null,
                start: null,
                end: null,
                bounds: null,
                center_offset: null,
                walls: null,
                circle_shape: null,
                __class__: Aq
            };
            var Gi = function() {};
            g["bikas.game.BodyState"] = Gi;
            Gi.__name__ = ["bikas", "game", "BodyState"];
            Gi.prototype = {
                guid: null,
                x: null,
                y: null,
                rotation: null,
                __class__: Gi
            };
            var bo = function() {
                this.prefab_name = ""
            };
            g["bikas.game.LevelState"] = bo;
            bo.__name__ = ["bikas", "game", "LevelState"];
            bo.prototype = {
                prefab_name: null,
                body_states: null,
                __class__: bo
            };
            var qb = g["bikas.game.LevelEndState"] = {
                __ename__: ["bikas", "game", "LevelEndState"],
                __constructs__: "LevelEndNone LevelEndAddContainers LevelEndShineIn LevelEndShineOut LevelEndWaitToAppreciateTheFinalShape LevelEndSetupUserAction LevelEndWaitForUserAction LevelEndWaitUntilAdmobAdIsClosed LevelEndAlphaOut LevelEndGoToNext".split(" ")
            };
            qb.LevelEndNone = ["LevelEndNone", 0];
            qb.LevelEndNone.toString = l;
            qb.LevelEndNone.__enum__ = qb;
            qb.LevelEndAddContainers = ["LevelEndAddContainers", 1];
            qb.LevelEndAddContainers.toString = l;
            qb.LevelEndAddContainers.__enum__ = qb;
            qb.LevelEndShineIn = ["LevelEndShineIn", 2];
            qb.LevelEndShineIn.toString = l;
            qb.LevelEndShineIn.__enum__ = qb;
            qb.LevelEndShineOut = ["LevelEndShineOut", 3];
            qb.LevelEndShineOut.toString = l;
            qb.LevelEndShineOut.__enum__ = qb;
            qb.LevelEndWaitToAppreciateTheFinalShape = ["LevelEndWaitToAppreciateTheFinalShape",
                4
            ];
            qb.LevelEndWaitToAppreciateTheFinalShape.toString = l;
            qb.LevelEndWaitToAppreciateTheFinalShape.__enum__ = qb;
            qb.LevelEndSetupUserAction = ["LevelEndSetupUserAction", 5];
            qb.LevelEndSetupUserAction.toString = l;
            qb.LevelEndSetupUserAction.__enum__ = qb;
            qb.LevelEndWaitForUserAction = ["LevelEndWaitForUserAction", 6];
            qb.LevelEndWaitForUserAction.toString = l;
            qb.LevelEndWaitForUserAction.__enum__ = qb;
            qb.LevelEndWaitUntilAdmobAdIsClosed = ["LevelEndWaitUntilAdmobAdIsClosed", 7];
            qb.LevelEndWaitUntilAdmobAdIsClosed.toString =
                l;
            qb.LevelEndWaitUntilAdmobAdIsClosed.__enum__ = qb;
            qb.LevelEndAlphaOut = ["LevelEndAlphaOut", 8];
            qb.LevelEndAlphaOut.toString = l;
            qb.LevelEndAlphaOut.__enum__ = qb;
            qb.LevelEndGoToNext = ["LevelEndGoToNext", 9];
            qb.LevelEndGoToNext.toString = l;
            qb.LevelEndGoToNext.__enum__ = qb;
            var Hc = function() {
                this.mask_init_y = this.shine_init_y = this.t = 0;
                this.end_shape_scroll_rect = new hb;
                this.end_shape_width = this.end_shape_height = 0;
                this.line_overlaps = [];
                this.shine_line_bitmap = null;
                this.shine_generated = !0;
                this.shine = null;
                this.wireframe_generated = !0;
                this.shape_mask = this.mask = this.wireframe = null;
                this.shape_generated = !0;
                this.shape = null;
                this.state = qb.LevelEndNone
            };
            g["bikas.game.LevelEnd"] = Hc;
            Hc.__name__ = ["bikas", "game", "LevelEnd"];
            Hc.prototype = {
                state: null,
                container: null,
                shape_container: null,
                shape: null,
                shape_generated: null,
                shape_mask: null,
                mask: null,
                wireframe: null,
                wireframe_generated: null,
                shine: null,
                shine_generated: null,
                shine_line_bitmap: null,
                line_overlaps: null,
                end_shape_width: null,
                end_shape_height: null,
                end_shape_scroll_rect: null,
                mask_init_y: null,
                shine_init_y: null,
                bounds: null,
                t: null,
                __class__: Hc
            };
            var ek = function() {
                this.time_left = 0
            };
            g["bikas.game.TempReducedFriction"] = ek;
            ek.__name__ = ["bikas", "game", "TempReducedFriction"];
            ek.prototype = {
                part: null,
                time_left: null,
                __class__: ek
            };
            var Sb = g["bikas.game.LevelGraphicsType"] = {
                __ename__: ["bikas", "game", "LevelGraphicsType"],
                __constructs__: ["LevelGraphicsFlashDrawn", "LevelGraphicsCanvasDrawn", "LevelGraphicsUseSavedBitmaps"]
            };
            Sb.LevelGraphicsFlashDrawn = ["LevelGraphicsFlashDrawn", 0];
            Sb.LevelGraphicsFlashDrawn.toString =
                l;
            Sb.LevelGraphicsFlashDrawn.__enum__ = Sb;
            Sb.LevelGraphicsCanvasDrawn = ["LevelGraphicsCanvasDrawn", 1];
            Sb.LevelGraphicsCanvasDrawn.toString = l;
            Sb.LevelGraphicsCanvasDrawn.__enum__ = Sb;
            Sb.LevelGraphicsUseSavedBitmaps = ["LevelGraphicsUseSavedBitmaps", 2];
            Sb.LevelGraphicsUseSavedBitmaps.toString = l;
            Sb.LevelGraphicsUseSavedBitmaps.__enum__ = Sb;
            var ne = g["bikas.game.LevelStateType"] = {
                __ename__: ["bikas", "game", "LevelStateType"],
                __constructs__: ["TransitionIn", "TransitionOut", "Gameplay"]
            };
            ne.TransitionIn = ["TransitionIn",
                0
            ];
            ne.TransitionIn.toString = l;
            ne.TransitionIn.__enum__ = ne;
            ne.TransitionOut = ["TransitionOut", 1];
            ne.TransitionOut.toString = l;
            ne.TransitionOut.__enum__ = ne;
            ne.Gameplay = ["Gameplay", 2];
            ne.Gameplay.toString = l;
            ne.Gameplay.__enum__ = ne;
            var Cc = function() {
                this.tutorial = null;
                this.transition_in_started = !1;
                this.reduced_friction_parts = [];
                this.transformed_polygon_points_bounds = this.dragging_part = null;
                this.transformed_polygon_points = [];
                this.center = this.shape_polygon = this.level_bounds = this.shape_bitmap = this.shape_polygon_position =
                    null;
                this.various_objects_generated = !0;
                this.various_objects_bitmap_container = null;
                this.rails = [];
                this.parts = [];
                this.connections = [];
                this.level_graphics_scale = 1;
                this.state = ne.Gameplay
            };
            g["bikas.game.Level"] = Cc;
            Cc.__name__ = ["bikas", "game", "Level"];
            Cc.prototype = {
                state: null,
                level_graphics_scale: null,
                world: null,
                connections: null,
                parts: null,
                rails: null,
                various_objects_bitmap_container: null,
                various_objects_generated: null,
                center: null,
                shape_polygon: null,
                level_bounds: null,
                shape_bitmap: null,
                shape_movie_clip_class: null,
                shape_polygon_position: null,
                transformed_polygon_points: null,
                transformed_polygon_points_bounds: null,
                dragging_part: null,
                reduced_friction_parts: null,
                end: null,
                all_entities: null,
                body_entities: null,
                transition_in_started: null,
                tutorial: null,
                __class__: Cc
            };
            var Fh = function() {
                this.mouse_damping = 1;
                this.mouse_frequency = 100;
                this.mouse_maxForce = 12E3;
                this.mouse_maxForce_for_1part = 15E3;
                this.mouse_maxForce_mass = 1;
                this.mouse_maxError = 1500;
                this.part_damping = 1;
                this.part_frequency = 10
            };
            g["bikas.game.ConstraintConfig"] = Fh;
            Fh.__name__ = ["bikas", "game", "ConstraintConfig"];
            Fh.prototype = {
                mouse_damping: null,
                mouse_frequency: null,
                mouse_maxForce: null,
                mouse_maxForce_for_1part: null,
                mouse_maxForce_mass: null,
                mouse_maxError: null,
                part_damping: null,
                part_frequency: null,
                __class__: Fh
            };
            var ut = function() {
                this.worldLinearDrag = this.worldAngularDrag = 0;
                this.positionIterations = this.velocityIterations = 75;
                this.body_density = .05;
                this.global_friction = .69;
                this.back_part_angular_friction = .5
            };
            g["bikas.game.SpaceConfig"] = ut;
            ut.__name__ = ["bikas", "game",
                "SpaceConfig"
            ];
            ut.prototype = {
                worldAngularDrag: null,
                worldLinearDrag: null,
                velocityIterations: null,
                positionIterations: null,
                body_density: null,
                global_friction: null,
                back_part_angular_friction: null,
                __class__: ut
            };
            var vt = function() {
                this.collisionSlop = 2;
                this.collisionSlopCCD = 5;
                this.staticCCDLinearThreshold = this.distanceThresholdCCD = .05;
                this.staticCCDAngularThreshold = .005;
                this.dynamicSweepLinearThreshold = 17;
                this.dynamicSweepAngularThreshold = .6;
                this.arbiterExpirationDelay = 6;
                this.elasticThreshold = 20;
                this.sleepDelay =
                    60;
                this.linearSleepThreshold = .2;
                this.angularCCDSlipScale = .75;
                this.contactBiasCoef = .1;
                this.contactStaticBiasCoef = 1;
                this.contactContinuousBiasCoef = .4;
                this.contactContinuousStaticBiasCoef = .5;
                this.constraintLinearSlop = .001;
                this.constraintAngularSlop = 1E-4;
                this.illConditionedThreshold = 2E8
            };
            g["bikas.game.PhysicsConfig"] = vt;
            vt.__name__ = ["bikas", "game", "PhysicsConfig"];
            vt.prototype = {
                collisionSlop: null,
                collisionSlopCCD: null,
                distanceThresholdCCD: null,
                staticCCDLinearThreshold: null,
                staticCCDAngularThreshold: null,
                dynamicSweepLinearThreshold: null,
                dynamicSweepAngularThreshold: null,
                arbiterExpirationDelay: null,
                elasticThreshold: null,
                sleepDelay: null,
                linearSleepThreshold: null,
                angularCCDSlipScale: null,
                contactBiasCoef: null,
                contactStaticBiasCoef: null,
                contactContinuousBiasCoef: null,
                contactContinuousStaticBiasCoef: null,
                constraintLinearSlop: null,
                constraintAngularSlop: null,
                illConditionedThreshold: null,
                __class__: vt
            };
            var wt = function() {};
            g["bikas.game.PhysicsSettings"] = wt;
            wt.__name__ = ["bikas", "game", "PhysicsSettings"];
            wt.prototype = {
                constraint_config: null,
                space_config: null,
                physics_config: null,
                __class__: wt
            };
            var ye = g["bikas.game.UnstableType"] = {
                __ename__: ["bikas", "game", "UnstableType"],
                __constructs__: ["UnstablePivot", "UnstableRail", "UnstableArea", "UnstableOverlap"]
            };
            ye.UnstablePivot = ["UnstablePivot", 0];
            ye.UnstablePivot.toString = l;
            ye.UnstablePivot.__enum__ = ye;
            ye.UnstableRail = ["UnstableRail", 1];
            ye.UnstableRail.toString = l;
            ye.UnstableRail.__enum__ = ye;
            ye.UnstableArea = ["UnstableArea", 2];
            ye.UnstableArea.toString = l;
            ye.UnstableArea.__enum__ =
                ye;
            ye.UnstableOverlap = ["UnstableOverlap", 3];
            ye.UnstableOverlap.toString = l;
            ye.UnstableOverlap.__enum__ = ye;
            var oe = function() {
                this.show_reload = !1;
                this.reload_current_time = this.disappear_current_time = 0;
                this.part1 = this.part2 = this.connection = null
            };
            g["bikas.game.UnstablePart"] = oe;
            oe.__name__ = ["bikas", "game", "UnstablePart"];
            oe.prototype = {
                type: null,
                part1: null,
                part2: null,
                connection: null,
                reload_current_time: null,
                disappear_current_time: null,
                show_reload: null,
                __class__: oe
            };
            var xt = function() {
                this.points = []
            };
            g["bikas.game.DotGrid"] =
                xt;
            xt.__name__ = ["bikas", "game", "DotGrid"];
            xt.prototype = {
                circle_size: null,
                h_count: null,
                w_count: null,
                points: null,
                __class__: xt
            };
            var yt = function() {};
            g["bikas.game.Background"] = yt;
            yt.__name__ = ["bikas", "game", "Background"];
            yt.prototype = {
                source: null,
                bitmap: null,
                __class__: yt
            };
            var ml = function() {
                this.current_time = 0;
                this.finished = !0;
                this.text_field = new hd
            };
            g["bikas.game.SaveMessage"] = ml;
            ml.__name__ = ["bikas", "game", "SaveMessage"];
            ml.prototype = {
                text_field: null,
                finished: null,
                current_time: null,
                __class__: ml
            };
            var Bq =
                function() {};
            g["bikas.game.PlayButton"] = Bq;
            Bq.__name__ = ["bikas", "game", "PlayButton"];
            Bq.__interfaces__ = [gh];
            Bq.prototype = {
                background_source: null,
                downed_background_source: null,
                foreground_source: null,
                stage_background: null,
                container: null,
                foreground: null,
                background: null,
                button: null,
                __class__: Bq
            };
            var nl = function() {
                this.additional_foreground = null
            };
            g["bikas.game.ButtonInPause"] = nl;
            nl.__name__ = ["bikas", "game", "ButtonInPause"];
            nl.__interfaces__ = [gh];
            nl.prototype = {
                background_source: null,
                downed_background_source: null,
                container: null,
                background: null,
                foreground: null,
                additional_foreground: null,
                button: null,
                __class__: nl
            };
            var Cq = function() {};
            g["bikas.game.InGameButton"] = Cq;
            Cq.__name__ = ["bikas", "game", "InGameButton"];
            Cq.__interfaces__ = [gh];
            Cq.prototype = {
                background_source: null,
                downed_background_source: null,
                container: null,
                radius: null,
                background: null,
                foreground: null,
                button: null,
                __class__: Cq
            };
            var Hi = function() {
                this.button_animation_current_time = this.circle_wait_current_time = this.circle_animation_current_time = 0
            };
            g["bikas.game.InLevelReload"] =
                Hi;
            Hi.__name__ = ["bikas", "game", "InLevelReload"];
            Hi.prototype = {
                button: null,
                button_animation_current_time: null,
                circle_wait_current_time: null,
                circle_animation_current_time: null,
                circle: null,
                __class__: Hi
            };
            var pe = g["bikas.game.PauseType"] = {
                __ename__: ["bikas", "game", "PauseType"],
                __constructs__: ["PauseMainMenu", "PauseLevel", "PauseInterLevelMenu"]
            };
            pe.PauseMainMenu = ["PauseMainMenu", 0];
            pe.PauseMainMenu.toString = l;
            pe.PauseMainMenu.__enum__ = pe;
            pe.PauseLevel = ["PauseLevel", 1];
            pe.PauseLevel.toString = l;
            pe.PauseLevel.__enum__ =
                pe;
            pe.PauseInterLevelMenu = ["PauseInterLevelMenu", 2];
            pe.PauseInterLevelMenu.toString = l;
            pe.PauseInterLevelMenu.__enum__ = pe;
            var wc = g["bikas.game.PauseState"] = {
                __ename__: ["bikas", "game", "PauseState"],
                __constructs__: ["PauseStateClosed", "PauseStateOpened", "PauseStateTransitionIn", "PauseStateTransitionOut"]
            };
            wc.PauseStateClosed = ["PauseStateClosed", 0];
            wc.PauseStateClosed.toString = l;
            wc.PauseStateClosed.__enum__ = wc;
            wc.PauseStateOpened = ["PauseStateOpened", 1];
            wc.PauseStateOpened.toString = l;
            wc.PauseStateOpened.__enum__ =
                wc;
            wc.PauseStateTransitionIn = ["PauseStateTransitionIn", 2];
            wc.PauseStateTransitionIn.toString = l;
            wc.PauseStateTransitionIn.__enum__ = wc;
            wc.PauseStateTransitionOut = ["PauseStateTransitionOut", 3];
            wc.PauseStateTransitionOut.toString = l;
            wc.PauseStateTransitionOut.__enum__ = wc;
            var Pg = function() {
                this.time = 0;
                this.level_icons = [];
                this.enabled_buttons = [];
                this.all_buttons = [];
                this.state = wc.PauseStateClosed;
                this.type = pe.PauseMainMenu
            };
            g["bikas.game.Pause"] = Pg;
            Pg.__name__ = ["bikas", "game", "Pause"];
            Pg.prototype = {
                type: null,
                state: null,
                pause_button: null,
                pause_close_button: null,
                inlevel_reload: null,
                container: null,
                menu_background: null,
                music: null,
                sound: null,
                wrench: null,
                menu: null,
                play: null,
                reload: null,
                skip0: null,
                skip1: null,
                skip2: null,
                skip3: null,
                all_buttons: null,
                enabled_buttons: null,
                level_icons: null,
                time: null,
                __class__: Pg
            };
            var zt = function() {
                this.main_menu_sources = this.pause_menu_sources = null;
                this.connection_area = new fk;
                this.connection_rail_rotator = new fk;
                this.connection_rail = new fk;
                this.connection_rotator = new fk;
                this.connection_pivot =
                    new fk;
                this.menu_filters = new $n;
                this.level_filters = new $n;
                this.generated_for_graphics_scale = -1;
                this.generated_for_size = new rc(-1, -1)
            };
            g["bikas.game.GameAssetCache"] = zt;
            zt.__name__ = ["bikas", "game", "GameAssetCache"];
            zt.prototype = {
                generated_for_size: null,
                generated_for_graphics_scale: null,
                level_filters: null,
                menu_filters: null,
                connection_pivot: null,
                connection_rotator: null,
                connection_rail: null,
                connection_rail_rotator: null,
                connection_area: null,
                main_menu_sources: null,
                pause_menu_sources: null,
                __class__: zt
            };
            var $n = function() {};
            g["bikas.game.LevelFilters"] = $n;
            $n.__name__ = ["bikas", "game", "LevelFilters"];
            $n.prototype = {
                white_inner_border: null,
                black_outer_border: null,
                price_outer_border: null,
                white_inner_border_layer2: null,
                shadow_glow_layer2: null,
                regular_part_filters: null,
                layer2_part_filters: null,
                __class__: $n
            };
            var fk = function() {
                this.created_at_scale = 1
            };
            g["bikas.game.ConnectionBitmapSources"] = fk;
            fk.__name__ = ["bikas", "game", "ConnectionBitmapSources"];
            fk.prototype = {
                created_at_scale: null,
                regular: null,
                snapped: null,
                regular_layer2: null,
                snapped_layer2: null,
                __class__: fk
            };
            var pq = function() {};
            g["bikas.game.LevelIconSource"] = pq;
            pq.__name__ = ["bikas", "game", "LevelIconSource"];
            pq.prototype = {
                color: null,
                grey: null,
                __class__: pq
            };
            var kt = function() {
                this.level_pack_icons = new fb;
                this.title_animation = []
            };
            g["bikas.game.MainMenuBitmapSources"] = kt;
            kt.__name__ = ["bikas", "game", "MainMenuBitmapSources"];
            kt.prototype = {
                title_text: null,
                title_animation: null,
                star: null,
                star_empty: null,
                star_big: null,
                star_effect: null,
                weekly_text: null,
                credits_text: null,
                middle_line: null,
                timeline_line: null,
                timeline_icons: null,
                window_icons: null,
                weekly_history_icons: null,
                inter_level_icons: null,
                level_pack_icons: null,
                __class__: kt
            };
            var lt = function() {
                this.text_numbers = null
            };
            g["bikas.game.IconBackgroundBitmapSources"] = lt;
            lt.__name__ = ["bikas", "game", "IconBackgroundBitmapSources"];
            lt.prototype = {
                locked: null,
                unlocked: null,
                downed: null,
                next: null,
                next_downed: null,
                completed: null,
                text_numbers: null,
                __class__: lt
            };
            var mt = function() {};
            g["bikas.game.PauseMenuBitmapSources"] = mt;
            mt.__name__ = ["bikas", "game", "PauseMenuBitmapSources"];
            mt.prototype = {
                menu_background: null,
                pause_button_background: null,
                downed_pause_button_background: null,
                pause: null,
                pause_close: null,
                inlevel_reload: null,
                inlevel_reload_circle: null,
                button_background: null,
                downed_button_background: null,
                music: null,
                sound: null,
                line_cross: null,
                wrench: null,
                menu: null,
                play: null,
                reload: null,
                skip0: null,
                skip1: null,
                skip2: null,
                skip3: null,
                __class__: mt
            };
            var Gh = g["bikas.game.TutorialType"] = {
                __ename__: ["bikas", "game", "TutorialType"],
                __constructs__: ["TouchTutorial",
                    "MouseTutorial"
                ]
            };
            Gh.TouchTutorial = ["TouchTutorial", 0];
            Gh.TouchTutorial.toString = l;
            Gh.TouchTutorial.__enum__ = Gh;
            Gh.MouseTutorial = ["MouseTutorial", 1];
            Gh.MouseTutorial.toString = l;
            Gh.MouseTutorial.__enum__ = Gh;
            var Wc = g["bikas.game.TutorialState"] = {
                __ename__: ["bikas", "game", "TutorialState"],
                __constructs__: "TutorialAppear TutorialDrag TutorialWait TutorialDisappear TutorialEmptyWait TutorialCompleted".split(" ")
            };
            Wc.TutorialAppear = ["TutorialAppear", 0];
            Wc.TutorialAppear.toString = l;
            Wc.TutorialAppear.__enum__ =
                Wc;
            Wc.TutorialDrag = ["TutorialDrag", 1];
            Wc.TutorialDrag.toString = l;
            Wc.TutorialDrag.__enum__ = Wc;
            Wc.TutorialWait = ["TutorialWait", 2];
            Wc.TutorialWait.toString = l;
            Wc.TutorialWait.__enum__ = Wc;
            Wc.TutorialDisappear = ["TutorialDisappear", 3];
            Wc.TutorialDisappear.toString = l;
            Wc.TutorialDisappear.__enum__ = Wc;
            Wc.TutorialEmptyWait = ["TutorialEmptyWait", 4];
            Wc.TutorialEmptyWait.toString = l;
            Wc.TutorialEmptyWait.__enum__ = Wc;
            Wc.TutorialCompleted = ["TutorialCompleted", 5];
            Wc.TutorialCompleted.toString = l;
            Wc.TutorialCompleted.__enum__ =
                Wc;
            var W = function(a, b) {
                null == b && (b = 0);
                null == a && (a = 0);
                this.x = a;
                this.y = b
            };
            g["bikas.global.Point"] = W;
            W.__name__ = ["bikas", "global", "Point"];
            W.createDefault = function() {
                if (0 < W.destroyed_point_list.length) {
                    var a = W.destroyed_point_list.pop();
                    a.x = 0;
                    a.y = 0;
                    return a
                }
                return new W(0, 0)
            };
            W.create = function(a, b) {
                null == b && (b = 0);
                null == a && (a = 0);
                if (0 < W.destroyed_point_list.length) {
                    var c = W.destroyed_point_list.pop();
                    c.x = a;
                    c.y = b;
                    return c
                }
                return new W(a, b)
            };
            W.destroy = function(a) {
                Nv.validate_reusable_objects && -1 != W.destroyed_point_list.indexOf(a) ?
                    w.trace("warning: object is already added to destroyed list", {
                        fileName: "GlobalData.hx",
                        lineNumber: 68,
                        className: "bikas.global.Point",
                        methodName: "destroy"
                    }) : W.destroyed_point_list.push(a)
            };
            W.prototype = {
                x: null,
                y: null,
                toString: function() {
                    return "{x:" + Math.round(1E3 * this.x) / 1E3 + ",y:" + Math.round(1E3 * this.y) / 1E3 + "}"
                },
                __class__: W
            };
            var qd = function() {
                this.current_time = 0;
                this.state = Wc.TutorialAppear
            };
            g["bikas.game.Tutorial"] = qd;
            qd.__name__ = ["bikas", "game", "Tutorial"];
            qd.prototype = {
                type: null,
                state: null,
                container: null,
                part: null,
                pointer_finger: null,
                pointer_mouse: null,
                current_time: null,
                __class__: qd
            };
            var co = function() {
                this.unlocked = this.skipped = this.completed = !1;
                this.name = ""
            };
            g["bikas.game.ProgressSaveLevel"] = co;
            co.__name__ = ["bikas", "game", "ProgressSaveLevel"];
            co.prototype = {
                name: null,
                unlocked: null,
                skipped: null,
                completed: null,
                __class__: co
            };
            var eo = function() {
                this.levels = [];
                this.unlocked = this.ad_was_shown = this.completed = this.completed_shown = !1;
                this.name = ""
            };
            g["bikas.game.ProgressSavePack"] = eo;
            eo.__name__ = ["bikas", "game",
                "ProgressSavePack"
            ];
            eo.prototype = {
                name: null,
                unlocked: null,
                ad_was_shown: null,
                completed: null,
                completed_shown: null,
                levels: null,
                __class__: eo
            };
            var fo = function() {
                this.packs = [];
                this.completed = this.completed_shown = !1;
                this.name = ""
            };
            g["bikas.game.ProgressSaveTimeline"] = fo;
            fo.__name__ = ["bikas", "game", "ProgressSaveTimeline"];
            fo.prototype = {
                name: null,
                completed: null,
                completed_shown: null,
                packs: null,
                __class__: fo
            };
            var gk = function() {
                this.weekly_timelines = [];
                this.main_timelines = [];
                this.game_is_bought = this.is_ad_consent_taken =
                    this.personalized_ads = this.final_animation_played = !1;
                this.last_level_completed_or_skipped = "";
                this.current_weekly_history_page_index = 0;
                this.unlocked_weekly = this.unlocked_weekly_shown = this.unlocked_weekly_history = this.unlocked_weekly_history_shown = !1;
                this.sounds_enabled = this.music_enabled = !0;
                this.version = 1
            };
            g["bikas.game.ProgressSave"] = gk;
            gk.__name__ = ["bikas", "game", "ProgressSave"];
            gk.prototype = {
                version: null,
                sounds_enabled: null,
                music_enabled: null,
                unlocked_weekly: null,
                unlocked_weekly_shown: null,
                unlocked_weekly_history: null,
                unlocked_weekly_history_shown: null,
                current_weekly_history_page_index: null,
                last_level_completed_or_skipped: null,
                game_is_bought: null,
                is_ad_consent_taken: null,
                personalized_ads: null,
                final_animation_played: null,
                main_timelines: null,
                weekly_timelines: null,
                __class__: gk
            };
            var Hh = g["bikas.game.ProgressSaveType"] = {
                __ename__: ["bikas", "game", "ProgressSaveType"],
                __constructs__: ["LevelComplete", "LevelSkip"]
            };
            Hh.LevelComplete = ["LevelComplete", 0];
            Hh.LevelComplete.toString = l;
            Hh.LevelComplete.__enum__ = Hh;
            Hh.LevelSkip = ["LevelSkip", 1];
            Hh.LevelSkip.toString = l;
            Hh.LevelSkip.__enum__ = Hh;
            var go = function() {
                this.music_gameplay_transition_current_time = 0
            };
            g["bikas.game.GameSounds"] = go;
            go.__name__ = ["bikas", "game", "GameSounds"];
            go.prototype = {
                music_menu: null,
                music_gameplay: null,
                music_gameplay_transition_current_time: null,
                click: null,
                level_finish: null,
                finish_snap: null,
                part_rotate: null,
                part_snap: null,
                part_unsnap: null,
                part_drag_click: null,
                part_transition: null,
                menu_transition_in: null,
                menu_transition_out: null,
                just_completed_pack_transition: null,
                just_completed_pack_bang: null,
                star_bang: null,
                level_pack_pop: null,
                __class__: go
            };
            var rc = function(a, b) {
                null == b && (b = 0);
                null == a && (a = 0);
                this.width = a;
                this.height = b
            };
            g["bikas.global.Size"] = rc;
            rc.__name__ = ["bikas", "global", "Size"];
            rc.prototype = {
                width: null,
                height: null,
                toString: function() {
                    return "{width:" + Math.round(1E3 * this.width) / 1E3 + ",height:" + Math.round(1E3 * this.height) / 1E3 + "}"
                },
                __class__: rc
            };
            var gc = function() {
                this.mouse_event = this.keyboard_event = null;
                this.running = !1;
                this.html5_play_button_time = 0;
                this.html5_waiting_for_play_click = !1;
                this.html5_play_button = null;
                this.save_message = new ml;
                this.overlap_out2 = new Wa;
                this.overlap_out1 = new Wa;
                this.unstable_part_index = 0;
                this.record_data = this.export_level_screenshots = this.export_level_graphics_for_openfl = this.latest_compressed_library_bytes = this.current_dot_grid = this.current_level_background = this.inter_level_menu = this.main_menu = this.play_window = this.settings_window = this.prompt_window = null;
                this.poki_set_gameplay_on = !1;
                this.very_slow_update_time = 0;
                this.very_slow_update = !1;
                this.game_step_pause = !0;
                this.game_stepping_enabled = !1;
                this.debug_draw_objects = new fb;
                this.test_level_body_scale = this.test_portrait_level_scale = 0;
                this.allow_snapping = this.enable_level_init = !0;
                this.show_debug_menu = !1;
                this.debug = this.frame_rate = this.frame_rate_format = this.frame_rate_field = this.pause_debug = null;
                this.sounds = new go;
                this.checked_if_european_union_country = !1;
                this.current_date = new Date;
                this.cache = new zt;
                this.dpi = 72;
                this.mouse_record = null;
                this.step = new ot;
                this.graphics_scale = 1;
                this.level_graphics_type = Sb.LevelGraphicsFlashDrawn;
                this.exported_images = null;
                this.finger_radius = 5
            };
            g["bikas.game.Game"] = gc;
            gc.__name__ = ["bikas", "game", "Game"];
            gc.prototype = {
                serial_data: null,
                level_states_serial_data: null,
                progress_serial_data: null,
                bitmap_assets: null,
                animation_assets: null,
                movie_clip_assets: null,
                finger_radius: null,
                finger_body: null,
                mouse_drag_joint: null,
                physics_settings: null,
                exported_images: null,
                level_graphics_type: null,
                game_levels: null,
                level_states: null,
                graphics_scale: null,
                config: null,
                step: null,
                mouse_state: null,
                mouse_vec: null,
                keyboard_state: null,
                mouse_record: null,
                current_level: null,
                dpi: null,
                progress_save: null,
                cache: null,
                current_date: null,
                checked_if_european_union_country: null,
                sounds: null,
                debug: null,
                frame_rate: null,
                frame_rate_format: null,
                frame_rate_field: null,
                pause_debug: null,
                show_debug_menu: null,
                allow_snapping: null,
                enable_level_init: null,
                test_level_body_scale: null,
                test_portrait_level_scale: null,
                debug_draw_objects: null,
                game_stepping_enabled: null,
                game_step_pause: null,
                very_slow_update: null,
                very_slow_update_time: null,
                poki_set_gameplay_on: null,
                record_data: null,
                export_level_screenshots: null,
                export_level_graphics_for_openfl: null,
                library_group: null,
                latest_compressed_library_bytes: null,
                stage_group_original: null,
                stage_group: null,
                pause: null,
                level: null,
                editor: null,
                engine: null,
                current_dot_grid: null,
                current_level_background: null,
                inter_level_menu: null,
                main_menu: null,
                play_window: null,
                settings_window: null,
                prompt_window: null,
                unstable_part_index: null,
                overlap_out1: null,
                overlap_out2: null,
                unstable_part: null,
                size: null,
                container: null,
                entity_container: null,
                menu_container: null,
                debug_menu_container: null,
                click_shape: null,
                game_border: null,
                game_iphone_home_button: null,
                save_message: null,
                html5_play_button: null,
                html5_waiting_for_play_click: null,
                html5_play_button_time: null,
                running: null,
                mouse_event: null,
                keyboard_event: null,
                __class__: gc
            };
            var At = function() {
                this.index = 0;
                this.playing = this.forward = !1;
                this.points = []
            };
            g["bikas.game.MouseRecord"] = At;
            At.__name__ = ["bikas", "game", "MouseRecord"];
            At.prototype = {
                points: null,
                playing: null,
                forward: null,
                index: null,
                __class__: At
            };
            var fe = g["bikas.game.PauseObjectAlign"] = {
                __ename__: ["bikas", "game", "PauseObjectAlign"],
                __constructs__: ["Left", "Right"]
            };
            fe.Left = ["Left", 0];
            fe.Left.toString = l;
            fe.Left.__enum__ = fe;
            fe.Right = ["Right", 1];
            fe.Right.toString = l;
            fe.Right.__enum__ = fe;
            var Bt = function() {
                this.original_font_size = 12
            };
            g["bikas.game.PauseObject"] = Bt;
            Bt.__name__ = ["bikas", "game", "PauseObject"];
            Bt.prototype = {
                original_font_size: null,
                align: null,
                field: null,
                format: null,
                __class__: Bt
            };
            var Ct = function() {
                this.all_objects = [];
                this.texts = [];
                this.buttons = []
            };
            g["bikas.game.PauseDebug"] = Ct;
            Ct.__name__ = ["bikas", "game", "PauseDebug"];
            Ct.prototype = {
                container: null,
                build_text: null,
                buttons: null,
                texts: null,
                all_objects: null,
                __class__: Ct
            };
            var Ii = function() {
                this.frame = this.code_stamp = this.current_stamp = this.average_stamp = this.average_ms = this.slowest_frame_ms = 0;
                this.frames_ms = []
            };
            g["bikas.game.FrameRate"] = Ii;
            Ii.__name__ = ["bikas", "game", "FrameRate"];
            Ii.prototype = {
                frames_ms: null,
                frame: null,
                code_stamp: null,
                current_stamp: null,
                average_stamp: null,
                average_ms: null,
                slowest_frame_ms: null,
                __class__: Ii
            };
            var ta = g["bikas.game.ScreenSizes"] = {
                __ename__: ["bikas", "game", "ScreenSizes"],
                __constructs__: "Screen_Portrait_9_16_360x640 Screen_Portrait_3_4_360x480 Screen_1_1_360x360 Screen_4_3_480x360 Screen_16_9_640x360 Screen_16_9_960x540 Screen_2_1_720x360 Screen_3_1_1080x360 Screen2x_1_1_640x640 Screen2x_4_3_800x600 Screen2x_16_9_1280x720 Screen2x_2_1_1280x640 Screen2x_3_1_1440x480 Screen3x_16_9_2560x1440 Screen_Icons_1680x1050 Screen_Tablet_7inch_1280x800 Screen_Tablet_10inch_1920x1200 Screen_FullHD_1920x1080 Screen_Video_Preview_640x360 Screen_Video_1280x720 Screen_Video_1334x750 Screen_Video_1920x886 Screen_Video_1920x1080 Screen_Video_1200x900 Screen_Video_1600x1200".split(" ")
            };
            ta.Screen_Portrait_9_16_360x640 = ["Screen_Portrait_9_16_360x640", 0];
            ta.Screen_Portrait_9_16_360x640.toString = l;
            ta.Screen_Portrait_9_16_360x640.__enum__ = ta;
            ta.Screen_Portrait_3_4_360x480 = ["Screen_Portrait_3_4_360x480", 1];
            ta.Screen_Portrait_3_4_360x480.toString = l;
            ta.Screen_Portrait_3_4_360x480.__enum__ = ta;
            ta.Screen_1_1_360x360 = ["Screen_1_1_360x360", 2];
            ta.Screen_1_1_360x360.toString = l;
            ta.Screen_1_1_360x360.__enum__ = ta;
            ta.Screen_4_3_480x360 = ["Screen_4_3_480x360", 3];
            ta.Screen_4_3_480x360.toString = l;
            ta.Screen_4_3_480x360.__enum__ =
                ta;
            ta.Screen_16_9_640x360 = ["Screen_16_9_640x360", 4];
            ta.Screen_16_9_640x360.toString = l;
            ta.Screen_16_9_640x360.__enum__ = ta;
            ta.Screen_16_9_960x540 = ["Screen_16_9_960x540", 5];
            ta.Screen_16_9_960x540.toString = l;
            ta.Screen_16_9_960x540.__enum__ = ta;
            ta.Screen_2_1_720x360 = ["Screen_2_1_720x360", 6];
            ta.Screen_2_1_720x360.toString = l;
            ta.Screen_2_1_720x360.__enum__ = ta;
            ta.Screen_3_1_1080x360 = ["Screen_3_1_1080x360", 7];
            ta.Screen_3_1_1080x360.toString = l;
            ta.Screen_3_1_1080x360.__enum__ = ta;
            ta.Screen2x_1_1_640x640 = ["Screen2x_1_1_640x640",
                8
            ];
            ta.Screen2x_1_1_640x640.toString = l;
            ta.Screen2x_1_1_640x640.__enum__ = ta;
            ta.Screen2x_4_3_800x600 = ["Screen2x_4_3_800x600", 9];
            ta.Screen2x_4_3_800x600.toString = l;
            ta.Screen2x_4_3_800x600.__enum__ = ta;
            ta.Screen2x_16_9_1280x720 = ["Screen2x_16_9_1280x720", 10];
            ta.Screen2x_16_9_1280x720.toString = l;
            ta.Screen2x_16_9_1280x720.__enum__ = ta;
            ta.Screen2x_2_1_1280x640 = ["Screen2x_2_1_1280x640", 11];
            ta.Screen2x_2_1_1280x640.toString = l;
            ta.Screen2x_2_1_1280x640.__enum__ = ta;
            ta.Screen2x_3_1_1440x480 = ["Screen2x_3_1_1440x480",
                12
            ];
            ta.Screen2x_3_1_1440x480.toString = l;
            ta.Screen2x_3_1_1440x480.__enum__ = ta;
            ta.Screen3x_16_9_2560x1440 = ["Screen3x_16_9_2560x1440", 13];
            ta.Screen3x_16_9_2560x1440.toString = l;
            ta.Screen3x_16_9_2560x1440.__enum__ = ta;
            ta.Screen_Icons_1680x1050 = ["Screen_Icons_1680x1050", 14];
            ta.Screen_Icons_1680x1050.toString = l;
            ta.Screen_Icons_1680x1050.__enum__ = ta;
            ta.Screen_Tablet_7inch_1280x800 = ["Screen_Tablet_7inch_1280x800", 15];
            ta.Screen_Tablet_7inch_1280x800.toString = l;
            ta.Screen_Tablet_7inch_1280x800.__enum__ = ta;
            ta.Screen_Tablet_10inch_1920x1200 = ["Screen_Tablet_10inch_1920x1200", 16];
            ta.Screen_Tablet_10inch_1920x1200.toString = l;
            ta.Screen_Tablet_10inch_1920x1200.__enum__ = ta;
            ta.Screen_FullHD_1920x1080 = ["Screen_FullHD_1920x1080", 17];
            ta.Screen_FullHD_1920x1080.toString = l;
            ta.Screen_FullHD_1920x1080.__enum__ = ta;
            ta.Screen_Video_Preview_640x360 = ["Screen_Video_Preview_640x360", 18];
            ta.Screen_Video_Preview_640x360.toString = l;
            ta.Screen_Video_Preview_640x360.__enum__ = ta;
            ta.Screen_Video_1280x720 = ["Screen_Video_1280x720", 19];
            ta.Screen_Video_1280x720.toString =
                l;
            ta.Screen_Video_1280x720.__enum__ = ta;
            ta.Screen_Video_1334x750 = ["Screen_Video_1334x750", 20];
            ta.Screen_Video_1334x750.toString = l;
            ta.Screen_Video_1334x750.__enum__ = ta;
            ta.Screen_Video_1920x886 = ["Screen_Video_1920x886", 21];
            ta.Screen_Video_1920x886.toString = l;
            ta.Screen_Video_1920x886.__enum__ = ta;
            ta.Screen_Video_1920x1080 = ["Screen_Video_1920x1080", 22];
            ta.Screen_Video_1920x1080.toString = l;
            ta.Screen_Video_1920x1080.__enum__ = ta;
            ta.Screen_Video_1200x900 = ["Screen_Video_1200x900", 23];
            ta.Screen_Video_1200x900.toString =
                l;
            ta.Screen_Video_1200x900.__enum__ = ta;
            ta.Screen_Video_1600x1200 = ["Screen_Video_1600x1200", 24];
            ta.Screen_Video_1600x1200.toString = l;
            ta.Screen_Video_1600x1200.__enum__ = ta;
            var Ov = function() {};
            g["bikas.game.GameDebug"] = Ov;
            Ov.__name__ = ["bikas", "game", "GameDebug"];
            Ov.prototype = {
                game_debug_window: null,
                level_debug_window: null,
                debug_draw: null,
                space_update: null,
                game_width: null,
                game_height: null,
                fps_element: null,
                __class__: Ov
            };
            var Oe = function() {};
            g["bikas.game.GameDebugDo"] = Oe;
            Oe.__name__ = ["bikas", "game", "GameDebugDo"];
            Oe.createPauseDebug = function(a) {
                var b = new Ct;
                b.container = new S;
                var c = function(a, b, c, d) {
                        var e = new Bt;
                        e.align = b;
                        e.format = new kf;
                        e.format.bold = !0;
                        e.format.font = "Arial";
                        e.format.color = sa.pause_menu_button_border;
                        e.original_font_size = 14;
                        e.align == fe.Left ? e.format.align = 3 : e.align == fe.Right ? e.format.align = 4 : w.trace("warning: unsupported " + E.string(e.align), {
                            fileName: "GameDebugDo.hx",
                            lineNumber: 125,
                            className: "bikas.game.GameDebugDo",
                            methodName: "createPauseDebug"
                        });
                        e.field = new hd;
                        e.field.set_text(d);
                        e.field.set_defaultTextFormat(e.format);
                        e.field.setTextFormat(e.format);
                        e.field.set_selectable(!1);
                        c && (e.field.set_background(!0), e.field.set_backgroundColor(sa.pause_menu_button_background));
                        a.container.addChild(e.field);
                        return e
                    },
                    d = function(a, b, d, k) {
                        var e = c(a, b, !0, d);
                        e.field.addEventListener("mouseDown", function(a) {
                            e.field.set_alpha(.6)
                        });
                        e.field.addEventListener("mouseOut", function(a) {
                            e.field.set_alpha(1)
                        });
                        e.field.addEventListener("mouseUp", function(a) {
                            e.field.set_alpha(1)
                        });
                        e.field.addEventListener("click", function(a) {
                            k()
                        });
                        a.buttons.push(e);
                        a.all_objects.push(e);
                        return e
                    };
                b.build_text = function(a, b, d) {
                    b = c(a, b, !1, d);
                    a.texts.push(b);
                    a.all_objects.push(b);
                    return b
                }(b, fe.Left, "Build");
                d(b, fe.Left, "Resize", function() {
                    D.resizeGame(a, a.size.width, a.size.height)
                });
                d(b, fe.Left, "Reset All Progress", function() {
                    a.progress_save = D.createProgressSave(a.game_levels);
                    D.resizeGame(a, a.size.width, a.size.height);
                    D.closePauseMenu(a, a.pause)
                });
                d(b, fe.Left, "Snap This Level", function() {
                    Oe.snapEveything(a);
                    D.closePauseMenu(a, a.pause)
                });
                d(b, fe.Left, "Finish Next Pack",
                    function() {
                        Oe.setNextLevelPackAsCompleted(a);
                        D.closePauseMenu(a, a.pause)
                    });
                d(b, fe.Left, "Finish Next Timeline", function() {
                    Oe.setNextTimelineAsCompleted(a);
                    D.closePauseMenu(a, a.pause)
                });
                d(b, fe.Left, "Unlock All Main Levels", function() {
                    for (var b = 0, c = a.progress_save.main_timelines; b < c.length;) {
                        var d = c[b];
                        ++b;
                        var k = 0;
                        for (d = d.packs; k < d.length;) {
                            var m = d[k];
                            ++k;
                            m.ad_was_shown = !0;
                            m.unlocked = !0;
                            var r = 0;
                            for (m = m.levels; r < m.length;) {
                                var g = m[r];
                                ++r;
                                g.unlocked = !0
                            }
                        }
                    }
                    D.resizeGame(a, a.size.width, a.size.height);
                    D.closePauseMenu(a,
                        a.pause)
                });
                d(b, fe.Left, "Finish 3 Main Timelines", function() {
                    a.progress_save.unlocked_weekly = !0;
                    a.progress_save.unlocked_weekly_shown = !1;
                    for (var b = 0; 3 > b;) {
                        var c = b++,
                            d = a.progress_save.main_timelines[c];
                        d.completed = !0;
                        d.completed_shown = !0;
                        c = 0;
                        for (d = d.packs; c < d.length;) {
                            var k = d[c];
                            ++c;
                            k.ad_was_shown = !0;
                            k.unlocked = !0;
                            k.completed = !0;
                            k.completed_shown = !0;
                            var m = 0;
                            for (k = k.levels; m < k.length;) {
                                var r = k[m];
                                ++m;
                                r.unlocked = !0;
                                r.completed = !0
                            }
                        }
                    }
                    D.resizeGame(a, a.size.width, a.size.height);
                    D.closePauseMenu(a, a.pause)
                });
                d(b, fe.Left, "Finish All Main Timelines", function() {
                    a.progress_save.unlocked_weekly = !0;
                    a.progress_save.unlocked_weekly_shown = !0;
                    a.progress_save.unlocked_weekly_history = !0;
                    a.progress_save.unlocked_weekly_history_shown = !1;
                    for (var b = 0, c = a.progress_save.main_timelines; b < c.length;) {
                        var d = c[b];
                        ++b;
                        d.completed = !0;
                        d.completed_shown = !0;
                        var k = 0;
                        for (d = d.packs; k < d.length;) {
                            var m = d[k];
                            ++k;
                            m.ad_was_shown = !0;
                            m.unlocked = !0;
                            m.completed = !0;
                            m.completed_shown = !0;
                            var r = 0;
                            for (m = m.levels; r < m.length;) {
                                var g = m[r];
                                ++r;
                                g.unlocked = !0;
                                g.completed = !0
                            }
                        }
                    }
                    D.resizeGame(a, a.size.width, a.size.height);
                    D.closePauseMenu(a, a.pause)
                });
                d(b, fe.Left, "Finish All Weekly Timelines", function() {
                    a.progress_save.unlocked_weekly = !0;
                    a.progress_save.unlocked_weekly_shown = !0;
                    for (var b = 0, c = a.progress_save.weekly_timelines; b < c.length;) {
                        var d = c[b];
                        ++b;
                        d.completed = !0;
                        d.completed_shown = !0;
                        var k = 0;
                        for (d = d.packs; k < d.length;) {
                            var m = d[k];
                            ++k;
                            m.ad_was_shown = !0;
                            m.unlocked = !0;
                            m.completed = !0;
                            m.completed_shown = !0;
                            var r = 0;
                            for (m = m.levels; r < m.length;) {
                                var g = m[r];
                                ++r;
                                g.unlocked = !0;
                                g.completed = !0
                            }
                        }
                    }
                    D.resizeGame(a, a.size.width, a.size.height);
                    D.closePauseMenu(a, a.pause)
                });
                d(b, fe.Left, "Buy Game", function() {
                    a.progress_save.game_is_bought = !0;
                    D.resizeGame(a, a.size.width, a.size.height);
                    D.closePauseMenu(a, a.pause)
                });
                d(b, fe.Right, "Show Trace Log", function() {
                    if (null != rb.trace_snapshots) {
                        var b = a.size.width - 100,
                            c = v.createDebugWindow("Trace Log", b, !0, cc.DESTROY, a.size.width, a.size.height - 100, !1),
                            d = rb.trace_snapshots.slice();
                        b = Math.round(b / 5.6);
                        for (var k = 0; k < d.length;) {
                            var m =
                                d[k];
                            ++k;
                            m.length > b ? (v.addText(c, m.substring(0, b) + " ->", !1, bc.LEFT), v.addText(c, "  -> " + m.substring(b), !1, bc.LEFT)) : v.addText(c, m, !1, bc.LEFT)
                        }
                        v.resizeAndDraw(c);
                        v.addToContainer(a.debug_menu_container, c, a.container.get_x() + 10, a.container.get_y() + 10)
                    }
                });
                d(b, fe.Right, "Draw Red Borders", function() {
                    for (var b = Oe.getAllBitmapDatas(a.container), c = 0; c < b.length;) {
                        var d = b[c];
                        ++c;
                        Ea.drawBorderOverBitmapData(d, -65536)
                    }
                });
                return b
            };
            Oe.addAndResizePauseDebug = function(a, b, c, d) {
                var e = Nc.getWellFormattedDate(new Date(a.config.build_time));
                a = a.size.width + "x" + a.size.height;
                var f = "TM:" + Math.round(fq.get_totalMemory() / 1024 / 1024 * 10) / 10 + "MB";
                c.build_text.field.set_text("Build: release-html5 " + e + ", " + a + ", " + f + ", PM:0MB");
                e = d.height / gc.default_size.height;
                d.height > d.width && (e = d.width / gc.default_size.height * .7);
                for (var h = f = a = 0, k = c.all_objects.length; h < k;) {
                    var m = h++;
                    m = c.all_objects[m];
                    m.format.size = Math.round(m.original_font_size * e);
                    m.field.setTextFormat(m.format);
                    m.field.set_width(m.field.get_textWidth() + Math.round(.5 * m.format.size));
                    m.field.set_height(m.field.get_textHeight() +
                        Math.round(.3 * m.format.size));
                    m.align == fe.Left || d.width < d.height ? (m.field.set_x(10 * e), d.height > d.width ? m.field.set_y(120 * e + 1.8 * m.format.size * a) : m.field.set_y(75 * e + 1.8 * m.format.size * a), ++a) : (m.field.set_x(d.width - 10 * e - m.field.get_width()), m.field.set_y(120 * e + 1.8 * m.format.size * f), ++f)
                }
                b.contains(c.container) || b.addChild(c.container)
            };
            Oe.createHTML5Debug = function(a) {};
            Oe.createLevelControl = function(a) {
                var b = a.debug,
                    c = a.level,
                    d = v.createDebugWindow("Level", 202, !0, cc.DESTROY);
                v.addEdit(d, b, "debug_draw").after_apply =
                    function(a) {
                        c.world.debug.clear()
                    };
                v.addButton(d, "move parts to final place", function() {
                    re.setFinalPositionForAllParts(a)
                });
                v.addButton(d, "snap everything", function() {
                    Oe.snapEveything(a)
                });
                v.addButton(d, "reset level", function() {
                    ja.resetLevel(a)
                });
                d.callbacks.after_apply = function(a) {
                    w.trace("apply constraints", {
                        fileName: "GameDebugDo.hx",
                        lineNumber: 1967,
                        className: "bikas.game.GameDebugDo",
                        methodName: "createLevelControl"
                    })
                };
                v.resizeAndDraw(d);
                return d
            };
            Oe.getAllBitmapDatas = function(a, b) {
                null == b && (b = []);
                if (E.is(a, gb)) {
                    a = aa.__cast(a, gb);
                    for (var c = 0, d = a.get_numChildren(); c < d;) {
                        var e = c++;
                        Oe.getAllBitmapDatas(a.getChildAt(e), b)
                    }
                } else E.is(a, If) && (a = aa.__cast(a, If), null != a.get_bitmapData() && -1 == b.indexOf(a.get_bitmapData()) && b.push(a.get_bitmapData()));
                return b
            };
            Oe.getScreenSize = function(a) {
                switch (Q.enumIndex(a)) {
                    case 0:
                        return new rc(360, 640);
                    case 1:
                        return new rc(360, 480);
                    case 2:
                        return new rc(360, 360);
                    case 3:
                        return new rc(480, 360);
                    case 4:
                        return new rc(640, 360);
                    case 5:
                        return new rc(960, 540);
                    case 6:
                        return new rc(720,
                            360);
                    case 7:
                        return new rc(1080, 360);
                    case 8:
                        return new rc(640, 640);
                    case 9:
                        return new rc(800, 600);
                    case 10:
                        return new rc(1280, 720);
                    case 11:
                        return new rc(1280, 640);
                    case 12:
                        return new rc(1440, 480);
                    case 13:
                        return new rc(2560, 1440);
                    case 14:
                        return new rc(1680, 1050);
                    case 15:
                        return new rc(1280, 800);
                    case 16:
                        return new rc(1920, 1200);
                    case 17:
                        return new rc(1920, 1080);
                    case 18:
                        return new rc(640, 360);
                    case 19:
                        return new rc(1280, 720);
                    case 20:
                        return new rc(1334, 750);
                    case 21:
                        return new rc(1920, 886);
                    case 22:
                        return new rc(1920,
                            1080);
                    case 23:
                        return new rc(1200, 900);
                    case 24:
                        return new rc(1600, 1200)
                }
            };
            Oe.snapEveything = function(a) {
                if (null == a.level) w.trace("warning: game.level == null", {
                    fileName: "GameDebugDo.hx",
                    lineNumber: 2057,
                    className: "bikas.game.GameDebugDo",
                    methodName: "snapEveything"
                });
                else
                    for (var b = 0, c = a.level.parts; b < c.length;) {
                        var d = c[b];
                        ++b;
                        d.is_static_part || d.snapped_in_final_place || ja.snapSinglePartToFinal(d, a.sounds.part_snap)
                    }
            };
            Oe.setNextLevelPackAsCompleted = function(a) {
                for (var b = !1, c = 0, d = a.progress_save.main_timelines; c <
                    d.length;) {
                    var e = d[c];
                    ++c;
                    for (var f = 0, h = e.packs; f < h.length;) {
                        var k = h[f];
                        ++f;
                        if (!k.completed) {
                            k.unlocked = !0;
                            k.completed = !0;
                            b = 0;
                            for (f = k.levels; b < f.length;) h = f[b], ++b, h.unlocked = !0, h.completed = !0;
                            D.setProgressPackAsCompleted(a.progress_save, e, k);
                            w.trace("mark " + k.name + " level pack as completed", {
                                fileName: "GameDebugDo.hx",
                                lineNumber: 2093,
                                className: "bikas.game.GameDebugDo",
                                methodName: "setNextLevelPackAsCompleted"
                            });
                            b = !0;
                            break
                        }
                    }
                    if (b) break
                }
                b || w.trace("all level packs are marked as completed", {
                    fileName: "GameDebugDo.hx",
                    lineNumber: 2103,
                    className: "bikas.game.GameDebugDo",
                    methodName: "setNextLevelPackAsCompleted"
                });
                D.resizeGame(a, a.size.width, a.size.height)
            };
            Oe.setNextTimelineAsCompleted = function(a) {
                for (var b = !1, c = 0, d = a.progress_save.main_timelines; c < d.length;) {
                    var e = d[c];
                    ++c;
                    if (!e.completed) {
                        D.setProgressTimelineAsCompleted(a.progress_save, e);
                        w.trace("mark " + e.name + " timeline as completed", {
                            fileName: "GameDebugDo.hx",
                            lineNumber: 2113,
                            className: "bikas.game.GameDebugDo",
                            methodName: "setNextTimelineAsCompleted"
                        });
                        b = !0;
                        break
                    }
                }
                b ||
                    w.trace("all timelines are marked as completed", {
                        fileName: "GameDebugDo.hx",
                        lineNumber: 2119,
                        className: "bikas.game.GameDebugDo",
                        methodName: "setNextTimelineAsCompleted"
                    });
                D.resizeGame(a, a.size.width, a.size.height)
            };
            var D = function() {};
            g["bikas.game.GameDo"] = D;
            D.__name__ = ["bikas", "game", "GameDo"];
            D.createGame = function(a, b, c, d, e, f, h, k, m, r) {
                var g = xa.start(Dd.JustEnd, "createGame"),
                    l = new gc;
                l.running = !0;
                l.editor = a;
                l.engine = b;
                l.config = c;
                l.game_levels = r;
                var Mb = c.type == db.FlashDevelopment;
                l.progress_serial_data =
                    D.createProgressSaveSerialData(Mb);
                var n = D.loadProgressFromLocalSharedObject(l.progress_serial_data);
                null != n ? (l.progress_save = n, ia.getTimer(), D.createTimelinesForProgressLevel(r, l.progress_save)) : l.progress_save = D.createProgressSave(r);
                va.sounds_enabled = l.progress_save.sounds_enabled;
                va.music_enabled = l.progress_save.music_enabled;
                xa.snapshot(g, "load saves");
                var p = Oe.getScreenSize(l.config.development.startup_screen_size);
                n = p.width;
                var x = p.height;
                l.size = new rc(n, x);
                l.allow_snapping = l.config.type ==
                    db.FlashDevelopment ? l.config.development.snapping_on : !0;
                p = e.stage;
                switch (Q.enumIndex(c.type)) {
                    case 0:
                        l.size = new rc(n, x);
                        l.show_debug_menu = !0;
                        l.enable_level_init = !0;
                        break;
                    case 1:
                        l.size = new rc(p.stageWidth, p.stageHeight);
                        l.show_debug_menu = !1;
                        l.enable_level_init = !0;
                        break;
                    case 2:
                        n = Math.max(Qd.toFloat(p.get_fullScreenWidth()), Qd.toFloat(p.get_fullScreenHeight()));
                        p = Math.min(Qd.toFloat(p.get_fullScreenWidth()), Qd.toFloat(p.get_fullScreenHeight()));
                        l.size = new rc(n, p);
                        l.show_debug_menu = !1;
                        l.enable_level_init = !0;
                        break;
                    case 3:
                        l.size = new rc(n, x);
                        l.show_debug_menu = !0;
                        l.enable_level_init = !0;
                        break;
                    case 4:
                        l.size = new rc(p.stageWidth, p.stageHeight), l.show_debug_menu = !1, l.enable_level_init = !0
                }
                l.exported_images = new qt;
                l.level_graphics_type = Sb.LevelGraphicsCanvasDrawn;
                w.trace("level_graphics_type: " + E.string(l.level_graphics_type), {
                    fileName: "GameDo.hx",
                    lineNumber: 218,
                    className: "bikas.game.GameDo",
                    methodName: "createGame"
                });
                n = function(a, b) {
                    b = D.parseAndPushImagePack(l.exported_images, "assets/graphics_html5/levels/" +
                        b + "/", b, b + ".json");
                    a.levels.push(b)
                };
                if (l.level_graphics_type == Sb.LevelGraphicsUseSavedBitmaps)
                    for (p = 0, x = l.game_levels.main_timelines[0].packs; p < x.length;) {
                        var z = x[p];
                        ++p;
                        var u = 0;
                        for (z = z.levels; u < z.length;) {
                            var q = z[u];
                            ++u;
                            n(l.exported_images, q.prefab_name)
                        }
                    }
                n = Tb.getBitmapData("assets/spritesheets_html5/graphics.png");
                if (null == n) return w.trace("spritesheet png does not exist", {
                    fileName: "GameDo.hx",
                    lineNumber: 252,
                    className: "bikas.game.GameDo",
                    methodName: "createGame"
                }), null;
                p = Tb.getText("assets/spritesheets_html5/graphics.json");
                p = JSON.parse(p);
                l.exported_images.buttons = D.parseAndPushImagePack(l.exported_images, "assets/spritesheets_html5/", "buttons", "buttons.json", n, p);
                l.exported_images.cache = D.parseAndPushImagePack(l.exported_images, "assets/spritesheets_html5/", "cache", "cache.json", n, p);
                x = new yq;
                x.name = "pngs";
                x.game_graphics_scale = 2;
                x.game_size_width = 1280;
                x.game_size_height = 720;
                x.images = [];
                l.exported_images.pngs = x;
                l.exported_images.all_packs.push(x);
                x = D.parseSeparateImage("more_shape_fold_button", new W(0, 0), 2, n, p);
                u = D.parseSeparateImage("more_shape_fold_button_pressed",
                    new W(0, 0), 2, n, p);
                z = D.parseSeparateImage("credits_button", new W(0, 0), 2, n, p);
                q = D.parseSeparateImage("credits_button_pressed", new W(0, 0), 2, n, p);
                var L = D.parseSeparateImage("continue_button", new W(0, 0), 2, n, p),
                    A = D.parseSeparateImage("continue_button_pressed", new W(0, 0), 2, n, p),
                    Ka = D.parseSeparateImage("watch_ad_to_unlock", new W(0, 0), 2, n, p),
                    v = D.parseSeparateImage("watch_ad_to_unlock_downed", new W(0, 0), 2, n, p);
                l.exported_images.buttons.images.push(x);
                l.exported_images.buttons.images.push(u);
                l.exported_images.buttons.images.push(z);
                l.exported_images.buttons.images.push(q);
                l.exported_images.buttons.images.push(L);
                l.exported_images.buttons.images.push(A);
                l.exported_images.buttons.images.push(Ka);
                l.exported_images.buttons.images.push(v);
                x = D.parseSeparateImage("completed_text", new W(0, 0), 2, n, p);
                l.exported_images.cache.images.push(x);
                x = D.parseSeparateImage("hourglass", new W(0, 0), 2, n, p);
                l.exported_images.pngs.images.push(x);
                n = D.parseSeparateImage("pack_new", new W(0, 0), 2, n, p);
                l.exported_images.pngs.images.push(n);
                n = 0;
                for (p = l.exported_images.all_packs; n <
                    p.length;)
                    for (u = p[n], ++n, x = 0, u = u.images; x < u.length;) z = u[x], ++x, l.exported_images.all_image_map.exists(z.name) ? w.trace("warning: image already exists: " + z.name, {
                        fileName: "GameDo.hx",
                        lineNumber: 306,
                        className: "bikas.game.GameDo",
                        methodName: "createGame"
                    }) : l.exported_images.all_image_map.set(z.name, z);
                l.container = e;
                l.debug_menu_container = f;
                l.entity_container = new S;
                l.menu_container = new S;
                e.addChild(l.entity_container);
                e.addChild(l.menu_container);
                xa.snapshot(g, "create main containers");
                l.sounds.music_menu =
                    va.create(c.html5_device, Xa.music_menu, rd.PlayFirst, !0, 0, !0);
                l.sounds.music_gameplay = va.create(c.html5_device, Xa.music_gameplay, rd.PlayFirst, !0, 0, !0);
                va.setMute(l.sounds.music_menu, !va.music_enabled);
                va.setMute(l.sounds.music_gameplay, !va.music_enabled);
                l.sounds.click = va.create(c.html5_device, Xa.sound_click, rd.PlayLast);
                l.sounds.level_finish = va.create(c.html5_device, Xa.sound_level_finish, rd.PlayLast);
                l.sounds.finish_snap = va.create(c.html5_device, Xa.sound_finish_snap, rd.PlayLast);
                l.sounds.part_rotate =
                    va.create(c.html5_device, Xa.sound_rotate, rd.PlayFirst);
                l.sounds.part_snap = va.create(c.html5_device, Xa.sound_snap, rd.PlayLast);
                l.sounds.part_unsnap = va.create(c.html5_device, Xa.sound_unsnap, rd.PlayFirst);
                l.sounds.part_drag_click = va.create(c.html5_device, Xa.sound_drag_click, rd.PlayLast);
                l.sounds.part_transition = va.create(c.html5_device, Xa.sound_part_transition, rd.PlayLast);
                l.sounds.menu_transition_in = va.create(c.html5_device, Xa.sound_menu_transition_in, rd.PlayLast);
                l.sounds.menu_transition_out = va.create(c.html5_device,
                    Xa.sound_menu_transition_out, rd.PlayLast);
                l.sounds.just_completed_pack_transition = va.create(c.html5_device, Xa.sound_just_completed_pack_transition, rd.PlayLast);
                l.sounds.just_completed_pack_bang = va.create(c.html5_device, Xa.sound_just_completed_pack_bang, rd.PlayLast);
                l.sounds.star_bang = va.create(c.html5_device, Xa.sound_star_bang, rd.PlayLast);
                l.sounds.level_pack_pop = va.create(c.html5_device, Xa.sound_level_pack_pop, rd.AlwaysPlayOnce);
                xa.snapshot(g, "create sounds");
                l.serial_data = d;
                l.level_states_serial_data =
                    D.createLevelStateSerialData(Mb);
                d = null;
                d = Mc.decode(Tb.getText("assets/saves/level_states_base64"));
                xa.snapshot(g, "Base64.decode level states");
                d = D.unserializeLevelInitStates(l.level_states_serial_data, d);
                xa.snapshot(g, "unserializeLevelInitStates");
                l.level_states = null != d ? d : [];
                l.bitmap_assets = h;
                l.animation_assets = k;
                l.movie_clip_assets = m;
                h = new Wa;
                l.mouse_drag_joint = new ol(null, null, h, new Wa);
                l.mouse_drag_joint.set_active(!1);
                l.mouse_drag_joint.set_stiff(!1);
                l.mouse_state = new Mn;
                l.keyboard_state = new Rp;
                l.mouse_vec = new Wa;
                l.physics_settings = new wt;
                l.physics_settings.constraint_config = new Fh;
                l.physics_settings.space_config = new ut;
                l.physics_settings.physics_config = new vt;
                ja.applyPhysicsConfig(l);
                xa.snapshot(g, "init physics");
                h = c.type == db.HTML5Development && c.development.enable_pause_debug;
                k = (c.type == db.MobileRelease || c.type == db.FlashRelease || c.type == db.HTML5Release) && c.release.enable_pause_debug;
                if (c.type == db.FlashDevelopment && c.development.enable_pause_debug || k || h) l.pause_debug = Oe.createPauseDebug(l);
                if (l.config.type == db.FlashDevelopment || l.config.release.enable_pause_debug)
                    if (l.frame_rate = new Ii, c = (l.config.type == db.FlashRelease || l.config.type == db.MobileRelease || c.type == db.HTML5Release) && l.config.release.show_frame_rate, l.config.type == db.FlashDevelopment && l.config.development.show_frame_rate || c) c = l.frame_rate_format = new kf, c.bold = !0, c.font = "Arial", c.color = sa.pause_menu_button_border, c.size = Math.round(10 * l.size.height / gc.default_size.height), h = l.frame_rate_field = new hd, h.set_defaultTextFormat(c),
                        h.setTextFormat(c), h.set_selectable(!1), h.set_text("A:60, M:60, R:128/512"), h.set_width(h.get_textWidth() + Math.round(.5 * c.size)), l.container.addChild(h), w.trace("add fps", {
                            fileName: "GameDo.hx",
                            lineNumber: 459,
                            className: "bikas.game.GameDo",
                            methodName: "createGame"
                        });
                l.show_debug_menu && Oe.createHTML5Debug(l);
                xa.snapshot(g, "create debug stuff");
                l.mouse_event = function(a) {
                    var b = l.mouse_state,
                        c = l.container;
                    "mouseDown" == a.type ? (b.downed.x = c.get_mouseX(), b.downed.y = c.get_mouseY(), b.button_state = ya.DOWNED) :
                        "mouseUp" == a.type && (b.upped.x = c.get_mouseX(), b.upped.y = c.get_mouseY(), a = Math.abs(b.upped.x - b.downed.x), c = Math.abs(b.upped.y - b.downed.y), b.button_state = b.button_state == ya.DOWNED || b.button_state == ya.DRAGGED && 3 >= a && 3 >= c ? ya.CLICKED : ya.UPPED)
                };
                l.keyboard_event = function(a) {
                    var b = l.keyboard_state,
                        c = a.keyCode;
                    b.ctrl = a.ctrlKey;
                    b.shift = a.shiftKey;
                    l.running && ("keyDown" == a.type && l.running ? 16 != c && 17 != c && (b.pressed = c, b.holding = c, -1 == b.holding_once.indexOf(c) && (-1 == b.pressed_once.indexOf(c) ? b.pressed_once.push(c) :
                        (la.remove(b.pressed_once, c), b.holding_once.push(c)))) : "keyUp" == a.type && 16 != c && 17 != c && (b.released = c, b.holding = -1, -1 != b.pressed_once.indexOf(c) && la.remove(b.pressed_once, c), -1 != b.holding_once.indexOf(c) && la.remove(b.holding_once, c)))
                };
                l.container.addEventListener("mouseDown", l.mouse_event);
                ia.get_current().stage.addEventListener("mouseUp", l.mouse_event);
                ia.get_current().stage.addEventListener("keyDown", l.keyboard_event);
                ia.get_current().stage.addEventListener("keyUp", l.keyboard_event);
                xa.snapshot(g,
                    "add events");
                D.resizeGame(l, l.size.width, l.size.height);
                xa.snapshot(g, "resize game");
                if (null != a) {
                    a.on_ctrl_enter_pressed = function() {
                        D.closeEditorAndOpenGame(a, b, l)
                    };
                    a.on_load_clicked = function() {
                        D.closeEditorAndOpenGame(a, b, l)
                    };
                    var y = Fa.create(a, r);
                    a.game_menu_click = function() {
                        Fa.showGameEditorMenu(a, y, l, m)
                    };
                    a.game_update = function(a) {
                        Fa.update(a, y)
                    }
                }
                xa.snapshot(g, "editor hooks");
                w.trace("size:" + E.string(l.size), {
                    fileName: "GameDo.hx",
                    lineNumber: 586,
                    className: "bikas.game.GameDo",
                    methodName: "createGame"
                });
                w.trace("dpi:" + hk.get_screenDPI(), {
                    fileName: "GameDo.hx",
                    lineNumber: 587,
                    className: "bikas.game.GameDo",
                    methodName: "createGame"
                });
                w.trace("finger_radius:" + l.finger_radius, {
                    fileName: "GameDo.hx",
                    lineNumber: 588,
                    className: "bikas.game.GameDo",
                    methodName: "createGame"
                });
                w.trace("graphics_scale:" + l.graphics_scale, {
                    fileName: "GameDo.hx",
                    lineNumber: 589,
                    className: "bikas.game.GameDo",
                    methodName: "createGame"
                });
                xa.end(g);
                return l
            };
            D.createFingerBody = function(a) {
                var b = new Ag(Pc.get_KINEMATIC());
                a = new bk(a);
                b.get_shapes().add(a);
                a = new ho(1, -32);
                b.setShapeFilters(a);
                return b
            };
            D.createAndPlaceHTML5PlayButton = function(a) {
                var b = new Bq,
                    c = 1;
                c = a.size.width < a.size.height ? a.size.width / gc.default_size.height : a.size.height / gc.default_size.height;
                b.background_source = a.cache.pause_menu_sources.button_background;
                b.downed_background_source = a.cache.pause_menu_sources.downed_button_background;
                b.foreground_source = a.cache.pause_menu_sources.play;
                b.background = cb.createBitmap(b.background_source, c);
                b.foreground = cb.createBitmap(b.foreground_source,
                    c);
                b.background.set_x(-b.background.get_width() / 2);
                b.background.set_y(-b.background.get_height() / 2);
                b.foreground.set_x(.4 * -b.foreground.get_width());
                b.foreground.set_y(-b.foreground.get_height() / 2);
                b.container = new S;
                b.container.set_x(a.size.width / 2);
                b.container.set_y(a.size.height / 2);
                b.container.addChild(b.background);
                b.container.addChild(b.foreground);
                c = b.background.get_width() / 2;
                b.button = Ia.createRadiusButtonForDisplayObject(c, b.container);
                b.stage_background = V.createBitmapUsingSource(a.current_level_background.source);
                a.container.addChild(b.stage_background);
                a.container.addChild(b.container);
                var d = null;
                d = function(c) {
                    a.html5_waiting_for_play_click && (b.background.removeEventListener("click", d), D.destroyHTML5PlayButton(a.html5_play_button), a.html5_play_button = null, a.html5_waiting_for_play_click = !1)
                };
                b.container.mouseEnabled = !0;
                b.container.addEventListener("click", d);
                return b
            };
            D.destroyHTML5PlayButton = function(a) {
                D.safeRemove(a.background);
                D.safeRemove(a.foreground);
                D.safeRemove(a.container);
                D.safeRemove(a.stage_background);
                a.background = null;
                a.foreground = null;
                a.downed_background_source = null;
                a.background_source = null;
                a.button = null;
                a.container = null;
                a.stage_background = null
            };
            D.parseAndPushImagePack = function(a, b, c, d, e, f) {
                var h = Tb.getText(b + d);
                d = null;
                null != e && null != f && (d = T.field(f, "frames"));
                h = JSON.parse(h);
                f = new yq;
                f.name = c;
                f.game_size_width = T.field(h, "game_size_width");
                f.game_size_height = T.field(h, "game_size_height");
                f.game_graphics_scale = T.field(h, "game_graphics_scale");
                c = T.field(h, "images");
                f.images = [];
                h = ia.getTimer();
                for (var k = 0; k < c.length;) {
                    var m = c[k];
                    ++k;
                    var r = m.name;
                    if (null != d) {
                        var g = T.field(d, r);
                        g = T.field(g, "frame");
                        var l = T.field(g, "x"),
                            n = T.field(g, "y"),
                            p = T.field(g, "w"),
                            x = T.field(g, "h");
                        g = new Kb(p, x);
                        l = new hb(l, n, p, x);
                        g.copyPixels(e, l, new Ta(0, 0))
                    } else g = Tb.getBitmapData(b + E.string(m.name) + ".png");
                    m = D.createImage(r, g, new W(m.center.x, m.center.y), m.original_width, m.original_height, f.game_graphics_scale);
                    f.images.push(m)
                }
                w.trace("parse time: " + (ia.getTimer() - h), {
                    fileName: "GameDo.hx",
                    lineNumber: 746,
                    className: "bikas.game.GameDo",
                    methodName: "parseAndPushImagePack"
                });
                a.all_packs.push(f);
                return f
            };
            D.parseSeparateImage = function(a, b, c, d, e) {
                e = T.field(e, "frames");
                e = T.field(e, a);
                var f = T.field(e, "frame");
                e = T.field(f, "x");
                var h = T.field(f, "y"),
                    k = T.field(f, "w"),
                    m = T.field(f, "h");
                f = new Kb(k, m);
                e = new hb(e, h, k, m);
                f.copyPixels(d, e, new Ta(0, 0));
                return D.createImage(a, f, b, f.width, f.height, c)
            };
            D.createImage = function(a, b, c, d, e, f) {
                var h = new pt;
                h.name = a;
                h.source = new Me(vg.BitmapDataSourceImported);
                h.source.bitmap_data = b;
                h.source.center_point = c;
                h.source.original_width = d;
                h.source.original_height = e;
                h.source.scale = f;
                return h
            };
            D.findExportedLevelImagePack = function(a, b) {
                b = 0;
                for (var c = a.exported_images.levels; b < c.length;) {
                    var d = c[b];
                    ++b;
                    if (d.name == a.current_level.prefab_name) return d
                }
                return null
            };
            D.findCurrentExportedLevelImage = function(a, b) {
                var c = 0;
                for (a = a.images; c < a.length;) {
                    var d = a[c];
                    ++c;
                    if (d.name == b) return d
                }
                return null
            };
            D.findCacheImage = function(a, b) {
                var c = 0;
                for (a = a.cache.images; c < a.length;) {
                    var d = a[c];
                    ++c;
                    if (d.name == b) return d
                }
                return null
            };
            D.findLevelPackIcon = function(a, b, c) {
                return D.findCacheImage(a, c ? "main_menu_" + b + "_color" : "main_menu_" + b + "_grey")
            };
            D.findButton = function(a, b) {
                var c = 0;
                for (a = a.buttons.images; c < a.length;) {
                    var d = a[c];
                    ++c;
                    if (d.name == b) return d
                }
                return null
            };
            D.createProgressSaveSerialData = function(a) {
                null == a && (a = !0);
                var b = O.pushBool,
                    c = O.pushInt,
                    d = O.pushString,
                    e = O.pushArray,
                    f = O.createSerialData(),
                    h = O.pushClass(f, gk, function() {
                        return new gk
                    });
                c(h, "version");
                b(h, "sounds_enabled");
                b(h, "music_enabled");
                b(h, "unlocked_weekly");
                b(h, "unlocked_weekly_shown");
                b(h, "unlocked_weekly_history");
                b(h, "unlocked_weekly_history_shown");
                c(h, "current_weekly_history_page_index");
                d(h, "last_level_completed_or_skipped");
                b(h, "game_is_bought");
                b(h, "is_ad_consent_taken");
                b(h, "personalized_ads");
                b(h, "final_animation_played");
                e(h, "main_timelines", [12]);
                e(h, "weekly_timelines", [12]);
                h = O.pushClass(f, fo, function() {
                    return new fo
                });
                d(h, "name");
                b(h, "completed");
                b(h, "completed_shown");
                e(h, "packs", [12]);
                h = O.pushClass(f, eo, function() {
                    return new eo
                });
                d(h,
                    "name");
                b(h, "unlocked");
                b(h, "ad_was_shown");
                b(h, "completed");
                b(h, "completed_shown");
                e(h, "levels", [12]);
                h = O.pushClass(f, co, function() {
                    return new co
                });
                d(h, "name");
                b(h, "unlocked");
                b(h, "skipped");
                b(h, "completed");
                a && O.validateSerialData(f);
                O.createTypeTableForSerialData(f);
                return f
            };
            D.createProgressSave = function(a) {
                var b = new gk;
                b.main_timelines = [];
                b.weekly_timelines = [];
                b.unlocked_weekly = !1;
                b.unlocked_weekly_shown = !1;
                b.unlocked_weekly_history = !1;
                b.unlocked_weekly_history_shown = !1;
                D.createTimelinesForProgressLevel(a,
                    b);
                return b
            };
            D.createTimelinesForProgressLevel = function(a, b) {
                for (var c = 0, d = a.all_timelines; c < d.length;) {
                    var e = d[c];
                    ++c;
                    var f = !1; - 1 != a.weekly_timelines.indexOf(e) && (f = !0);
                    var h = null;
                    if (f)
                        for (var k = 0, m = b.weekly_timelines; k < m.length;) {
                            var r = m[k];
                            ++k;
                            if (r.name == e.name) {
                                h = r;
                                break
                            }
                        } else
                            for (k = 0, m = b.main_timelines; k < m.length;)
                                if (r = m[k], ++k, r.name == e.name) {
                                    h = r;
                                    break
                                } null == h && (h = new fo, h.name = e.name, h.packs = [], h.completed = !1, h.completed_shown = !1, f ? b.weekly_timelines.push(h) : b.main_timelines.push(h));
                    k = 0;
                    for (m =
                        e.packs.length; k < m;) {
                        var g = k++;
                        r = e.packs[g];
                        for (var l = null, n = 0, p = h.packs; n < p.length;) {
                            var x = p[n];
                            ++n;
                            if (x.name == r.name) {
                                l = x;
                                break
                            }
                        }
                        null == l && (l = new eo, l.name = r.name, l.ad_was_shown = !1, l.completed = !1, h.packs.push(l));
                        f ? l.unlocked = !0 : 0 == g && (l.unlocked = !0);
                        g = 0;
                        for (n = r.levels.length; g < n;) {
                            p = g++;
                            x = r.levels[p];
                            for (var w = null, z = 0, u = l.levels; z < u.length;) {
                                var q = u[z];
                                ++z;
                                if (q.name == x.prefab_name) {
                                    w = q;
                                    break
                                }
                            }
                            null == w && (w = new co, w.name = x.prefab_name, w.completed = !1, l.levels.push(w));
                            0 == p && (w.unlocked = !0)
                        }
                    }
                }
            };
            D.saveProgressLevel =
                function(a, b, c, d) {
                    var e = c.parent_pack;
                    if (null == e) w.trace("warning: level " + c.prefab_name + " has no parent pack, skipping the save", {
                        fileName: "GameDo.hx",
                        lineNumber: 1077,
                        className: "bikas.game.GameDo",
                        methodName: "saveProgressLevel"
                    });
                    else {
                        var f = c.parent_pack.levels.indexOf(c),
                            h = c.parent_pack.parent_timeline.packs.indexOf(c.parent_pack),
                            k = e.parent_timeline.name,
                            m = e.name,
                            r = c.prefab_name,
                            g = Ia.findProgressSaveTimeline(b, k);
                        null == g ? w.trace("warning: timeline " + g.name + " is not added to progress save", {
                            fileName: "GameDo.hx",
                            lineNumber: 1090,
                            className: "bikas.game.GameDo",
                            methodName: "saveProgressLevel"
                        }) : (m = Ia.findProgressSavePack(g, m), null == m ? w.trace("warning: pack " + e.name + " is not added to progress save", {
                            fileName: "GameDo.hx",
                            lineNumber: 1097,
                            className: "bikas.game.GameDo",
                            methodName: "saveProgressLevel"
                        }) : (e = Ia.findProgressSaveLevel(m, r), null == e ? w.trace("warning: level " + c.prefab_name + " is not added to progress save", {
                            fileName: "GameDo.hx",
                            lineNumber: 1104,
                            className: "bikas.game.GameDo",
                            methodName: "saveProgressLevel"
                        }) : (d ==
                            Hh.LevelComplete ? (e.completed || (c = 10 * h + (f + 1), k = "history" == k ? c + "" : "animals" == k ? "animals_" + c : "household" == k ? "household_" + c : c + "", Qg.trackLevelFinish(k), w.trace("track level finish: " + k, {
                                fileName: "GameDo.hx",
                                lineNumber: 1130,
                                className: "bikas.game.GameDo",
                                methodName: "saveProgressLevel"
                            })), e.completed = !0) : d == Hh.LevelSkip && (e.skipped = !0), e.completed && (e.skipped = !1), e.unlocked = !0, k = m.levels.indexOf(e) + 1, k < m.levels.length && (m.levels[k].unlocked = !0), m.levels[m.levels.length - 1] == e && D.setProgressPackAsCompleted(b,
                                g, m), D.saveAllProgressToFile(a, b))))
                    }
                };
            D.setProgressPackAsCompleted = function(a, b, c) {
                c.completed = !0;
                c = b.packs.indexOf(c) + 1;
                c < b.packs.length ? b.packs[c].unlocked = !0 : D.setProgressTimelineAsCompleted(a, b)
            };
            D.setProgressTimelineAsCompleted = function(a, b) {
                b.completed = !0;
                if (-1 == a.weekly_timelines.indexOf(b)) {
                    for (var c = b = 0, d = a.main_timelines; c < d.length;) {
                        var e = d[c];
                        ++c;
                        e.completed && ++b
                    }
                    3 <= b && (a.unlocked_weekly = !0);
                    6 <= b && (a.unlocked_weekly_history = !0)
                }
            };
            D.saveAllProgressToFile = function(a, b) {
                null == a ? w.trace("warning: progress_serial_data == null", {
                    fileName: "GameDo.hx",
                    lineNumber: 1206,
                    className: "bikas.game.GameDo",
                    methodName: "saveAllProgressToFile"
                }) : null == b ? w.trace("warning: progress == null", {
                    fileName: "GameDo.hx",
                    lineNumber: 1210,
                    className: "bikas.game.GameDo",
                    methodName: "saveAllProgressToFile"
                }) : D.saveProgressToLocalSharedObject(a, b)
            };
            D.loadProgressFromLocalSharedObject = function(a) {
                var b = D.loadFromStorage();
                if ("" == b) {
                    b = me.getLocal(gc.shared_object_name);
                    if (null == b) return w.trace("warning: shared_object == null", {
                        fileName: "GameDo.hx",
                        lineNumber: 1229,
                        className: "bikas.game.GameDo",
                        methodName: "loadProgressFromLocalSharedObject"
                    }), null;
                    if (null == b.data) return w.trace("warning: shared_object.data == null", {
                        fileName: "GameDo.hx",
                        lineNumber: 1233,
                        className: "bikas.game.GameDo",
                        methodName: "loadProgressFromLocalSharedObject"
                    }), null;
                    if (null == b.data.save) return w.trace("shared_object.data.save == null (not saved yet?)", {
                        fileName: "GameDo.hx",
                        lineNumber: 1237,
                        className: "bikas.game.GameDo",
                        methodName: "loadProgressFromLocalSharedObject"
                    }), null;
                    if ("string" != typeof b.data.save) return w.trace("warning: shared_object.data.save is not string", {
                        fileName: "GameDo.hx",
                        lineNumber: 1241,
                        className: "bikas.game.GameDo",
                        methodName: "loadProgressFromLocalSharedObject"
                    }), null;
                    b = b.data.save
                }
                b = Mc.decode(b);
                if (null == b) return w.trace("warning: compressed_bytes == null", {
                    fileName: "GameDo.hx",
                    lineNumber: 1251,
                    className: "bikas.game.GameDo",
                    methodName: "loadProgressFromLocalSharedObject"
                }), null;
                a = O.unserialize(a, b);
                if (null == a) return w.trace("warning: unserialized_top_value == null", {
                        fileName: "GameDo.hx",
                        lineNumber: 1269,
                        className: "bikas.game.GameDo",
                        methodName: "loadProgressFromLocalSharedObject"
                    }),
                    null;
                if (!E.is(a, gk)) return w.trace("warning: unserialized_top_value type is not ProgressSave", {
                    fileName: "GameDo.hx",
                    lineNumber: 1273,
                    className: "bikas.game.GameDo",
                    methodName: "loadProgressFromLocalSharedObject"
                }), null;
                a = aa.__cast(a, gk);
                if (null == a) return w.trace("warning: progress_save == null", {
                    fileName: "GameDo.hx",
                    lineNumber: 1278,
                    className: "bikas.game.GameDo",
                    methodName: "loadProgressFromLocalSharedObject"
                }), null;
                w.trace("loaded shared object progress_save, version: " + a.version, {
                    fileName: "GameDo.hx",
                    lineNumber: 1281,
                    className: "bikas.game.GameDo",
                    methodName: "loadProgressFromLocalSharedObject"
                });
                return a
            };
            D.saveProgressToLocalSharedObject = function(a, b) {
                if (null == a) w.trace("warning: progress_serial_data == null", {
                    fileName: "GameDo.hx",
                    lineNumber: 1287,
                    className: "bikas.game.GameDo",
                    methodName: "saveProgressToLocalSharedObject"
                });
                else if (null == b) w.trace("warning: progress == null", {
                    fileName: "GameDo.hx",
                    lineNumber: 1291,
                    className: "bikas.game.GameDo",
                    methodName: "saveProgressToLocalSharedObject"
                });
                else {
                    var c =
                        me.getLocal(gc.shared_object_name);
                    null == c ? w.trace("warning: shared_object == null", {
                        fileName: "GameDo.hx",
                        lineNumber: 1296,
                        className: "bikas.game.GameDo",
                        methodName: "saveProgressToLocalSharedObject"
                    }) : null == c.data ? w.trace("warning: shared_object.data == null", {
                        fileName: "GameDo.hx",
                        lineNumber: 1300,
                        className: "bikas.game.GameDo",
                        methodName: "saveProgressToLocalSharedObject"
                    }) : (a = O.serialize(a, b, [12]), null == a ? w.trace("warning: bytes == null", {
                        fileName: "GameDo.hx",
                        lineNumber: 1305,
                        className: "bikas.game.GameDo",
                        methodName: "saveProgressToLocalSharedObject"
                    }) : (a = Mc.encode(a), D.saveToStorage(a), w.trace("saved progress to local shared object", {
                        fileName: "GameDo.hx",
                        lineNumber: 1329,
                        className: "bikas.game.GameDo",
                        methodName: "saveProgressToLocalSharedObject"
                    })))
                }
            };
            D.loadFromStorage = function(a) {
                null == a && (a = "shape_fold");
                var b = null;
                try {
                    b = La.get_window().localStorage.getItem(a)
                } catch (c) {
                    return vb.lastException = c, c instanceof Z && (c = c.val), w.trace(c, {
                        fileName: "GameDo.hx",
                        lineNumber: 1340,
                        className: "bikas.game.GameDo",
                        methodName: "loadFromStorage"
                    }), ""
                }
                return null == b ? "" : aa.__cast(b, String)
            };
            D.saveToStorage = function(a, b) {
                null == b && (b = "shape_fold");
                try {
                    La.get_window().localStorage.setItem(b, a)
                } catch (c) {
                    return vb.lastException = c, c instanceof Z && (c = c.val), w.trace(c, {
                        fileName: "GameDo.hx",
                        lineNumber: 1358,
                        className: "bikas.game.GameDo",
                        methodName: "saveToStorage"
                    }), !1
                }
                return !0
            };
            D.resizeGame = function(a, b, c, d) {
                null == d && (d = !1);
                var e = ia.getTimer();
                a.size.width = b;
                a.size.height = c;
                null != a.debug && (a.debug.game_width = b, a.debug.game_height =
                    c);
                b = a.size.width / gc.default_size.width;
                c = a.size.height / gc.default_size.height;
                a.graphics_scale = b < c ? b : c;
                a.dpi = a.config.type == db.MobileRelease ? H.clamp(hk.get_screenDPI(), 72, 200) : 72;
                D.refreshGameAssetCache(a, d);
                a.finger_radius = a.dpi / 5;
                5 > a.finger_radius && (a.finger_radius = 5);
                null != a.finger_body && null != a.finger_body.get_space() && a.finger_body.set_space(null);
                a.finger_body = D.createFingerBody(a.finger_radius);
                a.config.type != db.FlashRelease && a.config.type != db.MobileRelease && a.config.type != db.HTML5Release &&
                    (D.safeRemove(a.click_shape), a.click_shape = new Ke, Ea.drawCircle(a.click_shape.get_graphics(), a.finger_radius, 16711422, .5, 9546397, 1, .5), a.container.addChild(a.click_shape));
                a.current_dot_grid = D.generateDotGrid(a.size.width, a.size.height);
                null != a.main_menu && (D.closeMainMenu(a, !1), d = !1, a.html5_waiting_for_play_click && (d = !0), D.openMainMenu(a, d));
                null != a.inter_level_menu && (D.destroyInterLevelMenu(a), D.openInterLevelMenu(a, !0));
                null != a.current_level_background && (D.destroyBackground(a.current_level_background),
                    a.current_level_background = null);
                a.current_level_background = D.createAndDrawBackground(a.graphics_scale, a.size.width, a.size.height, a.current_dot_grid, [], a.config.type == db.FlashDevelopment && sa.debug_background_show_side_shades);
                null != a.level && (d = ja.getCurrentLevelStateSnapshot(a), ja.destroyLevel(a), a.level = null, null == a.main_menu && ja.startLevel(a, Ha.copyEntity(a.stage_group_original, a.serial_data, !1), a.current_level.prefab_name, !0, d));
                d = pe.PauseMainMenu;
                b = !1;
                if (null != a.pause) {
                    d = a.pause.type;
                    if (a.pause.state ==
                        wc.PauseStateTransitionIn || a.pause.state == wc.PauseStateOpened) b = !0;
                    D.destroyPauseMenu(a.pause);
                    a.pause = null
                }
                a.pause = D.createPauseMenu(a.cache, a.size, a.current_dot_grid.points[0][0], a.current_dot_grid.points[0][a.current_dot_grid.points[0].length - 1]);
                a.menu_container.addChild(a.pause.pause_button.container);
                a.menu_container.addChild(a.pause.inlevel_reload.button.container);
                a.menu_container.addChild(a.pause.inlevel_reload.circle.container);
                b && D.openPauseMenu(a, a.pause, d, !0);
                D.reOpenPlayWindowInstantly(a);
                D.reOpenPromptWindowInstantly(a);
                D.reOpenSettingsWindowInstantly(a);
                a.config.type == db.FlashDevelopment && (a.container.set_x(ia.get_current().stage.stageWidth / 2 - a.size.width / 2), a.container.set_y(ia.get_current().stage.stageHeight / 2 - a.size.height / 2));
                a.html5_waiting_for_play_click && null != a.html5_play_button && (D.destroyHTML5PlayButton(a.html5_play_button), a.html5_play_button = D.createAndPlaceHTML5PlayButton(a));
                w.trace("resize(" + a.size.width + "x" + a.size.height + ") in " + (ia.getTimer() - e) + "ms", {
                    fileName: "GameDo.hx",
                    lineNumber: 1546,
                    className: "bikas.game.GameDo",
                    methodName: "resizeGame"
                })
            };
            D.generateDotGrid = function(a, b) {
                var c = new xt;
                c.circle_size = 1.5 * b / gc.default_size.height;
                var d = 10,
                    e = Math.round(a / (b / d));
                b > a && (e = 10, d = Math.round(b / (a / e)), c.circle_size = 1.5 * a / gc.default_size.height);
                for (var f = 0, h = d; f < h;) {
                    var k = f++;
                    c.points.push([]);
                    for (var m = 0, r = e; m < r;) {
                        var g = m++;
                        g = ma.linear(0, a, (g + 1) / (e + 1));
                        var l = ma.linear(0, b, (k + 1) / (d + 1));
                        c.points[c.points.length - 1].push(new W(g, l))
                    }
                }
                c.h_count = d;
                c.w_count = e;
                return c
            };
            D.createAndDrawBackground =
                function(a, b, c, d, e, f) {
                    var h = ia.getTimer(),
                        k = sa.background_dot_color,
                        m = new S;
                    var r = m.get_graphics();
                    var g = new Ya;
                    g.scale(a, a);
                    r.beginBitmapFill(Xa.paper.bitmap_data, g);
                    r.drawRect(0, 0, b, c);
                    r.endFill();
                    a = new S;
                    r = a.get_graphics();
                    r.beginFill(k, 1);
                    r.lineStyle(0, 0, 0);
                    k = 0;
                    for (g = d.points; k < g.length;) {
                        var l = g[k];
                        ++k;
                        for (var n = 0; n < l.length;) {
                            var p = l[n];
                            ++n;
                            for (var x = !1, z = 0; z < e.length;) {
                                var u = e[z];
                                ++z;
                                if (H.pointInRectangle(p, u)) {
                                    x = !0;
                                    break
                                }
                            }
                            x || r.drawCircle(p.x, p.y, d.circle_size)
                        }
                    }
                    r.endFill();
                    g = c / gc.default_size.height *
                        40;
                    d = new od;
                    d.set_width(g);
                    d.set_height(c);
                    d.set_x(d.get_width() / 2);
                    d.set_y(d.get_height() / 2);
                    d.set_rotation(180);
                    e = new od;
                    e.set_width(g);
                    e.set_height(c);
                    e.set_x(b - e.get_width() / 2);
                    e.set_y(e.get_height() / 2);
                    e.set_rotation(0);
                    r = new od;
                    r.set_width(g);
                    r.set_height(b);
                    r.set_x(r.get_height() / 2);
                    r.set_y(r.get_width() / 2);
                    r.set_rotation(-90);
                    k = new od;
                    k.set_width(g);
                    k.set_height(b);
                    k.set_x(k.get_height() / 2);
                    k.set_y(c - k.get_width() / 2);
                    k.set_rotation(90);
                    g = new S;
                    g.addChild(m);
                    g.addChild(a);
                    f && (g.addChild(e),
                        g.addChild(d), g.addChild(r), g.addChild(k));
                    f = new yt;
                    f.source = V.createAndDrawSource(g, !1, !1, 0, 0, new Ie(0, 0, b, c));
                    f.bitmap = V.createBitmapUsingSource(f.source);
                    g.removeChildren();
                    w.trace("background creation time: " + (ia.getTimer() - h), {
                        fileName: "GameDo.hx",
                        lineNumber: 1682,
                        className: "bikas.game.GameDo",
                        methodName: "createAndDrawBackground"
                    });
                    return f
                };
            D.destroyBackground = function(a) {
                null != a && (V.safeDestroyBitmapWithBitmapData(a.bitmap), a.bitmap = null, a.source = null)
            };
            D.openMainMenu = function(a, b) {
                null != a.level &&
                    null != a.level.tutorial && ja.destroyTutorial(a.level);
                if (b) var c = Pe.TransitionIn;
                else c = Pe.Normal, null != a.level && ja.destroyLevel(a), null != a.current_level_background && D.safeRemove(a.current_level_background.bitmap);
                null != a.main_menu && Lb.destroyMainMenu(a);
                for (var d = 0, e = a.game_levels.main_timelines; d < e.length;) {
                    var f = e[d];
                    ++d;
                    var h = (new Date).getTime(),
                        k = 0;
                    for (f = f.packs; k < f.length;) {
                        var m = f[k];
                        ++k;
                        null != m.html5_unlock_type && m.html5_unlock_type == Ed.TimedUnlock && null != m.html5_unlock_date && 0 >= m.html5_unlock_date.getTime() -
                            h && (m.html5_unlock_type = Ed.Included)
                    }
                }
                a.main_menu = Lb.createMainMenu(a, c);
                c == Pe.TransitionIn && Lb.setMainMenuAnimationValues(a.main_menu, a.cache.main_menu_sources, 0, 0, 0, !0);
                b && null != a.current_level_background && (null != a.current_level_background.bitmap.parent && a.current_level_background.bitmap.parent.removeChild(a.current_level_background.bitmap), a.container.addChildAt(a.current_level_background.bitmap, 0));
                a.menu_container.addChildAt(a.main_menu.container, 0);
                a.config.type == db.FlashDevelopment && (D.closeDebugMenus(a),
                    D.openDebugMenus(a))
            };
            D.closeMainMenu = function(a, b, c) {
                null == c && (c = "");
                null != a.main_menu && (b ? (a.main_menu.animation_time = 0, a.main_menu.state = Pe.TransitionOut, a.main_menu.to_level = c) : (Lb.destroyMainMenu(a), a.main_menu = null, "" != c && D.loadGameByLevelName(a, c)))
            };
            D.openWindow = function(a, b, c, d) {
                null == d && (d = !1);
                var e = null,
                    f = null;
                null != a.play_window && (e = a.play_window.open_type, f = a.play_window.pack, Y.destroyPlayWindow(a.play_window));
                a.play_window = Y.createPlayWindow(a, b, c, e, f);
                d ? (null == a.play_window.container.parent &&
                    a.menu_container.addChild(a.play_window.container), a.play_window.container.set_alpha(1), a.play_window.state = ge.Normal) : (a.play_window.state = ge.TransitionIn, a.play_window.time = 0)
            };
            D.reOpenPlayWindowInstantly = function(a) {
                if (null != a.play_window) {
                    var b = a.play_window.pack,
                        c = a.play_window.open_type,
                        d = a.play_window.previous_window_open_type,
                        e = a.play_window.previous_window_pack;
                    Y.destroyPlayWindow(a.play_window);
                    a.play_window = Y.createPlayWindow(a, c, b, d, e);
                    a.play_window.state = ge.Normal;
                    a.menu_container.addChild(a.play_window.container)
                }
            };
            D.closePlayWindow = function(a, b, c) {
                null == c && (c = "");
                null != a.prompt_window && w.trace("warning: nothing can happen to regular play window while prompt window is opened", {
                    fileName: "GameDo.hx",
                    lineNumber: 1845,
                    className: "bikas.game.GameDo",
                    methodName: "closePlayWindow"
                });
                null != a.play_window && (b == he.PlayWindowCloseInstantly ? (Y.destroyPlayWindow(a.play_window), a.play_window = null, "" != c && D.loadGameByLevelName(a, c)) : (a.play_window.state = ge.TransitionOut, a.play_window.close_type = b, a.play_window.to_level = c))
            };
            D.openPromptWindow =
                function(a, b) {
                    null != a.prompt_window && Y.destroyPlayWindow(a.prompt_window);
                    a.prompt_window = Y.createPlayWindow(a, b);
                    null == a.prompt_window.container.parent && a.menu_container.addChild(a.prompt_window.container);
                    a.prompt_window.container.set_alpha(1);
                    a.prompt_window.state = ge.Normal
                };
            D.reOpenPromptWindowInstantly = function(a) {
                if (null != a.prompt_window) {
                    var b = a.prompt_window.open_type;
                    Y.destroyPlayWindow(a.prompt_window);
                    a.prompt_window = Y.createPlayWindow(a, b);
                    a.prompt_window.state = ge.Normal;
                    a.menu_container.addChild(a.prompt_window.container)
                }
            };
            D.closePromptWindow = function(a) {
                Y.destroyPlayWindow(a.prompt_window);
                a.prompt_window = null
            };
            D.openSettingsWindow = function(a, b) {
                var c = null;
                null != a.settings_window && (c = a.settings_window.open_type, Y.destroyPlayWindow(a.settings_window));
                a.settings_window = Y.createPlayWindow(a, b, null, c);
                null == a.settings_window.container.parent && a.menu_container.addChild(a.settings_window.container);
                a.settings_window.container.set_alpha(1);
                a.settings_window.state = ge.Normal
            };
            D.reOpenSettingsWindowInstantly = function(a) {
                if (null !=
                    a.settings_window) {
                    var b = a.settings_window.open_type,
                        c = a.settings_window.previous_window_open_type;
                    Y.destroyPlayWindow(a.settings_window);
                    a.settings_window = Y.createPlayWindow(a, b, null, c);
                    a.settings_window.state = ge.Normal;
                    a.menu_container.addChild(a.settings_window.container)
                }
            };
            D.closeSettingsWindow = function(a) {
                Y.destroyPlayWindow(a.settings_window);
                a.settings_window = null
            };
            D.createPauseMenu = function(a, b, c, d) {
                var e = new Pg,
                    f = 1;
                f = b.width < b.height ? b.width / gc.default_size.height : b.height / gc.default_size.height;
                b = function(a, b, c, d, e) {
                    var f = new Cq;
                    f.background_source = a.pause_menu_sources.pause_button_background;
                    f.downed_background_source = a.pause_menu_sources.downed_pause_button_background;
                    f.container = new S;
                    f.container.set_x(c);
                    f.container.set_y(d);
                    f.background = cb.createBitmap(a.pause_menu_sources.pause_button_background, b);
                    f.foreground = cb.createBitmap(e, b);
                    f.container.addChild(f.background);
                    f.container.addChild(f.foreground);
                    f.radius = f.container.get_width() / 2;
                    f.button = Ia.createRadiusButtonForDisplayObject(f.radius,
                        f.container);
                    return f
                };
                e.pause_button = b(a, f, c.x, c.y, a.pause_menu_sources.pause);
                e.pause_close_button = b(a, f, c.x, c.y, a.pause_menu_sources.pause_close);
                e.pause_close_button.container.set_visible(!1);
                e.inlevel_reload = new Hi;
                e.inlevel_reload.button = b(a, f, d.x, d.y, a.pause_menu_sources.inlevel_reload);
                e.inlevel_reload.button.container.set_visible(!1);
                e.inlevel_reload.circle = V.createBitmapContainer(a.pause_menu_sources.inlevel_reload_circle);
                e.inlevel_reload.circle.container.set_visible(!1);
                a = a.pause_menu_sources;
                c = a.button_background;
                d = a.downed_button_background;
                e.container = new S;
                e.menu_background = V.createBitmapUsingSource(a.menu_background);
                e.menu_background.set_alpha(.85);
                e.container.addChild(e.menu_background);
                e.container.addChild(e.pause_close_button.container);
                b = function(a, b, c, d, e, f) {
                    var h = new nl;
                    h.background_source = c;
                    h.downed_background_source = d;
                    h.background = cb.createBitmap(c, b);
                    h.foreground = cb.createBitmap(e, b);
                    1 == h.background.get_scaleX() && (h.background.set_scaleX(h.background.set_scaleY(.999)), h.foreground.set_scaleX(h.foreground.set_scaleY(.999)));
                    null != f && (h.additional_foreground = cb.createBitmap(f, b), 1 == h.additional_foreground.get_scaleX() && h.additional_foreground.set_scaleX(h.additional_foreground.set_scaleY(.999)));
                    h.container = new S;
                    h.container.addChild(h.background);
                    h.container.addChild(h.foreground);
                    null != h.additional_foreground && h.container.addChild(h.additional_foreground);
                    h.button = Ia.createRadiusButtonForDisplayObject(h.container.get_width() / 2, h.container);
                    a.all_buttons.push(h);
                    a.container.addChild(h.container);
                    return h
                };
                e.music = b(e,
                    f, c, d, a.music, a.line_cross);
                e.sound = b(e, f, c, d, a.sound, a.line_cross);
                e.wrench = b(e, f, c, d, a.wrench, null);
                e.menu = b(e, f, c, d, a.menu, null);
                e.play = b(e, f, c, d, a.play, null);
                e.reload = b(e, f, c, d, a.reload, null);
                e.skip0 = b(e, f, c, d, a.skip0, null);
                e.skip0.foreground.set_alpha(.5);
                e.skip1 = b(e, f, c, d, a.skip1, null);
                e.skip2 = b(e, f, c, d, a.skip2, null);
                e.skip3 = b(e, f, c, d, a.skip3, null);
                f = 0;
                for (a = e.all_buttons; f < a.length;) c = a[f], ++f, c.container.set_visible(!1);
                return e
            };
            D.openPauseMenu = function(a, b, c, d) {
                null == d && (d = !1);
                null != a.level &&
                    null != a.mouse_drag_joint && a.mouse_drag_joint.get_active() && a.mouse_drag_joint.set_active(!1);
                b.state = wc.PauseStateTransitionIn;
                b.type = c;
                d && (b.state = wc.PauseStateOpened, b.container.set_visible(!0), b.container.set_alpha(1), null == b.container.parent && a.menu_container.addChild(b.container));
                c = 0;
                for (d = b.all_buttons; c < d.length;) {
                    var e = d[c];
                    ++c;
                    e.container.set_scaleX(1);
                    e.container.set_scaleY(1);
                    e.container.set_rotation(0);
                    e.container.set_visible(!1)
                }
                var f = a.size;
                d = f.height / gc.default_size.height;
                c = 2 * d;
                d *=
                    10;
                e = ma.getTClamped(1, 1.7777777777777777, f.width / f.height);
                c = ma.linearClamped(c, d, e);
                d = b.play.container.get_width() / 2;
                e = f.width / 2;
                var h = f.height / 2;
                f = f.width - d - c;
                var k = d + c;
                null != b.wrench && (b.wrench.container.set_x(f), b.wrench.container.set_y(k));
                null != b.wrench ? b.music.container.set_x(f - 2 * d - c / 2) : b.music.container.set_x(f);
                b.music.container.set_y(k);
                b.sound.container.set_x(b.music.container.get_x() - 2 * d - c / 2);
                b.sound.container.set_y(k);
                b.enabled_buttons = [];
                f = 0;
                for (k = b.level_icons; f < k.length;) {
                    var m = k[f];
                    ++f;
                    Y.destroyWindowLevelIcon(m)
                }
                b.level_icons = [];
                switch (Q.enumIndex(b.type)) {
                    case 0:
                        b.enabled_buttons.push(b.music);
                        b.enabled_buttons.push(b.sound);
                        null != b.wrench && b.enabled_buttons.push(b.wrench);
                        b.enabled_buttons.push(b.play);
                        b.play.container.set_x(e);
                        b.play.container.set_y(h);
                        b.pause_button.container.set_visible(!1);
                        b.pause_close_button.container.set_visible(!0);
                        break;
                    case 1:
                        b.enabled_buttons.push(b.music);
                        b.enabled_buttons.push(b.sound);
                        null != b.wrench && b.enabled_buttons.push(b.wrench);
                        b.enabled_buttons.push(b.reload);
                        b.enabled_buttons.push(b.play);
                        b.enabled_buttons.push(b.menu);
                        f = null;
                        if (null == a.current_level) w.trace("warning: game.current_level == null", {
                            fileName: "GameDo.hx",
                            lineNumber: 2141,
                            className: "bikas.game.GameDo",
                            methodName: "openPauseMenu"
                        });
                        else if (null == a.current_level.parent_pack) w.trace("warning: game.current_level.parent_pack == null", {
                            fileName: "GameDo.hx",
                            lineNumber: 2144,
                            className: "bikas.game.GameDo",
                            methodName: "openPauseMenu"
                        });
                        else {
                            var r = Ia.findProgressSaveTimeline(a.progress_save, a.current_level.parent_pack.parent_timeline.name);
                            if (null == r) w.trace("warning: progress_timeline == null", {
                                fileName: "GameDo.hx",
                                lineNumber: 2149,
                                className: "bikas.game.GameDo",
                                methodName: "openPauseMenu"
                            });
                            else {
                                k = 3;
                                m = 0;
                                for (r = r.packs; m < r.length;) {
                                    var g = r[m];
                                    ++m;
                                    var l = 0;
                                    for (g = g.levels; l < g.length;) {
                                        var n = g[l];
                                        ++l;
                                        n.skipped && --k
                                    }
                                }
                                0 > k ? w.trace("warning: available_skips: " + k + " (less than 0)", {
                                    fileName: "GameDo.hx",
                                    lineNumber: 2160,
                                    className: "bikas.game.GameDo",
                                    methodName: "openPauseMenu"
                                }) : (3 == k && (f = b.skip3), 2 == k && (f = b.skip2), 1 == k && (f = b.skip1), 0 == k && (f = b.skip0))
                            }
                        }
                        b.reload.container.set_x(e -
                            d - c / 2);
                        b.reload.container.set_y(h - d - c / 2);
                        b.play.container.set_x(e + d + c / 2);
                        b.play.container.set_y(b.reload.container.get_y());
                        b.menu.container.set_x(b.reload.container.get_x());
                        b.menu.container.set_y(h + d + c / 2);
                        null != f && (f.container.set_visible(!0), f.container.set_x(b.play.container.get_x()), f.container.set_y(b.menu.container.get_y()), b.enabled_buttons.push(f));
                        b.pause_button.container.set_visible(!1);
                        b.pause_close_button.container.set_visible(!0);
                        break;
                    case 2:
                        b.enabled_buttons.push(b.music), b.enabled_buttons.push(b.sound),
                            null != b.wrench && b.enabled_buttons.push(b.wrench), b.enabled_buttons.push(b.menu), b.enabled_buttons.push(b.play), b.menu.container.set_x(e - d - c / 2), b.menu.container.set_y(h), b.play.container.set_x(e + d + c / 2), b.play.container.set_y(h), b.pause_button.container.set_visible(!1), b.pause_close_button.container.set_visible(!0)
                }
                b.sound.additional_foreground.set_visible(!va.sounds_enabled);
                b.music.additional_foreground.set_visible(!va.music_enabled);
                c = 0;
                for (d = b.enabled_buttons; c < d.length;) e = d[c], ++c, e.button.display_object_reference.set_visible(!0);
                b.type == pe.PauseInterLevelMenu ? null != a.pause_debug && a.pause.container.contains(a.pause_debug.container) && a.pause.container.removeChild(a.pause_debug.container) : null != a.pause_debug && Oe.addAndResizePauseDebug(a, a.pause.container, a.pause_debug, a.size)
            };
            D.closePauseMenu = function(a, b, c) {
                null == c && (c = !1);
                b.pause_button.container.set_visible(!0);
                b.pause_close_button.container.set_visible(!1);
                c ? (null != b.container.parent && b.container.parent.removeChild(b.container), b.state = wc.PauseStateClosed) : b.state = wc.PauseStateTransitionOut
            };
            D.destroyPauseMenu = function(a) {
                for (var b = function(a) {
                        null != a && (a.background.set_bitmapData(null), a.foreground.set_bitmapData(null), D.safeRemove(a.background), D.safeRemove(a.foreground), null != a.additional_foreground && (a.additional_foreground.set_bitmapData(null), D.safeRemove(a.additional_foreground)), D.safeRemove(a.container), a.background = null, a.foreground = null, a.additional_foreground = null, a.container = null, a.button = null)
                    }, c = 0, d = a.all_buttons; c < d.length;) {
                    var e = d[c];
                    ++c;
                    b(e)
                }
                b = function(a) {
                    null != a &&
                        (D.safeRemove(a.container), a.background_source = null, a.downed_background_source = null, a.container = null, null != a.background && a.background.set_bitmapData(null), null != a.foreground && a.foreground.set_bitmapData(null), a.button = null)
                };
                D.safeRemove(a.container);
                D.safeRemove(a.menu_background);
                b(a.pause_button);
                b(a.pause_close_button);
                b(a.inlevel_reload.button);
                null != a.inlevel_reload.circle && (a.inlevel_reload.circle.container.removeChild(a.inlevel_reload.circle.bitmap), a.inlevel_reload.circle.bitmap.set_bitmapData(null),
                    a.inlevel_reload.circle = null)
            };
            D.createInterLevelMenu = function(a) {
                var b = Ia.getInterLevelMenuScale(a.size),
                    c = new kg;
                c.container = new S;
                c.background = V.createBitmapUsingSource(a.cache.pause_menu_sources.menu_background);
                c.background.set_alpha(.85);
                c.container.addChild(c.background);
                c.state = Cg.TransitionIn;
                if (null == a.current_level) return w.trace("warning: level pack == null", {
                    fileName: "GameDo.hx",
                    lineNumber: 2314,
                    className: "bikas.game.GameDo",
                    methodName: "createInterLevelMenu"
                }), null;
                var d = a.current_level.parent_pack,
                    e = a.size.width / 2,
                    f = a.size.height / 2,
                    h = Ia.findProgressSaveTimeline(a.progress_save, a.current_level.parent_pack.parent_timeline.name);
                if (null == h) return w.trace("warning: progress_timeline == null", {
                    fileName: "GameDo.hx",
                    lineNumber: 2328,
                    className: "bikas.game.GameDo",
                    methodName: "createInterLevelMenu"
                }), null;
                h = Ia.findProgressSavePack(h, a.current_level.parent_pack.name);
                if (null == h) return w.trace("warning: progress_pack == null", {
                        fileName: "GameDo.hx",
                        lineNumber: 2335,
                        className: "bikas.game.GameDo",
                        methodName: "createInterLevelMenu"
                    }),
                    null;
                c.all_level_icons = Y.createLevelPackIcons(a.cache.main_menu_sources.inter_level_icons, d, h, 12, Ab.inter_level_icon_radius, b, e, -1, f);
                a = 0;
                for (b = c.all_level_icons; a < b.length;) d = b[a], ++a, d.state != Vb.WindowLevelIconStateLocked && c.enabled_level_icons.push(d), d.state == Vb.WindowLevelIconStateNext && (c.next_level_icon = d), c.container.addChild(d.container);
                return c
            };
            D.openInterLevelMenu = function(a, b) {
                null == b && (b = !1);
                null != a.inter_level_menu && D.destroyInterLevelMenu(a);
                a.inter_level_menu = D.createInterLevelMenu(a);
                b && (a.inter_level_menu.state = Cg.Opened, a.menu_container.addChildAt(a.inter_level_menu.container, 0));
                null != a.level && null != a.level.tutorial && ja.destroyTutorial(a.level)
            };
            D.destroyInterLevelMenu = function(a) {
                if (null == a.inter_level_menu) w.trace("warning: game.inter_level_menu == null", {
                    fileName: "GameDo.hx",
                    lineNumber: 2386,
                    className: "bikas.game.GameDo",
                    methodName: "destroyInterLevelMenu"
                });
                else {
                    for (var b = a.inter_level_menu, c = 0, d = b.all_level_icons; c < d.length;) {
                        var e = d[c];
                        ++c;
                        Y.destroyWindowLevelIcon(e)
                    }
                    D.safeRemove(b.container);
                    b.level_pack = null;
                    b.all_level_icons = null;
                    b.enabled_level_icons = null;
                    b.container = null;
                    a.inter_level_menu = null
                }
            };
            D.closeEditorAndOpenMainMenu = function(a, b) {
                a.container.set_visible(!0);
                a.container.set_y(ia.get_current().stage.stageHeight / 2 - a.size.height / 2);
                200 < ia.get_current().stage.stageWidth - a.size.width && a.container.set_x(ia.get_current().stage.stageWidth / 2 - a.size.width / 2);
                a.running = !0;
                null != b && F.disable(b);
                D.openMainMenu(a, !0)
            };
            D.closeEditorAndStartCustomLevel = function(a, b, c) {
                a.container.set_visible(!0);
                a.container.set_y(ia.get_current().stage.stageHeight / 2 - a.size.height / 2);
                200 < ia.get_current().stage.stageWidth - a.size.width && a.container.set_x(ia.get_current().stage.stageWidth / 2 - a.size.width / 2);
                a.running = !0;
                null != b && F.disable(b);
                D.loadGameByLevelName(a, c)
            };
            D.closeEditorAndOpenGame = function(a, b, c) {
                var d = xa.start(Dd.JustEnd, "closeEditorAndOpenGame");
                null != a.library_group && Ha.performDataCachesForEngine(a.library_group);
                Ha.performDataCachesForEngine(a.stage_group);
                xa.snapshot(d, "cache time");
                var e = D.extractPrefabLevelName(a);
                if ("" == e) w.trace("can't load anything since no level is selected!", {
                    fileName: "GameDo.hx",
                    lineNumber: 2451,
                    className: "bikas.game.GameDo",
                    methodName: "closeEditorAndOpenGame"
                });
                else {
                    var f = null;
                    if (null != a.library_group) {
                        var h = J.tempAddPrefabEdits(a.current_group, a.library_group),
                            k = J.tempRemoveTempAddedPrefabEdits(h);
                        f = Ja.convertEditorToEngineEntity(a.library_group, b.engine_serial_data);
                        J.readdTempRemovedPrefabEdits(k);
                        J.removeTempAddedPrefabEdits(a.library_group, h)
                    }
                    xa.snapshot(d, "library time");
                    h = J.tempRemovePrefabEdits(a.current_group);
                    b = Ja.convertEditorToEngineEntity(a.stage_group, b.engine_serial_data);
                    J.readdTempRemovedPrefabEdits(h);
                    xa.snapshot(d, "stage time");
                    w.trace("start loading: " + e, {
                        fileName: "GameDo.hx",
                        lineNumber: 2498,
                        className: "bikas.game.GameDo",
                        methodName: "closeEditorAndOpenGame"
                    });
                    D.loadGameFromEditor(c, b, f, e) ? (F.disable(a), null != c.current_level && xa.end(d, "loaded '" + c.current_level.prefab_name + "'")) : w.trace("load failed", {
                        fileName: "GameDo.hx",
                        lineNumber: 2509,
                        className: "bikas.game.GameDo",
                        methodName: "closeEditorAndOpenGame"
                    })
                }
            };
            D.closeGameAndOpenEditor = function(a) {
                D.closeGame(a);
                F.enable(a.editor)
            };
            D.loadGameFromEditor = function(a, b, c, d) {
                null == d && (d = "");
                D.resizeGame(a, a.size.width, a.size.height);
                null != c && (a.library_group = Ha.overloadLibrary(c, a.library_group, a.bitmap_assets, a.serial_data));
                a.latest_compressed_library_bytes = null;
                a.stage_group_original = Ha.copyEntity(b, a.serial_data, !1);
                if (!ja.startLevel(a, b, d, !0)) return ja.destroyLevel(a), !1;
                D.openDebugMenus(a);
                a.container.set_visible(!0);
                200 < ia.get_current().stage.stageWidth -
                    a.size.width && a.container.set_x(ia.get_current().stage.stageWidth / 2 - a.size.width / 2);
                a.container.set_y(ia.get_current().stage.stageHeight / 2 - a.size.height / 2 + 80);
                return a.running = !0
            };
            D.loadGameByLevelName = function(a, b, c) {
                null == c && (c = !1);
                if (a.game_levels.level_map.exists(b)) {
                    var d = a.game_levels.level_map.get(b).parent_pack.parent_timeline;
                    null == d.timeline_files.compressed_game_library_bytes && (d.timeline_files.compressed_game_library_bytes = Mc.decode(d.timeline_files.compressed_game_library_base64));
                    null ==
                        d.timeline_files.compressed_game_stage_bytes && (d.timeline_files.compressed_game_stage_bytes = Mc.decode(d.timeline_files.compressed_game_stage_base64));
                    D.loadGameFromBytes(a, d.timeline_files.compressed_game_library_bytes, d.timeline_files.compressed_game_stage_bytes, b, c)
                } else w.trace("warning: level " + b + " does not exist", {
                    fileName: "GameDo.hx",
                    lineNumber: 2572,
                    className: "bikas.game.GameDo",
                    methodName: "loadGameByLevelName"
                })
            };
            D.loadGameFromBytes = function(a, b, c, d, e) {
                null == e && (e = !1);
                null == d && (d = "");
                var f =
                    ia.getTimer();
                null != a.latest_compressed_library_bytes && null == a.library_group && w.trace("warning: latest_compressed_library_bytes != null while library_group == null, this can not happen", {
                    fileName: "GameDo.hx",
                    lineNumber: 2583,
                    className: "bikas.game.GameDo",
                    methodName: "loadGameFromBytes"
                });
                if (a.latest_compressed_library_bytes != b || null == a.library_group) {
                    a.latest_compressed_library_bytes = b;
                    var h = Ja.unserializeLibraryEngine(a.serial_data, b);
                    F.traceSerialization("library", b, h.save, ia.getTimer() - f);
                    f = ia.getTimer();
                    a.library_group = Ha.overloadLibrary(h.group, a.library_group, a.bitmap_assets, a.serial_data)
                } else w.trace("re-use library", {
                    fileName: "GameDo.hx",
                    lineNumber: 2597,
                    className: "bikas.game.GameDo",
                    methodName: "loadGameFromBytes"
                });
                b = Ja.unserializeStageEngine(a.serial_data, c);
                F.traceSerialization("stage", c, b.save, ia.getTimer() - f);
                a.stage_group_original = Ha.copyEntity(b.group, a.serial_data, !1);
                c = b.group;
                return ja.startLevel(a, c, d, e) ? a.running = !0 : (ja.setSpace(a, null), Ha.destroyEntityIncludingChildren(c), a.stage_group =
                    null, ja.destroyLevel(a), !1)
            };
            D.openDebugMenus = function(a) {
                var b = a.debug,
                    c = b.game_debug_window.setup.padding;
                v.addToContainer(a.debug_menu_container, b.game_debug_window, c, c);
                null != a.level && (null != b.level_debug_window && v.close(b.level_debug_window), b.level_debug_window = Oe.createLevelControl(a), v.addToContainer(a.debug_menu_container, b.level_debug_window, 0, 0), v.align(b.level_debug_window, b.game_debug_window, 2 * c, Ib.RIGHT_UP));
                a.debug_menu_container.set_visible(!0)
            };
            D.closeDebugMenus = function(a) {
                var b =
                    a.debug;
                v.removeFromContainer(b.game_debug_window);
                a.debug_menu_container.set_visible(!1);
                null != b.level_debug_window && (v.close(b.level_debug_window), b.level_debug_window = null)
            };
            D.closeGame = function(a) {
                D.closeDebugMenus(a);
                null != a.level && ja.destroyLevel(a);
                null != a.current_level_background && (D.destroyBackground(a.current_level_background), a.current_level_background = null);
                null != a.main_menu && D.closeMainMenu(a, !1);
                null != a.library_group && Ha.destroyEntityIncludingChildren(a.library_group);
                a.container.set_visible(!1);
                a.library_group = null;
                a.running = !1
            };
            D.gotoNextLevelOrMainMenu = function(a) {
                if (null == a.current_level) return w.trace("warning: game.current_level == null", {
                    fileName: "GameDo.hx",
                    lineNumber: 2681,
                    className: "bikas.game.GameDo",
                    methodName: "gotoNextLevelOrMainMenu"
                }), !1;
                if (null == a.current_level.parent_pack) return w.trace("warning: game.current_level.parent_pack == null", {
                    fileName: "GameDo.hx",
                    lineNumber: 2685,
                    className: "bikas.game.GameDo",
                    methodName: "gotoNextLevelOrMainMenu"
                }), !1;
                var b = a.current_level.parent_pack,
                    c = b.levels.indexOf(a.current_level);
                if (c == b.levels.length - 1) return D.openMainMenu(a, !0), !0;
                b = b.levels[c + 1];
                return ja.startLevel(a, Ha.copyEntity(a.stage_group_original, a.serial_data, !1), b.prefab_name, !1)
            };
            D.restartLevel = function(a) {
                return null == a.current_level ? (w.trace("warning: game.current_level == null", {
                    fileName: "GameDo.hx",
                    lineNumber: 2710,
                    className: "bikas.game.GameDo",
                    methodName: "restartLevel"
                }), !1) : ja.startLevel(a, Ha.copyEntity(a.stage_group_original, a.serial_data, !1), a.current_level.prefab_name,
                    !1)
            };
            D.createLevelStateSerialData = function(a) {
                null == a && (a = !0);
                var b = O.pushDouble,
                    c = O.pushString,
                    d = O.pushArray,
                    e = O.createSerialData(),
                    f = O.pushClass(e, bo, null);
                c(f, "prefab_name");
                d(f, "body_states", [12]);
                f = O.pushClass(e, Gi, null);
                c(f, "guid");
                b(f, "x");
                b(f, "y");
                b(f, "rotation");
                a && O.validateSerialData(e);
                O.createTypeTableForSerialData(e);
                return e
            };
            D.saveInitStatesAndSaveToFile = function(a) {
                ja.savePartInitStates(a.level);
                ja.savePartInitStatesToLevel(a);
                var b = D.serializeLevelInitStates(a.level_states_serial_data,
                    a.level_states);
                b = Ha.createSaveRequest(a.engine.nodejs_server_save_path, "level_states.befs", Mc.encode(b), "String");
                D.saveToFiles(a, [b])
            };
            D.saveToFiles = function(a, b) {
                a.save_message.finished = !1;
                var c = new kf;
                c.align = 0;
                c.size = 24;
                c.color = 15066597;
                a.save_message.text_field.set_defaultTextFormat(c);
                a.save_message.text_field.set_background(!0);
                a.save_message.text_field.set_backgroundColor(4079166);
                a.save_message.text_field.set_antiAliasType(0);
                a.save_message.text_field.set_selectable(!1);
                a.save_message.text_field.set_text("Saving...");
                a.save_message.text_field.set_width(250);
                a.save_message.text_field.set_height(30);
                a.save_message.text_field.set_x(a.size.width / 2 - a.save_message.text_field.get_width() / 2);
                a.save_message.text_field.set_y(a.size.height / 2 - a.save_message.text_field.get_height() / 2);
                a.menu_container.contains(a.save_message.text_field) || a.menu_container.addChild(a.save_message.text_field);
                var d = "";
                c = 0;
                for (var e = b.length; c < e;) {
                    var f = c++;
                    d = f == b.length - 1 ? d + b[f].file_name : d + b[f].file_name + ", "
                }
                var h = !1,
                    k = !1,
                    m = 0,
                    r = null;
                r = Ha.createURLLoader(1,
                    function(a) {
                        b.shift();
                        0 < b.length ? (m += 1, r.load(b[0].url_request)) : h = !0
                    });
                w.trace("sent to nodejs: " + d, {
                    fileName: "GameDo.hx",
                    lineNumber: 2821,
                    className: "bikas.game.GameDo",
                    methodName: "saveToFiles"
                });
                m += 1;
                r.load(b[0].url_request);
                r.addEventListener("complete", function(b) {
                    --m;
                    0 == m && h && !k && (a.save_message.text_field.set_text("Saved: " + d), a.save_message.text_field.set_width(a.save_message.text_field.get_textWidth() + 10), a.save_message.finished = !0, a.save_message.current_time = ml.display_time)
                });
                r.addEventListener("ioError",
                    function(b) {
                        a.save_message.text_field.set_text("Error while saving: " + b.text);
                        a.save_message.text_field.set_width(a.save_message.text_field.get_textWidth() + 10);
                        a.save_message.finished = !0;
                        a.save_message.current_time = ml.display_time;
                        k = !0
                    })
            };
            D.serializeLevelInitStates = function(a, b) {
                a = O.serialize(a, b, [11, 12]);
                return cq.run(a, 9)
            };
            D.unserializeLevelInitStates = function(a, b) {
                b = gl.run(b);
                a = O.unserialize(a, b);
                return null == a ? (w.trace("warning: couldn't unserialize level states", {
                    fileName: "GameDo.hx",
                    lineNumber: 2860,
                    className: "bikas.game.GameDo",
                    methodName: "unserializeLevelInitStates"
                }), null) : a
            };
            D.createPNGImageSaveRequest = function(a, b, c) {
                w.trace("warning: not supported", {
                    fileName: "GameDo.hx",
                    lineNumber: 2888,
                    className: "bikas.game.GameDo",
                    methodName: "createPNGImageSaveRequest"
                });
                return null
            };
            D.createJsonSaveRequest = function(a, b, c) {
                return Ha.createSaveRequest(a, c, b, "String")
            };
            D.refreshGameAssetCache = function(a, b) {
                null == b && (b = !1);
                if (b || a.cache.generated_for_size.width != a.size.width || a.cache.generated_for_size.height !=
                    a.size.height || a.cache.generated_for_graphics_scale != a.graphics_scale) {
                    a.cache.generated_for_size = H.copySize(a.size);
                    a.cache.generated_for_graphics_scale = a.graphics_scale;
                    b = xa.start(Dd.JustEnd, "refreshGameAssetCache");
                    var c = ja.getLevelGraphicsScale(a);
                    cb.recreateLevelAssetCache(a.cache, a.game_levels, a.size, c);
                    xa.snapshot(b, "recreateLevelAssetCache");
                    cb.recreateMainMenuAndPlayWindowAssetCache(a.cache, a.game_levels, a.size, a.exported_images);
                    xa.snapshot(b, "recreateMainMenuAndPlayWindowAssetCache");
                    cb.recreatePauseMenuSources(a.cache,
                        a.size, a.exported_images);
                    xa.snapshot(b, "recreatePauseMenuSources");
                    a.cache.menu_filters = cb.createLevelGlowFilters(a.size.height / gc.default_size.height);
                    xa.snapshot(b, "createLevelGlowFilters");
                    xa.end(b)
                }
            };
            D.createRailGraphics = function(a, b, c, d, e, f, h, k, m) {
                null == m && (m = 3);
                null == k && (k = 4);
                null == h && (h = 4);
                var r = 1.3 * c,
                    g = new S,
                    l = g.get_graphics();
                l.beginFill(0);
                l.moveTo(a, b);
                for (var n = d, p, x, z = Math.PI / 6, u = 0, q = Math.abs(H.angleDifferenceRad(e, n)); 0 < q;)
                    if (p = Math.cos(n) * r, x = Math.sin(n) * r, l.lineTo(a + p, b + x), n += z, n =
                        H.normalizeAngle(n), q -= z, 100 < u++) {
                        w.trace("loop broke :(", {
                            fileName: "GameDo.hx",
                            lineNumber: 2978,
                            className: "bikas.game.GameDo",
                            methodName: "createRailGraphics"
                        });
                        break
                    } p = Math.cos(e) * r;
                x = Math.sin(e) * r;
                l.lineTo(a + p, b + x);
                l.lineTo(a, b);
                l.endFill();
                r = new S;
                r.get_graphics().lineStyle(1 * m, f, 1);
                r.get_graphics().drawCircle(a, b, c);
                r.set_mask(g);
                m = new S;
                p = Math.cos(d) * c;
                x = Math.sin(d) * c;
                m.get_graphics().beginFill(f);
                m.get_graphics().lineStyle(0, 0, 0);
                m.get_graphics().drawCircle(a + p, b + x, 1 * h);
                d = new S;
                p = Math.cos(e) *
                    c;
                x = Math.sin(e) * c;
                d.get_graphics().beginFill(f);
                d.get_graphics().lineStyle(0, 0, 0);
                d.get_graphics().drawCircle(a + p, b + x, 1 * k);
                a = new S;
                a.addChild(g);
                a.addChild(r);
                a.addChild(m);
                a.addChild(d);
                return a
            };
            D.createCircleGraphics = function(a, b, c, d, e) {
                null == e && (e = 3);
                var f = new S;
                f.get_graphics().lineStyle(e, d, 1);
                f.get_graphics().drawCircle(a, b, c);
                return f
            };
            D.createRailSprite = function(a, b, c, d, e, f, h, k) {
                var m = sa.rail_end_circles_radius;
                a = D.createRailGraphics(a, b, c, d, e, f, m, m, sa.rail_thickness);
                a.set_scaleX(a.set_scaleY(k));
                h = Va.copyGlowFilter(sa.rail_filter, h);
                Ea.scaleGlowFilter(h, 1 * k);
                a.set_filters([h]);
                return a
            };
            D.createCircleSprite = function(a, b, c, d, e, f) {
                a = D.createCircleGraphics(a, b, c, d, sa.rail_thickness);
                a.set_scaleX(a.set_scaleY(f));
                e = Va.copyGlowFilter(sa.rail_filter, e);
                Ea.scaleGlowFilter(e, f);
                a.set_filters([e]);
                return a
            };
            D.createSingleBitmapForVariousObjectsContainedInSprite = function(a, b, c, d) {
                a = V.createAndDrawSource(a, !0, !1, 1, 1, new Ie(-c / 2, -d / 2, c, d));
                a = V.createBitmapContainer(a);
                a.container.set_scaleX(a.container.set_scaleY(1 /
                    b));
                return a
            };
            D.drawEndLines = function(a, b) {
                var c = new S,
                    d = new Qc;
                d.set_color(Hc.line_color);
                d.set_blurX(Hc.line_glow_blur);
                d.set_blurY(Hc.line_glow_blur);
                d.set_strength(Hc.line_glow_strength);
                d.set_quality(Hc.line_glow_quality);
                Ea.scaleGlowFilter(d, b);
                c.get_graphics().clear();
                var e = 0;
                for (a = a.line_overlaps; e < a.length;) {
                    var f = a[e];
                    ++e;
                    c.get_graphics().lineStyle(Hc.line_thickness, Hc.line_color, 1);
                    c.get_graphics().moveTo(f.p1.x, f.p1.y);
                    c.get_graphics().lineTo(f.p2.x, f.p2.y)
                }
                c.set_scaleX(b);
                c.set_scaleY(b);
                c.set_filters([d]);
                return c
            };
            D.drawTexturedRoundedRectangle = function(a, b, c, d, e, f, h, k, m, r) {
                var g = new S,
                    l = new Ke,
                    n = new Ke;
                n.get_graphics().beginBitmapFill(a, b, !0, !0);
                n.get_graphics().drawRoundRect(d, e, f, h, k, m);
                n.get_graphics().endFill();
                n.set_blendMode(9);
                r && n.set_filters([Va.createSaturationFilter(-100)]);
                l.get_graphics().beginFill(c, 1);
                l.get_graphics().drawRoundRect(d, e, f, h, k, m);
                l.get_graphics().endFill();
                g.addChild(l);
                g.addChild(n);
                return g
            };
            D.extractPrefabLevelName = function(a) {
                for (var b = "", c = 0,
                        d = a.stage_group.group.entities; c < d.length;) {
                    var e = d[c];
                    ++c;
                    if (null != e.prefab_link && null != e.prefab_link.prefab_entity.prefab.edit) {
                        b = e.prefab_link.prefab_entity.name;
                        break
                    }
                }
                if ("" == b)
                    for (c = 0, a = a.stage_group.group.entities; c < a.length;)
                        if (d = a[c], ++c, null != d.prefab_link && d.selected) {
                            b = d.prefab_link.prefab_entity.name;
                            break
                        } return b
            };
            D.safeRemove = function(a) {
                null != a && null != a.parent && a.parent.removeChild(a)
            };
            D.playButtonDownSound = function(a) {
                null != a.click && va.play(a.click)
            };
            D.stopAllMusic = function(a) {
                va.isPlaying(a.music_menu) &&
                    va.stop(a.music_menu);
                va.isPlaying(a.music_gameplay) && va.stop(a.music_gameplay)
            };
            D.update = function(a) {
                if (a.config.game_is_paused_by_ad) D.stopAllMusic(a.sounds);
                else if (a.running) {
                    var b = a.mouse_state,
                        c = a.keyboard_state,
                        d = a.entity_container;
                    b.current.x = d.get_mouseX();
                    b.current.y = d.get_mouseY();
                    if (!a.html5_waiting_for_play_click) {
                        a.config.type == db.HTML5Release && -1 != a.config.release.sitelock_types.indexOf(qe.Poki) && (null != a.level && a.level.state == ne.Gameplay && a.pause.state == wc.PauseStateClosed && null ==
                            a.inter_level_menu ? a.poki_set_gameplay_on || (a.poki_set_gameplay_on = !0, Af.PokiSDK.gameplayStart()) : a.poki_set_gameplay_on && (a.poki_set_gameplay_on = !1, Af.PokiSDK.gameplayStop()));
                        a.config.type == db.FlashDevelopment && D.updateMouseRecorder(a, b, c);
                        null != a.frame_rate && (a.frame_rate.code_stamp = ia.getTimer());
                        if (a.game_stepping_enabled) {
                            if (a.game_step_pause) return;
                            a.game_step_pause = !0
                        }
                        if (a.very_slow_update) {
                            a.very_slow_update_time += 1;
                            if (15 > a.very_slow_update_time) return;
                            a.very_slow_update_time = 0
                        }
                        d = null;
                        var e = !0;
                        null != a.record_data && (null != a.record_data.current_level_record ? d = [] : null != a.record_data.current_level_record_playback && (a.record_data.paused || (e = Rg.stepCurrentRecord(a.record_data, a))));
                        b.button_state == ya.DOWNED ? null == a.play_window && null == a.prompt_window && null == a.settings_window && Ia.isRadiusButtonDowned(a.pause.pause_button.container, a.pause.pause_button.radius, a.finger_radius, b.downed) && (D.playButtonDownSound(a.sounds), cb.setBitmapUsingSource(a.pause.pause_button.background, a.pause.pause_button.downed_background_source)) :
                            b.button_state == ya.UPPED && null == a.play_window && null == a.prompt_window && null == a.settings_window && (Ia.isRadiusButtonDowned(a.pause.pause_button.container, a.pause.pause_button.radius, a.finger_radius, b.downed) && cb.setBitmapUsingSource(a.pause.pause_button.background, a.pause.pause_button.background_source), Ia.isRadiusButtonClicked(a.pause.pause_button.container, a.pause.pause_button.radius, a.finger_radius, b.downed, b.upped) && (null != a.pause.container.parent ? D.closePauseMenu(a, a.pause) : null != a.main_menu ? D.openPauseMenu(a,
                                a.pause, pe.PauseMainMenu) : null != a.level ? null != a.inter_level_menu ? D.openPauseMenu(a, a.pause, pe.PauseInterLevelMenu) : D.openPauseMenu(a, a.pause, pe.PauseLevel) : w.trace("warning: unhandled state", {
                                fileName: "GameDo.hx",
                                lineNumber: 3471,
                                className: "bikas.game.GameDo",
                                methodName: "update"
                            })));
                        a.pause.state != wc.PauseStateClosed && null == a.play_window && null == a.prompt_window && null == a.settings_window && D.updatePauseMenu(a, b, c);
                        null != a.inter_level_menu && a.pause.state == wc.PauseStateClosed && null == a.play_window && null ==
                            a.prompt_window && null == a.settings_window && D.updateInterLevelMenu(a, b, c);
                        if (null != a.prompt_window) Y.updatePlayWindow(a, a.prompt_window, b, c), null != a.prompt_window && a.prompt_window.is_destroyed && (a.prompt_window = null);
                        else if (null != a.settings_window) Y.updatePlayWindow(a, a.settings_window, b, c), null != a.settings_window && a.settings_window.is_destroyed && (a.settings_window = null);
                        else if (null != a.main_menu) {
                            va.isPlaying(a.sounds.music_gameplay) && va.stop(a.sounds.music_gameplay);
                            a.pause.state == wc.PauseStateClosed &&
                                (null != a.play_window ? (Y.updatePlayWindow(a, a.play_window, b, c), null != a.play_window && a.play_window.is_destroyed && (a.play_window = null)) : Lb.updateMainMenu(a, b, c, d));
                            if (null == a.main_menu) return;
                            a.main_menu.state != Pe.Normal || va.isPlaying(a.sounds.music_menu) || (va.reset(a.sounds.music_menu), va.play(a.sounds.music_menu))
                        } else if (null != a.level) {
                            va.isPlaying(a.sounds.music_menu) && va.stop(a.sounds.music_menu);
                            va.isPlaying(a.sounds.music_gameplay) || (a.sounds.music_gameplay_transition_current_time = 0, va.play(a.sounds.music_gameplay));
                            var f = H.clamp0to1(a.sounds.music_gameplay_transition_current_time / go.gameplay_music_transition_in_time),
                                h = ma.cubicStart(0, 1, f);
                            a.sounds.music_gameplay.volume != h && va.setVolume(a.sounds.music_gameplay, h);
                            1 > f && (a.sounds.music_gameplay_transition_current_time += a.step.step_size);
                            if (a.level.state == ne.TransitionIn && a.pause.state == wc.PauseStateClosed) ja.updateLevelTransitionIn(a, a.level, d);
                            else if (a.level.state == ne.Gameplay && a.pause.state == wc.PauseStateClosed && null == a.inter_level_menu) ja.updateLevelGameplay(a,
                                a.level, b, c, d);
                            else if (a.level.state == ne.TransitionOut && (a.pause.state == wc.PauseStateClosed || a.pause.state == wc.PauseStateTransitionOut) && !ja.updateLevelTransitionOut(a, a.level, d)) {
                                D.updateInputs(a, b, c);
                                return
                            }
                        }
                        null != a.record_data && D.updateGameplayRecorder(a, d, e);
                        null != a.export_level_screenshots ? 0 < a.export_level_screenshots.length && (re.exportSingleLevelPngScreenshotInSequence(a, a.export_level_screenshots[0]), a.export_level_screenshots.shift(), 0 < a.export_level_screenshots.length ? D.loadGameByLevelName(a,
                            a.export_level_screenshots[0].prefab_name, !0) : (a.export_level_screenshots = null, w.trace("exporting done!", {
                            fileName: "GameDo.hx",
                            lineNumber: 3602,
                            className: "bikas.game.GameDo",
                            methodName: "update"
                        }))) : null != a.export_level_graphics_for_openfl && 0 < a.export_level_graphics_for_openfl.length && (re.exportLevelGraphicsToFilesForOpenFL(a), a.export_level_graphics_for_openfl.shift(), 0 < a.export_level_graphics_for_openfl.length ? D.loadGameByLevelName(a, a.export_level_graphics_for_openfl[0].prefab_name, !0) : (a.export_level_graphics_for_openfl =
                            null, w.trace("exporting done!", {
                                fileName: "GameDo.hx",
                                lineNumber: 3615,
                                className: "bikas.game.GameDo",
                                methodName: "update"
                            })));
                        null != a.save_message && 0 < a.save_message.current_time && (a.save_message.current_time -= a.step.step_size, 0 >= a.save_message.current_time && null != a.save_message.text_field.parent && a.save_message.text_field.parent.removeChild(a.save_message.text_field));
                        null != a.frame_rate && D.updateFrameRate(a);
                        D.updateInputs(a, b, c)
                    }
                } else D.stopAllMusic(a.sounds)
            };
            D.updateFrameRate = function(a) {
                var b = a.frame_rate,
                    c = ia.getTimer(),
                    d = c - b.current_stamp;
                b.frames_ms.push(d);
                b.frames_ms.length > Ii.frames_for_min && b.frames_ms.shift();
                b.current_stamp = c;
                b.frame++;
                0 == b.average_stamp && (b.average_stamp = ia.getTimer(), b.average_ms = Math.round(1E3 / Ii.frames_for_average));
                0 == b.frame % Ii.frames_for_average && (b.average_ms = Math.round((c - b.average_stamp) / Ii.frames_for_average), b.average_stamp = c);
                for (var e = b.slowest_frame_ms = 0, f = b.frames_ms; e < f.length;) {
                    var h = f[e];
                    ++e;
                    h > b.slowest_frame_ms && (b.slowest_frame_ms = h)
                }
                null != a.frame_rate_field &&
                    (e = a.frame_rate_format.size / 12, a.frame_rate_field.set_x(a.size.width - 75 * e), a.frame_rate_field.set_y(2 * e), a.frame_rate_field.set_text("A:" + Math.round(1E3 / b.average_ms) + ", M:" + Math.round(1E3 / b.slowest_frame_ms)));
                null != a.debug && (c -= b.code_stamp, d = H.spaceText("game:" + d, 9), c = H.spaceText("code:" + c, 9), e = H.spaceText("avg:" + Math.round(b.average_ms), 9), b = H.spaceText("avg.fps:" + Math.round(1E3 / b.average_ms), 13), u.setText(a.debug.fps_element, d + "\t" + c + "\t" + e + "\t" + b))
            };
            D.updateMouseRecorder = function(a, b, c) {
                -1 !=
                    c.pressed_once.indexOf(32) ? a.mouse_record = null == a.mouse_record ? new At : null : -1 != c.holding_once.indexOf(32) ? null != a.mouse_record && (c = H.copyPoint(b.current), a.mouse_record.points.push(c)) : 32 == c.released && null != a.mouse_record && (0 == a.mouse_record.points.length ? a.mouse_record = null : (c = a.mouse_record, c.playing || (c.index = c.points.length, c.forward = !1, c.playing = !0)));
                null != a.mouse_record && (b.button_state = ya.DRAGGED, a = a.mouse_record, a.playing && (a.forward ? (a.index++, a.index == a.points.length - 1 && (a.forward = !1)) :
                    (a.index--, 0 == a.index && (a.forward = !0)), b.current.x = a.points[a.index].x, b.current.y = a.points[a.index].y))
            };
            D.updateGameplayRecorder = function(a, b, c) {
                if (null != a.record_data)
                    if (null != a.record_data.current_level_record) Rg.captureFrame(a.record_data, a.record_data.current_level_record, a, b), a.record_data.recording_frames = a.record_data.current_level_record.snapshots.length, a.record_data.progress_name = a.record_data.current_level_record.name, a.record_data.progress_info = "frames: " + a.record_data.recording_frames;
                    else if (null != a.record_data.current_level_record_playback && !a.record_data.paused) {
                    var d = a.record_data.current_playback_frame - 1;
                    b = a.record_data.current_level_record_playback;
                    Q.enumIndex(a.record_data.playback_type);
                    if (null != a.record_data.current_movie_playback) {
                        if (a.record_data.progress_name = a.record_data.current_movie_playback.name, a.record_data.progress_info = "rec:" + (a.record_data.current_movie_level_record_index + 1) + "/" + a.record_data.current_movie_playback.records.length + ", frame:" + a.record_data.current_playback_frame +
                            "/" + a.record_data.current_level_record_playback.snapshots.length, 0 < a.record_data.current_movie_level_record_index)
                            for (var e = 0, f = a.record_data.current_movie_level_record_index; e < f;) {
                                var h = e++;
                                h = a.record_data.current_movie_playback.records[h];
                                var k = h.play_start,
                                    m = h.play_end; - 1 == h.play_end && (m = h.snapshots.length);
                                d += m - k
                            }
                    } else a.record_data.progress_name = a.record_data.current_level_record_playback.name, a.record_data.progress_info = "frame:" + a.record_data.current_playback_frame + "/" + a.record_data.current_level_record_playback.snapshots.length;
                    e = null != a.record_data.current_movie_playback ? a.record_data.current_movie_playback.name : a.record_data.current_level_record_playback.name;
                    d -= b.play_start;
                    f = ia.getTimer();
                    switch (Q.enumIndex(a.record_data.playback_type)) {
                        case 1:
                            0 == d % 2 && re.exportSinglePngFrameScreenshotForVideo(a, e + "/frames (" + a.size.width + "x" + a.size.height + ", 30fps)", Math.round(d / 2), c);
                            break;
                        case 2:
                            re.exportSinglePngFrameScreenshotForVideo(a, e + "/frames (" + a.size.width + "x" + a.size.height + ", 60fps)", d, c)
                    }
                    c = ia.getTimer() - f;
                    a.record_data.progress_frame_time =
                        c + "ms";
                    c = !1;
                    (b.play_end > b.snapshots.length || b.play_end <= b.play_start) && -1 != b.play_end ? (w.trace("warning: play_end " + b.play_end + " is invalid for record " + b.name, {
                        fileName: "GameDo.hx",
                        lineNumber: 3829,
                        className: "bikas.game.GameDo",
                        methodName: "updateGameplayRecorder"
                    }), a.record_data.current_playback_frame >= b.snapshots.length && (c = !0)) : -1 == b.play_end ? a.record_data.current_playback_frame >= b.snapshots.length && (c = !0) : a.record_data.current_playback_frame >= b.play_end && (c = !0);
                    c && (b = a.record_data.playback_type,
                        Rg.stopPlayback(a.record_data, a), c = a.record_data.current_movie_playback, null != c && (a.record_data.current_movie_level_record_index < c.records.length - 1 ? (a.record_data.current_movie_level_record_index += 1, Rg.stopPlayback(a.record_data, a), Rg.startPlayback(a.record_data, c.records[a.record_data.current_movie_level_record_index], a, b)) : (w.trace("movie " + c.name + " finished playing", {
                                fileName: "GameDo.hx",
                                lineNumber: 3855,
                                className: "bikas.game.GameDo",
                                methodName: "updateGameplayRecorder"
                            }), a.record_data.current_movie_playback =
                            null, a.record_data.current_movie_level_record_index = 0)))
                }
            };
            D.updatePauseMenu = function(a, b, c) {
                if (null == a.pause) w.trace("warning: game.pause == null", {
                    fileName: "GameDo.hx",
                    lineNumber: 3867,
                    className: "bikas.game.GameDo",
                    methodName: "updatePauseMenu"
                });
                else {
                    c = a.pause;
                    if (c.state == wc.PauseStateTransitionIn) {
                        null == c.container.parent && a.menu_container.addChild(c.container);
                        c.time += a.step.step_size;
                        var d = H.clamp0to1(c.time / Pg.transition_in_time);
                        c.container.set_alpha(ma.cubicStartEnd(0, 1, d));
                        for (var e = ma.cubicStartEnd(Pg.button_scale_start,
                                1, d), f = ma.cubicStartEnd(-Pg.button_rotate_degrees, 0, d), h = 0, k = c.all_buttons; h < k.length;) {
                            var m = k[h];
                            ++h;
                            m.container.set_scaleX(e);
                            m.container.set_scaleY(e);
                            m.container.set_rotation(f)
                        }
                        1 == d && (c.state = wc.PauseStateOpened, c.time = 0)
                    } else {
                        if (c.state == wc.PauseStateTransitionOut) {
                            c.time += a.step.step_size;
                            a = H.clamp0to1(c.time / Pg.transition_out_time);
                            c.container.set_alpha(ma.cubicStartEnd(1, 0, a));
                            b = ma.cubicStartEnd(1, Pg.button_scale_start, a);
                            d = 0;
                            for (e = c.all_buttons; d < e.length;) f = e[d], ++d, f.container.set_scaleX(b),
                                f.container.set_scaleY(b);
                            1 == a && (c.state = wc.PauseStateClosed, c.container.parent.removeChild(c.container), c.time = 0);
                            return
                        }
                        c.state != wc.PauseStateOpened && c.state != wc.PauseStateClosed && w.trace("warning: unhandled state " + E.string(c.state), {
                            fileName: "GameDo.hx",
                            lineNumber: 3931,
                            className: "bikas.game.GameDo",
                            methodName: "updatePauseMenu"
                        })
                    }
                    d = null;
                    b.button_state == ya.DOWNED ? (b = Ia.findClosestButton(c.enabled_buttons, a.finger_radius, b.downed), null != b && (E.is(b, nl) ? (cb.setBitmapUsingSource(b.background, b.downed_background_source),
                        D.playButtonDownSound(a.sounds)) : E.is(b, pl) && (V.setBitmapUsingSource(b.background.bitmap, b.downed_background), D.playButtonDownSound(a.sounds)))) : b.button_state == ya.UPPED && (e = Ia.findClosestButton(c.enabled_buttons, a.finger_radius, b.downed), b = Ia.findClosestButton(c.enabled_buttons, a.finger_radius, b.upped), null != b && e == b && (d = b), null != e && (E.is(e, nl) ? cb.setBitmapUsingSource(e.background, e.background_source) : E.is(e, pl) && V.setBitmapUsingSource(e.background.bitmap, e.current_background)));
                    null != d && (d == c.music ?
                        (va.music_enabled = !va.music_enabled, b = !va.music_enabled, va.setMute(a.sounds.music_menu, b), va.setMute(a.sounds.music_gameplay, b), c.music.additional_foreground.set_visible(b), a.progress_save.music_enabled = va.music_enabled, D.saveAllProgressToFile(a.progress_serial_data, a.progress_save)) : d == c.sound ? (va.sounds_enabled = !va.sounds_enabled, c.sound.additional_foreground.set_visible(!va.sounds_enabled), a.progress_save.sounds_enabled = va.sounds_enabled, D.saveAllProgressToFile(a.progress_serial_data, a.progress_save)) :
                        null != c.wrench && d == c.wrench && D.openSettingsWindow(a, ua.OpenSettings));
                    c.type == pe.PauseMainMenu ? d == c.play && D.closePauseMenu(a, a.pause) : c.type == pe.PauseLevel ? d == c.reload ? (D.restartLevel(a), D.closePauseMenu(a, a.pause)) : d == c.play ? D.closePauseMenu(a, a.pause) : d == c.menu ? (D.openMainMenu(a, !0), D.closePauseMenu(a, a.pause)) : d == c.skip0 || d != c.skip1 && d != c.skip2 && d != c.skip3 || (null == a.current_level ? w.trace("warning: game.current_level == null", {
                            fileName: "GameDo.hx",
                            lineNumber: 4024,
                            className: "bikas.game.GameDo",
                            methodName: "updatePauseMenu"
                        }) :
                        (a.progress_save.last_level_completed_or_skipped = a.current_level.prefab_name, D.saveProgressLevel(a.progress_serial_data, a.progress_save, a.current_level, Hh.LevelSkip), D.gotoNextLevelOrMainMenu(a)), D.closePauseMenu(a, a.pause)) : c.type == pe.PauseInterLevelMenu && (d == c.menu ? (D.openMainMenu(a, !0), D.destroyInterLevelMenu(a), D.closePauseMenu(a, a.pause)) : d == c.play && D.closePauseMenu(a, a.pause))
                }
            };
            D.updateInterLevelMenu = function(a, b, c) {
                if (null == a.inter_level_menu) w.trace("warning: game.inter_level_menu == null", {
                    fileName: "GameDo.hx",
                    lineNumber: 4051,
                    className: "bikas.game.GameDo",
                    methodName: "updateInterLevelMenu"
                });
                else switch (c = a.inter_level_menu, null == c.container.parent && a.menu_container.addChildAt(c.container, 0), Q.enumIndex(c.state)) {
                    case 0:
                        c.time += a.step.step_size;
                        a = H.clamp0to1(c.time / kg.transition_in_time);
                        c.container.set_alpha(ma.cubicEnd(0, 1, a));
                        var d = ma.cubicEnd(kg.icon_scale_start, .999, a);
                        b = ma.cubicEnd(-kg.icon_rotate_degrees, 0, a);
                        for (var e = 0, f = c.all_level_icons; e < f.length;) {
                            var h = f[e];
                            ++e;
                            h.container.set_scaleX(d);
                            h.container.set_scaleY(d);
                            h.container.set_rotation(b)
                        }
                        1 == a && (c.state = Cg.Opened, c.time = 0);
                        break;
                    case 1:
                        d = null;
                        b.button_state == ya.DOWNED ? (b = Ia.findClosestButton(c.enabled_level_icons, a.finger_radius, b.downed), null != b && (cb.setBitmapUsingSource(b.background.bitmap, b.downed_background), D.playButtonDownSound(a.sounds))) : b.button_state == ya.UPPED && (e = Ia.findClosestButton(c.enabled_level_icons, a.finger_radius, b.downed), b = Ia.findClosestButton(c.enabled_level_icons, a.finger_radius, b.upped), null != b && e == b && (d =
                            b), null != e && cb.setBitmapUsingSource(e.background.bitmap, e.current_background));
                        null != c.next_level_icon && (b = c.next_level_icon.background.container, b.set_rotation(b.get_rotation() + a.step.step_size * kg.next_level_icon_rotation_speed));
                        b = null;
                        e = 0;
                        for (c = c.all_level_icons; e < c.length;) f = c[e], ++e, d == f && (b = f);
                        if (null != b) switch (Q.enumIndex(b.state)) {
                            case 1:
                            case 3:
                            case 4:
                            case 5:
                                c = b.level_reference.prefab_name;
                                D.destroyInterLevelMenu(a);
                                D.loadGameByLevelName(a, c);
                                Af.setCommercialBreak(a);
                                break;
                            case 0:
                            case 2:
                                w.trace("warning: this icon " +
                                    b.level_reference.prefab_name + " should not be enabled", {
                                        fileName: "GameDo.hx",
                                        lineNumber: 4183,
                                        className: "bikas.game.GameDo",
                                        methodName: "updateInterLevelMenu"
                                    })
                        }
                        break;
                    case 2:
                        for (c.time += a.step.step_size, a = H.clamp0to1(c.time / kg.transition_out_time), c.container.set_alpha(ma.cubicStartEnd(1, 0, a)), a = ma.cubicStartEnd(1, kg.icon_scale_start, a), d = 0, c = c.all_level_icons; d < c.length;) b = c[d], ++d, b.container.set_scaleX(a), b.container.set_scaleY(a)
                }
            };
            D.updateInputs = function(a, b, c) {
                b.button_state == ya.DOWNED ? (b.button_state =
                    ya.DRAGGED, null != a.click_shape && (a.click_shape.set_x(b.current.x * a.entity_container.get_scaleX() + a.entity_container.get_x()), a.click_shape.set_y(b.current.y * a.entity_container.get_scaleY() + a.entity_container.get_y()))) : b.button_state == ya.CLICKED ? b.button_state = ya.UPPED : b.button_state == ya.UPPED && (b.button_state = ya.NONE);
                a.config.type == db.FlashDevelopment && (c.ctrl && -1 != c.pressed_once.indexOf(83) ? D.saveInitStatesAndSaveToFile(a) : 13 == c.pressed && D.closeGameAndOpenEditor(a));
                c.pressed = -1;
                c.released = -1;
                a = 0;
                for (b = c.pressed_once; a < b.length;) {
                    var d = b[a];
                    ++a;
                    c.holding_once.push(d)
                }
                0 < c.pressed_once.length && c.pressed_once.splice(0, c.pressed_once.length)
            };
            var re = function() {};
            g["bikas.game.GameExportDo"] = re;
            re.__name__ = ["bikas", "game", "GameExportDo"];
            re.takeScreenshot = function(a, b) {
                null == b && (b = !0);
                var c = new Ie(a.container.get_x(), a.container.get_y(), a.size.width, a.size.height);
                null != a.frame_rate_field && a.frame_rate_field.set_visible(!1);
                null != a.game_border && a.game_border.set_visible(!1);
                var d = !1;
                null !=
                    a.click_shape && a.click_shape.get_visible() && (a.click_shape.set_visible(!1), d = !0);
                null != a.save_message && a.save_message.text_field.set_visible(!1);
                b && a.pause.pause_button.container.set_visible(!1);
                var e = !1;
                null != a.game_iphone_home_button && (e = a.game_iphone_home_button.get_visible()) && a.game_iphone_home_button.set_visible(!1);
                null != a.main_menu && a.main_menu.credits.sprite.set_visible(!1);
                c = V.createAndDrawSource(a.container, !0, !1, 0, 0, c);
                null != a.frame_rate_field && a.frame_rate_field.set_visible(!0);
                null !=
                    a.game_border && a.game_border.set_visible(!0);
                null != a.click_shape && a.click_shape.set_visible(d);
                null != a.save_message && a.save_message.text_field.set_visible(!0);
                e && a.game_iphone_home_button.set_visible(!0);
                null != a.main_menu && a.main_menu.credits.sprite.set_visible(!1);
                b && a.pause.pause_button.container.set_visible(!0);
                return c
            };
            re.exportSingleLevelPngScreenshotInSequence = function(a, b) {
                if (null == b.parent_pack) w.trace("warning: level.parent_pack == null", {
                    fileName: "GameExportDo.hx",
                    lineNumber: 299,
                    className: "bikas.game.GameExportDo",
                    methodName: "exportSingleLevelPngScreenshotInSequence"
                });
                else {
                    null == b.parent_pack.parent_timeline && w.trace("warning: level.parent_pack.parent_timeline == null", {
                        fileName: "GameExportDo.hx",
                        lineNumber: 304,
                        className: "bikas.game.GameExportDo",
                        methodName: "exportSingleLevelPngScreenshotInSequence"
                    });
                    var c = b.parent_pack,
                        d = c.parent_timeline,
                        e = d.parent_game_levels.all_timelines.indexOf(d);
                    c = d.packs.indexOf(c);
                    d = b.parent_pack.levels.indexOf(b);
                    b = "T" + e + "_P" + c + "_L" + d + "_" + b.prefab_name;
                    e = re.takeScreenshot(a, !0);
                    c = [];
                    c.push(D.createPNGImageSaveRequest("../assets/exported/all_levels/", e.bitmap_data, b + ".png"));
                    D.saveToFiles(a, c);
                    V.destroyBitmapDataSource(e)
                }
            };
            re.exportSinglePngFrameScreenshotForVideo = function(a, b, c, d) {
                null == d && (d = !0);
                b = "../assets/exported/videos/" + b + "/";
                c = "frame" + Nc.prependZerosToNumber(c + "", 4) + ".png";
                d || null == re.latest_save_request_cache ? (d = re.takeScreenshot(a, !0), d = D.createPNGImageSaveRequest(b, d.bitmap_data, c), D.saveToFiles(a, [d]), re.latest_save_request_cache = d) : (w.trace("use same request for: " +
                    c, {
                        fileName: "GameExportDo.hx",
                        lineNumber: 349,
                        className: "bikas.game.GameExportDo",
                        methodName: "exportSinglePngFrameScreenshotForVideo"
                    }), d = Ha.createSaveRequest(b, c, re.latest_save_request_cache.source_data, "png"), D.saveToFiles(a, [d]), re.latest_save_request_cache = d)
            };
            re.pushImage = function(a, b, c, d, e) {
                c = D.createPNGImageSaveRequest(c, e.bitmap_data, d + ".png");
                a.push(c);
                b.images.push({
                    name: d,
                    original_width: e.original_width,
                    original_height: e.original_height,
                    center: {
                        x: e.center_point.x,
                        y: e.center_point.y
                    }
                });
                return c
            };
            re.exportLevelGraphicsToFilesForOpenFL = function(a) {
                var b = a.level;
                if (null == b) w.trace("warning: level == null", {
                    fileName: "GameExportDo.hx",
                    lineNumber: 408,
                    className: "bikas.game.GameExportDo",
                    methodName: "exportLevelGraphicsToFilesForOpenFL"
                });
                else {
                    var c = [],
                        d = {
                            game_size_width: a.size.width,
                            game_size_height: a.size.height,
                            game_graphics_scale: a.graphics_scale,
                            images: []
                        },
                        e = "../assets/graphics_html5/levels/" + a.current_level.prefab_name + "/";
                    re.pushImage(c, d, e, a.current_level.prefab_name + "_final", b.end.shape.source);
                    b = 0;
                    for (var f = a.level.parts; b < f.length;) {
                        var h = f[b];
                        ++b;
                        re.pushImage(c, d, e, a.current_level.prefab_name + "_part_" + h.entity.name, h.bitmap_data_source)
                    }
                    null != a.level.various_objects_bitmap_container && re.pushImage(c, d, e, a.current_level.prefab_name + "_various", a.level.various_objects_bitmap_container.source);
                    null != a.level.end.wireframe && re.pushImage(c, d, e, a.current_level.prefab_name + "_wireframe", a.level.end.wireframe.source);
                    d = JSON.stringify(d);
                    c.push(D.createJsonSaveRequest(e, d, a.current_level.prefab_name +
                        ".json"));
                    D.saveToFiles(a, c)
                }
            };
            re.setFinalPositionForAllParts = function(a) {
                if (null == a.level) w.trace("warning: game.level == null", {
                    fileName: "GameExportDo.hx",
                    lineNumber: 808,
                    className: "bikas.game.GameExportDo",
                    methodName: "setFinalPositionForAllParts"
                });
                else {
                    var b = 0;
                    for (a = a.level.parts; b < a.length;) {
                        var c = a[b];
                        ++b;
                        if (null != c.entity && null != c.entity.body) {
                            c.entity.body.get_position().setxy(c.final_state.x, c.final_state.y);
                            c.entity.body.set_rotation(c.final_state.rotation);
                            var d = 0;
                            for (c = c.additional_parts; d <
                                c.length;) {
                                var e = c[d];
                                ++d;
                                e.body.get_position().setxy(e.final_state.x, e.final_state.y);
                                e.body.set_rotation(e.final_state.rotation)
                            }
                        }
                    }
                }
            };
            var Ia = function() {};
            g["bikas.game.GameFunc"] = Ia;
            Ia.__name__ = ["bikas", "game", "GameFunc"];
            Ia.findProgressSaveTimeline = function(a, b) {
                for (var c = 0, d = a.main_timelines; c < d.length;) {
                    var e = d[c];
                    ++c;
                    if (e.name == b) return e
                }
                c = 0;
                for (a = a.weekly_timelines; c < a.length;)
                    if (d = a[c], ++c, d.name == b) return d;
                w.trace("warning: could not find timeline " + b, {
                    fileName: "GameFunc.hx",
                    lineNumber: 38,
                    className: "bikas.game.GameFunc",
                    methodName: "findProgressSaveTimeline"
                });
                return null
            };
            Ia.findProgressSavePack = function(a, b) {
                var c = 0;
                for (a = a.packs; c < a.length;) {
                    var d = a[c];
                    ++c;
                    if (d.name == b) return d
                }
                w.trace("warning: could not find pack " + b, {
                    fileName: "GameFunc.hx",
                    lineNumber: 48,
                    className: "bikas.game.GameFunc",
                    methodName: "findProgressSavePack"
                });
                return null
            };
            Ia.findProgressSavePackFromLevelPack = function(a, b) {
                if (null == b.parent_timeline) return null;
                a = Ia.findProgressSaveTimeline(a, b.parent_timeline.name);
                return null == a ? null : Ia.findProgressSavePack(a, b.name)
            };
            Ia.findProgressSaveLevel = function(a, b) {
                for (var c = 0, d = a.levels; c < d.length;) {
                    var e = d[c];
                    ++c;
                    if (e.name == b) return e
                }
                w.trace("warning: could not find level " + b + " in " + a.name, {
                    fileName: "GameFunc.hx",
                    lineNumber: 70,
                    className: "bikas.game.GameFunc",
                    methodName: "findProgressSaveLevel"
                });
                return null
            };
            Ia.findLevelInitState = function(a, b) {
                for (var c = null, d = 0; d < a.length;) {
                    var e = a[d];
                    ++d;
                    e.prefab_name == b && (null != c && w.trace("warning: found duplicate level " + b, {
                        fileName: "GameFunc.hx",
                        lineNumber: 100,
                        className: "bikas.game.GameFunc",
                        methodName: "findLevelInitState"
                    }), c = e)
                }
                return c
            };
            Ia.getLevelIndex = function(a) {
                return null == a.parent_pack ? (w.trace("warning: level " + a.prefab_name + " does not have parent level pack", {
                    fileName: "GameFunc.hx",
                    lineNumber: 115,
                    className: "bikas.game.GameFunc",
                    methodName: "getLevelIndex"
                }), 0) : a.parent_pack.levels.indexOf(a)
            };
            Ia.getLevelPackIconRadius = function(a) {
                var b = ma.getTClamped(1, 1.7777777777777777, a.width / a.height);
                b = Math.round(ma.linearClamped(Ab.level_pack_radius_min,
                    Ab.level_pack_radius_max, b));
                return b = a.width > a.height ? a.height / gc.default_size.height * b : a.width / 20
            };
            Ia.getTimelineWidth = function(a, b) {
                switch (Q.enumIndex(Ab.display_type)) {
                    case 0:
                        return Ab.timeline_width * a.width / gc.default_size.width;
                    case 1:
                        return a.width > a.height ? 2 * Ia.getLevelPackIconRadius(a) * (b - 1) * 1.7 : .7 * a.width / 4 * (b - 1)
                }
            };
            Ia.getPauseMenuButtonScale = function(a) {
                return a.width < a.height ? a.width / gc.default_size.height : a.height / gc.default_size.height
            };
            Ia.getPlayWindowScale = function(a) {
                return a.width <
                    a.height ? a.width / gc.default_size.height : a.height / gc.default_size.height
            };
            Ia.getInterLevelMenuScale = function(a) {
                return a.width < a.height ? a.width / gc.default_size.height : a.height / gc.default_size.height
            };
            Ia.pointToVec = function(a) {
                return new Wa(a.x, a.y)
            };
            Ia.vecToPoint = function(a) {
                return new W(a.get_x(), a.get_y())
            };
            Ia.createRectangleButton = function(a) {
                var b = new ao;
                b.type = Bg.ButtonRectangle;
                b.rectangle = a;
                return b
            };
            Ia.createRadiusButtonForDisplayObject = function(a, b) {
                var c = new ao;
                c.type = Bg.ButtonRadiusDisplayObject;
                c.radius = a;
                c.display_object_reference = b;
                c.position = null;
                return c
            };
            Ia.createRadiusButtonWithPosition = function(a, b) {
                var c = new ao;
                c.type = Bg.ButtonRadiusPosition;
                c.radius = a;
                c.display_object_reference = null;
                c.position = b;
                return c
            };
            Ia.isRadiusButtonDowned = function(a, b, c, d) {
                var e = a.get_x();
                a = a.get_y();
                return H.distance(d.x, d.y, e, a) < b + c ? !0 : !1
            };
            Ia.isRadiusButtonClicked = function(a, b, c, d, e) {
                d = Ia.isRadiusButtonDowned(a, b, c, d);
                a = Ia.isRadiusButtonDowned(a, b, c, e);
                return d ? a : !1
            };
            Ia.findClosestButton = function(a, b, c) {
                for (var d =
                        null, e = 0, f = 0; f < a.length;) {
                    var h = a[f];
                    ++f;
                    var k = 0;
                    switch (Q.enumIndex(h.button.type)) {
                        case 0:
                            if (null == h.button.display_object_reference) {
                                w.trace("warning: display_object_reference == null", {
                                    fileName: "GameFunc.hx",
                                    lineNumber: 275,
                                    className: "bikas.game.GameFunc",
                                    methodName: "findClosestButton"
                                });
                                continue
                            } else if (null == h.button.display_object_reference.parent) continue;
                            k = h.button.display_object_reference.get_x() + h.button.display_object_reference.parent.get_x();
                            var m = h.button.display_object_reference.get_y() +
                                h.button.display_object_reference.parent.get_y();
                            k = H.distance(c.x, c.y, k, m) - h.button.radius;
                            0 > k && (k = 0);
                            break;
                        case 1:
                            if (null == h.button.position) {
                                w.trace("warning: position == null", {
                                    fileName: "GameFunc.hx",
                                    lineNumber: 293,
                                    className: "bikas.game.GameFunc",
                                    methodName: "findClosestButton"
                                });
                                continue
                            }
                            k = H.distance(c.x, c.y, h.button.position.x, h.button.position.y) - h.button.radius;
                            0 > k && (k = 0);
                            break;
                        case 2:
                            if (null == h.button.rectangle) {
                                w.trace("warning: rectangle == null", {
                                    fileName: "GameFunc.hx",
                                    lineNumber: 307,
                                    className: "bikas.game.GameFunc",
                                    methodName: "findClosestButton"
                                });
                                continue
                            }
                            k = H.distanceBetweenPointAndRectangleArea(c, h.button.rectangle)
                    }
                    k < b && (null == d ? (d = h, e = k) : k < e && (d = h, e = k))
                }
                return d
            };
            var ql = function() {};
            g["bikas.game.GameTracker"] = ql;
            ql.__name__ = ["bikas", "game", "GameTracker"];
            ql.createTrackers = function(a) {};
            ql.trackView = function(a, b) {};
            ql.trackLevelFinish = function(a, b) {
                ql.trackView(a, "Level" + b + "Completed")
            };
            var ho = function(a, b, c, d, e, f) {
                null == f && (f = -1);
                null == e && (e = 1);
                null == d && (d = -1);
                null == c && (c = 1);
                null == b && (b = -1);
                null == a && (a =
                    1);
                this.zpp_inner = null;
                null == rf.zpp_pool ? this.zpp_inner = new rf : (this.zpp_inner = rf.zpp_pool, rf.zpp_pool = this.zpp_inner.next, this.zpp_inner.next = null);
                this.zpp_inner.alloc();
                this.zpp_inner.outer = this;
                this.set_collisionGroup(a);
                this.set_collisionMask(b);
                this.set_sensorGroup(c);
                this.set_sensorMask(d);
                this.set_fluidGroup(e);
                this.set_fluidMask(f)
            };
            g["nape.dynamics.InteractionFilter"] = ho;
            ho.__name__ = ["nape", "dynamics", "InteractionFilter"];
            ho.prototype = {
                zpp_inner: null,
                get_collisionGroup: function() {
                    return this.zpp_inner.collisionGroup
                },
                set_collisionGroup: function(a) {
                    this.get_collisionGroup() != a && (this.zpp_inner.collisionGroup = a, this.zpp_inner.invalidate());
                    return this.get_collisionGroup()
                },
                get_collisionMask: function() {
                    return this.zpp_inner.collisionMask
                },
                set_collisionMask: function(a) {
                    this.get_collisionMask() != a && (this.zpp_inner.collisionMask = a, this.zpp_inner.invalidate());
                    return this.get_collisionMask()
                },
                get_sensorGroup: function() {
                    return this.zpp_inner.sensorGroup
                },
                set_sensorGroup: function(a) {
                    this.get_sensorGroup() != a && (this.zpp_inner.sensorGroup =
                        a, this.zpp_inner.invalidate());
                    return this.get_sensorGroup()
                },
                get_sensorMask: function() {
                    return this.zpp_inner.sensorMask
                },
                set_sensorMask: function(a) {
                    this.get_sensorMask() != a && (this.zpp_inner.sensorMask = a, this.zpp_inner.invalidate());
                    return this.get_sensorMask()
                },
                get_fluidGroup: function() {
                    return this.zpp_inner.fluidGroup
                },
                set_fluidGroup: function(a) {
                    this.get_fluidGroup() != a && (this.zpp_inner.fluidGroup = a, this.zpp_inner.invalidate());
                    return this.get_fluidGroup()
                },
                get_fluidMask: function() {
                    return this.zpp_inner.fluidMask
                },
                set_fluidMask: function(a) {
                    this.get_fluidMask() != a && (this.zpp_inner.fluidMask = a, this.zpp_inner.invalidate());
                    return this.get_fluidMask()
                },
                __class__: ho
            };
            var rf = function() {
                this.collisionGroup = this.collisionMask = this.sensorGroup = this.sensorMask = this.fluidGroup = this.fluidMask = 0;
                this.next = this.outer = this.shapes = null;
                this.feature_cons();
                this.collisionGroup = this.sensorGroup = this.fluidGroup = 1;
                this.collisionMask = this.sensorMask = this.fluidMask = -1
            };
            g["zpp_nape.dynamics.ZPP_InteractionFilter"] = rf;
            rf.__name__ = ["zpp_nape", "dynamics", "ZPP_InteractionFilter"];
            rf.prototype = {
                next: null,
                outer: null,
                wrapper: function() {
                    if (null == this.outer) {
                        this.outer = new ho;
                        var a = this.outer.zpp_inner;
                        a.free();
                        a.next = rf.zpp_pool;
                        rf.zpp_pool = a;
                        this.outer.zpp_inner = this
                    }
                    return this.outer
                },
                free: function() {
                    this.outer = null
                },
                alloc: function() {},
                shapes: null,
                feature_cons: function() {
                    this.shapes = new rl
                },
                addShape: function(a) {
                    this.shapes.add(a)
                },
                remShape: function(a) {
                    this.shapes.remove(a)
                },
                collisionGroup: null,
                collisionMask: null,
                shouldCollide: function(a) {
                    return 0 !=
                        (this.collisionMask & a.collisionGroup) ? 0 != (a.collisionMask & this.collisionGroup) : !1
                },
                sensorGroup: null,
                sensorMask: null,
                shouldSense: function(a) {
                    return 0 != (this.sensorMask & a.sensorGroup) ? 0 != (a.sensorMask & this.sensorGroup) : !1
                },
                fluidGroup: null,
                fluidMask: null,
                shouldFlow: function(a) {
                    return 0 != (this.fluidMask & a.fluidGroup) ? 0 != (a.fluidMask & this.fluidGroup) : !1
                },
                invalidate: function() {
                    for (var a = this.shapes.begin(); null != a;) a.elem().invalidate_filter(), a = a.next
                },
                __class__: rf
            };
            var pd = function() {};
            g["bikas.game.InteractionFilters"] =
                pd;
            pd.__name__ = ["bikas", "game", "InteractionFilters"];
            pd.create = function(a, b) {
                var c = function(a) {
                    for (var b = [], c = 0; c < a.length;) {
                        var d = a[c];
                        ++c;
                        0 == d ? b.push(!1) : b.push(!0)
                    }
                    return b
                };
                a = pd.getAsBinary(c(a), !1);
                b = pd.getAsBinary(c(b), !0);
                return new ho(a, b)
            };
            pd.getAsBinary = function(a, b) {
                null == b && (b = !1);
                for (var c = 0, d = 0, e = a.length; d < e;) {
                    var f = d++;
                    a[f] == !b && (c |= Math.round(Math.pow(2, f)))
                }
                b && (c = ~c);
                return c
            };
            var ja = function() {};
            g["bikas.game.LevelDo"] = ja;
            ja.__name__ = ["bikas", "game", "LevelDo"];
            ja.startLevel = function(a,
                b, c, d, e) {
                var f = xa.start(Dd.JustEnd, "startLevel(" + c + ")");
                null != a.main_menu && D.closeMainMenu(a, !1);
                null != a.current_level_background && null != a.current_level_background.bitmap && null == a.current_level_background.bitmap.parent && a.container.addChildAt(a.current_level_background.bitmap, 0);
                null != a.level && ja.destroyLevel(a);
                null != a.play_window && D.closePlayWindow(a, he.PlayWindowCloseInstantly);
                xa.snapshot(f, "destroy previous data");
                var h = new Cc;
                a.level = h;
                h.world = Ha.createWorld(a.entity_container, a.size.width,
                    a.size.height, a.config.type == db.FlashDevelopment);
                null != h.world.debug && a.container.addChild(h.world.debug.display);
                xa.snapshot(f, "create world");
                h.all_entities = [];
                h.body_entities = [];
                null == a.library_group && w.trace("warning: game.library_group == null", {
                    fileName: "LevelDo.hx",
                    lineNumber: 223,
                    className: "bikas.game.LevelDo",
                    methodName: "startLevel"
                });
                b = Ha.overloadStage(b, a.stage_group, a.library_group, a.entity_container, a.bitmap_assets, a.serial_data, function(b) {
                    var d = null;
                    for (var e = 0, f = b.group.entities; e <
                        f.length;) {
                        var h = f[e];
                        ++e;
                        null != h.prefab_link && (null == h.prefab_link.prefab_entity ? w.trace("warning: prefab_entity for " + h.name + " is not resolved", {
                            fileName: "LevelDo.hx",
                            lineNumber: 175,
                            className: "bikas.game.LevelDo",
                            methodName: "startLevel"
                        }) : h.prefab_link.prefab_entity.name == c && (d = h))
                    }
                    null == d ? w.trace("warning: no level found - " + c, {
                        fileName: "LevelDo.hx",
                        lineNumber: 184,
                        className: "bikas.game.LevelDo",
                        methodName: "startLevel"
                    }) : (a.game_levels.level_map.exists(c) ? (e = a.game_levels.level_map.get(c), a.current_level =
                            e) : (w.trace("warning: could not find " + c + " level", {
                            fileName: "LevelDo.hx",
                            lineNumber: 189,
                            className: "bikas.game.LevelDo",
                            methodName: "startLevel"
                        }), a.current_level = new Dq, a.current_level.prefab_name = c), b.group.entities = [d], d.position.x = 0, d.position.y = 0, d.transform.rotation = 0, d.transform.scale_x = 1, d = a.current_level.body_scale, a.config.type == db.FlashDevelopment && 0 < a.test_level_body_scale && (d = a.test_level_body_scale), b.position.x = 0, b.position.y = 0, b.transform.scale_x = d, b.transform.scale_y = d, b.transform.rotation =
                        0)
                });
                if (null == b) return !1;
                a.stage_group = b;
                xa.snapshot(f, "overload stage");
                h.level_graphics_scale = ja.getLevelGraphicsScale(a);
                a.size.height > a.size.width && cb.recreateLevelAssetCache(a.cache, a.game_levels, a.size, h.level_graphics_scale);
                a.entity_container.set_scaleX(h.level_graphics_scale);
                a.entity_container.set_scaleY(h.level_graphics_scale);
                if (!ja.pickupUsefulData(h, a.stage_group)) return !1;
                xa.snapshot(f, "pickupUsefulData");
                if (!Ha.createBodiesForEntities(a.stage_group, h.body_entities, dk.very_light, pd.normal)) return !1;
                xa.snapshot(f, "createBodiesForEntities");
                if (!ja.createPartsAndConnections(h, a.stage_group, a.movie_clip_assets)) return !1;
                xa.snapshot(f, "createBasedOnAssociations");
                h.parts.sort(ja.partDepthSort);
                xa.snapshot(f, "partDepthSort");
                if (!ja.saveBranchInformation(h)) return !1;
                xa.snapshot(f, "saveBranchInformation");
                if (!ja.createCustomConstraints(h, new Eq(!0))) return !1;
                xa.snapshot(f, "createCustomConstraints");
                if (!ja.setupSoundSettingsForParts(h)) return !1;
                xa.snapshot(f, "setupSoundSettingsForParts");
                if (!ja.createGraphics(a,
                        h, a.stage_group, a.size.width, a.size.height, h.level_graphics_scale, a.entity_container, a.level_graphics_type)) return !1;
                xa.snapshot(f, "createGraphics");
                ja.centerStage(a, h.level_graphics_scale);
                ja.savePartInitStates(h);
                xa.snapshot(f, "savePartInitStates");
                ja.savePartFinalStates(h);
                xa.snapshot(f, "savePartFinalStates");
                null != e ? ja.setLevelInitStates(h, e) : a.enable_level_init && (e = Ia.findLevelInitState(a.level_states, a.current_level.prefab_name), null != e && ja.setLevelInitStates(h, e));
                xa.snapshot(f, "setLevelInitStates");
                ja.applyConstraintConfig(a);
                xa.snapshot(f, "applyConstraintConfig");
                ja.applySpaceConfig(a);
                xa.snapshot(f, "applySpaceConfig");
                ja.setSpace(a, a.level.world.space);
                xa.snapshot(f, "setSpace");
                ja.updateConnectionPositions(a.level.connections);
                xa.snapshot(f, "setConnectionPositions");
                e = 0;
                for (b = h.body_entities; e < b.length;) {
                    var k = b[e];
                    ++e;
                    Xn.refresh(k)
                }
                xa.snapshot(f, "NapeSystem.refresh");
                e = 0;
                for (b = h.parts; e < b.length;) k = b[e], ++e, k.scale = k.entity.display.container.get_scaleX(), k.entity.display.container.set_alpha(0),
                    null != k.back_connection && k.back_connection.bitmap_container.container.set_alpha(0);
                null != h.various_objects_bitmap_container && h.various_objects_bitmap_container.container.set_alpha(0);
                xa.snapshot(f, "set alpha");
                a.level.state = ne.TransitionIn;
                xa.end(f);
                a.config.type == db.FlashDevelopment && (D.closeDebugMenus(a), D.openDebugMenus(a));
                if (d) {
                    d = 0;
                    for (f = a.level.parts; d < f.length;) h = f[d], ++d, h.transition_in_sound_played = !0, h.entity.display.container.set_alpha(1), null != h.back_connection && h.back_connection.bitmap_container.container.set_alpha(1);
                    null != a.level.various_objects_bitmap_container && a.level.various_objects_bitmap_container.container.set_alpha(1);
                    a.level.state = ne.Gameplay
                }
                return !0
            };
            ja.pickupUsefulData = function(a, b) {
                if (null != b.prefab_link) return w.trace("warning: entity shouldn't have prefab_link, all prefab_links should be flattened " + b.name, {
                    fileName: "LevelDo.hx",
                    lineNumber: 396,
                    className: "bikas.game.LevelDo",
                    methodName: "pickupUsefulData"
                }), !1;
                if ("shape" == b.name)
                    if (null != b.polygon) {
                        if (null != a.shape_polygon) return w.trace("warning: main level polygon shape is already defined", {
                            fileName: "LevelDo.hx",
                            lineNumber: 402,
                            className: "bikas.game.LevelDo",
                            methodName: "pickupUsefulData"
                        }), !1;
                        a.shape_polygon = b
                    } else {
                        if (null != b.bitmap_images) {
                            if (null != a.shape_bitmap) return w.trace("warning: main level bitmap shape is already defined", {
                                fileName: "LevelDo.hx",
                                lineNumber: 410,
                                className: "bikas.game.LevelDo",
                                methodName: "pickupUsefulData"
                            }), !1;
                            a.shape_bitmap = b
                        }
                    }
                else "center" == b.name && (a.center = b);
                if (null != b.group) {
                    var c = 0;
                    for (b = b.group.entities; c < b.length;) {
                        var d = b[c];
                        ++c;
                        if (!ja.pickupUsefulData(a,
                                d)) return !1
                    }
                } else a.all_entities.push(b);
                return !0
            };
            ja.createPartsAndConnections = function(a, b, c) {
                if (null != b.prefab_link) return w.trace("warning: entity shouldn't have prefab_link, all prefab_links should be flattened " + b.name, {
                    fileName: "LevelDo.hx",
                    lineNumber: 439,
                    className: "bikas.game.LevelDo",
                    methodName: "createPartsAndConnections"
                }), !1;
                if (null != a.shape_bitmap) {
                    var d = a.shape_bitmap.bitmap_images.images[0].source_name;
                    if (c.exists(d)) a.shape_movie_clip_class = c.get(d);
                    else return w.trace("warning: movie clip equivalent does not exist for " +
                        d, {
                            fileName: "LevelDo.hx",
                            lineNumber: 445,
                            className: "bikas.game.LevelDo",
                            methodName: "createPartsAndConnections"
                        }), !1
                }
                d = function(a, b) {
                    var c = [];
                    b = b.slice();
                    for (var d = 0, e = a.parts; d < e.length;) {
                        var f = e[d];
                        ++d; - 1 != b.indexOf(f.entity) && (la.remove(b, f.entity), c.push(f))
                    }
                    for (d = 0; d < b.length;) f = b[d], ++d, e = new rt, e.entity = f, null == e.entity.body && w.trace("warning: entity " + f.name + " has no body", {
                            fileName: "LevelDo.hx",
                            lineNumber: 474,
                            className: "bikas.game.LevelDo",
                            methodName: "createPartsAndConnections"
                        }), f = e.entity.name.split(","),
                        2 == f.length && "L2" == Nc.removeSpacesAtStartAndEnd(f[1]) && (e.entity.body.setShapeFilters(pd.normal_layer2), e.is_layer2 = !0), e.all_connections = [], e.is_static_part = e.entity.body.isStatic(), a.parts.push(e), c.push(e);
                    return c
                };
                var e = b.name.split(","),
                    f = Nc.removeSpacesAtStartAndEnd(e[0]);
                if (-1 != f.indexOf("+")) {
                    f = f.split("+");
                    if (2 != f.length) return w.trace("warning: something went wrong with connection " + b.name, {
                            fileName: "LevelDo.hx",
                            lineNumber: 500,
                            className: "bikas.game.LevelDo",
                            methodName: "createPartsAndConnections"
                        }),
                        !1;
                    var h = b.parent.group.entities;
                    c = [];
                    for (var k = 0; k < f.length;) {
                        var m = f[k];
                        ++k;
                        for (var r = 0; r < h.length;) {
                            var g = h[r];
                            ++r;
                            if (null != g.body) {
                                var l = g.name.split(",");
                                0 < l.length && m == l[0] && c.push(g)
                            }
                        }
                    }
                    if (0 == c.length) return w.trace("warning: no entities found to be connected " + b.name, {
                        fileName: "LevelDo.hx",
                        lineNumber: 519,
                        className: "bikas.game.LevelDo",
                        methodName: "createPartsAndConnections"
                    }), !1;
                    if (1 == c.length) return w.trace("warning: couldn't find all entities described by " + b.name + " connection", {
                        fileName: "LevelDo.hx",
                        lineNumber: 522,
                        className: "bikas.game.LevelDo",
                        methodName: "createPartsAndConnections"
                    }), !1;
                    if (2 == c.length) {
                        k = !0;
                        f = h = !1;
                        2 == e.length && (h = "area_start" == Nc.removeSpacesAtStartAndEnd(e[1]), f = "area_end" == Nc.removeSpacesAtStartAndEnd(e[1]));
                        if (h || f)
                            for (m = 0, r = a.connections; m < r.length;)
                                if (g = r[m], ++m, null != g.part1 && null != g.part2 && -1 != c.indexOf(g.part1.entity) && -1 != c.indexOf(g.part2.entity)) {
                                    if (null == g.area)
                                        if (g.area = new Aq, g.part1.entity.body.isDynamic()) g.area.part = g.part1;
                                        else if (g.part2.entity.body.isDynamic()) g.area.part =
                                        g.part2;
                                    else return w.trace("warning: at least 1 part must be static for area " + g.entity.name, {
                                        fileName: "LevelDo.hx",
                                        lineNumber: 548,
                                        className: "bikas.game.LevelDo",
                                        methodName: "createPartsAndConnections"
                                    }), !1;
                                    h && (g.area.start = Id.copy(b.position));
                                    f && (g.area.end = Id.copy(b.position));
                                    g.area.bounds = H.createBoundsFrom2Points(g.area.start, g.area.end);
                                    H.pointInBounds(g.area.part.entity.position, g.area.bounds) || w.trace("warning: " + g.area.part.entity.name + " is outside of area bounds", {
                                        fileName: "LevelDo.hx",
                                        lineNumber: 561,
                                        className: "bikas.game.LevelDo",
                                        methodName: "createPartsAndConnections"
                                    });
                                    k = !1;
                                    break
                                } if (k) {
                            c = d(a, c);
                            d = new zq;
                            d.entity = b;
                            d.part1 = c[0];
                            d.part2 = c[1];
                            d.body1 = d.part1.entity.body;
                            d.body2 = d.part2.entity.body;
                            c[0].all_connections.push(d);
                            c[1].all_connections.push(d);
                            b = Ia.pointToVec(b.position);
                            if (2 == e.length)
                                if ("rot" == Nc.removeSpacesAtStartAndEnd(e[1])) d.connection_type = Rc.ConnectionRotator;
                                else if (-1 != e[1].indexOf("limit") || -1 != e[1].indexOf("circle")) d.connection_type = Rc.ConnectionRail;
                            else if (h ||
                                f) {
                                d.connection_type = Rc.ConnectionArea;
                                if (null == d.area)
                                    if (d.area = new Aq, d.part1.entity.body.isDynamic()) d.area.part = d.part1;
                                    else if (d.part2.entity.body.isDynamic()) d.area.part = d.part2;
                                else return w.trace("warning: at least 1 part must be static for area " + d.entity.name, {
                                    fileName: "LevelDo.hx",
                                    lineNumber: 604,
                                    className: "bikas.game.LevelDo",
                                    methodName: "createPartsAndConnections"
                                }), !1;
                                h && (d.area.start = Id.copy(d.entity.position), e = d.area.part.entity.body.get_position(), d.area.end = Ia.vecToPoint(e));
                                f && (e =
                                    d.area.part.entity.body.get_position(), d.area.start = Ia.vecToPoint(e), d.area.end = Id.copy(d.entity.position));
                                d.area.bounds = H.createBoundsFrom2Points(d.area.start, d.area.end)
                            } else w.trace("warning: unrecognized " + e[1], {
                                fileName: "LevelDo.hx",
                                lineNumber: 620,
                                className: "bikas.game.LevelDo",
                                methodName: "createPartsAndConnections"
                            }), d.connection_type = Rc.ConnectionPivot;
                            else d.connection_type = Rc.ConnectionPivot;
                            d.anchor1 = d.body1.worldPointToLocal(b);
                            d.anchor2 = d.body2.worldPointToLocal(b);
                            d.connection_type ==
                                Rc.ConnectionPivot || d.connection_type == Rc.ConnectionRail || d.connection_type == Rc.ConnectionRotator ? (d.pivot_joint = new ol(d.body1, d.body2, d.anchor1, d.anchor2), d.pivot_joint.set_stiff(!0)) : d.connection_type == Rc.ConnectionArea ? null != d.body1 && null != d.body2 && (d.body1.isDynamic() && d.body2.isDynamic() ? w.trace("warning: parts " + d.part1.entity.name + " and " + d.part2.entity.name + " can't be dynamic for " + d.entity.name, {
                                        fileName: "LevelDo.hx",
                                        lineNumber: 642,
                                        className: "bikas.game.LevelDo",
                                        methodName: "createPartsAndConnections"
                                    }) :
                                    d.body1.isDynamic() ? d.body1.set_allowRotation(!1) : d.body2.isDynamic() && d.body2.set_allowRotation(!1)) : w.trace("warning: unhandled " + E.string(d.connection_type), {
                                    fileName: "LevelDo.hx",
                                    lineNumber: 654,
                                    className: "bikas.game.LevelDo",
                                    methodName: "createPartsAndConnections"
                                });
                            a.connections.push(d)
                        }
                    } else 3 == c.length && (e = function(a, b) {
                            for (var c = 0; c < a.length;) {
                                var d = a[c];
                                ++c;
                                if ("line" == la.substr(d.name, 0, 4)) {
                                    var e = d.name.split("-");
                                    if (E.parseInt(e[1]) == b) return d
                                }
                            }
                            return null
                        }, f = e(c, 0), e = e(c, 1), null != f && null !=
                        e && (la.remove(c, e), c = d(a, c), d = new zq, d.part1 = c[0], d.part2 = c[1], d.body1 = d.part1.entity.body, d.body2 = d.part2.entity.body, d.body1.setShapeFilters(pd.no_interaction), c[0].all_connections.push(d), c[1].all_connections.push(d), c = Ia.pointToVec(b.position), b = d.body1.worldPointToLocal(c), c = d.body2.worldPointToLocal(c), h = Ia.pointToVec(e.position), e = d.body1.get_position().sub(h), f = -d.body1.get_position().sub(d.body2.get_position()).get_length(), h = h.sub(d.body2.get_position()).get_length(), d.line_joint = new Fq(d.body1,
                            d.body2, b, c, e, f, h), d.line_joint.set_stiff(!0), a.connections.push(d)))
                } else if (null != b.group)
                    for (d = 0, b = b.group.entities; d < b.length;)
                        if (e = b[d], ++d, !ja.createPartsAndConnections(a, e, c)) return !1;
                return !0
            };
            ja.saveBranchInformation = function(a) {
                for (var b = 50, c = null, d = c = function(a) {
                        --b;
                        if (0 >= b) return w.trace("warning: loop detected in part branching, some part is connected at least 2 times towards the static part", {
                                fileName: "LevelDo.hx",
                                lineNumber: 729,
                                className: "bikas.game.LevelDo",
                                methodName: "saveBranchInformation"
                            }),
                            !1;
                        a.forward_parts = [];
                        a.forward_connections = [];
                        for (var d = 0, e = a.all_connections; d < e.length;) {
                            var f = e[d];
                            ++d;
                            if (f.part1 != a && f.part1 != a.back_part) {
                                if (a.forward_parts.push(f.part1), a.forward_connections.push(f), f.part1.back_part = a, f.part1.back_connection = f, !c(f.part1)) return !1
                            } else if (f.part2 != a && f.part2 != a.back_part && (a.forward_parts.push(f.part2), a.forward_connections.push(f), f.part2.back_part = a, f.part2.back_connection = f, !c(f.part2))) return !1
                        }
                        return !0
                    }, e = 0, f = a.parts; e < f.length;) {
                    var h = f[e];
                    ++e;
                    if (h.is_static_part &&
                        (h.back_part = null, h.back_connection = null, !d(h))) return !1
                }
                d = 0;
                for (a = a.parts; d < a.length;)
                    if (e = a[d], ++d, !e.is_static_part && null == e.back_part) return w.trace("error: part " + e.entity.name + " does not have back_part", {
                        fileName: "LevelDo.hx",
                        lineNumber: 769,
                        className: "bikas.game.LevelDo",
                        methodName: "saveBranchInformation"
                    }), !1;
                return !0
            };
            ja.createCustomConstraints = function(a, b) {
                for (var c = 0, d = a.parts; c < d.length;) {
                    var e = d[c];
                    ++c;
                    if (null != e.back_part && e.back_part.is_static_part)
                        if (e.back_connection.connection_type ==
                            Rc.ConnectionRail && null != e.back_connection.pivot_joint) {
                            var f = new Wa;
                            e.back_connection.part1 == e ? f.set(e.back_connection.pivot_joint.get_anchor1()) : e.back_connection.part2 == e && f.set(e.back_connection.pivot_joint.get_anchor2());
                            var h = e.entity.position.x - e.entity.body.get_position().get_x(),
                                k = e.entity.position.y - e.entity.body.get_position().get_y();
                            h = new Wa(h, k);
                            k = f.sub(h);
                            var m = -Math.PI / 4,
                                r = Math.PI / 4,
                                g = Mf.RailLimited,
                                l = !1,
                                n = e.back_connection.entity.name.split(",");
                            if (1 < n.length)
                                for (var p = 0; p < n.length;) {
                                    var x =
                                        n[p];
                                    ++p; - 1 != x.indexOf("limit") ? (g = Mf.RailLimited, x = Nc.removeSpacesAtStartAndEnd(x).split(" "), 5 <= x.length && (m = .017453292519943 * E.parseFloat(x[2]), r = .017453292519943 * E.parseFloat(x[4])), 6 == x.length && "+rot" == x[5] && (l = !0)) : -1 != x.indexOf("circle") && (g = Mf.RailCircle, x = Nc.removeSpacesAtStartAndEnd(x).split(" "), 2 == x.length && "+rot" == x[1] && (l = !0))
                                }
                            if (g == Mf.RailLimited && m > r) return w.trace("warning: from_angle is higher than to_angle for part " + e.entity.name, {
                                fileName: "LevelDo.hx",
                                lineNumber: 877,
                                className: "bikas.game.LevelDo",
                                methodName: "createCustomConstraints"
                            }), !1;
                            n = new tt;
                            n.type = g;
                            n.part = e;
                            n.marker_center = e.entity.body.localPointToWorld(f);
                            n.local_body_center = h;
                            n.radius = k.get_length();
                            n.type == Mf.RailLimited ? (f = new Gq(e.back_part.entity.body, e.entity.body, m, r, 1), f.set_stiff(!1), f.set_frequency(100), f.set_damping(0), e.back_connection.angle_joint = f) : n.type != Mf.RailCircle && w.trace("warning: unhandled type " + E.string(n.type), {
                                fileName: "LevelDo.hx",
                                lineNumber: 908,
                                className: "bikas.game.LevelDo",
                                methodName: "createCustomConstraints"
                            });
                            e.back_connection.rail = n;
                            a.rails.push(n);
                            f = k.get_length();
                            f = new ad(ad.rect(0, 0, 20, f), dk.normal, pd.no_interaction);
                            f.rotate(k.get_angle() - Math.PI / 2);
                            f.translate(h);
                            l ? (h = new Ag, h.get_position().set_x(e.entity.body.get_position().get_x()), h.get_position().set_y(e.entity.body.get_position().get_y()), f.set_material(new ik(0, 0, 0, .03, 0)), h.get_shapes().add(f), e.entity.body == e.back_connection.body1 ? (null != e.back_connection.angle_joint && e.back_connection.angle_joint.set_body1(h), e.back_connection.pivot_joint.set_body1(h)) :
                                    e.entity.body == e.back_connection.body2 ? (null != e.back_connection.angle_joint && e.back_connection.angle_joint.set_body2(h), e.back_connection.pivot_joint.set_body2(h)) : w.trace("warning: something went wrong", {
                                        fileName: "LevelDo.hx",
                                        lineNumber: 957,
                                        className: "bikas.game.LevelDo",
                                        methodName: "createCustomConstraints"
                                    }), e.back_connection.rail_rot_pivot_joint = new ol(e.entity.body, h, n.local_body_center, n.local_body_center), e.back_connection.rail_rot_pivot_joint.set_stiff(!0), k = new st, k.body = h, e.additional_parts.push(k)) :
                                e.entity.body.get_shapes().add(f)
                        } else if (e.back_connection.connection_type == Rc.ConnectionArea && null != e.back_connection.area)
                        for (h = e.back_connection.area, f = h.bounds.max_x - h.bounds.min_x + 50, m = h.bounds.max_y - h.bounds.min_y + 50, k = dk.normal, l = pd.area_bodies, r = new Ag(Pc.get_STATIC()), g = new Ag(Pc.get_STATIC()), n = new Ag(Pc.get_STATIC()), p = new Ag(Pc.get_STATIC()), r.get_shapes().add(new ad(ad.box(f, 30), k, l)), g.get_shapes().add(new ad(ad.box(30, m), k, l)), n.get_shapes().add(new ad(ad.box(f, 30), k, l)), p.get_shapes().add(new ad(ad.box(30,
                                m), k, l)), r.get_position().set_x(h.bounds.min_x + f / 2 - 10), r.get_position().set_y(h.bounds.min_y - 15 - 10), g.get_position().set_x(h.bounds.max_x + 15 + 10), g.get_position().set_y(h.bounds.min_y + m / 2 - 10), n.get_position().set_x(h.bounds.min_x + f / 2 - 30 - 10), n.get_position().set_y(h.bounds.max_y + 15 + 10), p.get_position().set_x(h.bounds.min_x - 15 - 10), p.get_position().set_y(h.bounds.min_y + m / 2 - 30 - 10), h.walls.push(r), h.walls.push(g), h.walls.push(n), h.walls.push(p), f = e.entity.position.x, m = e.entity.body.get_position().get_x(),
                            h.center_offset.x = f - m, f = e.entity.position.y, m = e.entity.body.get_position().get_y(), h.center_offset.y = f - m, h.circle_shape = new bk(10, new Wa(h.center_offset.x, h.center_offset.y), k, l), e.entity.body.get_shapes().add(h.circle_shape), h.circle_shape.set_group(new Eq(!1)), h.circle_shape.get_group().set_group(b), e = 0, k = h.walls; e < k.length;) l = k[e], ++e, l.set_group(h.circle_shape.get_group())
                }
                return !0
            };
            ja.setupSoundSettingsForParts = function(a) {
                var b = 100 * Math.PI / 8,
                    c = 0;
                for (a = a.parts; c < a.length;) {
                    var d = a[c];
                    ++c;
                    if (!d.is_static_part &&
                        null != d.back_connection) {
                        var e = 0;
                        switch (Q.enumIndex(d.back_connection.connection_type)) {
                            case 0:
                            case 1:
                            case 2:
                                null != d.back_connection.pivot_joint && (d.back_connection.body1 == d.entity.body ? e = d.back_connection.pivot_joint.get_anchor1().get_length() : d.back_connection.body2 == d.entity.body && (e = d.back_connection.pivot_joint.get_anchor2().get_length()));
                                break;
                            case 3:
                                e = 0
                        }
                        0 < e && (d.sound_rotation_click_angle = 2 * Math.PI / (2 * Math.PI * e / b))
                    }
                }
                return !0
            };
            ja.createGraphics = function(a, b, c, d, e, f, h, k) {
                var m = xa.start(Dd.None,
                        "createGraphics"),
                    r = a.cache.level_filters,
                    g = null;
                if (k == Sb.LevelGraphicsUseSavedBitmaps && (g = D.findExportedLevelImagePack(a, a.current_level.prefab_name), null == g)) return w.trace("warning: could not find level image pack: " + a.current_level.prefab_name, {
                    fileName: "LevelDo.hx",
                    lineNumber: 1114,
                    className: "bikas.game.LevelDo",
                    methodName: "createGraphics"
                }), !1;
                var l = sa.level_highlight_color;
                if (null == b.shape_polygon) return w.trace("warning: shape_polygon is not defined", {
                    fileName: "LevelDo.hx",
                    lineNumber: 1126,
                    className: "bikas.game.LevelDo",
                    methodName: "createGraphics"
                }), !1;
                if (null == b.shape_bitmap) return w.trace("warning: shape_bitmap is not defined", {
                    fileName: "LevelDo.hx",
                    lineNumber: 1130,
                    className: "bikas.game.LevelDo",
                    methodName: "createGraphics"
                }), !1;
                b.level_bounds = Va.convertRectangle(b.shape_polygon.display.container.getBounds(b.shape_polygon.container_link));
                xb.scaleRectangle(b.level_bounds, f);
                var n = b.shape_bitmap.display.container,
                    p = b.shape_bitmap.bitmap_images.images[0].bitmap_data_source,
                    x = new W(p.center_point.x -
                        p.bitmap_data.width / 2, p.center_point.y - p.bitmap_data.height / 2),
                    z = n.parent;
                z.removeChild(n);
                var u = new Ya;
                u.scale(f, f);
                var q = new S,
                    L = new S,
                    A = new S,
                    Ka = new S;
                xa.snapshot(m, "create misc objects");
                if (k == Sb.LevelGraphicsFlashDrawn || k == Sb.LevelGraphicsCanvasDrawn) {
                    var v = Q.createInstance(b.shape_movie_clip_class, []);
                    v.set_scaleX(v.set_scaleY(n.get_scaleX()));
                    v.set_x(n.get_x());
                    v.set_y(n.get_y());
                    var y = v.getBounds(v);
                    x = new W(-y.x - v.get_width() / 2, -y.y - v.get_height() / 2);
                    var t = new Ke;
                    t.set_x(b.shape_polygon.position.x);
                    t.set_y(b.shape_polygon.position.y);
                    t.get_graphics().beginBitmapFill(Xa.paper.bitmap_data, u, !0, !0);
                    L.get_graphics().beginFill(0, 1);
                    Ka.get_graphics().beginFill(0, 0);
                    Ka.get_graphics().lineStyle(1, 16777215, 1);
                    var B = new W(0, 0),
                        F = new $d;
                    F.scale_x = f;
                    F.scale_y = f;
                    for (var pa = !0, J = 0, K = b.shape_polygon.polygon.points; J < K.length;) {
                        var R = K[J];
                        ++J;
                        var Ca = H.copyPoint(R);
                        xb.applyTransformToPoint(Ca, B, F);
                        b.transformed_polygon_points.push(Ca);
                        pa ? (t.get_graphics().moveTo(Ca.x, Ca.y), Ka.get_graphics().moveTo(Ca.x, Ca.y),
                            L.get_graphics().moveTo(Ca.x, Ca.y), pa = !1) : (t.get_graphics().lineTo(Ca.x, Ca.y), Ka.get_graphics().lineTo(Ca.x, Ca.y), L.get_graphics().lineTo(Ca.x, Ca.y))
                    }
                    b.shape_polygon_position = H.copyPoint(b.shape_polygon.position);
                    b.transformed_polygon_points_bounds = Ub.getBoundsFromSeveralPolygons([b.transformed_polygon_points]);
                    t.get_graphics().endFill();
                    L.get_graphics().endFill();
                    t.set_blendMode(9);
                    t.set_scaleX(1 / f);
                    t.set_scaleY(1 / f);
                    q.set_scaleX(q.get_scaleX() * f);
                    q.set_scaleY(q.get_scaleY() * f);
                    A.addChild(v);
                    A.addChild(t);
                    q.addChild(A);
                    q.set_filters(r.regular_part_filters);
                    xa.snapshot(m, "draw textured polygon, mask and wireframe")
                } else if (k == Sb.LevelGraphicsUseSavedBitmaps) {
                    L.get_graphics().beginFill(0, 1);
                    var X = new W(0, 0),
                        oa = new $d;
                    oa.scale_x = f;
                    oa.scale_y = f;
                    for (var N = !0, O = 0, C = b.shape_polygon.polygon.points; O < C.length;) {
                        var G = C[O];
                        ++O;
                        var P = H.copyPoint(G);
                        xb.applyTransformToPoint(P, X, oa);
                        N ? (L.get_graphics().moveTo(P.x, P.y), N = !1) : L.get_graphics().lineTo(P.x, P.y)
                    }
                    L.get_graphics().endFill()
                }
                var la = null;
                if (k == Sb.LevelGraphicsCanvasDrawn) {
                    var T =
                        A.getChildAt(0);
                    la = Ji.extractPolygonFillsFromGraphics(T.get_graphics(), "level_shape");
                    var U = new W(0, 0),
                        Y = new $d;
                    Y.scale_x = 2;
                    Y.scale_y = 2;
                    for (var bb = 0; bb < la.length;) {
                        var le = la[bb];
                        ++bb;
                        for (var Lc = 0, M = le.points; Lc < M.length;) {
                            var aa = M[Lc];
                            ++Lc;
                            var ca = H.copyPoint(aa);
                            ca.x += x.x;
                            ca.y += x.y;
                            xb.applyTransformToPoint(ca, U, Y);
                            aa.x = ca.x;
                            aa.y = ca.y
                        }
                    }
                    xa.snapshot(m, "html5: draw final shape")
                }
                for (var ra = function(a, b, c, d, e) {
                        d.removeChild(b);
                        e.addChild(b);
                        c.set_mask(b);
                        c = Va.convertRectangle(b.getBounds(e));
                        xb.scaleRectangle(c,
                            a);
                        xb.expandRectangle(c, 10 * a);
                        a = V.createAndDrawSource(e, !0, !1, 0, 0, c);
                        e.removeChild(b);
                        d.addChild(b);
                        return a
                    }, Z = 0, ha = b.parts; Z < ha.length;) {
                    var ba = ha[Z];
                    ++Z;
                    ba.is_layer2 ? q.set_filters(r.layer2_part_filters) : q.set_filters(r.regular_part_filters);
                    var da = null;
                    switch (Q.enumIndex(k)) {
                        case 0:
                            da = ra(f, ba.entity.display.container, A, z, q);
                            ba.bitmap_data_source_is_generated = !0;
                            break;
                        case 1:
                            da = Cd.drawLevelPartAndMakeBitmapDataSource(ba, b.shape_polygon.position, la, 2);
                            ba.bitmap_data_source_is_generated = !0;
                            break;
                        case 2:
                            da = D.findCurrentExportedLevelImage(g, a.current_level.prefab_name + "_part_" + ba.entity.name).source, ba.bitmap_data_source_is_generated = !1
                    }
                    var ea = Ha.createAndAddBitmap(ba.entity, "", da);
                    ba.bitmap_data_source = da;
                    k == Sb.LevelGraphicsFlashDrawn ? (ea.bitmap_data_source.center_point.x += ba.entity.position.x * f, ea.bitmap_data_source.center_point.y += ba.entity.position.y * f) : k != Sb.LevelGraphicsCanvasDrawn && k == Sb.LevelGraphicsUseSavedBitmaps && (ea.bitmap_data_source.center_point.x = da.center_point.x, ea.bitmap_data_source.center_point.y =
                        da.center_point.y);
                    ck.refresh(ba.entity);
                    ea.bitmap.smoothing = !0;
                    ea.bitmap.pixelSnapping = 2;
                    ba.entity.display.container.set_scaleX(1 / f);
                    ba.entity.display.container.set_scaleY(1 / f);
                    k == Sb.LevelGraphicsUseSavedBitmaps ? (ba.entity.display.container.set_scaleX(1 / g.game_graphics_scale), ba.entity.display.container.set_scaleY(1 / g.game_graphics_scale)) : k == Sb.LevelGraphicsCanvasDrawn && (ba.entity.display.container.set_scaleX(1 / ea.bitmap_data_source.scale), ba.entity.display.container.set_scaleY(1 / ea.bitmap_data_source.scale));
                    if (gc.draw_part_name) {
                        var ka = Ea.drawTextWithBackgroundToSource(ba.entity.name, 12, 0, 0, !0),
                            gb = V.createBitmapContainer(ka);
                        ba.entity.display.container.addChild(gb.container)
                    }
                    if (gc.draw_part_point_indexes)
                        for (var fa = 0, yc = ba.entity.polygon.points.length; fa < yc;) {
                            var qa = fa++,
                                bd = ba.entity.polygon.points[qa],
                                ia = Ea.drawTextWithBackgroundToSource(qa + "", 10),
                                na = V.createBitmapContainer(ia);
                            na.container.set_x(bd.x * f);
                            na.container.set_y(bd.y * f);
                            ba.entity.display.container.addChild(na.container)
                        }
                    ba.entity.body.get_type() ==
                        Pc.get_STATIC() && Ea.setBrightness(ea.bitmap, -.2);
                    Wn.remove(ba.entity)
                }
                xa.snapshot(m, "draw parts and convert to bitmaps");
                for (var Fc = 0, Aa = b.parts; Fc < Aa.length;) {
                    var ma = Aa[Fc];
                    ++Fc;
                    if (null != ma.entity && null != ma.entity.polygon)
                        for (var Gc = ma.entity.polygon.points, Ga = 0, wa = Gc.length; Ga < wa;) {
                            var ob = Ga++,
                                ua = new xq,
                                za = null,
                                ta = null;
                            0 == ob ? (za = Gc[Gc.length - 1], ua.p1_index = Gc.length - 1) : (za = Gc[ob - 1], ua.p1_index = ob - 1);
                            ta = Gc[ob];
                            ua.p2_index = ob;
                            ua.angle = H.getAngleBetweenPoints(za, ta);
                            ua.p1 = new W(za.x + ma.entity.position.x,
                                za.y + ma.entity.position.y);
                            ua.p2 = new W(ta.x + ma.entity.position.x, ta.y + ma.entity.position.y);
                            ma.lines.push(ua)
                        }
                }
                xa.snapshot(m, "collect lines");
                D.refreshGameAssetCache(a);
                xa.snapshot(m, "refresh cache");
                for (var Da = 0, Fa = b.connections; Da < Fa.length;) {
                    var ya = Fa[Da];
                    ++Da;
                    var Ia = a.cache,
                        va = null;
                    switch (Q.enumIndex(ya.connection_type)) {
                        case 0:
                            va = Ia.connection_pivot;
                            break;
                        case 1:
                            va = Ia.connection_rotator;
                            break;
                        case 2:
                            va = null != ya.rail_rot_pivot_joint ? Ia.connection_rail_rotator : Ia.connection_rail;
                            break;
                        case 3:
                            va =
                                Ia.connection_area
                    }
                    ya.part1.is_layer2 || ya.part2.is_layer2 ? (ya.regular_source = va.regular_layer2, ya.snapped_source = va.snapped_layer2) : (ya.regular_source = va.regular, ya.snapped_source = va.snapped);
                    var Pa = V.createBitmapContainer(ya.regular_source);
                    ya.scale = 1 / f;
                    Pa.container.set_scaleX(ya.scale);
                    Pa.container.set_scaleY(ya.scale);
                    ya.bitmap_container = Pa;
                    z.addChild(ya.bitmap_container.container)
                }
                xa.snapshot(m, "create connections");
                for (var Ja = 0, Na = b.parts; Ja < Na.length;) {
                    var Oa = Na[Ja];
                    ++Ja;
                    if (Oa.is_layer2) {
                        var Qa =
                            Oa.entity.display.container.parent;
                        Qa.setChildIndex(Oa.entity.display.container, Qa.get_numChildren() - 1)
                    }
                }
                for (var Ta = 0, ab = b.parts; Ta < ab.length;) {
                    var db = ab[Ta];
                    ++Ta;
                    if (db.is_layer2)
                        for (var Pb = 0, Sa = db.all_connections; Pb < Sa.length;) {
                            var hb = Sa[Pb];
                            ++Pb;
                            var pb = hb.bitmap_container.container;
                            pb.parent.setChildIndex(pb, pb.parent.get_numChildren() - 1)
                        }
                }
                xa.snapshot(m, "push parts to display top");
                if (k == Sb.LevelGraphicsFlashDrawn) {
                    for (var $a = new S, Za = 0, $b = b.parts; Za < $b.length;) {
                        var jb = $b[Za];
                        ++Za;
                        if (null != jb.back_connection &&
                            null != jb.back_connection.area) {
                            var Wa = jb.back_connection.area,
                                kb = Cc.area_rounded_rectangle_border_size,
                                Ua = D.drawTexturedRoundedRectangle(Xa.paper.bitmap_data, u, l, Wa.bounds.min_x - Cc.area_connection_circle_radius, Wa.bounds.min_y - Cc.area_connection_circle_radius, Wa.bounds.max_x - Wa.bounds.min_x + 2 * Cc.area_connection_circle_radius, Wa.bounds.max_y - Wa.bounds.min_y + 2 * Cc.area_connection_circle_radius, kb, kb, !0);
                            Ua.set_scaleX(f);
                            Ua.set_scaleY(f);
                            var fb = Va.copyGlowFilter(sa.area_filter, sa.area_shade_color);
                            Ea.scaleGlowFilter(fb,
                                f);
                            var eb = Va.createBrightnessFilter(16);
                            Ua.set_filters([eb, fb]);
                            $a.addChild(Ua)
                        }
                    }
                    xa.snapshot(m, "create area sprites");
                    for (var cb = 0, ib = b.parts; cb < ib.length;) {
                        var Ac = ib[cb];
                        ++cb;
                        if (null != Ac.back_connection && null != Ac.back_connection.rail) {
                            var Ra = Ac.back_connection.rail;
                            if (Ra.type == Mf.RailLimited) {
                                var rb = Ac.entity.body.get_position().add(Ra.local_body_center).sub(Ra.marker_center).get_angle(),
                                    wb = Ac.back_connection.angle_joint.get_jointMin(),
                                    ub = Ac.back_connection.angle_joint.get_jointMax(),
                                    yb = D.createRailSprite(Ra.marker_center.get_x(),
                                        Ra.marker_center.get_y(), Ra.radius, H.normalizeAngle(wb + rb), H.normalizeAngle(ub + rb), l, sa.rail_shade_color, f);
                                $a.addChild(yb)
                            } else if (Ra.type == Mf.RailCircle) {
                                Ac.entity.body.get_position().add(Ra.local_body_center).sub(Ra.marker_center).get_angle();
                                var qb = D.createCircleSprite(Ra.marker_center.get_x(), Ra.marker_center.get_y(), Ra.radius, l, sa.rail_shade_color, f);
                                $a.addChild(qb)
                            } else w.trace("warning: unhandled " + E.string(Ra.type), {
                                fileName: "LevelDo.hx",
                                lineNumber: 1660,
                                className: "bikas.game.LevelDo",
                                methodName: "createGraphics"
                            })
                        }
                    }
                    xa.snapshot(m,
                        "create rail sprites");
                    0 < $a.get_numChildren() && (b.various_objects_bitmap_container = D.createSingleBitmapForVariousObjectsContainedInSprite($a, f, d, e), h.addChildAt(b.various_objects_bitmap_container.container, 0), $a.removeChildren(), $a = null, b.various_objects_generated = !0);
                    xa.snapshot(m, "convert all area and rail sprites to single bitmap")
                } else if (k == Sb.LevelGraphicsCanvasDrawn) {
                    var lb = La.get_document().createElement("canvas");
                    lb.width = 1280;
                    lb.height = 720;
                    var tb = lb.getContext("2d", "2d");
                    tb.translate(640,
                        360);
                    for (var vb = 0, nc = b.parts; vb < nc.length;) {
                        var Rb = nc[vb];
                        ++vb;
                        null != Rb.back_connection && null != Rb.back_connection.area && w.trace("warning: area canvas drawing is not supported in html5", {
                            fileName: "LevelDo.hx",
                            lineNumber: 1696,
                            className: "bikas.game.LevelDo",
                            methodName: "createGraphics"
                        })
                    }
                    for (var Bb = 0, Db = b.parts; Bb < Db.length;) {
                        var nb = Db[Bb];
                        ++Bb;
                        if (null != nb.back_connection && null != nb.back_connection.rail) {
                            var sb = nb.back_connection.rail;
                            if (sb.type == Mf.RailLimited) {
                                var nd = nb.entity.body.get_position().add(sb.local_body_center).sub(sb.marker_center).get_angle(),
                                    Fb = nb.back_connection.angle_joint.get_jointMin(),
                                    Gb = nb.back_connection.angle_joint.get_jointMax(),
                                    Qb = sa.rail_end_circles_radius,
                                    Kb = 1.2 * sa.rail_thickness;
                                Cd.drawRailGraphics(tb, 2 * sb.marker_center.get_x(), 2 * sb.marker_center.get_y(), 2 * sb.radius, H.normalizeAngle(Fb + nd), H.normalizeAngle(Gb + nd), 7960953, 2.7 * Qb, 2.7 * Qb, 3.7 * Kb);
                                Cd.drawRailGraphics(tb, 2 * sb.marker_center.get_x(), 2 * sb.marker_center.get_y(), 2 * sb.radius, H.normalizeAngle(Fb + nd), H.normalizeAngle(Gb + nd), l, 2 * Qb, 2 * Qb, 2 * Kb)
                            } else sb.type == Mf.RailCircle ?
                                w.trace("warning: rail circle drawing is not supported in html5", {
                                    fileName: "LevelDo.hx",
                                    lineNumber: 1752,
                                    className: "bikas.game.LevelDo",
                                    methodName: "createGraphics"
                                }) : w.trace("warning: unhandled " + E.string(sb.type), {
                                    fileName: "LevelDo.hx",
                                    lineNumber: 1754,
                                    className: "bikas.game.LevelDo",
                                    methodName: "createGraphics"
                                })
                        }
                    }
                    var Jb = Cd.createBitmapDataSourceForCanvas(lb, new W(640, 360), new mj(1280, 720), 2);
                    b.various_objects_bitmap_container = V.createBitmapContainer(Jb);
                    var Ib = b.various_objects_bitmap_container.container;
                    Ib.set_scaleX(Ib.get_scaleX() / 2);
                    var Nb = b.various_objects_bitmap_container.container;
                    Nb.set_scaleY(Nb.get_scaleY() / 2);
                    h.addChildAt(b.various_objects_bitmap_container.container, 0);
                    b.various_objects_generated = !1;
                    xa.snapshot(m, "draw rails in canvas")
                } else if (k == Sb.LevelGraphicsUseSavedBitmaps) {
                    var Ab = D.findCurrentExportedLevelImage(g, a.current_level.prefab_name + "_various");
                    if (null != Ab) {
                        b.various_objects_bitmap_container = V.createBitmapContainer(Ab.source);
                        var Tb = b.various_objects_bitmap_container.container;
                        Tb.set_scaleX(Tb.get_scaleX() / g.game_graphics_scale);
                        var Yb = b.various_objects_bitmap_container.container;
                        Yb.set_scaleY(Yb.get_scaleY() / g.game_graphics_scale);
                        h.addChildAt(b.various_objects_bitmap_container.container, 0);
                        b.various_objects_generated = !1
                    }
                }
                var Ma = new Hc;
                b.end = Ma;
                Ma.container = new S;
                q.set_filters(r.regular_part_filters);
                if (k == Sb.LevelGraphicsFlashDrawn) {
                    var Lb = ra(f, b.shape_polygon.display.container, A, z, q),
                        Vb = V.createBitmapContainer(Lb);
                    Ma.bounds = Va.convertRectangle(Vb.container.getBounds(Vb.container));
                    xb.scaleRectangle(Ma.bounds, 1 / f);
                    Vb.container.set_scaleX(1 / f);
                    Vb.container.set_scaleY(1 / f);
                    Ma.shape = Vb;
                    Ma.shape_generated = !0;
                    xa.snapshot(m, "create completed (end) shape bitmap")
                } else if (k == Sb.LevelGraphicsCanvasDrawn) {
                    var Cb = Cd.drawFinalShapeAndMakeBitmapDataSource(b.shape_polygon.position, b.shape_polygon.polygon.points, la, x, 2);
                    Cb.center_point.x -= b.shape_polygon.position.x * Cb.scale;
                    Cb.center_point.y -= b.shape_polygon.position.y * Cb.scale;
                    Ma.shape = V.createBitmapContainer(Cb);
                    var Xb = Ma.shape.container;
                    Xb.set_scaleX(Xb.get_scaleX() / Cb.scale);
                    var od = Ma.shape.container;
                    od.set_scaleY(od.get_scaleY() / Cb.scale);
                    Ma.bounds = Va.convertRectangle(Ma.shape.container.getBounds(Ma.shape.container));
                    xb.scaleRectangle(Ma.bounds, 1 / Cb.scale);
                    Ma.shape_generated = !0;
                    xa.snapshot(m, "create completed (end) shape bitmap")
                } else if (k == Sb.LevelGraphicsUseSavedBitmaps) {
                    var bc = D.findCurrentExportedLevelImage(g, a.current_level.prefab_name + "_final");
                    if (null != bc) {
                        Ma.shape = V.createBitmapContainer(bc.source);
                        var ec = Ma.shape.container;
                        ec.set_scaleX(ec.get_scaleX() / g.game_graphics_scale);
                        var ac = Ma.shape.container;
                        ac.set_scaleY(ac.get_scaleY() / g.game_graphics_scale);
                        Ma.bounds = Va.convertRectangle(Ma.shape.container.getBounds(Ma.shape.container));
                        xb.scaleRectangle(Ma.bounds, 1 / g.game_graphics_scale);
                        Ma.shape_generated = !1
                    } else return w.trace("warning: did not find " + a.current_level.prefab_name + "_final", {
                        fileName: "LevelDo.hx",
                        lineNumber: 1867,
                        className: "bikas.game.LevelDo",
                        methodName: "createGraphics"
                    }), !1
                }
                Ma.end_shape_width = Ma.shape.bitmap.get_width();
                Ma.end_shape_height = Ma.shape.bitmap.get_height();
                Ma.end_shape_scroll_rect.x = 0;
                Ma.end_shape_scroll_rect.y = 0;
                Ma.end_shape_scroll_rect.width = Ma.end_shape_width;
                Ma.end_shape_scroll_rect.height = 0;
                Ma.shape.bitmap.set_scrollRect(Ma.end_shape_scroll_rect);
                var cc = !0,
                    Eb = !1;
                null == a.config.html5_device || a.config.html5_device.desktop || (cc = !1, Eb = !0);
                Ma.shape_container = new S;
                cc ? (L.set_x(n.get_x() - x.x), L.set_y(n.get_y() - x.y), L.set_scaleX(1 / f), L.set_scaleY(1 / f), Ma.shape_mask = L, xa.snapshot(m, "create and set mask"),
                    Ma.shine = V.createBitmapContainer(Xa.shine_rectangle), Ma.shine_generated = !1, Ma.shine.bitmap.set_width(Ma.bounds.width), Ma.shine.bitmap.set_x(-Ma.shine.bitmap.get_width() / 2), Ma.shine.bitmap.set_y(-Ma.shine.bitmap.get_height() / 2), Ma.shine_init_y = Ma.bounds.y - Ma.shine.source.bitmap_data.height / 2, Ma.shine.container.set_x(Ma.bounds.x + Ma.bounds.width / 2), Ma.shine.container.set_y(Ma.shine_init_y), xa.snapshot(m, "create shine bitmap")) : Ma.shine_generated = !1;
                for (var Hb = 0, jc = b.parts.length; Hb < jc;)
                    for (var Ob = Hb++,
                            Tc = b.parts[Ob], qc = Ob + 1, kc = b.parts.length; qc < kc;) {
                        var hc = qc++,
                            Vd = b.parts[hc];
                        if (Tc == Vd) w.trace("warning: can't happen", {
                            fileName: "LevelDo.hx",
                            lineNumber: 1964,
                            className: "bikas.game.LevelDo",
                            methodName: "createGraphics"
                        });
                        else
                            for (var oc = Tc.lines, ae = Vd.lines, Zb = 0; Zb < oc.length;) {
                                var ic = oc[Zb];
                                ++Zb;
                                for (var rc = 0; rc < ae.length;) {
                                    var dd = ae[rc];
                                    ++rc;
                                    var wc = Math.abs(H.angleDifferenceRad(ic.angle, dd.angle));
                                    if (!(wc < Math.PI - Math.PI / 360 && wc > Math.PI / 360)) {
                                        var dc = ic.p1,
                                            lc = ic.p2,
                                            mc = dd.p1,
                                            xc = dd.p2,
                                            Dc = H.distanceBetweenLineAndPoint(dc,
                                                lc, mc);
                                        if (!(1 < Dc)) {
                                            var Ec = H.distanceBetweenLineAndPoint(dc, lc, xc);
                                            if (!(1 < Ec)) {
                                                var Wb = null,
                                                    pc = null;
                                                H.isPointInLineRange(dc, lc, mc) && (Wb = mc);
                                                H.isPointInLineRange(dc, lc, xc) && (null == Wb ? Wb = xc : pc = xc);
                                                if (null == Wb || null == pc) {
                                                    var Nc = H.isPointInLineRange(mc, xc, dc),
                                                        Rc = H.isPointInLineRange(mc, xc, lc);
                                                    Nc && Rc ? (Wb = dc, pc = lc) : Nc ? pc = dc : Rc && (pc = lc)
                                                }
                                                if (!(null != Wb && null == pc || null == Wb && null == pc || null == Wb || null == pc || 1 > H.distanceBetweenPoints(Wb, pc))) {
                                                    if (.5 < Dc) {
                                                        var Wc = "part1:" + Tc.entity.name + ",line:" + ic.p1_index + "," + ic.p2_index,
                                                            Yc = "part2:" + Vd.entity.name + ",line:" + dd.p1_index + "," + dd.p2_index;
                                                        w.trace("warning: lines are too far apart (not snapped properly?):", {
                                                            fileName: "LevelDo.hx",
                                                            lineNumber: 2059,
                                                            className: "bikas.game.LevelDo",
                                                            methodName: "createGraphics"
                                                        });
                                                        w.trace("\t" + Wc, {
                                                            fileName: "LevelDo.hx",
                                                            lineNumber: 2060,
                                                            className: "bikas.game.LevelDo",
                                                            methodName: "createGraphics"
                                                        });
                                                        w.trace("\t" + Yc, {
                                                            fileName: "LevelDo.hx",
                                                            lineNumber: 2061,
                                                            className: "bikas.game.LevelDo",
                                                            methodName: "createGraphics"
                                                        })
                                                    }
                                                    if (.5 < Ec) {
                                                        var Uc = "part1:" + Tc.entity.name +
                                                            ",line:" + ic.p1_index + "," + ic.p2_index,
                                                            Ic = "part2:" + Vd.entity.name + ",line:" + dd.p1_index + "," + dd.p2_index;
                                                        w.trace("warning: lines are too far apart (not snapped properly?):", {
                                                            fileName: "LevelDo.hx",
                                                            lineNumber: 2066,
                                                            className: "bikas.game.LevelDo",
                                                            methodName: "createGraphics"
                                                        });
                                                        w.trace("\t" + Uc, {
                                                            fileName: "LevelDo.hx",
                                                            lineNumber: 2067,
                                                            className: "bikas.game.LevelDo",
                                                            methodName: "createGraphics"
                                                        });
                                                        w.trace("\t" + Ic, {
                                                            fileName: "LevelDo.hx",
                                                            lineNumber: 2068,
                                                            className: "bikas.game.LevelDo",
                                                            methodName: "createGraphics"
                                                        })
                                                    }
                                                    var Jc =
                                                        new xq;
                                                    Jc.p1 = H.copyPoint(Wb);
                                                    Jc.p2 = H.copyPoint(pc);
                                                    b.end.line_overlaps.push(Jc)
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                    }
                xa.snapshot(m, "collect line overlaps");
                if (k == Sb.LevelGraphicsFlashDrawn) {
                    var Sc = new Qc(16777215, 1, 10, 10, 5, 2);
                    Ea.scaleGlowFilter(Sc, f);
                    Ka.set_filters([Sc]);
                    var uc = D.drawEndLines(b.end, f),
                        vc = new S;
                    uc.set_x(-n.get_x() * f);
                    uc.set_y(-n.get_y() * f);
                    Ka.set_x(-x.x * f);
                    Ka.set_y(-x.y * f);
                    vc.addChild(uc);
                    vc.addChild(Ka);
                    var ug = Math.round(20 * f),
                        Oc = V.createAndDrawSource(vc, !0, !1, ug, ug);
                    Ma.wireframe = V.createBitmapContainer(Oc);
                    Ma.wireframe.container.set_x(n.get_x());
                    Ma.wireframe.container.set_y(n.get_y());
                    Ma.wireframe.container.set_scaleX(1 / f);
                    Ma.wireframe.container.set_scaleY(1 / f);
                    uc.get_graphics().clear();
                    vc.removeChildren();
                    xa.snapshot(m, "draw wireframe bitmap")
                } else if (k != Sb.LevelGraphicsCanvasDrawn && k == Sb.LevelGraphicsUseSavedBitmaps) {
                    var Kc = D.findCurrentExportedLevelImage(g, a.current_level.prefab_name + "_wireframe");
                    if (null != Kc) {
                        Ma.wireframe = V.createBitmapContainer(Kc.source);
                        Ma.wireframe.container.set_x(n.get_x());
                        Ma.wireframe.container.set_y(n.get_y());
                        var fc = Ma.wireframe.container;
                        fc.set_scaleX(fc.get_scaleX() / g.game_graphics_scale);
                        var td = Ma.wireframe.container;
                        td.set_scaleY(td.get_scaleY() / g.game_graphics_scale);
                        Ma.wireframe_generated = !1
                    }
                }
                null != Ma.mask && Ma.shape_container.set_mask(Ma.mask);
                cc && Ma.shine.container.set_mask(Ma.shape_mask);
                Ma.shape_container.addChild(Ma.shape.container);
                null != Ma.wireframe && Ma.shape_container.addChild(Ma.wireframe.container);
                Ma.container.addChild(Ma.shape_container);
                null != Ma.mask && Ma.container.addChild(Ma.mask);
                cc &&
                    (Ma.container.addChild(Ma.shine.container), Ma.container.addChild(Ma.shape_mask));
                Eb && (Ma.shine_line_bitmap = V.createBitmapUsingSource(Xa.shine_line), Ma.container.addChild(Ma.shine_line_bitmap));
                ja.removeAndDestroyEntityIncludingChildren(b.shape_polygon);
                ja.removeAndDestroyEntityIncludingChildren(b.shape_bitmap);
                k == Sb.LevelGraphicsFlashDrawn && (A.removeChildren(), A.set_mask(null), q.removeChildren());
                xa.snapshot(m, "add objects to display");
                "level_rome_helmet" == a.current_level.prefab_name && (a.level.tutorial =
                    ja.createTutorial(f, a.config.device_type == Ih.TouchDevice), xa.snapshot(m, "create tutorial"));
                return !0
            };
            ja.createTutorial = function(a, b) {
                var c = new qd;
                c.container = new S;
                c.container.set_alpha(0);
                var d = new fp;
                d.set_scaleX(a);
                d.set_scaleY(a);
                d.set_rotation(45);
                c.part = V.createBitmapContainerFromDisplayObject(d, !0, !0, 5, 5);
                c.container.addChild(c.part.container);
                b ? (c.type = Gh.TouchTutorial, b = new lp, b.set_scaleX(.5 * a), b.set_scaleY(.5 * a), c.pointer_finger = V.createBitmapContainerFromDisplayObject(b, !0, !0, 5, 5), c.container.addChild(c.pointer_finger.container)) :
                    (c.type = Gh.MouseTutorial, b = new mp, b.set_scaleX(a), b.set_scaleY(a), b.set_rotation(-27), c.pointer_mouse = V.createBitmapContainerFromDisplayObject(b, !0, !0, 5, 5), c.container.addChild(c.pointer_mouse.container));
                return c
            };
            ja.centerStage = function(a, b) {
                var c = new W(a.size.width / 2, a.size.height / 2);
                null != a.level.center ? (a.entity_container.set_x(c.x - a.level.center.position.x * b), a.entity_container.set_y(c.y - a.level.center.position.y * b), null != a.level.world.debug && (a.level.world.debug.transform.tx = a.entity_container.get_x(),
                    a.level.world.debug.transform.ty = a.entity_container.get_y())) : null != a.level.level_bounds && (b = a.level.level_bounds.y + a.level.level_bounds.height / 2, a.entity_container.set_x(c.x - (a.level.level_bounds.x + a.level.level_bounds.width / 2)), a.entity_container.set_y(c.y - b), null != a.level.world.debug && (a.level.world.debug.transform.tx = a.entity_container.get_x(), a.level.world.debug.transform.ty = a.entity_container.get_y()))
            };
            ja.setLevelInitStates = function(a, b) {
                var c = 0;
                for (a = a.parts; c < a.length;) {
                    var d = a[c];
                    ++c;
                    if (!d.is_static_part) {
                        for (var e = !1, f = 0, h = b.body_states; f < h.length;) {
                            var k = h[f];
                            ++f;
                            if (k.guid == d.entity.guid) {
                                d.entity.body.get_position().setxy(k.x, k.y);
                                d.entity.body.set_rotation(k.rotation);
                                d.last_rotation_for_sounds = k.rotation;
                                d.init_state = k;
                                e = !0;
                                break
                            }
                        }
                        e || w.trace("warning: couldn't find body_state for " + d.entity.name + " (" + d.entity.guid + ")", {
                            fileName: "LevelDo.hx",
                            lineNumber: 2288,
                            className: "bikas.game.LevelDo",
                            methodName: "setLevelInitStates"
                        });
                        f = e = 0;
                        for (h = d.additional_parts; f < h.length;) {
                            k = h[f];
                            ++f;
                            for (var m = !1, r = 0, g = b.body_states; r <
                                g.length;) {
                                var l = g[r];
                                ++r;
                                if (l.guid == d.entity.guid + "_" + e) {
                                    k.body.get_position().setxy(l.x, l.y);
                                    k.body.set_rotation(l.rotation);
                                    k.init_state = l;
                                    m = !0;
                                    break
                                }
                            }
                            m || w.trace("warning: couldn't find body_state for " + d.entity.name + " (" + d.entity.guid + "_" + e + ")", {
                                fileName: "LevelDo.hx",
                                lineNumber: 2304,
                                className: "bikas.game.LevelDo",
                                methodName: "setLevelInitStates"
                            });
                            ++e
                        }
                    }
                }
            };
            ja.setSpace = function(a, b) {
                var c = a.level;
                b = c.world.space;
                a.mouse_drag_joint.set_body1(b.get_world());
                a.mouse_drag_joint.set_space(b);
                a.mouse_drag_joint.set_active(!1);
                null != a.stage_group && Ha.setSpaceIncludingChildren(a.stage_group, c.world.space);
                a = 0;
                for (var d = c.parts; a < d.length;) {
                    var e = d[a];
                    ++a;
                    var f = 0;
                    for (e = e.additional_parts; f < e.length;) {
                        var h = e[f];
                        ++f;
                        h.body.set_space(b)
                    }
                }
                a = 0;
                for (c = c.connections; a < c.length;)
                    if (f = c[a], ++a, null != f.pivot_joint && f.pivot_joint.set_space(b), null != f.rail_rot_pivot_joint && f.rail_rot_pivot_joint.set_space(b), null != f.line_joint && f.line_joint.set_space(b), null != f.angle_joint && f.angle_joint.set_space(b), null != f.area)
                        for (d = 0, f = f.area.walls; d <
                            f.length;) e = f[d], ++d, e.set_space(b)
            };
            ja.applyConstraintConfig = function(a) {
                var b = a.physics_settings.constraint_config;
                a.mouse_drag_joint.set_damping(b.mouse_damping);
                a.mouse_drag_joint.set_frequency(b.mouse_frequency);
                Fh.mouse_superforce_enabled ? (a.mouse_drag_joint.set_maxForce(b.mouse_maxForce * Fh.mouse_debug_super_force_ratio), a.mouse_drag_joint.set_maxError(b.mouse_maxError * Fh.mouse_debug_super_force_ratio)) : (a.mouse_drag_joint.set_maxForce(b.mouse_maxForce), a.mouse_drag_joint.set_maxError(b.mouse_maxError));
                var c = 0;
                for (a = a.level.connections; c < a.length;) {
                    var d = a[c];
                    ++c;
                    null != d.pivot_joint && (d.pivot_joint.set_damping(b.part_damping), d.pivot_joint.set_frequency(b.part_frequency));
                    null != d.rail_rot_pivot_joint && (d.rail_rot_pivot_joint.set_damping(b.part_damping), d.rail_rot_pivot_joint.set_frequency(b.part_frequency));
                    null != d.line_joint && (d.line_joint.set_damping(b.part_damping), d.line_joint.set_frequency(b.part_frequency))
                }
            };
            ja.applySpaceConfig = function(a) {
                var b = a.physics_settings.space_config;
                a.level.world.space.set_worldAngularDrag(b.worldAngularDrag);
                a.level.world.space.set_worldLinearDrag(b.worldLinearDrag);
                var c = dk.normal.copy();
                c.set_density(b.body_density);
                b = 0;
                for (a = a.level.parts; b < a.length;) {
                    var d = a[b];
                    ++b;
                    d.entity.body.isDynamic() && (d.entity.body.setShapeMaterials(c), d.entity.body.zpp_inner.invalidate_mass())
                }
            };
            ja.applyPhysicsConfig = function(a) {
                for (var b = Q.getInstanceFields(Q.getClass(a.physics_settings.physics_config)), c = 0; c < b.length;) {
                    var d = b[c];
                    ++c;
                    T.setField(K, d, T.field(a.physics_settings.physics_config, d))
                }
            };
            ja.resetLevel = function(a) {
                for (var b =
                        a.level, c = 0, d = b.connections; c < d.length;) {
                    var e = d[c];
                    ++c;
                    null != e.pivot_joint && e.pivot_joint.set_space(null);
                    null != e.rail_rot_pivot_joint && e.rail_rot_pivot_joint.set_space(null);
                    null != e.angle_joint && e.angle_joint.set_space(null);
                    null != e.line_joint && e.line_joint.set_space(null)
                }
                c = 0;
                for (d = b.parts; c < d.length;) {
                    e = d[c];
                    ++c;
                    var f = e.entity.body;
                    f.set_space(null);
                    f.get_position().setxy(e.init_state.x, e.init_state.y);
                    var h = !0;
                    null != e.back_connection && e.back_connection.connection_type == Rc.ConnectionArea && (h = !1, 0 < e.additional_parts.length && w.trace("warning: rotation stuff is not handled for additional parts for area mechanic", {
                        fileName: "LevelDo.hx",
                        lineNumber: 2431,
                        className: "bikas.game.LevelDo",
                        methodName: "resetLevel"
                    }));
                    h ? f.set_rotation(e.init_state.rotation) : f.set_rotation(0);
                    f.set_velocity(new Wa(0, 0));
                    f.set_angularVel(0);
                    e.last_rotation_for_sounds = f.get_rotation();
                    f = 0;
                    for (h = e.additional_parts; f < h.length;) {
                        var k = h[f];
                        ++f;
                        k.body.set_space(null);
                        k.body.get_position().setxy(k.init_state.x, k.init_state.y);
                        k.body.set_rotation(k.init_state.rotation);
                        k.body.set_velocity(new Wa(0, 0));
                        k.body.set_angularVel(0)
                    }
                    ja.inplace(e) || ja.unsnapPart(e, null)
                }
                ja.tryToSnapAllPartsAndCheckLevelEnd(a);
                a = 0;
                for (c = b.parts; a < c.length;)
                    for (e = c[a], ++a, e.entity.body.set_space(b.world.space), d = 0, e = e.additional_parts; d < e.length;) f = e[d], ++d, f.body.set_space(b.world.space);
                a = 0;
                for (c = b.connections; a < c.length;) d = c[a], ++a, null != d.pivot_joint && d.pivot_joint.set_space(b.world.space), null != d.rail_rot_pivot_joint && d.rail_rot_pivot_joint.set_space(b.world.space),
                    null != d.angle_joint && d.angle_joint.set_space(b.world.space), null != d.line_joint && d.line_joint.set_space(b.world.space)
            };
            ja.savePartInitStates = function(a) {
                var b = 0;
                for (a = a.parts; b < a.length;) {
                    var c = a[b];
                    ++b;
                    c.init_state = new Gi;
                    c.init_state.guid = c.entity.guid;
                    c.init_state.x = c.entity.body.get_position().get_x();
                    c.init_state.y = c.entity.body.get_position().get_y();
                    c.init_state.rotation = c.entity.body.get_rotation();
                    for (var d = 0, e = 0, f = c.additional_parts; e < f.length;) {
                        var h = f[e];
                        ++e;
                        h.init_state = new Gi;
                        h.init_state.guid =
                            c.entity.guid + "_" + d;
                        h.init_state.x = h.body.get_position().get_x();
                        h.init_state.y = h.body.get_position().get_y();
                        h.init_state.rotation = h.body.get_rotation();
                        ++d
                    }
                }
            };
            ja.savePartInitStatesToLevel = function(a) {
                for (var b = a.level, c = null, d = 0, e = a.level_states; d < e.length;) {
                    var f = e[d];
                    ++d;
                    if (f.prefab_name == a.current_level.prefab_name) {
                        c = f;
                        break
                    }
                }
                null == c && (c = new bo, a.level_states.push(c), c.prefab_name = a.current_level.prefab_name);
                c.body_states = [];
                a = 0;
                for (b = b.parts; a < b.length;)
                    for (e = b[a], ++a, c.body_states.push(e.init_state),
                        d = 0, e = e.additional_parts; d < e.length;) f = e[d], ++d, c.body_states.push(f.init_state)
            };
            ja.setLevelStates = function(a, b) {
                var c = !1,
                    d = 0;
                for (a = a.parts; d < a.length;) {
                    var e = a[d];
                    ++d;
                    if (!e.is_static_part) {
                        for (var f = !1, h = 0, k = b.body_states; h < k.length;) {
                            var m = k[h];
                            ++h;
                            if (m.guid == e.entity.guid) {
                                if (e.entity.body.get_position().get_x() != m.x || e.entity.body.get_position().get_y() != m.y) e.entity.body.get_position().setxy(m.x, m.y), c = !0;
                                e.entity.body.get_rotation() != m.rotation && (e.entity.body.set_rotation(m.rotation), c = !0);
                                f = !0;
                                break
                            }
                        }
                        f || w.trace("warning: couldn't find body_state for " + e.entity.name + " (" + e.entity.guid + ")", {
                            fileName: "LevelDo.hx",
                            lineNumber: 2550,
                            className: "bikas.game.LevelDo",
                            methodName: "setLevelStates"
                        });
                        h = f = 0;
                        for (k = e.additional_parts; h < k.length;) {
                            m = k[h];
                            ++h;
                            for (var r = !1, g = 0, l = b.body_states; g < l.length;) {
                                var n = l[g];
                                ++g;
                                if (n.guid == e.entity.guid + "_" + f) {
                                    m.body.get_position().get_x() == n.x && m.body.get_position().get_y() == n.y || m.body.get_position().setxy(n.x, n.y);
                                    m.body.get_rotation() != n.rotation && (m.body.set_rotation(n.rotation),
                                        c = !0);
                                    r = !0;
                                    break
                                }
                            }
                            r || w.trace("warning: couldn't find body_state for " + e.entity.name + " (" + e.entity.guid + "_" + f + ")", {
                                fileName: "LevelDo.hx",
                                lineNumber: 2571,
                                className: "bikas.game.LevelDo",
                                methodName: "setLevelStates"
                            });
                            ++f
                        }
                    }
                }
                return c
            };
            ja.getCurrentLevelStateSnapshot = function(a) {
                if (null == a.level) return w.trace("warning: game.level == null", {
                    fileName: "LevelDo.hx",
                    lineNumber: 2583,
                    className: "bikas.game.LevelDo",
                    methodName: "getCurrentLevelStateSnapshot"
                }), null;
                if (null == a.current_level) return w.trace("warning: game.current_level == null", {
                    fileName: "LevelDo.hx",
                    lineNumber: 2587,
                    className: "bikas.game.LevelDo",
                    methodName: "getCurrentLevelStateSnapshot"
                }), null;
                var b = a.level;
                var c = new bo;
                c.prefab_name = a.current_level.prefab_name;
                c.body_states = [];
                a = 0;
                for (b = b.parts; a < b.length;) {
                    var d = b[a];
                    ++a;
                    var e = new Gi;
                    e.guid = d.entity.guid;
                    e.x = d.entity.body.get_position().get_x();
                    e.y = d.entity.body.get_position().get_y();
                    e.rotation = d.entity.body.get_rotation();
                    c.body_states.push(e);
                    for (var f = e = 0, h = d.additional_parts; f < h.length;) {
                        var k = h[f];
                        ++f;
                        var m = new Gi;
                        m.guid = d.entity.guid + "_" + e;
                        m.x = k.body.get_position().get_x();
                        m.y = k.body.get_position().get_y();
                        m.rotation = k.body.get_rotation();
                        c.body_states.push(m);
                        ++e
                    }
                }
                return c
            };
            ja.clearInitStates = function(a) {
                var b = 0;
                for (a = a.parts; b < a.length;) {
                    var c = a[b];
                    ++b;
                    c.init_state.guid = c.final_state.guid;
                    c.init_state.x = c.final_state.x;
                    c.init_state.y = c.final_state.y;
                    c.init_state.rotation = c.final_state.rotation;
                    var d = 0,
                        e = 0;
                    for (c = c.additional_parts; e < c.length;) {
                        var f = c[e];
                        ++e;
                        f.init_state.guid = f.final_state.guid;
                        f.init_state.x =
                            f.final_state.x;
                        f.init_state.y = f.final_state.y;
                        f.init_state.rotation = f.final_state.rotation;
                        ++d
                    }
                }
            };
            ja.savePartFinalStates = function(a) {
                var b = 0;
                for (a = a.parts; b < a.length;) {
                    var c = a[b];
                    ++b;
                    c.final_state = new Gi;
                    c.final_state.guid = c.entity.guid;
                    c.final_state.x = c.entity.body.get_position().get_x();
                    c.final_state.y = c.entity.body.get_position().get_y();
                    c.final_state.rotation = c.entity.body.get_rotation();
                    for (var d = 0, e = 0, f = c.additional_parts; e < f.length;) {
                        var h = f[e];
                        ++e;
                        h.final_state = new Gi;
                        h.final_state.guid =
                            c.entity.guid + "_" + d;
                        h.final_state.x = h.body.get_position().get_x();
                        h.final_state.y = h.body.get_position().get_y();
                        h.final_state.rotation = h.body.get_rotation();
                        ++d
                    }
                }
            };
            ja.setFinalPositionAndRotationForPartAndFurtherParts = function(a) {
                for (var b = 0, c = a.forward_parts; b < c.length;) {
                    var d = c[b];
                    ++b;
                    ja.setFinalPositionAndRotationForPartAndFurtherParts(d)
                }
                a.is_static_part || a.snapped_in_final_place || null == a.entity.body || null == a.final_state || (a.entity.body.get_position().setxy(a.final_state.x, a.final_state.y), a.entity.body.set_rotation(a.final_state.rotation))
            };
            ja.setInitPositionAndRotationForPartAndFurtherParts = function(a) {
                for (var b = 0, c = a.forward_parts; b < c.length;) {
                    var d = c[b];
                    ++b;
                    ja.setInitPositionAndRotationForPartAndFurtherParts(d)
                }
                a.is_static_part || (a.snapped && ja.unsnapPart(a, null), null != a.entity.body && null != a.init_state && (a.entity.body.get_position().setxy(a.init_state.x, a.init_state.y), a.entity.body.set_rotation(a.init_state.rotation)))
            };
            ja.snapSinglePartToFinal = function(a, b, c) {
                if (a.snapped_in_final_place) w.trace("warning: part " + a.entity.name + " already snapped into final place", {
                    fileName: "LevelDo.hx",
                    lineNumber: 2693,
                    className: "bikas.game.LevelDo",
                    methodName: "snapSinglePartToFinal"
                });
                else {
                    var d = function(a) {
                        var b = a.get_space();
                        a.set_space(null);
                        a.set_space(b)
                    };
                    a.entity.body.get_position().setxy(a.final_state.x, a.final_state.y);
                    a.entity.body.set_rotation(a.final_state.rotation);
                    d(a.entity.body);
                    for (var e = 0, f = a.additional_parts; e < f.length;) {
                        var h = f[e];
                        ++e;
                        h.body.get_position().setxy(h.final_state.x, h.final_state.y);
                        h.body.set_rotation(h.final_state.rotation);
                        d(h.body)
                    }
                    if (!a.snapped) {
                        a.entity.body.set_type(Pc.get_STATIC());
                        d = 0;
                        for (e = a.additional_parts; d < e.length;) f = e[d], ++d, f.body.set_type(Pc.get_STATIC());
                        d = 0;
                        for (e = a.all_connections; d < e.length;) f = e[d], ++d, f.part1.entity.body.isStatic() == f.part2.entity.body.isStatic() == 1 && (null != f.pivot_joint && f.pivot_joint.set_active(!1), null != f.rail_rot_pivot_joint && f.rail_rot_pivot_joint.set_active(!1), null != f.line_joint && f.line_joint.set_active(!1), null != f.angle_joint && f.angle_joint.set_active(!1), null != f.snapped_source && V.setBitmapUsingSource(f.bitmap_container.bitmap, f.snapped_source));
                        a.snapped = !0;
                        Ea.setBrightness(a.entity.display.container, -.15);
                        null != b && (va.play(b), null != c && c.push(b))
                    }
                    a.snapped_in_final_place = !0
                }
            };
            ja.inplace = function(a) {
                var b = a.final_state,
                    c = (new Wa(b.x, b.y)).sub(a.entity.body.get_position(), !0);
                a = H.angleDifferenceRad(b.rotation, a.entity.body.get_rotation());
                return 10 >= c.get_length() && .12 >= Math.abs(a) ? !0 : !1
            };
            ja.tryToSnapPartAndFutherBranches = function(a, b, c) {
                if (!a.is_static_part && !a.snapped && null != a.final_state && ja.inplace(a)) {
                    var d = !1;
                    0 == a.forward_parts.length &&
                        (d = !0);
                    for (var e = 0, f = a.forward_parts; e < f.length;) {
                        var h = f[e];
                        ++e;
                        if (ja.inplace(h)) {
                            d = !0;
                            break
                        }
                    }
                    d && ja.snapSinglePartToFinal(a, b, c)
                }
                if (a.snapped || a.is_static_part)
                    for (d = 0, a = a.forward_parts; d < a.length;) e = a[d], ++d, ja.tryToSnapPartAndFutherBranches(e, b, c)
            };
            ja.unsnapPart = function(a, b, c) {
                if (a.snapped) {
                    var d = a.entity.body.get_space();
                    a.entity.body.set_space(null);
                    a.entity.body.set_type(Pc.get_DYNAMIC());
                    a.entity.body.set_space(d);
                    for (var e = 0, f = a.additional_parts; e < f.length;) {
                        var h = f[e];
                        ++e;
                        h.body.set_space(null);
                        h.body.set_type(Pc.get_DYNAMIC());
                        h.body.set_space(d)
                    }
                    d = 0;
                    for (e = a.all_connections; d < e.length;) f = e[d], ++d, null != f.pivot_joint && f.pivot_joint.set_active(!0), null != f.rail_rot_pivot_joint && f.rail_rot_pivot_joint.set_active(!0), null != f.line_joint && f.line_joint.set_active(!0), null != f.angle_joint && f.angle_joint.set_active(!0), null != f.snapped_source && V.setBitmapUsingSource(f.bitmap_container.bitmap, f.regular_source);
                    a.snapped = !1;
                    a.snapped_in_final_place = !1;
                    Ea.setBrightness(a.entity.display.container, 0);
                    null !=
                        b && (va.play(b), null != c && c.push(b))
                }
            };
            ja.unsnapPartAndFutherBranches = function(a, b, c) {
                if (a.snapped) {
                    ja.unsnapPart(a, b, c);
                    var d = 0;
                    for (a = a.forward_parts; d < a.length;) {
                        var e = a[d];
                        ++d;
                        ja.unsnapPartAndFutherBranches(e, b, c)
                    }
                }
            };
            ja.tryToSnapAllPartsAndCheckLevelEnd = function(a, b) {
                var c = a.level;
                if (a.allow_snapping) {
                    for (var d = 0, e = c.parts; d < e.length;) {
                        var f = e[d];
                        ++d;
                        f.is_static_part && ja.tryToSnapPartAndFutherBranches(f, a.sounds.part_snap, b)
                    }
                    b = !0;
                    d = 0;
                    for (e = c.parts; d < e.length;)
                        if (f = e[d], ++d, !f.is_static_part && !f.snapped_in_final_place) {
                            b = !1;
                            break
                        } if (b) return 0 < c.parts.length && (c.state = ne.TransitionOut), a.progress_save.last_level_completed_or_skipped = a.current_level.prefab_name, D.saveProgressLevel(a.progress_serial_data, a.progress_save, a.current_level, Hh.LevelComplete), !0
                }
                return !1
            };
            ja.updateConnectionPositions = function(a) {
                for (var b = new Wa(0, 0), c = 0; c < a.length;) {
                    var d = a[c];
                    ++c;
                    if (null != d.pivot_joint) null != d.rail ? b.set(d.rail.part.entity.body.localPointToWorld(d.rail.local_body_center, !0)) : b.set(d.body1.localPointToWorld(d.pivot_joint.get_anchor1(),
                        !0));
                    else if (null != d.line_joint) b.set(d.body1.localPointToWorld(d.line_joint.get_anchor1(), !0));
                    else if (d.connection_type == Rc.ConnectionArea) {
                        if (null != d.area) {
                            var e = d.area.part.entity.body.get_position().get_x() + d.area.circle_shape.get_localCOM().get_x(),
                                f = d.area.part.entity.body.get_position().get_y() + d.area.circle_shape.get_localCOM().get_y();
                            b.setxy(e, f)
                        }
                    } else w.trace("warning: unhandled " + E.string(d.connection_type), {
                        fileName: "LevelDo.hx",
                        lineNumber: 2930,
                        className: "bikas.game.LevelDo",
                        methodName: "updateConnectionPositions"
                    });
                    d.bitmap_container.container.set_x(b.get_x());
                    d.bitmap_container.container.set_y(b.get_y())
                }
                b.dispose()
            };
            ja.getTotalMassOfBranches = function(a, b) {
                a += b.entity.body.get_mass();
                var c = 0;
                for (b = b.forward_parts; c < b.length;) {
                    var d = b[c];
                    ++c;
                    a = ja.getTotalMassOfBranches(a, d)
                }
                return a
            };
            ja.setAnimationTimeThroughoutParts = function(a, b, c) {
                for (var d = 0; d < a.length;) {
                    var e = a[d];
                    ++d;
                    b -= c;
                    e.time = b
                }
                for (d = 0; d < a.length;) e = a[d], ++d, b = ja.setAnimationTimeThroughoutParts(e.forward_parts, b, c);
                return b
            };
            ja.findPartByBody = function(a,
                b) {
                for (var c = 0; c < b.length;) {
                    var d = b[c];
                    ++c;
                    if (d.entity.body == a) return d
                }
                return null
            };
            ja.partDepthSort = function(a, b) {
                return a.is_static_part && b.is_static_part ? a.entity.display.depth_cache < b.entity.display.depth_cache ? -1 : a.entity.display.depth_cache > b.entity.display.depth_cache ? 1 : 0 : a.is_static_part ? -1 : b.is_static_part ? 1 : a.entity.display.depth_cache < b.entity.display.depth_cache ? -1 : a.entity.display.depth_cache > b.entity.display.depth_cache ? 1 : 0
            };
            ja.createReducedFrictionPart = function(a) {
                var b = new ek;
                b.part =
                    a;
                b.time_left = ek.max_time;
                return b
            };
            ja.getLevelGraphicsScale = function(a) {
                if (null == a.current_level) return a.graphics_scale;
                if (a.size.height > a.size.width) {
                    var b = 1 - ma.getTClamped(.5625, 1, a.size.width / a.size.height),
                        c = a.current_level.additional_scale_for_portrait;
                    0 < a.test_portrait_level_scale && (c = a.test_portrait_level_scale);
                    return ma.linear(a.graphics_scale, a.graphics_scale * c, b)
                }
                return a.graphics_scale
            };
            ja.isPivotJointStable = function(a) {
                if (null == a.get_space() || !a.get_active() || a.get_body1().isStatic() &&
                    a.get_body2().isStatic()) return !0;
                var b = a.get_body1().localPointToWorld(a.get_anchor1());
                a = a.get_body2().localPointToWorld(a.get_anchor2());
                var c = Wa.distance(b, a);
                b.dispose();
                a.dispose();
                return c > oe.unstable_pivot_threshold ? !1 : !0
            };
            ja.isAngleJointStable = function(a) {
                if (null == a.get_space() || !a.get_active() || a.get_body1().isStatic() && a.get_body2().isStatic()) return !0;
                var b = a.get_body2().get_rotation() - a.get_body1().get_rotation(),
                    c = a.get_jointMin() - oe.unstable_angle_threshold_radians;
                a = a.get_jointMax() +
                    oe.unstable_angle_threshold_radians;
                return b >= c && b <= a
            };
            ja.isAreaStable = function(a, b) {
                if (a.isStatic()) return !0;
                var c = b.walls[0],
                    d = b.walls[1],
                    e = b.walls[2],
                    f = b.walls[3],
                    h = a.get_position().get_x() + b.center_offset.x;
                a = a.get_position().get_y() + b.center_offset.y;
                return a >= c.get_position().get_y() && h <= d.get_position().get_x() && a <= e.get_position().get_y() && h >= f.get_position().get_x()
            };
            ja.detectBodiesOverlap = function(a, b, c, d, e) {
                for (b = b.get_shapes().iterator(); b.hasNext();) {
                    var f = b.next();
                    if (f.get_filter() !=
                        pd.no_interaction)
                        for (var h = c.get_shapes().iterator(); h.hasNext();) {
                            var k = h.next();
                            if (k.get_filter() != pd.no_interaction && (k = Hq.distance(f, k, d, e), k <= -a)) return k
                        }
                }
                return 0
            };
            ja.removeAndDestroyEntityIncludingChildren = function(a) {
                Ch.removeEntityIncludingChildren(a);
                Ha.destroyEntityIncludingChildren(a)
            };
            ja.destroyLevel = function(a) {
                if (null != a.level) {
                    var b = a.level;
                    null != a.debug && null != a.debug.level_debug_window && (v.close(a.debug.level_debug_window), a.debug.level_debug_window = null);
                    a.pause.inlevel_reload.button.container.set_visible(!1);
                    a.pause.inlevel_reload.circle.container.set_visible(!1);
                    ja.setSpace(a, null);
                    a.unstable_part = null;
                    null != b.world.debug && a.container.removeChild(b.world.debug.display);
                    null != a.stage_group && (ja.removeAndDestroyEntityIncludingChildren(a.stage_group), a.stage_group = null);
                    if (null != b.parts)
                        for (var c = 0, d = b.parts; c < d.length;) {
                            var e = d[c];
                            ++c;
                            null != e.bitmap_data_source && (e.bitmap_data_source_is_generated && e.bitmap_data_source.bitmap_data.dispose(), e.bitmap_data_source = null)
                        }
                    c = 0;
                    for (d = b.connections; c < d.length;) e =
                        d[c], ++c, null != e.bitmap_container && e.bitmap_container.container.parent.removeChild(e.bitmap_container.container);
                    null != b.end && (a.entity_container.contains(b.end.container) && (c = b.end, a.entity_container.removeChild(c.container), c.wireframe_generated && null != c.wireframe && c.wireframe.bitmap.get_bitmapData().dispose(), null != c.shine && c.shine_generated && c.shine.bitmap.get_bitmapData().dispose()), null != b.end.shape && (b.end.shape.container.parent.removeChild(b.end.shape.container), b.end.shape_generated && b.end.shape.bitmap.get_bitmapData().dispose(),
                        b.end.shape = null));
                    null != b.various_objects_bitmap_container && (b.various_objects_generated && V.destroyBitmapContainerIncludingBitmapDataSource(b.various_objects_bitmap_container), null != b.various_objects_bitmap_container.container && null != b.various_objects_bitmap_container.container.parent && b.various_objects_bitmap_container.container.parent.removeChild(b.various_objects_bitmap_container.container), b.various_objects_bitmap_container = null);
                    if (null != b.rails)
                        for (c = 0, d = b.rails; c < d.length;) ++c;
                    b.connections =
                        null;
                    b.parts = null;
                    b.all_entities = null;
                    b.body_entities = null;
                    null != b.world && (b.world.space.clear(), b.world = null);
                    null != b.tutorial && ja.destroyTutorial(b);
                    a.level = null;
                    for (b = a.debug_draw_objects.keys(); b.hasNext();) c = b.next(), c = a.debug_draw_objects.get(c), c.parent.removeChild(c);
                    a.debug_draw_objects = new fb
                }
            };
            ja.destroyTutorial = function(a) {
                if (null != a.tutorial) {
                    var b = a.tutorial;
                    D.safeRemove(b.container);
                    V.destroyBitmapContainerIncludingBitmapDataSource(b.part);
                    null != b.pointer_finger && V.destroyBitmapContainerIncludingBitmapDataSource(b.pointer_finger);
                    null != b.pointer_mouse && V.destroyBitmapContainerIncludingBitmapDataSource(b.pointer_mouse);
                    b.container = null;
                    b.part = null;
                    b.pointer_finger = null;
                    b.pointer_mouse = null;
                    a.tutorial = null
                }
            };
            ja.updateLevelTransitionIn = function(a, b, c) {
                var d = .075 * a.step.dc,
                    e = !0;
                if (!b.transition_in_started) {
                    for (var f = .25, h = 0, k = b.parts; h < k.length;) {
                        var m = k[h];
                        ++h;
                        m.is_static_part && (f -= .5, m.time = f, f = ja.setAnimationTimeThroughoutParts(m.forward_parts, f, .5))
                    }
                    b.transition_in_started = !0
                }
                f = 0;
                for (h = b.parts; f < h.length;) {
                    k = h[f];
                    ++f;
                    var r =
                        k.entity.display.container;
                    k.time += d;
                    if (0 <= k.time) {
                        k.transition_in_sound_played || (va.rewind(a.sounds.part_transition), va.play(a.sounds.part_transition), null != c && c.push(a.sounds.part_transition), k.transition_in_sound_played = !0);
                        1 < k.time && (k.time = 1);
                        var g = H.interpolate(1.2 * k.scale, k.scale, k.time);
                        m = H.interpolate(.1, 1, k.time);
                        var l = H.interpolate(.9, 0, k.time);
                        Ea.setScaleBrightnessAlpha(r, g, l, m);
                        null != k.back_connection && (r = H.interpolate(1.2 * k.back_connection.scale, k.back_connection.scale, k.time), Ea.setScaleBrightnessAlpha(k.back_connection.bitmap_container.container,
                            r, l, m))
                    }
                    1 != k.time && (e = !1)
                }
                null != b.various_objects_bitmap_container && (c = b.various_objects_bitmap_container.container, c.set_alpha(c.get_alpha() + .02 * a.step.dc), 1 < b.various_objects_bitmap_container.container.get_alpha() && b.various_objects_bitmap_container.container.set_alpha(1));
                e && (null != b.various_objects_bitmap_container && b.various_objects_bitmap_container.container.set_alpha(1), a.level.state = ne.Gameplay)
            };
            ja.updateLevelGameplay = function(a, b, c, d, e) {
                var f = a.level.world.space,
                    h = a.debug;
                a.mouse_vec.set_x(c.current.x);
                a.mouse_vec.set_y(c.current.y);
                var k = a.mouse_vec;
                if (c.button_state == ya.DOWNED) {
                    null != a.click_shape && a.click_shape.set_visible(!0);
                    a.finger_body.get_position().set(k);
                    d = 2 * a.finger_radius;
                    var m = Wa.get(),
                        r = Wa.get(),
                        g = [];
                    for (f = f.shapesInCircle(k, a.finger_radius / b.level_graphics_scale, !1).iterator(); f.hasNext();) {
                        var l = f.next();
                        l.get_filter() != pd.no_interaction && (l.get_body().isKinematic() || -1 == g.indexOf(l.get_body()) && g.push(l.get_body()))
                    }
                    f = null;
                    l = d;
                    for (var n = 0; n < g.length;) {
                        var p = g[n];
                        ++n;
                        for (var x =
                                0, z = b.parts; x < z.length;) {
                            var u = z[x];
                            ++x;
                            if (u.entity.body == p) {
                                u.is_static_part || (p = Hq.distanceBody(p, a.finger_body, m, r), p < d && (null == f ? (f = u, l = p) : f.is_layer2 ? u.is_layer2 && p < l && (f = u, l = p) : u.is_layer2 ? (f = u, l = p) : p < l && (f = u, l = p)));
                                break
                            }
                        }
                    }
                    m.dispose();
                    r.dispose();
                    if (null != f && (d = f.entity.body, m = ja.findPartByBody(d, b.parts), null != m && !m.is_static_part)) {
                        r = 0;
                        for (g = a.level.reduced_friction_parts; r < g.length;) f = g[r], ++r, f.part == m && (f.time_left = 0);
                        null != m.back_part && (m.back_part.is_static_part || ja.unsnapPart(m.back_part,
                            a.sounds.part_unsnap, e));
                        m.snapped_in_final_place || (va.play(a.sounds.part_drag_click), null != e && e.push(a.sounds.part_drag_click));
                        Ea.setBrightness(m.entity.display.container, .2);
                        ja.unsnapPartAndFutherBranches(m, a.sounds.part_unsnap, e);
                        a.mouse_drag_joint.set_body2(d);
                        a.mouse_drag_joint.get_anchor1().set(k);
                        a.mouse_drag_joint.get_anchor2().set(d.worldPointToLocal(k, !0));
                        a.mouse_drag_joint.set_active(!0);
                        for (k = b.dragging_part = m; k.back_part.entity.body.isDynamic();) k = k.back_part;
                        k = ja.getTotalMassOfBranches(0,
                            k);
                        d = a.physics_settings.constraint_config.mouse_maxForce;
                        Fh.mouse_superforce_enabled && (d *= Fh.mouse_debug_super_force_ratio);
                        k = d * k / a.physics_settings.constraint_config.mouse_maxForce_mass;
                        k > d && (k = d);
                        a.mouse_drag_joint.set_maxForce(k)
                    }
                } else if (c.button_state == ya.DRAGGED) {
                    if (null != a.click_shape && (a.click_shape.set_x(c.current.x * a.entity_container.get_scaleX() + a.entity_container.get_x()), a.click_shape.set_y(c.current.y * a.entity_container.get_scaleY() + a.entity_container.get_y())), a.mouse_drag_joint.get_anchor1().set(k),
                        null != b.dragging_part)
                        for (k = b.dragging_part.back_part; !k.is_static_part;) d = k.entity.body, d.set_angularVel(d.get_angularVel() * a.physics_settings.space_config.back_part_angular_friction), null != k.back_connection && null != k.back_connection.area && (d = Math.pow(.5, a.step.dc), k.entity.body.get_velocity().muleq(d)), k = k.back_part
                } else if (c.button_state == ya.UPPED) {
                    a.mouse_drag_joint.set_active(!1);
                    null != a.click_shape && a.click_shape.set_visible(!1);
                    null != b.dragging_part && (b.reduced_friction_parts.push(ja.createReducedFrictionPart(b.dragging_part)),
                        Ea.setBrightness(b.dragging_part.entity.display.container, 0));
                    k = 0;
                    for (m = b.parts; k < m.length;) r = m[k], ++k, null != r.entity.body && (r.last_rotation_for_sounds = r.entity.body.get_rotation());
                    (k = a.config.type == db.FlashDevelopment || a.config.type == db.HTML5Development) && d.shift && null != b.dragging_part && !b.dragging_part.snapped ? ja.setFinalPositionAndRotationForPartAndFurtherParts(b.dragging_part) : k && d.ctrl && null != b.dragging_part && ja.setInitPositionAndRotationForPartAndFurtherParts(b.dragging_part);
                    ja.tryToSnapAllPartsAndCheckLevelEnd(a,
                        e);
                    b.dragging_part = null
                }
                k = !1;
                d = 0;
                for (m = b.reduced_friction_parts.length; d < m;) r = b.reduced_friction_parts[d], r.time_left -= a.step.step_size, 0 >= r.time_left && (r.part = null, la.remove(b.reduced_friction_parts, r), --d, --m, k = !0), ++d;
                k && (c.button_state == ya.UPPED || c.button_state == ya.NONE) && ja.tryToSnapAllPartsAndCheckLevelEnd(a);
                k = !0;
                d = !1;
                a.show_debug_menu && null != h && (k = h.space_update, d = h.debug_draw);
                Ha.updateWorld(b.world, k, d, a.physics_settings.space_config.velocityIterations, a.physics_settings.space_config.positionIterations,
                    a.step.step_size);
                ja.updatePhysicsStabilityDetection(a, b);
                h = null != a.unstable_part && a.unstable_part.show_reload;
                a.pause.inlevel_reload.button.container.get_visible() != h && (a.pause.inlevel_reload.button.container.set_visible(h), a.pause.inlevel_reload.circle_wait_current_time = 0);
                h || a.pause.inlevel_reload.circle.container.get_visible() && a.pause.inlevel_reload.circle.container.set_visible(!1);
                if (h)
                    if (h = a.pause.inlevel_reload, h.button_animation_current_time += a.step.step_size, k = H.clamp0to1(h.button_animation_current_time /
                            Hi.button_animation_time), d = ma.cubicForwardAndBackward(.95, 1.05, k), h.button.container.set_scaleX(d), h.button.container.set_scaleY(d), 1 == k && (h.button_animation_current_time = 0), h.circle_wait_current_time += a.step.step_size, h.circle_wait_current_time >= Hi.circle_wait_time && (h.circle_animation_current_time += a.step.step_size, k = H.clamp0to1(h.circle_animation_current_time / Hi.circle_animation_time), h.circle.container.get_visible() || h.circle.container.set_visible(!0), h.circle.container.set_x(h.button.container.get_x()),
                            h.circle.container.set_y(h.button.container.get_y()), d = ma.linear(1.2, .5, k), h.circle.container.set_scaleX(d), h.circle.container.set_scaleY(d), h.circle.container.set_alpha(ma.linearForwardAndBackward(0, 1, k)), 1 == k && (h.circle.container.set_visible(!1), h.circle_wait_current_time = 0, h.circle_animation_current_time = 0)), c.button_state == ya.DOWNED) Ia.isRadiusButtonDowned(a.pause.inlevel_reload.button.container, a.pause.inlevel_reload.button.radius, a.finger_radius, c.downed) && V.setBitmapUsingSource(a.pause.inlevel_reload.button.background,
                        a.pause.inlevel_reload.button.downed_background_source);
                    else if (c.button_state == ya.UPPED && (Ia.isRadiusButtonDowned(a.pause.inlevel_reload.button.container, a.pause.inlevel_reload.button.radius, a.finger_radius, c.downed) && V.setBitmapUsingSource(a.pause.inlevel_reload.button.background, a.pause.inlevel_reload.button.background_source), Ia.isRadiusButtonClicked(a.pause.inlevel_reload.button.container, a.pause.inlevel_reload.button.radius, a.finger_radius, c.downed, c.upped))) {
                    D.restartLevel(a);
                    return
                }
                c = 0;
                for (h =
                    b.parts; c < h.length;) {
                    k = h[c];
                    ++c;
                    d = a.physics_settings.space_config.global_friction;
                    m = 0;
                    for (r = b.reduced_friction_parts; m < r.length;)
                        if (g = r[m], ++m, g.part == k) {
                            d = ek.reduced_friction;
                            break
                        } d = Math.pow(d, a.step.dc);
                    null != k.entity && null != k.entity.body && k.entity.body.isDynamic() && (k.entity.body.get_velocity().muleq(d), m = k.entity.body, m.set_angularVel(m.get_angularVel() * d));
                    if (null != k.additional_parts)
                        for (m = 0, k = k.additional_parts; m < k.length;) r = k[m], ++m, r.body.isDynamic() && (r.body.get_velocity().muleq(d), r = r.body,
                            r.set_angularVel(r.get_angularVel() * d))
                }
                c = 0;
                for (h = b.body_entities; c < h.length;) k = h[c], ++c, Xn.refresh(k);
                c = 0;
                for (h = b.parts; c < h.length;) k = h[c], ++c, k.entity.body.get_type() == Pc.get_DYNAMIC() && null != k.back_connection && k.back_connection.connection_type != Rc.ConnectionArea && Math.abs(H.angleDifferenceRad(k.entity.body.get_rotation(), k.last_rotation_for_sounds)) > k.sound_rotation_click_angle && (k.last_rotation_for_sounds = k.entity.body.get_rotation(), va.play(a.sounds.part_rotate), null != e && e.push(a.sounds.part_rotate));
                ja.updateConnectionPositions(b.connections);
                null != b.tutorial && ja.updateTutorial(a, b.tutorial)
            };
            ja.updateTutorial = function(a, b) {
                for (var c = a.level.parts, d = 0, e = 0, f = 0, h = !1, k = 0; k < c.length;) {
                    var m = c[k];
                    ++k;
                    "p3" == m.entity.name && (d = a.entity_container.get_x() + m.back_connection.bitmap_container.container.get_x() * a.level.level_graphics_scale, e = a.entity_container.get_y() + m.back_connection.bitmap_container.container.get_y() * a.level.level_graphics_scale, f = 57.29577951308232 * m.entity.body.get_rotation(), m.snapped_in_final_place &&
                        (h = !0))
                }
                null == b.container.parent && a.menu_container.addChildAt(b.container, 0);
                b.container.set_x(d);
                b.container.set_y(e);
                if (h) ja.destroyTutorial(a.level);
                else switch (c = null, b.type == Gh.TouchTutorial ? c = b.pointer_finger.container : b.type == Gh.MouseTutorial && (c = b.pointer_mouse.container), b.current_time += a.step.step_size, h && b.state != Wc.TutorialDisappear && b.state != Wc.TutorialCompleted && (b.state = Wc.TutorialDisappear), Q.enumIndex(b.state)) {
                    case 0:
                        h = H.clamp0to1(b.current_time / qd.appear_time);
                        d = ma.linear(0, 1, h);
                        e = ma.cubicEnd(qd.appear_scale, 1, h);
                        b.container.set_alpha(d);
                        c.set_x(qd.pointer_start.x);
                        c.set_y(qd.pointer_start.y);
                        c.set_scaleX(e);
                        c.set_scaleY(e);
                        b.part.container.set_rotation(f - 45);
                        d = ma.getT(-135, -45, b.part.container.get_rotation());
                        f = ma.linear(qd.pointer_start.x, qd.pointer_end.x, d);
                        d = ma.linear(qd.pointer_start.y, qd.pointer_end.y, d);
                        c.set_x(f * a.level.level_graphics_scale);
                        c.set_y(d * a.level.level_graphics_scale);
                        1 == h && (b.current_time = 0, b.state = Wc.TutorialDrag);
                        break;
                    case 1:
                        h = H.clamp0to1(b.current_time /
                            qd.drag_time);
                        d = ma.smoothStartEnd(f - 45, -45, h);
                        e = ma.getT(-135, -45, f - 45);
                        f = ma.linear(qd.pointer_start.x, qd.pointer_end.x, e);
                        e = ma.linear(qd.pointer_start.y, qd.pointer_end.y, e);
                        f = ma.smoothStartEnd(f, qd.pointer_end.x, h);
                        e = ma.smoothStartEnd(e, qd.pointer_end.y, h);
                        c.set_x(f * a.level.level_graphics_scale);
                        c.set_y(e * a.level.level_graphics_scale);
                        b.part.container.set_rotation(d);
                        1 == h && (b.current_time = 0, b.state = Wc.TutorialWait);
                        break;
                    case 2:
                        1 == H.clamp0to1(b.current_time / qd.wait_time) && (b.current_time = 0, b.state =
                            Wc.TutorialDisappear);
                        break;
                    case 3:
                        a = H.clamp0to1(b.current_time / qd.disappear_time);
                        c = ma.linear(1, 0, a);
                        b.container.set_alpha(c);
                        1 == a && (b.current_time = 0, b.state = h ? Wc.TutorialCompleted : Wc.TutorialEmptyWait, b.container.set_alpha(0));
                        break;
                    case 4:
                        1 == H.clamp0to1(b.current_time / qd.empty_time) && (b.current_time = 0, b.state = Wc.TutorialAppear);
                        break;
                    case 5:
                        b.container.set_alpha(0)
                }
            };
            ja.updatePhysicsStabilityDetection = function(a, b) {
                a.unstable_part_index < b.parts.length - 1 ? a.unstable_part_index++ : a.unstable_part_index =
                    0;
                if (0 < b.parts.length) {
                    var c = b.parts[a.unstable_part_index],
                        d = c.entity.body,
                        e = d.get_arbiters();
                    if (null == a.unstable_part && null != c.back_connection && (c.back_connection.connection_type == Rc.ConnectionPivot || c.back_connection.connection_type == Rc.ConnectionRail || c.back_connection.connection_type == Rc.ConnectionRotator)) {
                        var f = c.back_connection;
                        null == f.pivot_joint || ja.isPivotJointStable(f.pivot_joint) || (w.trace("unstable pivot detected: " + c.entity.name, {
                            fileName: "LevelDo.hx",
                            lineNumber: 3878,
                            className: "bikas.game.LevelDo",
                            methodName: "updatePhysicsStabilityDetection"
                        }), a.unstable_part = new oe, a.unstable_part.type = ye.UnstablePivot, a.unstable_part.connection = f);
                        null != a.unstable_part || null == f.rail_rot_pivot_joint || ja.isPivotJointStable(f.rail_rot_pivot_joint) || (w.trace("unstable pivot (rail rotator) detected: " + c.entity.name, {
                                fileName: "LevelDo.hx",
                                lineNumber: 3887,
                                className: "bikas.game.LevelDo",
                                methodName: "updatePhysicsStabilityDetection"
                            }), a.unstable_part = new oe, a.unstable_part.type = ye.UnstablePivot, a.unstable_part.connection =
                            f)
                    }
                    null == a.unstable_part && null != c.back_connection && c.back_connection.connection_type == Rc.ConnectionRail && (f = c.back_connection, null == f.angle_joint || ja.isAngleJointStable(f.angle_joint) || (w.trace("unstable rail detected: " + c.entity.name, {
                        fileName: "LevelDo.hx",
                        lineNumber: 3905,
                        className: "bikas.game.LevelDo",
                        methodName: "updatePhysicsStabilityDetection"
                    }), a.unstable_part = new oe, a.unstable_part.type = ye.UnstableRail, a.unstable_part.connection = f));
                    null == a.unstable_part && null != c.back_connection && c.back_connection.connection_type ==
                        Rc.ConnectionArea && (f = c.back_connection, null == f.area || ja.isAreaStable(d, f.area) || (w.trace("unstable area detected: " + c.entity.name, {
                            fileName: "LevelDo.hx",
                            lineNumber: 3923,
                            className: "bikas.game.LevelDo",
                            methodName: "updatePhysicsStabilityDetection"
                        }), a.unstable_part = new oe, a.unstable_part.type = ye.UnstableArea, a.unstable_part.part1 = c, a.unstable_part.connection = f));
                    if (null == a.unstable_part)
                        for (e = e.iterator(); e.hasNext();) {
                            f = e.next();
                            var h = f.get_body1() == d ? f.get_body2() : f.get_body1();
                            f = ja.findPartByBody(h,
                                b.parts);
                            if (null != f && (d.get_type() != Pc.get_STATIC() || h.get_type() != Pc.get_STATIC()) && (h = ja.detectBodiesOverlap(oe.unstable_overlap_threshold, d, h, a.overlap_out1, a.overlap_out2), h < -oe.unstable_overlap_threshold)) {
                                w.trace("overlap detected between: " + c.entity.name + " and " + f.entity.name + " = " + H.round(h), {
                                    fileName: "LevelDo.hx",
                                    lineNumber: 3955,
                                    className: "bikas.game.LevelDo",
                                    methodName: "updatePhysicsStabilityDetection"
                                });
                                a.unstable_part = new oe;
                                a.unstable_part.type = ye.UnstableOverlap;
                                a.unstable_part.part1 =
                                    c;
                                a.unstable_part.part2 = f;
                                break
                            }
                        }
                }
                if (null != a.unstable_part) {
                    b = !1;
                    switch (Q.enumIndex(a.unstable_part.type)) {
                        case 0:
                            b = ja.isPivotJointStable(a.unstable_part.connection.pivot_joint);
                            break;
                        case 1:
                            b = ja.isAngleJointStable(a.unstable_part.connection.angle_joint);
                            break;
                        case 2:
                            b = ja.isAreaStable(a.unstable_part.part1.entity.body, a.unstable_part.connection.area);
                            break;
                        case 3:
                            c = a.unstable_part.part1.entity.body, d = a.unstable_part.part2.entity.body, c.isStatic() && d.isStatic() ? b = !0 : ja.detectBodiesOverlap(oe.unstable_overlap_threshold,
                                c, d, a.overlap_out1, a.overlap_out2) > -oe.unstable_overlap_threshold && (b = !0)
                    }
                    b ? (a.unstable_part.disappear_current_time += a.step.step_size, a.unstable_part.disappear_current_time >= oe.disappear_wait_time && (a.unstable_part = null)) : (a.unstable_part.disappear_current_time = 0, a.unstable_part.reload_current_time += a.step.step_size, a.unstable_part.reload_current_time >= oe.reload_wait_time && (a.unstable_part.show_reload = !0))
                }
            };
            ja.updateLevelTransitionOut = function(a, b, c) {
                var d = b.end,
                    e = d.bounds.x + d.bounds.width / 2,
                    f = d.bounds.y +
                    d.bounds.height / 2,
                    h = Hc.animation_max_scale,
                    k = d.bounds.height;
                a.pause.inlevel_reload.button.container.get_visible() && a.pause.inlevel_reload.button.container.set_visible(!1);
                a.pause.inlevel_reload.circle.container.get_visible() && a.pause.inlevel_reload.circle.container.set_visible(!1);
                d.state == qb.LevelEndAddContainers && (a.entity_container.addChild(d.container), ql.trackLevelFinish(a, Ia.getLevelIndex(a.current_level) + 1), va.play(a.sounds.level_finish), null != c && c.push(a.sounds.level_finish), d.state = qb.LevelEndShineIn,
                    d.t = 0);
                d.state == qb.LevelEndNone && (d.state = qb.LevelEndAddContainers);
                if (d.state == qb.LevelEndShineIn) {
                    d.t = H.clamp0to1(d.t + Hc.animation_speed * a.step.dc);
                    null != d.shine && d.shine.container.set_y(ma.linear(d.shine_init_y, d.shine_init_y + k, d.t));
                    if (null != d.shine_line_bitmap) {
                        c = b.transformed_polygon_points_bounds.min_y;
                        var m = ma.linear(c, c + k * b.level_graphics_scale, d.t);
                        m -= 9 * b.level_graphics_scale;
                        c = Ub.getPolygonAndHorizontalLineIntersectionX(b.transformed_polygon_points, m, !0);
                        var r = Ub.getPolygonAndHorizontalLineIntersectionX(b.transformed_polygon_points,
                            m, !1);
                        d.shine_line_bitmap.set_y(m / b.level_graphics_scale - (d.shine_line_bitmap.get_height() / 2 + 2.5) + 5);
                        m = !1;
                        null != c && null != r && c != r && (r -= c, d.shine_line_bitmap.set_x(c / b.level_graphics_scale - 8 + (d.bounds.x + d.bounds.width / 2)), d.shine_line_bitmap.set_width(r / b.level_graphics_scale + 16), m = !0);
                        m && !d.shine_line_bitmap.get_visible() ? d.shine_line_bitmap.set_visible(!0) : !m && d.shine_line_bitmap.get_visible() && d.shine_line_bitmap.set_visible(!1)
                    }
                    null != d.mask ? d.mask.set_y(ma.linear(d.mask_init_y, d.mask_init_y + k, d.t)) :
                        (c = ma.linear(0, 0 + d.end_shape_height, d.t), d.end_shape_scroll_rect.height = H.clamp(c, 0, d.end_shape_height), d.shape.bitmap.set_scrollRect(d.end_shape_scroll_rect));
                    c = H.interpolateSmoothOutIn(1, h, d.t);
                    d.container.set_scaleX(c);
                    d.container.set_scaleY(c);
                    d.container.set_x(-(e * c - e));
                    d.container.set_y(-(f * c - f));
                    c = H.interpolate(1, 0, d.t);
                    if (null != b.connections)
                        for (r = 0, m = b.connections; r < m.length;) {
                            var g = m[r];
                            ++r;
                            g.bitmap_container.container.set_alpha(c)
                        }
                    null != b.various_objects_bitmap_container && b.various_objects_bitmap_container.container.set_alpha(c);
                    1 == d.t && (d.state = qb.LevelEndShineOut, d.t = 0)
                }
                if (d.state == qb.LevelEndShineOut) {
                    d.t = H.clamp0to1(d.t + Hc.animation_shine_out_speed * a.step.dc);
                    b = 0;
                    for (c = a.entity_container.get_numChildren(); b < c;) r = b++, r = a.entity_container.getChildAt(r), r != d.container && r.set_alpha(r.get_alpha() - .05);
                    null != d.shine && d.shine.container.set_y(H.interpolate(d.shine_init_y + k, d.shine_init_y + k + d.shine.container.get_height(), d.t));
                    null != d.wireframe && d.wireframe.container.set_alpha(H.interpolateSmoothIn(1, 0, d.t));
                    null != d.shine && d.shine.container.set_alpha(H.interpolateSmoothIn(1,
                        0, d.t));
                    h = H.interpolateSmoothOutIn(h, 1.002, d.t);
                    d.container.set_scaleX(d.container.set_scaleY(h));
                    d.container.set_x(-(e * h - e));
                    d.container.set_y(-(f * h - f));
                    1 == d.t && (d.state = qb.LevelEndWaitToAppreciateTheFinalShape, d.t = 0)
                }
                d.state == qb.LevelEndWaitToAppreciateTheFinalShape && (d.t += a.step.step_size, e = Hc.shape_appreciation_time, null != a.current_level && null != a.current_level.parent_pack && a.current_level.parent_pack.levels.indexOf(a.current_level) == a.current_level.parent_pack.levels.length - 1 && (e = Hc.last_shape_in_pack_appreciation_time),
                    d.t >= e && (d.state = qb.LevelEndSetupUserAction, d.t = 0));
                d.state == qb.LevelEndSetupUserAction && (e = a.config.type == db.FlashRelease || a.config.type == db.MobileRelease || a.config.type == db.HTML5Release, f = a.config.type == db.FlashDevelopment || a.config.type == db.HTML5Development, e || f && a.config.development.gameplay_type == hh.Release ? e || f && a.config.development.show_next_level_menu ? null != a.current_level.parent_pack && (a.current_level.parent_pack.levels.indexOf(a.current_level) == a.current_level.parent_pack.levels.length -
                    1 ? D.gotoNextLevelOrMainMenu(a) : (D.openInterLevelMenu(a), d.state = qb.LevelEndWaitForUserAction, d.t = 0)) : null != a.current_level.parent_pack ? D.gotoNextLevelOrMainMenu(a) : D.restartLevel(a) : a.config.development.gameplay_type == hh.RepeatSameLevel ? D.restartLevel(a) : w.trace("warning: unhandled type: " + E.string(a.config.development.gameplay_type), {
                    fileName: "LevelDo.hx",
                    lineNumber: 4270,
                    className: "bikas.game.LevelDo",
                    methodName: "updateLevelTransitionOut"
                }));
                d.state == qb.LevelEndWaitUntilAdmobAdIsClosed && D.gotoNextLevelOrMainMenu(a);
                d.state == qb.LevelEndWaitForUserAction && (d.t = 0);
                if (d.state == qb.LevelEndAlphaOut) {
                    if (0 == d.t)
                        for (e = 0, f = a.entity_container.get_numChildren(); e < f;) h = e++, h = a.entity_container.getChildAt(h), h != d.container && h.set_visible(!1);
                    d.t += a.step.step_size;
                    a = H.clamp0to1(d.t / Hc.alpha_out_time);
                    d.container.set_alpha(ma.cubicEnd(1, 0, a));
                    1 == a && (d.container.set_alpha(0), d.state = qb.LevelEndGoToNext)
                } else d.state == qb.LevelEndGoToNext && D.gotoNextLevelOrMainMenu(a);
                return !0
            };
            var Dt = function() {};
            g["bikas.game.SoundSnapshot"] =
                Dt;
            Dt.__name__ = ["bikas", "game", "SoundSnapshot"];
            Dt.prototype = {
                file_name: null,
                __class__: Dt
            };
            var wd = function() {
                this.sound_play_triggered = [];
                this.dragging_part_name = "";
                this.snapped_parts_names = [];
                this.level_state = null
            };
            g["bikas.game.Snapshot"] = wd;
            wd.__name__ = ["bikas", "game", "Snapshot"];
            wd.prototype = {
                snapshot_type: null,
                level_state: null,
                snapped_parts_names: null,
                dragging_part_name: null,
                sound_play_triggered: null,
                __class__: wd
            };
            var Pv = function() {
                this.play_end = -1;
                this.play_start = 0;
                this.snapshots = []
            };
            g["bikas.game.LevelRecord"] =
                Pv;
            Pv.__name__ = ["bikas", "game", "LevelRecord"];
            Pv.prototype = {
                name: null,
                level_name: null,
                snapshots: null,
                play_start: null,
                play_end: null,
                __class__: Pv
            };
            var Qv = function() {
                this.records = [];
                this.name = ""
            };
            g["bikas.game.Movie"] = Qv;
            Qv.__name__ = ["bikas", "game", "Movie"];
            Qv.prototype = {
                name: null,
                records: null,
                __class__: Qv
            };
            var ih = g["bikas.game.PlaybackType"] = {
                __ename__: ["bikas", "game", "PlaybackType"],
                __constructs__: ["JustPlay", "Export30fps", "Export60fps"]
            };
            ih.JustPlay = ["JustPlay", 0];
            ih.JustPlay.toString = l;
            ih.JustPlay.__enum__ =
                ih;
            ih.Export30fps = ["Export30fps", 1];
            ih.Export30fps.toString = l;
            ih.Export30fps.__enum__ = ih;
            ih.Export60fps = ["Export60fps", 2];
            ih.Export60fps.toString = l;
            ih.Export60fps.__enum__ = ih;
            var Rv = function() {
                this.progress_name = this.progress_info = this.progress_frame_time = "";
                this.current_movie_level_record_index = 0;
                this.current_movie_playback = null;
                this.playback_type = ih.JustPlay;
                this.paused = !1;
                this.current_playback_frame = 0;
                this.current_level_record_playback = null;
                this.recording_frames = 0;
                this.current_level_record = null;
                this.sound_pack_to_file_name_map = new Qa
            };
            g["bikas.game.RecordData"] = Rv;
            Rv.__name__ = ["bikas", "game", "RecordData"];
            Rv.prototype = {
                sound_pack_to_file_name_map: null,
                current_level_record: null,
                recording_frames: null,
                current_level_record_playback: null,
                current_playback_frame: null,
                paused: null,
                playback_type: null,
                current_movie_playback: null,
                current_movie_level_record_index: null,
                progress_name: null,
                progress_info: null,
                progress_frame_time: null,
                __class__: Rv
            };
            var Rg = function() {};
            g["bikas.game.LevelRecorderDo"] = Rg;
            Rg.__name__ = ["bikas", "game", "LevelRecorderDo"];
            Rg.captureFrame = function(a, b, c, d) {
                var e = new wd,
                    f = !1,
                    h = !1,
                    k = !1;
                0 < b.snapshots.length && (b.snapshots[b.snapshots.length - 1].snapshot_type == wd.snapshot_type_gameplay ? f = !0 : b.snapshots[b.snapshots.length - 1].snapshot_type == wd.snapshot_type_transition_in ? h = !0 : b.snapshots[b.snapshots.length - 1].snapshot_type == wd.snapshot_type_transition_out && (k = !0));
                if (null != c.main_menu) h || k || f ? (e.snapshot_type = wd.snapshot_type_go_to_main_menu, w.trace("set snapshot type to snapshot_type_go_to_main_menu", {
                    fileName: "LevelRecorderDo.hx",
                    lineNumber: 154,
                    className: "bikas.game.LevelRecorderDo",
                    methodName: "captureFrame"
                })) : e.snapshot_type = wd.snapshot_type_main_menu;
                else if (null != c.level) switch (Q.enumIndex(c.level.state)) {
                    case 0:
                        e.snapshot_type = wd.snapshot_type_transition_in;
                        break;
                    case 1:
                        e.snapshot_type = wd.snapshot_type_transition_out;
                        break;
                    case 2:
                        e.snapshot_type = wd.snapshot_type_gameplay
                }
                if (e.snapshot_type == wd.snapshot_type_gameplay || f)
                    for (e.level_state = ja.getCurrentLevelStateSnapshot(c), e.dragging_part_name =
                        null != c.level.dragging_part ? c.level.dragging_part.entity.name : "", e.snapped_parts_names = [], f = 0, c = c.level.parts; f < c.length;) h = c[f], ++f, h.snapped && e.snapped_parts_names.push(h.entity.name);
                e.sound_play_triggered = [];
                for (c = 0; c < d.length;) f = d[c], ++c, a.sound_pack_to_file_name_map.exists(f) ? (h = new Dt, h.file_name = a.sound_pack_to_file_name_map.get(f), e.sound_play_triggered.push(h)) : w.trace("warning: " + E.string(f.sound_asset.sound_class) + " is not mapped", {
                    fileName: "LevelRecorderDo.hx",
                    lineNumber: 201,
                    className: "bikas.game.LevelRecorderDo",
                    methodName: "captureFrame"
                });
                b.snapshots.push(e)
            };
            Rg.startPlayback = function(a, b, c, d) {
                null == c.level ? D.loadGameByLevelName(c, b.level_name, !0) : c.current_level.prefab_name != b.level_name && D.loadGameByLevelName(c, b.level_name, !0);
                null != a.current_level_record_playback && Rg.stopPlayback(a, c);
                a.paused = !1;
                a.current_level_record_playback = b;
                0 > b.play_start || b.play_start >= b.snapshots.length - 1 ? (w.trace("warning: play_start " + b.play_start + " is invalid for record " + b.name, {
                    fileName: "LevelRecorderDo.hx",
                    lineNumber: 242,
                    className: "bikas.game.LevelRecorderDo",
                    methodName: "startPlayback"
                }), a.current_playback_frame = 0) : a.current_playback_frame = b.play_start;
                a.playback_type = d;
                w.trace("play: " + a.current_level_record_playback.name, {
                    fileName: "LevelRecorderDo.hx",
                    lineNumber: 249,
                    className: "bikas.game.LevelRecorderDo",
                    methodName: "startPlayback"
                })
            };
            Rg.stopPlayback = function(a, b) {
                a.paused = !1;
                if (null != a.current_level_record_playback && (w.trace("stop playback: " + a.current_level_record_playback.name, {
                        fileName: "LevelRecorderDo.hx",
                        lineNumber: 255,
                        className: "bikas.game.LevelRecorderDo",
                        methodName: "stopPlayback"
                    }), a.current_level_record_playback = null, null != b.level))
                    for (a = 0, b = b.level.parts; a < b.length;) {
                        var c = b[a];
                        ++a;
                        c.snapped || c.is_static_part || Ea.setBrightness(c.entity.display.container, 0)
                    }
            };
            Rg.stepCurrentRecord = function(a, b) {
                var c = a.current_level_record_playback;
                if (null == c) return !1;
                a.current_playback_frame = H.clampInt(a.current_playback_frame, 0, c.snapshots.length - 1);
                a = Rg.playSnapshot(a, c, c.snapshots[a.current_playback_frame], b);
                b.record_data.current_playback_frame++;
                return a
            };
            Rg.playSnapshot = function(a, b, c, d) {
                var e = !1,
                    f = c.snapshot_type == wd.snapshot_type_gameplay || c.snapshot_type == wd.snapshot_type_transition_in || c.snapshot_type == wd.snapshot_type_transition_out;
                c.snapshot_type == wd.snapshot_type_transition_in && (e = !0);
                c.snapshot_type == wd.snapshot_type_transition_out && (e = !0);
                if (f) {
                    if (null == d.level) return w.trace("warning: game.level == null", {
                        fileName: "LevelRecorderDo.hx",
                        lineNumber: 315,
                        className: "bikas.game.LevelRecorderDo",
                        methodName: "playSnapshot"
                    }), !1;
                    if (d.current_level.prefab_name !=
                        b.level_name) return w.trace("warning: wrong level (" + d.current_level.prefab_name + "), should be: " + b.level_name, {
                        fileName: "LevelRecorderDo.hx",
                        lineNumber: 320,
                        className: "bikas.game.LevelRecorderDo",
                        methodName: "playSnapshot"
                    }), !1
                }
                f = b.snapshots.indexOf(c);
                if (-1 == f) return w.trace("warning: snapshot is not part of record", {
                    fileName: "LevelRecorderDo.hx",
                    lineNumber: 328,
                    className: "bikas.game.LevelRecorderDo",
                    methodName: "playSnapshot"
                }), !1;
                c.snapshot_type == wd.snapshot_type_go_to_main_menu && (D.openMainMenu(d,
                    !0), e = !0);
                var h = !1;
                0 < f && b.snapshots[f - 1].snapshot_type == wd.snapshot_type_gameplay && (h = !0);
                if (c.snapshot_type == wd.snapshot_type_gameplay || h) {
                    ja.setLevelStates(d.level, c.level_state) && (e = !0);
                    b = 0;
                    for (f = d.level.parts; b < f.length;) {
                        h = f[b];
                        ++b;
                        for (var k = !1, m = 0, r = c.snapped_parts_names; m < r.length;) {
                            var g = r[m];
                            ++m;
                            g == h.entity.name && (k = !0)
                        }
                        c.dragging_part_name == h.entity.name ? Ea.isBrightnessSame(h.entity.display.container, .2) || (Ea.setBrightness(h.entity.display.container, .2), e = !0) : k ? h.snapped || (Ea.isBrightnessSame(h.entity.display.container,
                            0) || Ea.setBrightness(h.entity.display.container, 0), ja.snapSinglePartToFinal(h), e = !0) : k || h.is_static_part || (h.snapped ? (Ea.isBrightnessSame(h.entity.display.container, 0) || Ea.setBrightness(h.entity.display.container, 0), ja.unsnapPart(h), e = !0) : Ea.isBrightnessSame(h.entity.display.container, 0) || (Ea.setBrightness(h.entity.display.container, 0), e = !0))
                    }
                    b = 0;
                    for (f = c.sound_play_triggered; b < f.length;)
                        for (h = f[b], ++b, k = a.sound_pack_to_file_name_map.keys(); k.hasNext();)
                            if (m = k.next(), a.sound_pack_to_file_name_map.get(m) ==
                                h.file_name) {
                                va.play(m);
                                break
                            }
                    "" == c.dragging_part_name && ja.tryToSnapAllPartsAndCheckLevelEnd(d) && (e = !0)
                }
                return e
            };
            var Ra = g["bikas.game.LevelPackIconState"] = {
                __ename__: ["bikas", "game", "LevelPackIconState"],
                __constructs__: "IconLocked IconLockedTimed IconLockedNotIncludedYet IconUnlocked IconNext IconNextLockedTimed IconCompleted IconJustCompleted".split(" ")
            };
            Ra.IconLocked = ["IconLocked", 0];
            Ra.IconLocked.toString = l;
            Ra.IconLocked.__enum__ = Ra;
            Ra.IconLockedTimed = ["IconLockedTimed", 1];
            Ra.IconLockedTimed.toString =
                l;
            Ra.IconLockedTimed.__enum__ = Ra;
            Ra.IconLockedNotIncludedYet = ["IconLockedNotIncludedYet", 2];
            Ra.IconLockedNotIncludedYet.toString = l;
            Ra.IconLockedNotIncludedYet.__enum__ = Ra;
            Ra.IconUnlocked = ["IconUnlocked", 3];
            Ra.IconUnlocked.toString = l;
            Ra.IconUnlocked.__enum__ = Ra;
            Ra.IconNext = ["IconNext", 4];
            Ra.IconNext.toString = l;
            Ra.IconNext.__enum__ = Ra;
            Ra.IconNextLockedTimed = ["IconNextLockedTimed", 5];
            Ra.IconNextLockedTimed.toString = l;
            Ra.IconNextLockedTimed.__enum__ = Ra;
            Ra.IconCompleted = ["IconCompleted", 6];
            Ra.IconCompleted.toString =
                l;
            Ra.IconCompleted.__enum__ = Ra;
            Ra.IconJustCompleted = ["IconJustCompleted", 7];
            Ra.IconJustCompleted.toString = l;
            Ra.IconJustCompleted.__enum__ = Ra;
            var sc = function() {
                this.bang_sound_played = !1;
                this.animation_time = 0;
                this.animation_on = this.animation_circle_effect_on = !1;
                this.hourglass_icon = this.pack_new_icon = null;
                this.is_source_from_cache = !0;
                this.secondary_background = this.just_completed_effect_circle = this.just_completed_large_icon_with_background = null;
                this.state = Ra.IconLocked
            };
            g["bikas.game.LevelPackIcon"] =
                sc;
            sc.__name__ = ["bikas", "game", "LevelPackIcon"];
            sc.__interfaces__ = [gh];
            sc.prototype = {
                current_background: null,
                downed_background: null,
                state: null,
                level_pack_reference: null,
                container: null,
                radius: null,
                button: null,
                background: null,
                secondary_background: null,
                just_completed_effect_circle: null,
                just_completed_large_icon_with_background: null,
                is_source_from_cache: null,
                icon: null,
                hourglass_icon: null,
                pack_new_icon: null,
                animation_on: null,
                animation_circle_effect_on: null,
                animation_time: null,
                bang_sound_played: null,
                __class__: sc
            };
            var Qe = g["bikas.game.TimelineAlign"] = {
                __ename__: ["bikas", "game", "TimelineAlign"],
                __constructs__: ["TimelineLeft", "TimelineCenter", "TimelineRight"]
            };
            Qe.TimelineLeft = ["TimelineLeft", 0];
            Qe.TimelineLeft.toString = l;
            Qe.TimelineLeft.__enum__ = Qe;
            Qe.TimelineCenter = ["TimelineCenter", 1];
            Qe.TimelineCenter.toString = l;
            Qe.TimelineCenter.__enum__ = Qe;
            Qe.TimelineRight = ["TimelineRight", 2];
            Qe.TimelineRight.toString = l;
            Qe.TimelineRight.__enum__ = Qe;
            var Et = function() {
                this.next_pack_already_marked = this.should_save = !1;
                this.align =
                    Qe.TimelineLeft
            };
            g["bikas.game.TimelineIcons"] = Et;
            Et.__name__ = ["bikas", "game", "TimelineIcons"];
            Et.prototype = {
                container: null,
                icons: null,
                line: null,
                align: null,
                width_for_icons: null,
                level_pack_radius: null,
                next_pack_already_marked: null,
                should_save: null,
                __class__: Et
            };
            var be = g["bikas.game.StarState"] = {
                __ename__: ["bikas", "game", "StarState"],
                __constructs__: ["Normal", "AnimateInBigStar", "AnimateOutEffect", "AnimateWait"]
            };
            be.Normal = ["Normal", 0];
            be.Normal.toString = l;
            be.Normal.__enum__ = be;
            be.AnimateInBigStar = ["AnimateInBigStar",
                1
            ];
            be.AnimateInBigStar.toString = l;
            be.AnimateInBigStar.__enum__ = be;
            be.AnimateOutEffect = ["AnimateOutEffect", 2];
            be.AnimateOutEffect.toString = l;
            be.AnimateOutEffect.__enum__ = be;
            be.AnimateWait = ["AnimateWait", 3];
            be.AnimateWait.toString = l;
            be.AnimateWait.__enum__ = be;
            var nj = function() {
                this.bang_sound_played = !1;
                this.animation_time = 0;
                this.big_star = this.star_effect = null;
                this.state = be.Normal
            };
            g["bikas.game.Star"] = nj;
            nj.__name__ = ["bikas", "game", "Star"];
            nj.prototype = {
                empty_source: null,
                full_source: null,
                state: null,
                bitmap: null,
                big_star: null,
                star_effect: null,
                animation_time: null,
                middle_position: null,
                after_weekly_position: null,
                on_weekly_position: null,
                on_weekly_history_position: null,
                bang_sound_played: null,
                __class__: nj
            };
            var ce = g["bikas.game.WeeklyState"] = {
                __ename__: ["bikas", "game", "WeeklyState"],
                __constructs__: ["WeeklyLocked", "WeeklyUnlockTransitionIn", "WeeklyUnlockTransitionInEmptyStars", "WeeklyUnlocked"]
            };
            ce.WeeklyLocked = ["WeeklyLocked", 0];
            ce.WeeklyLocked.toString = l;
            ce.WeeklyLocked.__enum__ = ce;
            ce.WeeklyUnlockTransitionIn = ["WeeklyUnlockTransitionIn", 1];
            ce.WeeklyUnlockTransitionIn.toString = l;
            ce.WeeklyUnlockTransitionIn.__enum__ = ce;
            ce.WeeklyUnlockTransitionInEmptyStars = ["WeeklyUnlockTransitionInEmptyStars", 2];
            ce.WeeklyUnlockTransitionInEmptyStars.toString = l;
            ce.WeeklyUnlockTransitionInEmptyStars.__enum__ = ce;
            ce.WeeklyUnlocked = ["WeeklyUnlocked", 3];
            ce.WeeklyUnlocked.toString = l;
            ce.WeeklyUnlocked.__enum__ = ce;
            var nf = g["bikas.game.WeeklyHistoryState"] = {
                __ename__: ["bikas", "game", "WeeklyHistoryState"],
                __constructs__: ["WeeklyHistoryLocked",
                    "WeeklyHistoryUnlockTransitionIn", "WeeklyHistoryUnlocked"
                ]
            };
            nf.WeeklyHistoryLocked = ["WeeklyHistoryLocked", 0];
            nf.WeeklyHistoryLocked.toString = l;
            nf.WeeklyHistoryLocked.__enum__ = nf;
            nf.WeeklyHistoryUnlockTransitionIn = ["WeeklyHistoryUnlockTransitionIn", 1];
            nf.WeeklyHistoryUnlockTransitionIn.toString = l;
            nf.WeeklyHistoryUnlockTransitionIn.__enum__ = nf;
            nf.WeeklyHistoryUnlocked = ["WeeklyHistoryUnlocked", 2];
            nf.WeeklyHistoryUnlocked.toString = l;
            nf.WeeklyHistoryUnlocked.__enum__ = nf;
            var Ki = function() {};
            g["bikas.game.WeeklyHistoryIcon"] =
                Ki;
            Ki.__name__ = ["bikas", "game", "WeeklyHistoryIcon"];
            Ki.__interfaces__ = [gh];
            Ki.prototype = {
                current_background: null,
                downed_background: null,
                container: null,
                background: null,
                bitmap: null,
                button: null,
                __class__: Ki
            };
            var jk = function() {
                this.animation_time = 0;
                this.weekly_history_state = nf.WeeklyHistoryLocked;
                this.state = ce.WeeklyLocked
            };
            g["bikas.game.Weekly"] = jk;
            jk.__name__ = ["bikas", "game", "Weekly"];
            jk.prototype = {
                state: null,
                weekly_history_state: null,
                container: null,
                icon: null,
                history_icon: null,
                animation_time: null,
                __class__: jk
            };
            var Iq = function() {};
            g["bikas.game.Credits"] = Iq;
            Iq.__name__ = ["bikas", "game", "Credits"];
            Iq.__interfaces__ = [gh];
            Iq.prototype = {
                sprite: null,
                button: null,
                __class__: Iq
            };
            var lg = function() {
                this.current_time = 0
            };
            g["bikas.game.FloatingStar"] = lg;
            lg.__name__ = ["bikas", "game", "FloatingStar"];
            lg.prototype = {
                container: null,
                bitmap: null,
                position: null,
                start: null,
                end: null,
                current_time: null,
                __class__: lg
            };
            var kk = function() {
                this.current_time = 0;
                this.icon = null
            };
            g["bikas.game.FloatingIcon"] = kk;
            kk.__name__ = ["bikas", "game", "FloatingIcon"];
            kk.prototype = {
                icon: null,
                current_time: null,
                __class__: kk
            };
            var jd = g["bikas.game.FinalAnimationState"] = {
                __ename__: ["bikas", "game", "FinalAnimationState"],
                __constructs__: ["ShowStars", "PhaseOutLevelPacks", "PhaseInCreditsBackground", "PhaseInCreditsTexts", "FinalAnimationDone"]
            };
            jd.ShowStars = ["ShowStars", 0];
            jd.ShowStars.toString = l;
            jd.ShowStars.__enum__ = jd;
            jd.PhaseOutLevelPacks = ["PhaseOutLevelPacks", 1];
            jd.PhaseOutLevelPacks.toString = l;
            jd.PhaseOutLevelPacks.__enum__ = jd;
            jd.PhaseInCreditsBackground = ["PhaseInCreditsBackground",
                2
            ];
            jd.PhaseInCreditsBackground.toString = l;
            jd.PhaseInCreditsBackground.__enum__ = jd;
            jd.PhaseInCreditsTexts = ["PhaseInCreditsTexts", 3];
            jd.PhaseInCreditsTexts.toString = l;
            jd.PhaseInCreditsTexts.__enum__ = jd;
            jd.FinalAnimationDone = ["FinalAnimationDone", 4];
            jd.FinalAnimationDone.toString = l;
            jd.FinalAnimationDone.__enum__ = jd;
            var Sg = function() {
                this.credits_current_time = 0;
                this.all_buttons = [];
                this.anim_display_objects = [];
                this.completed_text_generated = !1;
                this.icons = [];
                this.spawn_time = this.current_star_time = 0;
                this.stars = [];
                this.spawn_locations = [];
                this.star_bitmap_source = null;
                this.state = jd.ShowStars
            };
            g["bikas.game.FinalAnimation"] = Sg;
            Sg.__name__ = ["bikas", "game", "FinalAnimation"];
            Sg.prototype = {
                state: null,
                star_bitmap_source: null,
                spawn_locations: null,
                stars: null,
                spawn_time: null,
                current_star_time: null,
                icons: null,
                credits_container: null,
                title: null,
                completed_text: null,
                completed_text_generated: null,
                created_by_text: null,
                music_by_text: null,
                testing_by_text: null,
                continue_button: null,
                background: null,
                created_by_link_cover: null,
                anim_display_objects: null,
                all_buttons: null,
                credits_current_time: null,
                __class__: Sg
            };
            var Ft = function() {};
            g["bikas.game.Title"] = Ft;
            Ft.__name__ = ["bikas", "game", "Title"];
            Ft.prototype = {
                container: null,
                title: null,
                __class__: Ft
            };
            var Vf = function() {
                this.bitmap_data_generated_during_runtime = !1
            };
            g["bikas.game.MainMenuButton"] = Vf;
            Vf.__name__ = ["bikas", "game", "MainMenuButton"];
            Vf.__interfaces__ = [gh];
            Vf.prototype = {
                upped_bitmap_data: null,
                downed_bitmap_data: null,
                bitmap: null,
                button: null,
                bitmap_data_generated_during_runtime: null,
                __class__: Vf
            };
            var jh = g["bikas.game.MainMenuDisplayType"] = {
                __ename__: ["bikas", "game", "MainMenuDisplayType"],
                __constructs__: ["HorizontalSplit", "VerticalCentered"]
            };
            jh.HorizontalSplit = ["HorizontalSplit", 0];
            jh.HorizontalSplit.toString = l;
            jh.HorizontalSplit.__enum__ = jh;
            jh.VerticalCentered = ["VerticalCentered", 1];
            jh.VerticalCentered.toString = l;
            jh.VerticalCentered.__enum__ = jh;
            var Pe = g["bikas.game.MainMenuState"] = {
                __ename__: ["bikas", "game", "MainMenuState"],
                __constructs__: ["TransitionIn", "TransitionOut", "Normal"]
            };
            Pe.TransitionIn = ["TransitionIn", 0];
            Pe.TransitionIn.toString = l;
            Pe.TransitionIn.__enum__ = Pe;
            Pe.TransitionOut = ["TransitionOut", 1];
            Pe.TransitionOut.toString = l;
            Pe.TransitionOut.__enum__ = Pe;
            Pe.Normal = ["Normal", 2];
            Pe.Normal.toString = l;
            Pe.Normal.__enum__ = Pe;
            var Ab = function() {
                this.animation_time = 0;
                this.all_buttons = [];
                this.final_animation = this.html5_shape_fold_button = this.html5_credits_button = this.blurred_main_menu_cache = null;
                this.covered_areas = [];
                this.next_icon_cache = this.next_weekly_icon_cache = this.just_completed_icon_cache =
                    null;
                this.timeline_icons = [];
                this.stars = [];
                this.to_level = "";
                this.state = Pe.Normal
            };
            g["bikas.game.MainMenu"] = Ab;
            Ab.__name__ = ["bikas", "game", "MainMenu"];
            Ab.prototype = {
                state: null,
                to_level: null,
                container: null,
                background: null,
                title: null,
                stars: null,
                weekly: null,
                credits: null,
                timeline_icons: null,
                next_icon_cache: null,
                next_weekly_icon_cache: null,
                just_completed_icon_cache: null,
                middle_line: null,
                covered_areas: null,
                final_animation: null,
                html5_shape_fold_button: null,
                html5_credits_button: null,
                blurred_main_menu_cache: null,
                all_buttons: null,
                animation_time: null,
                __class__: Ab
            };
            var ua = g["bikas.game.PlayWindowOpenType"] = {
                __ename__: ["bikas", "game", "PlayWindowOpenType"],
                __constructs__: "OpenLevelPack OpenWeeklyHistory OpenAdConsent OpenBuyWithGoBack OpenContinueOnMobile OpenSettings OpenCredits OpenUnlockLevels OpenPurchaseDeferred OpenPurchasePurchased OpenPurchaseFailed OpenPurchaseRefunded OpenPurchaseRestored OpenPurchaseRemoved OpenPurchaseNotAllowed OpenPurchaseCanceled OpenPurchaseItemAlreadyOwned OpenUnlockFailed OpenUnlockSuccess".split(" ")
            };
            ua.OpenLevelPack = ["OpenLevelPack", 0];
            ua.OpenLevelPack.toString = l;
            ua.OpenLevelPack.__enum__ = ua;
            ua.OpenWeeklyHistory = ["OpenWeeklyHistory", 1];
            ua.OpenWeeklyHistory.toString = l;
            ua.OpenWeeklyHistory.__enum__ = ua;
            ua.OpenAdConsent = ["OpenAdConsent", 2];
            ua.OpenAdConsent.toString = l;
            ua.OpenAdConsent.__enum__ = ua;
            ua.OpenBuyWithGoBack = ["OpenBuyWithGoBack", 3];
            ua.OpenBuyWithGoBack.toString = l;
            ua.OpenBuyWithGoBack.__enum__ = ua;
            ua.OpenContinueOnMobile = ["OpenContinueOnMobile", 4];
            ua.OpenContinueOnMobile.toString = l;
            ua.OpenContinueOnMobile.__enum__ =
                ua;
            ua.OpenSettings = ["OpenSettings", 5];
            ua.OpenSettings.toString = l;
            ua.OpenSettings.__enum__ = ua;
            ua.OpenCredits = ["OpenCredits", 6];
            ua.OpenCredits.toString = l;
            ua.OpenCredits.__enum__ = ua;
            ua.OpenUnlockLevels = ["OpenUnlockLevels", 7];
            ua.OpenUnlockLevels.toString = l;
            ua.OpenUnlockLevels.__enum__ = ua;
            ua.OpenPurchaseDeferred = ["OpenPurchaseDeferred", 8];
            ua.OpenPurchaseDeferred.toString = l;
            ua.OpenPurchaseDeferred.__enum__ = ua;
            ua.OpenPurchasePurchased = ["OpenPurchasePurchased", 9];
            ua.OpenPurchasePurchased.toString = l;
            ua.OpenPurchasePurchased.__enum__ =
                ua;
            ua.OpenPurchaseFailed = ["OpenPurchaseFailed", 10];
            ua.OpenPurchaseFailed.toString = l;
            ua.OpenPurchaseFailed.__enum__ = ua;
            ua.OpenPurchaseRefunded = ["OpenPurchaseRefunded", 11];
            ua.OpenPurchaseRefunded.toString = l;
            ua.OpenPurchaseRefunded.__enum__ = ua;
            ua.OpenPurchaseRestored = ["OpenPurchaseRestored", 12];
            ua.OpenPurchaseRestored.toString = l;
            ua.OpenPurchaseRestored.__enum__ = ua;
            ua.OpenPurchaseRemoved = ["OpenPurchaseRemoved", 13];
            ua.OpenPurchaseRemoved.toString = l;
            ua.OpenPurchaseRemoved.__enum__ = ua;
            ua.OpenPurchaseNotAllowed = ["OpenPurchaseNotAllowed", 14];
            ua.OpenPurchaseNotAllowed.toString = l;
            ua.OpenPurchaseNotAllowed.__enum__ = ua;
            ua.OpenPurchaseCanceled = ["OpenPurchaseCanceled", 15];
            ua.OpenPurchaseCanceled.toString = l;
            ua.OpenPurchaseCanceled.__enum__ = ua;
            ua.OpenPurchaseItemAlreadyOwned = ["OpenPurchaseItemAlreadyOwned", 16];
            ua.OpenPurchaseItemAlreadyOwned.toString = l;
            ua.OpenPurchaseItemAlreadyOwned.__enum__ = ua;
            ua.OpenUnlockFailed = ["OpenUnlockFailed", 17];
            ua.OpenUnlockFailed.toString = l;
            ua.OpenUnlockFailed.__enum__ = ua;
            ua.OpenUnlockSuccess = ["OpenUnlockSuccess", 18];
            ua.OpenUnlockSuccess.toString = l;
            ua.OpenUnlockSuccess.__enum__ = ua;
            var za = g["bikas.game.PlayWindowType"] = {
                __ename__: ["bikas", "game", "PlayWindowType"],
                __constructs__: "RegularPlay SomeLevelsFinished Locked TimedLockedHTML5 PlayOrRemoveAds LinksToMobileVersion WatchAdToUnlockHTML5 TimedLockedWatchAdToUnlockHTML5 WatchAdOrBuy BuyWithLevelPack WeeklyHistorySelect AdConsentSelect BuyWithGoBack SettingsMenu CreditsMenu UnlockLevelsMenu EventPrompt".split(" ")
            };
            za.RegularPlay = ["RegularPlay",
                0
            ];
            za.RegularPlay.toString = l;
            za.RegularPlay.__enum__ = za;
            za.SomeLevelsFinished = ["SomeLevelsFinished", 1];
            za.SomeLevelsFinished.toString = l;
            za.SomeLevelsFinished.__enum__ = za;
            za.Locked = ["Locked", 2];
            za.Locked.toString = l;
            za.Locked.__enum__ = za;
            za.TimedLockedHTML5 = ["TimedLockedHTML5", 3];
            za.TimedLockedHTML5.toString = l;
            za.TimedLockedHTML5.__enum__ = za;
            za.PlayOrRemoveAds = ["PlayOrRemoveAds", 4];
            za.PlayOrRemoveAds.toString = l;
            za.PlayOrRemoveAds.__enum__ = za;
            za.LinksToMobileVersion = ["LinksToMobileVersion", 5];
            za.LinksToMobileVersion.toString =
                l;
            za.LinksToMobileVersion.__enum__ = za;
            za.WatchAdToUnlockHTML5 = ["WatchAdToUnlockHTML5", 6];
            za.WatchAdToUnlockHTML5.toString = l;
            za.WatchAdToUnlockHTML5.__enum__ = za;
            za.TimedLockedWatchAdToUnlockHTML5 = ["TimedLockedWatchAdToUnlockHTML5", 7];
            za.TimedLockedWatchAdToUnlockHTML5.toString = l;
            za.TimedLockedWatchAdToUnlockHTML5.__enum__ = za;
            za.WatchAdOrBuy = ["WatchAdOrBuy", 8];
            za.WatchAdOrBuy.toString = l;
            za.WatchAdOrBuy.__enum__ = za;
            za.BuyWithLevelPack = ["BuyWithLevelPack", 9];
            za.BuyWithLevelPack.toString = l;
            za.BuyWithLevelPack.__enum__ =
                za;
            za.WeeklyHistorySelect = ["WeeklyHistorySelect", 10];
            za.WeeklyHistorySelect.toString = l;
            za.WeeklyHistorySelect.__enum__ = za;
            za.AdConsentSelect = ["AdConsentSelect", 11];
            za.AdConsentSelect.toString = l;
            za.AdConsentSelect.__enum__ = za;
            za.BuyWithGoBack = ["BuyWithGoBack", 12];
            za.BuyWithGoBack.toString = l;
            za.BuyWithGoBack.__enum__ = za;
            za.SettingsMenu = ["SettingsMenu", 13];
            za.SettingsMenu.toString = l;
            za.SettingsMenu.__enum__ = za;
            za.CreditsMenu = ["CreditsMenu", 14];
            za.CreditsMenu.toString = l;
            za.CreditsMenu.__enum__ = za;
            za.UnlockLevelsMenu = ["UnlockLevelsMenu", 15];
            za.UnlockLevelsMenu.toString = l;
            za.UnlockLevelsMenu.__enum__ = za;
            za.EventPrompt = ["EventPrompt", 16];
            za.EventPrompt.toString = l;
            za.EventPrompt.__enum__ = za;
            var ge = g["bikas.game.PlayWindowState"] = {
                __ename__: ["bikas", "game", "PlayWindowState"],
                __constructs__: ["Normal", "TransitionIn", "TransitionOut"]
            };
            ge.Normal = ["Normal", 0];
            ge.Normal.toString = l;
            ge.Normal.__enum__ = ge;
            ge.TransitionIn = ["TransitionIn", 1];
            ge.TransitionIn.toString = l;
            ge.TransitionIn.__enum__ = ge;
            ge.TransitionOut = ["TransitionOut",
                2
            ];
            ge.TransitionOut.toString = l;
            ge.TransitionOut.__enum__ = ge;
            var he = g["bikas.game.PlayWindowCloseType"] = {
                __ename__: ["bikas", "game", "PlayWindowCloseType"],
                __constructs__: ["PlayWindowCloseInstantly", "PlayWindowJustClose", "PlayWindowPlayLevel"]
            };
            he.PlayWindowCloseInstantly = ["PlayWindowCloseInstantly", 0];
            he.PlayWindowCloseInstantly.toString = l;
            he.PlayWindowCloseInstantly.__enum__ = he;
            he.PlayWindowJustClose = ["PlayWindowJustClose", 1];
            he.PlayWindowJustClose.toString = l;
            he.PlayWindowJustClose.__enum__ = he;
            he.PlayWindowPlayLevel = ["PlayWindowPlayLevel", 2];
            he.PlayWindowPlayLevel.toString = l;
            he.PlayWindowPlayLevel.__enum__ = he;
            var xd = function() {
                this.enabled_window_buttons = [];
                this.time = 0;
                this.timed_unlock_text_days = this.timed_unlock_text_hours = this.timed_unlock_text_minutes = this.timed_unlock_text_seconds = this.previous_window_open_type = this.previous_window_pack = null;
                this.page_scroll_current_time = this.total_pages = 0;
                this.page_scroll_is_animating = !1;
                this.current_weekly_page_index = this.next_weekly_page_index = 0;
                this.purchase_display =
                    this.fake_html5_button = null;
                this.dynamic_texts = [];
                this.input_texts = [];
                this.texts = [];
                this.icons = [];
                this.locked = this.play_button = this.remove_ads_button = this.continue_on_android = this.continue_on_ios = this.watch_ad_button = this.buy_button = this.restore_purchase_button = this.go_back_button = this.ok_button = this.consent_personalized_ads_button = this.consent_non_personalized_ads_button = this.consent_remove_ads_button = this.consent_learn_more_fake_button = this.credits_twitter_fake_button = this.change_ad_settings_button =
                    this.credits_button = this.level_unlock = this.apply_code = null;
                this.navigation_buttons = [];
                this.next_button = this.previous_button = null;
                this.background_is_generated = !0;
                this.exported_images_reference = this.blurred_main_menu_reference = this.prompt_backgound = null;
                this.is_game_bought_at_window_creation = this.product_price_is_set = !1;
                this.pack = this.progress_pack_reference = null;
                this.accumulated_update_time = 0;
                this.was_downed_inside_game_container = !1;
                this.create_close_button = this.can_close_outside = !0;
                this.middle_x =
                    this.middle_y = this.bottom_y = 0;
                this.height = 180;
                this.width = 300;
                this.scale = 1;
                this.is_destroyed = !1;
                this.prompt_message_class = null;
                this.to_level = "";
                this.close_type = he.PlayWindowJustClose;
                this.state = ge.TransitionIn;
                this.type = za.Locked;
                this.open_type = ua.OpenLevelPack
            };
            g["bikas.game.PlayWindow"] = xd;
            xd.__name__ = ["bikas", "game", "PlayWindow"];
            xd.prototype = {
                open_type: null,
                type: null,
                state: null,
                close_type: null,
                to_level: null,
                prompt_message_class: null,
                is_destroyed: null,
                scale: null,
                width: null,
                height: null,
                middle_x: null,
                middle_y: null,
                bottom_y: null,
                create_close_button: null,
                can_close_outside: null,
                was_downed_inside_game_container: null,
                accumulated_update_time: null,
                pack: null,
                progress_pack_reference: null,
                is_game_bought_at_window_creation: null,
                product_price_is_set: null,
                exported_images_reference: null,
                container: null,
                blurred_main_menu_reference: null,
                prompt_backgound: null,
                cover: null,
                background_source: null,
                background_is_generated: null,
                background: null,
                window_rectangle: null,
                weekly_icon_container: null,
                close_button: null,
                next_button: null,
                previous_button: null,
                navigation_buttons: null,
                locked: null,
                play_button: null,
                remove_ads_button: null,
                continue_on_android: null,
                continue_on_ios: null,
                watch_ad_button: null,
                buy_button: null,
                restore_purchase_button: null,
                go_back_button: null,
                ok_button: null,
                consent_personalized_ads_button: null,
                consent_non_personalized_ads_button: null,
                consent_remove_ads_button: null,
                consent_learn_more_fake_button: null,
                credits_twitter_fake_button: null,
                change_ad_settings_button: null,
                credits_button: null,
                level_unlock: null,
                apply_code: null,
                icons: null,
                texts: null,
                input_texts: null,
                dynamic_texts: null,
                purchase_display: null,
                fake_html5_button: null,
                current_weekly_page_index: null,
                next_weekly_page_index: null,
                page_scroll_is_animating: null,
                page_scroll_current_time: null,
                total_pages: null,
                timed_unlock_text_days: null,
                timed_unlock_text_hours: null,
                timed_unlock_text_minutes: null,
                timed_unlock_text_seconds: null,
                previous_window_open_type: null,
                previous_window_pack: null,
                time: null,
                enabled_window_buttons: null,
                __class__: xd
            };
            var kh = function() {
                this.is_downed = !1;
                this.bitmap_buttons_are_generated = !0;
                this.parent = this.bitmap = this.downed_bitmap = this.hidden_button_for_links = null;
                this.name = ""
            };
            g["bikas.game.WindowButton"] = kh;
            kh.__name__ = ["bikas", "game", "WindowButton"];
            kh.__interfaces__ = [gh];
            kh.prototype = {
                name: null,
                parent: null,
                bitmap: null,
                downed_bitmap: null,
                hidden_button_for_links: null,
                bitmap_buttons_are_generated: null,
                button: null,
                x_offset: null,
                y_offset: null,
                is_downed: null,
                __class__: kh
            };
            var Re = g["bikas.game.PurchaseState"] = {
                __ename__: ["bikas", "game", "PurchaseState"],
                __constructs__: ["None", "PurchaseLoading", "PurchaseProcessing", "PurchaseRestoring", "PurchaseWaitingForApproval"]
            };
            Re.None = ["None", 0];
            Re.None.toString = l;
            Re.None.__enum__ = Re;
            Re.PurchaseLoading = ["PurchaseLoading", 1];
            Re.PurchaseLoading.toString = l;
            Re.PurchaseLoading.__enum__ = Re;
            Re.PurchaseProcessing = ["PurchaseProcessing", 2];
            Re.PurchaseProcessing.toString = l;
            Re.PurchaseProcessing.__enum__ = Re;
            Re.PurchaseRestoring = ["PurchaseRestoring", 3];
            Re.PurchaseRestoring.toString = l;
            Re.PurchaseRestoring.__enum__ = Re;
            Re.PurchaseWaitingForApproval = ["PurchaseWaitingForApproval", 4];
            Re.PurchaseWaitingForApproval.toString = l;
            Re.PurchaseWaitingForApproval.__enum__ = Re;
            var Gt = function() {};
            g["bikas.game.PurchaseDisplay"] = Gt;
            Gt.__name__ = ["bikas", "game", "PurchaseDisplay"];
            Gt.prototype = {
                loading_text: null,
                processing_text: null,
                restoring_text: null,
                approval_text: null,
                rotating_circle: null,
                __class__: Gt
            };
            var Vb = g["bikas.game.WindowLevelIconState"] = {
                __ename__: ["bikas", "game", "WindowLevelIconState"],
                __constructs__: "WindowLevelIconStateLocked WindowLevelIconStateUnlocked WindowLevelIconStateUnlockedVisible WindowLevelIconStateNext WindowLevelIconStateCompleted WindowLevelIconStateSkipped".split(" ")
            };
            Vb.WindowLevelIconStateLocked = ["WindowLevelIconStateLocked", 0];
            Vb.WindowLevelIconStateLocked.toString = l;
            Vb.WindowLevelIconStateLocked.__enum__ = Vb;
            Vb.WindowLevelIconStateUnlocked = ["WindowLevelIconStateUnlocked", 1];
            Vb.WindowLevelIconStateUnlocked.toString = l;
            Vb.WindowLevelIconStateUnlocked.__enum__ = Vb;
            Vb.WindowLevelIconStateUnlockedVisible = ["WindowLevelIconStateUnlockedVisible", 2];
            Vb.WindowLevelIconStateUnlockedVisible.toString = l;
            Vb.WindowLevelIconStateUnlockedVisible.__enum__ = Vb;
            Vb.WindowLevelIconStateNext = ["WindowLevelIconStateNext", 3];
            Vb.WindowLevelIconStateNext.toString = l;
            Vb.WindowLevelIconStateNext.__enum__ = Vb;
            Vb.WindowLevelIconStateCompleted = ["WindowLevelIconStateCompleted", 4];
            Vb.WindowLevelIconStateCompleted.toString = l;
            Vb.WindowLevelIconStateCompleted.__enum__ = Vb;
            Vb.WindowLevelIconStateSkipped = ["WindowLevelIconStateSkipped", 5];
            Vb.WindowLevelIconStateSkipped.toString = l;
            Vb.WindowLevelIconStateSkipped.__enum__ = Vb;
            var Jh = g["bikas.game.WindowLevelIconType"] = {
                __ename__: ["bikas", "game", "WindowLevelIconType"],
                __constructs__: ["WindowLevelIconSpecificLevel", "WindowLevelIconWeeklyHistoryLevelPack"]
            };
            Jh.WindowLevelIconSpecificLevel = ["WindowLevelIconSpecificLevel", 0];
            Jh.WindowLevelIconSpecificLevel.toString = l;
            Jh.WindowLevelIconSpecificLevel.__enum__ = Jh;
            Jh.WindowLevelIconWeeklyHistoryLevelPack = ["WindowLevelIconWeeklyHistoryLevelPack", 1];
            Jh.WindowLevelIconWeeklyHistoryLevelPack.toString = l;
            Jh.WindowLevelIconWeeklyHistoryLevelPack.__enum__ = Jh;
            var pl = function() {
                this.level_reference = this.weekly_level_pack_reference =
                    this.text_field = this.text_number = null;
                this.state = Vb.WindowLevelIconStateLocked;
                this.type = Jh.WindowLevelIconSpecificLevel
            };
            g["bikas.game.WindowLevelIcon"] = pl;
            pl.__name__ = ["bikas", "game", "WindowLevelIcon"];
            pl.__interfaces__ = [gh];
            pl.prototype = {
                current_background: null,
                downed_background: null,
                type: null,
                state: null,
                level_reference: null,
                weekly_level_pack_reference: null,
                container: null,
                radius: null,
                background: null,
                icon: null,
                button: null,
                text_field: null,
                text_field_bitmap: null,
                text_number: null,
                local_bounds: null,
                __class__: pl
            };
            var Cg = g["bikas.game.InterLevelMenuState"] = {
                __ename__: ["bikas", "game", "InterLevelMenuState"],
                __constructs__: ["TransitionIn", "Opened", "TransitionOut"]
            };
            Cg.TransitionIn = ["TransitionIn", 0];
            Cg.TransitionIn.toString = l;
            Cg.TransitionIn.__enum__ = Cg;
            Cg.Opened = ["Opened", 1];
            Cg.Opened.toString = l;
            Cg.Opened.__enum__ = Cg;
            Cg.TransitionOut = ["TransitionOut", 2];
            Cg.TransitionOut.toString = l;
            Cg.TransitionOut.__enum__ = Cg;
            var kg = function() {
                this.time = 0;
                this.enabled_level_icons = [];
                this.next_level_icon = null;
                this.all_level_icons = []
            };
            g["bikas.game.InterLevelMenu"] = kg;
            kg.__name__ = ["bikas", "game", "InterLevelMenu"];
            kg.prototype = {
                container: null,
                background: null,
                state: null,
                level_pack: null,
                all_level_icons: null,
                next_level_icon: null,
                enabled_level_icons: null,
                time: null,
                __class__: kg
            };
            var Lb = function() {};
            g["bikas.game.MainMenuDo"] = Lb;
            Lb.__name__ = ["bikas", "game", "MainMenuDo"];
            Lb.createMainMenu = function(a, b) {
                var c = xa.start(Dd.JustEnd, "createMainMenu");
                D.refreshGameAssetCache(a);
                xa.snapshot(c, "refreshGameAssetCache");
                var d = !1,
                    e = a.size.width /
                    gc.default_size.width,
                    f = a.size.height / gc.default_size.height;
                var h = a.size.width < a.size.height ? a.size.width / gc.default_size.height : a.size.height / gc.default_size.height;
                var k = Ia.getLevelPackIconRadius(a.size),
                    m = new Ab;
                m.state = b;
                m.container = new S;
                m.title = Lb.createTitle(a.cache, m, a.current_dot_grid, a.size, h);
                xa.snapshot(c, "create title");
                b = a.progress_save;
                var r = null;
                if ("" != b.last_level_completed_or_skipped && a.game_levels.level_map.exists(b.last_level_completed_or_skipped)) {
                    var g = a.game_levels.level_map.get(b.last_level_completed_or_skipped);
                    if (null != g.parent_pack)
                        if (Ia.findProgressSavePackFromLevelPack(b, g.parent_pack).completed) {
                            if (null != g.parent_pack.parent_timeline) {
                                var l = g.parent_pack.parent_timeline.packs.indexOf(g.parent_pack);
                                if (-1 == l) w.trace("warning: index == -1, can't happen", {
                                    fileName: "MainMenuDo.hx",
                                    lineNumber: 137,
                                    className: "bikas.game.MainMenuDo",
                                    methodName: "createMainMenu"
                                });
                                else if (l < g.parent_pack.parent_timeline.packs.length - 1 && !g.parent_pack.parent_timeline.is_weekly) {
                                    l += 1;
                                    for (var n = g.parent_pack.parent_timeline.packs.length; l <
                                        n;) {
                                        var p = l++,
                                            x = Ia.findProgressSavePackFromLevelPack(b, g.parent_pack.parent_timeline.packs[p]);
                                        if (null != x && !x.completed) {
                                            r = g.parent_pack.parent_timeline.packs[p];
                                            break
                                        }
                                    }
                                }
                            }
                        } else r = g.parent_pack
                }
                xa.snapshot(c, "select next level pack");
                n = Ia.getTimelineWidth(a.size, 5);
                g = Ab.timeline_height_distance * h;
                p = a.size.width / 2 - n - a.size.width * Ab.timeline_position_x_coeff;
                b = a.size.height * Ab.timeline_position_y_coeff;
                x = a.size.width / 2 + a.size.width * Ab.timeline_position_x_coeff;
                var z = a.size.height * Ab.timeline_position_y_coeff,
                    u = a.size.width / 2 - n / 2;
                l = a.size.height * Ab.timeline_position_y_coeff;
                a.size.width < a.size.height && (z = b = l = (Math.round(.5 * a.current_dot_grid.h_count) / a.current_dot_grid.h_count + .01) * a.size.height);
                if (Ab.display_type == jh.HorizontalSplit) m.timeline_icons.push(Lb.createTimelineIcons(a, r, a.game_levels.main_timelines[0], Qe.TimelineLeft, k, n, p, b - g, null)), m.timeline_icons.push(Lb.createTimelineIcons(a, r, a.game_levels.main_timelines[1], Qe.TimelineLeft, k, n, p, b, m.timeline_icons[0])), m.timeline_icons.push(Lb.createTimelineIcons(a,
                    r, a.game_levels.main_timelines[2], Qe.TimelineLeft, k, n, p, b + g, m.timeline_icons[1])), m.timeline_icons.push(Lb.createTimelineIcons(a, r, a.game_levels.main_timelines[3], Qe.TimelineRight, k, n, x, z - g, m.timeline_icons[2])), m.timeline_icons.push(Lb.createTimelineIcons(a, r, a.game_levels.main_timelines[4], Qe.TimelineRight, k, n, x, z, m.timeline_icons[3])), m.timeline_icons.push(Lb.createTimelineIcons(a, r, a.game_levels.main_timelines[5], Qe.TimelineRight, k, n, x, z + g, m.timeline_icons[4]));
                else if (Ab.display_type == jh.VerticalCentered) {
                    m.timeline_icons.push(Lb.createTimelineIcons(a,
                        r, a.game_levels.main_timelines[0], Qe.TimelineCenter, k, n, u, l - g, null));
                    p = n = 0;
                    for (x = a.game_levels.main_timelines[1].packs; p < x.length;) z = x[p], ++p, z.html5_unlock_type != Ed.NotIncludedYet && ++n;
                    n = Ia.getTimelineWidth(a.size, n);
                    m.timeline_icons.push(Lb.createTimelineIcons(a, r, a.game_levels.main_timelines[1], Qe.TimelineCenter, k, n, a.size.width / 2 - n / 2, l, m.timeline_icons[0]))
                }
                r = 0;
                for (n = m.timeline_icons; r < n.length;)
                    for (x = n[r], ++r, x.should_save && (d = !0), p = 0, x = x.icons; p < x.length;) z = x[p], ++p, z.state == Ra.IconNext ? m.next_icon_cache =
                        z : z.state == Ra.IconJustCompleted && (m.just_completed_icon_cache = z);
                xa.snapshot(c, "create timeline icons");
                r = m.container;
                p = l - g + 65 * h + 2 * k;
                k = h;
                g = D.findButton(a.exported_images, "credits_button");
                l = D.findButton(a.exported_images, "credits_button_pressed");
                n = V.createBitmapUsingSource(g.source);
                a.size.height > a.size.width && (k = a.size.width / n.get_width() * .9);
                n.set_scaleX(n.set_scaleY(k / g.source.scale * 1.1));
                n.set_x(-n.get_width() / 2 + a.size.width / 2);
                n.set_y(-n.get_height() / 2 + p);
                p = new Vf;
                r = Va.convertRectangle(n.getBounds(r));
                p.button = Ia.createRectangleButton(r);
                p.bitmap = n;
                p.upped_bitmap_data = g.source.bitmap_data;
                p.downed_bitmap_data = l.source.bitmap_data;
                w.trace("create button: credits_button, rect: " + E.string(p.button.rectangle) + ", scale: " + k, {
                    fileName: "MainMenuDo.hx",
                    lineNumber: 280,
                    className: "bikas.game.MainMenuDo",
                    methodName: "createMainMenu"
                });
                m.html5_credits_button = p;
                m.stars = [];
                Ab.display_type == jh.HorizontalSplit && (m.middle_line = V.createBitmapUsingSource(a.cache.main_menu_sources.middle_line), m.middle_line.set_scaleX(.999),
                    m.middle_line.set_scaleY(.999), m.middle_line.set_x(a.size.width / 2 - m.middle_line.get_width() / 2), m.middle_line.set_y(b - m.middle_line.get_height() / 2), xa.snapshot(c, "create middle line"));
                if (!a.progress_save.final_animation_played) {
                    k = !0;
                    b = 0;
                    for (r = m.timeline_icons[0].icons; b < r.length;)
                        if (g = r[b], ++b, g.state != Ra.IconCompleted && g.state != Ra.IconJustCompleted) {
                            k = !1;
                            break
                        } k && (m.final_animation = Lb.createFinalAnimation(a, m, h, m.timeline_icons))
                }
                m.container.addChild(m.title.container);
                null != m.weekly && (m.container.addChild(m.weekly.container),
                    m.weekly.state != ce.WeeklyLocked && (k = Va.convertRectangle(m.weekly.container.getBounds(m.container)), xb.expandRectangle(k, 5 * f), m.covered_areas.push(k)));
                k = [];
                b = 0;
                for (r = m.stars; b < r.length;) g = r[b], ++b, m.container.addChild(g.bitmap), k.push(Va.convertRectangle(g.bitmap.getBounds(m.container)));
                0 < k.length && (k = H.getTotalRectangle(k), xb.expandRectangle(k, 6 * f), m.covered_areas.push(k));
                null != m.credits && (m.container.addChild(m.credits.sprite), k = m.credits.sprite.getBounds(m.container), k = Va.convertRectangle(k),
                    m.credits.button = Ia.createRectangleButton(k));
                Ab.display_type == jh.HorizontalSplit && (m.container.addChildAt(m.middle_line, 1), k = Va.convertRectangle(m.middle_line.getBounds(m.container)), xb.expandRectangleWidth(k, 15 * e), xb.expandRectangleHeight(k, 5), m.covered_areas.push(k));
                k = [];
                b = 0;
                for (r = m.timeline_icons; b < r.length;) g = r[b], ++b, m.container.addChild(g.container), l = g.container.get_x(), n = g.container.get_y(), p = g.level_pack_radius, g = new Ie(l - p, n - p, g.width_for_icons + 2 * p, 2 * p), k.push(g);
                if (0 < k.length)
                    for (1 < k.length &&
                        (k[1].y -= 10 * f, k[1].height += 20 * f), b = 0; b < k.length;) {
                        r = k[b];
                        ++b;
                        g = null;
                        switch (Q.enumIndex(Ab.display_type)) {
                            case 0:
                                g = H.expandRectangleHorizontally(r, 20 * e);
                                break;
                            case 1:
                                g = H.expandRectangleHorizontally(r, 15 * e)
                        }
                        m.covered_areas.push(g)
                    }
                null != m.html5_shape_fold_button && (e = H.copyRectangle(m.html5_shape_fold_button.button.rectangle), xb.expandRectangle(e, 10 * h), m.covered_areas.push(e), m.container.addChild(m.html5_shape_fold_button.bitmap));
                null != m.html5_credits_button && (e = H.copyRectangle(m.html5_credits_button.button.rectangle),
                    xb.expandRectangle(e, 10 * h), m.covered_areas.push(e), m.container.addChild(m.html5_credits_button.bitmap));
                h = Va.convertRectangle(m.title.container.getBounds(m.container));
                h.width -= 57.3 * m.title.title.get_scaleX();
                xb.expandRectangleWidth(h, 10 * f);
                m.covered_areas.push(h);
                xa.snapshot(c, "add to display");
                m.background = D.createAndDrawBackground(a.graphics_scale, a.size.width, a.size.height, a.current_dot_grid, m.covered_areas, a.config.type == db.FlashDevelopment && sa.debug_background_show_side_shades);
                m.container.addChildAt(m.background.bitmap,
                    0);
                xa.snapshot(c, "create background");
                m.all_buttons = [];
                f = 0;
                for (h = m.timeline_icons; f < h.length;)
                    for (k = h[f], ++f, e = 0, k = k.icons; e < k.length;) b = k[e], ++e, b.state != Ra.IconLockedNotIncludedYet && m.all_buttons.push(b);
                null != m.weekly && (m.weekly.state != ce.WeeklyLocked && m.all_buttons.push(m.weekly.icon), m.weekly.weekly_history_state != nf.WeeklyHistoryLocked && m.all_buttons.push(m.weekly.history_icon));
                null != m.html5_shape_fold_button && m.all_buttons.push(m.html5_shape_fold_button);
                null != m.html5_credits_button && m.all_buttons.push(m.html5_credits_button);
                null != m.credits && null != m.credits.button && m.all_buttons.push(m.credits);
                f = 0;
                for (h = m.stars; f < h.length;) e = h[f], ++f, a.progress_save.unlocked_weekly_history && !a.progress_save.unlocked_weekly_history_shown ? (e.bitmap.set_x(e.after_weekly_position.x), e.bitmap.set_y(e.after_weekly_position.y)) : a.progress_save.unlocked_weekly && !a.progress_save.unlocked_weekly_shown && (e.bitmap.set_x(e.middle_position.x), e.bitmap.set_y(e.middle_position.y));
                null != m.weekly && m.weekly.state != ce.WeeklyUnlocked && m.weekly.container.set_visible(!1);
                xa.snapshot(c, "additional");
                Lb.saveMainMenuSnapshot(m, a.size);
                xa.snapshot(c, "saveMainMenuSnapshot");
                a.progress_save.unlocked_weekly && !a.progress_save.unlocked_weekly_shown && (d = a.progress_save.unlocked_weekly_shown = !0);
                a.progress_save.unlocked_weekly_history && !a.progress_save.unlocked_weekly_history_shown && (d = a.progress_save.unlocked_weekly_history_shown = !0);
                d && (D.saveAllProgressToFile(a.progress_serial_data, a.progress_save), xa.snapshot(c, "saveAllProgressToFile"));
                xa.end(c);
                return m
            };
            Lb.createTitle =
                function(a, b, c, d, e) {
                    b = new Ft;
                    b.container = new S;
                    b.title = cb.createBitmap(a.main_menu_sources.title_text, e);
                    c = c.points[1];
                    a = c[0].y;
                    0 == c.length % 2 ? (e = Math.round(c.length / 2), c = (c[e].x + c[e - 1].x) / 2) : c = c[Math.round((c.length - 1) / 2)].x;
                    b.container.set_x(c);
                    b.container.set_y(a + d.height / gc.default_size.height * 2.5 * Ab.title_scale);
                    b.container.addChild(b.title);
                    return b
                };
            Lb.createFinalAnimation = function(a, b, c, d) {
                d = new Sg;
                d.star_bitmap_source = a.cache.main_menu_sources.star;
                d.stars = [];
                for (var e = 0, f = b.timeline_icons; e <
                    f.length;) {
                    var h = f[e];
                    ++e;
                    for (var k = 0, m = h.icons; k < m.length;) {
                        var r = m[k];
                        ++k;
                        var g = h.container.get_x() + r.container.get_x();
                        r = h.container.get_y() + r.container.get_y();
                        d.spawn_locations.push(new W(g, r))
                    }
                }
                e = D.generateDotGrid(a.size.width, a.size.height);
                f = [];
                d.credits_container = new S;
                d.title = Lb.createTitle(a.cache, b, e, a.size, c);
                h = function(a, b, c, d, e, f) {
                    null == f && (f = 0);
                    b.set_scaleX(c);
                    b.set_scaleY(c);
                    a = V.createAndDrawSource(b, !0, !0, 5, 5);
                    a = V.createBitmapUsingSource(a);
                    a.set_x(d.width / 2 - a.get_width() / 2 + f);
                    a.set_y(e);
                    return a
                };
                m = k = 5;
                k = 10;
                m = 0;
                b = b.title.container.get_y() + .15 * b.title.container.get_height() + (k - 3) * c;
                r = D.findCacheImage(a.exported_images, "completed_text");
                g = V.createBitmapUsingSource(r.source);
                r = c / r.source.scale * .8;
                g.set_scaleX(r);
                g.set_scaleY(r);
                g.set_x(a.size.width / 2 - g.get_width() / 2 + 5 * c);
                g.set_y(b);
                d.completed_text = g;
                d.completed_text_generated = !1;
                b += d.completed_text.get_height() + k * c;
                d.created_by_text = h(d.credits_container, new sp, c, a.size, b, m * c);
                d.created_by_link_cover = new S;
                d.created_by_link_cover.set_x(d.created_by_text.get_x());
                d.created_by_link_cover.set_y(d.created_by_text.get_y());
                d.created_by_link_cover.get_graphics().beginFill(0, 1);
                d.created_by_link_cover.get_graphics().drawRect(0, .5 * d.created_by_text.get_height(), d.created_by_text.get_width(), .5 * d.created_by_text.get_height());
                d.created_by_link_cover.get_graphics().endFill();
                d.created_by_link_cover.set_alpha(0);
                d.created_by_link_cover.mouseEnabled = !0;
                d.created_by_link_cover.set_buttonMode(!0);
                d.created_by_link_cover.addEventListener("click", Y.twitterClickEvent);
                b +=
                    d.created_by_text.get_height() + k * c;
                d.music_by_text = h(d.credits_container, new vp, c, a.size, b, m * c);
                b += d.music_by_text.get_height() + k * c;
                d.testing_by_text = h(d.credits_container, new Jp, c, a.size, b, m * c);
                b += d.testing_by_text.get_height() + (k + 5) * c;
                d.continue_button = function(a, b, c, d, e, f, h, k) {
                    c = new Vf;
                    d = D.findButton(a.exported_images, e);
                    var m = D.findButton(a.exported_images, f);
                    f = d.source;
                    d = m.source;
                    m = V.createBitmapUsingSource(f);
                    m.set_scaleX(m.set_scaleY(k / f.scale));
                    m.set_x(-m.get_width() / 2 + a.size.width / 2);
                    m.set_y(h);
                    a = Va.convertRectangle(m.getBounds(b));
                    c.button = Ia.createRectangleButton(a);
                    c.bitmap = m;
                    c.upped_bitmap_data = f.bitmap_data;
                    c.downed_bitmap_data = d.bitmap_data;
                    w.trace("create button: " + e + ", rect: " + E.string(c.button.rectangle) + ", scale: " + k, {
                        fileName: "MainMenuDo.hx",
                        lineNumber: 1034,
                        className: "bikas.game.MainMenuDo",
                        methodName: "createFinalAnimation"
                    });
                    return c
                }(a, d.credits_container, new yc, new Gc, "continue_button", "continue_button_pressed", b, c);
                b = new Ie(d.title.container.get_x() - d.title.container.get_width() /
                    2, 0, d.title.container.get_width(), a.size.height);
                b.x -= 10 * c;
                b.width += 20 * c;
                f.push(b);
                d.background = D.createAndDrawBackground(a.graphics_scale, a.size.width, a.size.height, e, f, a.config.type == db.FlashDevelopment && sa.debug_background_show_side_shades);
                d.credits_container.addChild(d.background.bitmap);
                d.credits_container.addChild(d.title.container);
                d.credits_container.addChild(d.completed_text);
                d.credits_container.addChild(d.created_by_text);
                d.credits_container.addChild(d.created_by_link_cover);
                d.credits_container.addChild(d.music_by_text);
                d.credits_container.addChild(d.testing_by_text);
                d.credits_container.addChild(d.continue_button.bitmap);
                d.anim_display_objects = [d.completed_text, d.created_by_text, d.music_by_text, d.testing_by_text, d.continue_button.bitmap];
                d.background.bitmap.set_alpha(0);
                a = 0;
                for (c = d.anim_display_objects; a < c.length;) b = c[a], ++a, b.set_alpha(0);
                d.all_buttons.push(d.continue_button);
                d.state = jd.ShowStars;
                return d
            };
            Lb.createTimelineIcons = function(a, b, c, d, e, f, h, k, m) {
                var r = a.size,
                    g = a.progress_save,
                    l = a.cache.main_menu_sources,
                    n = new Et;
                n.container = new S;
                n.container.set_x(h);
                n.container.set_y(k);
                n.width_for_icons = f;
                n.level_pack_radius = e;
                n.line = V.createBitmapUsingSource(l.timeline_line);
                n.line.set_scaleX(.999);
                n.line.set_scaleY(.999);
                n.line.set_width(n.width_for_icons);
                n.align = d;
                switch (Q.enumIndex(n.align)) {
                    case 0:
                        n.line.set_x(f);
                        n.line.set_scaleX(-.999);
                        break;
                    case 1:
                        n.line.set_x(0)
                }
                n.next_pack_already_marked = !1;
                null != m && (n.next_pack_already_marked = m.next_pack_already_marked);
                d = Ia.findProgressSaveTimeline(g, c.name);
                null ==
                    d && w.trace("warning: could not find progress save for " + c.name + " timeline", {
                        fileName: "MainMenuDo.hx",
                        lineNumber: 1165,
                        className: "bikas.game.MainMenuDo",
                        methodName: "createTimelineIcons"
                    });
                n.icons = [];
                h = 0;
                for (k = c.packs.length; h < k;) {
                    m = h++;
                    g = c.packs[m];
                    var p = null;
                    null != d && (p = Ia.findProgressSavePack(d, g.name));
                    var x = Ra.IconLocked;
                    if (null == p) w.trace("warning: could not find progress save for " + g.name + " pack", {
                        fileName: "MainMenuDo.hx",
                        lineNumber: 1183,
                        className: "bikas.game.MainMenuDo",
                        methodName: "createTimelineIcons"
                    });
                    else if (p.completed) p.completed_shown ? x = Ra.IconCompleted : (x = Ra.IconJustCompleted, p.completed_shown = !0, n.should_save = !0);
                    else if (p.unlocked)
                        if (null != b && b == g) switch (Q.enumIndex(g.html5_unlock_type)) {
                            case 0:
                                x = Ra.IconNext;
                                n.next_pack_already_marked = !0;
                                break;
                            case 1:
                                x = Ra.IconNextLockedTimed;
                                n.next_pack_already_marked = !0;
                                break;
                            case 2:
                                x = Ra.IconLockedNotIncludedYet, n.next_pack_already_marked = !0
                        } else if (null != b && b != g) switch (Q.enumIndex(g.html5_unlock_type)) {
                            case 0:
                                x = Ra.IconUnlocked;
                                break;
                            case 1:
                                x = Ra.IconNextLockedTimed;
                                break;
                            case 2:
                                x = Ra.IconLocked, w.trace("warning: this state can't happen because level_pack can't be unlocked and not included yet (must be timed if unlocked)", {
                                    fileName: "MainMenuDo.hx",
                                    lineNumber: 1223,
                                    className: "bikas.game.MainMenuDo",
                                    methodName: "createTimelineIcons"
                                })
                        } else if (null == b && !n.next_pack_already_marked) switch (Q.enumIndex(g.html5_unlock_type)) {
                            case 0:
                                x = Ra.IconNext;
                                n.next_pack_already_marked = !0;
                                break;
                            case 1:
                                x = Ra.IconNextLockedTimed;
                                n.next_pack_already_marked = !0;
                                break;
                            case 2:
                                x = Ra.IconLockedNotIncludedYet,
                                    n.next_pack_already_marked = !0
                        } else {
                            if (null == b && n.next_pack_already_marked) switch (Q.enumIndex(g.html5_unlock_type)) {
                                case 0:
                                    x = Ra.IconUnlocked;
                                    break;
                                case 1:
                                    x = Ra.IconNextLockedTimed;
                                    break;
                                case 2:
                                    x = Ra.IconLockedNotIncludedYet, w.trace("warning: this state can't happen because level_pack can't be unlocked and not included yet (must be timed if unlocked)", {
                                        fileName: "MainMenuDo.hx",
                                        lineNumber: 1251,
                                        className: "bikas.game.MainMenuDo",
                                        methodName: "createTimelineIcons"
                                    })
                            }
                        } else switch (Q.enumIndex(g.html5_unlock_type)) {
                            case 0:
                                x =
                                    Ra.IconLocked;
                                break;
                            case 1:
                                x = Ra.IconLockedTimed;
                                break;
                            case 2:
                                x = Ra.IconLockedNotIncludedYet
                        }
                    g = Lb.createLevelPackIcon(a.exported_images, l, g, e, x, r);
                    x = p = 0;
                    for (var z = c.packs; x < z.length;) {
                        var u = z[x];
                        ++x;
                        u.html5_unlock_type != Ed.NotIncludedYet && ++p
                    }
                    g.container.set_x(ma.linear(0, f, m / (p - 1)));
                    n.icons.push(g)
                }
                n.container.addChild(n.line);
                a = 0;
                for (b = n.icons; a < b.length;) c = b[a], ++a, n.container.addChild(c.container);
                return n
            };
            Lb.createLevelPackIcon = function(a, b, c, d, e, f) {
                var h = new sc;
                h.level_pack_reference = c;
                h.radius =
                    d;
                h.state = e;
                e = d / Ab.timeline_icon_radius;
                var k = H.clampMin(2 * e, 2);
                h.container = new S;
                h.button = Ia.createRadiusButtonForDisplayObject(h.radius, h.container);
                switch (Q.enumIndex(h.state)) {
                    case 0:
                        h.background = cb.createBitmapInContainer(b.timeline_icons.locked, e);
                        h.current_background = b.timeline_icons.locked;
                        h.downed_background = b.timeline_icons.downed;
                        break;
                    case 1:
                        h.background = cb.createBitmapInContainer(b.timeline_icons.locked, e);
                        h.current_background = b.timeline_icons.locked;
                        h.downed_background = b.timeline_icons.downed;
                        break;
                    case 2:
                        h.background = cb.createBitmapInContainer(b.timeline_icons.locked, e);
                        h.current_background = b.timeline_icons.locked;
                        h.downed_background = b.timeline_icons.downed;
                        break;
                    case 3:
                        h.background = cb.createBitmapInContainer(b.timeline_icons.unlocked, e);
                        h.current_background = b.timeline_icons.unlocked;
                        h.downed_background = b.timeline_icons.downed;
                        break;
                    case 4:
                        h.background = cb.createBitmapInContainer(b.timeline_icons.next, e);
                        h.current_background = b.timeline_icons.next;
                        h.downed_background = b.timeline_icons.next_downed;
                        h.secondary_background = cb.createBitmapInContainer(b.timeline_icons.unlocked, e);
                        h.animation_on = !0;
                        break;
                    case 5:
                        h.background = cb.createBitmapInContainer(b.timeline_icons.locked, e);
                        h.current_background = b.timeline_icons.unlocked;
                        h.downed_background = b.timeline_icons.downed;
                        break;
                    case 6:
                    case 7:
                        if (h.background = cb.createBitmapInContainer(b.timeline_icons.completed, e), h.current_background = b.timeline_icons.completed, h.downed_background = b.timeline_icons.downed, h.state == Ra.IconJustCompleted) {
                            h.secondary_background =
                                cb.createBitmapInContainer(b.timeline_icons.unlocked, e);
                            var m = new S;
                            Ea.drawCircle(m.get_graphics(), d + k, sa.level_pack_icon_finished_color, 1, 0, 0, 0);
                            m = V.createAndDrawSource(m, !0, !1, 5, 5);
                            h.just_completed_effect_circle = V.createBitmapContainer(m);
                            m = new S;
                            var r = sc.large_icon_start_scale;
                            Ea.drawCircle(m.get_graphics(), (d + k) * r, sa.level_pack_icon_border_color, 1, 0, 0, 0);
                            Ea.drawCircle(m.get_graphics(), d * r, sa.level_pack_icon_finished_color, 1, 0, 0, 0);
                            k = null;
                            null != c.icon_object_class && (k = aa.__cast(Q.createInstance(c.icon_object_class,
                                []), n), k.set_scaleX(.075 * c.icon_scale_coeff * e * r), k.set_scaleY(.075 * c.icon_scale_coeff * e * r));
                            null == k && (k = Zn.createCircle(d / 2));
                            m.addChild(k);
                            k = V.createAndDrawSource(m, !0, !1, 5, 5);
                            h.just_completed_large_icon_with_background = V.createBitmapContainer(k);
                            h.animation_on = !0
                        }
                }
                k = null;
                null == a ? null != c && (null == b.level_pack_icons ? w.trace("warning: cache.level_pack_icons == null", {
                        fileName: "MainMenuDo.hx",
                        lineNumber: 1451,
                        className: "bikas.game.MainMenuDo",
                        methodName: "createLevelPackIcon"
                    }) : b.level_pack_icons.exists(c.name) ?
                    k = b.level_pack_icons.get(c.name) : w.trace("warning: could not find icons in exported images: " + c.name, {
                        fileName: "MainMenuDo.hx",
                        lineNumber: 1456,
                        className: "bikas.game.MainMenuDo",
                        methodName: "createLevelPackIcon"
                    })) : null != c && (b = D.findLevelPackIcon(a, c.name, !0), m = D.findLevelPackIcon(a, c.name, !1), null != b || null != m) && (k = new pq, k.color = b.source, k.grey = m.source);
                null == k ? (k = cb.createLevelPackIconSourceForTimeline(c, f), h.is_source_from_cache = !1) : h.is_source_from_cache = !0;
                h.icon = h.state == Ra.IconLocked ? V.createBitmapContainer(k.grey) :
                    V.createBitmapContainer(k.color);
                h.state == Ra.IconLockedTimed ? (c = a.all_image_map.get("hourglass"), h.hourglass_icon = V.createBitmapUsingSource(c.source)) : h.state == Ra.IconNextLockedTimed ? (c = a.all_image_map.get("hourglass"), h.hourglass_icon = V.createBitmapUsingSource(c.source)) : h.state == Ra.IconLockedNotIncludedYet && h.container.set_visible(!1);
                null != h.level_pack_reference && null != h.level_pack_reference.html5_unlock_date && (c = (new Date).getTime() - h.level_pack_reference.html5_unlock_date.getTime(), c = Math.floor(c /
                    864E5), h.level_pack_reference.html5_unlock_type == Ed.Included && 7 > c && (c = a.all_image_map.get("pack_new"), h.pack_new_icon = V.createBitmapUsingSource(c.source)));
                null != a && (h.icon.container.set_scaleX(1 / a.cache.game_graphics_scale * e), h.icon.container.set_scaleY(1 / a.cache.game_graphics_scale * e));
                h.background.source.type == vg.BitmapDataSourceGenerated && (h.background.bitmap.set_scaleX(.999), h.background.bitmap.set_scaleY(.999));
                null != h.secondary_background && h.secondary_background.source.type == vg.BitmapDataSourceGenerated &&
                    (h.secondary_background.bitmap.set_scaleX(.999), h.secondary_background.bitmap.set_scaleY(.999));
                h.icon.source.type == vg.BitmapDataSourceGenerated && (h.icon.bitmap.set_scaleX(.999), h.icon.bitmap.set_scaleY(.999));
                null != h.just_completed_effect_circle && (h.just_completed_effect_circle.container.set_alpha(0), h.container.addChild(h.just_completed_effect_circle.container));
                h.container.addChild(h.background.container);
                null != h.secondary_background && (h.container.addChild(h.secondary_background.container), h.background.container.set_alpha(0));
                h.container.addChild(h.icon.container);
                null != h.hourglass_icon && (h.hourglass_icon.set_width(.8 * d), h.hourglass_icon.set_scaleY(h.hourglass_icon.get_scaleX()), h.hourglass_icon.set_x(-h.hourglass_icon.get_width() / 2), h.hourglass_icon.set_y(-h.hourglass_icon.get_height() / 2), h.container.addChild(h.hourglass_icon));
                null != h.pack_new_icon && (h.pack_new_icon.set_scaleX(.4 * e), h.pack_new_icon.set_scaleY(.4 * e), a = new W(-h.pack_new_icon.get_width() / 2, -h.pack_new_icon.get_height() / 2), Og.addxy(a, 0, -d), Og.rotate(a, -.34906585039886),
                    h.pack_new_icon.set_x(a.x), h.pack_new_icon.set_y(a.y), h.pack_new_icon.set_rotation(-20), h.container.addChild(h.pack_new_icon));
                return h
            };
            Lb.saveMainMenuSnapshot = function(a, b) {
                ia.getTimer();
                V.safeDestroyBitmapWithBitmapData(a.blurred_main_menu_cache);
                var c = b.height / gc.default_size.height * Ab.blurred_main_menu_blur;
                new lh(c, c, Ab.blurred_main_menu_quality);
                c = new S;
                Ea.drawRectangle(c.get_graphics(), b.width, b.height, 16777215, xd.cover_alpha, 0, 0, 0);
                c.set_x(b.width / 2);
                c.set_y(b.height / 2);
                a.container.addChild(c);
                a.blurred_main_menu_cache = V.createBitmapFromDisplayObject(a.container, !0, !1, 0, 0, new Ie(0, 0, b.width, b.height));
                a.container.set_filters([]);
                a.container.removeChild(c);
                c.get_graphics().clear()
            };
            Lb.setMainMenuAnimationValues = function(a, b, c, d, e, f) {
                a.background.bitmap.set_alpha(d);
                a.title.title.set_alpha(d);
                if (null != b.title_animation && 1 < b.title_animation.length) {
                    var h = Math.round(ma.linear(0, b.title_animation.length - 1, c));
                    f ? V.setBitmapUsingSource(a.title.title, b.title_animation[h]) : V.setBitmapUsingSource(a.title.title,
                        b.title_animation[b.title_animation.length - h - 1]);
                    a.title.title.set_scaleX(.999);
                    a.title.title.set_scaleY(.999);
                    a.title.title.smoothing = !0;
                    a.title.title.pixelSnapping = 2
                }
                b = 0;
                for (h = a.stars; b < h.length;) {
                    var k = h[b];
                    ++b;
                    k.bitmap.set_alpha(d)
                }
                null != a.weekly && a.weekly.container.set_alpha(d);
                null != a.middle_line && a.middle_line.set_alpha(d);
                null != a.html5_shape_fold_button && a.html5_shape_fold_button.bitmap.set_alpha(d);
                null != a.html5_credits_button && a.html5_credits_button.bitmap.set_alpha(d);
                null != a.credits &&
                    a.credits.sprite.set_alpha(d);
                b = 0;
                for (a = a.timeline_icons; b < a.length;) {
                    h = a[b];
                    ++b;
                    h.line.set_alpha(d);
                    switch (Q.enumIndex(h.align)) {
                        case 0:
                            h.line.set_scaleX(-e);
                            break;
                        case 1:
                            h.line.set_width(e * h.width_for_icons);
                            break;
                        case 2:
                            h.line.set_scaleX(e)
                    }
                    for (var m = k = 0, r = h.icons; m < r.length;) {
                        var g = r[m];
                        ++m;
                        var l = !1;
                        switch (Q.enumIndex(h.align)) {
                            case 0:
                                l = !0;
                                break;
                            case 1:
                                l = !1;
                                break;
                            case 2:
                                l = !1
                        }
                        var n = ma.getTClamped(0, l && f || !l && !f ? 1 - .1 * k : 1 - .1 * (h.icons.length - k - 1), c);
                        f ? (l = ma.cubicEnd(0, 1, n), n = ma.cubicEnd(.3, 1, n)) :
                            (l = ma.cubicStart(1, 0, n), n = ma.cubicStart(1, .3, n));
                        g.container.set_alpha(l);
                        g.container.set_scaleX(n);
                        g.container.set_scaleY(n);
                        ++k
                    }
                }
            };
            Lb.destroyMainMenu = function(a) {
                if (null != a.main_menu) {
                    var b = a.main_menu;
                    D.safeRemove(b.container);
                    V.safeDestroyBitmapWithBitmapData(b.blurred_main_menu_cache);
                    D.destroyBackground(b.background);
                    null != b.title && (D.safeRemove(b.title.container), D.safeRemove(b.title.title), b.title.title = null, b.title = null);
                    null != b.html5_shape_fold_button && (D.safeRemove(b.html5_shape_fold_button.bitmap),
                        b.html5_shape_fold_button = null);
                    null != b.html5_credits_button && (D.safeRemove(b.html5_credits_button.bitmap), b.html5_credits_button = null);
                    for (var c = 0, d = b.stars; c < d.length;) {
                        var e = d[c];
                        ++c;
                        D.safeRemove(e.bitmap);
                        e.bitmap.set_bitmapData(null)
                    }
                    b.stars = [];
                    null != b.final_animation && (Lb.destroyFinalAnimation(b.final_animation), b.final_animation = null);
                    c = function(a) {
                        D.safeRemove(a.background.container);
                        null != a.secondary_background && D.safeRemove(a.secondary_background.container);
                        D.safeRemove(a.container);
                        null !=
                            a.just_completed_effect_circle && V.destroyBitmapContainerIncludingBitmapDataSource(a.just_completed_effect_circle);
                        null != a.just_completed_large_icon_with_background && V.destroyBitmapContainerIncludingBitmapDataSource(a.just_completed_large_icon_with_background);
                        a.is_source_from_cache ? D.safeRemove(a.icon.container) : V.destroyBitmapContainerIncludingBitmapDataSource(a.icon);
                        D.safeRemove(a.hourglass_icon);
                        D.safeRemove(a.pack_new_icon);
                        a.just_completed_effect_circle = null;
                        a.just_completed_large_icon_with_background =
                            null;
                        a.level_pack_reference = null;
                        a.background = null;
                        a.icon = null;
                        a.container = null;
                        a.button = null
                    };
                    null != b.weekly && (D.safeRemove(b.weekly.container), c(b.weekly.icon), D.safeRemove(b.weekly.history_icon.container), D.safeRemove(b.weekly.history_icon.background.container), V.safeDestroyBitmapWithBitmapData(b.weekly.history_icon.bitmap), b.weekly.history_icon.container = null, b.weekly.history_icon.background = null, b.weekly.history_icon.bitmap = null, b.weekly.history_icon.current_background = null, b.weekly.history_icon.downed_background =
                        null, b.weekly.history_icon.button = null);
                    b.next_icon_cache = null;
                    b.next_weekly_icon_cache = null;
                    b.just_completed_icon_cache = null;
                    null != b.credits && (D.safeRemove(b.credits.sprite), b.credits.button = null);
                    d = 0;
                    for (e = b.timeline_icons; d < e.length;) {
                        var f = e[d];
                        ++d;
                        for (var h = 0, k = f.icons; h < k.length;) {
                            var m = k[h];
                            ++h;
                            c(m)
                        }
                        D.safeRemove(f.container)
                    }
                    D.safeRemove(b.middle_line);
                    a.main_menu = null
                }
            };
            Lb.destroyFinalAnimation = function(a) {
                a.all_buttons = null;
                D.safeRemove(a.credits_container);
                D.safeRemove(a.title.container);
                a.completed_text_generated && V.safeDestroyBitmapWithBitmapData(a.completed_text);
                V.safeDestroyBitmapWithBitmapData(a.created_by_text);
                V.safeDestroyBitmapWithBitmapData(a.music_by_text);
                V.safeDestroyBitmapWithBitmapData(a.testing_by_text);
                V.safeDestroyBitmapWithBitmapData(a.background.bitmap);
                a.created_by_link_cover.removeEventListener("click", Y.twitterClickEvent);
                D.safeRemove(a.created_by_link_cover);
                a.background.bitmap = null;
                a.background.source = null;
                a.background = null;
                a.credits_container = null;
                a.title =
                    null;
                a.completed_text = null;
                a.created_by_text = null;
                a.music_by_text = null;
                a.testing_by_text = null;
                D.safeRemove(a.continue_button.bitmap);
                a.continue_button.bitmap_data_generated_during_runtime && (a.continue_button.bitmap.set_bitmapData(null), a.continue_button.downed_bitmap_data.dispose(), a.continue_button.upped_bitmap_data.dispose());
                a.continue_button = null;
                D.safeRemove(a.created_by_link_cover);
                a.created_by_link_cover = null;
                a.anim_display_objects = null;
                for (var b = 0, c = a.stars; b < c.length;) {
                    var d = c[b];
                    ++b;
                    null !=
                        d.container.parent && d.container.removeChild(d.container);
                    d.bitmap.set_bitmapData(null);
                    d.container = null
                }
                a.stars = null;
                a.icons = null
            };
            Lb.updateMainMenu = function(a, b, c, d) {
                if (null == a.main_menu) w.trace("warning: game.main_menu == null", {
                    fileName: "MainMenuDo.hx",
                    lineNumber: 1980,
                    className: "bikas.game.MainMenuDo",
                    methodName: "updateMainMenu"
                });
                else {
                    c = a.main_menu;
                    for (var e = 0, f = a.game_levels.main_timelines; e < f.length;) {
                        var h = f[e];
                        ++e;
                        var k = (new Date).getTime(),
                            m = 0;
                        for (h = h.packs; m < h.length;) {
                            var g = h[m];
                            ++m;
                            null !=
                                g.html5_unlock_type && g.html5_unlock_type == Ed.TimedUnlock && null != g.html5_unlock_date && 0 >= g.html5_unlock_date.getTime() - k && (g.html5_unlock_type = Ed.Included)
                        }
                    }
                    e = 0;
                    for (f = c.timeline_icons; e < f.length;)
                        for (m = f[e], ++e, k = 0, m = m.icons; k < m.length;) h = m[k], ++k, null != h.hourglass_icon && h.hourglass_icon.get_visible() && null != h.level_pack_reference && null != h.level_pack_reference.html5_unlock_type && h.level_pack_reference.html5_unlock_type == Ed.Included && h.hourglass_icon.get_visible() && h.hourglass_icon.set_visible(!1);
                    if (c.state == Pe.TransitionIn) 0 == c.animation_time && (va.play(a.sounds.menu_transition_in), null != d && d.push(a.sounds.menu_transition_in)), c.animation_time += a.step.step_size, b = H.clamp0to1(c.animation_time / Ab.transition_in_time), d = ma.cubicEnd(0, 1, b), e = ma.cubicEnd(0, 1, b), Lb.setMainMenuAnimationValues(c, a.cache.main_menu_sources, b, d, .999 * e, !0), 1 == b && (c.state = Pe.Normal, null != a.level && ja.destroyLevel(a));
                    else if (c.state == Pe.TransitionOut) 0 == c.animation_time && (va.play(a.sounds.menu_transition_out), null != d && d.push(a.sounds.menu_transition_in)),
                        c.animation_time += a.step.step_size, b = H.clamp0to1(c.animation_time / Ab.transition_out_time), d = ma.cubicStart(1, 0, b), e = ma.cubicStart(1, 0, b), null == a.current_level_background.bitmap.parent && a.container.addChildAt(a.current_level_background.bitmap, 0), Lb.setMainMenuAnimationValues(c, a.cache.main_menu_sources, b, d, .999 * e, !1), 1 == b && (Lb.destroyMainMenu(a), a.main_menu = null, "" != c.to_level && D.loadGameByLevelName(a, c.to_level));
                    else if (c.state != Pe.Normal || a.progress_save.is_ad_consent_taken || a.progress_save.game_is_bought ||
                        a.checked_if_european_union_country) {
                        e = !1;
                        f = 0;
                        for (k = c.stars; f < k.length;)
                            if (m = k[f], ++f, m.state != be.Normal) {
                                e = !0;
                                break
                            } f = !1;
                        null != c.weekly && (f = c.weekly.state != ce.WeeklyUnlockTransitionIn && c.weekly.state != ce.WeeklyUnlockTransitionInEmptyStars ? c.weekly.weekly_history_state == nf.WeeklyHistoryUnlockTransitionIn : !0);
                        if (null != c.just_completed_icon_cache) Lb.updateJustCompletedLevelPackAnimation(c, a.step, a.sounds);
                        else if (e) Lb.updateStarTransitionInAnimations(c, a.step, a.sounds);
                        else if (f) Lb.updateWeeklyAndStarAnimations(c,
                            a.step, a.size, a.sounds);
                        else if (null != c.next_icon_cache || null != c.next_weekly_icon_cache) k = !1, null != a.record_data && null != a.record_data.current_level_record_playback && (k = !0), m = !0, k || null == c.next_icon_cache || (Lb.updateTransitionInNextLevelPackIcon(c, c.next_icon_cache, a.step, a.sounds, d), c.next_icon_cache.animation_on && (m = !1)), m && null != c.next_weekly_icon_cache && Lb.updateTransitionInNextLevelPackIcon(c, c.next_weekly_icon_cache, a.step, a.sounds);
                        null != c.just_completed_icon_cache || e || f || null == c.final_animation ?
                            b.button_state == ya.DOWNED ? (c = Ia.findClosestButton(c.all_buttons, a.finger_radius, b.downed), null != c && (E.is(c, sc) ? (c = aa.__cast(c, sc), cb.setBitmapUsingSource(c.background.bitmap, c.downed_background), D.playButtonDownSound(a.sounds)) : E.is(c, Ki) ? (c = aa.__cast(c, Ki), cb.setBitmapUsingSource(c.background.bitmap, c.downed_background), D.playButtonDownSound(a.sounds)) : E.is(c, Vf) && (c = aa.__cast(c, Vf), V.setBitmapData(c.bitmap, c.downed_bitmap_data), D.playButtonDownSound(a.sounds)))) : b.button_state == ya.UPPED && (d = Ia.findClosestButton(c.all_buttons,
                                a.finger_radius, b.downed), b = Ia.findClosestButton(c.all_buttons, a.finger_radius, b.upped), null != b && b == d && (E.is(b, sc) ? (c = aa.__cast(b, sc), D.openWindow(a, ua.OpenLevelPack, c.level_pack_reference)) : E.is(b, Ki) ? (aa.__cast(b, Ki), D.openWindow(a, ua.OpenWeeklyHistory)) : E.is(b, Iq) ? D.openSettingsWindow(a, ua.OpenCredits) : E.is(b, Vf) && (b = aa.__cast(b, Vf), b == c.html5_shape_fold_button ? D.openWindow(a, ua.OpenContinueOnMobile) : b == c.html5_credits_button ? D.openSettingsWindow(a, ua.OpenCredits) : w.trace("warning: unhandled type " +
                                E.string(b), {
                                    fileName: "MainMenuDo.hx",
                                    lineNumber: 2270,
                                    className: "bikas.game.MainMenuDo",
                                    methodName: "updateMainMenu"
                                }))), null != d && (E.is(d, sc) ? (a = aa.__cast(d, sc), cb.setBitmapUsingSource(a.background.bitmap, a.current_background)) : E.is(d, Ki) ? (a = aa.__cast(d, Ki), cb.setBitmapUsingSource(a.background.bitmap, a.current_background)) : E.is(d, Vf) && (a = aa.__cast(d, Vf), V.setBitmapData(a.bitmap, a.upped_bitmap_data)))) : Lb.updateFinalAnimation(a, c, a.step, b, a.sounds)
                    } else a.checked_if_european_union_country = !0
                }
            };
            Lb.updateJustCompletedLevelPackAnimation =
                function(a, b, c) {
                    var d = a.just_completed_icon_cache;
                    if (d.animation_on) {
                        a = d.just_completed_large_icon_with_background;
                        null == a.container.parent && (a.container.set_x(d.container.get_x() + d.container.parent.get_x()), a.container.set_y(d.container.get_y() + d.container.parent.get_y()), d.container.parent.parent.addChild(a.container), a.container.set_alpha(0));
                        0 == d.animation_time && va.play(c.just_completed_pack_transition);
                        d.animation_time += b.step_size;
                        b = H.clamp0to1(d.animation_time / sc.large_icon_time);
                        var e = ma.cubicStart(1,
                                1 / sc.large_icon_start_scale, b),
                            f = ma.cubicStart(0, 1, b);
                        a.container.set_scaleX(e);
                        a.container.set_scaleY(e);
                        a.container.set_alpha(f);
                        .85 < b && !d.bang_sound_played && (d.bang_sound_played = !0, va.play(c.just_completed_pack_bang));
                        1 == b && (d.bang_sound_played = !1, d.animation_time = 0, d.animation_on = !1, d.animation_circle_effect_on = !0, D.safeRemove(a.container), d.secondary_background.container.set_visible(!1), d.background.container.set_visible(!0), d.background.container.set_alpha(1))
                    } else d.animation_circle_effect_on &&
                        (c = d.just_completed_effect_circle, null == c.container.parent && (c.container.set_x(d.container.get_x() + d.container.parent.get_x()), c.container.set_y(d.container.get_y() + d.container.parent.get_y()), d.container.parent.parent.addChildAt(c.container, 0)), d.animation_time += b.step_size, b = H.clamp0to1(d.animation_time / sc.just_completed_circle_time), e = ma.cubicEnd(1, sc.just_completed_circle_scale, b), f = ma.cubicEnd(1, 0, b), c.container.set_scaleX(e), c.container.set_scaleY(e), c.container.set_alpha(f), 1 == b && (d.animation_circle_effect_on = !1, a.just_completed_icon_cache = null, D.safeRemove(c.container)))
                };
            Lb.updateStarTransitionInAnimations = function(a, b, c) {
                for (var d = 0, e = a.stars; d < e.length;) {
                    var f = e[d];
                    ++d;
                    if (f.state != be.Normal)
                        if (f.state == be.AnimateInBigStar) {
                            0 == f.animation_time && va.play(c.just_completed_pack_transition);
                            f.animation_time += b.step_size;
                            var h = H.clamp0to1(f.animation_time / nj.big_star_time),
                                k = ma.cubicStart(1, .16666666666666666, h),
                                m = ma.cubicStart(0, 1, h);
                            null == f.big_star.container.parent && a.container.addChild(f.big_star.container);
                            f.big_star.container.set_alpha(m);
                            f.big_star.container.set_scaleX(k);
                            f.big_star.container.set_scaleY(k);
                            .85 < h && !f.bang_sound_played && (f.bang_sound_played = !0, va.play(c.star_bang));
                            1 == h && (f.bang_sound_played = !1, f.animation_time = 0, D.safeRemove(f.big_star.container), V.setBitmapDataWithSmoothing(f.bitmap, f.full_source.bitmap_data), f.state = be.AnimateOutEffect)
                        } else f.state == be.AnimateOutEffect ? (f.animation_time += b.step_size, h = H.clamp0to1(f.animation_time / nj.star_effect_time), k = ma.cubicEnd(1, 6, h), m = ma.cubicEnd(1,
                            0, h), null == f.star_effect.container.parent && a.container.addChildAt(f.star_effect.container, 1), f.star_effect.container.set_alpha(m), f.star_effect.container.set_scaleX(k), f.star_effect.container.set_scaleY(k), 1 == h && (f.animation_time = 0, D.safeRemove(f.star_effect.container), f.state = be.AnimateWait)) : f.state == be.AnimateWait && (f.animation_time += b.step_size, f.animation_time >= nj.wait_time && (f.animation_time = 0, f.state = be.Normal))
                }
            };
            Lb.updateWeeklyAndStarAnimations = function(a, b, c, d) {
                var e = a.weekly;
                if (e.state ==
                    ce.WeeklyUnlockTransitionIn) {
                    0 == e.animation_time && va.play(d.just_completed_pack_transition);
                    e.animation_time += b.step_size;
                    c = H.clamp0to1(e.animation_time / jk.unlock_transition_in_time);
                    b = ma.cubicStartEnd(1, 0, c);
                    if (3 <= a.stars.length)
                        for (a.stars[0].bitmap.get_width(), a.stars[0].bitmap.get_height(), d = 0; 3 > d;) {
                            var f = d++;
                            f = a.stars[f];
                            f.bitmap.set_scaleX(.999);
                            f.bitmap.set_scaleY(.999);
                            f.bitmap.set_alpha(b);
                            f.bitmap.set_x(ma.cubicStartEnd(f.middle_position.x, f.on_weekly_position.x, c));
                            f.bitmap.set_y(ma.cubicStartEnd(f.middle_position.y,
                                f.on_weekly_position.y, c))
                        }
                    e.container.get_visible() || e.container.set_visible(!0);
                    b = ma.cubicToABC(.3, 1.2, 1, .7, c);
                    d = ma.cubicEnd(0, 1, c);
                    e.container.set_scaleX(b);
                    e.container.set_scaleY(b);
                    e.container.set_alpha(d);
                    if (1 == c && (e.animation_time = 0, e.state = ce.WeeklyUnlockTransitionInEmptyStars, 3 <= a.stars.length))
                        for (e = 0; 3 > e;) c = e++, c = a.stars[c], V.setBitmapUsingSource(c.bitmap, c.empty_source), c.bitmap.set_scaleX(1), c.bitmap.set_scaleY(1), c.bitmap.set_alpha(0), c.bitmap.set_x(c.after_weekly_position.x), c.bitmap.set_y(c.after_weekly_position.y)
                } else if (e.state ==
                    ce.WeeklyUnlockTransitionInEmptyStars) {
                    e.animation_time += b.step_size;
                    b = H.clamp0to1(e.animation_time / jk.unlock_transition_in_empty_stars_time);
                    d = ma.cubicEnd(0, 1, b);
                    if (3 <= a.stars.length)
                        for (f = 0; 3 > f;) {
                            var h = f++;
                            a.stars[h].bitmap.set_alpha(d)
                        }
                    1 == b && (e.animation_time = 0, e.state = ce.WeeklyUnlocked, Lb.saveMainMenuSnapshot(a, c))
                } else if (e.weekly_history_state == nf.WeeklyHistoryUnlockTransitionIn) {
                    e.container.get_visible() || e.container.set_visible(!0);
                    e.history_icon.container.get_visible() || e.history_icon.container.set_visible(!0);
                    0 == e.animation_time && va.play(d.just_completed_pack_transition);
                    e.animation_time += b.step_size;
                    b = H.clamp0to1(e.animation_time / jk.unlock_transition_in_time);
                    d = ma.cubicStartEnd(1, 0, b);
                    if (3 <= a.stars.length)
                        for (a.stars[0].bitmap.get_width(), a.stars[0].bitmap.get_height(), f = a.stars.length - 3, h = a.stars.length; f < h;) {
                            var k = f++;
                            k = a.stars[k];
                            k.bitmap.set_scaleX(.999);
                            k.bitmap.set_scaleY(.999);
                            k.bitmap.set_alpha(d);
                            k.bitmap.set_x(ma.cubicStartEnd(k.after_weekly_position.x, k.on_weekly_history_position.x, b));
                            k.bitmap.set_y(ma.cubicStartEnd(k.after_weekly_position.y,
                                k.on_weekly_history_position.y, b))
                        }
                    d = ma.cubicToABC(.3, 1.2, .85, .7, b);
                    f = ma.cubicEnd(0, 1, b);
                    e.history_icon.container.set_scaleX(d);
                    e.history_icon.container.set_scaleY(d);
                    e.history_icon.container.set_alpha(f);
                    if (1 == b) {
                        e.animation_time = 0;
                        e.weekly_history_state = nf.WeeklyHistoryUnlocked;
                        e = 0;
                        for (b = a.stars; e < b.length;) d = b[e], ++e, d.bitmap.set_visible(!1);
                        Lb.saveMainMenuSnapshot(a, c)
                    }
                }
            };
            Lb.updateTransitionInNextLevelPackIcon = function(a, b, c, d, e) {
                a = b.background.container;
                a.set_rotation(a.get_rotation() + c.step_size *
                    xd.icon_rotation_speed);
                b.animation_on && (0 == b.animation_time && (va.play(d.level_pack_pop), null != e && e.push(d.level_pack_pop)), b.animation_time += c.step_size, c = H.clamp0to1(b.animation_time / sc.next_icon_time), d = ma.smoothToABCWithSmoothB(1 / sc.next_icon_scale, 1.2, 1, .75, c), e = ma.smoothToABCWithSmoothB(1, 1.2 * sc.next_icon_scale, sc.next_icon_scale, .75, c), b.background.container.set_scaleX(d), b.background.container.set_scaleY(d), b.background.container.set_alpha(ma.linear(0, 1, c)), b.secondary_background.container.set_scaleX(e),
                    b.secondary_background.container.set_scaleY(e), b.secondary_background.container.set_alpha(ma.linear(1, 0, c)), 1 == c && (b.animation_on = !1))
            };
            Lb.updateFinalAnimation = function(a, b, c, d, e, f) {
                if (null != b.final_animation) {
                    e = b.final_animation;
                    if (e.state == jd.ShowStars) {
                        e.current_star_time += c.step_size;
                        a = H.clamp0to1(e.current_star_time / Sg.total_star_time);
                        d = 1 - a;
                        f = 0;
                        for (var h = b.timeline_icons; f < h.length;) {
                            var k = h[f];
                            ++f;
                            k.line.set_alpha(d)
                        }
                        null != b.middle_line && b.middle_line.set_alpha(d);
                        null != b.weekly && b.weekly.container.set_alpha(d);
                        null != b.credits && b.credits.sprite.set_alpha(d);
                        null != b.html5_shape_fold_button && b.html5_shape_fold_button.bitmap.set_alpha(d);
                        null != b.html5_credits_button && b.html5_credits_button.bitmap.set_alpha(d);
                        if (1 == a) {
                            a = 0;
                            for (d = b.timeline_icons; a < d.length;)
                                for (h = d[a], ++a, f = 0, h = h.icons; f < h.length;) {
                                    k = h[f];
                                    ++f;
                                    var m = new kk;
                                    m.icon = k;
                                    m.current_time = 0;
                                    e.icons.push(m)
                                }
                            e.state = jd.PhaseOutLevelPacks
                        }
                        e.spawn_time += c.step_size;
                        e.spawn_time > Sg.star_spawn_rate && (e.spawn_time -= Sg.star_spawn_rate, f = H.getRandomBetweenInt(0,
                                e.spawn_locations.length - 1), h = b.timeline_icons[0].level_pack_radius, a = new lg, a.container = new S, a.bitmap = new If(e.star_bitmap_source.bitmap_data, 2, !0), a.bitmap.set_width(2 * h * lg.scale_start), a.bitmap.set_scaleY(a.bitmap.get_scaleX()), a.bitmap.set_x(-a.bitmap.get_width() / 2), a.bitmap.set_y(-a.bitmap.get_height() / 2), a.container.addChild(a.bitmap), d = 2 * Math.PI * Math.random(), h = new W(h, 0), Og.rotate(h, d), a.start = Id.add(e.spawn_locations[f], h), f = new W(lg.distance, 0), Og.rotate(f, d), a.end = Id.add(a.start, f), a.position =
                            Id.copy(a.start), a.current_time = 0, b.container.addChild(a.container), e.stars.push(a))
                    } else if (e.state == jd.PhaseOutLevelPacks) 0 < e.icons.length ? (d = e.icons[0], 0 == d.current_time && va.play(a.sounds.level_pack_pop), a = H.clamp0to1(d.current_time / kk.time), f = ma.linear(1, kk.final_scale, a), d.icon.container.set_scaleX(f), d.icon.container.set_scaleY(f), d.icon.container.set_alpha(1 - a), 1 == a && e.icons.shift(), d.current_time += c.step_size) : (b.container.addChild(e.credits_container), e.state = jd.PhaseInCreditsBackground);
                    else if (e.state == jd.PhaseInCreditsBackground) 0 == e.credits_current_time && va.play(a.sounds.menu_transition_in), e.credits_current_time += c.step_size, a = H.clamp0to1(e.credits_current_time / Sg.credits_background_time), e.background.bitmap.set_alpha(ma.linear(0, 1, a)), 1 == a && (e.credits_current_time = 0, e.state = jd.PhaseInCreditsTexts);
                    else if (e.state == jd.PhaseInCreditsTexts) 0 == e.credits_current_time && 1 < e.anim_display_objects.length && va.play(a.sounds.menu_transition_out), e.credits_current_time += c.step_size, d = H.clamp0to1(e.credits_current_time /
                        Sg.credits_background_time), f = ma.linear(0, 1, d), e.anim_display_objects[0].set_alpha(f), 1 == d && (e.credits_current_time = 0, e.anim_display_objects.shift(), 0 == e.anim_display_objects.length && (e.state = jd.FinalAnimationDone, a.progress_save.final_animation_played || (a.progress_save.final_animation_played = !0, D.saveAllProgressToFile(a.progress_serial_data, a.progress_save))));
                    else if (e.state == jd.FinalAnimationDone)
                        if (d.button_state == ya.DOWNED) d = Ia.findClosestButton(e.all_buttons, a.finger_radius, d.downed), null !=
                            d && E.is(d, Vf) && (d = aa.__cast(d, Vf), V.setBitmapData(d.bitmap, d.downed_bitmap_data), D.playButtonDownSound(a.sounds));
                        else if (d.button_state == ya.UPPED) {
                        f = Ia.findClosestButton(e.all_buttons, a.finger_radius, d.downed);
                        d = Ia.findClosestButton(e.all_buttons, a.finger_radius, d.upped);
                        if (null != d && d == f && d == e.continue_button) {
                            Lb.destroyFinalAnimation(e);
                            b.final_animation = null;
                            D.openMainMenu(a, !1);
                            return
                        }
                        null != f && E.is(f, Vf) && (a = aa.__cast(f, Vf), V.setBitmapData(a.bitmap, a.upped_bitmap_data))
                    }
                    a = 0;
                    for (d = e.stars.length; a <
                        d;) f = e.stars[a], h = H.clamp0to1(f.current_time / lg.float_time), Og.interpolate(f.position, f.start, f.end, h), f.container.set_x(f.position.x), f.container.set_y(f.position.y), k = f.container, k.set_rotation(k.get_rotation() + lg.rotation_speed * c.dc), f.container.set_alpha(1 - h), k = ma.linear(lg.scale_start, lg.scale_end, h), f.bitmap.set_width(2 * b.timeline_icons[0].level_pack_radius * k), f.bitmap.set_scaleY(f.bitmap.get_scaleX()), 1 == h && (b.container.removeChild(f.container), f.bitmap.set_bitmapData(null), f.container = null,
                        e.stars.splice(a, 1), --a, --d), ++a, f.current_time += c.step_size
                }
            };
            var ik = function(a, b, c, d, e) {
                null == e && (e = .001);
                null == d && (d = 1);
                null == c && (c = 2);
                null == b && (b = 1);
                null == a && (a = 0);
                this.zpp_inner = null;
                null == dc.zpp_pool ? this.zpp_inner = new dc : (this.zpp_inner = dc.zpp_pool, dc.zpp_pool = this.zpp_inner.next, this.zpp_inner.next = null);
                this.zpp_inner.alloc();
                this.zpp_inner.outer = this;
                this.set_elasticity(a);
                this.set_dynamicFriction(b);
                this.set_staticFriction(c);
                this.set_density(d);
                this.set_rollingFriction(e)
            };
            g["nape.phys.Material"] =
                ik;
            ik.__name__ = ["nape", "phys", "Material"];
            ik.prototype = {
                zpp_inner: null,
                copy: function() {
                    var a = new ik(this.get_elasticity(), this.get_dynamicFriction(), this.get_staticFriction(), this.get_density(), this.get_rollingFriction());
                    null != this.zpp_inner.userData && (a.zpp_inner.userData = T.copy(this.zpp_inner.userData));
                    return a
                },
                get_elasticity: function() {
                    return this.zpp_inner.elasticity
                },
                set_elasticity: function(a) {
                    a != this.get_elasticity() && (this.zpp_inner.elasticity = a / 1, this.zpp_inner.invalidate(dc.WAKE | dc.ARBITERS));
                    return this.get_elasticity()
                },
                get_dynamicFriction: function() {
                    return this.zpp_inner.dynamicFriction
                },
                set_dynamicFriction: function(a) {
                    a != this.get_dynamicFriction() && (this.zpp_inner.dynamicFriction = a / 1, this.zpp_inner.invalidate(dc.WAKE | dc.ANGDRAG | dc.ARBITERS));
                    return this.get_dynamicFriction()
                },
                get_staticFriction: function() {
                    return this.zpp_inner.staticFriction
                },
                set_staticFriction: function(a) {
                    a != this.get_staticFriction() && (this.zpp_inner.staticFriction = a / 1, this.zpp_inner.invalidate(dc.WAKE | dc.ARBITERS));
                    return this.get_staticFriction()
                },
                get_density: function() {
                    return 1E3 * this.zpp_inner.density
                },
                set_density: function(a) {
                    a != this.get_density() && (this.zpp_inner.density = a / 1E3, this.zpp_inner.invalidate(dc.WAKE | dc.PROPS));
                    return this.get_density()
                },
                get_rollingFriction: function() {
                    return this.zpp_inner.rollingFriction
                },
                set_rollingFriction: function(a) {
                    a != this.get_rollingFriction() && (this.zpp_inner.rollingFriction = a / 1, this.zpp_inner.invalidate(dc.WAKE | dc.ARBITERS));
                    return this.get_rollingFriction()
                },
                toString: function() {
                    return "{ elasticity: " +
                        this.get_elasticity() + " dynamicFriction: " + this.get_dynamicFriction() + " staticFriction: " + this.get_staticFriction() + " density: " + this.get_density() + " rollingFriction: " + this.get_rollingFriction() + " }"
                },
                __class__: ik
            };
            var dc = function() {
                this.dynamicFriction = this.staticFriction = this.density = this.elasticity = this.rollingFriction = 0;
                this.next = this.userData = this.outer = this.shapes = null;
                this.feature_cons();
                this.elasticity = 0;
                this.dynamicFriction = 1;
                this.staticFriction = 2;
                this.density = .001;
                this.rollingFriction =
                    .01
            };
            g["zpp_nape.phys.ZPP_Material"] = dc;
            dc.__name__ = ["zpp_nape", "phys", "ZPP_Material"];
            dc.prototype = {
                next: null,
                userData: null,
                outer: null,
                wrapper: function() {
                    if (null == this.outer) {
                        this.outer = new ik;
                        var a = this.outer.zpp_inner;
                        a.free();
                        a.next = dc.zpp_pool;
                        dc.zpp_pool = a;
                        this.outer.zpp_inner = this
                    }
                    return this.outer
                },
                free: function() {
                    this.outer = null
                },
                alloc: function() {},
                shapes: null,
                feature_cons: function() {
                    this.shapes = new rl
                },
                addShape: function(a) {
                    this.shapes.add(a)
                },
                remShape: function(a) {
                    this.shapes.remove(a)
                },
                dynamicFriction: null,
                staticFriction: null,
                density: null,
                elasticity: null,
                rollingFriction: null,
                set: function(a) {
                    this.dynamicFriction = a.dynamicFriction;
                    this.staticFriction = a.staticFriction;
                    this.density = a.density;
                    this.elasticity = a.elasticity;
                    this.rollingFriction = a.rollingFriction
                },
                invalidate: function(a) {
                    for (var b = this.shapes.begin(); null != b;) b.elem().invalidate_material(a), b = b.next
                },
                __class__: dc
            };
            var dk = function() {};
            g["bikas.game.Materials"] = dk;
            dk.__name__ = ["bikas", "game", "Materials"];
            var xa = function() {};
            g["bikas.game.PerformanceDo"] = xa;
            xa.__name__ = ["bikas", "game", "PerformanceDo"];
            xa.start = function(a, b) {
                var c = new Ht;
                c.type = a;
                c.name = b;
                a != Dd.None && (c.start_time = ia.getTimer(), c.snapshot_time = c.start_time);
                a == Dd.Everything ? w.trace(c.name + ": start performance snapshots", {
                    fileName: "PerformanceDo.hx",
                    lineNumber: 15,
                    className: "bikas.game.PerformanceDo",
                    methodName: "start"
                }) : a == Dd.StartAndEnd && w.trace(b, {
                    fileName: "PerformanceDo.hx",
                    lineNumber: 18,
                    className: "bikas.game.PerformanceDo",
                    methodName: "start"
                });
                return c
            };
            xa.snapshot = function(a, b) {
                if (a.type == Dd.Everything) {
                    var c = ia.getTimer();
                    w.trace("\t" + a.name + ":" + b + ": " + (c - a.snapshot_time) + "ms", {
                        fileName: "PerformanceDo.hx",
                        lineNumber: 26,
                        className: "bikas.game.PerformanceDo",
                        methodName: "snapshot"
                    });
                    a.snapshot_time = c
                }
            };
            xa.end = function(a, b) {
                null == b && (b = "");
                a.type != Dd.None && ("" == b ? w.trace(a.name + ": " + (ia.getTimer() - a.start_time) + "ms", {
                    fileName: "PerformanceDo.hx",
                    lineNumber: 34,
                    className: "bikas.game.PerformanceDo",
                    methodName: "end"
                }) : w.trace(b + ": " + (ia.getTimer() - a.start_time) +
                    "ms", {
                        fileName: "PerformanceDo.hx",
                        lineNumber: 37,
                        className: "bikas.game.PerformanceDo",
                        methodName: "end"
                    }))
            };
            var Dd = g["bikas.game.PerformancePrintType"] = {
                __ename__: ["bikas", "game", "PerformancePrintType"],
                __constructs__: ["None", "StartAndEnd", "JustEnd", "Everything"]
            };
            Dd.None = ["None", 0];
            Dd.None.toString = l;
            Dd.None.__enum__ = Dd;
            Dd.StartAndEnd = ["StartAndEnd", 1];
            Dd.StartAndEnd.toString = l;
            Dd.StartAndEnd.__enum__ = Dd;
            Dd.JustEnd = ["JustEnd", 2];
            Dd.JustEnd.toString = l;
            Dd.JustEnd.__enum__ = Dd;
            Dd.Everything = ["Everything",
                3
            ];
            Dd.Everything.toString = l;
            Dd.Everything.__enum__ = Dd;
            var Ht = function() {
                this.name = ""
            };
            g["bikas.game.PerformanceData"] = Ht;
            Ht.__name__ = ["bikas", "game", "PerformanceData"];
            Ht.prototype = {
                name: null,
                type: null,
                start_time: null,
                snapshot_time: null,
                __class__: Ht
            };
            var Y = function() {};
            g["bikas.game.PlayWindowDo"] = Y;
            Y.__name__ = ["bikas", "game", "PlayWindowDo"];
            Y.createPlayWindow = function(a, b, c, d, e) {
                var f = "";
                null != c && (f = c.name);
                var h = xa.start(Dd.JustEnd, "createPlayWindow (" + f + ")"),
                    k = new xd;
                k.open_type = b;
                k.is_game_bought_at_window_creation =
                    a.progress_save.game_is_bought;
                k.create_close_button = !0;
                k.can_close_outside = !0;
                k.scale = Ia.getPlayWindowScale(a.size);
                k.width = 300 * k.scale;
                k.height = 180 * k.scale;
                k.pack = c;
                k.previous_window_open_type = d;
                k.previous_window_pack = e;
                k.container = new S;
                var m = !0;
                switch (Q.enumIndex(b)) {
                    case 0:
                        k.type = za.Locked;
                        null == c && w.trace("warning: level_pack == null", {
                            fileName: "PlayWindowDo.hx",
                            lineNumber: 107,
                            className: "bikas.game.PlayWindowDo",
                            methodName: "createPlayWindow"
                        });
                        break;
                    case 1:
                        k.type = za.WeeklyHistorySelect;
                        break;
                    case 2:
                        k.type = za.AdConsentSelect;
                        break;
                    case 3:
                        k.type = za.BuyWithGoBack;
                        break;
                    case 4:
                        k.type = za.LinksToMobileVersion;
                        break;
                    case 5:
                        k.type = za.SettingsMenu;
                        m = !1;
                        break;
                    case 6:
                        k.type = za.CreditsMenu;
                        m = !1;
                        break;
                    case 7:
                        k.type = za.UnlockLevelsMenu;
                        m = !1;
                        k.can_close_outside = !1;
                        break;
                    case 8:
                        k.type = za.EventPrompt;
                        k.prompt_message_class = zp;
                        m = !1;
                        k.create_close_button = !1;
                        k.can_close_outside = !1;
                        break;
                    case 9:
                        k.type = za.EventPrompt;
                        k.prompt_message_class = Fp;
                        m = !1;
                        k.create_close_button = !1;
                        k.can_close_outside = !1;
                        break;
                    case 10:
                        k.type =
                            za.EventPrompt;
                        k.prompt_message_class = Ap;
                        m = !1;
                        k.create_close_button = !1;
                        k.can_close_outside = !1;
                        break;
                    case 11:
                        k.type = za.EventPrompt;
                        k.prompt_message_class = Cp;
                        m = !1;
                        k.create_close_button = !1;
                        k.can_close_outside = !1;
                        break;
                    case 12:
                        k.type = za.EventPrompt;
                        k.prompt_message_class = Ep;
                        m = !1;
                        k.create_close_button = !1;
                        k.can_close_outside = !1;
                        break;
                    case 13:
                        k.type = za.EventPrompt;
                        k.prompt_message_class = Dp;
                        m = !1;
                        k.create_close_button = !1;
                        k.can_close_outside = !1;
                        break;
                    case 14:
                        k.type = za.EventPrompt;
                        k.prompt_message_class = Bp;
                        m = !1;
                        k.create_close_button = !1;
                        k.can_close_outside = !1;
                        break;
                    case 15:
                        k.type = za.EventPrompt;
                        k.prompt_message_class = yp;
                        m = !1;
                        k.create_close_button = !1;
                        k.can_close_outside = !1;
                        break;
                    case 16:
                        k.type = za.EventPrompt;
                        k.prompt_message_class = xp;
                        m = !1;
                        k.create_close_button = !1;
                        k.can_close_outside = !1;
                        break;
                    case 17:
                        k.type = za.EventPrompt;
                        k.prompt_message_class = Kp;
                        m = !1;
                        k.create_close_button = !1;
                        k.can_close_outside = !1;
                        break;
                    case 18:
                        k.type = za.EventPrompt, k.prompt_message_class = Lp, m = !1, k.create_close_button = !1, k.can_close_outside = !1
                }
                k.state = ge.TransitionIn;
                var g = null,
                    l = null;
                if (null != c)
                    if (g = Ia.findProgressSaveTimeline(a.progress_save, c.parent_timeline.name), l = null, null == g) k.type = za.Locked;
                    else if (l = Ia.findProgressSavePack(g, c.name), k.progress_pack_reference = l, null == l) k.type = za.Locked;
                else {
                    Y.validateProgressPack(g, l, a.progress_save.game_is_bought);
                    var p = Y.isAnyLevelCompletedOrSkippedOrNonFirstUnlocked(l);
                    if (l.completed || p) k.type = za.SomeLevelsFinished;
                    else if (l.unlocked)
                        if (l.unlocked && (a.progress_save.game_is_bought || l.ad_was_shown)) k.type =
                            za.RegularPlay;
                        else if (l.unlocked) switch (Q.enumIndex(c.html5_monetization_type)) {
                        case 0:
                            k.type = za.RegularPlay;
                            break;
                        case 1:
                            k.type = za.RegularPlay;
                            break;
                        case 2:
                            k.type = za.LinksToMobileVersion;
                            break;
                        case 3:
                            switch (Q.enumIndex(c.html5_unlock_type)) {
                                case 0:
                                    k.type = za.WatchAdToUnlockHTML5;
                                    break;
                                case 1:
                                    k.type = za.TimedLockedWatchAdToUnlockHTML5;
                                    break;
                                case 2:
                                    k.type = za.WatchAdToUnlockHTML5, w.trace("warning: not included level pack window should not even open!", {
                                        fileName: "PlayWindowDo.hx",
                                        lineNumber: 317,
                                        className: "bikas.game.PlayWindowDo",
                                        methodName: "createPlayWindow"
                                    })
                            }
                    } else w.trace("warning: this should not happen", {
                        fileName: "PlayWindowDo.hx",
                        lineNumber: 372,
                        className: "bikas.game.PlayWindowDo",
                        methodName: "createPlayWindow"
                    }), k.type = za.Locked;
                    else switch (Q.enumIndex(c.html5_unlock_type)) {
                        case 0:
                            k.type = za.Locked;
                            break;
                        case 1:
                            k.type = za.TimedLockedHTML5;
                            break;
                        case 2:
                            k.type = za.Locked
                    }
                    w.trace("PlayWindow: ", {
                        fileName: "PlayWindowDo.hx",
                        lineNumber: 376,
                        className: "bikas.game.PlayWindowDo",
                        methodName: "createPlayWindow"
                    });
                    w.trace("\tprogress_pack.completed: " +
                        (null == l.completed ? "null" : "" + l.completed), {
                            fileName: "PlayWindowDo.hx",
                            lineNumber: 377,
                            className: "bikas.game.PlayWindowDo",
                            methodName: "createPlayWindow"
                        });
                    w.trace("\tprogress_pack.ad_was_shown: " + (null == l.ad_was_shown ? "null" : "" + l.ad_was_shown), {
                        fileName: "PlayWindowDo.hx",
                        lineNumber: 378,
                        className: "bikas.game.PlayWindowDo",
                        methodName: "createPlayWindow"
                    });
                    w.trace("\tany_level_done: " + (null == p ? "null" : "" + p), {
                        fileName: "PlayWindowDo.hx",
                        lineNumber: 379,
                        className: "bikas.game.PlayWindowDo",
                        methodName: "createPlayWindow"
                    });
                    w.trace("\tgame_is_bought: " + E.string(a.progress_save.game_is_bought), {
                        fileName: "PlayWindowDo.hx",
                        lineNumber: 380,
                        className: "bikas.game.PlayWindowDo",
                        methodName: "createPlayWindow"
                    });
                    w.trace("\tlevel_pack.html5_monetization_type: " + E.string(c.html5_monetization_type), {
                        fileName: "PlayWindowDo.hx",
                        lineNumber: 382,
                        className: "bikas.game.PlayWindowDo",
                        methodName: "createPlayWindow"
                    });
                    w.trace("\twindow.type: " + E.string(k.type), {
                        fileName: "PlayWindowDo.hx",
                        lineNumber: 386,
                        className: "bikas.game.PlayWindowDo",
                        methodName: "createPlayWindow"
                    })
                }
                switch (Q.enumIndex(k.type)) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 6:
                    case 7:
                        k.width =
                            300 * k.scale;
                        k.height = 180 * k.scale;
                        break;
                    case 5:
                        k.width = 330 * k.scale;
                        k.height = 240 * k.scale;
                        break;
                    case 9:
                        k.width = 300 * k.scale;
                        k.height = 190 * k.scale;
                        Y.loadProductsIfNotLoaded(a);
                        break;
                    case 10:
                        k.width = 330 * k.scale;
                        k.height = 210 * k.scale;
                        break;
                    case 11:
                        k.width = 520 * k.scale;
                        k.height = 240 * k.scale;
                        if (k.width + 50 > a.size.width) {
                            var u = a.size.width - 50,
                                q = .46153846153846156 * u;
                            k.scale *= q / k.height;
                            k.width = u;
                            k.height = q
                        }
                        break;
                    case 8:
                    case 12:
                        k.width = 300 * k.scale;
                        k.height = 240 * k.scale;
                        Y.loadProductsIfNotLoaded(a);
                        break;
                    case 13:
                        k.width =
                            300 * k.scale;
                        k.height = 240 * k.scale;
                        break;
                    case 14:
                        k.width = 300 * k.scale;
                        k.height = 240 * k.scale;
                        break;
                    case 15:
                        k.width = 300 * k.scale;
                        k.height = 180 * k.scale;
                        break;
                    case 16:
                        k.width = 300 * k.scale, k.height = 180 * k.scale
                }
                xa.snapshot(h, "pick window type");
                var L = !1;
                null != a.main_menu && null != a.main_menu.blurred_main_menu_cache && (L = !0);
                m && L ? (k.blurred_main_menu_reference = a.main_menu.blurred_main_menu_cache, k.container.addChild(k.blurred_main_menu_reference)) : (k.prompt_backgound = V.createBitmapUsingSource(a.cache.pause_menu_sources.menu_background),
                    k.prompt_backgound.set_alpha(.9), k.container.addChild(k.prompt_backgound));
                xa.snapshot(h, "add blurred_main_menu_reference");
                k.exported_images_reference = a.exported_images;
                var A = 1,
                    D = function() {
                        var a = new S,
                            d = a.get_graphics();
                        d.beginFill(sa.window_background, 1);
                        d.lineStyle(0, 0, 0);
                        d.drawRoundRect(0, 0, k.width, k.height, 20 * k.scale, 20 * k.scale);
                        d.endFill();
                        d = null;
                        b == ua.OpenBuyWithGoBack ? (d = null != k.previous_window_pack ? aa.__cast(Q.createInstance(k.previous_window_pack.icon_object_class, []), n) : new Pk, d.set_x(k.width /
                            2), d.set_y(0), null != k.previous_window_pack ? d.set_scaleX(d.set_scaleY(.6 * k.previous_window_pack.icon_scale_coeff * k.scale)) : d.set_scaleX(d.set_scaleY(.6 * k.scale))) : b == ua.OpenSettings ? (d = new gp, d.set_x(k.width / 2), d.set_y(0), d.set_scaleX(d.set_scaleY(.8 * k.scale))) : b == ua.OpenContinueOnMobile ? (d = new Ok, d.set_x(k.width / 2), d.set_y(0), d.set_scaleX(d.set_scaleY(.6 * k.scale))) : null != c && (d = aa.__cast(Q.createInstance(c.icon_object_class, []), n), d.set_x(k.width / 2), d.set_y(0), d.set_scaleX(d.set_scaleY(.6 * c.icon_scale_coeff *
                            k.scale)));
                        var e = new S;
                        e.addChild(a);
                        null != d && e.addChild(d);
                        return e
                    }(),
                    v = D.getChildAt(0),
                    y = Ji.extractPolygonsFromGraphics(v.get_graphics(), "background_background"),
                    t = new W;
                t.x = 2 * v.get_x() / k.scale;
                t.y = 2 * v.get_y() / k.scale;
                var B = new $d;
                B.scale_x = 2 * v.get_scaleX() / k.scale;
                B.scale_y = 2 * v.get_scaleY() / k.scale;
                for (var F = 0; F < y.length;) {
                    var pa = y[F];
                    ++F;
                    for (var J = 0, K = pa.points; J < K.length;) {
                        var R = K[J];
                        ++J;
                        xb.applyTransformToPoint(R, t, B)
                    }
                }
                if (1 < D.get_numChildren()) {
                    var Ca = D.getChildAt(1),
                        X = Ji.extractPolygonsFromGraphics(Ca.get_graphics(),
                            "background_icon_movie_clip"),
                        oa = new W;
                    oa.x = 2 * Ca.get_x() / k.scale;
                    oa.y = 2 * Ca.get_y() / k.scale;
                    var N = new $d;
                    N.scale_x = 2 * Ca.get_scaleX() / k.scale;
                    N.scale_y = 2 * Ca.get_scaleY() / k.scale;
                    for (var O = 0; O < X.length;) {
                        var C = X[O];
                        ++O;
                        for (var G = 0, P = C.points; G < P.length;) {
                            var la = P[G];
                            ++G;
                            xb.applyTransformToPoint(la, oa, N)
                        }
                    }
                    for (var T = 0; T < X.length;) {
                        var U = X[T];
                        ++T;
                        y.push(U)
                    }
                }
                k.background_source = Cd.drawPlayWindowAndMakeBitmapDataSource(y, 2);
                k.background_is_generated = !0;
                A = 1 / k.background_source.scale * k.scale;
                xa.snapshot(h,
                    "draw background in canvas");
                if (null == k.background_source) w.trace("warning: window.background_source == null", {
                    fileName: "PlayWindowDo.hx",
                    lineNumber: 734,
                    className: "bikas.game.PlayWindowDo",
                    methodName: "createPlayWindow"
                });
                else {
                    k.background = V.createBitmapUsingSource(k.background_source);
                    k.background.set_scaleX(A);
                    k.background.set_scaleY(A);
                    k.background.set_x(a.size.width / 2 - k.background.get_width() / 2);
                    k.background.set_y(a.size.height / 2 - k.background.get_height() / 2);
                    k.container.addChild(k.background);
                    var bb = k.background.getBounds(k.container);
                    k.window_rectangle = Va.convertRectangle(bb);
                    var Lc = k.background.get_x(),
                        ba = k.background.get_width() / 2;
                    k.middle_x = Lc + ba;
                    var ca = k.background.get_y(),
                        M = k.background.get_height() / 2;
                    k.middle_y = ca + M;
                    var ra = k.background.get_y(),
                        Z = k.background.get_height();
                    k.bottom_y = ra + Z;
                    xa.snapshot(h, "background draw: create bitmap")
                }
                b == ua.OpenAdConsent ? (k.create_close_button = !1, k.can_close_outside = !1) : b == ua.OpenBuyWithGoBack && null != k.previous_window_open_type && k.previous_window_open_type ==
                    ua.OpenAdConsent && (k.create_close_button = !1, k.can_close_outside = !1);
                if (k.create_close_button) {
                    var ea = new z,
                        ha = new le;
                    ea.set_scaleX(ea.set_scaleY(k.scale));
                    ha.set_scaleX(ha.set_scaleY(k.scale));
                    var ja = 0,
                        ka = 0,
                        fa = 0;
                    null != k.background && (ja = k.background.get_x(), ka = k.background.get_y(), fa = k.background.get_height());
                    var gb = ja + k.width + 10 - (ea.get_width() + 10) / 2 - 2.5 * k.scale,
                        yc = ka + fa - k.height - 10 - (ea.get_height() + 10) / 2 + 2.5 * k.scale;
                    gb = ja + k.width - ea.get_width() / 2 + 5 * k.scale;
                    yc = ka + fa - k.height - ea.get_height() + 5 * k.scale;
                    k.close_button = Y.placeNavigationButton(k.container, ea, ha, gb, yc);
                    xa.snapshot(h, "add close button")
                }
                if (b == ua.OpenWeeklyHistory) {
                    var bd = new In,
                        na = new Jn,
                        ia = new In,
                        Aa = new Jn;
                    bd.set_scaleX(bd.set_scaleY(k.scale));
                    na.set_scaleX(na.set_scaleY(k.scale));
                    ia.set_scaleX(-k.scale);
                    ia.set_scaleY(k.scale);
                    Aa.set_scaleX(-k.scale);
                    Aa.set_scaleY(k.scale);
                    var Gc = k.container,
                        Ga = k.middle_x + k.width / 2 - (bd.get_width() + 10) / 2,
                        ob = k.middle_y - (bd.get_height() + 10) / 2;
                    k.next_button = Y.placeNavigationButton(Gc, bd, na, Ga, ob);
                    var ya =
                        k.container,
                        wa = k.middle_x - k.width / 2 - (ia.get_width() + 10) / 2,
                        ta = k.middle_y - (ia.get_height() + 10) / 2;
                    k.previous_button = Y.placeNavigationButton(ya, ia, Aa, wa, ta)
                }
                k.enabled_window_buttons = [];
                switch (Q.enumIndex(k.type)) {
                    case 0:
                        var va = a.cache,
                            Da = k.container,
                            Ha = new Tc,
                            Fa = new td,
                            Pa = new qc;
                        k.play_button = Y.placeWindowButton(va, k, Da, "play", Ha, Fa, Pa, k.scale, 0, -20 * k.scale);
                        k.enabled_window_buttons.push(k.play_button);
                        break;
                    case 1:
                        k.icons = Y.createLevelPackIcons(a.cache.main_menu_sources.window_icons, c, l, 10, 16, k.scale,
                            k.middle_x, k.bottom_y);
                        for (var La = 0, Ja = k.icons; La < Ja.length;) {
                            var Na = Ja[La];
                            ++La;
                            k.container.addChild(Na.container)
                        }
                        break;
                    case 2:
                        var Oa = new Kn;
                        Oa.set_scaleX(k.scale);
                        Oa.set_scaleY(k.scale);
                        k.locked = V.createBitmapFromDisplayObject(Oa, !0, !1, 5, 5);
                        k.locked.set_x(k.middle_x - k.locked.get_width() / 2);
                        k.locked.set_y(k.bottom_y - k.locked.get_height() - 40 * k.scale);
                        k.container.addChild(k.locked);
                        break;
                    case 3:
                        Y.placeTimedUnlock(k);
                        var Ta = new Kn;
                        Ta.set_scaleX(k.scale);
                        Ta.set_scaleY(k.scale);
                        k.locked = V.createBitmapFromDisplayObject(Ta,
                            !0, !1, 5, 5);
                        k.locked.set_x(k.middle_x - k.locked.get_width() / 2);
                        k.locked.set_y(k.bottom_y - k.locked.get_height() - 40 * k.scale);
                        k.container.addChild(k.locked);
                        k.locked.set_visible(!1);
                        Y.updateTimedUnlockText(k);
                        break;
                    case 4:
                        var Qa = a.cache,
                            $a = k.container,
                            Pb = new Tc,
                            db = new td,
                            Sa = new Pd;
                        k.remove_ads_button = Y.placeWindowButton(Qa, k, $a, "play_or_remove_ads", Pb, db, Sa, k.scale, 0, -80 * k.scale);
                        var pb = a.cache,
                            hb = k.container,
                            Ya = new Tc,
                            Za = new td,
                            Wa = new qc;
                        k.play_button = Y.placeWindowButton(pb, k, hb, "play", Ya, Za, Wa, k.scale,
                            0, -20 * k.scale);
                        k.enabled_window_buttons.push(k.remove_ads_button);
                        k.enabled_window_buttons.push(k.play_button);
                        break;
                    case 5:
                        var Ra = !0,
                            $b = !0,
                            Xa = -180,
                            Ua = -140,
                            kb = -80,
                            fb = -20;
                        a.config.html5_device.android ? ($b = !1, Xa = -120, Ua = -80, kb = -20) : a.config.html5_device.iOS && (Ra = !1, Xa = -120, Ua = -80, fb = -20);
                        var cb = mh.encode(a.progress_save, mh.timeline_encoding_for_flash);
                        1 < cb.length ? (k.texts.push(Y.placeDynamicText(k, k.container, "Get Shape Fold with 300+ levels!", k.scale, 0, Xa * k.scale, !0)), k.texts.push(Y.placeDynamicText(k,
                            k.container, "Progress unlock code: " + cb, k.scale, 0, Ua * k.scale, !0))) : k.texts.push(Y.placeDynamicText(k, k.container, "Get Shape Fold with 300+ levels!", k.scale, 0, Ua * k.scale, !0));
                        if (Ra) {
                            var eb = a.cache,
                                ib = k.container,
                                lb = new Tc,
                                rb = new td,
                                sb = new xc;
                            k.continue_on_android = Y.placeWindowButton(eb, k, ib, "continue_on_android", lb, rb, sb, k.scale, 0, kb * k.scale);
                            k.continue_on_android.hidden_button_for_links = Y.createHiddenButtonForBitmap(k.continue_on_android.bitmap);
                            k.container.addChild(k.continue_on_android.hidden_button_for_links);
                            k.continue_on_android.hidden_button_for_links.addEventListener("click", Y.continueOnAndroidClick)
                        }
                        if ($b) {
                            var tb = a.cache,
                                ub = k.container,
                                vb = new Tc,
                                qb = new td,
                                nb = new Ka;
                            k.continue_on_ios = Y.placeWindowButton(tb, k, ub, "continue_on_ios", vb, qb, nb, k.scale, 0, fb * k.scale);
                            k.continue_on_ios.hidden_button_for_links = Y.createHiddenButtonForBitmap(k.continue_on_ios.bitmap);
                            k.container.addChild(k.continue_on_ios.hidden_button_for_links);
                            k.continue_on_ios.hidden_button_for_links.addEventListener("click", Y.continueOnIOSClick)
                        }
                        Ra &&
                            k.enabled_window_buttons.push(k.continue_on_android);
                        $b && k.enabled_window_buttons.push(k.continue_on_ios);
                        break;
                    case 6:
                        var Rb = a.cache,
                            Bb = k.container,
                            Ac = new Tc,
                            Cb = new td,
                            nd = new Fc;
                        k.watch_ad_button = Y.placeWindowButton(Rb, k, Bb, "watch_ad_to_unlock", Ac, Cb, nd, k.scale, 0, -20 * k.scale);
                        k.enabled_window_buttons.push(k.watch_ad_button);
                        break;
                    case 7:
                        Y.placeTimedUnlock(k);
                        var Db = a.cache,
                            Qb = k.container,
                            Fb = new Tc,
                            Gb = new td,
                            Kb = new Fc;
                        k.watch_ad_button = Y.placeWindowButton(Db, k, Qb, "watch_ad_to_unlock", Fb, Gb, Kb, k.scale,
                            0, -20 * k.scale);
                        k.watch_ad_button.bitmap.set_visible(!1);
                        Y.updateTimedUnlockText(k);
                        break;
                    case 8:
                        k.buy_button = Y.placeBuyButton(a.cache, k, k.container, k.scale, 0, -140 * k.scale);
                        k.purchase_display = Y.placePurchaseDisplay(k, k.container, k.scale, 0, -100 * k.scale);
                        var Ib = a.cache,
                            Jb = k.container,
                            Nb = new Tc,
                            Ab = new td,
                            Tb = new ac;
                        k.restore_purchase_button = Y.placeWindowButton(Ib, k, Jb, "restore_purchase", Nb, Ab, Tb, k.scale, 0, -80 * k.scale);
                        var Yb = a.cache,
                            Ub = k.container,
                            cc = new Tc,
                            Lb = new td,
                            Xb = new Fc;
                        k.watch_ad_button = Y.placeWindowButton(Yb,
                            k, Ub, "watch_ad_button", cc, Lb, Xb, k.scale, 0, -20 * k.scale);
                        k.enabled_window_buttons.push(k.buy_button);
                        k.enabled_window_buttons.push(k.restore_purchase_button);
                        k.enabled_window_buttons.push(k.watch_ad_button);
                        Y.updatePurchaseDisplay(a, k, k.purchase_display);
                        break;
                    case 9:
                        k.buy_button = Y.placeBuyButton(a.cache, k, k.container, k.scale, 0, -80 * k.scale);
                        k.purchase_display = Y.placePurchaseDisplay(k, k.container, k.scale, 0, -45 * k.scale);
                        var od = a.cache,
                            bc = k.container,
                            ic = new Tc,
                            ec = new td,
                            Eb = new ac;
                        k.restore_purchase_button =
                            Y.placeWindowButton(od, k, bc, "restore_purchase", ic, ec, Eb, k.scale, 0, -20 * k.scale);
                        k.enabled_window_buttons.push(k.buy_button);
                        k.enabled_window_buttons.push(k.restore_purchase_button);
                        Y.updatePurchaseDisplay(a, k, k.purchase_display);
                        break;
                    case 10:
                        k.weekly_icon_container = new S;
                        k.container.addChild(k.weekly_icon_container);
                        for (var gc = 16 * k.scale, Wb = new W(k.middle_x - 115 * k.scale, k.middle_y - 70 * k.scale), pc = new W(k.middle_x + 30 * k.scale, k.middle_y + 70 * k.scale), Hb = [], Ma = a.current_date.getTime(), Ob = 0, jc = a.game_levels.weekly_timelines; Ob <
                            jc.length;) {
                            var Vd = jc[Ob];
                            ++Ob;
                            for (var dc = 0, lc = Vd.packs; dc < lc.length;) {
                                var kc = lc[dc];
                                ++dc;
                                null != kc.weekly_release_date && Ma >= kc.weekly_release_date.getTime() && Hb.push(kc)
                            }
                        }
                        for (var Zb = 0, hc = 0, oc = 0; oc < Hb.length;) {
                            var rc = Hb[oc];
                            ++oc;
                            var mc = 0,
                                wc = 0;
                            4 > Zb ? (mc = Wb.x + hc * k.width, wc = ma.linear(Wb.y, pc.y, Zb / 3)) : (mc = pc.x + hc * k.width, wc = ma.linear(Wb.y, pc.y, (Zb - 4) / 3));
                            var Dc = Vb.WindowLevelIconStateUnlockedVisible,
                                Ec = Ia.findProgressSaveTimeline(a.progress_save, rc.parent_timeline.name);
                            if (null != Ec) {
                                var uc = Ia.findProgressSavePack(Ec,
                                    rc.name);
                                null != uc && uc.completed && (Dc = Vb.WindowLevelIconStateCompleted)
                            }
                            var vc = Y.createLevelIcon(a.cache.main_menu_sources.weekly_history_icons, -1, gc, k.scale, Jh.WindowLevelIconWeeklyHistoryLevelPack, Dc, null, rc);
                            null != vc && (vc.container.set_x(mc), vc.container.set_y(wc), k.icons.push(vc), k.weekly_icon_container.addChild(vc.container));
                            7 == Zb && ++hc;
                            Zb = (Zb + 1) % 8
                        }
                        k.total_pages = hc + 1;
                        break;
                    case 11:
                        var Nc = k.texts,
                            Rc = k.container,
                            Hc = new qp;
                        Nc.push(Y.placeText(k, Rc, Hc, k.scale, 0, xd.consent_dear_gamer_y * k.scale));
                        var ae = k.texts,
                            Jc = k.container,
                            Pc = new pp;
                        ae.push(Y.placeText(k, Jc, Pc, k.scale, 0, xd.consent_can_your_data_y * k.scale));
                        var Wc = a.cache,
                            Sc = k.container,
                            ug = new nc,
                            Yc = new dd,
                            Uc = new ab;
                        k.consent_personalized_ads_button = Y.placeWindowButton(Wc, k, Sc, "consent_personalized_ads_button", ug, Yc, Uc, k.scale, xd.consent_personalized_ads_x * k.scale, xd.consent_personalized_ads_y * k.scale);
                        var Cc = a.cache,
                            Ic = k.container,
                            Kc = new nc,
                            fc = new dd,
                            Oc = new wb;
                        k.consent_non_personalized_ads_button = Y.placeWindowButton(Cc, k, Ic, "consent_non_personalized_ads_button",
                            Kc, fc, Oc, k.scale, xd.consent_non_personalized_ads_x * k.scale, xd.consent_non_personalized_ads_y * k.scale);
                        if (!a.progress_save.game_is_bought) {
                            var Sb = a.cache,
                                Qc = k.container,
                                hg = new nc,
                                hd = new dd,
                                ad = new yb;
                            k.consent_remove_ads_button = Y.placeWindowButton(Sb, k, Qc, "consent_remove_ads_button", hg, hd, ad, k.scale, 0, xd.consent_remove_ads_y * k.scale)
                        }
                        var jd = k.texts,
                            md = k.container,
                            Zc = new rp;
                        jd.push(Y.placeText(k, md, Zc, k.scale, 0, xd.consent_learn_more * k.scale));
                        var kd = new kh,
                            fd = k.texts[k.texts.length - 1],
                            ud = fd.getBounds(fd.parent),
                            Bc = Va.convertRectangle(ud);
                        Bc.x += .25 * Bc.width / 2;
                        Bc.y += .5 * Bc.height;
                        Bc.width *= .75;
                        Bc.height *= .5;
                        kd.button = Ia.createRectangleButton(Bc);
                        k.consent_learn_more_fake_button = kd;
                        k.enabled_window_buttons.push(k.consent_personalized_ads_button);
                        k.enabled_window_buttons.push(k.consent_non_personalized_ads_button);
                        a.progress_save.game_is_bought || k.enabled_window_buttons.push(k.consent_remove_ads_button);
                        k.enabled_window_buttons.push(k.consent_learn_more_fake_button);
                        break;
                    case 12:
                        k.buy_button = Y.placeBuyButton(a.cache,
                            k, k.container, k.scale, 0, -140 * k.scale);
                        k.purchase_display = Y.placePurchaseDisplay(k, k.container, k.scale, 0, -100 * k.scale);
                        var sd = a.cache,
                            yd = k.container,
                            ld = new Tc,
                            cd = new td,
                            gd = new ac;
                        k.restore_purchase_button = Y.placeWindowButton(sd, k, yd, "restore_purchase", ld, cd, gd, k.scale, 0, -80 * k.scale);
                        var qd = a.cache,
                            rd = k.container,
                            Ed = new Tc,
                            Gd = new td,
                            zd = new da;
                        k.go_back_button = Y.placeWindowButton(qd, k, rd, "go_back_button", Ed, Gd, zd, k.scale, 0, -20 * k.scale);
                        k.enabled_window_buttons.push(k.buy_button);
                        k.enabled_window_buttons.push(k.restore_purchase_button);
                        k.enabled_window_buttons.push(k.go_back_button);
                        Y.updatePurchaseDisplay(a, k, k.purchase_display);
                        break;
                    case 13:
                        var Ad = a.cache,
                            Bd = k.container,
                            Xd = new Tc,
                            Id = new td,
                            Fd = new x;
                        k.level_unlock = Y.placeWindowButton(Ad, k, Bd, "level_unlock", Xd, Id, Fd, k.scale, 0, -80 * k.scale);
                        var Nd = a.cache,
                            zc = k.container,
                            $c = new Tc,
                            vd = new td,
                            Sd = new qa;
                        k.credits_button = Y.placeWindowButton(Nd, k, zc, "credits", $c, vd, Sd, k.scale, 0, -20 * k.scale);
                        null != k.change_ad_settings_button && k.enabled_window_buttons.push(k.change_ad_settings_button);
                        k.enabled_window_buttons.push(k.level_unlock);
                        k.enabled_window_buttons.push(k.credits_button);
                        break;
                    case 14:
                        var Wd = k.texts,
                            Td = k.container,
                            Jd = new tp;
                        Wd.push(Y.placeText(k, Td, Jd, k.scale, 0, -30 * k.scale));
                        var wd = k.texts[k.texts.length - 1],
                            sc = wd.getBounds(wd.parent),
                            ed = Va.convertRectangle(sc);
                        ed.y += 70 * k.scale;
                        ed.height = 28 * k.scale;
                        k.fake_html5_button = new S;
                        k.fake_html5_button.set_alpha(0);
                        var Xc = H.expandRectangle(ed, 10);
                        Ea.drawBounds(k.fake_html5_button.get_graphics(), Xc);
                        k.fake_html5_button.addEventListener("click", Y.twitterClickEvent);
                        k.fake_html5_button.mouseEnabled = !0;
                        k.fake_html5_button.set_buttonMode(!0);
                        k.container.addChild(k.fake_html5_button);
                        k.credits_twitter_fake_button = new kh;
                        k.credits_twitter_fake_button.button = Ia.createRectangleButton(ed);
                        k.enabled_window_buttons.push(k.credits_twitter_fake_button);
                        break;
                    case 15:
                        k.texts.push(Y.placeDynamicText(k, k.container, "enter level unlock code:", k.scale, 0, -125 * k.scale, !1));
                        k.input_texts.push(Y.placeInputText(k, k.container, "", k.scale, 0, -95 * k.scale));
                        k.input_texts[0].addEventListener("keyDown", function(b) {
                            13 == b.charCode &&
                                a.container.stage.set_focus(null)
                        });
                        var id = a.cache,
                            Kd = k.container,
                            Ld = new Tc,
                            Md = new td,
                            Od = new jb;
                        k.apply_code = Y.placeWindowButton(id, k, Kd, "apply_code", Ld, Md, Od, k.scale, 0, -20 * k.scale);
                        k.enabled_window_buttons.push(k.apply_code);
                        break;
                    case 16:
                        if (null != k.prompt_message_class) {
                            var Yd = aa.__cast(Q.createInstance(k.prompt_message_class, []), S);
                            w.trace("text_sprite: " + E.string(Yd), {
                                fileName: "PlayWindowDo.hx",
                                lineNumber: 1592,
                                className: "bikas.game.PlayWindowDo",
                                methodName: "createPlayWindow"
                            });
                            k.texts.push(Y.placeText(k,
                                k.container, Yd, k.scale, 0, -110 * k.scale))
                        }
                        var Hd = a.cache,
                            Rd = k.container,
                            be = new Tc,
                            ce = new td,
                            Zd = new ke;
                        k.ok_button = Y.placeWindowButton(Hd, k, Rd, "ok", be, ce, Zd, k.scale, 0, -20 * k.scale);
                        k.enabled_window_buttons.push(k.ok_button)
                }
                null != k.close_button && k.navigation_buttons.push(k.close_button);
                null != k.previous_button && k.navigation_buttons.push(k.previous_button);
                null != k.next_button && k.navigation_buttons.push(k.next_button);
                xa.snapshot(h, "add buttons");
                k.type == za.WeeklyHistorySelect && (k.next_weekly_page_index =
                    H.clampInt(a.progress_save.current_weekly_history_page_index, 0, k.total_pages - 1), Y.setWeeklyVisibility(k));
                xa.end(h);
                return k
            };
            Y.placeNavigationButton = function(a, b, c, d, e) {
                var f = new kh;
                f.bitmap = V.createBitmapFromDisplayObject(b, !0, !1, 5, 5);
                f.downed_bitmap = V.createBitmapFromDisplayObject(c, !0, !1, 5, 5);
                f.downed_bitmap.set_visible(!1);
                f.bitmap.set_x(f.downed_bitmap.set_x(d));
                f.bitmap.set_y(f.downed_bitmap.set_y(e));
                f.button = Ia.createRadiusButtonWithPosition(f.bitmap.get_width() / 2, new W(f.bitmap.get_x() +
                    f.bitmap.get_width() / 2, f.bitmap.get_y() + f.bitmap.get_height() / 2));
                a.addChild(f.bitmap);
                a.addChild(f.downed_bitmap);
                return f
            };
            Y.createButtonBitmap = function(a, b, c, d, e, f, h, k) {
                var m = null,
                    g = 1;
                null != b.exported_images_reference && (g = D.findButton(b.exported_images_reference, c), null != g ? m = g.source : w.trace("warning: could not find image for play window button named " + c, {
                        fileName: "PlayWindowDo.hx",
                        lineNumber: 1686,
                        className: "bikas.game.PlayWindowDo",
                        methodName: "createButtonBitmap"
                    }), g = 1 / b.exported_images_reference.buttons.game_graphics_scale *
                    f);
                null == m && (c = new S, d.set_filters([a.menu_filters.black_outer_border]), c.addChild(d), c.addChild(e), e.set_y(1), c.set_scaleY(f), c.set_scaleX(f), m = V.createAndDrawSource(c, !0, !0, 5, 5), c.removeChild(d), c.removeChild(e));
                a = V.createBitmapUsingSource(m);
                a.set_scaleX(g);
                a.set_scaleY(g);
                a.set_x(b.middle_x - a.get_width() / 2 + h);
                a.set_y(b.bottom_y - a.get_height() + k);
                return a
            };
            Y.placeWindowButton = function(a, b, c, d, e, f, h, k, m, g) {
                var r = new kh;
                r.name = d;
                r.x_offset = m;
                r.y_offset = g;
                r.bitmap = Y.createButtonBitmap(a, b, r.name,
                    e, h, k, m, g);
                r.downed_bitmap = Y.createButtonBitmap(a, b, r.name + "_downed", f, h, k, m, g);
                r.bitmap_buttons_are_generated = null == b.exported_images_reference ? !0 : !1;
                r.downed_bitmap.set_visible(!1);
                c.addChild(r.bitmap);
                c.addChild(r.downed_bitmap);
                r.button = Ia.createRectangleButton(Va.convertRectangle(r.bitmap.getBounds(c)));
                xb.expandRectangle(r.button.rectangle, -5);
                return r
            };
            Y.placeBuyButton = function(a, b, c, d, e, f) {
                var h = new S,
                    k = new kf;
                k.size = 15;
                k.font = Xa.font_poetsen_one_regular.get_fontName();
                k.color = sa.window_buy_text_color;
                k.align = 3;
                k.letterSpacing = 1;
                var m = new kf;
                m.size = 16;
                m.font = Xa.font_arial_bold_italic.get_fontName();
                m.color = sa.window_buy_text_color;
                m.align = 0;
                m.letterSpacing = 1;
                var g = new hd;
                g.set_antiAliasType(0);
                g.set_text("Buy Shape Fold for\n\u2022 Turn off all ads\n\u2022 Get 150 premium levels");
                g.set_defaultTextFormat(k);
                g.setTextFormat(k);
                g.set_selectable(!1);
                g.set_embedFonts(!0);
                g.set_width(g.get_textWidth() + 5);
                g.set_height(g.get_textHeight() + 5);
                g.set_x(-g.get_width() / 2 - 20);
                g.set_y(-g.get_height() / 2);
                k = new np;
                k.set_filters([a.menu_filters.price_outer_border]);
                k.set_x(82);
                k.set_y(-11);
                var l = new hd;
                l.set_antiAliasType(0);
                l.set_text("$2.99");
                l.set_defaultTextFormat(m);
                l.setTextFormat(m);
                l.set_selectable(!1);
                l.set_embedFonts(!0);
                l.set_width(l.get_textWidth() + 5);
                l.set_height(l.get_textHeight() + 5);
                m = k.get_width() - 4;
                l.get_width() > m && (m /= l.get_width(), l.set_scaleX(m), l.set_scaleY(m));
                l.set_x(k.get_x() - l.get_width() / 2);
                l.set_y(k.get_y() - l.get_height() / 2);
                h.addChild(g);
                h.addChild(k);
                h.addChild(l);
                a = Y.placeWindowButton(a,
                    b, c, "buy", new Vd, new B, h, d, e, f);
                h.removeChildren();
                return a
            };
            Y.placePurchaseDisplay = function(a, b, c, d, e) {
                var f = new Gt,
                    h = function(b) {
                        b.set_scaleX(c);
                        b.set_scaleY(c);
                        b = V.createAndDrawSource(b, !0, !0, 5, 5);
                        b = V.createBitmapUsingSource(b);
                        b.set_x(a.middle_x - b.get_width() / 2 + d + f.rotating_circle.container.get_width() / 2);
                        b.set_y(a.bottom_y - b.get_height() + e);
                        return b
                    },
                    k = new op;
                k.set_scaleX(c);
                k.set_scaleY(c);
                k = V.createAndDrawSource(k, !0, !1, 5, 5);
                f.rotating_circle = V.createBitmapContainer(k);
                f.rotating_circle.bitmap.smoothing = !0;
                f.rotating_circle.bitmap.set_scaleX(.999);
                f.rotating_circle.bitmap.set_scaleY(.999);
                f.loading_text = h(new up);
                f.processing_text = h(new wp);
                f.restoring_text = h(new Hp);
                f.approval_text = h(new Gp);
                f.rotating_circle.container.set_visible(!1);
                f.loading_text.set_visible(!1);
                f.processing_text.set_visible(!1);
                f.restoring_text.set_visible(!1);
                f.approval_text.set_visible(!1);
                b.addChild(f.rotating_circle.container);
                b.addChild(f.loading_text);
                b.addChild(f.processing_text);
                b.addChild(f.restoring_text);
                b.addChild(f.approval_text);
                return f
            };
            Y.placeDynamicText = function(a, b, c, d, e, f, h) {
                var k = new kf;
                k.size = Math.round(20 * d);
                k.font = Xa.font_poetsen_one_regular.get_fontName();
                k.color = sa.window_weekly_history_text_color;
                k.align = 3;
                var m = new hd;
                m.set_antiAliasType(0);
                m.set_defaultTextFormat(k);
                m.set_selectable(!1);
                m.set_embedFonts(!0);
                m.set_text(c);
                m.setTextFormat(k);
                m.set_width(m.get_textWidth() + 5 * d);
                m.set_height(m.get_textHeight() + 5 * d);
                c = new S;
                h && (h = new S, k = 5 * d, Ea.drawRoundedRectangleFrom0(h.get_graphics(), m.get_width() + 2 * k, m.get_height(),
                    10 * d, 10 * d, sa.level_highlight_color, 1, 0, 0, 0), h.set_x(h.get_x() - k), c.addChild(h));
                c.addChild(m);
                d = V.createAndDrawSource(c, !0, !0, 5, 5);
                d = V.createBitmapUsingSource(d);
                d.set_x(a.middle_x - d.get_width() / 2 + e);
                d.set_y(a.bottom_y - d.get_height() + f);
                b.addChild(d);
                return d
            };
            Y.placeChangeableDynamicText = function(a, b, c, d, e, f) {
                var h = new kf;
                h.size = Math.round(22 * d);
                h.font = Xa.font_poetsen_one_regular.get_fontName();
                h.color = sa.window_weekly_history_text_color;
                h.align = 0;
                var k = new hd;
                k.set_type(0);
                k.set_antiAliasType(1);
                k.set_defaultTextFormat(h);
                k.set_selectable(!1);
                k.set_embedFonts(!0);
                k.set_text("99");
                k.setTextFormat(h);
                k.set_width(k.get_textWidth() + 5 * d);
                k.set_height(k.get_textHeight() + 5 * d);
                k.set_x(a.middle_x - k.get_width() / 2 + e);
                k.set_y(a.bottom_y - k.get_height() + f);
                k.set_text(c);
                b.addChild(k);
                return k
            };
            Y.placeInputText = function(a, b, c, d, e, f) {
                c = new kf;
                c.size = Math.round(22 * d);
                c.font = Xa.font_poetsen_one_regular.get_fontName();
                c.color = sa.window_weekly_history_text_color;
                c.align = 3;
                var h = new hd;
                h.set_type(1);
                h.set_antiAliasType(1);
                h.set_defaultTextFormat(c);
                h.set_selectable(!0);
                h.set_embedFonts(!0);
                h.set_text("+++ua50ub50uc50+++");
                h.setTextFormat(c);
                h.set_width(h.get_textWidth() + 5 * d);
                h.set_height(h.get_textHeight() + 5 * d);
                h.set_x(a.middle_x - h.get_width() / 2 + e);
                h.set_y(a.bottom_y - h.get_height() + f);
                h.set_maxChars(12);
                h.set_background(!0);
                h.set_backgroundColor(sa.level_highlight_color);
                h.set_text("");
                b.addChild(h);
                return h
            };
            Y.placeText = function(a, b, c, d, e, f) {
                c.set_scaleX(d);
                c.set_scaleY(d);
                c = V.createAndDrawSource(c, !0, !0, 5, 5);
                c = V.createBitmapUsingSource(c);
                c.set_x(a.middle_x - c.get_width() / 2 + e);
                c.set_y(a.bottom_y - c.get_height() + f);
                b.addChild(c);
                return c
            };
            Y.placeTimedUnlock = function(a) {
                var b = -65 * a.scale;
                a.texts.push(Y.placeDynamicText(a, a.container, "Release countdown:", a.scale, 0, b, !1));
                var c = 1.5 * a.scale,
                    d = b + 40 * a.scale,
                    e = ma.linear(-110, 110, 0) * a.scale,
                    f = ma.linear(-110, 110, .3333333333333333) * a.scale,
                    h = ma.linear(-110, 110, .6666666666666666) * a.scale,
                    k = ma.linear(-110, 110, 1) * a.scale;
                a.dynamic_texts.push(Y.placeChangeableDynamicText(a, a.container, "29", c, e, d));
                a.dynamic_texts.push(Y.placeChangeableDynamicText(a, a.container, "14", c, f, d));
                a.dynamic_texts.push(Y.placeChangeableDynamicText(a, a.container, "15", c, h, d));
                a.dynamic_texts.push(Y.placeChangeableDynamicText(a, a.container, "30", c, k, d));
                a.timed_unlock_text_days = a.dynamic_texts[a.dynamic_texts.length - 4];
                a.timed_unlock_text_hours = a.dynamic_texts[a.dynamic_texts.length - 3];
                a.timed_unlock_text_minutes = a.dynamic_texts[a.dynamic_texts.length - 2];
                a.timed_unlock_text_seconds = a.dynamic_texts[a.dynamic_texts.length -
                    1];
                c = .8 * a.scale;
                b += 55 * a.scale;
                a.texts.push(Y.placeDynamicText(a, a.container, "days", c, e, b, !1));
                a.texts.push(Y.placeDynamicText(a, a.container, "hours", c, f, b, !1));
                a.texts.push(Y.placeDynamicText(a, a.container, "minutes", c, h, b, !1));
                a.texts.push(Y.placeDynamicText(a, a.container, "seconds", c, k, b, !1))
            };
            Y.createLevelPackIcons = function(a, b, c, d, e, f, h, k, m) {
                null == m && (m = -1);
                e *= f;
                var g = 2 * e + 10 * f;
                d *= f;
                var l = h - 2 * (g + d);
                h += 2 * (g + d);
                for (var n = -15 * f, p = !1, x = [], z = 0; 10 > z;) {
                    var u = z++;
                    if (5 > u) {
                        var w = ma.linear(l, h, u / 4);
                        var q = -1 <
                            m ? m - .5 * (g + d) : k + n - 1.5 * g - 2 * d
                    } else w = ma.linear(l, h, (u - 5) / 4), q = -1 < m ? m + .5 * (g + d) : k + n - g / 2 - d;
                    var L = b.levels[u],
                        A = null;
                    null != c && (A = Ia.findProgressSaveLevel(c, L.prefab_name));
                    var D = Vb.WindowLevelIconStateLocked;
                    null != A && (A.completed ? D = Vb.WindowLevelIconStateCompleted : A.unlocked ? A.skipped ? D = Vb.WindowLevelIconStateSkipped : p ? D = Vb.WindowLevelIconStateUnlocked : (D = Vb.WindowLevelIconStateNext, p = !0) : D = Vb.WindowLevelIconStateLocked);
                    u = Y.createLevelIcon(a, u, e, f, Jh.WindowLevelIconSpecificLevel, D, L, null);
                    u.container.set_x(w);
                    u.container.set_y(q);
                    x.push(u)
                }
                return x
            };
            Y.createLevelIcon = function(a, b, c, d, e, f, h, k) {
                var m = new pl;
                m.type = e;
                m.state = f;
                m.level_reference = h;
                m.weekly_level_pack_reference = k;
                m.radius = c;
                switch (Q.enumIndex(m.type)) {
                    case 0:
                        if (null == h) return w.trace("warning: level == null", {
                            fileName: "PlayWindowDo.hx",
                            lineNumber: 2334,
                            className: "bikas.game.PlayWindowDo",
                            methodName: "createLevelIcon"
                        }), null;
                        break;
                    case 1:
                        if (null == k) return w.trace("warning: weekly_pack_reference == null", {
                            fileName: "PlayWindowDo.hx",
                            lineNumber: 2341,
                            className: "bikas.game.PlayWindowDo",
                            methodName: "createLevelIcon"
                        }), null;
                        e = new kf;
                        e.size = Math.round(13 * d);
                        e.font = Xa.font_poetsen_one_regular.get_fontName();
                        e.color = sa.window_weekly_history_text_color;
                        e.align = 3;
                        m.text_field = new hd;
                        m.text_field.set_antiAliasType(0);
                        null != k.weekly_release_date && (f = k.weekly_release_date.getFullYear() + "", h = Nc.prependZerosToNumber(k.weekly_release_date.getMonth() + 1 + "", 2), k = Nc.prependZerosToNumber(k.weekly_release_date.getDate() + "", 2), m.text_field.set_text(f + "-" + h + "-" + k));
                        m.text_field.set_defaultTextFormat(e);
                        m.text_field.setTextFormat(e);
                        m.text_field.set_selectable(!1);
                        m.text_field.set_embedFonts(!0);
                        m.text_field.set_width(m.text_field.get_textWidth() + 5 * d);
                        m.text_field.set_height(m.text_field.get_textHeight() + 5 * d);
                        m.text_field.set_x(c + 8 * d);
                        m.text_field.set_y(-m.text_field.get_textHeight() / 2 - 2 * d)
                }
                m.container = new S;
                m.button = Ia.createRadiusButtonForDisplayObject(m.radius, m.container);
                switch (Q.enumIndex(m.state)) {
                    case 1:
                        m.background = cb.createBitmapInContainer(a.unlocked,
                            d);
                        m.current_background = a.unlocked;
                        m.downed_background = a.downed;
                        break;
                    case 2:
                        m.background = cb.createBitmapInContainer(a.locked, d);
                        m.current_background = a.locked;
                        m.downed_background = a.downed;
                        break;
                    case 3:
                        m.background = cb.createBitmapInContainer(a.next, d);
                        m.current_background = a.next;
                        m.downed_background = a.next_downed;
                        break;
                    case 4:
                        m.background = cb.createBitmapInContainer(a.completed, d);
                        m.current_background = a.completed;
                        m.downed_background = a.downed;
                        break;
                    case 0:
                    case 5:
                        m.background = cb.createBitmapInContainer(a.locked,
                            d), m.current_background = a.locked, m.downed_background = a.downed
                }
                e = null;
                k = !1;
                if (m.state == Vb.WindowLevelIconStateCompleted || m.state == Vb.WindowLevelIconStateUnlockedVisible) {
                    c *= 1.4;
                    null != m.level_reference ? (e = aa.__cast(Q.createInstance(m.level_reference.icon_object_class, []), n), k = !0) : null != m.weekly_level_pack_reference && (e = aa.__cast(Q.createInstance(m.weekly_level_pack_reference.icon_object_class, []), n), k = !0);
                    if (null == e) return w.trace("warning: icon_sprite == null", {
                        fileName: "PlayWindowDo.hx",
                        lineNumber: 2425,
                        className: "bikas.game.PlayWindowDo",
                        methodName: "createLevelIcon"
                    }), null;
                    e.get_width() > e.get_height() ? (f = e.get_height() / e.get_width(), e.set_width(c), e.set_height(c * f)) : (f = e.get_width() / e.get_height(), e.set_width(c * f), e.set_height(c))
                } else m.state == Vb.WindowLevelIconStateSkipped ? (e = new Ip, c /= Ab.timeline_icon_radius, e.set_scaleX(c), e.set_scaleY(c)) : (e = new kp, c = c / Ab.timeline_icon_radius * .5, e.set_scaleX(c), e.set_scaleY(c));
                m.state == Vb.WindowLevelIconStateLocked && (e.set_alpha(0), m.type == Jh.WindowLevelIconSpecificLevel &&
                    (a = a.text_numbers, null == a ? w.trace("warning: text_numbers_cache == null", {
                        fileName: "PlayWindowDo.hx",
                        lineNumber: 2458,
                        className: "bikas.game.PlayWindowDo",
                        methodName: "createLevelIcon"
                    }) : 0 <= b && b < a.length ? m.text_number = cb.createBitmap(a[b], d) : w.trace("warning: level_index " + b + " is out of bounds", {
                        fileName: "PlayWindowDo.hx",
                        lineNumber: 2464,
                        className: "bikas.game.PlayWindowDo",
                        methodName: "createLevelIcon"
                    })));
                b = V.createAndDrawSource(e, !0, !1, 5, 5);
                m.icon = V.createBitmapContainer(b);
                k && (m.icon.bitmap.set_x(-m.icon.bitmap.get_width() /
                    2), m.icon.bitmap.set_y(-m.icon.bitmap.get_height() / 2));
                m.container.addChild(m.background.container);
                m.container.addChild(m.icon.container);
                null != m.text_field && m.container.addChild(m.text_field);
                null != m.text_number && m.container.addChild(m.text_number);
                m.local_bounds = Va.convertRectangle(m.container.getBounds(m.container));
                return m
            };
            Y.updateDynamicTimeText = function(a, b) {
                b = Nc.prependZerosToNumber(b + "", 2);
                a.get_text() != b && a.set_text(b)
            };
            Y.updateTimedUnlockText = function(a) {
                var b = new Date,
                    c = a.pack.html5_unlock_date.getTime() -
                    b.getTime();
                if (0 >= c) {
                    a.type == za.TimedLockedWatchAdToUnlockHTML5 && (-1 == a.enabled_window_buttons.indexOf(a.watch_ad_button) && a.enabled_window_buttons.push(a.watch_ad_button), a.watch_ad_button.bitmap.get_visible() || a.watch_ad_button.bitmap.set_visible(!0));
                    a.timed_unlock_text_days.get_visible() && a.timed_unlock_text_days.set_visible(!1);
                    a.timed_unlock_text_hours.get_visible() && a.timed_unlock_text_hours.set_visible(!1);
                    a.timed_unlock_text_minutes.get_visible() && a.timed_unlock_text_minutes.set_visible(!1);
                    a.timed_unlock_text_seconds.get_visible() && a.timed_unlock_text_seconds.set_visible(!1);
                    b = 0;
                    for (var d = a.texts; b < d.length;) {
                        var e = d[b];
                        ++b;
                        e.get_visible() && e.set_visible(!1)
                    }
                    a.type == za.TimedLockedHTML5 && a.locked.set_visible(!0)
                } else b = Math.floor(c / 864E5), d = Math.floor((c - 864E5 * b) / 36E5), e = Math.floor((c - 864E5 * b - 36E5 * d) / 6E4), c = Math.floor((c - 864E5 * b - 36E5 * d - 6E4 * e) / 1E3), Y.updateDynamicTimeText(a.timed_unlock_text_days, b), Y.updateDynamicTimeText(a.timed_unlock_text_hours, d), Y.updateDynamicTimeText(a.timed_unlock_text_minutes,
                    e), Y.updateDynamicTimeText(a.timed_unlock_text_seconds, c)
            };
            Y.isAnyLevelCompletedOrSkippedOrNonFirstUnlocked = function(a) {
                for (var b = !1, c = !1, d = !1, e = 0, f = a.levels.length; e < f;) {
                    var h = e++,
                        k = a.levels[h];
                    k.completed && (b = !0);
                    k.skipped && (c = !0);
                    if (1 <= h && k.unlocked) {
                        d = !0;
                        break
                    }
                }
                return b || c || d ? !0 : !1
            };
            Y.validateProgressPack = function(a, b, c) {
                b.completed && (b.unlocked = !0);
                Y.isAnyLevelCompletedOrSkippedOrNonFirstUnlocked(b) && (b.unlocked = !0);
                c && 0 == a.packs.indexOf(b) && (b.unlocked = !0)
            };
            Y.setWeeklyVisibility = function(a) {
                0 ==
                    a.next_weekly_page_index ? (a.previous_button.bitmap.set_alpha(0), a.previous_button.downed_bitmap.set_alpha(0)) : (a.previous_button.bitmap.set_alpha(1), a.previous_button.downed_bitmap.set_alpha(1));
                a.next_weekly_page_index == a.total_pages - 1 ? (a.next_button.bitmap.set_alpha(0), a.next_button.downed_bitmap.set_alpha(0)) : (a.next_button.bitmap.set_alpha(1), a.next_button.downed_bitmap.set_alpha(1));
                for (var b = 0, c = a.icons; b < c.length;) {
                    var d = c[b];
                    ++b;
                    var e = a.weekly_icon_container.get_x() + d.container.get_x() + d.local_bounds.x,
                        f = a.weekly_icon_container.get_x() + d.container.get_x() + d.local_bounds.x + d.local_bounds.width,
                        h = a.middle_x - a.width / 2,
                        k = a.middle_x + a.width / 2;
                    if (e < h || f > k) d.container.get_visible() && d.container.set_visible(!1);
                    else {
                        d.container.get_visible() || d.container.set_visible(!0);
                        var m = .7 * d.radius,
                            g = a.middle_x + a.width / 2 - m,
                            l = 1;
                        e < a.middle_x - a.width / 2 + m ? l = H.clamp0to1((e - h) / m) : f > g && (l = H.clamp0to1((k - f) / m));
                        d.container.get_alpha() != l && d.container.set_alpha(l)
                    }
                }
            };
            Y.handleIconMouseEvents = function(a, b, c, d) {
                var e = null;
                c.button_state ==
                    ya.DOWNED ? (b = Ia.findClosestButton(b, d, c.downed), null != b && (cb.setBitmapUsingSource(b.background.bitmap, b.downed_background), D.playButtonDownSound(a))) : c.button_state == ya.UPPED && (a = Ia.findClosestButton(b, d, c.downed), b = Ia.findClosestButton(b, d, c.upped), null != b && a == b && (e = b), null != a && cb.setBitmapUsingSource(a.background.bitmap, a.current_background));
                return null != e && (!e.container.get_visible() || .9 > e.container.get_alpha()) ? null : e
            };
            Y.handleWindowButtonsMouseEvents = function(a, b, c, d) {
                if (b.button_state == ya.DOWNED) a =
                    Ia.findClosestButton(a, c, b.downed), null != a && (null != a.bitmap && null != a.downed_bitmap && (a.bitmap.set_visible(!1), a.downed_bitmap.set_visible(!0)), a.is_downed = !0, D.playButtonDownSound(d));
                else if (b.button_state == ya.UPPED) {
                    d = Ia.findClosestButton(a, c, b.downed);
                    b = Ia.findClosestButton(a, c, b.upped);
                    for (c = 0; c < a.length;) {
                        var e = a[c];
                        ++c;
                        e.is_downed = !1
                    }
                    null != d && null != d.bitmap && null != d.downed_bitmap && (d.bitmap.set_visible(!0), d.downed_bitmap.set_visible(!1));
                    if (null != b && d == b) return d
                }
                return null
            };
            Y.regularPlayClick =
                function(a, b) {
                    a.config.development.gameplay_type = hh.Release;
                    a.allow_snapping = !0;
                    null != a.debug && null != a.debug.game_debug_window && v.refreshAllFields(a.debug.game_debug_window);
                    D.closePlayWindow(a, he.PlayWindowPlayLevel, b.pack.levels[0].prefab_name);
                    Af.setCommercialBreak(a)
                };
            Y.requestPurchase = function(a) {};
            Y.loadProductsIfNotLoaded = function(a) {};
            Y.createHiddenButtonForBitmap = function(a) {
                var b = new S;
                b.set_x(a.get_x());
                b.set_y(a.get_y());
                b.get_graphics().beginFill(0, 1);
                b.get_graphics().drawRect(0, 0, a.get_width(),
                    a.get_height());
                b.get_graphics().endFill();
                b.set_buttonMode(!0);
                b.mouseEnabled = !0;
                b.set_alpha(0);
                return b
            };
            Y.continueOnAndroidClick = function(a) {
                null != rb.game && rb.game.config.game_is_paused_by_ad || ia.getURL(new Fi("https://play.google.com/store/apps/details?id=net.bikas.shapefold"), "_blank")
            };
            Y.continueOnIOSClick = function(a) {
                null != rb.game && rb.game.config.game_is_paused_by_ad || ia.getURL(new Fi("https://apps.apple.com/us/app/shape-fold/id1491412811"), "_blank")
            };
            Y.twitterClickEvent = function(a) {
                w.trace("clicked", {
                    fileName: "PlayWindowDo.hx",
                    lineNumber: 2862,
                    className: "bikas.game.PlayWindowDo",
                    methodName: "twitterClickEvent"
                });
                null != rb.game && rb.game.config.game_is_paused_by_ad || ia.getURL(new Fi("https://monkeymart.org/"), "_blank")
            };
            Y.destroyPlayWindow = function(a) {
                if (a.is_destroyed) w.trace("warning: play window was already destroyed", {
                    fileName: "PlayWindowDo.hx",
                    lineNumber: 2877,
                    className: "bikas.game.PlayWindowDo",
                    methodName: "destroyPlayWindow"
                });
                else {
                    w.trace("destroy play window: " + E.string(a.type), {
                        fileName: "PlayWindowDo.hx",
                        lineNumber: 2881,
                        className: "bikas.game.PlayWindowDo",
                        methodName: "destroyPlayWindow"
                    });
                    a.is_destroyed = !0;
                    null != a.continue_on_android && (null != a.continue_on_android.hidden_button_for_links && a.continue_on_android.hidden_button_for_links.removeEventListener("click", Y.continueOnAndroidClick), D.safeRemove(a.continue_on_android.hidden_button_for_links));
                    null != a.continue_on_ios && (null != a.continue_on_ios.hidden_button_for_links && a.continue_on_ios.hidden_button_for_links.removeEventListener("click",
                        Y.continueOnIOSClick), D.safeRemove(a.continue_on_ios.hidden_button_for_links));
                    null != a.fake_html5_button && (a.fake_html5_button.removeEventListener("click", Y.twitterClickEvent), D.safeRemove(a.fake_html5_button));
                    D.safeRemove(a.blurred_main_menu_reference);
                    D.safeRemove(a.prompt_backgound);
                    D.safeRemove(a.cover);
                    a.background_is_generated ? V.safeDestroyBitmapWithBitmapData(a.background) : null != a.background && (null != a.background.parent && a.background.parent.removeChild(a.background), a.background.set_bitmapData(null));
                    V.safeDestroyBitmapWithBitmapData(a.locked);
                    Y.safeDestroyWindowButton(a.close_button);
                    Y.safeDestroyWindowButton(a.next_button);
                    Y.safeDestroyWindowButton(a.previous_button);
                    Y.safeDestroyWindowButton(a.play_button);
                    Y.safeDestroyWindowButton(a.watch_ad_button);
                    Y.safeDestroyWindowButton(a.buy_button);
                    Y.safeDestroyWindowButton(a.go_back_button);
                    Y.safeDestroyWindowButton(a.ok_button);
                    Y.safeDestroyWindowButton(a.consent_personalized_ads_button);
                    Y.safeDestroyWindowButton(a.consent_non_personalized_ads_button);
                    Y.safeDestroyWindowButton(a.consent_remove_ads_button);
                    Y.safeDestroyWindowButton(a.consent_learn_more_fake_button);
                    Y.safeDestroyWindowButton(a.change_ad_settings_button);
                    Y.safeDestroyWindowButton(a.credits_button);
                    Y.safeDestroyWindowButton(a.level_unlock);
                    Y.safeDestroyWindowButton(a.apply_code);
                    null != a.purchase_display && (V.destroyBitmapContainerIncludingBitmapDataSource(a.purchase_display.rotating_circle), V.safeDestroyBitmapWithBitmapData(a.purchase_display.approval_text), V.safeDestroyBitmapWithBitmapData(a.purchase_display.loading_text),
                        V.safeDestroyBitmapWithBitmapData(a.purchase_display.restoring_text), V.safeDestroyBitmapWithBitmapData(a.purchase_display.processing_text), a.purchase_display = null);
                    for (var b = 0, c = a.enabled_window_buttons; b < c.length;) {
                        var d = c[b];
                        ++b;
                        Y.safeDestroyWindowButton(d)
                    }
                    b = 0;
                    for (c = a.texts; b < c.length;) d = c[b], ++b, V.safeDestroyBitmapWithBitmapData(d);
                    a.texts = [];
                    b = 0;
                    for (c = a.input_texts; b < c.length;) d = c[b], ++b, D.safeRemove(d);
                    a.input_texts = [];
                    b = 0;
                    for (c = a.dynamic_texts; b < c.length;) d = c[b], ++b, D.safeRemove(d);
                    a.dynamic_texts = [];
                    b = 0;
                    for (c = a.icons; b < c.length;) d = c[b], ++b, Y.destroyWindowLevelIcon(d);
                    D.safeRemove(a.container);
                    a.pack = null
                }
            };
            Y.safeDestroyWindowButton = function(a) {
                null != a && (a.bitmap_buttons_are_generated ? (null != a.bitmap && V.safeDestroyBitmapWithBitmapData(a.bitmap), null != a.downed_bitmap && V.safeDestroyBitmapWithBitmapData(a.downed_bitmap)) : (null != a.bitmap && (D.safeRemove(a.bitmap), a.bitmap.set_bitmapData(null)), null != a.downed_bitmap && (D.safeRemove(a.downed_bitmap), a.downed_bitmap.set_bitmapData(null))), a.bitmap =
                    null, a.downed_bitmap = null, a.button = null, a.parent = null)
            };
            Y.destroyWindowLevelIcon = function(a) {
                D.safeRemove(a.text_field);
                D.safeRemove(a.text_field_bitmap);
                D.safeRemove(a.text_number);
                D.safeRemove(a.container);
                D.safeRemove(a.background.container);
                V.destroyBitmapContainerIncludingBitmapDataSource(a.icon);
                a.level_reference = null;
                a.button = null
            };
            Y.updatePlayWindow = function(a, b, c, d) {
                if (null == b) w.trace("warning: window == null", {
                    fileName: "PlayWindowDo.hx",
                    lineNumber: 3017,
                    className: "bikas.game.PlayWindowDo",
                    methodName: "updatePlayWindow"
                });
                else {
                    b.accumulated_update_time += a.step.step_size;
                    if (!b.is_game_bought_at_window_creation && a.progress_save.game_is_bought) switch (Q.enumIndex(b.type)) {
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                            D.reOpenPlayWindowInstantly(a);
                            return;
                        case 11:
                            D.closePlayWindow(a, he.PlayWindowCloseInstantly);
                            return;
                        case 12:
                            b.previous_window_open_type == ua.OpenAdConsent ? D.closePlayWindow(a, he.PlayWindowCloseInstantly) : D.openWindow(a, b.previous_window_open_type, b.previous_window_pack, !0);
                            return
                    }
                    null ==
                        b.container.parent && a.menu_container.addChild(b.container);
                    if (b.state == ge.TransitionIn) b.time += a.step.step_size, c = H.clamp0to1(b.time / xd.transition_in_time), b.container.set_alpha(ma.cubicEnd(0, 1, c)), 1 == c && (b.state = ge.Normal, b.time = 0);
                    else if (b.state == ge.TransitionOut) b.time += a.step.step_size, c = H.clamp0to1(b.time / xd.transition_out_time), b.container.set_alpha(ma.cubicStart(1, 0, c)), 1 == c && (c = b.close_type, d = b.to_level, Y.destroyPlayWindow(b), c == he.PlayWindowPlayLevel && null != a.main_menu && D.closeMainMenu(a,
                        !0, d));
                    else {
                        b.state == ge.Normal ? (1 != b.container.get_alpha() && b.container.set_alpha(1), null != b.purchase_display && Y.updatePurchaseDisplay(a, b, b.purchase_display, a.step)) : w.trace("warning: unhandled state " + E.string(b.state), {
                            fileName: "PlayWindowDo.hx",
                            lineNumber: 3180,
                            className: "bikas.game.PlayWindowDo",
                            methodName: "updatePlayWindow"
                        });
                        var e = d = null;
                        switch (Q.enumIndex(b.type)) {
                            case 0:
                                d = Y.handleWindowButtonsMouseEvents(b.enabled_window_buttons, c, a.finger_radius, a.sounds);
                                if (null != d && d == b.play_button) {
                                    Y.regularPlayClick(a,
                                        b);
                                    return
                                }
                                break;
                            case 1:
                                e = 0;
                                for (var f = b.icons; e < f.length;) {
                                    var h = f[e];
                                    ++e;
                                    h.state == Vb.WindowLevelIconStateNext && (h = h.background.container, h.set_rotation(h.get_rotation() + a.step.step_size * xd.icon_rotation_speed))
                                }
                                e = Y.handleIconMouseEvents(a.sounds, b.icons, c, a.finger_radius);
                                if (null != e && e.state != Vb.WindowLevelIconStateLocked) {
                                    a.config.development.gameplay_type = hh.Release;
                                    a.allow_snapping = !0;
                                    null != a.debug && null != a.debug.game_debug_window && v.refreshAllFields(a.debug.game_debug_window);
                                    D.closePlayWindow(a,
                                        he.PlayWindowPlayLevel, e.level_reference.prefab_name);
                                    Af.setCommercialBreak(a);
                                    return
                                }
                                break;
                            case 3:
                                Y.updateTimedUnlockText(b);
                                break;
                            case 4:
                                d = Y.handleWindowButtonsMouseEvents(b.enabled_window_buttons, c, a.finger_radius, a.sounds);
                                if (null != d) {
                                    if (d == b.remove_ads_button) {
                                        D.openWindow(a, ua.OpenBuyWithGoBack, null, !0);
                                        return
                                    }
                                    if (d == b.play_button) {
                                        Y.regularPlayClick(a, b);
                                        return
                                    }
                                }
                                break;
                            case 5:
                                d = Y.handleWindowButtonsMouseEvents(b.enabled_window_buttons, c, a.finger_radius, a.sounds);
                                break;
                            case 6:
                            case 7:
                                b.type == za.TimedLockedWatchAdToUnlockHTML5 &&
                                    Y.updateTimedUnlockText(a.play_window);
                                d = Y.handleWindowButtonsMouseEvents(b.enabled_window_buttons, c, a.finger_radius, a.sounds);
                                null != d && d == b.watch_ad_button && (a.config.game_is_paused_by_ad = !0, D.stopAllMusic(a.sounds), Af.PokiSDK.rewardedBreak().then(function(c) {
                                    null == b.progress_pack_reference || b.progress_pack_reference.ad_was_shown || (b.progress_pack_reference.ad_was_shown = !0, D.saveAllProgressToFile(a.progress_serial_data, a.progress_save));
                                    a.config.game_is_paused_by_ad = !1;
                                    D.openWindow(a, ua.OpenLevelPack,
                                        b.pack, !0)
                                }));
                                break;
                            case 8:
                                d = Y.handleWindowButtonsMouseEvents(b.enabled_window_buttons, c, a.finger_radius, a.sounds);
                                if (null != d)
                                    if (d == b.buy_button) Y.requestPurchase(a);
                                    else if (d != b.restore_purchase_button && d == b.watch_ad_button) {
                                    Y.regularPlayClick(a, b);
                                    return
                                }
                                break;
                            case 9:
                                d = Y.handleWindowButtonsMouseEvents(b.enabled_window_buttons, c, a.finger_radius, a.sounds);
                                null != d && d == b.buy_button && Y.requestPurchase(a);
                                break;
                            case 10:
                                if (b.current_weekly_page_index == b.next_weekly_page_index && (e = Y.handleIconMouseEvents(a.sounds,
                                        b.icons, c, a.finger_radius), null != e)) {
                                    null == e.weekly_level_pack_reference ? w.trace("warning: clicked_closest_icon.weekly_level_pack_reference == null", {
                                        fileName: "PlayWindowDo.hx",
                                        lineNumber: 3389,
                                        className: "bikas.game.PlayWindowDo",
                                        methodName: "updatePlayWindow"
                                    }) : D.openWindow(a, ua.OpenLevelPack, e.weekly_level_pack_reference, !0);
                                    return
                                }
                                break;
                            case 11:
                                d = Y.handleWindowButtonsMouseEvents(b.enabled_window_buttons, c, a.finger_radius, a.sounds);
                                if (null != d) {
                                    if (d == b.consent_personalized_ads_button) {
                                        a.progress_save.is_ad_consent_taken = !0;
                                        a.progress_save.personalized_ads = !0;
                                        D.saveAllProgressToFile(a.progress_serial_data, a.progress_save);
                                        b == a.play_window ? D.closePlayWindow(a, he.PlayWindowJustClose) : b == a.settings_window && D.closeSettingsWindow(a);
                                        return
                                    }
                                    if (d == b.consent_non_personalized_ads_button) {
                                        a.progress_save.is_ad_consent_taken = !0;
                                        a.progress_save.personalized_ads = !1;
                                        D.saveAllProgressToFile(a.progress_serial_data, a.progress_save);
                                        b == a.play_window ? D.closePlayWindow(a, he.PlayWindowJustClose) : b == a.settings_window && D.closeSettingsWindow(a);
                                        return
                                    }
                                    if (d == b.consent_remove_ads_button) {
                                        b == a.play_window ? D.openWindow(a, ua.OpenBuyWithGoBack, null, !0) : b == a.settings_window && D.openSettingsWindow(a, ua.OpenBuyWithGoBack);
                                        return
                                    }
                                    d == b.consent_learn_more_fake_button && ia.getURL(new Fi("https://support.google.com/adspolicy/answer/143465"), "_blank")
                                }
                                break;
                            case 12:
                                d = Y.handleWindowButtonsMouseEvents(b.enabled_window_buttons, c, a.finger_radius, a.sounds);
                                if (null != d)
                                    if (d == b.buy_button) Y.requestPurchase(a);
                                    else if (d != b.restore_purchase_button && d == b.go_back_button) {
                                    null ==
                                        b.previous_window_open_type ? w.trace("warning: window.previous_window_open_type == null", {
                                            fileName: "PlayWindowDo.hx",
                                            lineNumber: 3505,
                                            className: "bikas.game.PlayWindowDo",
                                            methodName: "updatePlayWindow"
                                        }) : b == a.play_window ? D.openWindow(a, b.previous_window_open_type, b.previous_window_pack, !0) : b == a.settings_window && D.openSettingsWindow(a, b.previous_window_open_type);
                                    return
                                }
                                break;
                            case 13:
                                d = Y.handleWindowButtonsMouseEvents(b.enabled_window_buttons, c, a.finger_radius, a.sounds);
                                null != d && (null != b.change_ad_settings_button &&
                                    d == b.change_ad_settings_button ? D.openSettingsWindow(a, ua.OpenAdConsent) : d == b.level_unlock ? D.openSettingsWindow(a, ua.OpenUnlockLevels) : d == b.credits_button && D.openSettingsWindow(a, ua.OpenCredits));
                                break;
                            case 14:
                                d = Y.handleWindowButtonsMouseEvents(b.enabled_window_buttons, c, a.finger_radius, a.sounds);
                                break;
                            case 15:
                                d = Y.handleWindowButtonsMouseEvents(b.enabled_window_buttons, c, a.finger_radius, a.sounds);
                                f = !1;
                                null != a.config.html5_device && (a.config.html5_device.desktop || (f = !0));
                                f && 0 < b.input_texts.length && (a.container.stage.get_focus() ==
                                    b.input_texts[0] ? (c.button_state == ya.UPPED || c.button_state == ya.NONE) && 0 < b.texts.length && (f = b.texts[0].get_y(), b.container.get_y() != -f && (b.container.set_y(-f), null != b.blurred_main_menu_reference ? b.blurred_main_menu_reference.set_y(f) : null != b.prompt_backgound && b.prompt_backgound.set_y(f), h = Va.convertRectangle(b.apply_code.bitmap.getBounds(b.container)), b.apply_code.button = Ia.createRectangleButton(h), b.apply_code.button.rectangle.y -= f, xb.expandRectangle(b.apply_code.button.rectangle, -5))) : c.button_state !=
                                    ya.UPPED && c.button_state != ya.NONE || 0 == b.container.get_y() || (b.container.set_y(0), null != b.blurred_main_menu_reference ? b.blurred_main_menu_reference.set_y(0) : null != b.prompt_backgound && b.prompt_backgound.set_y(0), f = Va.convertRectangle(b.apply_code.bitmap.getBounds(b.apply_code.bitmap.parent)), b.apply_code.button = Ia.createRectangleButton(f), xb.expandRectangle(b.apply_code.button.rectangle, -5)));
                                null != d && d == b.apply_code && (f = !1, 0 < b.input_texts.length ? (f = b.input_texts[0].get_text(), f = mh.applyCode(a.game_levels,
                                    a.progress_save, mh.timeline_encoding_for_html5, f)) : w.trace("warning: no input text", {
                                    fileName: "PlayWindowDo.hx",
                                    lineNumber: 3628,
                                    className: "bikas.game.PlayWindowDo",
                                    methodName: "updatePlayWindow"
                                }), f ? (null != a.settings_window && D.closeSettingsWindow(a), D.saveAllProgressToFile(a.progress_serial_data, a.progress_save), D.resizeGame(a, a.size.width, a.size.height), D.openPromptWindow(a, ua.OpenUnlockSuccess)) : D.openPromptWindow(a, ua.OpenUnlockFailed));
                                break;
                            case 16:
                                if (d = Y.handleWindowButtonsMouseEvents(b.enabled_window_buttons,
                                        c, a.finger_radius, a.sounds), null != d && d == b.ok_button) {
                                    D.closePromptWindow(a);
                                    return
                                }
                        }
                        if (!b.is_destroyed) {
                            b.current_weekly_page_index != b.next_weekly_page_index && (b.page_scroll_is_animating || (b.page_scroll_is_animating = !0, b.page_scroll_current_time = 0), 0 > b.next_weekly_page_index && (w.trace("warning: invalid window.next_weekly_page_index == " + b.next_weekly_page_index, {
                                        fileName: "PlayWindowDo.hx",
                                        lineNumber: 3673,
                                        className: "bikas.game.PlayWindowDo",
                                        methodName: "updatePlayWindow"
                                    }), b.next_weekly_page_index =
                                    0), b.next_weekly_page_index > b.total_pages - 1 && (w.trace("warning: invalid window.next_weekly_page_index == " + b.next_weekly_page_index, {
                                    fileName: "PlayWindowDo.hx",
                                    lineNumber: 3677,
                                    className: "bikas.game.PlayWindowDo",
                                    methodName: "updatePlayWindow"
                                }), b.next_weekly_page_index = b.total_pages - 1), b.page_scroll_current_time += a.step.step_size, f = H.clamp0to1(b.page_scroll_current_time / xd.page_scroll_time), h = -ma.smoothStartEnd(b.current_weekly_page_index, b.next_weekly_page_index, f) * b.width, b.weekly_icon_container.set_x(h),
                                1 == f && (b.current_weekly_page_index = b.next_weekly_page_index, a.progress_save.current_weekly_history_page_index = b.current_weekly_page_index, b.page_scroll_is_animating = !1, b.page_scroll_current_time = 0), Y.setWeeklyVisibility(b));
                            if (c.button_state == ya.DOWNED) {
                                b.was_downed_inside_game_container = !0;
                                f = !1;
                                h = 0;
                                for (var k = b.enabled_window_buttons; h < k.length;) {
                                    var m = k[h];
                                    ++h;
                                    if (m.is_downed) {
                                        f = !0;
                                        break
                                    }
                                }
                                f || (f = Ia.findClosestButton(b.navigation_buttons, a.finger_radius, c.downed), null != f && (f = aa.__cast(f, kh), f.bitmap.set_visible(!1),
                                    f.downed_bitmap.set_visible(!0), D.playButtonDownSound(a.sounds)))
                            }
                            c.button_state == ya.UPPED && (null == d && null == e && (e = Ia.findClosestButton(b.navigation_buttons, a.finger_radius, c.downed), d = Ia.findClosestButton(b.navigation_buttons, a.finger_radius, c.upped), null != e && (f = aa.__cast(e, kh), f.bitmap.set_visible(!0), f.downed_bitmap.set_visible(!1)), f = !H.isRectangleAndCircleIntersect(b.window_rectangle, c.downed, a.finger_radius), c = !H.isRectangleAndCircleIntersect(b.window_rectangle, c.upped, a.finger_radius), null !=
                                    e && null != d ? (c = aa.__cast(e, kh), d = aa.__cast(d, kh), c != d || 1 != c.bitmap.get_alpha() && 1 != c.downed_bitmap.get_alpha() || (c == b.close_button ? b == a.play_window ? D.closePlayWindow(a, he.PlayWindowJustClose) : b == a.prompt_window ? D.closePromptWindow(a) : b == a.settings_window ? D.closeSettingsWindow(a) : w.trace("warning: unhandled window", {
                                        fileName: "PlayWindowDo.hx",
                                        lineNumber: 3753,
                                        className: "bikas.game.PlayWindowDo",
                                        methodName: "updatePlayWindow"
                                    }) : c == b.next_button ? b.next_weekly_page_index = H.clampInt(b.next_weekly_page_index +
                                        1, 0, b.total_pages - 1) : c == b.previous_button && (b.next_weekly_page_index = H.clampInt(b.next_weekly_page_index - 1, 0, b.total_pages - 1)))) : null == e && null == d && f && c && b.can_close_outside && .2 < b.accumulated_update_time && (b == a.play_window ? D.closePlayWindow(a, he.PlayWindowJustClose) : b == a.prompt_window ? D.closePromptWindow(a) : b == a.settings_window ? D.closeSettingsWindow(a) : w.trace("warning: unhandled window", {
                                        fileName: "PlayWindowDo.hx",
                                        lineNumber: 3787,
                                        className: "bikas.game.PlayWindowDo",
                                        methodName: "updatePlayWindow"
                                    }))),
                                b.was_downed_inside_game_container = !1)
                        }
                    }
                }
            };
            Y.updatePurchaseDisplay = function(a, b, c, d) {
                var e = Re.None;
                c.loading_text.set_visible(!1);
                c.processing_text.set_visible(!1);
                c.restoring_text.set_visible(!1);
                c.approval_text.set_visible(!1);
                c.rotating_circle.container.set_visible(!1);
                a = !0;
                var f = function(a, b, c) {
                    c.set_visible(!0);
                    b.rotating_circle.container.set_visible(!0);
                    b.rotating_circle.container.set_x(c.get_x() - b.rotating_circle.source.original_width / 2 - 5 * a.scale);
                    b.rotating_circle.container.set_y(c.get_y() +
                        c.get_height() / 2)
                };
                switch (Q.enumIndex(e)) {
                    case 0:
                        a = !0;
                        break;
                    case 1:
                        f(b, c, c.loading_text);
                        a = !1;
                        break;
                    case 2:
                        f(b, c, c.processing_text);
                        a = !1;
                        break;
                    case 3:
                        f(b, c, c.restoring_text);
                        a = !1;
                        break;
                    case 4:
                        f(b, c, c.approval_text), a = !1
                }
                e = function(a, b, c) {
                    c ? -1 == a.enabled_window_buttons.indexOf(b) && (a.enabled_window_buttons.push(b), b.bitmap.set_visible(!0), b.downed_bitmap.set_visible(!1)) : -1 != a.enabled_window_buttons.indexOf(b) && (la.remove(a.enabled_window_buttons, b), b.bitmap.set_visible(!1), b.downed_bitmap.set_visible(!1))
                };
                null != b.buy_button && e(b, b.buy_button, a);
                null != b.restore_purchase_button && e(b, b.restore_purchase_button, a);
                c.rotating_circle.container.get_visible() && null != d && (b = c.rotating_circle.container, b.set_rotation(b.get_rotation() + 150 * d.step_size))
            };
            var mh = function() {};
            g["bikas.game.ProgressUnlockDo"] = mh;
            mh.__name__ = ["bikas", "game", "ProgressUnlockDo"];
            mh.encode = function(a, b) {
                for (var c = [], d = 0, e = b.length; d < e;) {
                    var f = d++;
                    if (f < a.main_timelines.length) {
                        for (var h = 0, k = -1, m = 0, g = a.main_timelines[f].packs; m < g.length;) {
                            var l =
                                g[m];
                            ++m;
                            var n = 0;
                            for (l = l.levels; n < l.length;) {
                                var p = l[n];
                                ++n;
                                ++h;
                                p.completed && (k = h)
                            }
                        }
                        0 <= k && c.push("u" + b[f] + k)
                    }
                }
                a = "";
                for (b = 0; b < c.length;) d = c[b], ++b, a += d;
                return a
            };
            mh.applyCode = function(a, b, c, d) {
                if (!mh.isFinalCodeCharactersValid(d, c)) return !1;
                if ("" == d) return w.trace("code is empty", {
                    fileName: "ProgressUnlockDo.hx",
                    lineNumber: 68,
                    className: "bikas.game.ProgressUnlockDo",
                    methodName: "applyCode"
                }), !1;
                d = d.toLowerCase();
                d = d.split("u");
                if (0 == d.length) return w.trace("nothing to split", {
                    fileName: "ProgressUnlockDo.hx",
                    lineNumber: 77,
                    className: "bikas.game.ProgressUnlockDo",
                    methodName: "applyCode"
                }), !1;
                for (var e = 0; e < d.length;) {
                    var f = d[e];
                    ++e;
                    if (1 < f.length) {
                        var h = f.charAt(0),
                            k = E.parseInt(f.substring(1, f.length)),
                            m = c.indexOf(h);
                        if (null == k) return w.trace("number is invalid", {
                            fileName: "ProgressUnlockDo.hx",
                            lineNumber: 90,
                            className: "bikas.game.ProgressUnlockDo",
                            methodName: "applyCode"
                        }), !1;
                        if (-1 == m) return w.trace("encoding does not have " + h, {
                            fileName: "ProgressUnlockDo.hx",
                            lineNumber: 95,
                            className: "bikas.game.ProgressUnlockDo",
                            methodName: "applyCode"
                        }), !1;
                        if (null != k && 0 <= m) {
                            if (f = a.main_timelines[m], w.trace("unlock timeline: " + f.name + ", to the level: " + k, {
                                    fileName: "ProgressUnlockDo.hx",
                                    lineNumber: 103,
                                    className: "bikas.game.ProgressUnlockDo",
                                    methodName: "applyCode"
                                }), f = Ia.findProgressSaveTimeline(b, f.name), null != f)
                                for (h = 0, m = f.packs; h < m.length;) {
                                    var g = m[h];
                                    ++h;
                                    for (var l = 0, n = g.levels; l < n.length;) {
                                        var p = n[l];
                                        ++l;
                                        if (0 < k) {
                                            p.unlocked = !0;
                                            p.completed = !0;
                                            if (g.levels.indexOf(p) == g.levels.length - 1) {
                                                g.unlocked = !0;
                                                g.completed = !0;
                                                g.completed_shown = !0;
                                                p = f.packs.indexOf(g);
                                                if (p < f.packs.length - 1) {
                                                    var x = f.packs[p + 1];
                                                    x.unlocked = !0;
                                                    0 < x.levels.length && (x.levels[0].unlocked = !0)
                                                }
                                                p == f.packs.length - 1 && (f.completed = !0, f.completed_shown = !0, D.setProgressTimelineAsCompleted(b, f))
                                            }--k
                                        } else if (0 == k) {
                                            p.unlocked = !0;
                                            --k;
                                            break
                                        }
                                    }
                                    if (0 > k) break
                                }
                        } else return w.trace("invalid sub-code: " + f, {
                            fileName: "ProgressUnlockDo.hx",
                            lineNumber: 155,
                            className: "bikas.game.ProgressUnlockDo",
                            methodName: "applyCode"
                        }), !1
                    } else if (1 == f.length) return w.trace("invalid sub-code: " + f, {
                        fileName: "ProgressUnlockDo.hx",
                        lineNumber: 160,
                        className: "bikas.game.ProgressUnlockDo",
                        methodName: "applyCode"
                    }), !1
                }
                return !0
            };
            mh.isFinalCodeCharactersValid = function(a, b) {
                for (var c = 0, d = a.length; c < d;) {
                    var e = c++;
                    e = a.charAt(e);
                    if ("u" != e && -1 == b.indexOf(e)) switch (e) {
                        case "0":
                        case "1":
                        case "2":
                        case "3":
                        case "4":
                        case "5":
                        case "6":
                        case "7":
                        case "8":
                        case "9":
                            break;
                        default:
                            return !1
                    }
                }
                return !0
            };
            var Jq = function(a, b, c, d) {
                null == d && (d = 0);
                null == c && (c = 0);
                null == b && (b = 0);
                null == a && (a = 0);
                this.red = a;
                this.green = b;
                this.blue = c;
                this.alpha = d
            };
            g["bikas.global.ColorARGBInt"] =
                Jq;
            Jq.__name__ = ["bikas", "global", "ColorARGBInt"];
            Jq.prototype = {
                red: null,
                green: null,
                blue: null,
                alpha: null,
                __class__: Jq
            };
            var Ne = function() {};
            g["bikas.global.ColorFunc"] = Ne;
            Ne.__name__ = ["bikas", "global", "ColorFunc"];
            Ne.rgbIntsToRGBInt = function(a, b, c) {
                return (a << 16) + (b << 8) + c
            };
            Ne.rgbIntToRGBHexString = function(a) {
                return ka.hex(a)
            };
            Ne.colorARGBIntToRGBInt = function(a) {
                return (a.red << 16) + (a.green << 8) + a.blue
            };
            Ne.rgbIntToColorARGBInt = function(a) {
                return new Jq(a >> 16 & 255, a >> 8 & 255, a & 255, 1)
            };
            Ne.rgbIntToColorARGB = function(a) {
                var b =
                    new Jq;
                b.red = Math.round(a / 65536);
                b.green = Math.round(a / 256 % 256);
                b.blue = a % 256;
                return b
            };
            var eh = function() {};
            g["bikas.global.MathConstants"] = eh;
            eh.__name__ = ["bikas", "global", "MathConstants"];
            var Nv = function() {};
            g["bikas.global.GlobalFlags"] = Nv;
            Nv.__name__ = ["bikas", "global", "GlobalFlags"];
            var Ie = function(a, b, c, d) {
                null == d && (d = 0);
                null == c && (c = 0);
                null == b && (b = 0);
                null == a && (a = 0);
                this.x = a;
                this.y = b;
                this.width = c;
                this.height = d
            };
            g["bikas.global.Rectangle"] = Ie;
            Ie.__name__ = ["bikas", "global", "Rectangle"];
            Ie.prototype = {
                x: null,
                y: null,
                width: null,
                height: null,
                toString: function() {
                    return "{x:" + Math.round(1E3 * this.x) / 1E3 + ",y:" + Math.round(1E3 * this.y) / 1E3 + ",width:" + Math.round(1E3 * this.width) / 1E3 + ",height:" + Math.round(1E3 * this.height) / 1E3 + "}"
                },
                __class__: Ie
            };
            var mj = function(a, b, c, d) {
                null == d && (d = 0);
                null == c && (c = 0);
                null == b && (b = 0);
                null == a && (a = 0);
                this.min_x = a;
                this.min_y = b;
                this.max_x = c;
                this.max_y = d
            };
            g["bikas.global.Bounds"] = mj;
            mj.__name__ = ["bikas", "global", "Bounds"];
            mj.prototype = {
                min_x: null,
                min_y: null,
                max_x: null,
                max_y: null,
                __class__: mj
            };
            var $d = function() {
                this.rotation = 0;
                this.scale_x = this.scale_y = 1
            };
            g["bikas.global.Transform"] = $d;
            $d.__name__ = ["bikas", "global", "Transform"];
            $d.prototype = {
                scale_x: null,
                scale_y: null,
                rotation: null,
                __class__: $d
            };
            var It = function() {};
            g["bikas.global.PolygonIntersection"] = It;
            It.__name__ = ["bikas", "global", "PolygonIntersection"];
            It.prototype = {
                intersection: null,
                distance: null,
                index: null,
                __class__: It
            };
            var H = function() {};
            g["bikas.global.GlobalFunc"] = H;
            H.__name__ = ["bikas", "global", "GlobalFunc"];
            H.angleDifferenceRad =
                function(a, b) {
                    return Math.atan2(Math.sin(a - b), Math.cos(a - b))
                };
            H.normalizeAngle = function(a) {
                a = (a % eh.PI2 + eh.PI2) % eh.PI2;
                a > Math.PI && (a -= eh.PI2);
                return a
            };
            H.clamp = function(a, b, c) {
                return a < b ? b : a > c ? c : a
            };
            H.clampMin = function(a, b) {
                return a < b ? b : a
            };
            H.clamp0to1 = function(a) {
                return 0 > a ? 0 : 1 < a ? 1 : a
            };
            H.clampInt = function(a, b, c) {
                return a < b ? b : a > c ? c : a
            };
            H.distance = function(a, b, c, d) {
                a = c - a;
                b = d - b;
                return Math.sqrt(a * a + b * b)
            };
            H.distanceBetweenPoints = function(a, b) {
                var c = b.x - a.x;
                a = b.y - a.y;
                return Math.sqrt(c * c + a * a)
            };
            H.dot = function(a,
                b, c, d) {
                return a * c + b * d
            };
            H.rectanglesIntersect = function(a, b) {
                return !(a.x > b.x + b.width || a.x + a.width < b.x || a.y > b.y + b.height || a.y + a.height < b.y)
            };
            H.boundsIntersectOrContain = function(a, b) {
                return a.min_x > b.max_x ? !1 : a.min_y > b.max_y ? !1 : a.max_x < b.min_x ? !1 : a.max_y < b.min_y ? !1 : !0
            };
            H.boundsWidth = function(a) {
                return Math.abs(a.max_x - a.min_x)
            };
            H.boundsHeight = function(a) {
                return Math.abs(a.max_y - a.min_y)
            };
            H.getTotalRectangle = function(a) {
                if (0 == a.length) return null;
                for (var b = a[0].x, c = a[0].y, d = a[0].x + a[0].width, e = a[0].y +
                        a[0].height, f = 0; f < a.length;) {
                    var h = a[f];
                    ++f;
                    h.x < b && (b = h.x);
                    h.y < c && (c = h.y);
                    h.x + h.width > d && (d = h.x + h.width);
                    h.y + h.height > e && (e = h.y + h.height)
                }
                return new Ie(b, c, d - b, e - c)
            };
            H.getTransformX = function(a, b, c, d, e) {
                return a * c * Math.cos(e) - b * d * Math.sin(e)
            };
            H.getTransformY = function(a, b, c, d, e) {
                return a * c * Math.sin(e) + b * d * Math.cos(e)
            };
            H.isPointBetween = function(a, b, c) {
                return c.x < a.x && c.x < b.x ? !1 : c.x > a.x && c.x > b.x ? !1 : c.y < a.y && c.y < b.y ? !1 : c.y > a.y && c.y > b.y ? !1 : !0
            };
            H.isPointInLineRange = function(a, b, c) {
                var d = b.x - a.x;
                b = b.y - a.y;
                a = (c.x - a.x) * d + (c.y - a.y) * b;
                return 0 <= a ? a <= d * d + b * b : !1
            };
            H.distanceBetweenLineAndPoint = function(a, b, c) {
                var d = b.x - a.x;
                b = b.y - a.y;
                return Math.abs((c.x - a.x) * b - d * (c.y - a.y)) / Math.sqrt(d * d + b * b)
            };
            H.distanceBetweenPointAndRectangle = function(a, b) {
                var c = H.clamp(a.x, b.x, b.x + b.width);
                b = H.clamp(a.y, b.y, b.y + b.height);
                return H.distance(a.x, a.y, c, b)
            };
            H.distanceBetweenPointAndRectangleArea = function(a, b) {
                if (H.pointInRectangle(a, b)) return 0;
                var c = H.clamp(a.x, b.x, b.x + b.width);
                b = H.clamp(a.y, b.y, b.y + b.height);
                return H.distance(a.x,
                    a.y, c, b)
            };
            H.isRectangleAndCircleIntersect = function(a, b, c) {
                return H.pointInRectangle(b, a) ? !0 : H.distanceBetweenPointAndRectangle(b, a) <= c ? !0 : !1
            };
            H.getPointPerpendicularToLine = function(a, b, c) {
                var d = c.x - a.x,
                    e = c.y - a.y,
                    f = b.x - a.x;
                a = b.y - a.y;
                b = f * f + a * a;
                if (0 == b) return w.trace("warning: (C * C + D * D) == 0", {
                    fileName: "GlobalFunc.hx",
                    lineNumber: 394,
                    className: "bikas.global.GlobalFunc",
                    methodName: "getPointPerpendicularToLine"
                }), null;
                d = (d * a - f * e) / b;
                return new W(c.x - d * a, c.y + d * f)
            };
            H.pointInRectangle = function(a, b) {
                return a.x <
                    b.x ? !1 : a.y < b.y ? !1 : a.x > b.x + b.width ? !1 : a.y > b.y + b.height ? !1 : !0
            };
            H.pointInBounds = function(a, b) {
                return a.x < b.min_x ? !1 : a.y < b.min_y ? !1 : a.x > b.max_x ? !1 : a.y > b.max_y ? !1 : !0
            };
            H.rectangleInRectangle = function(a, b) {
                return a.x < b.x ? !1 : a.y < b.y ? !1 : a.x + a.width > b.x + b.width ? !1 : a.y + a.height > b.y + b.height ? !1 : !0
            };
            H.expandRectangle = function(a, b) {
                return new Ie(a.x - b, a.y - b, a.width + 2 * b, a.height + 2 * b)
            };
            H.expandRectangleHorizontally = function(a, b) {
                return new Ie(a.x - b, a.y, a.width + 2 * b, a.height)
            };
            H.min = function(a, b) {
                return a < b ? a : b
            };
            H.max4 =
                function(a, b, c, d) {
                    b > a && (a = b);
                    c > a && (a = c);
                    d > a && (a = d);
                    return a
                };
            H.minInt = function(a, b) {
                return a < b ? a : b
            };
            H.max = function(a, b) {
                return a > b ? a : b
            };
            H.rotatePoint = function(a, b, c) {
                return new W(Math.cos(c) * (b.x - a.x) - Math.sin(c) * (b.y - a.y) + a.x, Math.sin(c) * (b.x - a.x) + Math.cos(c) * (b.y - a.y) + a.y)
            };
            H.round = function(a, b) {
                null == b && (b = .01);
                return Math.round(a / b) * b
            };
            H.snap = function(a, b) {
                return 0 < b ? Math.round(Math.round(a / b) * b) : a
            };
            H.getAngleBetweenPoints = function(a, b) {
                return Math.atan2(b.y - a.y, b.x - a.x)
            };
            H.interpolateSmoothOutIn =
                function(a, b, c) {
                    c = .5 * (1 - Math.cos(c * Math.PI));
                    return a * (1 - c) + b * c
                };
            H.interpolateSmoothIn = function(a, b, c) {
                c = Math.sin(c * Math.PI * .5);
                return (1 - c) * a + c * b
            };
            H.interpolate = function(a, b, c) {
                return a + (b - a) * c
            };
            H.findIndexOfNearestValue = function(a, b) {
                for (var c = b[0], d = Math.abs(c - a), e = 0, f = 0, h = b.length; f < h;) {
                    var k = f++;
                    c = b[k];
                    Math.abs(c - a) < d && (d = Math.abs(c - a), e = k)
                }
                return e
            };
            H.copyPoint = function(a) {
                return new W(a.x, a.y)
            };
            H.copyRectangle = function(a) {
                return new Ie(a.x, a.y, a.width, a.height)
            };
            H.copyTransform = function(a) {
                var b =
                    new $d;
                b.scale_x = a.scale_x;
                b.scale_y = a.scale_y;
                b.rotation = a.rotation;
                return b
            };
            H.copyBounds = function(a) {
                return new mj(a.min_x, a.min_y, a.max_x, a.max_y)
            };
            H.copySize = function(a) {
                return new rc(a.width, a.height)
            };
            H.copyPoints = function(a) {
                for (var b = [], c = 0; c < a.length;) {
                    var d = a[c];
                    ++c;
                    b.push(H.copyPoint(d))
                }
                return b
            };
            H.spaceText = function(a, b) {
                for (; a.length < b;) a += " ";
                return a
            };
            H.getRandomBetweenInt = function(a, b) {
                return a + Math.floor(Math.random() * (b - a + 1))
            };
            H.createRectangleFrom2Points = function(a, b) {
                return new Ie(a.x <
                    b.x ? a.x : b.x, a.y < b.y ? a.y : b.y, Math.abs(a.x - b.x), Math.abs(a.y - b.y))
            };
            H.createBoundsFrom2Points = function(a, b) {
                return new mj(H.min(a.x, b.x), H.min(a.y, b.y), H.max(a.x, b.x), H.max(a.y, b.y))
            };
            H.boundsToRectangle = function(a) {
                return new Ie(a.min_x, a.min_y, a.max_x - a.min_x, a.max_y - a.min_y)
            };
            H.pointInPolygon = function(a, b) {
                if (3 > b.length) return !1;
                var c = a.x;
                a = a.y;
                for (var d = b[b.length - 1], e = !1, f = 0; f < b.length;) {
                    var h = b[f];
                    ++f;
                    (h.y < a && d.y >= a || d.y < a && h.y >= a) && (h.x <= c || d.x <= c) && h.x + (a - h.y) / (d.y - h.y) * (d.x - h.x) < c && (e = !e);
                    d = h
                }
                return e
            };
            H.getInfiniteLineIntersection = function(a, b, c, d) {
                var e = a.x;
                a = a.y;
                var f = b.x;
                b = b.y;
                var h = c.x;
                c = c.y;
                var k = d.x;
                d = d.y;
                var m = (d - c) * (f - e) - (k - h) * (b - a);
                if (0 == m) return null;
                d = ((k - h) * (a - c) - (d - c) * (e - h)) / m;
                return new W(e + d * (f - e), a + d * (b - a))
            };
            H.getLineSegmentAndInfiniteHorizontalLineIntersectionX = function(a, b, c, d) {
                var e = a.x;
                a = a.y;
                var f = b.x;
                b = b.y;
                return a > c && b > c || a < c && b < c ? null : a == b && a == c ? d ? e < f ? e : f : e > f ? e : f : e + (c - a) / (b - a) * (f - e)
            };
            H.getLineSegmentIntersection = function(a, b, c, d) {
                var e = a.x;
                a = a.y;
                var f = b.x;
                b =
                    b.y;
                var h = c.x;
                c = c.y;
                var k = d.x,
                    m = d.y;
                d = (m - c) * (f - e) - (k - h) * (b - a);
                if (0 == d) return null;
                k = ((k - h) * (a - c) - (m - c) * (e - h)) / d;
                h = ((f - e) * (a - c) - (b - a) * (e - h)) / d;
                return 0 <= k && 1 >= k && 0 <= h && 1 >= h ? new W(e + k * (f - e), a + k * (b - a)) : null
            };
            H.lineSegmentsIntersect = function(a, b, c, d) {
                var e = a.x;
                a = a.y;
                var f = b.x;
                b = b.y;
                var h = c.x;
                c = c.y;
                var k = d.x,
                    m = d.y;
                d = (m - c) * (f - e) - (k - h) * (b - a);
                if (0 == d) return !1;
                k = ((k - h) * (a - c) - (m - c) * (e - h)) / d;
                e = ((f - e) * (a - c) - (b - a) * (e - h)) / d;
                return 0 <= k && 1 >= k && 0 <= e && 1 >= e ? !0 : !1
            };
            H.pointsEqual = function(a, b) {
                return a.x != b.x ? !1 : a.y !=
                    b.y ? !1 : !0
            };
            var xb = function() {};
            g["bikas.global.GlobalProc"] = xb;
            xb.__name__ = ["bikas", "global", "GlobalProc"];
            xb.applyTransform = function(a, b, c, d) {
                var e = H.getTransformX(a.x, a.y, d.scale_x, d.scale_y, .017453292519943 * d.rotation),
                    f = H.getTransformY(a.x, a.y, d.scale_x, d.scale_y, .017453292519943 * d.rotation);
                a.x = c.x + e;
                a.y = c.y + f;
                b.scale_x *= d.scale_x;
                b.scale_y *= d.scale_y;
                b.rotation += d.rotation
            };
            xb.transformPoint = function(a, b) {
                var c = H.getTransformX(a.x, a.y, b.scale_x, b.scale_y, .017453292519943 * b.rotation);
                b = H.getTransformY(a.x,
                    a.y, b.scale_x, b.scale_y, .017453292519943 * b.rotation);
                a.x = c;
                a.y = b
            };
            xb.applyTransformToPoint = function(a, b, c) {
                var d = H.getTransformX(a.x, a.y, c.scale_x, c.scale_y, .017453292519943 * c.rotation);
                c = H.getTransformY(a.x, a.y, c.scale_x, c.scale_y, .017453292519943 * c.rotation);
                a.x = b.x + d;
                a.y = b.y + c
            };
            xb.expandRectangle = function(a, b) {
                a.x -= b;
                a.y -= b;
                a.width += 2 * b;
                a.height += 2 * b;
                return a
            };
            xb.expandRectangleWidth = function(a, b) {
                a.x -= b;
                a.width += 2 * b;
                return a
            };
            xb.expandRectangleHeight = function(a, b) {
                a.y -= b;
                a.height += 2 * b;
                return a
            };
            xb.expandBounds = function(a, b) {
                a.min_x -= b;
                a.min_y -= b;
                a.max_x += b;
                a.max_y += b;
                return a
            };
            xb.scaleRectangle = function(a, b) {
                a.x *= b;
                a.y *= b;
                a.width *= b;
                a.height *= b
            };
            var ch = function() {};
            g["bikas.global.GlobalReflectDo"] = ch;
            ch.__name__ = ["bikas", "global", "GlobalReflectDo"];
            ch.copyInstanceShallow = function(a, b) {
                for (var c = Q.getInstanceFields(Q.getClass(a)), d = 0; d < c.length;) {
                    var e = c[d];
                    ++d;
                    T.setField(b, e, T.field(a, e))
                }
            };
            var ma = function() {};
            g["bikas.global.InterpolateFunc"] = ma;
            ma.__name__ = ["bikas", "global", "InterpolateFunc"];
            ma.linear = function(a, b, c) {
                return a + (b - a) * c
            };
            ma.linearClamped = function(a, b, c) {
                return a + (b - a) * ma.clamp(c, 0, 1)
            };
            ma.linearForwardAndBackward = function(a, b, c) {
                return .5 > c ? ma.linear(a, b, 2 * c) : ma.linear(b, a, 2 * c - 1)
            };
            ma.smoothStart = function(a, b, c) {
                c = Math.cos(c * Math.PI * .5);
                return c * a + (1 - c) * b
            };
            ma.smoothEnd = function(a, b, c) {
                c = Math.sin(c * Math.PI * .5);
                return (1 - c) * a + c * b
            };
            ma.smoothStartEnd = function(a, b, c) {
                c = .5 * (1 - Math.cos(c * Math.PI));
                return a * (1 - c) + b * c
            };
            ma.smoothForwardAndBackward = function(a, b, c) {
                return .5 > c ? ma.smoothStartEnd(a,
                    b, 2 * c) : ma.smoothStartEnd(b, a, 2 * c - 1)
            };
            ma.smoothToABCWithSmoothB = function(a, b, c, d, e) {
                return e < d ? ma.smoothEnd(a, b, e / d) : ma.smoothStart(b, c, (e - d) / (1 - d))
            };
            ma.cubicStart = function(a, b, c) {
                return (b - a) * c * c * c + a
            };
            ma.cubicEnd = function(a, b, c) {
                --c;
                return (b - a) * (c * c * c + 1) + a
            };
            ma.cubicStartEnd = function(a, b, c) {
                return .5 > c ? ma.cubicStart(a, (a + b) / 2, 2 * c) : ma.cubicEnd((a + b) / 2, b, 2 * c - 1)
            };
            ma.cubicForwardAndBackward = function(a, b, c) {
                return .5 > c ? ma.cubicStartEnd(a, b, 2 * c) : ma.cubicStartEnd(b, a, 2 * c - 1)
            };
            ma.cubicToABC = function(a, b, c, d, e) {
                return e <
                    d ? ma.cubicStartEnd(a, b, e / d) : ma.cubicStartEnd(b, c, (e - d) / (1 - d))
            };
            ma.angleShortestLinear = function(a, b, c) {
                return a + Math.atan2(Math.sin(b - a), Math.cos(b - a)) * c
            };
            ma.getT = function(a, b, c) {
                return (c - a) / (b - a)
            };
            ma.getTClamped = function(a, b, c) {
                a = (c - a) / (b - a);
                return 0 > a ? 0 : 1 < a ? 1 : a
            };
            ma.clamp = function(a, b, c) {
                return a < b ? b : a > c ? c : a
            };
            var Nc = function() {};
            g["bikas.global.StringFunc"] = Nc;
            Nc.__name__ = ["bikas", "global", "StringFunc"];
            Nc.prependZerosToNumber = function(a, b) {
                for (null == b && (b = 4); a.length < b;) a = "0" + a;
                return a
            };
            Nc.removeSpacesAtStartAndEnd =
                function(a) {
                    return ka.trim(a)
                };
            Nc.getWellFormattedDate = function(a) {
                var b = a.getFullYear(),
                    c = a.getMonth() + 1,
                    d = a.getDate(),
                    e = a.getHours(),
                    f = a.getMinutes();
                a = a.getSeconds();
                return Nc.addZerosToNumber(b, 4) + " " + Nc.addZerosToNumber(c, 2) + " " + Nc.addZerosToNumber(d, 2) + ", " + Nc.addZerosToNumber(e, 2) + ":" + Nc.addZerosToNumber(f, 2) + ":" + Nc.addZerosToNumber(a, 2)
            };
            Nc.addZerosToNumber = function(a, b) {
                a += "";
                for (var c = a.length; c < b;) c++, a = "0" + a;
                return a
            };
            var Id = function() {};
            g["bikas.global.VecFunc"] = Id;
            Id.__name__ = ["bikas",
                "global", "VecFunc"
            ];
            Id.add = function(a, b) {
                return new W(a.x + b.x, a.y + b.y)
            };
            Id.subtract = function(a, b) {
                return new W(a.x - b.x, a.y - b.y)
            };
            Id.$length = function(a) {
                return Math.sqrt(a.x * a.x + a.y * a.y)
            };
            Id.angle = function(a) {
                return Math.atan2(a.y, a.x)
            };
            Id.interpolate = function(a, b, c) {
                return new W(a.x + (b.x - a.x) * c, a.y + (b.y - a.y) * c)
            };
            Id.copy = function(a) {
                return new W(a.x, a.y)
            };
            var Og = function() {};
            g["bikas.global.VecProc"] = Og;
            Og.__name__ = ["bikas", "global", "VecProc"];
            Og.addxy = function(a, b, c) {
                a.x += b;
                a.y += c;
                return a
            };
            Og.multiply =
                function(a, b) {
                    a.x *= b;
                    a.y *= b;
                    return a
                };
            Og.rotate = function(a, b) {
                var c = Math.cos(b);
                b = Math.sin(b);
                var d = b * a.x + c * a.y;
                a.x = c * a.x - b * a.y;
                a.y = d;
                return a
            };
            Og.normalize = function(a) {
                var b = Id.$length(a);
                0 < b ? (a.x /= b, a.y /= b) : w.trace("warning: length == " + b, {
                    fileName: "VecProc.hx",
                    lineNumber: 76,
                    className: "bikas.global.VecProc",
                    methodName: "normalize"
                });
                return a
            };
            Og.interpolate = function(a, b, c, d) {
                a.x = b.x + (c.x - b.x) * d;
                a.y = b.y + (c.y - b.y) * d;
                return a
            };
            var Qg = function() {};
            g["bikas.google.GoogleAnalyticsWrapper"] = Qg;
            Qg.__name__ = ["bikas", "google", "GoogleAnalyticsWrapper"];
            Qg.init = function(a, b, c) {
                Ec.init(a, b, c);
                Qg.exists = !0
            };
            Qg.trackPage = function(a) {
                Qg.exists && Ec.trackPageview("/" + a)
            };
            Qg.trackStart = function() {
                Qg.trackPage("start")
            };
            Qg.trackLevelFinish = function(a) {
                Qg.trackPage("level finished: " + a)
            };
            var Ea = function() {};
            g["bikas.graphics.GraphicsDo"] = Ea;
            Ea.__name__ = ["bikas", "graphics", "GraphicsDo"];
            Ea.setBrightness = function(a, b) {
                null == b && (b = 0);
                1 < b ? b = 1 : -1 > b && (b = -1);
                b = Math.round(255 * b);
                a.get_transform().set_colorTransform(new mc(1,
                    1, 1, 1, b, b, b, 0))
            };
            Ea.isBrightnessSame = function(a, b) {
                null == b && (b = 0);
                a = a.get_transform().get_colorTransform();
                1 < b ? b = 1 : -1 > b && (b = -1);
                b = Math.round(255 * b);
                return a.redOffset == b && a.greenOffset == b && a.blueOffset == b ? !0 : !1
            };
            Ea.setBrightnessAlpha = function(a, b, c) {
                null == c && (c = 0);
                null == b && (b = 0);
                1 < b ? b = 1 : -1 > b && (b = -1);
                b = Math.round(255 * b);
                a.get_transform().set_colorTransform(new mc(1, 1, 1, c, b, b, b, 0))
            };
            Ea.setScale = function(a, b) {
                a.set_scaleX(b);
                a.set_scaleY(b)
            };
            Ea.setScaleBrightnessAlpha = function(a, b, c, d) {
                Ea.setScale(a,
                    b);
                Ea.setBrightnessAlpha(a, c, d)
            };
            Ea.scaleGlowFilter = function(a, b) {
                a.set_blurX(a.get_blurX() * b);
                a.set_blurY(a.get_blurY() * b)
            };
            Ea.drawBounds = function(a, b, c, d, e, f, h) {
                null == h && (h = 1);
                null == f && (f = 1);
                null == e && (e = 0);
                null == d && (d = 1);
                null == c && (c = 10066329);
                a.beginFill(c, d);
                0 != f && a.lineStyle(f, e, h);
                a.drawRect(b.x, b.y, b.width, b.height);
                a.endFill()
            };
            Ea.drawCircle = function(a, b, c, d, e, f, h) {
                null == h && (h = 1);
                null == f && (f = 1);
                null == e && (e = 0);
                null == d && (d = 1);
                null == c && (c = 10066329);
                null == b && (b = 10);
                a.beginFill(c, d);
                0 != f && a.lineStyle(f,
                    e, h);
                a.drawCircle(0, 0, b);
                a.endFill()
            };
            Ea.drawCross = function(a, b, c, d, e) {
                null == e && (e = 1);
                null == d && (d = 1);
                null == c && (c = 0);
                null == b && (b = 10);
                a.lineStyle(d, c, e);
                a.moveTo(0, -b / 2);
                a.lineTo(0, b / 2);
                a.moveTo(-b / 2, 0);
                a.lineTo(b / 2, 0);
                a.endFill()
            };
            Ea.drawPolygon = function(a, b, c, d, e, f, h) {
                null == h && (h = 1);
                null == f && (f = 1);
                null == e && (e = 0);
                null == d && (d = 1);
                null == c && (c = 10066329);
                a.beginFill(c, d);
                a.lineStyle(f, e, h);
                a.moveTo(b[0].x, b[0].y);
                c = 1;
                for (d = b.length; c < d;) e = c++, a.lineTo(b[e].x, b[e].y);
                a.lineTo(b[0].x, b[0].y);
                a.endFill()
            };
            Ea.drawLine = function(a, b, c, d, e, f, h, k) {
                null == k && (k = 1);
                null == h && (h = 1);
                null == f && (f = 0);
                a.lineStyle(h, f, k);
                a.moveTo(b, c);
                a.lineTo(d, e);
                a.endFill()
            };
            Ea.drawRectangle = function(a, b, c, d, e, f, h, k) {
                null == k && (k = 1);
                null == h && (h = 1);
                null == f && (f = 0);
                null == e && (e = 1);
                null == d && (d = 10066329);
                null == c && (c = 10);
                null == b && (b = 10);
                a.beginFill(d, e);
                0 != h && a.lineStyle(h, f, k);
                a.drawRect(-b / 2, -c / 2, b, c);
                a.endFill()
            };
            Ea.drawRoundedRectangle = function(a, b, c, d, e, f, h, k, m, g) {
                null == g && (g = 1);
                null == m && (m = 1);
                null == k && (k = 0);
                null == h && (h = 1);
                null ==
                    f && (f = 10066329);
                null == e && (e = 3);
                null == d && (d = 3);
                null == c && (c = 10);
                null == b && (b = 10);
                a.beginFill(f, h);
                0 != m && a.lineStyle(m, k, g);
                a.drawRoundRect(-b / 2, -c / 2, b, c, d, e);
                a.endFill()
            };
            Ea.drawRectangleFrom0 = function(a, b, c, d, e, f, h, k) {
                null == k && (k = 1);
                null == h && (h = 1);
                null == f && (f = 0);
                null == e && (e = 1);
                null == d && (d = 10066329);
                null == c && (c = 10);
                null == b && (b = 10);
                a.beginFill(d, e);
                0 != h && a.lineStyle(h, f, k);
                a.drawRect(0, 0, b, c);
                a.endFill()
            };
            Ea.drawRoundedRectangleFrom0 = function(a, b, c, d, e, f, h, k, m, g) {
                null == g && (g = 1);
                null == m && (m = 1);
                null == k &&
                    (k = 0);
                null == h && (h = 1);
                null == f && (f = 10066329);
                null == e && (e = 3);
                null == d && (d = 3);
                null == c && (c = 10);
                null == b && (b = 10);
                a.beginFill(f, h);
                0 != m && a.lineStyle(m, k, g);
                a.drawRoundRect(0, 0, b, c, d, e);
                a.endFill()
            };
            Ea.drawTextWithBackgroundToSource = function(a, b, c, d, e, f, h, k, m) {
                null == m && (m = 1);
                null == k && (k = 0);
                null == h && (h = 16777215);
                null == f && (f = 0);
                null == e && (e = !1);
                null == d && (d = 0);
                null == c && (c = 0);
                null == b && (b = 12);
                var g = new S,
                    l = new kf,
                    n = new hd;
                l.size = b;
                l.color = f;
                l.font = "Source Sans Pro";
                l.bold = e;
                n.set_text(a);
                n.set_autoSize(1);
                n.setTextFormat(l);
                g.addChild(n);
                a = n.getBounds(n.parent);
                a.x -= c / 2;
                a.width += c;
                a.y -= d / 2;
                a.height += d;
                n.set_width(a.width);
                n.set_height(a.height);
                n.set_x(-n.get_width() / 2);
                n.set_y(-n.get_height() / 2);
                Ea.drawRectangle(g.get_graphics(), a.width, a.height, h, 1, k, m);
                return V.createAndDrawSource(g, !0, !1, 1, 1)
            };
            Ea.drawBorderOverBitmapData = function(a, b) {
                null == b && (b = -65536);
                a.lock();
                for (var c = a.width, d = a.height, e = 0; e < c;) {
                    var f = e++;
                    a.setPixel32(f, 0, b);
                    a.setPixel32(f, d - 1, b)
                }
                for (e = 0; e < d;) f = e++, a.setPixel32(0, f, b), a.setPixel32(c - 1, f, b);
                a.unlock()
            };
            var Jt = function() {
                this.maxGrassAngle = 4 * Math.PI;
                this.pointCache2 = new W(0, 0);
                this.pointCache1 = new W(0, 0);
                this.minX = this.maxX = this.minY = this.maxY = 0;
                this.tempMatrix = new Ya;
                this.lineShape = new Ke;
                this.fillShape = new Ke;
                this.bitmapData = this.lineBitmapData = this.points = this.pointsDistances = null
            };
            g["bikas.graphics.PolygonTextureData"] = Jt;
            Jt.__name__ = ["bikas", "graphics", "PolygonTextureData"];
            Jt.prototype = {
                bitmapData: null,
                lineBitmapData: null,
                points: null,
                pointsDistances: null,
                fillShape: null,
                lineShape: null,
                tempMatrix: null,
                minX: null,
                maxX: null,
                minY: null,
                maxY: null,
                pointCache1: null,
                pointCache2: null,
                maxGrassAngle: null,
                __class__: Jt
            };
            var Kt = function(a, b) {
                this.distance = a;
                this.index = b
            };
            g["bikas.graphics.DistanceFound"] = Kt;
            Kt.__name__ = ["bikas", "graphics", "DistanceFound"];
            Kt.prototype = {
                distance: null,
                index: null,
                __class__: Kt
            };
            var Ye = function() {};
            g["bikas.graphics.PolygonTextureDraw"] = Ye;
            Ye.__name__ = ["bikas", "graphics", "PolygonTextureDraw"];
            Ye.createPolygonTextureData = function() {
                return new Jt
            };
            Ye.destroy = function(a) {
                a.bitmapData =
                    null;
                a.points = null;
                a.fillShape.get_graphics().clear();
                a.lineShape.get_graphics().clear();
                a.fillShape = null;
                a.lineShape = null
            };
            Ye.resetPointCaches = function(a) {
                a.pointCache1.x = 0;
                a.pointCache1.y = 0;
                a.pointCache2.x = 0;
                a.pointCache2.y = 0
            };
            Ye.setPoints = function(a, b) {
                Ye.resetPointCaches(a);
                a.points = b;
                for (var c = Infinity, d = -Infinity, e = Infinity, f = -Infinity, h = 0; h < b.length;) {
                    var k = b[h];
                    ++h;
                    k.x < c && (c = k.x);
                    k.x > d && (d = k.x);
                    k.y < e && (e = k.y);
                    k.y > f && (f = k.y)
                }
                a.minX = c;
                a.minY = e;
                a.maxX = d;
                a.maxY = f
            };
            Ye.setBitmapData = function(a,
                b) {
                a.bitmapData = b;
                a.fillShape.get_graphics().clear();
                Ye.resetPointCaches(a)
            };
            Ye.setLineBitmapData = function(a, b) {
                a.lineBitmapData = b;
                Ye.resetPointCaches(a);
                if (null == a.lineBitmapData) a.pointsDistances = null;
                else if (null == a.points) w.trace("warning: points are not set", {
                    fileName: "PolygonTextureDraw.hx",
                    lineNumber: 111,
                    className: "bikas.graphics.PolygonTextureDraw",
                    methodName: "setLineBitmapData"
                });
                else {
                    3 > a.points.length && w.trace("warning: too few points", {
                        fileName: "PolygonTextureDraw.hx",
                        lineNumber: 115,
                        className: "bikas.graphics.PolygonTextureDraw",
                        methodName: "setLineBitmapData"
                    });
                    a.pointsDistances = [];
                    b = 0;
                    for (var c = a.points[a.points.length - 1], d, e = 0, f = a.points; e < f.length;) {
                        var h = f[e];
                        ++e;
                        d = h.x - c.x;
                        c = h.y - c.y;
                        b += Math.sqrt(d * d + c * c);
                        a.pointsDistances.push(b);
                        c = h
                    }
                }
            };
            Ye.draw = function(a, b, c, d) {
                var e = 0,
                    f = a.lineBitmapData;
                null != f && (e = f.height);
                var h = new W(b.x, b.y),
                    k = new W(c.x, c.y);
                h.x -= e;
                h.y -= e;
                k.x += e;
                k.y += e;
                h.x = Math.round(h.x);
                h.y = Math.round(h.y);
                k.x = Math.round(k.x);
                k.y = Math.round(k.y);
                if (!H.pointsEqual(h, a.pointCache1) || !H.pointsEqual(k, a.pointCache2)) {
                    e =
                        a.points;
                    b = a.fillShape;
                    c = a.lineShape;
                    var m = a.bitmapData;
                    a.pointCache1.x = h.x;
                    a.pointCache1.y = h.y;
                    a.pointCache2.x = k.x;
                    a.pointCache2.y = k.y;
                    a.fillShape.get_graphics().clear();
                    if (!(3 > e.length || a.minX > k.x || a.minY > k.y || a.maxX < h.x || a.maxY < h.y)) {
                        if (d) {
                            d = Li.clip(e, Math.round(h.y), Math.round(k.x), Math.round(k.y), Math.round(h.x));
                            if (null == d) return;
                            d = [d]
                        } else d = tb.cutPolygonByRectangle(e, h.x, k.x, h.y, k.y, 1, 0, 3, 2);
                        var g = m.width;
                        k = h = 0;
                        if (0 < d.length) {
                            if (0 == d[0].length) return;
                            b.set_x(d[0][0].x - d[0][0].x % g);
                            b.set_y(d[0][0].y -
                                d[0][0].y % g);
                            h = b.get_x();
                            k = b.get_y()
                        }
                        for (g = 0; g < d.length;) {
                            var l = d[g];
                            ++g;
                            b.get_graphics().beginBitmapFill(m, null, !0, !0);
                            b.get_graphics().moveTo(l[0].x - h, l[0].y - k);
                            for (var n = 0; n < l.length;) {
                                var p = l[n];
                                ++n;
                                b.get_graphics().lineTo(p.x - h, p.y - k)
                            }
                            b.get_graphics().endFill()
                        }
                        if (null != f) {
                            c.get_graphics().clear();
                            c.get_graphics().lineStyle(f.height, 0, 1, !1, null, 0, 1);
                            b = f.height / 2;
                            m = f.height / 16;
                            n = f.width;
                            p = f.height;
                            h = f.width;
                            k = new Kt(0, 0);
                            l = g = 0;
                            0 < d.length && (c.set_x(d[0][0].x - d[0][0].x % n), c.set_y(d[0][0].y - d[0][0].y %
                                p), g = c.get_x(), l = c.get_y());
                            n = a.tempMatrix;
                            p = a.maxGrassAngle;
                            for (var x = 0; x < d.length;) {
                                var z = d[x];
                                ++x;
                                var u = z[z.length - 1];
                                k.index = 0;
                                for (var w = k.distance = 0; w < z.length;) {
                                    var q = z[w];
                                    ++w;
                                    if (Ye.findAndWriteDistance(a.pointsDistances, e, k, u, q)) {
                                        var L = Math.atan2(q.y - u.y, q.x - u.x);
                                        Math.abs(L) > p || (n.identity(), n.translate(-k.distance % h, 0), n.translate(0, -b), n.rotate(L), n.translate(u.x - g, u.y - l), c.get_graphics().lineBitmapStyle(f, n, !0, !0), c.get_graphics().moveTo(u.x - g, u.y - l), u = q.x + Math.cos(L) * m - g, L = q.y + Math.sin(L) *
                                            m - l, c.get_graphics().lineTo(u, L))
                                    }
                                    u = q
                                }
                            }
                        }
                    }
                }
            };
            Ye.findAndWriteDistance = function(a, b, c, d, e) {
                var f = c.index;
                var h = 0 == f ? b.length - 1 : f - 1;
                for (var k, m = b.length, g = 0; g < m;) {
                    g++;
                    f == m && (f = 0);
                    var l = b[f];
                    var n = b[h];
                    if (H.isPointBetween(n, l, d))
                        if (H.isPointBetween(n, l, e))
                            if (k = H.distanceBetweenLineAndPoint(n, l, d), .001 < k) h = f, ++f;
                            else if (k = H.distanceBetweenLineAndPoint(n, l, e), .001 < k) h = f, ++f;
                    else return b = d.x - n.x, d = d.y - n.y, c.index = h, c.distance = a[h] + Math.sqrt(b * b + d * d), !0;
                    else h = f, ++f;
                    else h = f, ++f
                }
                return !1
            };
            var Zn = function() {};
            g["bikas.graphics.SpriteDo"] = Zn;
            Zn.__name__ = ["bikas", "graphics", "SpriteDo"];
            Zn.createCircle = function(a, b, c, d, e, f) {
                null == f && (f = 1);
                null == e && (e = 1);
                null == d && (d = 0);
                null == c && (c = 1);
                null == b && (b = 10066329);
                var h = new S;
                Ea.drawCircle(h.get_graphics(), a, b, c, d, e, f);
                return h
            };
            Zn.createRectangle = function(a, b, c, d, e, f, h) {
                null == h && (h = 1);
                null == f && (f = 1);
                null == e && (e = 0);
                null == d && (d = 1);
                null == c && (c = 10066329);
                var k = new S;
                Ea.drawRectangle(k.get_graphics(), a, b, c, d, e, f, h);
                return k
            };
            var oq = function() {};
            g["bikas.nape.NapeFunc"] =
                oq;
            oq.__name__ = ["bikas", "nape", "NapeFunc"];
            oq.createBodyFromPolygon = function(a, b, c, d, e, f, h) {
                var k = new Ag;
                k.set_type(b);
                a = oq.decomposePolygonToConvexes(a);
                if (null == a) return w.trace("warning: convexes == null", {
                    fileName: "NapeFunc.hx",
                    lineNumber: 102,
                    className: "bikas.nape.NapeFunc",
                    methodName: "createBodyFromPolygon"
                }), null;
                for (b = 0; b < a.length;) {
                    var m = a[b];
                    ++b;
                    var g = k.get_shapes();
                    3 > m.length && w.trace("warning: polygon has less than 3 points", {
                        fileName: "NapeFunc.hx",
                        lineNumber: 108,
                        className: "bikas.nape.NapeFunc",
                        methodName: "createBodyFromPolygon"
                    });
                    for (var l = [], n = 0; n < m.length;) {
                        var p = m[n];
                        ++n;
                        l.push(new Wa(p.x, p.y))
                    }
                    g.add(new ad(l));
                    for (m = 0; m < l.length;) g = l[m], ++m, g.dispose()
                }
                0 == k.get_shapes().get_length() ? (k.set_allowMovement(!1), k.set_allowRotation(!1)) : (k.get_allowMovement() || k.set_allowMovement(!0), k.get_allowRotation() || k.set_allowRotation(!0));
                if (1 != e || 1 != f)
                    for (a = k.get_shapes().iterator(); a.hasNext();) a.next().scale(e, f);
                e = .017453292519943 * h;
                k.setShapeFilters(c);
                k.setShapeMaterials(d);
                k.get_shapes().empty() ||
                    k.align();
                c = new Wa(k.get_position().get_x(), k.get_position().get_y());
                c = new Wa(c.get_x(), c.get_y());
                c.rotate(e);
                k.get_position().set_x(c.get_x());
                k.get_position().set_y(c.get_y());
                k.set_rotation(e);
                return k
            };
            oq.decomposePolygonToConvexes = function(a) {
                if (3 > a.length) return w.trace("warning: polygon has less than 3 points", {
                    fileName: "NapeFunc.hx",
                    lineNumber: 177,
                    className: "bikas.nape.NapeFunc",
                    methodName: "decomposePolygonToConvexes"
                }), null;
                for (var b = new Dh, c = 0; c < a.length;) {
                    var d = a[c];
                    ++c;
                    b.push(new Wa(d.x,
                        d.y))
                }
                if (!b.isSimple()) {
                    b.clear();
                    c = 0;
                    for (d = a.length; c < d;) {
                        for (var e = c++, f = !1, h = e + 1, k = a.length; h < k;) {
                            var m = h++;
                            if (H.pointsEqual(a[e], a[m])) {
                                w.trace("warning: found point with same position: " + E.string(a[e]), {
                                    fileName: "NapeFunc.hx",
                                    lineNumber: 191,
                                    className: "bikas.nape.NapeFunc",
                                    methodName: "decomposePolygonToConvexes"
                                });
                                f = !0;
                                break
                            }
                        }
                        f || b.push(new Wa(a[e].x, a[e].y))
                    }
                    if (!b.isSimple()) return w.trace("error: can't have self-intersecting polygon", {
                        fileName: "NapeFunc.hx",
                        lineNumber: 202,
                        className: "bikas.nape.NapeFunc",
                        methodName: "decomposePolygonToConvexes"
                    }), null
                }
                a = b.convexDecomposition();
                a.get_length();
                c = [];
                for (d = a.iterator(); d.hasNext();)
                    for (e = d.next(), c.push([]), e = e.iterator(); e.hasNext();) f = e.next(), c[c.length - 1].push(new W(f.get_x(), f.get_y()));
                for (; !a.empty();) d = a.pop(), d.dispose();
                b.dispose();
                return c
            };
            var Af = function() {};
            g["bikas.poki.PokiWrapperDo"] = Af;
            Af.__name__ = ["bikas", "poki", "PokiWrapperDo"];
            Af.pokiSitelock = function() {};
            Af.init = function() {
                if ("undefined" === typeof PokiSDK) return w.trace("PokiSDK is undefined", {
                    fileName: "PokiWrapperDo.hx",
                    lineNumber: 66,
                    className: "bikas.poki.PokiWrapperDo",
                    methodName: "init"
                }), !1;
                Af.PokiSDK = PokiSDK;
                PokiSDK.init().then(function() {
                    console.log("PokiSDK initialized")
                }).catch(function() {
                    console.log("Adblock enabled")
                });
                return !0
            };
            Af.setCommercialBreak = function(a) {
                a.config.type == db.HTML5Release && -1 != a.config.release.sitelock_types.indexOf(qe.Poki) && (a.poki_set_gameplay_on && (a.poki_set_gameplay_on = !1, Af.PokiSDK.gameplayStop()), a.config.game_is_paused_by_ad = !0, Af.PokiSDK.commercialBreak().then(function() {
                    a.config.game_is_paused_by_ad = !1
                }))
            };
            var tb = function() {};
            g["bikas.polygon.PolygonCutterByRectangle"] = tb;
            tb.__name__ = ["bikas", "polygon", "PolygonCutterByRectangle"];
            tb.intersectPointX = function(a, b, c) {
                return new W(a.x + (c - a.y) / (b.y - a.y) * (b.x - a.x), c)
            };
            tb.intersectPointY = function(a, b, c) {
                return new W(c, a.y + (c - a.x) / (b.x - a.x) * (b.y - a.y))
            };
            tb.copyPoint = function(a) {
                return new W(a.x, a.y)
            };
            tb.transferPoints = function(a, b) {
                for (var c = 0, d = a.length; c < d;) {
                    var e = c++;
                    b.push(a[e])
                }
            };
            tb.transferVectorPoints = function(a, b) {
                for (var c = 0, d = a.length; c < d;) {
                    var e =
                        c++;
                    b.push(a[e])
                }
            };
            tb.cutPolygonsByLeftX = function(a, b) {
                for (var c = [], d, e = 0, f = a.length; e < f;) d = e++, d = tb.cutByLeftX(a[d], b), null != d && tb.transferVectorPoints(d, c);
                return c
            };
            tb.cutPolygonsByRightX = function(a, b) {
                for (var c = [], d, e = 0, f = a.length; e < f;) d = e++, d = tb.cutByRightX(a[d], b), null != d && tb.transferVectorPoints(d, c);
                return c
            };
            tb.cutPolygonsByTopY = function(a, b) {
                for (var c = [], d, e = 0, f = a.length; e < f;) d = e++, d = tb.cutByTopY(a[d], b), null != d && tb.transferVectorPoints(d, c);
                return c
            };
            tb.cutPolygonsByBottomY = function(a,
                b) {
                for (var c = [], d, e = 0, f = a.length; e < f;) d = e++, d = tb.cutByBottomY(a[d], b), null != d && tb.transferVectorPoints(d, c);
                return c
            };
            tb.cutByLeftX = function(a, b) {
                if (null == a || 3 > a.length) return null;
                var c = [],
                    d = a.length;
                var e = null;
                for (var f = 0, h, k, m = 0, g = d; m < g;) {
                    var l = m++;
                    h = a[l];
                    k = l < d - 1 ? a[l + 1] : a[0];
                    if (h.x <= b && k.x > b) {
                        e = [];
                        e.push(tb.intersectPointY(h, k, b));
                        c.push(e);
                        f = l;
                        break
                    }
                }
                if (null == e) {
                    if (a[0].x > b) {
                        e = [];
                        for (l = 0; l < d;) b = l++, e.push(tb.copyPoint(a[b]));
                        c.push(e);
                        return c
                    }
                    return null
                }
                l = f + 1;
                for (l >= d && (l = 0); l != f;) h = a[l], k =
                    l < d - 1 ? a[l + 1] : a[0], h.x <= b && k.x > b ? (e = [], e.push(tb.intersectPointY(h, k, b)), c.push(e)) : h.x > b && k.x > b ? e.push(h) : k.x <= b && h.x > b && (e.push(h), e.push(tb.intersectPointY(h, k, b))), ++l, l >= d && (l = 0);
                d = c.length;
                if (1 == d) return c;
                for (l = 0; l < d;) {
                    a = c[l];
                    e = a[0].y;
                    f = a[a.length - 1].y;
                    if (e < f)
                        for (m = l - 1, 0 > m && (m = d - 1); m != l;) {
                            b = c[m];
                            h = b[0].y;
                            k = b[b.length - 1].y;
                            if (h >= k) {
                                if (e <= k && f >= h) {
                                    tb.transferPoints(a, b);
                                    c.splice(l, 1);
                                    --l;
                                    --d;
                                    break
                                }
                            } else if (e <= k && f >= h) break;
                            --m;
                            0 > m && (m = d - 1)
                        } else
                            for (m = l - 1, 0 > m && (m = d - 1); m != l;) {
                                b = c[m];
                                h = b[0].y;
                                k =
                                    b[b.length - 1].y;
                                if (h < k) {
                                    if (f > h && e < k) {
                                        tb.transferPoints(a, b);
                                        c.splice(l, 1);
                                        --l;
                                        --d;
                                        break
                                    }
                                } else if (f > h && e < k) break;
                                --m;
                                0 > m && (m = d - 1)
                            }++l
                }
                return c
            };
            tb.cutByRightX = function(a, b) {
                if (null == a || 3 > a.length) return null;
                var c = [],
                    d = a.length;
                var e = null;
                for (var f = 0, h, k, m = 0, g = d; m < g;) {
                    var l = m++;
                    h = a[l];
                    k = l < d - 1 ? a[l + 1] : a[0];
                    if (h.x >= b && k.x < b) {
                        e = [];
                        e.push(tb.intersectPointY(h, k, b));
                        c.push(e);
                        f = l;
                        break
                    }
                }
                if (null == e) {
                    if (a[0].x < b) {
                        e = [];
                        for (l = 0; l < d;) b = l++, e.push(tb.copyPoint(a[b]));
                        c.push(e);
                        return c
                    }
                    return null
                }
                l = f + 1;
                for (l >=
                    d && (l = 0); l != f;) h = a[l], k = l < d - 1 ? a[l + 1] : a[0], h.x >= b && k.x < b ? (e = [], e.push(tb.intersectPointY(h, k, b)), c.push(e)) : h.x < b && k.x < b ? e.push(h) : k.x >= b && h.x < b && (e.push(h), e.push(tb.intersectPointY(h, k, b))), ++l, l >= d && (l = 0);
                d = c.length;
                if (1 == d) return c;
                for (l = 0; l < d;) {
                    a = c[l];
                    e = a[0].y;
                    f = a[a.length - 1].y;
                    if (e <= f)
                        for (m = l - 1, 0 > m && (m = d - 1); m != l;) {
                            b = c[m];
                            h = b[0].y;
                            k = b[b.length - 1].y;
                            if (h > k) {
                                if (e >= k && f <= h) {
                                    tb.transferPoints(a, b);
                                    c.splice(l, 1);
                                    --l;
                                    --d;
                                    break
                                }
                            } else if (e >= k && f <= h) break;
                            --m;
                            0 > m && (m = d - 1)
                        } else if (e > f)
                            for (m = l - 1, 0 > m && (m =
                                    d - 1); m != l;) {
                                b = c[m];
                                h = b[0].y;
                                k = b[b.length - 1].y;
                                if (h <= k) {
                                    if (f <= h && e >= k) {
                                        tb.transferPoints(a, b);
                                        c.splice(l, 1);
                                        --l;
                                        --d;
                                        break
                                    }
                                } else if (f <= h && e >= k) break;
                                --m;
                                0 > m && (m = d - 1)
                            }++l
                }
                return c
            };
            tb.cutByBottomY = function(a, b) {
                if (null == a || 3 > a.length) return null;
                var c = [],
                    d = a.length;
                var e = null;
                for (var f = 0, h, k, m = 0, g = d; m < g;) {
                    var l = m++;
                    h = a[l];
                    k = l < d - 1 ? a[l + 1] : a[0];
                    if (h.y >= b && k.y < b) {
                        e = [];
                        e.push(tb.intersectPointX(h, k, b));
                        c.push(e);
                        f = l;
                        break
                    }
                }
                if (null == e) {
                    if (a[0].y < b) {
                        e = [];
                        for (l = 0; l < d;) b = l++, e.push(tb.copyPoint(a[b]));
                        c.push(e);
                        return c
                    }
                    return null
                }
                l = f + 1;
                for (l >= d && (l = 0); l != f;) h = a[l], k = l < d - 1 ? a[l + 1] : a[0], h.y >= b && k.y < b ? (e = [], e.push(tb.intersectPointX(h, k, b)), c.push(e)) : h.y < b && k.y < b ? e.push(h) : k.y >= b && h.y < b && (e.push(h), e.push(tb.intersectPointX(h, k, b))), ++l, l >= d && (l = 0);
                d = c.length;
                if (1 == d) return c;
                for (l = 0; l < d;) {
                    a = c[l];
                    e = a[0].x;
                    f = a[a.length - 1].x;
                    if (e < f)
                        for (m = l - 1, 0 > m && (m = d - 1); m != l;) {
                            b = c[m];
                            h = b[0].x;
                            k = b[b.length - 1].x;
                            if (h >= k) {
                                if (e <= k && f >= h) {
                                    tb.transferPoints(a, b);
                                    c.splice(l, 1);
                                    --l;
                                    --d;
                                    break
                                }
                            } else if (e <= k && f >= h) break;
                            --m;
                            0 > m && (m =
                                d - 1)
                        } else
                            for (m = l - 1, 0 > m && (m = d - 1); m != l;) {
                                b = c[m];
                                h = b[0].x;
                                k = b[b.length - 1].x;
                                if (h < k) {
                                    if (f >= h && e <= k) {
                                        tb.transferPoints(a, b);
                                        c.splice(l, 1);
                                        --l;
                                        --d;
                                        break
                                    }
                                } else if (f >= h && e <= k) break;
                                --m;
                                0 > m && (m = d - 1)
                            }++l
                }
                return c
            };
            tb.cutByTopY = function(a, b) {
                if (null == a || 3 > a.length) return null;
                var c = [],
                    d = a.length;
                var e = null;
                for (var f = 0, h, k, m = 0, g = d; m < g;) {
                    var l = m++;
                    h = a[l];
                    k = l < d - 1 ? a[l + 1] : a[0];
                    if (h.y <= b && k.y > b) {
                        e = [];
                        e.push(tb.intersectPointX(h, k, b));
                        c.push(e);
                        f = l;
                        break
                    }
                }
                if (null == e) {
                    if (a[0].y > b) {
                        e = [];
                        for (l = 0; l < d;) b = l++, e.push(tb.copyPoint(a[b]));
                        c.push(e);
                        return c
                    }
                    return null
                }
                l = f + 1;
                for (l >= d && (l = 0); l != f;) h = a[l], k = l < d - 1 ? a[l + 1] : a[0], h.y <= b && k.y > b ? (e = [], e.push(tb.intersectPointX(h, k, b)), c.push(e)) : h.y > b && k.y > b ? e.push(h) : k.y <= b && h.y > b && (e.push(h), e.push(tb.intersectPointX(h, k, b))), ++l, l >= d && (l = 0);
                d = c.length;
                if (1 == d) return c;
                for (l = 0; l < d;) {
                    a = c[l];
                    e = a[0].x;
                    f = a[a.length - 1].x;
                    if (e > f)
                        for (m = l - 1, 0 > m && (m = d - 1); m != l;) {
                            b = c[m];
                            h = b[0].x;
                            k = b[b.length - 1].x;
                            if (h <= k) {
                                if (e >= k && f < h) {
                                    tb.transferPoints(a, b);
                                    c.splice(l, 1);
                                    --l;
                                    --d;
                                    break
                                }
                            } else if (e >= k && f < h) break;
                            --m;
                            0 > m && (m = d - 1)
                        } else
                            for (m = l - 1, 0 > m && (m = d - 1); m != l;) {
                                b = c[m];
                                h = b[0].x;
                                k = b[b.length - 1].x;
                                if (h > k) {
                                    if (f <= h && e >= k) {
                                        tb.transferPoints(a, b);
                                        c.splice(l, 1);
                                        --l;
                                        --d;
                                        break
                                    }
                                } else if (f <= h && e >= k) break;
                                --m;
                                0 > m && (m = d - 1)
                            }++l
                }
                return c
            };
            tb.cutPolygonByRectangle = function(a, b, c, d, e, f, h, k, m) {
                null == m && (m = 3);
                null == k && (k = 2);
                null == h && (h = 1);
                null == f && (f = 0);
                f = [f, h, k, m];
                h = [];
                h.push(a);
                for (a = 0; 4 > a;) switch (k = a++, f[k]) {
                    case 0:
                        h = tb.cutPolygonsByLeftX(h, b);
                        break;
                    case 1:
                        h = tb.cutPolygonsByRightX(h, c);
                        break;
                    case 2:
                        h = tb.cutPolygonsByTopY(h,
                            d);
                        break;
                    case 3:
                        h = tb.cutPolygonsByBottomY(h, e);
                        break;
                    default:
                        w.trace("warning: unknown cut side", {
                            fileName: "PolygonCutterByRectangle.hx",
                            lineNumber: 864,
                            className: "bikas.polygon.PolygonCutterByRectangle",
                            methodName: "cutPolygonByRectangle"
                        })
                }
                return h
            };
            var Ys = function() {};
            g["bikas.polygon.PolygonWithBounds"] = Ys;
            Ys.__name__ = ["bikas", "polygon", "PolygonWithBounds"];
            Ys.prototype = {
                points: null,
                bounds: null,
                __class__: Ys
            };
            var Ub = function() {};
            g["bikas.polygon.PolygonFunc"] = Ub;
            Ub.__name__ = ["bikas", "polygon", "PolygonFunc"];
            Ub.getPolygonBounds = function(a) {
                for (var b = Infinity, c = -Infinity, d = Infinity, e = -Infinity, f = 0; f < a.length;) {
                    var h = a[f];
                    ++f;
                    h.x < b && (b = h.x);
                    h.x > c && (c = h.x);
                    h.y < d && (d = h.y);
                    h.y > e && (e = h.y)
                }
                return new mj(b, d, c, e)
            };
            Ub.copyPolygon = function(a) {
                for (var b = [], c = 0; c < a.length;) {
                    var d = a[c];
                    ++c;
                    b.push(new W(d.x, d.y))
                }
                return b
            };
            Ub.copyPolygonWithOffset = function(a, b) {
                for (var c = [], d = 0; d < a.length;) {
                    var e = a[d];
                    ++d;
                    c.push(new W(e.x + b.x, e.y + b.y))
                }
                return c
            };
            Ub.copyPolygonWithTransform = function(a, b, c) {
                for (var d = [], e = 0; e < a.length;) {
                    var f =
                        a[e];
                    ++e;
                    f = new W(f.x, f.y);
                    xb.applyTransformToPoint(f, b, c);
                    d.push(f)
                }
                return d
            };
            Ub.getPolygonArea = function(a) {
                for (var b = 0, c = 0, d = a.length; c < d;) {
                    var e = c++,
                        f = (e + 1) % a.length;
                    b += a[e].x * a[f].y;
                    b -= a[f].x * a[e].y
                }
                return b / 2
            };
            Ub.isPolygonClockwise = function(a) {
                return 0 < Ub.getPolygonArea(a)
            };
            Ub.getBoundsFromSeveralPolygons = function(a) {
                for (var b = Infinity, c = -Infinity, d = Infinity, e = -Infinity, f = 0; f < a.length;) {
                    var h = a[f];
                    ++f;
                    for (var k = 0; k < h.length;) {
                        var m = h[k];
                        ++k;
                        m.x < b && (b = m.x);
                        m.x > c && (c = m.x);
                        m.y < d && (d = m.y);
                        m.y > e &&
                            (e = m.y)
                    }
                }
                return new mj(b, d, c, e)
            };
            Ub.pointInPolygon = function(a, b) {
                if (3 > b.length) return !1;
                var c = a.x;
                a = a.y;
                for (var d = b[b.length - 1], e = !1, f = 0; f < b.length;) {
                    var h = b[f];
                    ++f;
                    (h.y < a && d.y >= a || d.y < a && h.y >= a) && (h.x <= c || d.x <= c) && h.x + (a - h.y) / (d.y - h.y) * (d.x - h.x) < c && (e = !e);
                    d = h
                }
                return e
            };
            Ub.getPolygonAndHorizontalLineIntersectionX = function(a, b, c) {
                for (var d = null, e = 0, f = a.length; e < f;) {
                    var h = e++;
                    h = H.getLineSegmentAndInfiniteHorizontalLineIntersectionX(0 == h ? a[a.length - 1] : a[h - 1], a[h], b, c);
                    null != h && (null == d ? d = h : c && h < d ? d =
                        h : !c && h > d && (d = h))
                }
                return d
            };
            Ub.getClosestPointToSpecifiedBound = function(a, b, c) {
                var d = Ub.getPolygonBounds(a),
                    e = new W;
                e.y = b ? d.min_y : d.max_y;
                e.x = c ? d.min_x : d.max_x;
                b = Infinity;
                c = null;
                for (d = 0; d < a.length;) {
                    var f = a[d];
                    ++d;
                    var h = H.distanceBetweenPoints(f, e);
                    null == c ? (b = h, c = f) : h < b && (b = h, c = f)
                }
                return c
            };
            Ub.findClosestPointInPolygon = function(a, b) {
                for (var c = -1, d = null, e = 0; e < a.length;) {
                    var f = a[e];
                    ++e;
                    var h = H.distanceBetweenPoints(f, b); - 1 == c ? (c = h, d = f) : h < c && (c = h, d = f)
                }
                return d
            };
            Ub.mergeSeveralPolygonsAtPoints = function(a,
                b) {
                null == b && (b = 1);
                if (0 == a.length) return null;
                if (1 == a.length) return Ub.copyPolygon(a[0]);
                for (var c = a.slice(), d = c.shift(), e = a.length * a.length;;) {
                    if (0 > e--) {
                        w.trace("warning: algorithm broke", {
                            fileName: "PolygonFunc.hx",
                            lineNumber: 287,
                            className: "bikas.polygon.PolygonFunc",
                            methodName: "mergeSeveralPolygonsAtPoints"
                        });
                        break
                    }
                    for (var f = !1, h = 0; h < c.length;) {
                        var k = c[h];
                        ++h;
                        var m = Ub.merge2PolygonsAtPoints(d, k, b);
                        null == m && (m = Ub.merge2Polygons(d, k));
                        if (null != m && m.length > d.length) {
                            d = m;
                            la.remove(c, k);
                            f = !0;
                            break
                        }
                    }
                    if (f &&
                        0 == c.length) break;
                    else if (!(f && 0 < c.length))
                        if (f || 1 != c.length) !f && 2 <= c.length && (d = c.shift());
                        else break
                }
                b = d;
                for (c = 0; c < a.length;) d = a[c], ++c, d.length > b.length && (b = d);
                return Ub.copyPolygon(b)
            };
            Ub.merge2PolygonsAtPoints = function(a, b, c) {
                null == c && (c = 1);
                for (var d = -1, e = 0, f = b.length; e < f;) {
                    var h = e++;
                    if (!Ub.pointInPolygon(b[h], a)) {
                        d = h;
                        break
                    }
                }
                if (-1 == d) return H.copyPoints(b);
                d = -1;
                e = 0;
                for (f = a.length; e < f;)
                    if (h = e++, !Ub.pointInPolygon(a[h], b)) {
                        var k = Ub.findClosestPointInPolygon(b, a[h]);
                        if (H.distanceBetweenPoints(a[h],
                                k) > c) {
                            d = h;
                            break
                        }
                    } if (-1 == d) return H.copyPoints(b);
                e = [];
                f = a;
                h = b;
                k = d;
                var m = f[k];
                b = (a.length + 1) * (b.length + 1);
                for (var g = !1;;) {
                    if (0 == b--) return w.trace("warning: merge2PolygonsAtPoints algorithm broke", {
                        fileName: "PolygonFunc.hx",
                        lineNumber: 390,
                        className: "bikas.polygon.PolygonFunc",
                        methodName: "merge2PolygonsAtPoints"
                    }), null;
                    e.push(m);
                    for (var l = -1, n = 0, p = h.length; n < p;) {
                        var x = n++;
                        if (H.distanceBetweenPoints(m, h[x]) <= c) {
                            g = !0;
                            l = x;
                            break
                        }
                    } - 1 != l && (k = f, f = h, h = k, k = l);
                    ++k;
                    k >= f.length && (k = 0);
                    m = f[k];
                    if (m == a[d]) break
                }
                return g ?
                    3 > e.length ? null : e : null
            };
            Ub.merge2Polygons = function(a, b) {
                for (var c = -1, d = 0, e = a.length; d < e;) {
                    var f = d++;
                    if (!Ub.pointInPolygon(a[f], b)) {
                        c = f;
                        break
                    }
                }
                if (-1 == c) return H.copyPoints(b);
                d = [];
                e = a;
                f = b;
                var h = c,
                    k = e[h];
                b = (a.length + 1) * (b.length + 1);
                for (var m = !1;;) {
                    if (0 == b--) return w.trace("warning: merge2Polygons algorithm broke", {
                        fileName: "PolygonFunc.hx",
                        lineNumber: 475,
                        className: "bikas.polygon.PolygonFunc",
                        methodName: "merge2Polygons"
                    }), null;
                    d.push(k);
                    var g = h + 1 == e.length ? e[0] : e[h + 1];
                    if (g == a[c]) break;
                    for (var l = null,
                            n = 0, p = f.length; n < p;) {
                        var x = n++,
                            u = f[x],
                            z = H.getLineSegmentIntersection(k, g, u, f[x + 1 == f.length ? 0 : x + 1]);
                        null != z && !H.pointsEqual(k, z) && (m = !0, u = H.distanceBetweenPoints(u, z), null == l || l.distance > u) && (l = new It, l.intersection = z, l.index = x, l.distance = u)
                    }
                    null != l ? (h = e, e = f, f = h, k = l.intersection, h = l.index) : (++h, h >= e.length && (h = 0), k = e[h])
                }
                return m ? 3 > d.length ? null : d : null
            };
            var Lt = function() {
                this.topEdge = this.rightEdge = this.bottomEdge = this.leftEdge = 0
            };
            g["bikas.polygon.Edges"] = Lt;
            Lt.__name__ = ["bikas", "polygon", "Edges"];
            Lt.prototype = {
                topEdge: null,
                rightEdge: null,
                bottomEdge: null,
                leftEdge: null,
                __class__: Lt
            };
            var Li = function() {};
            g["bikas.polygon.SutherlandHodgmanPolygonCutter"] = Li;
            Li.__name__ = ["bikas", "polygon", "SutherlandHodgmanPolygonCutter"];
            Li.clip = function(a, b, c, d, e) {
                var f = new Lt;
                f.topEdge = b;
                f.rightEdge = c;
                f.bottomEdge = d;
                f.leftEdge = e;
                if (3 > a.length) return w.trace("warning: polygon.length < 3", {
                        fileName: "SutherlandHodgmanPolygonCutter.hx",
                        lineNumber: 29,
                        className: "bikas.polygon.SutherlandHodgmanPolygonCutter",
                        methodName: "clip"
                    }),
                    null;
                if (a[0].x == a[a.length - 1].x && a[0].y == a[a.length - 1].y) return w.trace("warning: is closed polygon", {
                    fileName: "SutherlandHodgmanPolygonCutter.hx",
                    lineNumber: 33,
                    className: "bikas.polygon.SutherlandHodgmanPolygonCutter",
                    methodName: "clip"
                }), null;
                b = a.slice();
                b.push(a[0]);
                for (c = 0; 4 > c;) {
                    d = c++;
                    a = [];
                    var h = b.length - 1;
                    e = 0;
                    for (var k = h; e < k;) {
                        var m = e++;
                        h = b[m];
                        m = b[m + 1];
                        Li.isInsideClipWindow(f, h, d) ? Li.isInsideClipWindow(f, m, d) ? a.push(new W(m.x, m.y)) : a.push(Li.intersectionPoint(f, d, h, m)) : Li.isInsideClipWindow(f,
                            m, d) && (a.push(Li.intersectionPoint(f, d, h, m)), a.push(new W(m.x, m.y)))
                    }
                    if (1 < a.length) a[0].x == a[a.length - 1].x && a[0].y == a[a.length - 1].y || a.push(a[0]), b = a;
                    else return null
                }
                if (4 > b.length) return null;
                b.pop();
                return b
            };
            Li.isInsideClipWindow = function(a, b, c) {
                switch (c) {
                    case 0:
                        return b.x <= a.rightEdge;
                    case 1:
                        return b.x >= a.leftEdge;
                    case 2:
                        return b.y <= a.bottomEdge;
                    case 3:
                        return b.y >= a.topEdge;
                    default:
                        return w.trace("warning: something went wrong with SutherlandHodgmanPolygonCutter", {
                            fileName: "SutherlandHodgmanPolygonCutter.hx",
                            lineNumber: 107,
                            className: "bikas.polygon.SutherlandHodgmanPolygonCutter",
                            methodName: "isInsideClipWindow"
                        }), !1
                }
            };
            Li.intersectionPoint = function(a, b, c, d) {
                switch (b) {
                    case 0:
                        return W.create(a.rightEdge, c.y + (a.rightEdge - c.x) * (d.y - c.y) / (d.x - c.x));
                    case 1:
                        return W.create(a.leftEdge, c.y + (a.leftEdge - c.x) * (d.y - c.y) / (d.x - c.x));
                    case 2:
                        return W.create(c.x + (a.bottomEdge - c.y) * (d.x - c.x) / (d.y - c.y), a.bottomEdge);
                    case 3:
                        return W.create(c.x + (a.topEdge - c.y) * (d.x - c.x) / (d.y - c.y), a.topEdge);
                    default:
                        return null
                }
            };
            var aq = function() {};
            g["bikas.serialization.ByteCursor"] = aq;
            aq.__name__ = ["bikas", "serialization", "ByteCursor"];
            aq.prototype = {
                alloc_size: null,
                bytes: null,
                pos: null,
                __class__: aq
            };
            var fl = function() {};
            g["bikas.serialization.EnumValueCache"] = fl;
            fl.__name__ = ["bikas", "serialization", "EnumValueCache"];
            fl.prototype = {
                name: null,
                value: null,
                __class__: fl
            };
            var bq = function() {};
            g["bikas.serialization.EnumTypeCache"] = bq;
            bq.__name__ = ["bikas", "serialization", "EnumTypeCache"];
            bq.prototype = {
                name: null,
                type: null,
                values: null,
                __class__: bq
            };
            var $s =
                function() {
                    this.type_table = null
                };
            g["bikas.serialization.SerialData"] = $s;
            $s.__name__ = ["bikas", "serialization", "SerialData"];
            $s.prototype = {
                classes: null,
                enum_cache: null,
                type_table: null,
                __class__: $s
            };
            var ct = function() {
                this.serial_field = null
            };
            g["bikas.serialization.UnserialField"] = ct;
            ct.__name__ = ["bikas", "serialization", "UnserialField"];
            ct.prototype = {
                field_name: null,
                value_type_flags: null,
                serial_field: null,
                __class__: ct
            };
            var bt = function() {
                this.fields = this.serial_class = null
            };
            g["bikas.serialization.UnserialClass"] =
                bt;
            bt.__name__ = ["bikas", "serialization", "UnserialClass"];
            bt.prototype = {
                full_class_name: null,
                fields: null,
                serial_class: null,
                __class__: bt
            };
            var at = function() {};
            g["bikas.serialization.UnserialData"] = at;
            at.__name__ = ["bikas", "serialization", "UnserialData"];
            at.prototype = {
                classes: null,
                enum_cache: null,
                __class__: at
            };
            var rd = g["bikas.sounds.SoundPlayType"] = {
                __ename__: ["bikas", "sounds", "SoundPlayType"],
                __constructs__: ["PlayFirst", "PlayLast", "AlwaysPlayOnce"]
            };
            rd.PlayFirst = ["PlayFirst", 0];
            rd.PlayFirst.toString =
                l;
            rd.PlayFirst.__enum__ = rd;
            rd.PlayLast = ["PlayLast", 1];
            rd.PlayLast.toString = l;
            rd.PlayLast.__enum__ = rd;
            rd.AlwaysPlayOnce = ["AlwaysPlayOnce", 2];
            rd.AlwaysPlayOnce.toString = l;
            rd.AlwaysPlayOnce.__enum__ = rd;
            var Mt = function() {
                this.sound_complete = null;
                this.loop_count = 0;
                this.muted = !1;
                this.panning = 0;
                this.volume = 1;
                this.initial_jump_ms = this.start_time = 0;
                this.loops = 1
            };
            g["bikas.sounds.SoundPack"] = Mt;
            Mt.__name__ = ["bikas", "sounds", "SoundPack"];
            Mt.prototype = {
                sound_asset: null,
                sound: null,
                channel: null,
                sound_play_type: null,
                loops: null,
                initial_jump_ms: null,
                start_time: null,
                volume: null,
                panning: null,
                muted: null,
                loop_count: null,
                sound_complete: null,
                __class__: Mt
            };
            var sd = g["bikas.sounds.SoundAssetType"] = {
                __ename__: ["bikas", "sounds", "SoundAssetType"],
                __constructs__: ["SoundAssetSound", "SoundAssetMusic"]
            };
            sd.SoundAssetSound = ["SoundAssetSound", 0];
            sd.SoundAssetSound.toString = l;
            sd.SoundAssetSound.__enum__ = sd;
            sd.SoundAssetMusic = ["SoundAssetMusic", 1];
            sd.SoundAssetMusic.toString = l;
            sd.SoundAssetMusic.__enum__ = sd;
            var Nt = function() {
                this.volume =
                    1;
                this.type = sd.SoundAssetSound;
                this.file = ""
            };
            g["bikas.sounds.SoundAsset"] = Nt;
            Nt.__name__ = ["bikas", "sounds", "SoundAsset"];
            Nt.prototype = {
                file: null,
                type: null,
                sound_class: null,
                volume: null,
                __class__: Nt
            };
            var va = function() {};
            g["bikas.sounds.SoundsDo"] = va;
            va.__name__ = ["bikas", "sounds", "SoundsDo"];
            va.create = function(a, b, c, d, e, f) {
                null == f && (f = !1);
                null == e && (e = 0);
                null == d && (d = !1);
                var h = new Mt;
                h.sound_play_type = c;
                h.sound_asset = b;
                c = "ogg";
                if (a.iOS || a.macOS) c = "m4a";
                a.browser == hc.BrowserSafari && (c = "m4a");
                a.browser ==
                    hc.BrowserInternetExplorer && (c = "m4a");
                if (b.type == sd.SoundAssetSound)
                    if (f) Tb.loadSound("assets/sounds_html5/" + b.file + "." + c).onComplete(function(a) {
                        h.sound = a
                    });
                    else h.sound = Tb.getSound("assets/sounds_html5/" + b.file + "." + c);
                else if (b.type == sd.SoundAssetMusic)
                    if (f) Tb.loadSound("assets/music_html5/" + b.file + "." + c).onComplete(function(a) {
                        w.trace("sound loaded: " + b.file, {
                            fileName: "SoundsDo.hx",
                            lineNumber: 60,
                            className: "bikas.sounds.SoundsDo",
                            methodName: "create"
                        });
                        h.sound = a
                    });
                    else h.sound = Tb.getSound("assets/music_html5/" +
                        b.file + "." + c);
                h.initial_jump_ms = e;
                d && (h.loops = 0);
                h.start_time = h.initial_jump_ms;
                return h
            };
            va.play = function(a) {
                if (va.sounds_enabled || a.sound_asset.type != sd.SoundAssetSound)
                    if (a.sound_asset.type == sd.SoundAssetSound) {
                        var b = a.sound;
                        if (null != b && null != b.__buffer && null != b.__buffer.__srcHowl) {
                            var c = b.__buffer.__srcHowl;
                            a.sound_play_type == rd.AlwaysPlayOnce ? (c.play(), c.volume(a.volume * a.sound_asset.volume)) : c.hack_playing || (c.hack_playing = !0, c.on("end", function() {
                                c.hack_playing = !1
                            }), c.play(), c.volume(a.volume *
                                a.sound_asset.volume))
                        }
                    } else if (a.sound_play_type == rd.AlwaysPlayOnce) {
                    if (null != a.sound) {
                        b = a.sound;
                        var d = a.start_time,
                            e = va.getTransform(a);
                        a.channel = b.play(d, 0, e);
                        null != a.channel && (a.sound_complete = function(b) {
                            a.channel.removeEventListener("soundComplete", a.sound_complete);
                            a.channel = null
                        }, a.channel.addEventListener("soundComplete", a.sound_complete, !1, 0, !0))
                    }
                } else va.isPlaying(a) || null == a.sound || (b = a.sound, d = a.start_time, e = va.getTransform(a), a.channel = b.play(d, 0, e), null != a.channel && (a.sound_complete =
                    function(b) {
                        a.channel.removeEventListener("soundComplete", a.sound_complete);
                        a.channel = null;
                        a.loop_count++;
                        0 >= a.loops || a.loop_count < a.loops ? (va.rewind(a), va.play(a)) : va.reset(a)
                    }, a.channel.addEventListener("soundComplete", a.sound_complete, !1, 0, !0)))
            };
            va.stop = function(a) {
                a.sound_asset.type == sd.SoundAssetSound ? (a = a.sound, null != a && null != a.__buffer && null != a.__buffer.__srcHowl && (a = a.__buffer.__srcHowl, a.stop(), a.hack_playing = !1)) : va.isPlaying(a) && (a.start_time = a.channel.get_position(), a.channel.stop(),
                    a.channel.removeEventListener("soundComplete", a.sound_complete), a.channel = null)
            };
            va.isPlaying = function(a) {
                if (a.sound_asset.type == sd.SoundAssetSound) {
                    a = a.sound;
                    if (null == a || null == a.__buffer || null == a.__buffer.__srcHowl) return !1;
                    a = a.__buffer.__srcHowl;
                    return null == a.hack_playing ? !1 : 1 == a.hack_playing ? !0 : !1
                }
                return null != a.channel ? !0 : !1
            };
            va.rewind = function(a) {
                va.isPlaying(a) ? (va.stop(a), a.start_time = a.initial_jump_ms, va.play(a)) : a.start_time = a.initial_jump_ms
            };
            va.reset = function(a) {
                a.loop_count = 0;
                va.rewind(a)
            };
            va.setVolume = function(a, b) {
                null == b && (b = 1);
                a.volume = b;
                va.refreshTransform(a)
            };
            va.setMute = function(a, b) {
                a.muted = b;
                va.refreshTransform(a)
            };
            va.refreshTransform = function(a) {
                va.isPlaying(a) && a.channel.set_soundTransform(va.getTransform(a))
            };
            va.getTransform = function(a) {
                return a.muted ? new Mi(0, a.panning) : new Mi(a.volume * a.sound_asset.volume, a.panning)
            };
            var Ni = function() {
                S.call(this);
                var a = this.getBackgroundColor(),
                    b = 0;
                70 > .299 * (a >> 16 & 255) + .587 * (a >> 8 & 255) + .114 * (a & 255) && (b = 16777215);
                a = this.getHeight() / 2 - 3.5;
                var c = this.getWidth() - 60;
                this.outline = new Ke;
                this.outline.get_graphics().beginFill(b, .07);
                this.outline.get_graphics().drawRect(0, 0, c, 7);
                this.outline.set_x(30);
                this.outline.set_y(a);
                this.outline.set_alpha(0);
                this.addChild(this.outline);
                this.progress = new Ke;
                this.progress.get_graphics().beginFill(b, .35);
                this.progress.get_graphics().drawRect(0, 0, c - 4, 3);
                this.progress.set_x(32);
                this.progress.set_y(a + 2);
                this.progress.set_scaleX(0);
                this.progress.set_alpha(0);
                this.addChild(this.progress);
                this.startAnimation =
                    ia.getTimer() + 100;
                this.endAnimation = this.startAnimation + 1E3;
                this.addEventListener("addedToStage", q(this, this.this_onAddedToStage))
            };
            g["openfl.display.DefaultPreloader"] = Ni;
            Ni.__name__ = ["openfl", "display", "DefaultPreloader"];
            Ni.__super__ = S;
            Ni.prototype = p(S.prototype, {
                endAnimation: null,
                outline: null,
                progress: null,
                startAnimation: null,
                getBackgroundColor: function() {
                    var a = ia.get_current().stage.window.context.attributes;
                    return T.hasField(a, "background") && null != a.background ? a.background : 0
                },
                getHeight: function() {
                    var a =
                        ia.get_current().stage.window.get_height();
                    return 0 < a ? a : ia.get_current().stage.stageHeight
                },
                getWidth: function() {
                    var a = ia.get_current().stage.window.get_width();
                    return 0 < a ? a : ia.get_current().stage.stageWidth
                },
                onInit: function() {
                    this.addEventListener("enterFrame", q(this, this.this_onEnterFrame))
                },
                onLoaded: function() {
                    this.removeEventListener("enterFrame", q(this, this.this_onEnterFrame));
                    this.dispatchEvent(new Oa("unload"))
                },
                onUpdate: function(a, b) {
                    var c = 0;
                    0 < b && (c = a / b, 1 < c && (c = 1));
                    this.progress.set_scaleX(c)
                },
                this_onAddedToStage: function(a) {
                    this.removeEventListener("addedToStage", q(this, this.this_onAddedToStage));
                    this.onInit();
                    this.onUpdate(this.get_loaderInfo().bytesLoaded, this.get_loaderInfo().bytesTotal);
                    this.addEventListener("progress", q(this, this.this_onProgress));
                    this.addEventListener("complete", q(this, this.this_onComplete))
                },
                this_onComplete: function(a) {
                    a.preventDefault();
                    this.removeEventListener("progress", q(this, this.this_onProgress));
                    this.removeEventListener("complete", q(this, this.this_onComplete));
                    this.onLoaded()
                },
                this_onEnterFrame: function(a) {
                    a = (ia.getTimer() - this.startAnimation) / (this.endAnimation - this.startAnimation);
                    0 > a && (a = 0);
                    1 < a && (a = 1);
                    this.outline.set_alpha(this.progress.set_alpha(a))
                },
                this_onProgress: function(a) {
                    this.onUpdate(E["int"](a.bytesLoaded), E["int"](a.bytesTotal))
                },
                __class__: Ni
            });
            var ah = function() {
                this.poki_progress = {};
                Ni.call(this);
                ah.poki_init_success = Af.init();
                ah.poki_init_success && (ah.poki_init_success && Af.PokiSDK.gameLoadingStart(), this.drawPreloaderProgress(0))
            };
            g["bikas.top.BikasPreloader"] =
                ah;
            ah.__name__ = ["bikas", "top", "BikasPreloader"];
            ah.__super__ = Ni;
            ah.prototype = p(Ni.prototype, {
                drawPreloaderProgress: function(a) {
                    var b = ia.get_current().stage.stageWidth > ia.get_current().stage.stageHeight ? ia.get_current().stage.stageWidth / 640 : ia.get_current().stage.stageHeight / 640;
                    var c = .8 * ia.get_current().stage.stageWidth,
                        d = 11 * b;
                    b *= 2;
                    var e = c - 2 * b,
                        f = d - 2 * b;
                    this.outline.get_graphics().clear();
                    this.outline.get_graphics().beginFill(4605510, 1);
                    this.outline.get_graphics().drawRoundRect(0, 0, c, d, d, d);
                    this.outline.get_graphics().endFill();
                    this.progress.get_graphics().clear();
                    this.progress.get_graphics().beginFill(15790320, 1);
                    this.progress.get_graphics().drawRoundRect(0, 0, e * a, f, f);
                    this.progress.get_graphics().endFill();
                    this.outline.set_x(ia.get_current().stage.stageWidth / 2 - this.outline.get_width() / 2);
                    this.outline.set_y(ia.get_current().stage.stageHeight / 2 - this.outline.get_height() / 2);
                    this.progress.set_x(this.outline.get_x() + b);
                    this.progress.set_y(ia.get_current().stage.stageHeight / 2 - this.progress.get_height() / 2)
                },
                onInit: function() {
                    Ni.prototype.onInit.call(this)
                },
                poki_progress: null,
                onUpdate: function(a, b) {
                    Ni.prototype.onUpdate.call(this, a, b);
                    var c = 0;
                    0 < b && (c = a / b, 1 < c && (c = 1), 0 > c && (c = 0));
                    this.progress.set_scaleX(1);
                    this.progress.set_scaleY(1);
                    this.drawPreloaderProgress(c);
                    ah.poki_init_success && null != Af.PokiSDK.gameLoadingProgress && (this.poki_progress.percentageDone = c)
                },
                __class__: ah
            });
            var Ot = function() {
                this.enable_pause_debug = this.log_trace_enabled = this.show_frame_rate = this.sitelock_poki_debug_enabled = !1;
                this.sitelock_types = [qe.BikasNet, qe.Poki]
            };
            g["bikas.top.ReleaseConfig"] =
                Ot;
            Ot.__name__ = ["bikas", "top", "ReleaseConfig"];
            Ot.prototype = {
                sitelock_types: null,
                enable_pause_debug: null,
                log_trace_enabled: null,
                show_frame_rate: null,
                sitelock_poki_debug_enabled: null,
                __class__: Ot
            };
            var hh = g["bikas.top.GameplayType"] = {
                __ename__: ["bikas", "top", "GameplayType"],
                __constructs__: ["RepeatSameLevel", "Release"]
            };
            hh.RepeatSameLevel = ["RepeatSameLevel", 0];
            hh.RepeatSameLevel.toString = l;
            hh.RepeatSameLevel.__enum__ = hh;
            hh.Release = ["Release", 1];
            hh.Release.toString = l;
            hh.Release.__enum__ = hh;
            var sf = g["bikas.top.DevelopmentStartupType"] = {
                __ename__: ["bikas", "top", "DevelopmentStartupType"],
                __constructs__: ["StartupEditor", "StartupMainMenu", "StartupSpecifiedLevel", "StartupSpecifiedLevelPackWindowOpen"]
            };
            sf.StartupEditor = ["StartupEditor", 0];
            sf.StartupEditor.toString = l;
            sf.StartupEditor.__enum__ = sf;
            sf.StartupMainMenu = ["StartupMainMenu", 1];
            sf.StartupMainMenu.toString = l;
            sf.StartupMainMenu.__enum__ = sf;
            sf.StartupSpecifiedLevel = ["StartupSpecifiedLevel", 2];
            sf.StartupSpecifiedLevel.toString = l;
            sf.StartupSpecifiedLevel.__enum__ = sf;
            sf.StartupSpecifiedLevelPackWindowOpen = ["StartupSpecifiedLevelPackWindowOpen", 3];
            sf.StartupSpecifiedLevelPackWindowOpen.toString = l;
            sf.StartupSpecifiedLevelPackWindowOpen.__enum__ = sf;
            var Pt = function() {
                this.snapping_on = this.show_next_level_menu = this.enable_pause_debug = this.show_frame_rate = !0;
                this.current_editing_timeline_name = "history";
                this.gameplay_type = hh.RepeatSameLevel;
                this.startup_screen_size = ta.Screen_16_9_640x360;
                this.startup_custom_level_pack_window_name = "reptiles";
                this.startup_custom_level_name = "level_india_cobra";
                this.startup_type =
                    sf.StartupSpecifiedLevelPackWindowOpen
            };
            g["bikas.top.DevelopmentConfig"] = Pt;
            Pt.__name__ = ["bikas", "top", "DevelopmentConfig"];
            Pt.prototype = {
                startup_type: null,
                startup_custom_level_name: null,
                startup_custom_level_pack_window_name: null,
                startup_screen_size: null,
                gameplay_type: null,
                current_editing_timeline_name: null,
                snapping_on: null,
                show_next_level_menu: null,
                enable_pause_debug: null,
                show_frame_rate: null,
                __class__: Pt
            };
            var hc = g["bikas.top.HTML5Browser"] = {
                __ename__: ["bikas", "top", "HTML5Browser"],
                __constructs__: "BrowserFirefox BrowserSamsungBrowser BrowserOpera BrowserInternetExplorer BrowserEdge BrowserChrome BrowserSafari BrowserUnknown".split(" ")
            };
            hc.BrowserFirefox = ["BrowserFirefox", 0];
            hc.BrowserFirefox.toString = l;
            hc.BrowserFirefox.__enum__ = hc;
            hc.BrowserSamsungBrowser = ["BrowserSamsungBrowser", 1];
            hc.BrowserSamsungBrowser.toString = l;
            hc.BrowserSamsungBrowser.__enum__ = hc;
            hc.BrowserOpera = ["BrowserOpera", 2];
            hc.BrowserOpera.toString = l;
            hc.BrowserOpera.__enum__ = hc;
            hc.BrowserInternetExplorer = ["BrowserInternetExplorer", 3];
            hc.BrowserInternetExplorer.toString = l;
            hc.BrowserInternetExplorer.__enum__ = hc;
            hc.BrowserEdge = ["BrowserEdge", 4];
            hc.BrowserEdge.toString =
                l;
            hc.BrowserEdge.__enum__ = hc;
            hc.BrowserChrome = ["BrowserChrome", 5];
            hc.BrowserChrome.toString = l;
            hc.BrowserChrome.__enum__ = hc;
            hc.BrowserSafari = ["BrowserSafari", 6];
            hc.BrowserSafari.toString = l;
            hc.BrowserSafari.__enum__ = hc;
            hc.BrowserUnknown = ["BrowserUnknown", 7];
            hc.BrowserUnknown.toString = l;
            hc.BrowserUnknown.__enum__ = hc;
            var Qt = function() {
                this.browser = hc.BrowserUnknown;
                this.vita = this.kindle = this.android = this.chromeOS = this.iOS = this.linux = this.macOS = this.windows = this.windowsPhone = this.desktop = !1
            };
            g["bikas.top.HTML5Device"] =
                Qt;
            Qt.__name__ = ["bikas", "top", "HTML5Device"];
            Qt.prototype = {
                vita: null,
                kindle: null,
                android: null,
                chromeOS: null,
                iOS: null,
                linux: null,
                macOS: null,
                windows: null,
                windowsPhone: null,
                desktop: null,
                browser: null,
                __class__: Qt
            };
            var db = g["bikas.top.ConfigType"] = {
                __ename__: ["bikas", "top", "ConfigType"],
                __constructs__: ["FlashDevelopment", "FlashRelease", "MobileRelease", "HTML5Development", "HTML5Release"]
            };
            db.FlashDevelopment = ["FlashDevelopment", 0];
            db.FlashDevelopment.toString = l;
            db.FlashDevelopment.__enum__ = db;
            db.FlashRelease = ["FlashRelease", 1];
            db.FlashRelease.toString = l;
            db.FlashRelease.__enum__ = db;
            db.MobileRelease = ["MobileRelease", 2];
            db.MobileRelease.toString = l;
            db.MobileRelease.__enum__ = db;
            db.HTML5Development = ["HTML5Development", 3];
            db.HTML5Development.toString = l;
            db.HTML5Development.__enum__ = db;
            db.HTML5Release = ["HTML5Release", 4];
            db.HTML5Release.toString = l;
            db.HTML5Release.__enum__ = db;
            var Wf = g["bikas.top.PlatformType"] = {
                __ename__: ["bikas", "top", "PlatformType"],
                __constructs__: ["Web", "Android", "iOS"]
            };
            Wf.Web = ["Web", 0];
            Wf.Web.toString =
                l;
            Wf.Web.__enum__ = Wf;
            Wf.Android = ["Android", 1];
            Wf.Android.toString = l;
            Wf.Android.__enum__ = Wf;
            Wf.iOS = ["iOS", 2];
            Wf.iOS.toString = l;
            Wf.iOS.__enum__ = Wf;
            var Ih = g["bikas.top.DeviceType"] = {
                __ename__: ["bikas", "top", "DeviceType"],
                __constructs__: ["TouchDevice", "MouseDevice"]
            };
            Ih.TouchDevice = ["TouchDevice", 0];
            Ih.TouchDevice.toString = l;
            Ih.TouchDevice.__enum__ = Ih;
            Ih.MouseDevice = ["MouseDevice", 1];
            Ih.MouseDevice.toString = l;
            Ih.MouseDevice.__enum__ = Ih;
            var qe = g["bikas.top.SitelockType"] = {
                __ename__: ["bikas", "top", "SitelockType"],
                __constructs__: ["BikasNet", "Poki", "BikasNetAndPoki", "None"]
            };
            qe.BikasNet = ["BikasNet", 0];
            qe.BikasNet.toString = l;
            qe.BikasNet.__enum__ = qe;
            qe.Poki = ["Poki", 1];
            qe.Poki.toString = l;
            qe.Poki.__enum__ = qe;
            qe.BikasNetAndPoki = ["BikasNetAndPoki", 2];
            qe.BikasNetAndPoki.toString = l;
            qe.BikasNetAndPoki.__enum__ = qe;
            qe.None = ["None", 3];
            qe.None.toString = l;
            qe.None.__enum__ = qe;
            var nh = g["bikas.top.AdmobType"] = {
                __ename__: ["bikas", "top", "AdmobType"],
                __constructs__: ["TestAdsStatic", "TestAdsVideo", "FinalAds"]
            };
            nh.TestAdsStatic = ["TestAdsStatic", 0];
            nh.TestAdsStatic.toString = l;
            nh.TestAdsStatic.__enum__ = nh;
            nh.TestAdsVideo = ["TestAdsVideo", 1];
            nh.TestAdsVideo.toString = l;
            nh.TestAdsVideo.__enum__ = nh;
            nh.FinalAds = ["FinalAds", 2];
            nh.FinalAds.toString = l;
            nh.FinalAds.__enum__ = nh;
            var Rt = function() {
                this.build_time = 0;
                this.game_is_paused_by_ad = !1;
                this.html5_device = new Qt;
                this.admob_type = nh.TestAdsVideo;
                this.release = new Ot;
                this.development = new Pt;
                this.device_type = Ih.TouchDevice;
                this.platform_type = Wf.Web;
                this.type = db.HTML5Release
            };
            g["bikas.top.GameConfig"] =
                Rt;
            Rt.__name__ = ["bikas", "top", "GameConfig"];
            Rt.prototype = {
                type: null,
                platform_type: null,
                device_type: null,
                development: null,
                release: null,
                admob_type: null,
                html5_device: null,
                game_is_paused_by_ad: null,
                build_time: null,
                __class__: Rt
            };
            var oh = g["bikas.top.EditorConfigType"] = {
                __ename__: ["bikas", "top", "EditorConfigType"],
                __constructs__: ["FlashDevelopment", "FlashDebug", "FlashRelease"]
            };
            oh.FlashDevelopment = ["FlashDevelopment", 0];
            oh.FlashDevelopment.toString = l;
            oh.FlashDevelopment.__enum__ = oh;
            oh.FlashDebug = ["FlashDebug",
                1
            ];
            oh.FlashDebug.toString = l;
            oh.FlashDebug.__enum__ = oh;
            oh.FlashRelease = ["FlashRelease", 2];
            oh.FlashRelease.toString = l;
            oh.FlashRelease.__enum__ = oh;
            var lk = g["bikas.top.TargetType"] = {
                __ename__: ["bikas", "top", "TargetType"],
                __constructs__: ["ForFlashGame", "ForHTML5Game"]
            };
            lk.ForFlashGame = ["ForFlashGame", 0];
            lk.ForFlashGame.toString = l;
            lk.ForFlashGame.__enum__ = lk;
            lk.ForHTML5Game = ["ForHTML5Game", 1];
            lk.ForHTML5Game.toString = l;
            lk.ForHTML5Game.__enum__ = lk;
            var St = function() {
                this.nodejs_save_current_working_files =
                    this.refresh_prefabs_with_undo = !0;
                this.nodejs_server_save_path = ""
            };
            g["bikas.top.EditorConfig"] = St;
            St.__name__ = ["bikas", "top", "EditorConfig"];
            St.prototype = {
                config_type: null,
                target_type: null,
                nodejs_server_save_path: null,
                nodejs_save_current_working_files: null,
                refresh_prefabs_with_undo: null,
                __class__: St
            };
            var fh = function() {
                this.commands = null;
                this.points = [];
                this.color = this.alpha = 0
            };
            g["bikas.top.FlashGraphicsPolygon"] = fh;
            fh.__name__ = ["bikas", "top", "FlashGraphicsPolygon"];
            fh.prototype = {
                color: null,
                alpha: null,
                points: null,
                commands: null,
                __class__: fh
            };
            var Ji = function() {};
            g["bikas.top.FlashGraphicsDo"] = Ji;
            Ji.__name__ = ["bikas", "top", "FlashGraphicsDo"];
            Ji.extractPolygonFillsFromGraphics = function(a, b) {
                a = a.readGraphicsData(!0);
                for (var c = [], d = null, e = 0; e < a.get_length();) {
                    var f = a.get(e);
                    ++e;
                    if (E.is(f, mk)) d = new fh, d.commands = [], null != f ? (d.color = f.color, d.alpha = f.alpha) : (d.color = 0, d.alpha = 1);
                    else if (E.is(f, io)) null != d && (d.points.length != d.commands.length ? w.trace("warning: current_polygon.points.length != current_polygon.commands.length, polygon is not added!", {
                        fileName: "FlashGraphicsDo.hx",
                        lineNumber: 103,
                        className: "bikas.top.FlashGraphicsDo",
                        methodName: "extractPolygonFillsFromGraphics"
                    }) : c.push(d), d = null);
                    else if (E.is(f, Kh) && null != d && (f = aa.__cast(f, Kh), 0 == f.winding && !(3 > f.commands.get_length())))
                        for (var h = 0, k = 0, m = f.commands.get_length(); k < m;) {
                            var g = k++;
                            g = f.commands.get(g);
                            if (1 == g) {
                                g = f.data.get(h);
                                var l = f.data.get(h + 1);
                                h += 2;
                                d.points.push(new W(g, l));
                                d.commands.push(fh.draw_command_move_to)
                            } else if (2 == g) g = f.data.get(h), l = f.data.get(h + 1), h += 2, d.points.push(new W(g,
                                l)), d.commands.push(fh.draw_command_line_to);
                            else if (3 == g) f.data.get(h), f.data.get(h + 1), g = f.data.get(h + 2), l = f.data.get(h + 3), h += 4, d.points.push(new W(g, l)), d.commands.push(fh.draw_command_line_to);
                            else {
                                w.trace("warning: unsupported command " + g + " in " + b, {
                                    fileName: "FlashGraphicsDo.hx",
                                    lineNumber: 175,
                                    className: "bikas.top.FlashGraphicsDo",
                                    methodName: "extractPolygonFillsFromGraphics"
                                });
                                d = null;
                                break
                            }
                        }
                }
                return c
            };
            Ji.extractPolygonsFromGraphics = function(a, b) {
                a = a.readGraphicsData(!0);
                for (var c = [], d = null, e = 0; e <
                    a.get_length();) {
                    var f = a.get(e);
                    ++e;
                    E.is(f, mk) && (d = f);
                    if (E.is(f, Kh) && (f = aa.__cast(f, Kh), 0 == f.winding && !(3 > f.commands.get_length()))) {
                        for (var h = null, k = 0, m = 0, g = f.commands.get_length(); m < g;) {
                            var l = m++;
                            l = f.commands.get(l);
                            if (1 == l) {
                                null != h && (Ji.canWrapPolygon(h.points) && h.points.pop(), c.push(h));
                                h = new fh;
                                null != d ? (h.color = d.color, h.alpha = d.alpha) : (h.color = 0, h.alpha = 1);
                                l = f.data.get(k);
                                var n = f.data.get(k + 1);
                                k += 2;
                                h.points.push(new W(l, n))
                            } else if (2 == l)
                                if (null == h) {
                                    w.trace("warning: current_polygon == null in " +
                                        b, {
                                            fileName: "FlashGraphicsDo.hx",
                                            lineNumber: 281,
                                            className: "bikas.top.FlashGraphicsDo",
                                            methodName: "extractPolygonsFromGraphics"
                                        });
                                    h = null;
                                    break
                                } else l = f.data.get(k), n = f.data.get(k + 1), k += 2, h.points.push(new W(l, n));
                            else if (3 == l)
                                if (null == h) {
                                    w.trace("warning: current_polygon == null in " + b, {
                                        fileName: "FlashGraphicsDo.hx",
                                        lineNumber: 300,
                                        className: "bikas.top.FlashGraphicsDo",
                                        methodName: "extractPolygonsFromGraphics"
                                    });
                                    h = null;
                                    break
                                } else f.data.get(k), f.data.get(k + 1), l = f.data.get(k + 2), n = f.data.get(k + 3), k += 4,
                                    h.points.push(new W(l, n));
                            else {
                                w.trace("warning: unsupported command " + l + " in " + b, {
                                    fileName: "FlashGraphicsDo.hx",
                                    lineNumber: 317,
                                    className: "bikas.top.FlashGraphicsDo",
                                    methodName: "extractPolygonsFromGraphics"
                                });
                                h = null;
                                break
                            }
                        }
                        null != h && (Ji.canWrapPolygon(h.points) && h.points.pop(), c.push(h))
                    }
                }
                return c
            };
            Ji.canWrapPolygon = function(a) {
                return 3 > a.length ? !1 : H.pointsEqual(a[0], a[a.length - 1]) ? !0 : !1
            };
            var Tt = function() {
                this.editor_library_bytes = this.editor_stage_bytes = this.compressed_game_library_base64 = this.compressed_game_stage_base64 =
                    this.compressed_game_library_bytes = this.compressed_game_stage_bytes = null
            };
            g["bikas.top.TimelineFiles"] = Tt;
            Tt.__name__ = ["bikas", "top", "TimelineFiles"];
            Tt.prototype = {
                editor_library_bytes: null,
                editor_stage_bytes: null,
                compressed_game_library_base64: null,
                compressed_game_stage_base64: null,
                compressed_game_library_bytes: null,
                compressed_game_stage_bytes: null,
                __class__: Tt
            };
            var Ut = function() {
                this.dates = []
            };
            g["bikas.top.WeeklyDatesForYear"] = Ut;
            Ut.__name__ = ["bikas", "top", "WeeklyDatesForYear"];
            Ut.prototype = {
                year: null,
                dates: null,
                __class__: Ut
            };
            var Vt = function() {
                this.level_map = new fb;
                this.weekly_dates = [];
                this.weekly_timelines = [];
                this.main_timelines = [];
                this.all_timelines = []
            };
            g["bikas.top.GameLevels"] = Vt;
            Vt.__name__ = ["bikas", "top", "GameLevels"];
            Vt.prototype = {
                all_timelines: null,
                main_timelines: null,
                weekly_timelines: null,
                weekly_dates: null,
                level_map: null,
                __class__: Vt
            };
            var Wt = function() {
                this.packs = []
            };
            g["bikas.top.LevelPackTimeline"] = Wt;
            Wt.__name__ = ["bikas", "top", "LevelPackTimeline"];
            Wt.prototype = {
                parent_game_levels: null,
                name: null,
                is_weekly: null,
                timeline_files: null,
                packs: null,
                __class__: Wt
            };
            var kd = g["bikas.top.MonetizationType"] = {
                __ename__: ["bikas", "top", "MonetizationType"],
                __constructs__: ["None", "Interstitial", "InterstitialOrRemoveAds", "RewardedAdOrBuy", "BuyOnly"]
            };
            kd.None = ["None", 0];
            kd.None.toString = l;
            kd.None.__enum__ = kd;
            kd.Interstitial = ["Interstitial", 1];
            kd.Interstitial.toString = l;
            kd.Interstitial.__enum__ = kd;
            kd.InterstitialOrRemoveAds = ["InterstitialOrRemoveAds", 2];
            kd.InterstitialOrRemoveAds.toString = l;
            kd.InterstitialOrRemoveAds.__enum__ =
                kd;
            kd.RewardedAdOrBuy = ["RewardedAdOrBuy", 3];
            kd.RewardedAdOrBuy.toString = l;
            kd.RewardedAdOrBuy.__enum__ = kd;
            kd.BuyOnly = ["BuyOnly", 4];
            kd.BuyOnly.toString = l;
            kd.BuyOnly.__enum__ = kd;
            var yd = g["bikas.top.HTML5MonetizationType"] = {
                __ename__: ["bikas", "top", "HTML5MonetizationType"],
                __constructs__: ["None", "Interstitial", "LinksToMobileVersion", "RewardedUnlock"]
            };
            yd.None = ["None", 0];
            yd.None.toString = l;
            yd.None.__enum__ = yd;
            yd.Interstitial = ["Interstitial", 1];
            yd.Interstitial.toString = l;
            yd.Interstitial.__enum__ = yd;
            yd.LinksToMobileVersion = ["LinksToMobileVersion", 2];
            yd.LinksToMobileVersion.toString = l;
            yd.LinksToMobileVersion.__enum__ = yd;
            yd.RewardedUnlock = ["RewardedUnlock", 3];
            yd.RewardedUnlock.toString = l;
            yd.RewardedUnlock.__enum__ = yd;
            var Ed = g["bikas.top.HTML5UnlockType"] = {
                __ename__: ["bikas", "top", "HTML5UnlockType"],
                __constructs__: ["Included", "TimedUnlock", "NotIncludedYet"]
            };
            Ed.Included = ["Included", 0];
            Ed.Included.toString = l;
            Ed.Included.__enum__ = Ed;
            Ed.TimedUnlock = ["TimedUnlock", 1];
            Ed.TimedUnlock.toString = l;
            Ed.TimedUnlock.__enum__ = Ed;
            Ed.NotIncludedYet = ["NotIncludedYet", 2];
            Ed.NotIncludedYet.toString = l;
            Ed.NotIncludedYet.__enum__ = Ed;
            var Xt = function() {
                this.weekly_release_date = null;
                this.weekly_year = this.weekly_week_number = -1;
                this.icon_scale_coeff = 1;
                this.html5_unlock_date = this.icon_object_class = null;
                this.html5_unlock_type = Ed.Included;
                this.html5_monetization_type = yd.Interstitial;
                this.monetization_type = kd.Interstitial;
                this.levels = []
            };
            g["bikas.top.LevelPack"] = Xt;
            Xt.__name__ = ["bikas", "top", "LevelPack"];
            Xt.prototype = {
                parent_timeline: null,
                name: null,
                levels: null,
                monetization_type: null,
                html5_monetization_type: null,
                html5_unlock_type: null,
                html5_unlock_date: null,
                icon_object_class: null,
                icon_scale_coeff: null,
                weekly_year: null,
                weekly_week_number: null,
                weekly_release_date: null,
                __class__: Xt
            };
            var Dq = function() {
                this.icon_object_class = this.icon_object_constructor = null;
                this.body_scale = this.additional_scale_for_portrait = 1;
                this.prefab_name = ""
            };
            g["bikas.top.LevelDescription"] = Dq;
            Dq.__name__ = ["bikas", "top", "LevelDescription"];
            Dq.prototype = {
                parent_pack: null,
                prefab_name: null,
                body_scale: null,
                additional_scale_for_portrait: null,
                icon_object_class: null,
                icon_object_constructor: null,
                __class__: Dq
            };
            var Xa = function() {};
            g["bikas.top.GameAssets"] = Xa;
            Xa.__name__ = ["bikas", "top", "GameAssets"];
            Xa.createSoundAsset = function(a, b, c, d) {
                var e = new Nt;
                e.file = a;
                e.type = c;
                e.sound_class = b;
                e.volume = d;
                return e
            };
            var Xf = function() {};
            g["bikas.top.GameAssetsDo"] = Xf;
            Xf.__name__ = ["bikas", "top", "GameAssetsDo"];
            Xf.init = function(a, b, c, d) {
                Xa.paper = Xf.createSource(Tb.getBitmapData("assets/images_html5/main_texture_paper.png"));
                Xa.paper_2x = Xf.createSource(Tb.getBitmapData("assets/images_html5/main_texture_paper_2x.png"));
                Xa.shine_line = Xf.createSource(Tb.getBitmapData("assets/images_html5/shine_line.png"));
                Xa.shine_rectangle = Xf.createSource(Tb.getBitmapData("assets/images_html5/shine_rectangle.png"));
                Xa.font_poetsen_one_regular = Tb.getFont("assets/fonts/poetsen_one_regular.ttf");
                Xa.font_arial_bold_italic = null;
                var e = function(a, b, c, d, e, f, h) {
                        a = new Wt;
                        a.parent_game_levels = b;
                        a.name = c;
                        a.is_weekly = !1;
                        a.timeline_files = new Tt;
                        Tb.exists("assets/saves/" +
                            f) ? a.timeline_files.compressed_game_library_base64 = Tb.getText("assets/saves/" + f) : a.timeline_files.compressed_game_library_base64 = null;
                        Tb.exists("assets/saves/" + h) ? a.timeline_files.compressed_game_stage_base64 = Tb.getText("assets/saves/" + h) : a.timeline_files.compressed_game_stage_base64 = null;
                        a.packs = [];
                        c = 0;
                        for (f = b.all_timelines; c < f.length;) h = f[c], ++c, h.name == a.name && w.trace("warning: timeline with name " + a.name + " was already added", {
                            fileName: "GameAssetsDo.hx",
                            lineNumber: 251,
                            className: "bikas.top.GameAssetsDo",
                            methodName: "init"
                        });
                        b.all_timelines.push(a);
                        b.main_timelines.push(a);
                        return a
                    },
                    f = function(a, b, d, e, f, h) {
                        null == h && (h = 1);
                        a.is_weekly && w.trace("warning: pushMainLevelPack should not be used for weekly timeline", {
                            fileName: "GameAssetsDo.hx",
                            lineNumber: 330,
                            className: "bikas.top.GameAssetsDo",
                            methodName: "init"
                        });
                        null == h && (h = 1);
                        var k = Q.getClassName(e).toLowerCase();
                        Xf.createAsset(e, k, c);
                        e = new Xt;
                        e.parent_timeline = a;
                        e.name = b;
                        e.levels = [];
                        e.monetization_type = d;
                        e.icon_object_class = f;
                        e.icon_scale_coeff = h;
                        a.packs.push(e);
                        return e
                    },
                    h = function(a, b, c, d) {
                        a.html5_monetization_type = b;
                        a.html5_unlock_type = c;
                        a.html5_unlock_date = d
                    },
                    k = function(a, e, f, h) {
                        null == h && (h = 1);
                        var k = Q.getClassName(e).toLowerCase();
                        Xf.createAsset(e, k, c, b, d);
                        var m = new Dq;
                        m.parent_pack = a;
                        m.prefab_name = k;
                        m.body_scale = 1;
                        m.additional_scale_for_portrait = h;
                        m.icon_object_class = e;
                        m.icon_object_constructor = f;
                        a.levels.push(m);
                        m.parent_pack.parent_timeline.parent_game_levels.level_map.exists(k) ? w.trace("warning: level named " + k + " already exists", {
                            fileName: "GameAssetsDo.hx",
                            lineNumber: 410,
                            className: "bikas.top.GameAssetsDo",
                            methodName: "init"
                        }) : m.parent_pack.parent_timeline.parent_game_levels.level_map.set(k, m);
                        return m
                    },
                    m = new Vt,
                    g = null,
                    l = null;
                g = e(a, m, "history", null, null, "history_game_library_base64", "history_game_stage_base64");
                l = f(g, "rome", kd.Interstitial, ep, Qk, 1);
                h(l, yd.Interstitial, Ed.Included);
                k(l, Qk, function() {
                    return new Qk
                }, 1.7);
                k(l, yn, function() {
                    return new yn
                }, 1.4);
                k(l, Pk, function() {
                    return new Pk
                }, 1.5);
                k(l, wn, function() {
                    return new wn
                }, 2);
                k(l, rn, function() {
                        return new rn
                    },
                    1.1);
                k(l, un, function() {
                    return new un
                }, 1.3);
                k(l, tn, function() {
                    return new tn
                }, 1.3);
                k(l, sn, function() {
                    return new sn
                }, 1.4);
                k(l, vn, function() {
                    return new vn
                }, 1.1);
                k(l, xn, function() {
                    return new xn
                }, 1.1);
                l = f(g, "china", kd.InterstitialOrRemoveAds, Yo, Hk, 1);
                h(l, yd.Interstitial, Ed.Included);
                k(l, pm, function() {
                    return new pm
                }, 1.2);
                k(l, mm, function() {
                    return new mm
                }, 1.1);
                k(l, Hk, function() {
                    return new Hk
                }, 1.3);
                k(l, nm, function() {
                    return new nm
                }, 1);
                k(l, hm, function() {
                    return new hm
                }, 1.2);
                k(l, km, function() {
                    return new km
                }, 1.1);
                k(l, om, function() {
                    return new om
                }, 1.2);
                k(l, jm, function() {
                    return new jm
                }, 1.1);
                k(l, lm, function() {
                    return new lm
                }, 1);
                k(l, im, function() {
                    return new im
                }, 1.1);
                l = f(g, "india", kd.InterstitialOrRemoveAds, ap, Kk, 1);
                h(l, yd.Interstitial, Ed.Included);
                k(l, Kk, function() {
                    return new Kk
                }, 1.1);
                k(l, Mm, function() {
                    return new Mm
                }, 1.1);
                k(l, Lm, function() {
                    return new Lm
                }, 1);
                k(l, Om, function() {
                    return new Om
                }, 1.1);
                k(l, Jm, function() {
                    return new Jm
                }, 1.1);
                k(l, Qm, function() {
                    return new Qm
                }, 1.3);
                k(l, Km, function() {
                    return new Km
                }, 1.2);
                k(l,
                    Nm,
                    function() {
                        return new Nm
                    }, 1.2);
                k(l, Pm, function() {
                    return new Pm
                }, 1.1);
                k(l, Im, function() {
                    return new Im
                }, 1.1);
                l = f(g, "europe", kd.InterstitialOrRemoveAds, Zo, Ik, .93);
                h(l, yd.Interstitial, Ed.Included);
                k(l, sm, function() {
                    return new sm
                }, 1.2);
                k(l, rm, function() {
                    return new rm
                }, 1.2);
                k(l, tm, function() {
                    return new tm
                }, 1.2);
                k(l, wm, function() {
                    return new wm
                }, 1.2);
                k(l, um, function() {
                    return new um
                }, 1.2);
                k(l, vm, function() {
                    return new vm
                }, 1);
                k(l, xm, function() {
                    return new xm
                }, 1.1);
                k(l, ym, function() {
                    return new ym
                }, 1.1);
                k(l,
                    Ik,
                    function() {
                        return new Ik
                    }, 1.1);
                k(l, qm, function() {
                    return new qm
                }, 1);
                l = f(g, "united_states", kd.InterstitialOrRemoveAds, hp, Rk, 1);
                h(l, yd.Interstitial, Ed.Included);
                k(l, Bn, function() {
                    return new Bn
                }, 1);
                k(l, En, function() {
                    return new En
                }, 1.6);
                k(l, Gn, function() {
                    return new Gn
                }, 1.1);
                k(l, An, function() {
                    return new An
                }, 1.2);
                k(l, Rk, function() {
                    return new Rk
                }, 1.1);
                k(l, zn, function() {
                    return new zn
                }, 1);
                k(l, Hn, function() {
                    return new Hn
                }, 1.1);
                k(l, Fn, function() {
                    return new Fn
                }, 1.1);
                k(l, Dn, function() {
                    return new Dn
                }, 1);
                k(l,
                    Cn,
                    function() {
                        return new Cn
                    }, 1.2);
                g = e(a, m, "animals", null, null, "animals_game_library_base64", "animals_game_stage_base64");
                l = f(g, "fish", kd.InterstitialOrRemoveAds, $o, Jk, .66);
                h(l, yd.RewardedUnlock, Ed.Included, new Date(2021, 0, 20, 9, 0, 0));
                k(l, Am, function() {
                    return new Am
                }, 1.3);
                k(l, Hm, function() {
                    return new Hm
                }, 1.6);
                k(l, Dm, function() {
                    return new Dm
                }, 1);
                k(l, Cm, function() {
                    return new Cm
                }, 1.2);
                k(l, Bm, function() {
                    return new Bm
                }, 1.6);
                k(l, Fm, function() {
                    return new Fm
                }, 1.8);
                k(l, Gm, function() {
                    return new Gm
                }, 1.5);
                k(l,
                    Em,
                    function() {
                        return new Em
                    }, 1.5);
                k(l, zm, function() {
                    return new zm
                }, 1.3);
                k(l, Jk, function() {
                    return new Jk
                }, 1.1);
                l = f(g, "reptiles", kd.InterstitialOrRemoveAds, dp, Nk, 1);
                h(l, yd.RewardedUnlock, Ed.TimedUnlock, new Date(2021, 1, 17, 9, 0, 0));
                k(l, Nk, function() {
                    return new Nk
                }, 1.4);
                k(l, mn, function() {
                    return new mn
                }, 1.2);
                k(l, qn, function() {
                    return new qn
                }, 1.3);
                k(l, kn, function() {
                    return new kn
                }, 1.3);
                k(l, pn, function() {
                    return new pn
                }, 1);
                k(l, jn, function() {
                    return new jn
                }, 1.2);
                k(l, on, function() {
                    return new on
                }, 1);
                k(l, nn, function() {
                        return new nn
                    },
                    1);
                k(l, ln, function() {
                    return new ln
                }, 1.7);
                k(l, Ok, function() {
                    return new Ok
                }, 1.3);
                l = f(g, "birds", kd.InterstitialOrRemoveAds, ug, Gk, .8);
                h(l, yd.RewardedUnlock, Ed.TimedUnlock, new Date(2021, 2, 17, 9, 0, 0));
                k(l, $l, function() {
                    return new $l
                }, 1.4);
                k(l, ej, function() {
                    return new ej
                }, 1.7);
                k(l, gm, function() {
                    return new gm
                }, 1);
                k(l, cm, function() {
                    return new cm
                }, 1.4);
                k(l, em, function() {
                    return new em
                }, 1.1);
                k(l, dm, function() {
                    return new dm
                }, 1);
                k(l, am, function() {
                    return new am
                }, 1.1);
                k(l, fm, function() {
                    return new fm
                }, 1.1);
                k(l, bm,
                    function() {
                        return new bm
                    }, 1.1);
                k(l, Gk, function() {
                    return new Gk
                }, 1.1);
                l = f(g, "mammals", kd.InterstitialOrRemoveAds, bp, Lk, .93);
                h(l, yd.RewardedUnlock, Ed.TimedUnlock, new Date(2021, 3, 21, 9, 0, 0));
                k(l, Ym, function() {
                    return new Ym
                }, 1.8);
                k(l, Lk, function() {
                    return new Lk
                }, 1);
                k(l, Rm, function() {
                    return new Rm
                }, 1.4);
                k(l, Xm, function() {
                    return new Xm
                }, 1.3);
                k(l, Wm, function() {
                    return new Wm
                }, 1);
                k(l, Tm, function() {
                    return new Tm
                }, 1.2);
                k(l, Um, function() {
                    return new Um
                }, 1.2);
                k(l, Sm, function() {
                    return new Sm
                }, 1);
                k(l, Zm, function() {
                        return new Zm
                    },
                    1);
                k(l, Vm, function() {
                    return new Vm
                }, 1.3);
                l = f(g, "pets", kd.InterstitialOrRemoveAds, cp, Mk, .93);
                h(l, yd.RewardedUnlock, Ed.TimedUnlock, new Date(2021, 4, 19, 9, 0, 0));
                k(l, fn, function() {
                    return new fn
                }, 1.3);
                k(l, gn, function() {
                    return new gn
                }, 1);
                k(l, an, function() {
                    return new an
                }, 1.2);
                k(l, hn, function() {
                    return new hn
                }, 1.3);
                k(l, Mk, function() {
                    return new Mk
                }, 1.4);
                k(l, dn, function() {
                    return new dn
                }, 1.6);
                k(l, bn, function() {
                    return new bn
                }, 1);
                k(l, $m, function() {
                    return new $m
                }, 1);
                k(l, cn, function() {
                    return new cn
                }, 1);
                k(l, en, function() {
                        return new en
                    },
                    1.3);
                a = function(a, b) {
                    var c = new Ut;
                    c.year = b;
                    c.dates = [];
                    a.weekly_dates.push(c);
                    return c
                };
                e = function(a, b, c, d) {
                    b = new Date(b, c - 1, d, 0, 0, 0);
                    c = b.getTime();
                    0 < a.dates.length && (d = a.dates[a.dates.length - 1], d.getTime() >= c && w.trace("warning: previous_date " + E.string(d) + " is higher than the new_date " + E.string(b), {
                        fileName: "GameAssetsDo.hx",
                        lineNumber: 957,
                        className: "bikas.top.GameAssetsDo",
                        methodName: "init"
                    }));
                    a.dates.push(b);
                    return b
                };
                f = null;
                f = a(m, 2019);
                e(f, 2018, 12, 31);
                e(f, 2019, 1, 7);
                e(f, 2019, 1, 14);
                e(f, 2019, 1, 21);
                e(f, 2019, 1, 28);
                e(f, 2019, 2, 4);
                e(f, 2019, 2, 11);
                e(f, 2019, 2, 18);
                e(f, 2019, 2, 25);
                e(f, 2019, 3, 4);
                e(f, 2019, 3, 11);
                e(f, 2019, 3, 18);
                e(f, 2019, 3, 25);
                e(f, 2019, 4, 1);
                e(f, 2019, 4, 8);
                e(f, 2019, 4, 15);
                e(f, 2019, 4, 22);
                e(f, 2019, 4, 29);
                e(f, 2019, 5, 6);
                e(f, 2019, 5, 13);
                e(f, 2019, 5, 20);
                e(f, 2019, 5, 27);
                e(f, 2019, 6, 3);
                e(f, 2019, 6, 10);
                e(f, 2019, 6, 17);
                e(f, 2019, 6, 24);
                e(f, 2019, 7, 1);
                e(f, 2019, 7, 8);
                e(f, 2019, 7, 15);
                e(f, 2019, 7, 22);
                e(f, 2019, 7, 29);
                e(f, 2019, 8, 5);
                e(f, 2019, 8, 12);
                e(f, 2019, 8, 19);
                e(f, 2019, 8, 26);
                e(f, 2019, 9, 2);
                e(f, 2019, 9, 9);
                e(f, 2019, 9, 16);
                e(f,
                    2019, 9, 23);
                e(f, 2019, 9, 30);
                e(f, 2019, 10, 7);
                e(f, 2019, 10, 14);
                e(f, 2019, 10, 21);
                e(f, 2019, 10, 28);
                e(f, 2019, 11, 4);
                e(f, 2019, 11, 11);
                e(f, 2019, 11, 18);
                e(f, 2019, 11, 25);
                e(f, 2019, 12, 2);
                e(f, 2019, 12, 9);
                e(f, 2019, 12, 16);
                e(f, 2019, 12, 23);
                f = a(m, 2020);
                e(f, 2019, 12, 30);
                e(f, 2020, 1, 6);
                e(f, 2020, 1, 13);
                e(f, 2020, 1, 20);
                e(f, 2020, 1, 27);
                e(f, 2020, 2, 3);
                e(f, 2020, 2, 10);
                e(f, 2020, 2, 17);
                e(f, 2020, 2, 24);
                e(f, 2020, 3, 2);
                e(f, 2020, 3, 9);
                e(f, 2020, 3, 16);
                e(f, 2020, 3, 23);
                e(f, 2020, 3, 30);
                e(f, 2020, 4, 6);
                e(f, 2020, 4, 13);
                e(f, 2020, 4, 20);
                e(f, 2020, 4, 27);
                e(f, 2020,
                    5, 4);
                e(f, 2020, 5, 11);
                e(f, 2020, 5, 18);
                e(f, 2020, 5, 25);
                e(f, 2020, 6, 1);
                e(f, 2020, 6, 8);
                e(f, 2020, 6, 15);
                e(f, 2020, 6, 22);
                e(f, 2020, 6, 29);
                e(f, 2020, 7, 6);
                e(f, 2020, 7, 13);
                e(f, 2020, 7, 20);
                e(f, 2020, 7, 27);
                e(f, 2020, 8, 3);
                e(f, 2020, 8, 10);
                e(f, 2020, 8, 17);
                e(f, 2020, 8, 24);
                e(f, 2020, 8, 31);
                e(f, 2020, 9, 7);
                e(f, 2020, 9, 14);
                e(f, 2020, 9, 21);
                e(f, 2020, 9, 28);
                e(f, 2020, 10, 5);
                e(f, 2020, 10, 12);
                e(f, 2020, 10, 19);
                e(f, 2020, 10, 26);
                e(f, 2020, 11, 2);
                e(f, 2020, 11, 9);
                e(f, 2020, 11, 16);
                e(f, 2020, 11, 23);
                e(f, 2020, 11, 30);
                e(f, 2020, 12, 7);
                e(f, 2020, 12, 14);
                e(f, 2020, 12, 21);
                e(f, 2020, 12, 28);
                return m
            };
            Xf.createSource = function(a) {
                if (E.is(a, Kb)) return V.createSourceFromBitmapData(aa.__cast(a, Kb));
                var b = Q.createInstance(a, []),
                    c = null;
                E.is(b, n) ? c = V.createAndDrawSource(b, !0, !0, 1, 1) : E.is(b, Kb) ? c = V.createSourceFromBitmapData(aa.__cast(b, Kb)) : w.trace("warning: unrecognized class " + E.string(a), {
                    fileName: "GameAssetsDo.hx",
                    lineNumber: 1244,
                    className: "bikas.top.GameAssetsDo",
                    methodName: "createSource"
                });
                return c
            };
            Xf.createAsset = function(a, b, c, d, e) {
                null == b && (b = "");
                var f = null;
                null != c &&
                    (f = Xf.createSource(a), c.exists(b) || c.set(b, f));
                null != d && (d.exists(b) || d.set(b, a));
                if (null != e && !e.exists(b)) {
                    a = Q.createInstance(a, []);
                    a = Ji.extractPolygonsFromGraphics(a.get_graphics(), b);
                    c = [];
                    for (d = 0; d < a.length;) {
                        var h = a[d];
                        ++d;
                        c.push(h.points)
                    }
                    null != c && 0 < c.length && e.set(b, c)
                }
                return f
            };
            Xf.findLevelPack = function(a, b) {
                var c = 0;
                for (a = a.all_timelines; c < a.length;) {
                    var d = a[c];
                    ++c;
                    var e = 0;
                    for (d = d.packs; e < d.length;) {
                        var f = d[e];
                        ++e;
                        if (f.name == b) return f
                    }
                }
                return null
            };
            var rb = function() {};
            g["bikas.top.InitDo"] =
                rb;
            rb.__name__ = ["bikas", "top", "InitDo"];
            rb.initializeAndStart = function(a, b) {
                var c = "",
                    d = "";
                c = "release";
                d = "html5";
                var e = new Rt;
                e.build_time = b;
                var f = !1;
                rb.setOS(e.html5_device);
                w.trace("browser: " + E.string(e.html5_device.browser), {
                    fileName: "InitDo.hx",
                    lineNumber: 125,
                    className: "bikas.top.InitDo",
                    methodName: "initializeAndStart"
                });
                f = e.release.log_trace_enabled ? !0 : !1;
                w.trace("config_name: " + c + ", target_name: " + d + ", log_trace: " + (null == f ? "null" : "" + f) + ", build_time: " + Nc.getWellFormattedDate(new Date(b)), {
                    fileName: "InitDo.hx",
                    lineNumber: 138,
                    className: "bikas.top.InitDo",
                    methodName: "initializeAndStart"
                });
                e.type == db.HTML5Release && (Qg.init("UA-49556966-17", "shapefold.bikas.net", !0), Qg.trackStart());
                if (e.type == db.HTML5Release && -1 != e.release.sitelock_types.indexOf(qe.Poki))
                    if (ah.poki_init_success) e.release.sitelock_poki_debug_enabled ? PokiSDK.setDebug(!0) : PokiSDK.setDebug(!1);
                    else return;
                if (f) {
                    var h = w.trace;
                    w.trace = function(a, b) {
                        var c = null == b ? "(null)" : b.fileName + ":" + b.lineNumber,
                            d = E.string(a) + "";
                        if (null !=
                            b && null != b.customParams)
                            for (var e = 0, f = b.customParams; e < f.length;) {
                                var k = f[e];
                                ++e;
                                d += "," + E.string(k)
                            }
                        rb.trace_snapshots.push(c + ": " + d);
                        11E4 < rb.trace_snapshots.length && (rb.trace_snapshots.splice(0, 1E4), rb.trace_snapshots.unshift(" --- over 100k traces --- "));
                        h(a, b)
                    }
                } else null != w.trace && (w.trace = function(a, b) {});
                w.trace("", {
                    fileName: "InitDo.hx",
                    lineNumber: 224,
                    className: "bikas.top.InitDo",
                    methodName: "initializeAndStart"
                });
                w.trace("build: " + c + "-" + d, {
                    fileName: "InitDo.hx",
                    lineNumber: 225,
                    className: "bikas.top.InitDo",
                    methodName: "initializeAndStart"
                });
                w.trace("", {
                    fileName: "InitDo.hx",
                    lineNumber: 226,
                    className: "bikas.top.InitDo",
                    methodName: "initializeAndStart"
                });
                w.trace("sizes:", {
                    fileName: "InitDo.hx",
                    lineNumber: 228,
                    className: "bikas.top.InitDo",
                    methodName: "initializeAndStart"
                });
                w.trace("\twindow.context.type: " + a.stage.window.context.type, {
                    fileName: "InitDo.hx",
                    lineNumber: 229,
                    className: "bikas.top.InitDo",
                    methodName: "initializeAndStart"
                });
                w.trace("\twindow.scale: " + a.stage.window.get_scale(), {
                    fileName: "InitDo.hx",
                    lineNumber: 230,
                    className: "bikas.top.InitDo",
                    methodName: "initializeAndStart"
                });
                w.trace("\tstage.scaleX: " + a.stage.get_scaleX(), {
                    fileName: "InitDo.hx",
                    lineNumber: 231,
                    className: "bikas.top.InitDo",
                    methodName: "initializeAndStart"
                });
                w.trace("\tstage size:" + a.stage.stageWidth + ", h:" + a.stage.stageHeight, {
                    fileName: "InitDo.hx",
                    lineNumber: 232,
                    className: "bikas.top.InitDo",
                    methodName: "initializeAndStart"
                });
                w.trace("\tapplication window size:" + ia.get_application().get_window().get_width() + ", h:" + ia.get_application().get_window().get_height(), {
                    fileName: "InitDo.hx",
                    lineNumber: 233,
                    className: "bikas.top.InitDo",
                    methodName: "initializeAndStart"
                });
                w.trace("\tdevice pixel ratio: " + La.get_window().devicePixelRatio, {
                    fileName: "InitDo.hx",
                    lineNumber: 234,
                    className: "bikas.top.InitDo",
                    methodName: "initializeAndStart"
                });
                w.trace("\twindow.innerWidth: " + E.string(La.get_window().innerWidth), {
                    fileName: "InitDo.hx",
                    lineNumber: 235,
                    className: "bikas.top.InitDo",
                    methodName: "initializeAndStart"
                });
                w.trace("\twindow.innerHeight: " + E.string(La.get_window().innerHeight), {
                    fileName: "InitDo.hx",
                    lineNumber: 236,
                    className: "bikas.top.InitDo",
                    methodName: "initializeAndStart"
                });
                d = new St;
                d.config_type = oh.FlashDevelopment;
                d.target_type = lk.ForFlashGame;
                d.nodejs_server_save_path = "../assets/saves/";
                d.nodejs_save_current_working_files = !0;
                d.refresh_prefabs_with_undo = !1;
                w.trace("config type: " + E.string(e.type), {
                    fileName: "InitDo.hx",
                    lineNumber: 248,
                    className: "bikas.top.InitDo",
                    methodName: "initializeAndStart"
                });
                w.trace("platform type: " + E.string(e.platform_type), {
                    fileName: "InitDo.hx",
                    lineNumber: 249,
                    className: "bikas.top.InitDo",
                    methodName: "initializeAndStart"
                });
                e.type == db.FlashDevelopment && (w.trace("gameplay_type: " + E.string(e.development.gameplay_type), {
                    fileName: "InitDo.hx",
                    lineNumber: 251,
                    className: "bikas.top.InitDo",
                    methodName: "initializeAndStart"
                }), w.trace("editing timeline: " + e.development.current_editing_timeline_name, {
                    fileName: "InitDo.hx",
                    lineNumber: 252,
                    className: "bikas.top.InitDo",
                    methodName: "initializeAndStart"
                }));
                w.trace("admob_type: " + E.string(e.admob_type), {
                    fileName: "InitDo.hx",
                    lineNumber: 254,
                    className: "bikas.top.InitDo",
                    methodName: "initializeAndStart"
                });
                b = xa.start(Dd.StartAndEnd, "init");
                if (e.platform_type == Wf.Web) {
                    if (e.type != db.FlashDevelopment && e.type != db.FlashRelease && e.type != db.HTML5Development && e.type != db.HTML5Release) {
                        w.trace("error: config_type and platform_type mismatch", {
                            fileName: "InitDo.hx",
                            lineNumber: 266,
                            className: "bikas.top.InitDo",
                            methodName: "initializeAndStart"
                        });
                        return
                    }
                } else if ((e.platform_type == Wf.Android || e.platform_type == Wf.iOS) && e.type != db.MobileRelease) {
                    w.trace("error: config_type and platform_type mismatch", {
                        fileName: "InitDo.hx",
                        lineNumber: 274,
                        className: "bikas.top.InitDo",
                        methodName: "initializeAndStart"
                    });
                    return
                }
                if (e.type == db.FlashRelease) {
                    if (-1 != e.release.sitelock_types.indexOf(qe.BikasNet) && !Yn.checkDomain(a.stage, "bikas.net")) return
                } else if (!(e.type == db.HTML5Release && (c = !0, -1 != e.release.sitelock_types.indexOf(qe.BikasNet) && Yn.checkDomain(a.stage, "bikas.net") && (c = !1), -1 != e.release.sitelock_types.indexOf(qe.Poki) && (Yn.checkDomain(a.stage, "poki.com") && (c = !1), Yn.checkDomain(a.stage, "poki-gdn.com") && (c = !1)), c))) return;
                e.platform_type == Wf.Web && e.type == db.FlashRelease || e.type == db.FlashDevelopment ? (e.device_type = Ih.MouseDevice, w.trace("TODO: handle device detection for html5", {
                    fileName: "InitDo.hx",
                    lineNumber: 311,
                    className: "bikas.top.InitDo",
                    methodName: "initializeAndStart"
                })) : e.device_type = Ih.TouchDevice;
                ia.getTimer();
                f = V.createAndInitBitmapDataMap();
                var k = V.createAndInitBitmapDataAnimationMap(),
                    m = new fb,
                    g = new fb;
                xa.snapshot(b, "create objects");
                var l = null;
                l = e.type == db.FlashDevelopment ? Xf.init(!0, m, f,
                    g) : Xf.init(!1, m);
                xa.snapshot(b, "GameAssets.init");
                var n = new S,
                    p = new S,
                    x = new S,
                    u = new S;
                a.addChild(n);
                a.addChild(p);
                a.addChild(x);
                a.addChild(u);
                wg.init();
                c = null;
                var z = Ja.createEngineSerialData(e.type == db.FlashDevelopment),
                    q = [mf.NodeJSServer],
                    L = l.all_timelines[0].timeline_files;
                if (e.type == db.FlashDevelopment) {
                    for (var A = !1, Ka = 0, v = l.all_timelines; Ka < v.length;) {
                        var y = v[Ka];
                        ++Ka;
                        if (y.name == e.development.current_editing_timeline_name) {
                            L = y.timeline_files;
                            A = !0;
                            break
                        }
                    }
                    A || w.trace("warning: " + e.development.current_editing_timeline_name +
                        " timeline does not exist", {
                            fileName: "InitDo.hx",
                            lineNumber: 375,
                            className: "bikas.top.InitDo",
                            methodName: "initializeAndStart"
                        })
                }
                xa.snapshot(b, "create engine serial data");
                e.type == db.FlashDevelopment && (c = F.createEditor(n, x, f, k, q, d.refresh_prefabs_with_undo), xa.snapshot(b, "create editor"), c.bitmap_polygons_map = g, -1 != q.indexOf(mf.FlashSharedObject) ? (Ha.loadFromSharedObject(c, "stage", "library"), xa.snapshot(b, "load stage and library from shared object")) : -1 != q.indexOf(mf.NodeJSServer) && (F.loadStageAndLibraryDirectlyToEditor(c,
                    L.editor_stage_bytes, L.editor_library_bytes), xa.snapshot(b, "loadStageAndLibraryDirectlyToEditor")), null == c.stage_save && (F.overloadLibrary(c, F.createLibraryGroup(), F.createLibraryData(), F.createSerialSave("Library")), F.overloadStage(c, F.createStageGroup(), F.createSerialSave("Stage")), xa.snapshot(b, "overloadLibrary and overloadStage")), F.runEditor(c));
                d = Ha.createEngine(c, q, d.nodejs_save_current_working_files, d.nodejs_server_save_path, "");
                d.engine_serial_data = z;
                xa.snapshot(b, "create engine");
                e.type ==
                    db.FlashDevelopment && (d.library_engine_save = F.createSerialSave("Library"), d.stage_engine_save = F.createSerialSave("Stage"), xa.snapshot(b, "create engine serial saves"));
                d = D.createGame(c, d, e, z, p, u, f, k, m, l);
                rb.game = d;
                xa.snapshot(b, "create game");
                ql.createTrackers(d);
                xa.snapshot(b, "create extensions");
                if (e.type == db.FlashDevelopment) switch (d.container.set_visible(!1), d.debug_menu_container.set_visible(!1), Q.enumIndex(d.config.development.startup_type)) {
                    case 0:
                        d.running = !1;
                        break;
                    case 1:
                        D.closeEditorAndOpenMainMenu(d,
                            c);
                        xa.snapshot(b, "closeEditorAndOpenMainMenu");
                        break;
                    case 2:
                        D.closeEditorAndStartCustomLevel(d, c, d.config.development.startup_custom_level_name);
                        xa.snapshot(b, "closeEditorAndStartCustomLevel");
                        break;
                    case 3:
                        D.closeEditorAndOpenMainMenu(d, c), D.openWindow(d, ua.OpenLevelPack, Xf.findLevelPack(d.game_levels, d.config.development.startup_custom_level_pack_window_name)), xa.snapshot(b, "closeEditorAndOpenMainMenuAndWindow")
                } else if (e.type == db.HTML5Development) switch (Q.enumIndex(d.config.development.startup_type)) {
                    case 0:
                        w.trace("warning: DevelopmentStartupType.StartupEditor in HTML5 is not supported", {
                            fileName: "InitDo.hx",
                            lineNumber: 489,
                            className: "bikas.top.InitDo",
                            methodName: "initializeAndStart"
                        });
                        break;
                    case 1:
                        D.openMainMenu(d, !0);
                        xa.snapshot(b, "openMainMenu");
                        break;
                    case 2:
                        D.loadGameByLevelName(d, d.config.development.startup_custom_level_name);
                        xa.snapshot(b, "loadGameByLevelName");
                        break;
                    case 3:
                        D.openMainMenu(d, !1), D.openWindow(d, ua.OpenLevelPack, Xf.findLevelPack(d.game_levels, d.config.development.startup_custom_level_pack_window_name)), xa.snapshot(b, "closeEditorAndOpenMainMenuAndWindow")
                } else D.openMainMenu(d,
                    !0), xa.snapshot(b, "openMainMenu");
                d.html5_play_button = D.createAndPlaceHTML5PlayButton(d);
                d.html5_waiting_for_play_click = !0;
                e.type == db.HTML5Release && -1 != e.release.sitelock_types.indexOf(qe.Poki) && ah.poki_init_success && Af.PokiSDK.gameLoadingFinished();
                a.addEventListener("enterFrame", rb.update);
                a.stage.addEventListener("resize", rb.resize);
                xa.end(b)
            };
            rb.resize = function(a) {
                null != rb.game && (rb.resize_time = 10, a = rb.game.container.stage, w.trace("resize event, w:" + a.stageWidth + ", h:" + a.stageHeight, {
                    fileName: "InitDo.hx",
                    lineNumber: 622,
                    className: "bikas.top.InitDo",
                    methodName: "resize"
                }))
            };
            rb.update = function(a) {
                if (null != rb.game.html5_play_button) {
                    a = rb.game.size.width < rb.game.size.height ? rb.game.size.width / gc.default_size.height : rb.game.size.height / gc.default_size.height;
                    rb.game.html5_play_button_time += .016666666666666666;
                    var b = H.clamp0to1(rb.game.html5_play_button_time / .5),
                        c = ma.smoothForwardAndBackward(1, 1.1, b);
                    cb.setScaleToBitmap(rb.game.html5_play_button.background, rb.game.html5_play_button.background_source, a * c);
                    cb.setScaleToBitmap(rb.game.html5_play_button.foreground, rb.game.html5_play_button.foreground_source, a * c);
                    1 == b && (rb.game.html5_play_button_time = 0)
                }
                null != rb.game && (0 < rb.resize_time && (rb.resize_time--, 0 == rb.resize_time && (a = rb.game.container.stage, null != rb.game.html5_play_button && (b = rb.game.size.width < rb.game.size.height ? rb.game.size.width / gc.default_size.height : rb.game.size.height / gc.default_size.height, cb.setScaleToBitmap(rb.game.html5_play_button.background, rb.game.html5_play_button.background_source,
                        b), cb.setScaleToBitmap(rb.game.html5_play_button.foreground, rb.game.html5_play_button.foreground_source, b)), D.resizeGame(rb.game, a.stageWidth, a.stageHeight, !1))), a = rb.game.step, a.current_frame_timestamp = ia.getTimer(), a.delta = a.current_frame_timestamp - a.last_frame_timestamp, a.last_frame_timestamp = a.current_frame_timestamp, a.delta = H.clamp(a.delta, a.min_delta, a.max_delta), a.original_dc = a.delta / 16.666666666666668, a.dc = a.original_dc, a.step_size = .016666666666666666 * a.dc, a.elapsed_total_time += a.step_size,
                    D.update(rb.game))
            };
            rb.setOS = function(a) {
                var b = La.get_navigator().userAgent;
                (new Ga("Playstation Vita", "")).match(b) ? a.vita = !0 : (new Ga("Kindle", "")).match(b) || (new Ga("\\bKF[A-Z][A-Z]+", "")).match(b) || (new Ga("Silk.*Mobile Safari", "")).match(b) ? a.kindle = !0 : (new Ga("Android", "")).match(b) ? a.android = !0 : (new Ga("CrOS", "")).match(b) ? a.chromeOS = !0 : (new Ga("iP[ao]d|iPhone", "i")).match(b) ? a.iOS = !0 : (new Ga("Linux", "")).match(b) ? a.linux = !0 : (new Ga("Mac OS", "")).match(b) ? a.macOS = !0 : (new Ga("Windows", "")).match(b) &&
                    (a.windows = !0);
                if ((new Ga("Windows Phone", "i")).match(b) || (new Ga("IEMobile", "i")).match(b)) a.android = !1, a.iOS = !1, a.macOS = !1, a.windows = !0, a.windowsPhone = !0;
                var c = (new Ga("Silk", "")).match(b);
                if (a.windows || a.macOS || a.linux && !c || a.chromeOS) a.desktop = !0;
                if (a.windowsPhone || (new Ga("Windows NT", "i")).match(b) && (new Ga("Touch", "i")).match(b)) a.desktop = !1; - 1 < b.indexOf("Firefox") ? a.browser = hc.BrowserFirefox : -1 < b.indexOf("SamsungBrowser") ? a.browser = hc.BrowserSamsungBrowser : -1 < b.indexOf("Opera") || -1 < b.indexOf("OPR") ?
                    a.browser = hc.BrowserOpera : -1 < b.indexOf("Trident") ? a.browser = hc.BrowserInternetExplorer : -1 < b.indexOf("Edge") ? a.browser = hc.BrowserEdge : -1 < b.indexOf("Chrome") ? a.browser = hc.BrowserChrome : -1 < b.indexOf("Safari") ? a.browser = hc.BrowserSafari : a.browser = hc.BrowserUnknown
            };
            var Kq = function() {};
            g["extension.locale.Locale"] = Kq;
            Kq.__name__ = ["extension", "locale", "Locale"];
            Kq._getLangCode = function() {
                return La.get_window().navigator.language
            };
            Kq.getLangCode = function() {
                return ka.replace(Kq._getLangCode(), "_", "-")
            };
            var Sv =
                function() {
                    this.responseCount = 0
                };
            g["googleAnalytics.Campaign"] = Sv;
            Sv.__name__ = ["googleAnalytics", "Campaign"];
            Sv.prototype = {
                creationTime: null,
                responseCount: null,
                id: null,
                source: null,
                gClickId: null,
                dClickId: null,
                name: null,
                medium: null,
                term: null,
                content: null,
                getCreationTime: function() {
                    return this.creationTime
                },
                getResponseCount: function() {
                    return this.responseCount
                },
                increaseResponseCount: function(a) {
                    null == a && (a = 1);
                    this.responseCount += a
                },
                getId: function() {
                    return this.id
                },
                getSource: function() {
                    return this.source
                },
                getGClickId: function() {
                    return this.gClickId
                },
                getDClickId: function() {
                    return this.dClickId
                },
                getName: function() {
                    return this.name
                },
                getMedium: function() {
                    return this.medium
                },
                getTerm: function() {
                    return this.term
                },
                getContent: function() {
                    return this.content
                },
                __class__: Sv
            };
            var jo = function(a) {
                null == a && (a = !1);
                this.sitespeedSampleRate = 1;
                this.endPointPath = "/__utm.gif";
                this.endPointHost = "www.google-analytics.com";
                this.urlScheme = "http";
                this.errorSeverity = 2;
                this.setUrlScheme("http" + (a ? "s" : ""))
            };
            g["googleAnalytics.Config"] =
                jo;
            jo.__name__ = ["googleAnalytics", "Config"];
            jo.prototype = {
                errorSeverity: null,
                urlScheme: null,
                endPointHost: null,
                endPointPath: null,
                sitespeedSampleRate: null,
                getErrorSeverity: function() {
                    return this.errorSeverity
                },
                getUrlScheme: function() {
                    return this.urlScheme
                },
                setUrlScheme: function(a) {
                    return this.urlScheme = a
                },
                getEndPointHost: function() {
                    return this.endPointHost
                },
                getEndPointPath: function() {
                    return this.endPointPath
                },
                getSitespeedSampleRate: function() {
                    return this.sitespeedSampleRate
                },
                __class__: jo
            };
            var Tv = function() {
                this.scope =
                    3
            };
            g["googleAnalytics.CustomVariable"] = Tv;
            Tv.__name__ = ["googleAnalytics", "CustomVariable"];
            Tv.prototype = {
                index: null,
                name: null,
                value: null,
                scope: null,
                getIndex: function() {
                    return this.index
                },
                getName: function() {
                    return this.name
                },
                getValue: function() {
                    return this.value
                },
                getScope: function() {
                    return this.scope
                },
                __class__: Tv
            };
            var Lq = function(a) {
                this.date = null == a ? Math.round((new Date).getTime()) + "" : a
            };
            g["googleAnalytics.DateTime"] = Lq;
            Lq.__name__ = ["googleAnalytics", "DateTime"];
            Lq.prototype = {
                date: null,
                toString: function() {
                    return this.date
                },
                __class__: Lq
            };
            var Uv = function() {
                this.noninteraction = !1
            };
            g["googleAnalytics.Event"] = Uv;
            Uv.__name__ = ["googleAnalytics", "Event"];
            Uv.prototype = {
                category: null,
                action: null,
                label: null,
                value: null,
                noninteraction: null,
                validate: function() {
                    null != this.category && null != this.action || Bf._raiseError("Events need at least to have a category and action defined.", "Event.validate")
                },
                getCategory: function() {
                    return this.category
                },
                getAction: function() {
                    return this.action
                },
                getLabel: function() {
                    return this.label
                },
                getValue: function() {
                    return this.value
                },
                getNoninteraction: function() {
                    return this.noninteraction
                },
                __class__: Uv
            };
            var Yt = function(a) {
                this.setPath(a)
            };
            g["googleAnalytics.Page"] = Yt;
            Yt.__name__ = ["googleAnalytics", "Page"];
            Yt.prototype = {
                path: null,
                title: null,
                charset: null,
                referrer: null,
                loadTime: null,
                setPath: function(a) {
                    null != a && "/" != a.charAt(0) && Bf._raiseError('The page path should always start with a slash ("/").', "Page.setPath");
                    this.path = a
                },
                getPath: function() {
                    return this.path
                },
                setTitle: function(a) {
                    this.title = a
                },
                getTitle: function() {
                    return this.title
                },
                getCharset: function() {
                    return this.charset
                },
                getReferrer: function() {
                    return this.referrer
                },
                getLoadTime: function() {
                    return this.loadTime
                },
                __class__: Yt
            };
            var Zt = function() {
                this.setSessionId(this.generateSessionId());
                this.setTrackCount(0);
                this.setStartTime(new Lq)
            };
            g["googleAnalytics.Session"] = Zt;
            Zt.__name__ = ["googleAnalytics", "Session"];
            Zt.prototype = {
                sessionId: null,
                trackCount: null,
                startTime: null,
                generateSessionId: function() {
                    return Yf.generate32bitRandom()
                },
                getSessionId: function() {
                    return this.sessionId
                },
                setSessionId: function(a) {
                    this.sessionId = a
                },
                getTrackCount: function() {
                    return this.trackCount
                },
                setTrackCount: function(a) {
                    this.trackCount = a
                },
                increaseTrackCount: function(a) {
                    null == a && (a = 1);
                    this.trackCount += a
                },
                getStartTime: function() {
                    return this.startTime
                },
                setStartTime: function(a) {
                    this.startTime = a
                },
                __class__: Zt
            };
            var Ec = function() {};
            g["googleAnalytics.Stats"] = Ec;
            Ec.__name__ = ["googleAnalytics", "Stats"];
            Ec.init = function(a, b, c) {
                null == c && (c = !1);
                null == Ec.accountId && (Ec.accountId = a, Ec.domainName = b, Ec.tracker = new Bf(a,
                    b, new jo(c)), Ec.cache = new fb, Ec.session = new Zt, Ec.loadVisitor())
            };
            Ec.trackPageview = function(a, b) {
                var c = "page:" + a;
                Ec.cache.exists(c) || (a = new Yt(a), null != b && a.setTitle(b), Ec.cache.set(c, new $t(a, null)));
                Ec.track(c)
            };
            Ec.track = function(a) {
                Ec.paused || (Ec.cache.get(a).track(Ec.tracker, Ec.visitor, Ec.session), Ec.persistVisitor())
            };
            Ec.loadVisitor = function() {
                Ec.visitor = new Mq;
                var a = me.getLocal("ga-visitor");
                if (null != a.data && null != a.data.gaVisitor) try {
                    Ec.visitor = tf.run(a.data.gaVisitor)
                } catch (b) {
                    vb.lastException =
                        b, Ec.visitor = new Mq
                }
                Ec.visitor.setUserAgent("-not-set- [haxe]");
                Ec.visitor.setScreenResolution("" + hk.get_screenResolutionX() + "x" + hk.get_screenResolutionY());
                Ec.visitor.setLocale(Kq.getLangCode());
                Ec.visitor.getUniqueId();
                Ec.visitor.addSession(Ec.session);
                Ec.persistVisitor()
            };
            Ec.persistVisitor = function() {
                var a = me.getLocal("ga-visitor"),
                    b = Se.USE_CACHE;
                Se.USE_CACHE = !0;
                a.data.gaVisitor = Se.run(Ec.visitor);
                Se.USE_CACHE = b;
                try {
                    a.flush()
                } catch (c) {
                    vb.lastException = c, w.trace("No se puede salvar el Visitor de Google Analytics!", {
                        fileName: "Stats.hx",
                        lineNumber: 127,
                        className: "googleAnalytics.Stats",
                        methodName: "persistVisitor"
                    })
                }
            };
            var $t = function(a, b) {
                this.page = a;
                this.event = b
            };
            g["googleAnalytics._Stats.GATrackObject"] = $t;
            $t.__name__ = ["googleAnalytics", "_Stats", "GATrackObject"];
            $t.prototype = {
                event: null,
                page: null,
                track: function(a, b, c) {
                    null != this.page && a.trackPageview(this.page, c, b);
                    null != this.event && a.trackEvent(this.event, c, b)
                },
                __class__: $t
            };
            var Bf = function(a, b, c) {
                this.allowHash = !0;
                this.customVariables = [];
                Bf.setConfig(null !=
                    c ? c : new jo);
                this.setAccountId(a);
                this.setDomainName(b)
            };
            g["googleAnalytics.Tracker"] = Bf;
            Bf.__name__ = ["googleAnalytics", "Tracker"];
            Bf.setConfig = function(a) {
                Bf.config = a
            };
            Bf._raiseError = function(a, b) {
                a = b + "(): " + a;
                switch (null != Bf.config ? Bf.config.getErrorSeverity() : 0) {
                    case 1:
                        w.trace(a, {
                            fileName: "Tracker.hx",
                            lineNumber: 253,
                            className: "googleAnalytics.Tracker",
                            methodName: "_raiseError"
                        });
                        break;
                    case 2:
                        throw new Z(a);
                }
            };
            Bf.prototype = {
                accountId: null,
                domainName: null,
                allowHash: null,
                customVariables: null,
                campaign: null,
                setAccountId: function(a) {
                    (new Ga("^(UA|MO)-[0-9]*-[0-9]*$", "")).match(a) || Bf._raiseError('"' + a + '" is not a valid Google Analytics account ID.', "Tracker.setAccountId");
                    this.accountId = a
                },
                getAccountId: function() {
                    return this.accountId
                },
                setDomainName: function(a) {
                    this.domainName = a
                },
                getDomainName: function() {
                    return this.domainName
                },
                getAllowHash: function() {
                    return this.allowHash
                },
                getCustomVariables: function() {
                    return this.customVariables
                },
                getCampaign: function() {
                    return this.campaign
                },
                trackPageview: function(a,
                    b, c) {
                    var d = new Nq(Bf.config);
                    d.setPage(a);
                    d.setSession(b);
                    d.setVisitor(c);
                    d.setTracker(this);
                    d.send()
                },
                trackEvent: function(a, b, c) {
                    a.validate();
                    var d = new Oq(Bf.config);
                    d.setEvent(a);
                    d.setSession(b);
                    d.setVisitor(c);
                    d.setTracker(this);
                    d.send()
                },
                __class__: Bf
            };
            var Mq = function() {
                var a = new Lq;
                this.uniqueId = 0;
                this.setFirstVisitTime(a);
                this.setPreviousVisitTime(a);
                this.setCurrentVisitTime(a);
                this.setVisitCount(1)
            };
            g["googleAnalytics.Visitor"] = Mq;
            Mq.__name__ = ["googleAnalytics", "Visitor"];
            Mq.prototype = {
                uniqueId: null,
                firstVisitTime: null,
                previousVisitTime: null,
                currentVisitTime: null,
                visitCount: null,
                ipAddress: null,
                userAgent: null,
                locale: null,
                flashVersion: null,
                javaEnabled: null,
                screenColorDepth: null,
                screenResolution: null,
                generateHash: function() {
                    return Yf.generateHash(this.userAgent + this.screenResolution + this.screenColorDepth)
                },
                generateUniqueId: function() {
                    return (Yf.generate32bitRandom() ^ this.generateHash()) & 2147483647
                },
                getUniqueId: function() {
                    0 == this.uniqueId && (this.uniqueId = this.generateUniqueId());
                    return this.uniqueId
                },
                addSession: function(a) {
                    a = a.getStartTime();
                    a != this.currentVisitTime && (this.previousVisitTime = this.currentVisitTime, this.currentVisitTime = a, ++this.visitCount)
                },
                setFirstVisitTime: function(a) {
                    this.firstVisitTime = a
                },
                getFirstVisitTime: function() {
                    return this.firstVisitTime
                },
                setPreviousVisitTime: function(a) {
                    this.previousVisitTime = a
                },
                getPreviousVisitTime: function() {
                    return this.previousVisitTime
                },
                setCurrentVisitTime: function(a) {
                    this.currentVisitTime = a
                },
                getCurrentVisitTime: function() {
                    return this.currentVisitTime
                },
                setVisitCount: function(a) {
                    this.visitCount = a
                },
                getVisitCount: function() {
                    return this.visitCount
                },
                getIpAddress: function() {
                    return this.ipAddress
                },
                setUserAgent: function(a) {
                    this.userAgent = a
                },
                getUserAgent: function() {
                    return this.userAgent
                },
                setLocale: function(a) {
                    this.locale = a
                },
                getLocale: function() {
                    return this.locale
                },
                getFlashVersion: function() {
                    return this.flashVersion
                },
                getJavaEnabled: function() {
                    return this.javaEnabled
                },
                getScreenColorDepth: function() {
                    return this.screenColorDepth
                },
                setScreenResolution: function(a) {
                    this.screenResolution =
                        a
                },
                getScreenResolution: function() {
                    return this.screenResolution
                },
                __class__: Mq
            };
            var Pq = function() {
                this.utmwv = "5.2.5";
                this.utmr = this.utmcs = this.utmfl = this.utmje = "0"
            };
            g["googleAnalytics.internals.ParameterHolder"] = Pq;
            Pq.__name__ = ["googleAnalytics", "internals", "ParameterHolder"];
            Pq.prototype = {
                utmwv: null,
                utmac: null,
                utmhn: null,
                utmvid: null,
                utmt: null,
                utms: null,
                utmn: null,
                utmcc: null,
                utme: null,
                utmni: null,
                utmp: null,
                utmdt: null,
                utmcs: null,
                utmr: null,
                utmip: null,
                utmul: null,
                utmfl: null,
                utmje: null,
                utmsc: null,
                utmsr: null,
                __utma: null,
                utmhid: null,
                __utmb: null,
                __utmc: null,
                __utmz: null,
                __utmv: null,
                toQueryString: function() {
                    for (var a = "", b = 0, c = Q.getInstanceFields(Pq); b < c.length;) {
                        var d = c[b];
                        ++b;
                        "_" == d.charAt(0) || T.isFunction(T.field(this, d)) || null == T.field(this, d) || "null" == T.field(this, d) || (a += d + "=" + ka.replace(E.string(T.field(this, d)) + "", "&", "%26") + "&")
                    }
                    return a
                },
                __class__: Pq
            };
            var Yf = function() {};
            g["googleAnalytics.internals.Util"] = Yf;
            Yf.__name__ = ["googleAnalytics", "internals", "Util"];
            Yf.encodeUriComponent = function(a) {
                return Yf.convertToUriComponentEncoding(ka.urlEncode(a))
            };
            Yf.stringReplaceArray = function(a, b, c) {
                for (var d = 0, e = b.length; d < e;) {
                    var f = d++;
                    null != b[f] && (a = ka.replace(a + " ", b[f], c[f]))
                }
                return ka.trim(a)
            };
            Yf.convertToUriComponentEncoding = function(a) {
                return Yf.stringReplaceArray(a, "!*'() +".split(""), "%21 %2A %27 %28 %29 %20 %20".split(" "))
            };
            Yf.generate32bitRandom = function() {
                return Math.round(2147483647 * Math.random())
            };
            Yf.generateHash = function(a) {
                var b = 1;
                if (null != a && "" != a) {
                    b = 0;
                    for (var c = a.length - 1; 0 <= c;) {
                        var d = la.cca(a, c);
                        b = (b << 6 & 268435455) + d + (d << 14);
                        d = b & 266338304;
                        0 != d && (b ^= d >> 21);
                        --c
                    }
                }
                return b
            };
            var Qq = function() {
                this.projectData = new fb;
                this.KEY = "k";
                this.VALUE = "v";
                this.SET = ["k", "v"];
                this.DELIM_BEGIN = "(";
                this.DELIM_END = ")";
                this.DELIM_SET = "*";
                this.DELIM_NUM_VALUE = "!";
                this.MINIMUM = 1;
                this.ESCAPE_CHAR_MAP = new fb;
                this.ESCAPE_CHAR_MAP.set("'", "'0");
                this.ESCAPE_CHAR_MAP.set(")", "'1");
                this.ESCAPE_CHAR_MAP.set("*", "'2");
                this.ESCAPE_CHAR_MAP.set("!", "'3")
            };
            g["googleAnalytics.internals.X10"] = Qq;
            Qq.__name__ = ["googleAnalytics", "internals", "X10"];
            Qq.prototype = {
                projectData: null,
                KEY: null,
                VALUE: null,
                SET: null,
                DELIM_BEGIN: null,
                DELIM_END: null,
                DELIM_SET: null,
                DELIM_NUM_VALUE: null,
                ESCAPE_CHAR_MAP: null,
                MINIMUM: null,
                setKey: function(a, b, c) {
                    this.setInternal(a, this.KEY, b, c)
                },
                clearKey: function(a) {
                    this.clearInternal(a, this.KEY)
                },
                setValue: function(a, b, c) {
                    this.setInternal(a, this.VALUE, b, c)
                },
                clearValue: function(a) {
                    this.clearInternal(a, this.VALUE)
                },
                setInternal: function(a, b, c, d) {
                    this.projectData.exists(a) || this.projectData.set(a, new fb);
                    a = this.projectData.get(a);
                    a.exists(b) || a.set(b, []);
                    a.get(b)[c] =
                        d
                },
                clearInternal: function(a, b) {
                    this.projectData.exists(a) && this.projectData.get(a).exists(b) && this.projectData.get(a).remove(b)
                },
                escapeExtensibleValue: function(a) {
                    for (var b = "", c = 0, d = a.length; c < d;) {
                        var e = c++;
                        e = a.charAt(e);
                        b = this.ESCAPE_CHAR_MAP.exists(e) ? b + this.ESCAPE_CHAR_MAP.get(e) : b + e
                    }
                    return b
                },
                renderDataType: function(a) {
                    for (var b = [], c = 0, d = 0, e = a.length; d < e;) {
                        var f = d++,
                            h = a[f];
                        if (null != h) {
                            var k = "";
                            f != this.MINIMUM && f - 1 != c && (k += f, k += this.DELIM_NUM_VALUE);
                            k += this.escapeExtensibleValue(h);
                            b.push(k)
                        }
                        c =
                            f
                    }
                    return this.DELIM_BEGIN + b.join(this.DELIM_SET) + this.DELIM_END
                },
                renderProject: function(a) {
                    for (var b = "", c = !1, d = 0, e = this.SET.length; d < e;) {
                        var f = d++;
                        a.exists(this.SET[f]) ? (c && (b += this.SET[f]), b += this.renderDataType(a.get(this.SET[f])), c = !1) : c = !0
                    }
                    return b
                },
                renderUrlString: function() {
                    for (var a = "", b = this.projectData.keys(); b.hasNext();) {
                        var c = b.next();
                        a += c + this.renderProject(this.projectData.get(c))
                    }
                    return a
                },
                __class__: Qq
            };
            var Lh = function(a) {
                this.setConfig(null != a ? a : new jo)
            };
            g["googleAnalytics.internals.request.Request"] =
                Lh;
            Lh.__name__ = ["googleAnalytics", "internals", "request", "Request"];
            Lh.prototype = {
                config: null,
                userAgent: null,
                tracker: null,
                visitor: null,
                session: null,
                setConfig: function(a) {
                    this.config = a
                },
                setUserAgent: function(a) {
                    this.userAgent = a
                },
                setTracker: function(a) {
                    this.tracker = a
                },
                setVisitor: function(a) {
                    this.visitor = a
                },
                setSession: function(a) {
                    this.session = a
                },
                increaseTrackCount: function() {
                    this.session.increaseTrackCount();
                    500 < this.session.getTrackCount() && Bf._raiseError("Google Analytics does not guarantee to process more than 500 requests per session.",
                        "Request.buildHttpRequest");
                    null != this.tracker.getCampaign() && this.tracker.getCampaign().increaseResponseCount()
                },
                send: function() {
                    if (null != this.config.getEndPointHost()) {
                        var a = this.buildParameters();
                        null != this.visitor && (this.setUserAgent(this.visitor.getUserAgent()), a.utmvid = this.visitor.getUniqueId());
                        a = Yf.convertToUriComponentEncoding(a.toQueryString());
                        a = this.config.getUrlScheme() + "://" + this.config.getEndPointHost() + this.config.getEndPointPath() + "?" + a;
                        this.increaseTrackCount();
                        (new Image).src =
                            a
                    }
                },
                getType: function() {
                    return null
                },
                buildParameters: function() {
                    var a = new Pq;
                    a.utmac = this.tracker.getAccountId();
                    a.utmhn = this.tracker.getDomainName();
                    a.utmt = "" + this.getType();
                    a.utmn = Yf.generate32bitRandom();
                    a.utmip = this.visitor.getIpAddress();
                    a.utmhid = this.session.getSessionId();
                    a.utms = this.session.getTrackCount();
                    a = this.buildVisitorParameters(a);
                    a = this.buildCustomVariablesParameter(a);
                    a = this.buildCampaignParameters(a);
                    return a = this.buildCookieParameters(a)
                },
                buildVisitorParameters: function(a) {
                    null !=
                        this.visitor.getLocale() && (a.utmul = ka.replace(this.visitor.getLocale(), "_", "-").toLowerCase());
                    null != this.visitor.getFlashVersion() && (a.utmfl = this.visitor.getFlashVersion());
                    a.utmje = this.visitor.getJavaEnabled() ? "1" : "0";
                    null != this.visitor.getScreenColorDepth() && (a.utmsc = this.visitor.getScreenColorDepth() + "-bit");
                    a.utmsr = this.visitor.getScreenResolution();
                    return a
                },
                buildCustomVariablesParameter: function(a) {
                    var b = this.tracker.getCustomVariables();
                    if (null == b) return a;
                    5 < b.length && Bf._raiseError("The sum of all custom variables cannot exceed 5 in any given request.",
                        "Request.buildCustomVariablesParameter");
                    var c = new Qq;
                    c.clearKey("8");
                    c.clearKey("9");
                    c.clearKey("11");
                    for (var d = 0; d < b.length;) {
                        var e = b[d];
                        ++d;
                        var f = Yf.encodeUriComponent(e.getName());
                        var h = Yf.encodeUriComponent(e.getValue());
                        c.setKey("8", e.getIndex(), f);
                        c.setKey("9", e.getIndex(), h);
                        3 != e.getScope() && c.setKey("11", e.getIndex(), e.getScope())
                    }
                    b = c.renderUrlString();
                    null != b && (a.utme = null == a.utme ? b : a.utme + b);
                    return a
                },
                buildCookieParameters: function(a) {
                    var b = this.generateDomainHash();
                    a.__utma = b + ".";
                    a.__utma +=
                        this.visitor.getUniqueId() + ".";
                    a.__utma += this.visitor.getFirstVisitTime().toString() + ".";
                    a.__utma += this.visitor.getPreviousVisitTime().toString() + ".";
                    a.__utma += this.visitor.getCurrentVisitTime().toString() + ".";
                    a.__utma += this.visitor.getVisitCount();
                    a.__utmb = b + ".";
                    a.__utmb += this.session.getTrackCount() + ".";
                    a.__utmb += "10.";
                    a.__utmb += this.session.getStartTime().toString();
                    a.__utmc = b;
                    b = "__utma=" + a.__utma + ";";
                    null != a.__utmz && (b += "+__utmz=" + a.__utmz + ";");
                    null != a.__utmv && (b += "+__utmv=" + a.__utmv + ";");
                    a.utmcc =
                        b;
                    return a
                },
                buildCampaignParameters: function(a) {
                    var b = this.tracker.getCampaign();
                    if (null == b) return a;
                    a.__utmz = this.generateDomainHash() + ".";
                    a.__utmz += b.getCreationTime().toString() + ".";
                    a.__utmz += this.visitor.getVisitCount() + ".";
                    a.__utmz += b.getResponseCount() + ".";
                    b = "utmcid=" + b.getId() + "|utmcsr=" + b.getSource() + "|utmgclid=" + b.getGClickId() + "|utmdclid=" + b.getDClickId() + "|utmccn=" + b.getName() + "|utmcmd=" + b.getMedium() + "|utmctr=" + b.getTerm() + "|utmcct=" + b.getContent();
                    a.__utmz += ka.replace(ka.replace(b, "+",
                        "%20"), " ", "%20");
                    return a
                },
                generateDomainHash: function() {
                    var a = 1;
                    this.tracker.getAllowHash() && (a = Yf.generateHash(this.tracker.getDomainName()));
                    return a
                },
                __class__: Lh
            };
            var Oq = function(a) {
                Lh.call(this, a)
            };
            g["googleAnalytics.internals.request.EventRequest"] = Oq;
            Oq.__name__ = ["googleAnalytics", "internals", "request", "EventRequest"];
            Oq.__super__ = Lh;
            Oq.prototype = p(Lh.prototype, {
                event: null,
                getType: function() {
                    return "event"
                },
                buildParameters: function() {
                    var a = Lh.prototype.buildParameters.call(this),
                        b = new Qq;
                    b.clearKey("5");
                    b.clearValue("5");
                    b.setKey("5", 1, this.event.getCategory());
                    b.setKey("5", 2, this.event.getAction());
                    null != this.event.getLabel() && b.setKey("5", 3, this.event.getLabel());
                    0 != this.event.getValue() && b.setValue("5", 1, this.event.getValue());
                    b = b.renderUrlString();
                    null != b && (a.utme = null == a.utme ? b : a.utme + b);
                    this.event.getNoninteraction() && (a.utmni = 1);
                    return a
                },
                setEvent: function(a) {
                    this.event = a
                },
                __class__: Oq
            });
            var Nq = function(a) {
                Lh.call(this, a)
            };
            g["googleAnalytics.internals.request.PageviewRequest"] =
                Nq;
            Nq.__name__ = ["googleAnalytics", "internals", "request", "PageviewRequest"];
            Nq.__super__ = Lh;
            Nq.prototype = p(Lh.prototype, {
                page: null,
                getType: function() {
                    return null
                },
                buildParameters: function() {
                    var a = Lh.prototype.buildParameters.call(this);
                    a.utmp = this.page.getPath();
                    a.utmdt = this.page.getTitle();
                    null != this.page.getCharset() && (a.utmcs = this.page.getCharset());
                    null != this.page.getReferrer() && (a.utmr = this.page.getReferrer());
                    0 != this.page.getLoadTime() && a.utmn % 100 < this.config.getSitespeedSampleRate() && (a.utme =
                        null == a.utme ? "0" : a.utme + 0);
                    return a
                },
                setPage: function(a) {
                    this.page = a
                },
                __class__: Nq
            });
            var uf = g["haxe.StackItem"] = {
                __ename__: ["haxe", "StackItem"],
                __constructs__: ["CFunction", "Module", "FilePos", "Method", "LocalFunction"]
            };
            uf.CFunction = ["CFunction", 0];
            uf.CFunction.toString = l;
            uf.CFunction.__enum__ = uf;
            uf.Module = function(a) {
                a = ["Module", 1, a];
                a.__enum__ = uf;
                a.toString = l;
                return a
            };
            uf.FilePos = function(a, b, c) {
                a = ["FilePos", 2, a, b, c];
                a.__enum__ = uf;
                a.toString = l;
                return a
            };
            uf.Method = function(a, b) {
                a = ["Method", 3, a, b];
                a.__enum__ = uf;
                a.toString = l;
                return a
            };
            uf.LocalFunction = function(a) {
                a = ["LocalFunction", 4, a];
                a.__enum__ = uf;
                a.toString = l;
                return a
            };
            var vb = function() {};
            g["haxe.CallStack"] = vb;
            vb.__name__ = ["haxe", "CallStack"];
            vb.getStack = function(a) {
                if (null == a) return [];
                var b = Error.prepareStackTrace;
                Error.prepareStackTrace = function(a, b) {
                    a = [];
                    for (var c = 0; c < b.length;) {
                        var d = b[c];
                        ++c;
                        null != vb.wrapCallSite && (d = vb.wrapCallSite(d));
                        var h = null,
                            k = d.getFunctionName();
                        if (null != k) {
                            var m = k.lastIndexOf(".");
                            0 <= m && (h = la.substr(k, 0, m),
                                k = la.substr(k, m + 1, null), h = uf.Method(h, k))
                        }
                        a.push(uf.FilePos(h, d.getFileName(), d.getLineNumber()))
                    }
                    return a
                };
                a = vb.makeStack(a.stack);
                Error.prepareStackTrace = b;
                return a
            };
            vb.callStack = function() {
                try {
                    throw Error();
                } catch (b) {
                    vb.lastException = b;
                    b instanceof Z && (b = b.val);
                    var a = vb.getStack(b);
                    a.shift();
                    return a
                }
            };
            vb.exceptionStack = function() {
                return vb.getStack(vb.lastException)
            };
            vb.toString = function(a) {
                for (var b = new bj, c = 0; c < a.length;) {
                    var d = a[c];
                    ++c;
                    b.add("\nCalled from ");
                    vb.itemToString(b, d)
                }
                return b.toString()
            };
            vb.itemToString = function(a, b) {
                switch (Q.enumIndex(b)) {
                    case 0:
                        a.add("a C function");
                        break;
                    case 1:
                        b = b[2];
                        a.add("module ");
                        a.add(b);
                        break;
                    case 2:
                        var c = b[4],
                            d = b[3];
                        b = b[2];
                        null != b && (vb.itemToString(a, b), a.add(" ("));
                        a.add(d);
                        a.add(" line ");
                        a.add(c);
                        null != b && a.add(")");
                        break;
                    case 3:
                        c = b[3];
                        a.add(b[2]);
                        a.add(".");
                        a.add(c);
                        break;
                    case 4:
                        b = b[2], a.add("local function #"), a.add(b)
                }
            };
            vb.makeStack = function(a) {
                if (null == a) return [];
                if ("string" == typeof a) {
                    a = a.split("\n");
                    "Error" == a[0] && a.shift();
                    for (var b = [], c = new Ga("^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$",
                            ""), d = 0; d < a.length;) {
                        var e = a[d];
                        ++d;
                        if (c.match(e)) {
                            e = c.matched(1).split(".");
                            var f = e.pop(),
                                h = c.matched(2),
                                k = E.parseInt(c.matched(3));
                            b.push(uf.FilePos("Anonymous function" == f ? uf.LocalFunction() : "Global code" == f ? null : uf.Method(e.join("."), f), h, k))
                        } else b.push(uf.Module(ka.trim(e)))
                    }
                    return b
                }
                return a
            };
            var Db = function(a, b) {
                this.high = a;
                this.low = b
            };
            g["haxe._Int64.___Int64"] = Db;
            Db.__name__ = ["haxe", "_Int64", "___Int64"];
            Db.prototype = {
                high: null,
                low: null,
                __class__: Db
            };
            var w = function() {};
            g["haxe.Log"] = w;
            w.__name__ = ["haxe", "Log"];
            w.trace = function(a, b) {
                aa.__trace(a, b)
            };
            var Se = function() {
                this.buf = new bj;
                this.cache = [];
                this.useCache = Se.USE_CACHE;
                this.useEnumIndex = Se.USE_ENUM_INDEX;
                this.shash = new fb;
                this.scount = 0
            };
            g["haxe.Serializer"] = Se;
            Se.__name__ = ["haxe", "Serializer"];
            Se.run = function(a) {
                var b = new Se;
                b.serialize(a);
                return b.toString()
            };
            Se.prototype = {
                buf: null,
                cache: null,
                shash: null,
                scount: null,
                useCache: null,
                useEnumIndex: null,
                toString: function() {
                    return this.buf.toString()
                },
                serializeString: function(a) {
                    var b = this.shash.get(a);
                    null != b ? (this.buf.add("R"), this.buf.add(b)) : (this.shash.set(a, this.scount++), this.buf.add("y"), a = ka.urlEncode(a), this.buf.add(a.length), this.buf.add(":"), this.buf.add(a))
                },
                serializeRef: function(a) {
                    for (var b = typeof a, c = 0, d = this.cache.length; c < d;) {
                        var e = c++,
                            f = this.cache[e];
                        if (typeof f == b && f == a) return this.buf.add("r"), this.buf.add(e), !0
                    }
                    this.cache.push(a);
                    return !1
                },
                serializeFields: function(a) {
                    for (var b = 0, c = T.fields(a); b < c.length;) {
                        var d = c[b];
                        ++b;
                        this.serializeString(d);
                        this.serialize(T.field(a, d))
                    }
                    this.buf.add("g")
                },
                serialize: function(a) {
                    var b = Q["typeof"](a);
                    switch (Q.enumIndex(b)) {
                        case 0:
                            this.buf.add("n");
                            break;
                        case 1:
                            if (0 == a) {
                                this.buf.add("z");
                                break
                            }
                            this.buf.add("i");
                            this.buf.add(a);
                            break;
                        case 2:
                            isNaN(a) ? this.buf.add("k") : isFinite(a) ? (this.buf.add("d"), this.buf.add(a)) : this.buf.add(0 > a ? "m" : "p");
                            break;
                        case 3:
                            this.buf.add(a ? "t" : "f");
                            break;
                        case 4:
                            E.is(a, Ow) ? (a = Q.getClassName(a), this.buf.add("A"), this.serializeString(a)) : E.is(a, Pw) ? (this.buf.add("B"), this.serializeString(Q.getEnumName(a))) : this.useCache && this.serializeRef(a) ||
                                (this.buf.add("o"), this.serializeFields(a));
                            break;
                        case 5:
                            throw new Z("Cannot serialize function");
                        case 6:
                            b = b[2];
                            if (b == String) {
                                this.serializeString(a);
                                break
                            }
                            if (this.useCache && this.serializeRef(a)) break;
                            switch (b) {
                                case Array:
                                    b = 0;
                                    this.buf.add("a");
                                    for (var c = 0, d = a.length; c < d;) {
                                        var e = c++;
                                        null == a[e] ? ++b : (0 < b && (1 == b ? this.buf.add("n") : (this.buf.add("u"), this.buf.add(b)), b = 0), this.serialize(a[e]))
                                    }
                                    0 < b && (1 == b ? this.buf.add("n") : (this.buf.add("u"), this.buf.add(b)));
                                    this.buf.add("h");
                                    break;
                                case Date:
                                    this.buf.add("v");
                                    this.buf.add(a.getTime());
                                    break;
                                case Qb:
                                    this.buf.add("l");
                                    for (a = a.iterator(); a.hasNext();) b = a.next(), this.serialize(b);
                                    this.buf.add("h");
                                    break;
                                case we:
                                    this.buf.add("q");
                                    for (b = a.keys(); b.hasNext();) c = b.next(), this.buf.add(":"), this.buf.add(c), this.serialize(a.get(c));
                                    this.buf.add("h");
                                    break;
                                case Qa:
                                    this.buf.add("M");
                                    for (b = a.keys(); b.hasNext();) c = b.next(), d = T.field(c, "__id__"), T.deleteField(c, "__id__"), this.serialize(c), T.setField(c, "__id__", d), this.serialize(a.get(c));
                                    this.buf.add("h");
                                    break;
                                case fb:
                                    this.buf.add("b");
                                    for (b = a.keys(); b.hasNext();) c = b.next(), this.serializeString(c), this.serialize(a.get(c));
                                    this.buf.add("h");
                                    break;
                                case ub:
                                    this.buf.add("s");
                                    this.buf.add(Math.ceil(8 * a.length / 6));
                                    this.buf.add(":");
                                    c = 0;
                                    d = a.length - 2;
                                    b = Se.BASE64_CODES;
                                    if (null == b) {
                                        b = Array(Se.BASE64.length);
                                        e = 0;
                                        for (var f = Se.BASE64.length; e < f;) {
                                            var h = e++;
                                            b[h] = la.cca(Se.BASE64, h)
                                        }
                                        Se.BASE64_CODES = b
                                    }
                                    for (; c < d;) e = a.get(c++), f = a.get(c++), h = a.get(c++), this.buf.addChar(b[e >> 2]), this.buf.addChar(b[(e << 4 | f >> 4) & 63]), this.buf.addChar(b[(f << 2 | h >> 6) & 63]),
                                        this.buf.addChar(b[h & 63]);
                                    c == d ? (d = a.get(c++), a = a.get(c++), this.buf.addChar(b[d >> 2]), this.buf.addChar(b[(d << 4 | a >> 4) & 63]), this.buf.addChar(b[a << 2 & 63])) : c == d + 1 && (a = a.get(c++), this.buf.addChar(b[a >> 2]), this.buf.addChar(b[a << 4 & 63]));
                                    break;
                                default:
                                    this.useCache && this.cache.pop(), null != a.hxSerialize ? (this.buf.add("C"), this.serializeString(Q.getClassName(b)), this.useCache && this.cache.push(a), a.hxSerialize(this), this.buf.add("g")) : (this.buf.add("c"), this.serializeString(Q.getClassName(b)), this.useCache && this.cache.push(a),
                                        this.serializeFields(a))
                            }
                            break;
                        case 7:
                            b = b[2];
                            if (this.useCache) {
                                if (this.serializeRef(a)) break;
                                this.cache.pop()
                            }
                            this.buf.add(this.useEnumIndex ? "j" : "w");
                            this.serializeString(Q.getEnumName(b));
                            this.useEnumIndex ? (this.buf.add(":"), this.buf.add(a[1])) : this.serializeString(a[0]);
                            this.buf.add(":");
                            b = a.length;
                            this.buf.add(b - 2);
                            for (c = 2; c < b;) d = c++, this.serialize(a[d]);
                            this.useCache && this.cache.push(a);
                            break;
                        default:
                            throw new Z("Cannot serialize " + E.string(a));
                    }
                },
                __class__: Se
            };
            var Mh = function(a) {
                var b = this;
                this.id =
                    setInterval(function() {
                        b.run()
                    }, a)
            };
            g["haxe.Timer"] = Mh;
            Mh.__name__ = ["haxe", "Timer"];
            Mh.delay = function(a, b) {
                var c = new Mh(b);
                c.run = function() {
                    c.stop();
                    a()
                };
                return c
            };
            Mh.stamp = function() {
                return (new Date).getTime() / 1E3
            };
            Mh.prototype = {
                id: null,
                stop: function() {
                    null != this.id && (clearInterval(this.id), this.id = null)
                },
                run: function() {},
                __class__: Mh
            };
            var Rq = function() {};
            g["haxe._Unserializer.DefaultResolver"] = Rq;
            Rq.__name__ = ["haxe", "_Unserializer", "DefaultResolver"];
            Rq.prototype = {
                resolveClass: function(a) {
                    return Q.resolveClass(a)
                },
                resolveEnum: function(a) {
                    return Q.resolveEnum(a)
                },
                __class__: Rq
            };
            var tf = function(a) {
                this.buf = a;
                this.length = a.length;
                this.pos = 0;
                this.scache = [];
                this.cache = [];
                a = tf.DEFAULT_RESOLVER;
                null == a && (a = new Rq, tf.DEFAULT_RESOLVER = a);
                this.resolver = a
            };
            g["haxe.Unserializer"] = tf;
            tf.__name__ = ["haxe", "Unserializer"];
            tf.initCodes = function() {
                for (var a = [], b = 0, c = tf.BASE64.length; b < c;) {
                    var d = b++;
                    a[ka.fastCodeAt(tf.BASE64, d)] = d
                }
                return a
            };
            tf.run = function(a) {
                return (new tf(a)).unserialize()
            };
            tf.prototype = {
                buf: null,
                pos: null,
                length: null,
                cache: null,
                scache: null,
                resolver: null,
                setResolver: function(a) {
                    this.resolver = null == a ? oj.get_instance() : a
                },
                get: function(a) {
                    return ka.fastCodeAt(this.buf, a)
                },
                readDigits: function() {
                    for (var a = 0, b = !1, c = this.pos;;) {
                        var d = this.get(this.pos);
                        if (ka.isEof(d)) break;
                        if (45 == d) {
                            if (this.pos != c) break;
                            b = !0
                        } else {
                            if (48 > d || 57 < d) break;
                            a = 10 * a + (d - 48)
                        }
                        this.pos++
                    }
                    b && (a *= -1);
                    return a
                },
                readFloat: function() {
                    for (var a = this.pos;;) {
                        var b = this.get(this.pos);
                        if (ka.isEof(b)) break;
                        if (43 <= b && 58 > b || 101 == b || 69 == b) this.pos++;
                        else break
                    }
                    return E.parseFloat(la.substr(this.buf,
                        a, this.pos - a))
                },
                unserializeObject: function(a) {
                    for (;;) {
                        if (this.pos >= this.length) throw new Z("Invalid object");
                        if (103 == this.get(this.pos)) break;
                        var b = this.unserialize();
                        if ("string" != typeof b) throw new Z("Invalid object key");
                        var c = this.unserialize();
                        T.setField(a, b, c)
                    }
                    this.pos++
                },
                unserializeEnum: function(a, b) {
                    if (58 != this.get(this.pos++)) throw new Z("Invalid enum format");
                    var c = this.readDigits();
                    if (0 == c) return Q.createEnum(a, b);
                    for (var d = []; 0 < c--;) d.push(this.unserialize());
                    return Q.createEnum(a, b, d)
                },
                unserialize: function() {
                    switch (this.get(this.pos++)) {
                        case 65:
                            var a = this.unserialize(),
                                b = this.resolver.resolveClass(a);
                            if (null == b) throw new Z("Class not found " + a);
                            return b;
                        case 66:
                            a = this.unserialize();
                            b = this.resolver.resolveEnum(a);
                            if (null == b) throw new Z("Enum not found " + a);
                            return b;
                        case 67:
                            a = this.unserialize();
                            b = this.resolver.resolveClass(a);
                            if (null == b) throw new Z("Class not found " + a);
                            a = Q.createEmptyInstance(b);
                            this.cache.push(a);
                            a.hxUnserialize(this);
                            if (103 != this.get(this.pos++)) throw new Z("Invalid custom data");
                            return a;
                        case 77:
                            a = new Qa;
                            for (this.cache.push(a); 104 != this.get(this.pos);) b = this.unserialize(), a.set(b, this.unserialize());
                            this.pos++;
                            return a;
                        case 82:
                            a = this.readDigits();
                            if (0 > a || a >= this.scache.length) throw new Z("Invalid string reference");
                            return this.scache[a];
                        case 97:
                            a = [];
                            for (this.cache.push(a);;) {
                                b = this.get(this.pos);
                                if (104 == b) {
                                    this.pos++;
                                    break
                                }
                                117 == b ? (this.pos++, b = this.readDigits(), a[a.length + b - 1] = null) : a.push(this.unserialize())
                            }
                            return a;
                        case 98:
                            a = new fb;
                            for (this.cache.push(a); 104 != this.get(this.pos);) b =
                                this.unserialize(), a.set(b, this.unserialize());
                            this.pos++;
                            return a;
                        case 99:
                            a = this.unserialize();
                            b = this.resolver.resolveClass(a);
                            if (null == b) throw new Z("Class not found " + a);
                            a = Q.createEmptyInstance(b);
                            this.cache.push(a);
                            this.unserializeObject(a);
                            return a;
                        case 100:
                            return this.readFloat();
                        case 102:
                            return !1;
                        case 105:
                            return this.readDigits();
                        case 106:
                            a = this.unserialize();
                            b = this.resolver.resolveEnum(a);
                            if (null == b) throw new Z("Enum not found " + a);
                            this.pos++;
                            var c = this.readDigits(),
                                d = Q.getEnumConstructs(b)[c];
                            if (null == d) throw new Z("Unknown enum index " + a + "@" + c);
                            a = this.unserializeEnum(b, d);
                            this.cache.push(a);
                            return a;
                        case 107:
                            return NaN;
                        case 108:
                            a = new Qb;
                            for (this.cache.push(a); 104 != this.get(this.pos);) a.add(this.unserialize());
                            this.pos++;
                            return a;
                        case 109:
                            return -Infinity;
                        case 110:
                            return null;
                        case 111:
                            return a = {}, this.cache.push(a), this.unserializeObject(a), a;
                        case 112:
                            return Infinity;
                        case 113:
                            a = new we;
                            this.cache.push(a);
                            for (b = this.get(this.pos++); 58 == b;) b = this.readDigits(), a.set(b, this.unserialize()), b =
                                this.get(this.pos++);
                            if (104 != b) throw new Z("Invalid IntMap format");
                            return a;
                        case 114:
                            a = this.readDigits();
                            if (0 > a || a >= this.cache.length) throw new Z("Invalid reference");
                            return this.cache[a];
                        case 115:
                            a = this.readDigits();
                            d = this.buf;
                            if (58 != this.get(this.pos++) || this.length - this.pos < a) throw new Z("Invalid bytes length");
                            var e = tf.CODES;
                            null == e && (e = tf.initCodes(), tf.CODES = e);
                            var f = this.pos,
                                h = a & 3,
                                k = f + (a - h);
                            b = ub.alloc(3 * (a >> 2) + (2 <= h ? h - 1 : 0));
                            for (c = 0; f < k;) {
                                var m = e[ka.fastCodeAt(d, f++)],
                                    g = e[ka.fastCodeAt(d, f++)];
                                b.set(c++, m << 2 | g >> 4);
                                m = e[ka.fastCodeAt(d, f++)];
                                b.set(c++, g << 4 | m >> 2);
                                g = e[ka.fastCodeAt(d, f++)];
                                b.set(c++, m << 6 | g)
                            }
                            2 <= h && (g = e[ka.fastCodeAt(d, f++)], k = e[ka.fastCodeAt(d, f++)], b.set(c++, g << 2 | k >> 4), 3 == h && (d = e[ka.fastCodeAt(d, f++)], b.set(c++, k << 4 | d >> 2)));
                            this.pos += a;
                            this.cache.push(b);
                            return b;
                        case 116:
                            return !0;
                        case 118:
                            return 48 <= this.get(this.pos) && 57 >= this.get(this.pos) && 48 <= this.get(this.pos + 1) && 57 >= this.get(this.pos + 1) && 48 <= this.get(this.pos + 2) && 57 >= this.get(this.pos + 2) && 48 <= this.get(this.pos + 3) && 57 >=
                                this.get(this.pos + 3) && 45 == this.get(this.pos + 4) ? (a = la.strDate(la.substr(this.buf, this.pos, 19)), this.pos += 19) : (a = this.readFloat(), a = new Date(a)), this.cache.push(a), a;
                        case 119:
                            a = this.unserialize();
                            b = this.resolver.resolveEnum(a);
                            if (null == b) throw new Z("Enum not found " + a);
                            a = this.unserializeEnum(b, this.unserialize());
                            this.cache.push(a);
                            return a;
                        case 120:
                            throw Z.wrap(this.unserialize());
                        case 121:
                            a = this.readDigits();
                            if (58 != this.get(this.pos++) || this.length - this.pos < a) throw new Z("Invalid string length");
                            b = la.substr(this.buf, this.pos, a);
                            this.pos += a;
                            b = ka.urlDecode(b);
                            this.scache.push(b);
                            return b;
                        case 122:
                            return 0
                    }
                    this.pos--;
                    throw new Z("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
                },
                __class__: tf
            };
            var oj = function() {};
            g["haxe._Unserializer.NullResolver"] = oj;
            oj.__name__ = ["haxe", "_Unserializer", "NullResolver"];
            oj.get_instance = function() {
                null == oj.instance && (oj.instance = new oj);
                return oj.instance
            };
            oj.prototype = {
                resolveClass: function(a) {
                    return null
                },
                resolveEnum: function(a) {
                    return null
                },
                __class__: oj
            };
            var Vv = function() {};
            g["haxe.Utf8"] = Vv;
            Vv.__name__ = ["haxe", "Utf8"];
            Vv.sub = function(a, b, c) {
                return la.substr(a, b, c)
            };
            var sl = function() {
                this.a1 = 1;
                this.a2 = 0
            };
            g["haxe.crypto.Adler32"] = sl;
            sl.__name__ = ["haxe", "crypto", "Adler32"];
            sl.read = function(a) {
                var b = new sl,
                    c = a.readByte(),
                    d = a.readByte(),
                    e = a.readByte();
                a = a.readByte();
                b.a1 = e << 8 | a;
                b.a2 = c << 8 | d;
                return b
            };
            sl.prototype = {
                a1: null,
                a2: null,
                update: function(a, b, c) {
                    var d = this.a1,
                        e = this.a2,
                        f = b;
                    for (b += c; f < b;) c = f++, c = a.get(c), d = (d + c) % 65521, e = (e + d) % 65521;
                    this.a1 = d;
                    this.a2 = e
                },
                equals: function(a) {
                    return a.a1 == this.a1 ? a.a2 == this.a2 : !1
                },
                __class__: sl
            };
            var ub = function(a) {
                this.length = a.byteLength;
                this.b = new Cf(a);
                this.b.bufferValue = a;
                a.hxBytes = this;
                a.bytes = this.b
            };
            g["haxe.io.Bytes"] = ub;
            ub.__name__ = ["haxe", "io", "Bytes"];
            ub.alloc = function(a) {
                return new ub(new Ng(a))
            };
            ub.ofString = function(a, b) {
                b = [];
                for (var c = 0; c < a.length;) {
                    var d = ka.fastCodeAt(a, c++);
                    55296 <= d && 56319 >= d && (d = d - 55232 << 10 | ka.fastCodeAt(a, c++) & 1023);
                    127 >= d ? b.push(d) : (2047 >= d ? b.push(192 | d >> 6) : (65535 >=
                        d ? b.push(224 | d >> 12) : (b.push(240 | d >> 18), b.push(128 | d >> 12 & 63)), b.push(128 | d >> 6 & 63)), b.push(128 | d & 63))
                }
                return new ub((new Cf(b)).buffer)
            };
            ub.ofData = function(a) {
                var b = a.hxBytes;
                return null != b ? b : new ub(a)
            };
            ub.ofHex = function(a) {
                if (0 != (a.length & 1)) throw new Z("Not a hex string (odd number of digits)");
                for (var b = [], c = 0, d = a.length >> 1; c < d;) {
                    var e = ka.fastCodeAt(a, 2 * c),
                        f = ka.fastCodeAt(a, 2 * c + 1);
                    e = (e & 15) + 9 * ((e & 64) >> 6);
                    f = (f & 15) + 9 * ((f & 64) >> 6);
                    b.push((e << 4 | f) & 255);
                    ++c
                }
                return new ub((new Cf(b)).buffer)
            };
            ub.fastGet =
                function(a, b) {
                    return a.bytes[b]
                };
            ub.prototype = {
                length: null,
                b: null,
                data: null,
                get: function(a) {
                    return this.b[a]
                },
                set: function(a, b) {
                    this.b[a] = b & 255
                },
                blit: function(a, b, c, d) {
                    if (0 > a || 0 > c || 0 > d || a + d > this.length || c + d > b.length) throw new Z(se.OutsideBounds);
                    0 == c && d == b.b.byteLength ? this.b.set(b.b, a) : this.b.set(b.b.subarray(c, c + d), a)
                },
                initData: function() {
                    null == this.data && (this.data = new bx(this.b.buffer, this.b.byteOffset, this.b.byteLength))
                },
                getDouble: function(a) {
                    this.initData();
                    return this.data.getFloat64(a, !0)
                },
                setDouble: function(a, b) {
                    this.initData();
                    this.data.setFloat64(a, b, !0)
                },
                getUInt16: function(a) {
                    this.initData();
                    return this.data.getUint16(a, !0)
                },
                setUInt16: function(a, b) {
                    this.initData();
                    this.data.setUint16(a, b, !0)
                },
                getInt32: function(a) {
                    this.initData();
                    return this.data.getInt32(a, !0)
                },
                setInt32: function(a, b) {
                    this.initData();
                    this.data.setInt32(a, b, !0)
                },
                getString: function(a, b, c) {
                    if (0 > a || 0 > b || a + b > this.length) throw new Z(se.OutsideBounds);
                    c = "";
                    var d = this.b,
                        e = String.fromCharCode,
                        f = a;
                    for (a += b; f < a;)
                        if (b = d[f++],
                            128 > b) {
                            if (0 == b) break;
                            c += e(b)
                        } else if (224 > b) c += e((b & 63) << 6 | d[f++] & 127);
                    else if (240 > b) {
                        var h = d[f++];
                        c += e((b & 31) << 12 | (h & 127) << 6 | d[f++] & 127)
                    } else {
                        h = d[f++];
                        var k = d[f++];
                        b = (b & 15) << 18 | (h & 127) << 12 | (k & 127) << 6 | d[f++] & 127;
                        c += e((b >> 10) + 55232);
                        c += e(b & 1023 | 56320)
                    }
                    return c
                },
                toString: function() {
                    return this.getString(0, this.length)
                },
                getData: function() {
                    return this.b.bufferValue
                },
                __class__: ub
            };
            var Mc = function() {};
            g["haxe.crypto.Base64"] = Mc;
            Mc.__name__ = ["haxe", "crypto", "Base64"];
            Mc.encode = function(a, b) {
                null == b && (b = !0);
                var c = (new Sq(Mc.BYTES)).encodeBytes(a).toString();
                if (b) switch (a.length % 3) {
                    case 1:
                        c += "==";
                        break;
                    case 2:
                        c += "="
                }
                return c
            };
            Mc.decode = function(a, b) {
                null == b && (b = !0);
                if (b)
                    for (; 61 == la.cca(a, a.length - 1);) a = la.substr(a, 0, -1);
                return (new Sq(Mc.BYTES)).decodeBytes(ub.ofString(a))
            };
            var Sq = function(a) {
                for (var b = a.length, c = 1; b > 1 << c;) ++c;
                if (8 < c || b != 1 << c) throw new Z("BaseCode : base length must be a power of two.");
                this.base = a;
                this.nbits = c
            };
            g["haxe.crypto.BaseCode"] = Sq;
            Sq.__name__ = ["haxe", "crypto", "BaseCode"];
            Sq.prototype = {
                base: null,
                nbits: null,
                tbl: null,
                encodeBytes: function(a) {
                    for (var b = this.nbits, c = this.base, d = E["int"](8 * a.length / b), e = ub.alloc(d + (0 == 8 * a.length % b ? 0 : 1)), f = 0, h = 0, k = (1 << b) - 1, m = 0, g = 0; g < d;) {
                        for (; h < b;) h += 8, f <<= 8, f |= a.get(m++);
                        h -= b;
                        e.set(g++, c.get(f >> h & k))
                    }
                    0 < h && e.set(g++, c.get(f << b - h & k));
                    return e
                },
                initTable: function() {
                    for (var a = [], b = 0; 256 > b;) {
                        var c = b++;
                        a[c] = -1
                    }
                    b = 0;
                    for (c = this.base.length; b < c;) {
                        var d = b++;
                        a[this.base.get(d)] = d
                    }
                    this.tbl = a
                },
                decodeBytes: function(a) {
                    var b = this.nbits;
                    null == this.tbl && this.initTable();
                    for (var c = this.tbl, d = a.length * b >> 3, e = ub.alloc(d), f = 0, h = 0, k = 0, m = 0; m < d;) {
                        for (; 8 > h;) {
                            h += b;
                            f <<= b;
                            var g = c[a.get(k++)];
                            if (-1 == g) throw new Z("BaseCode : invalid encoded char");
                            f |= g
                        }
                        h -= 8;
                        e.set(m++, f >> h & 255)
                    }
                    return e
                },
                __class__: Sq
            };
            var Fd = function() {};
            g["haxe.ds.ArraySort"] = Fd;
            Fd.__name__ = ["haxe", "ds", "ArraySort"];
            Fd.sort = function(a, b) {
                Fd.rec(a, b, 0, a.length)
            };
            Fd.rec = function(a, b, c, d) {
                var e = c + d >> 1;
                if (12 > d - c) {
                    if (!(d <= c))
                        for (e = c + 1; e < d;)
                            for (var f = e++; f > c;) {
                                if (0 > Fd.compare(a, b, f, f - 1)) Fd.swap(a, f - 1, f);
                                else break;
                                --f
                            }
                } else Fd.rec(a, b, c, e), Fd.rec(a, b, e, d), Fd.doMerge(a, b, c, e, d, e - c, d - e)
            };
            Fd.doMerge = function(a, b, c, d, e, f, h) {
                if (0 != f && 0 != h)
                    if (2 == f + h) 0 > Fd.compare(a, b, d, c) && Fd.swap(a, d, c);
                    else {
                        if (f > h) {
                            var k = f >> 1;
                            var m = c + k;
                            var g = Fd.lower(a, b, d, e, m);
                            var l = g - d
                        } else l = h >> 1, g = d + l, m = Fd.upper(a, b, c, d, g), k = m - c;
                        Fd.rotate(a, b, m, d, g);
                        d = m + l;
                        Fd.doMerge(a, b, c, m, d, k, l);
                        Fd.doMerge(a, b, d, g, e, f - k, h - l)
                    }
            };
            Fd.rotate = function(a, b, c, d, e) {
                if (c != d && d != e)
                    for (b = Fd.gcd(e - c, d - c); 0 != b--;) {
                        for (var f = a[c + b], h = d - c, k = c + b, m = c + b + h; m != c + b;) a[k] = a[m],
                            k = m, m = e - m > h ? m + h : c + (h - (e - m));
                        a[k] = f
                    }
            };
            Fd.gcd = function(a, b) {
                for (; 0 != b;) {
                    var c = a % b;
                    a = b;
                    b = c
                }
                return a
            };
            Fd.upper = function(a, b, c, d, e) {
                d -= c;
                for (var f, h; 0 < d;) f = d >> 1, h = c + f, 0 > Fd.compare(a, b, e, h) ? d = f : (c = h + 1, d = d - f - 1);
                return c
            };
            Fd.lower = function(a, b, c, d, e) {
                d -= c;
                for (var f, h; 0 < d;) f = d >> 1, h = c + f, 0 > Fd.compare(a, b, h, e) ? (c = h + 1, d = d - f - 1) : d = f;
                return c
            };
            Fd.swap = function(a, b, c) {
                var d = a[b];
                a[b] = a[c];
                a[c] = d
            };
            Fd.compare = function(a, b, c, d) {
                return b(a[c], a[d])
            };
            var we = function() {
                this.h = {}
            };
            g["haxe.ds.IntMap"] = we;
            we.__name__ = ["haxe",
                "ds", "IntMap"
            ];
            we.__interfaces__ = [pb];
            we.prototype = {
                h: null,
                set: function(a, b) {
                    this.h[a] = b
                },
                get: function(a) {
                    return this.h[a]
                },
                exists: function(a) {
                    return this.h.hasOwnProperty(a)
                },
                remove: function(a) {
                    if (!this.h.hasOwnProperty(a)) return !1;
                    delete this.h[a];
                    return !0
                },
                keys: function() {
                    var a = [],
                        b;
                    for (b in this.h) this.h.hasOwnProperty(b) && a.push(b | 0);
                    return la.iter(a)
                },
                iterator: function() {
                    return {
                        ref: this.h,
                        it: this.keys(),
                        hasNext: function() {
                            return this.it.hasNext()
                        },
                        next: function() {
                            var a = this.it.next();
                            return this.ref[a]
                        }
                    }
                },
                __class__: we
            };
            var au = function(a, b) {
                this.map = a;
                this.keys = b;
                this.index = 0;
                this.count = b.length
            };
            g["haxe.ds._StringMap.StringMapIterator"] = au;
            au.__name__ = ["haxe", "ds", "_StringMap", "StringMapIterator"];
            au.prototype = {
                map: null,
                keys: null,
                index: null,
                count: null,
                hasNext: function() {
                    return this.index < this.count
                },
                next: function() {
                    return this.map.get(this.keys[this.index++])
                },
                __class__: au
            };
            var fb = function() {
                this.h = {}
            };
            g["haxe.ds.StringMap"] = fb;
            fb.__name__ = ["haxe", "ds", "StringMap"];
            fb.__interfaces__ = [pb];
            fb.prototype = {
                h: null,
                rh: null,
                isReserved: function(a) {
                    return null != cx[a]
                },
                set: function(a, b) {
                    this.isReserved(a) ? this.setReserved(a, b) : this.h[a] = b
                },
                get: function(a) {
                    return this.isReserved(a) ? this.getReserved(a) : this.h[a]
                },
                exists: function(a) {
                    return this.isReserved(a) ? this.existsReserved(a) : this.h.hasOwnProperty(a)
                },
                setReserved: function(a, b) {
                    null == this.rh && (this.rh = {});
                    this.rh["$" + a] = b
                },
                getReserved: function(a) {
                    return null == this.rh ? null : this.rh["$" + a]
                },
                existsReserved: function(a) {
                    return null == this.rh ? !1 : this.rh.hasOwnProperty("$" +
                        a)
                },
                remove: function(a) {
                    if (this.isReserved(a)) {
                        a = "$" + a;
                        if (null == this.rh || !this.rh.hasOwnProperty(a)) return !1;
                        delete this.rh[a]
                    } else {
                        if (!this.h.hasOwnProperty(a)) return !1;
                        delete this.h[a]
                    }
                    return !0
                },
                keys: function() {
                    return la.iter(this.arrayKeys())
                },
                arrayKeys: function() {
                    var a = [],
                        b;
                    for (b in this.h) this.h.hasOwnProperty(b) && a.push(b);
                    if (null != this.rh)
                        for (b in this.rh) 36 == b.charCodeAt(0) && a.push(b.substr(1));
                    return a
                },
                iterator: function() {
                    return new au(this, this.arrayKeys())
                },
                __class__: fb
            };
            var ko = function() {
                this.b = []
            };
            g["haxe.io.BytesBuffer"] = ko;
            ko.__name__ = ["haxe", "io", "BytesBuffer"];
            ko.prototype = {
                b: null,
                addByte: function(a) {
                    this.b.push(a)
                },
                add: function(a) {
                    var b = a.b,
                        c = 0;
                    for (a = a.length; c < a;) {
                        var d = c++;
                        this.b.push(b[d])
                    }
                },
                addBytes: function(a, b, c) {
                    if (0 > b || 0 > c || b + c > a.length) throw new Z(se.OutsideBounds);
                    a = a.b;
                    var d = b;
                    for (b += c; d < b;) c = d++, this.b.push(a[c])
                },
                getBytes: function() {
                    var a = new ub((new Cf(this.b)).buffer);
                    this.b = null;
                    return a
                },
                __class__: ko
            };
            var Tq = function() {};
            g["haxe.io.Input"] = Tq;
            Tq.__name__ = ["haxe", "io",
                "Input"
            ];
            Tq.prototype = {
                bigEndian: null,
                readByte: function() {
                    throw new Z("Not implemented");
                },
                readBytes: function(a, b, c) {
                    var d = c,
                        e = a.b;
                    if (0 > b || 0 > c || b + c > a.length) throw new Z(se.OutsideBounds);
                    try {
                        for (; 0 < d;) e[b] = this.readByte(), ++b, --d
                    } catch (f) {
                        if (vb.lastException = f, f instanceof Z && (f = f.val), !aa.__instanceof(f, lo)) throw f;
                    }
                    return c - d
                },
                readFullBytes: function(a, b, c) {
                    for (; 0 < c;) {
                        var d = this.readBytes(a, b, c);
                        if (0 == d) throw new Z(se.Blocked);
                        b += d;
                        c -= d
                    }
                },
                read: function(a) {
                    for (var b = ub.alloc(a), c = 0; 0 < a;) {
                        var d = this.readBytes(b,
                            c, a);
                        if (0 == d) throw new Z(se.Blocked);
                        c += d;
                        a -= d
                    }
                    return b
                },
                readInt16: function() {
                    var a = this.readByte(),
                        b = this.readByte();
                    a = this.bigEndian ? b | a << 8 : a | b << 8;
                    return 0 != (a & 32768) ? a - 65536 : a
                },
                readUInt16: function() {
                    var a = this.readByte(),
                        b = this.readByte();
                    return this.bigEndian ? b | a << 8 : a | b << 8
                },
                readInt32: function() {
                    var a = this.readByte(),
                        b = this.readByte(),
                        c = this.readByte(),
                        d = this.readByte();
                    return this.bigEndian ? d | c << 8 | b << 16 | a << 24 : a | b << 8 | c << 16 | d << 24
                },
                readString: function(a) {
                    var b = ub.alloc(a);
                    this.readFullBytes(b, 0,
                        a);
                    return b.toString()
                },
                __class__: Tq
            };
            var mo = function(a, b, c) {
                null == b && (b = 0);
                null == c && (c = a.length - b);
                if (0 > b || 0 > c || b + c > a.length) throw new Z(se.OutsideBounds);
                this.b = a.b;
                this.pos = b;
                this.totlen = this.len = c
            };
            g["haxe.io.BytesInput"] = mo;
            mo.__name__ = ["haxe", "io", "BytesInput"];
            mo.__super__ = Tq;
            mo.prototype = p(Tq.prototype, {
                b: null,
                pos: null,
                len: null,
                totlen: null,
                readByte: function() {
                    if (0 == this.len) throw new Z(new lo);
                    this.len--;
                    return this.b[this.pos++]
                },
                readBytes: function(a, b, c) {
                    if (0 > b || 0 > c || b + c > a.length) throw new Z(se.OutsideBounds);
                    if (0 == this.len && 0 < c) throw new Z(new lo);
                    this.len < c && (c = this.len);
                    var d = this.b;
                    a = a.b;
                    for (var e = 0, f = c; e < f;) {
                        var h = e++;
                        a[b + h] = d[this.pos + h]
                    }
                    this.pos += c;
                    this.len -= c;
                    return c
                },
                __class__: mo
            });
            var lo = function() {};
            g["haxe.io.Eof"] = lo;
            lo.__name__ = ["haxe", "io", "Eof"];
            lo.prototype = {
                toString: function() {
                    return "Eof"
                },
                __class__: lo
            };
            var se = g["haxe.io.Error"] = {
                __ename__: ["haxe", "io", "Error"],
                __constructs__: ["Blocked", "Overflow", "OutsideBounds", "Custom"]
            };
            se.Blocked = ["Blocked", 0];
            se.Blocked.toString = l;
            se.Blocked.__enum__ =
                se;
            se.Overflow = ["Overflow", 1];
            se.Overflow.toString = l;
            se.Overflow.__enum__ = se;
            se.OutsideBounds = ["OutsideBounds", 2];
            se.OutsideBounds.toString = l;
            se.OutsideBounds.__enum__ = se;
            se.Custom = function(a) {
                a = ["Custom", 3, a];
                a.__enum__ = se;
                a.toString = l;
                return a
            };
            var Tg = function() {};
            g["haxe.io.FPHelper"] = Tg;
            Tg.__name__ = ["haxe", "io", "FPHelper"];
            Tg.i32ToFloat = function(a) {
                var b = a >>> 23 & 255,
                    c = a & 8388607;
                return 0 == c && 0 == b ? 0 : (1 - (a >>> 31 << 1)) * (1 + Math.pow(2, -23) * c) * Math.pow(2, b - 127)
            };
            Tg.floatToI32 = function(a) {
                if (0 == a) return 0;
                var b = 0 > a ? -a : a,
                    c = Math.floor(Math.log(b) / .6931471805599453); - 127 > c ? c = -127 : 128 < c && (c = 128);
                b = Math.round(8388608 * (b / Math.pow(2, c) - 1));
                8388608 == b && 128 > c && (b = 0, ++c);
                return (0 > a ? -2147483648 : 0) | c + 127 << 23 | b
            };
            Tg.i64ToDouble = function(a, b) {
                var c = (b >> 20 & 2047) - 1023;
                a = 4294967296 * (b & 1048575) + 2147483648 * (a >>> 31) + (a & 2147483647);
                return 0 == a && -1023 == c ? 0 : (1 - (b >>> 31 << 1)) * (1 + Math.pow(2, -52) * a) * Math.pow(2, c)
            };
            Tg.doubleToI64 = function(a) {
                var b = Tg.i64tmp;
                if (0 == a) b.low = 0, b.high = 0;
                else if (isFinite(a)) {
                    var c = 0 > a ? -a : a,
                        d = Math.floor(Math.log(c) /
                            .6931471805599453),
                        e = Math.round(4503599627370496 * (c / Math.pow(2, d) - 1));
                    c = E["int"](e);
                    e = E["int"](e / 4294967296);
                    b.low = c;
                    b.high = (0 > a ? -2147483648 : 0) | d + 1023 << 20 | e
                } else 0 < a ? (b.low = 0, b.high = 2146435072) : (b.low = 0, b.high = -1048576);
                return b
            };
            var Df = function(a) {
                switch (a) {
                    case ".":
                    case "..":
                        this.dir = a;
                        this.file = "";
                        return
                }
                var b = a.lastIndexOf("/"),
                    c = a.lastIndexOf("\\");
                b < c ? (this.dir = la.substr(a, 0, c), a = la.substr(a, c + 1, null), this.backslash = !0) : c < b ? (this.dir = la.substr(a, 0, b), a = la.substr(a, b + 1, null)) : this.dir = null;
                b =
                    a.lastIndexOf("."); - 1 != b ? (this.ext = la.substr(a, b + 1, null), this.file = la.substr(a, 0, b)) : (this.ext = null, this.file = a)
            };
            g["haxe.io.Path"] = Df;
            Df.__name__ = ["haxe", "io", "Path"];
            Df.withoutDirectory = function(a) {
                a = new Df(a);
                a.dir = null;
                return a.toString()
            };
            Df.directory = function(a) {
                a = new Df(a);
                return null == a.dir ? "" : a.dir
            };
            Df.extension = function(a) {
                a = new Df(a);
                return null == a.ext ? "" : a.ext
            };
            Df.prototype = {
                dir: null,
                file: null,
                ext: null,
                backslash: null,
                toString: function() {
                    return (null == this.dir ? "" : this.dir + (this.backslash ?
                        "\\" : "/")) + this.file + (null == this.ext ? "" : "." + this.ext)
                },
                __class__: Df
            };
            var cq = function() {};
            g["haxe.zip.Compress"] = cq;
            cq.__name__ = ["haxe", "zip", "Compress"];
            cq.run = function(a, b) {
                throw new Z("Not implemented for this platform");
            };
            var Nh = g["haxe.zip.ExtraField"] = {
                __ename__: ["haxe", "zip", "ExtraField"],
                __constructs__: ["FUnknown", "FInfoZipUnicodePath", "FUtf8"]
            };
            Nh.FUnknown = function(a, b) {
                a = ["FUnknown", 0, a, b];
                a.__enum__ = Nh;
                a.toString = l;
                return a
            };
            Nh.FInfoZipUnicodePath = function(a, b) {
                a = ["FInfoZipUnicodePath",
                    1, a, b
                ];
                a.__enum__ = Nh;
                a.toString = l;
                return a
            };
            Nh.FUtf8 = ["FUtf8", 2];
            Nh.FUtf8.toString = l;
            Nh.FUtf8.__enum__ = Nh;
            var Oh = g["haxe.zip.Huffman"] = {
                __ename__: ["haxe", "zip", "Huffman"],
                __constructs__: ["Found", "NeedBit", "NeedBits"]
            };
            Oh.Found = function(a) {
                a = ["Found", 0, a];
                a.__enum__ = Oh;
                a.toString = l;
                return a
            };
            Oh.NeedBit = function(a, b) {
                a = ["NeedBit", 1, a, b];
                a.__enum__ = Oh;
                a.toString = l;
                return a
            };
            Oh.NeedBits = function(a, b) {
                a = ["NeedBits", 2, a, b];
                a.__enum__ = Oh;
                a.toString = l;
                return a
            };
            var bu = function() {};
            g["haxe.zip.HuffTools"] =
                bu;
            bu.__name__ = ["haxe", "zip", "HuffTools"];
            bu.prototype = {
                treeDepth: function(a) {
                    switch (Q.enumIndex(a)) {
                        case 0:
                            return 0;
                        case 1:
                            var b = a[3];
                            a = this.treeDepth(a[2]);
                            b = this.treeDepth(b);
                            return 1 + (a < b ? a : b);
                        case 2:
                            throw new Z("assert");
                    }
                },
                treeCompress: function(a) {
                    var b = this.treeDepth(a);
                    if (0 == b) return a;
                    if (1 == b) {
                        if (1 == Q.enumIndex(a)) return b = a[3], Oh.NeedBit(this.treeCompress(a[2]), this.treeCompress(b));
                        throw new Z("assert");
                    }
                    for (var c = [], d = 0, e = 1 << b; d < e;) d++, c.push(Oh.Found(-1));
                    this.treeWalk(c, 0, 0, b, a);
                    return Oh.NeedBits(b,
                        c)
                },
                treeWalk: function(a, b, c, d, e) {
                    if (1 == Q.enumIndex(e)) {
                        var f = e[3],
                            h = e[2];
                        0 < d ? (this.treeWalk(a, b, c + 1, d - 1, h), this.treeWalk(a, b | 1 << c, c + 1, d - 1, f)) : a[b] = this.treeCompress(e)
                    } else a[b] = this.treeCompress(e)
                },
                treeMake: function(a, b, c, d) {
                    if (d > b) throw new Z("Invalid huffman");
                    var e = c << 5 | d;
                    if (a.exists(e)) return Oh.Found(a.get(e));
                    c <<= 1;
                    ++d;
                    return Oh.NeedBit(this.treeMake(a, b, c, d), this.treeMake(a, b, c | 1, d))
                },
                make: function(a, b, c, d) {
                    var e = [],
                        f = [];
                    if (32 < d) throw new Z("Invalid huffman");
                    for (var h = 0; h < d;) h++, e.push(0),
                        f.push(0);
                    for (h = 0; h < c;) {
                        var k = h++;
                        k = a[k + b];
                        if (k >= d) throw new Z("Invalid huffman");
                        e[k]++
                    }
                    h = 0;
                    k = 1;
                    for (var m = d - 1; k < m;) {
                        var g = k++;
                        h = h + e[g] << 1;
                        f[g] = h
                    }
                    e = new we;
                    for (h = 0; h < c;) k = h++, m = a[k + b], 0 != m && (g = f[m - 1], f[m - 1] = g + 1, e.set(g << 5 | m, k));
                    return this.treeCompress(Oh.NeedBit(this.treeMake(e, d, 0, 1), this.treeMake(e, d, 1, 1)))
                },
                __class__: bu
            };
            var cu = function(a) {
                this.buffer = ub.alloc(65536);
                this.pos = 0;
                a && (this.crc = new sl)
            };
            g["haxe.zip._InflateImpl.Window"] = cu;
            cu.__name__ = ["haxe", "zip", "_InflateImpl", "Window"];
            cu.prototype = {
                buffer: null,
                pos: null,
                crc: null,
                slide: function() {
                    null != this.crc && this.crc.update(this.buffer, 0, 32768);
                    var a = ub.alloc(65536);
                    this.pos -= 32768;
                    a.blit(0, this.buffer, 32768, this.pos);
                    this.buffer = a
                },
                addBytes: function(a, b, c) {
                    65536 < this.pos + c && this.slide();
                    this.buffer.blit(this.pos, a, b, c);
                    this.pos += c
                },
                addByte: function(a) {
                    65536 == this.pos && this.slide();
                    this.buffer.set(this.pos, a);
                    this.pos++
                },
                getLastChar: function() {
                    return this.buffer.get(this.pos - 1)
                },
                available: function() {
                    return this.pos
                },
                checksum: function() {
                    null !=
                        this.crc && this.crc.update(this.buffer, 0, this.pos);
                    return this.crc
                },
                __class__: cu
            };
            var Jb = g["haxe.zip._InflateImpl.State"] = {
                __ename__: ["haxe", "zip", "_InflateImpl", "State"],
                __constructs__: "Head Block CData Flat Crc Dist DistOne Done".split(" ")
            };
            Jb.Head = ["Head", 0];
            Jb.Head.toString = l;
            Jb.Head.__enum__ = Jb;
            Jb.Block = ["Block", 1];
            Jb.Block.toString = l;
            Jb.Block.__enum__ = Jb;
            Jb.CData = ["CData", 2];
            Jb.CData.toString = l;
            Jb.CData.__enum__ = Jb;
            Jb.Flat = ["Flat", 3];
            Jb.Flat.toString = l;
            Jb.Flat.__enum__ = Jb;
            Jb.Crc = ["Crc", 4];
            Jb.Crc.toString =
                l;
            Jb.Crc.__enum__ = Jb;
            Jb.Dist = ["Dist", 5];
            Jb.Dist.toString = l;
            Jb.Dist.__enum__ = Jb;
            Jb.DistOne = ["DistOne", 6];
            Jb.DistOne.toString = l;
            Jb.DistOne.__enum__ = Jb;
            Jb.Done = ["Done", 7];
            Jb.Done.toString = l;
            Jb.Done.__enum__ = Jb;
            var te = function(a, b, c) {
                null == c && (c = !0);
                null == b && (b = !0);
                this["final"] = !1;
                this.htools = new bu;
                this.huffman = this.buildFixedHuffman();
                this.huffdist = null;
                this.dist = this.len = 0;
                this.state = b ? Jb.Head : Jb.Block;
                this.input = a;
                this.needed = this.nbits = this.bits = 0;
                this.output = null;
                this.outpos = 0;
                this.lengths = [];
                for (a = 0; 19 > a;) a++, this.lengths.push(-1);
                this.window = new cu(c)
            };
            g["haxe.zip.InflateImpl"] = te;
            te.__name__ = ["haxe", "zip", "InflateImpl"];
            te.run = function(a, b) {
                null == b && (b = 65536);
                var c = ub.alloc(b),
                    d = new ko;
                for (a = new te(a);;) {
                    var e = a.readBytes(c, 0, b);
                    d.addBytes(c, 0, e);
                    if (e < b) break
                }
                return d.getBytes()
            };
            te.prototype = {
                nbits: null,
                bits: null,
                state: null,
                "final": null,
                huffman: null,
                huffdist: null,
                htools: null,
                len: null,
                dist: null,
                needed: null,
                output: null,
                outpos: null,
                input: null,
                lengths: null,
                window: null,
                buildFixedHuffman: function() {
                    if (null !=
                        te.FIXED_HUFFMAN) return te.FIXED_HUFFMAN;
                    for (var a = [], b = 0; 288 > b;) {
                        var c = b++;
                        a.push(143 >= c ? 8 : 255 >= c ? 9 : 279 >= c ? 7 : 8)
                    }
                    te.FIXED_HUFFMAN = this.htools.make(a, 0, 288, 10);
                    return te.FIXED_HUFFMAN
                },
                readBytes: function(a, b, c) {
                    this.needed = c;
                    this.outpos = b;
                    this.output = a;
                    if (0 < c)
                        for (; this.inflateLoop(););
                    return c - this.needed
                },
                getBits: function(a) {
                    for (; this.nbits < a;) this.bits |= this.input.readByte() << this.nbits, this.nbits += 8;
                    var b = this.bits & (1 << a) - 1;
                    this.nbits -= a;
                    this.bits >>= a;
                    return b
                },
                getBit: function() {
                    0 == this.nbits &&
                        (this.nbits = 8, this.bits = this.input.readByte());
                    var a = 1 == (this.bits & 1);
                    this.nbits--;
                    this.bits >>= 1;
                    return a
                },
                getRevBits: function(a) {
                    return 0 == a ? 0 : this.getBit() ? 1 << a - 1 | this.getRevBits(a - 1) : this.getRevBits(a - 1)
                },
                resetBits: function() {
                    this.nbits = this.bits = 0
                },
                addBytes: function(a, b, c) {
                    this.window.addBytes(a, b, c);
                    this.output.blit(this.outpos, a, b, c);
                    this.needed -= c;
                    this.outpos += c
                },
                addByte: function(a) {
                    this.window.addByte(a);
                    this.output.set(this.outpos, a);
                    this.needed--;
                    this.outpos++
                },
                addDistOne: function(a) {
                    for (var b =
                            this.window.getLastChar(), c = 0; c < a;) c++, this.addByte(b)
                },
                addDist: function(a, b) {
                    this.addBytes(this.window.buffer, this.window.pos - a, b)
                },
                applyHuffman: function(a) {
                    switch (Q.enumIndex(a)) {
                        case 0:
                            return a[2];
                        case 1:
                            var b = a[3];
                            a = a[2];
                            return this.applyHuffman(this.getBit() ? b : a);
                        case 2:
                            return this.applyHuffman(a[3][this.getBits(a[2])])
                    }
                },
                inflateLengths: function(a, b) {
                    for (var c = 0, d = 0; c < b;) {
                        var e = this.applyHuffman(this.huffman);
                        switch (e) {
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                            case 8:
                            case 9:
                            case 10:
                            case 11:
                            case 12:
                            case 13:
                            case 14:
                            case 15:
                                d =
                                    e;
                                a[c] = e;
                                ++c;
                                break;
                            case 16:
                                e = c + 3 + this.getBits(2);
                                if (e > b) throw new Z("Invalid data");
                                for (; c < e;) a[c] = d, ++c;
                                break;
                            case 17:
                                c += 3 + this.getBits(3);
                                if (c > b) throw new Z("Invalid data");
                                break;
                            case 18:
                                c += 11 + this.getBits(7);
                                if (c > b) throw new Z("Invalid data");
                                break;
                            default:
                                throw new Z("Invalid data");
                        }
                    }
                },
                inflateLoop: function() {
                    switch (Q.enumIndex(this.state)) {
                        case 0:
                            var a = this.input.readByte();
                            if (8 != (a & 15)) throw new Z("Invalid data");
                            var b = this.input.readByte(),
                                c = 0 != (b & 32);
                            if (0 != ((a << 8) + b) % 31) throw new Z("Invalid data");
                            if (c) throw new Z("Unsupported dictionary");
                            this.state = Jb.Block;
                            return !0;
                        case 1:
                            switch (this["final"] = this.getBit(), this.getBits(2)) {
                                case 0:
                                    this.len = this.input.readUInt16();
                                    if (this.input.readUInt16() != 65535 - this.len) throw new Z("Invalid data");
                                    this.state = Jb.Flat;
                                    a = this.inflateLoop();
                                    this.resetBits();
                                    return a;
                                case 1:
                                    return this.huffman = this.buildFixedHuffman(), this.huffdist = null, this.state = Jb.CData, !0;
                                case 2:
                                    a = this.getBits(5) + 257;
                                    b = this.getBits(5) + 1;
                                    c = this.getBits(4) + 4;
                                    for (var d = 0; d < c;) {
                                        var e = d++;
                                        this.lengths[te.CODE_LENGTHS_POS[e]] =
                                            this.getBits(3)
                                    }
                                    for (; 19 > c;) d = c++, this.lengths[te.CODE_LENGTHS_POS[d]] = 0;
                                    this.huffman = this.htools.make(this.lengths, 0, 19, 8);
                                    c = [];
                                    d = 0;
                                    for (e = a + b; d < e;) d++, c.push(0);
                                    this.inflateLengths(c, a + b);
                                    this.huffdist = this.htools.make(c, a, b, 16);
                                    this.huffman = this.htools.make(c, 0, a, 16);
                                    this.state = Jb.CData;
                                    return !0;
                                default:
                                    throw new Z("Invalid data");
                            }
                            case 2:
                                b = this.applyHuffman(this.huffman);
                                if (256 > b) return this.addByte(b), 0 < this.needed;
                                if (256 == b) this.state = this["final"] ? Jb.Crc : Jb.Block;
                                else {
                                    b -= 257;
                                    a = te.LEN_EXTRA_BITS_TBL[b];
                                    if (-1 == a) throw new Z("Invalid data");
                                    this.len = te.LEN_BASE_VAL_TBL[b] + this.getBits(a);
                                    b = null == this.huffdist ? this.getRevBits(5) : this.applyHuffman(this.huffdist);
                                    a = te.DIST_EXTRA_BITS_TBL[b];
                                    if (-1 == a) throw new Z("Invalid data");
                                    this.dist = te.DIST_BASE_VAL_TBL[b] + this.getBits(a);
                                    if (this.dist > this.window.available()) throw new Z("Invalid data");
                                    this.state = 1 == this.dist ? Jb.DistOne : Jb.Dist
                                }
                                return !0;
                            case 3:
                                return a = this.len < this.needed ? this.len : this.needed, b = this.input.read(a), this.len -= a, this.addBytes(b, 0, a),
                                    0 == this.len && (this.state = this["final"] ? Jb.Crc : Jb.Block), 0 < this.needed;
                            case 4:
                                a = this.window.checksum();
                                if (null == a) return this.state = Jb.Done, !0;
                                b = sl.read(this.input);
                                if (!a.equals(b)) throw new Z("Invalid CRC");
                                this.state = Jb.Done;
                                return !0;
                            case 5:
                                for (; 0 < this.len && 0 < this.needed;) a = this.len < this.dist ? this.len : this.dist, a = this.needed < a ? this.needed : a, this.addDist(this.dist, a), this.len -= a;
                                0 == this.len && (this.state = Jb.CData);
                                return 0 < this.needed;
                            case 6:
                                return a = this.len < this.needed ? this.len : this.needed, this.addDistOne(a),
                                    this.len -= a, 0 == this.len && (this.state = Jb.CData), 0 < this.needed;
                            case 7:
                                return !1
                    }
                },
                __class__: te
            };
            var no = function(a) {
                this.i = a
            };
            g["haxe.zip.Reader"] = no;
            no.__name__ = ["haxe", "zip", "Reader"];
            no.readZip = function(a) {
                return (new no(a)).read()
            };
            no.prototype = {
                i: null,
                readZipDate: function() {
                    var a = this.i.readUInt16(),
                        b = a >> 11 & 31,
                        c = a >> 5 & 63;
                    a &= 31;
                    var d = this.i.readUInt16();
                    return new Date((d >> 9) + 1980, (d >> 5 & 15) - 1, d & 31, b, c, a << 1)
                },
                readExtraFields: function(a) {
                    for (var b = new Qb; 0 < a;) {
                        if (4 > a) throw new Z("Invalid extra fields data");
                        var c = this.i.readUInt16(),
                            d = this.i.readUInt16();
                        if (a < d) throw new Z("Invalid extra fields data");
                        if (28789 == c) {
                            var e = this.i.readByte();
                            if (1 != e) {
                                var f = new ko;
                                f.addByte(e);
                                f.add(this.i.read(d - 1));
                                b.add(Nh.FUnknown(c, f.getBytes()))
                            } else c = this.i.readInt32(), e = this.i.read(d - 5).toString(), b.add(Nh.FInfoZipUnicodePath(e, c))
                        } else b.add(Nh.FUnknown(c, this.i.read(d)));
                        a -= 4 + d
                    }
                    return b
                },
                readEntryHeader: function() {
                    var a = this.i,
                        b = a.readInt32();
                    if (33639248 == b || 101010256 == b) return null;
                    if (67324752 != b) throw new Z("Invalid Zip Data");
                    a.readUInt16();
                    b = a.readUInt16();
                    var c = 0 != (b & 2048),
                        d = a.readUInt16(),
                        e = 0 != d;
                    if (e && 8 != d) throw new Z("Unsupported compression " + d);
                    d = this.readZipDate();
                    var f = a.readInt32(),
                        h = a.readInt32(),
                        k = a.readInt32(),
                        m = a.readInt16(),
                        g = a.readInt16();
                    a = a.readString(m);
                    g = this.readExtraFields(g);
                    c && g.push(Nh.FUtf8);
                    0 != (b & 8) && (h = -1);
                    return {
                        fileName: a,
                        fileSize: k,
                        fileTime: d,
                        compressed: e,
                        dataSize: h,
                        data: null,
                        crc32: f,
                        extraFields: g
                    }
                },
                read: function() {
                    for (var a = new Qb, b = null;;) {
                        var c = this.readEntryHeader();
                        if (null == c) break;
                        if (0 >
                            c.dataSize) {
                            null == b && (b = ub.alloc(65536));
                            for (var d = new ko, e = new te(this.i, !1, !1);;) {
                                var f = e.readBytes(b, 0, 65536);
                                d.addBytes(b, 0, f);
                                if (65536 > f) break
                            }
                            c.data = d.getBytes();
                            c.crc32 = this.i.readInt32();
                            134695760 == c.crc32 && (c.crc32 = this.i.readInt32());
                            c.dataSize = this.i.readInt32();
                            c.fileSize = this.i.readInt32();
                            c.dataSize = c.fileSize;
                            c.compressed = !1
                        } else c.data = this.i.read(c.dataSize);
                        a.add(c)
                    }
                    return a
                },
                __class__: no
            };
            var gl = function() {};
            g["haxe.zip.Uncompress"] = gl;
            gl.__name__ = ["haxe", "zip", "Uncompress"];
            gl.run =
                function(a, b) {
                    return te.run(new mo(a), b)
                };
            var Wv = function() {};
            g["hxClipper.PolyNode"] = Wv;
            Wv.__name__ = ["hxClipper", "PolyNode"];
            Wv.prototype = {
                __class__: Wv
            };
            var Ce = function(a, b) {
                null == b && (b = 0);
                null == a && (a = 0);
                this.x = a;
                this.y = b
            };
            g["hxClipper.IntPoint"] = Ce;
            Ce.__name__ = ["hxClipper", "IntPoint"];
            Ce.prototype = {
                x: null,
                y: null,
                clone: function() {
                    return new Ce(this.x, this.y)
                },
                copyFrom: function(a) {
                    this.x = a.x;
                    this.y = a.y
                },
                equals: function(a) {
                    return this.x == a.x ? this.y == a.y : !1
                },
                __class__: Ce
            };
            var Ze = g["hxClipper.ClipType"] = {
                __ename__: ["hxClipper", "ClipType"],
                __constructs__: ["CT_INTERSECTION", "CT_UNION", "CT_DIFFERENCE", "CT_XOR"]
            };
            Ze.CT_INTERSECTION = ["CT_INTERSECTION", 0];
            Ze.CT_INTERSECTION.toString = l;
            Ze.CT_INTERSECTION.__enum__ = Ze;
            Ze.CT_UNION = ["CT_UNION", 1];
            Ze.CT_UNION.toString = l;
            Ze.CT_UNION.__enum__ = Ze;
            Ze.CT_DIFFERENCE = ["CT_DIFFERENCE", 2];
            Ze.CT_DIFFERENCE.toString = l;
            Ze.CT_DIFFERENCE.__enum__ = Ze;
            Ze.CT_XOR = ["CT_XOR", 3];
            Ze.CT_XOR.toString = l;
            Ze.CT_XOR.__enum__ = Ze;
            var Ue = g["hxClipper.PolyType"] = {
                __ename__: ["hxClipper", "PolyType"],
                __constructs__: ["PT_SUBJECT", "PT_CLIP"]
            };
            Ue.PT_SUBJECT = ["PT_SUBJECT", 0];
            Ue.PT_SUBJECT.toString = l;
            Ue.PT_SUBJECT.__enum__ = Ue;
            Ue.PT_CLIP = ["PT_CLIP", 1];
            Ue.PT_CLIP.toString = l;
            Ue.PT_CLIP.__enum__ = Ue;
            var Sd = g["hxClipper.PolyFillType"] = {
                __ename__: ["hxClipper", "PolyFillType"],
                __constructs__: ["PFT_EVEN_ODD", "PFT_NON_ZERO", "PFT_POSITIVE", "PFT_NEGATIVE"]
            };
            Sd.PFT_EVEN_ODD = ["PFT_EVEN_ODD", 0];
            Sd.PFT_EVEN_ODD.toString = l;
            Sd.PFT_EVEN_ODD.__enum__ = Sd;
            Sd.PFT_NON_ZERO = ["PFT_NON_ZERO", 1];
            Sd.PFT_NON_ZERO.toString = l;
            Sd.PFT_NON_ZERO.__enum__ =
                Sd;
            Sd.PFT_POSITIVE = ["PFT_POSITIVE", 2];
            Sd.PFT_POSITIVE.toString = l;
            Sd.PFT_POSITIVE.__enum__ = Sd;
            Sd.PFT_NEGATIVE = ["PFT_NEGATIVE", 3];
            Sd.PFT_NEGATIVE.toString = l;
            Sd.PFT_NEGATIVE.__enum__ = Sd;
            var vf = g["hxClipper._Clipper.EdgeSide"] = {
                __ename__: ["hxClipper", "_Clipper", "EdgeSide"],
                __constructs__: ["ES_LEFT", "ES_RIGHT"]
            };
            vf.ES_LEFT = ["ES_LEFT", 0];
            vf.ES_LEFT.toString = l;
            vf.ES_LEFT.__enum__ = vf;
            vf.ES_RIGHT = ["ES_RIGHT", 1];
            vf.ES_RIGHT.toString = l;
            vf.ES_RIGHT.__enum__ = vf;
            var ze = g["hxClipper._Clipper.Direction"] = {
                __ename__: ["hxClipper",
                    "_Clipper", "Direction"
                ],
                __constructs__: ["D_RIGHT_TO_LEFT", "D_LEFT_TO_RIGHT"]
            };
            ze.D_RIGHT_TO_LEFT = ["D_RIGHT_TO_LEFT", 0];
            ze.D_RIGHT_TO_LEFT.toString = l;
            ze.D_RIGHT_TO_LEFT.__enum__ = ze;
            ze.D_LEFT_TO_RIGHT = ["D_LEFT_TO_RIGHT", 1];
            ze.D_LEFT_TO_RIGHT.toString = l;
            ze.D_LEFT_TO_RIGHT.__enum__ = ze;
            var du = function() {
                this.delta = new Ce;
                this.top = new Ce;
                this.curr = new Ce;
                this.bot = new Ce
            };
            g["hxClipper._Clipper.TEdge"] = du;
            du.__name__ = ["hxClipper", "_Clipper", "TEdge"];
            du.prototype = {
                bot: null,
                curr: null,
                top: null,
                delta: null,
                dx: null,
                polyType: null,
                side: null,
                windDelta: null,
                windCnt: null,
                windCnt2: null,
                outIdx: null,
                next: null,
                prev: null,
                nextInLML: null,
                nextInAEL: null,
                prevInAEL: null,
                nextInSEL: null,
                prevInSEL: null,
                __class__: du
            };
            var eu = function() {
                this.pt = new Ce
            };
            g["hxClipper.IntersectNode"] = eu;
            eu.__name__ = ["hxClipper", "IntersectNode"];
            eu.prototype = {
                edge1: null,
                edge2: null,
                pt: null,
                __class__: eu
            };
            var oo = function() {};
            g["hxClipper._Clipper.LocalMinima"] = oo;
            oo.__name__ = ["hxClipper", "_Clipper", "LocalMinima"];
            oo.prototype = {
                y: null,
                leftBound: null,
                rightBound: null,
                next: null,
                __class__: oo
            };
            var po = function() {};
            g["hxClipper._Clipper.Scanbeam"] = po;
            po.__name__ = ["hxClipper", "_Clipper", "Scanbeam"];
            po.prototype = {
                y: null,
                next: null,
                __class__: po
            };
            var fu = function() {};
            g["hxClipper._Clipper.Maxima"] = fu;
            fu.__name__ = ["hxClipper", "_Clipper", "Maxima"];
            fu.prototype = {
                x: null,
                next: null,
                prev: null,
                __class__: fu
            };
            var gu = function() {};
            g["hxClipper._Clipper.OutRec"] = gu;
            gu.__name__ = ["hxClipper", "_Clipper", "OutRec"];
            gu.prototype = {
                idx: null,
                isHole: null,
                isOpen: null,
                firstLeft: null,
                pts: null,
                bottomPt: null,
                polyNode: null,
                __class__: gu
            };
            var qo = function() {
                this.pt = new Ce
            };
            g["hxClipper._Clipper.OutPt"] = qo;
            qo.__name__ = ["hxClipper", "_Clipper", "OutPt"];
            qo.prototype = {
                idx: null,
                pt: null,
                next: null,
                prev: null,
                __class__: qo
            };
            var Uq = function() {
                this.offPt = new Ce
            };
            g["hxClipper._Clipper.Join"] = Uq;
            Uq.__name__ = ["hxClipper", "_Clipper", "Join"];
            Uq.prototype = {
                outPt1: null,
                outPt2: null,
                offPt: null,
                __class__: Uq
            };
            var Ic = function() {
                this.mEdges = [];
                this.mCurrentLM = this.mMinimaList = null;
                this.mHasOpenPaths = this.mUseFullRange = !1
            };
            g["hxClipper.ClipperBase"] =
                Ic;
            Ic.__name__ = ["hxClipper", "ClipperBase"];
            Ic.isHorizontal = function(a) {
                return 0 == a.delta.y
            };
            Ic.slopesEqual = function(a, b, c) {
                return a.delta.y * b.delta.x == a.delta.x * b.delta.y
            };
            Ic.slopesEqual3 = function(a, b, c, d) {
                return 0 == (a.y - b.y) * (b.x - c.x) - (a.x - b.x) * (b.y - c.y)
            };
            Ic.slopesEqual4 = function(a, b, c, d, e) {
                return 0 == (a.y - b.y) * (c.x - d.x) - (a.x - b.x) * (c.y - d.y)
            };
            Ic.prototype = {
                mMinimaList: null,
                mCurrentLM: null,
                mEdges: null,
                mScanbeam: null,
                mPolyOuts: null,
                mActiveEdges: null,
                mUseFullRange: null,
                mHasOpenPaths: null,
                preserveCollinear: null,
                rangeTest: function(a, b) {
                    if (b) {
                        if (67108863 < a.x || 67108863 < a.y || 67108863 < -a.x || 67108863 < -a.y) throw new Z(new pj("Coordinate outside allowed range"));
                    } else if (67108863 < a.x || 67108863 < a.y || 67108863 < -a.x || 67108863 < -a.y) b = !0, this.rangeTest(a, b);
                    return b
                },
                initEdge: function(a, b, c, d) {
                    a.next = b;
                    a.prev = c;
                    a.curr.copyFrom(d);
                    a.outIdx = -1
                },
                initEdge2: function(a, b) {
                    a.curr.y >= a.next.curr.y ? (a.bot.copyFrom(a.curr), a.top.copyFrom(a.next.curr)) : (a.top.copyFrom(a.curr), a.bot.copyFrom(a.next.curr));
                    this.setDx(a);
                    a.polyType =
                        b
                },
                findNextLocMin: function(a) {
                    for (var b;;) {
                        for (; !a.bot.equals(a.prev.bot) || a.curr.equals(a.top);) a = a.next;
                        if (-3.4E38 != a.dx && -3.4E38 != a.prev.dx) break;
                        for (; - 3.4E38 == a.prev.dx;) a = a.prev;
                        for (b = a; - 3.4E38 == a.dx;) a = a.next;
                        if (a.top.y != a.prev.bot.y) {
                            b.prev.bot.x < a.bot.x && (a = b);
                            break
                        }
                    }
                    return a
                },
                processBound: function(a, b) {
                    var c = a;
                    if (-2 == c.outIdx) {
                        a = c;
                        if (b) {
                            for (; a.top.y == a.next.bot.y;) a = a.next;
                            for (; a != c && -3.4E38 == a.dx;) a = a.prev
                        } else {
                            for (; a.top.y == a.prev.bot.y;) a = a.prev;
                            for (; a != c && -3.4E38 == a.dx;) a = a.next
                        }
                        if (a ==
                            c) c = b ? a.next : a.prev;
                        else {
                            a = b ? c.next : c.prev;
                            var d = new oo;
                            d.next = null;
                            d.y = a.bot.y;
                            d.leftBound = null;
                            d.rightBound = a;
                            a.windDelta = 0;
                            c = this.processBound(a, b);
                            this.insertLocalMinima(d)
                        }
                        return c
                    } - 3.4E38 == a.dx && (d = b ? a.prev : a.next, -3.4E38 == d.dx ? d.bot.x != a.bot.x && d.top.x != a.bot.x && this.reverseHorizontal(a) : d.bot.x != a.bot.x && this.reverseHorizontal(a));
                    d = a;
                    if (b) {
                        for (; c.top.y == c.next.bot.y && -2 != c.next.outIdx;) c = c.next;
                        if (-3.4E38 == c.dx && -2 != c.next.outIdx) {
                            for (b = c; - 3.4E38 == b.prev.dx;) b = b.prev;
                            b.prev.top.x > c.next.top.x &&
                                (c = b.prev)
                        }
                        for (; a != c;) a.nextInLML = a.next, -3.4E38 == a.dx && a != d && a.bot.x != a.prev.top.x && this.reverseHorizontal(a), a = a.next; - 3.4E38 == a.dx && a != d && a.bot.x != a.prev.top.x && this.reverseHorizontal(a);
                        c = c.next
                    } else {
                        for (; c.top.y == c.prev.bot.y && -2 != c.prev.outIdx;) c = c.prev;
                        if (-3.4E38 == c.dx && -2 != c.prev.outIdx) {
                            for (b = c; - 3.4E38 == b.next.dx;) b = b.next;
                            if (b.next.top.x == c.prev.top.x || b.next.top.x > c.prev.top.x) c = b.next
                        }
                        for (; a != c;) a.nextInLML = a.prev, -3.4E38 == a.dx && a != d && a.bot.x != a.next.top.x && this.reverseHorizontal(a), a =
                            a.prev; - 3.4E38 == a.dx && a != d && a.bot.x != a.next.top.x && this.reverseHorizontal(a);
                        c = c.prev
                    }
                    return c
                },
                addPath: function(a, b, c) {
                    if (!c) throw new Z(new pj("AddPath: Open paths have been disabled (define USE_LINES to enable them)."));
                    var d = a.length - 1;
                    if (c)
                        for (; 0 < d && a[d].equals(a[0]);) --d;
                    for (; 0 < d && a[d].equals(a[d - 1]);) --d;
                    if (c && 2 > d || !c && 1 > d) return !1;
                    for (var e = [], f = 0, h = d + 1; f < h;) f++, e.push(new du);
                    f = !0;
                    e[1].curr.copyFrom(a[1]);
                    this.mUseFullRange = this.rangeTest(a[0], this.mUseFullRange);
                    this.mUseFullRange = this.rangeTest(a[d],
                        this.mUseFullRange);
                    this.initEdge(e[0], e[1], e[d], a[0]);
                    this.initEdge(e[d], e[0], e[d - 1], a[d]);
                    for (--d; 1 <= d;) this.mUseFullRange = this.rangeTest(a[d], this.mUseFullRange), this.initEdge(e[d], e[d + 1], e[d - 1], a[d]), --d;
                    for (h = a = d = e[0];;)
                        if (a.curr.equals(a.next.curr) && (c || a.next != d)) {
                            if (a == a.next) break;
                            a == d && (d = a.next);
                            h = a = this.removeEdge(a)
                        } else {
                            if (a.prev == a.next) break;
                            else if (c && Ic.slopesEqual3(a.prev.curr, a.curr, a.next.curr, this.mUseFullRange) && (!this.preserveCollinear || !this.pt2IsBetweenPt1AndPt3(a.prev.curr,
                                    a.curr, a.next.curr))) {
                                a == d && (d = a.next);
                                a = this.removeEdge(a);
                                h = a = a.prev;
                                continue
                            }
                            a = a.next;
                            if (a == h || !c && a.next == d) break
                        } if (!c && a == a.next || c && a.prev == a.next) return !1;
                    c || (this.mHasOpenPaths = !0, d.prev.outIdx = -2);
                    for (a = d; this.initEdge2(a, b), a = a.next, f && a.curr.y != d.curr.y && (f = !1), a != d;);
                    if (f) {
                        if (c) return !1;
                        a.prev.outIdx = -2;
                        c = new oo;
                        c.next = null;
                        c.y = a.bot.y;
                        c.leftBound = null;
                        c.rightBound = a;
                        c.rightBound.side = vf.ES_RIGHT;
                        for (c.rightBound.windDelta = 0;;) {
                            a.bot.x != a.prev.top.x && this.reverseHorizontal(a);
                            if (-2 ==
                                a.next.outIdx) break;
                            a = a.nextInLML = a.next
                        }
                        this.insertLocalMinima(c);
                        this.mEdges.push(e);
                        return !0
                    }
                    this.mEdges.push(e);
                    b = null;
                    a.prev.bot.equals(a.prev.top) && (a = a.next);
                    for (;;) {
                        a = this.findNextLocMin(a);
                        if (a == b) break;
                        else null == b && (b = a);
                        f = new oo;
                        f.next = null;
                        f.y = a.bot.y;
                        a.dx < a.prev.dx ? (f.leftBound = a.prev, f.rightBound = a, e = !1) : (f.leftBound = a, f.rightBound = a.prev, e = !0);
                        f.leftBound.side = vf.ES_LEFT;
                        f.rightBound.side = vf.ES_RIGHT;
                        f.leftBound.windDelta = c ? f.leftBound.next == f.rightBound ? -1 : 1 : 0;
                        f.rightBound.windDelta = -f.leftBound.windDelta;
                        a = this.processBound(f.leftBound, e); - 2 == a.outIdx && (a = this.processBound(a, e));
                        d = this.processBound(f.rightBound, !e); - 2 == d.outIdx && (d = this.processBound(d, !e)); - 2 == f.leftBound.outIdx ? f.leftBound = null : -2 == f.rightBound.outIdx && (f.rightBound = null);
                        this.insertLocalMinima(f);
                        e || (a = d)
                    }
                    return !0
                },
                addPaths: function(a, b, c) {
                    for (var d = !1, e = 0, f = a.length; e < f;) {
                        var h = e++;
                        this.addPath(a[h], b, c) && (d = !0)
                    }
                    return d
                },
                pt2IsBetweenPt1AndPt3: function(a, b, c) {
                    return a.equals(c) || a.equals(b) || c.equals(b) ?
                        !1 : a.x != c.x ? b.x > a.x == b.x < c.x : b.y > a.y == b.y < c.y
                },
                removeEdge: function(a) {
                    a.prev.next = a.next;
                    a.next.prev = a.prev;
                    var b = a.next;
                    a.prev = null;
                    return b
                },
                setDx: function(a) {
                    a.delta.x = a.top.x - a.bot.x;
                    a.delta.y = a.top.y - a.bot.y;
                    a.dx = 0 == a.delta.y ? -3.4E38 : a.delta.x / a.delta.y
                },
                insertLocalMinima: function(a) {
                    if (null == this.mMinimaList) this.mMinimaList = a;
                    else if (a.y >= this.mMinimaList.y) a.next = this.mMinimaList, this.mMinimaList = a;
                    else {
                        for (var b = this.mMinimaList; null != b.next && a.y < b.next.y;) b = b.next;
                        a.next = b.next;
                        b.next = a
                    }
                },
                popLocalMinima: function(a, b) {
                    b.lm = this.mCurrentLM;
                    return null != this.mCurrentLM && this.mCurrentLM.y == a ? (this.mCurrentLM = this.mCurrentLM.next, !0) : !1
                },
                reverseHorizontal: function(a) {
                    var b = a.top.x;
                    a.top.x = a.bot.x;
                    a.bot.x = b
                },
                reset: function() {
                    this.mCurrentLM = this.mMinimaList;
                    if (null != this.mCurrentLM) {
                        this.mScanbeam = null;
                        for (var a = this.mMinimaList; null != a;) {
                            this.insertScanbeam(a.y);
                            var b = a.leftBound;
                            null != b && (b.curr.copyFrom(b.bot), b.outIdx = -1);
                            b = a.rightBound;
                            null != b && (b.curr.copyFrom(b.bot), b.outIdx = -1);
                            a = a.next
                        }
                        this.mActiveEdges = null
                    }
                },
                insertScanbeam: function(a) {
                    if (null == this.mScanbeam) this.mScanbeam = new po, this.mScanbeam.next = null, this.mScanbeam.y = a;
                    else if (a > this.mScanbeam.y) {
                        var b = new po;
                        b.y = a;
                        b.next = this.mScanbeam;
                        this.mScanbeam = b
                    } else {
                        for (b = this.mScanbeam; null != b.next && a <= b.next.y;) b = b.next;
                        if (a != b.y) {
                            var c = new po;
                            c.y = a;
                            c.next = b.next;
                            b.next = c
                        }
                    }
                },
                popScanbeam: function() {
                    var a = {
                        y: 0,
                        popped: !1
                    };
                    if (null == this.mScanbeam) return a;
                    a.y = this.mScanbeam.y;
                    this.mScanbeam = this.mScanbeam.next;
                    a.popped = !0;
                    return a
                },
                localMinimaPending: function() {
                    return null != this.mCurrentLM
                },
                createOutRec: function() {
                    var a = new gu;
                    a.idx = -1;
                    a.isHole = !1;
                    a.isOpen = !1;
                    a.firstLeft = null;
                    a.pts = null;
                    a.bottomPt = null;
                    a.polyNode = null;
                    this.mPolyOuts.push(a);
                    a.idx = this.mPolyOuts.length - 1;
                    return a
                },
                disposeOutRec: function(a) {
                    this.mPolyOuts[a].pts = null;
                    this.mPolyOuts[a] = null
                },
                updateEdgeIntoAEL: function(a) {
                    if (null == a.nextInLML) throw new Z(new pj("UpdateEdgeIntoAEL: invalid call"));
                    var b = a.prevInAEL,
                        c = a.nextInAEL;
                    a.nextInLML.outIdx = a.outIdx;
                    null != b ? b.nextInAEL = a.nextInLML : this.mActiveEdges = a.nextInLML;
                    null != c && (c.prevInAEL = a.nextInLML);
                    a.nextInLML.side = a.side;
                    a.nextInLML.windDelta = a.windDelta;
                    a.nextInLML.windCnt = a.windCnt;
                    a.nextInLML.windCnt2 = a.windCnt2;
                    a = a.nextInLML;
                    a.curr.copyFrom(a.bot);
                    a.prevInAEL = b;
                    a.nextInAEL = c;
                    Ic.isHorizontal(a) || this.insertScanbeam(a.top.y);
                    return a
                },
                swapPositionsInAEL: function(a, b) {
                    if (a.nextInAEL != a.prevInAEL && b.nextInAEL != b.prevInAEL) {
                        if (a.nextInAEL == b) {
                            var c = b.nextInAEL;
                            null != c && (c.prevInAEL = a);
                            var d = a.prevInAEL;
                            null != d && (d.nextInAEL = b);
                            b.prevInAEL = d;
                            b.nextInAEL = a;
                            a.prevInAEL = b;
                            a.nextInAEL = c
                        } else b.nextInAEL == a ? (c = a.nextInAEL, null != c && (c.prevInAEL = b), d = b.prevInAEL, null != d && (d.nextInAEL = a), a.prevInAEL = d, a.nextInAEL = b, b.prevInAEL = a, b.nextInAEL = c) : (c = a.nextInAEL, d = a.prevInAEL, a.nextInAEL = b.nextInAEL, null != a.nextInAEL && (a.nextInAEL.prevInAEL = a), a.prevInAEL = b.prevInAEL, null != a.prevInAEL && (a.prevInAEL.nextInAEL = a), b.nextInAEL = c, null != b.nextInAEL && (b.nextInAEL.prevInAEL = b), b.prevInAEL = d, null != b.prevInAEL && (b.prevInAEL.nextInAEL =
                            b));
                        null == a.prevInAEL ? this.mActiveEdges = a : null == b.prevInAEL && (this.mActiveEdges = b)
                    }
                },
                deleteFromAEL: function(a) {
                    var b = a.prevInAEL,
                        c = a.nextInAEL;
                    if (null != b || null != c || a == this.mActiveEdges) null != b ? b.nextInAEL = c : this.mActiveEdges = c, null != c && (c.prevInAEL = b), a.nextInAEL = null, a.prevInAEL = null
                },
                __class__: Ic
            };
            var Fb = function(a) {
                null == a && (a = 0);
                Ic.call(this);
                this.mSortedEdges = this.mActiveEdges = this.mMaxima = this.mScanbeam = null;
                this.mIntersectList = [];
                this.mIntersectNodeComparer = Fb.compare;
                this.mUsingPolyTree = this.mExecuteLocked = !1;
                this.mPolyOuts = [];
                this.mJoins = [];
                this.mGhostJoins = [];
                this.reverseSolution = 0 != (1 & a);
                this.strictlySimple = 0 != (2 & a);
                this.preserveCollinear = 0 != (4 & a)
            };
            g["hxClipper.Clipper"] = Fb;
            Fb.__name__ = ["hxClipper", "Clipper"];
            Fb.compare = function(a, b) {
                a = b.pt.y - a.pt.y;
                return 0 < a ? 1 : 0 > a ? -1 : 0
            };
            Fb.swapSides = function(a, b) {
                var c = a.side;
                a.side = b.side;
                b.side = c
            };
            Fb.swapPolyIndexes = function(a, b) {
                var c = a.outIdx;
                a.outIdx = b.outIdx;
                b.outIdx = c
            };
            Fb.round = function(a) {
                return 0 > a ? E["int"](a - .5) : E["int"](a + .5)
            };
            Fb.topX = function(a, b) {
                return b ==
                    a.top.y ? a.top.x : a.bot.x + Fb.round(a.dx * (b - a.bot.y))
            };
            Fb.pointInOutPt = function(a, b) {
                var c = 0,
                    d = b,
                    e = a.x;
                a = a.y;
                for (var f = b.pt.x, h = b.pt.y;;) {
                    b = b.next;
                    var k = b.pt.x,
                        m = b.pt.y;
                    if (m == a && (k == e || h == a && k > e == f < e)) return -1;
                    if (h < a != m < a)
                        if (f >= e)
                            if (k > e) c = 1 - c;
                            else {
                                f = (f - e) * (m - a) - (k - e) * (h - a);
                                if (0 == f) return -1;
                                0 < f == m > h && (c = 1 - c)
                            }
                    else if (k > e) {
                        f = (f - e) * (m - a) - (k - e) * (h - a);
                        if (0 == f) return -1;
                        0 < f == m > h && (c = 1 - c)
                    }
                    f = k;
                    h = m;
                    if (d == b) break
                }
                return c
            };
            Fb.poly2ContainsPoly1 = function(a, b) {
                for (var c = a;;) {
                    var d = Fb.pointInOutPt(c.pt, b);
                    if (0 <= d) return 0 <
                        d;
                    c = c.next;
                    if (c == a) break
                }
                return !0
            };
            Fb.parseFirstLeft = function(a) {
                for (; null != a && null == a.pts;) a = a.firstLeft;
                return a
            };
            Fb.__super__ = Ic;
            Fb.prototype = p(Ic.prototype, {
                mClipType: null,
                mMaxima: null,
                mSortedEdges: null,
                mIntersectList: null,
                mIntersectNodeComparer: null,
                mExecuteLocked: null,
                mClipFillType: null,
                mSubjFillType: null,
                mJoins: null,
                mGhostJoins: null,
                mUsingPolyTree: null,
                insertMaxima: function(a) {
                    var b = new fu;
                    b.x = a;
                    if (null == this.mMaxima) this.mMaxima = b, this.mMaxima.next = null, this.mMaxima.prev = null;
                    else if (a < this.mMaxima.x) b.next =
                        this.mMaxima, b.prev = null, this.mMaxima = b;
                    else {
                        for (var c = this.mMaxima; null != c.next && a >= c.next.x;) c = c.next;
                        a != c.x && (b.next = c.next, b.prev = c, null != c.next && (c.next.prev = b), c.next = b)
                    }
                },
                reverseSolution: null,
                strictlySimple: null,
                executePaths: function(a, b, c, d) {
                    if (this.mExecuteLocked) return !1;
                    if (this.mHasOpenPaths) throw new Z(new pj("Error: PolyTree struct is needed for open path clipping."));
                    this.mExecuteLocked = !0;
                    Dg.clear(b);
                    this.mSubjFillType = c;
                    this.mClipFillType = d;
                    this.mClipType = a;
                    this.mUsingPolyTree = !1;
                    (a = this.executeInternal()) && this.buildResult(b);
                    this.disposeAllPolyPts();
                    this.mExecuteLocked = !1;
                    Dg.clear(this.mJoins);
                    Dg.clear(this.mGhostJoins);
                    return a
                },
                executeInternal: function() {
                    this.reset();
                    this.mMaxima = this.mSortedEdges = null;
                    var a = this.popScanbeam();
                    var b = a.y;
                    if (!a.popped) return !1;
                    for (this.insertLocalMinimaIntoAEL(b);;)
                        if (a = this.popScanbeam(), b = a.y, a.popped || this.localMinimaPending()) {
                            this.processHorizontals();
                            Dg.clear(this.mGhostJoins);
                            if (!this.processIntersections(b)) return !1;
                            this.processEdgesAtTopOfScanbeam(b);
                            this.insertLocalMinimaIntoAEL(b)
                        } else break;
                    a = 0;
                    for (b = this.mPolyOuts.length; a < b;) {
                        var c = a++;
                        c = this.mPolyOuts[c];
                        null == c.pts || c.isOpen || Dg.xor(c.isHole, this.reverseSolution) == 0 < this.areaOfOutRec(c) && this.reversePolyPtLinks(c.pts)
                    }
                    this.joinCommonEdges();
                    a = 0;
                    for (b = this.mPolyOuts.length; a < b;) c = a++, c = this.mPolyOuts[c], null != c.pts && (c.isOpen ? this.fixupOutPolyLine(c) : this.fixupOutPolygon(c));
                    this.strictlySimple && this.doSimplePolygons();
                    return !0
                },
                disposeAllPolyPts: function() {
                    for (var a = 0, b = this.mPolyOuts.length; a <
                        b;) {
                        var c = a++;
                        this.disposeOutRec(c)
                    }
                    Dg.clear(this.mPolyOuts)
                },
                addJoin: function(a, b, c) {
                    var d = new Uq;
                    d.outPt1 = a;
                    d.outPt2 = b;
                    d.offPt.copyFrom(c);
                    this.mJoins.push(d)
                },
                addGhostJoin: function(a, b) {
                    var c = new Uq;
                    c.outPt1 = a;
                    c.offPt.copyFrom(b);
                    this.mGhostJoins.push(c)
                },
                insertLocalMinimaIntoAEL: function(a) {
                    for (var b = {
                            lm: null
                        }; this.popLocalMinima(a, b);) {
                        var c = b.lm,
                            d = c.leftBound;
                        c = c.rightBound;
                        var e = null;
                        null == d ? (this.insertEdgeIntoAEL(c, null), this.setWindingCount(c), this.isContributing(c) && (e = this.addOutPt(c,
                            c.bot))) : (null == c ? (this.insertEdgeIntoAEL(d, null), this.setWindingCount(d), this.isContributing(d) && (e = this.addOutPt(d, d.bot))) : (this.insertEdgeIntoAEL(d, null), this.insertEdgeIntoAEL(c, d), this.setWindingCount(d), c.windCnt = d.windCnt, c.windCnt2 = d.windCnt2, this.isContributing(d) && (e = this.addLocalMinPoly(d, c, d.bot))), this.insertScanbeam(d.top.y));
                        null != c && (Ic.isHorizontal(c) ? (null != c.nextInLML && this.insertScanbeam(c.nextInLML.top.y), this.addEdgeToSEL(c)) : this.insertScanbeam(c.top.y));
                        if (null != d && null !=
                            c) {
                            if (null != e && Ic.isHorizontal(c) && 0 < this.mGhostJoins.length && 0 != c.windDelta)
                                for (var f = 0, h = this.mGhostJoins.length; f < h;) {
                                    var k = f++;
                                    k = this.mGhostJoins[k];
                                    this.horzSegmentsOverlap(k.outPt1.pt.x, k.offPt.x, c.bot.x, c.top.x) && this.addJoin(k.outPt1, e, k.offPt)
                                }
                            0 <= d.outIdx && null != d.prevInAEL && d.prevInAEL.curr.x == d.bot.x && 0 <= d.prevInAEL.outIdx && Ic.slopesEqual4(d.prevInAEL.curr, d.prevInAEL.top, d.curr, d.top, this.mUseFullRange) && 0 != d.windDelta && 0 != d.prevInAEL.windDelta && (f = this.addOutPt(d.prevInAEL, d.bot), this.addJoin(e,
                                f, d.top));
                            if (d.nextInAEL != c && (0 <= c.outIdx && 0 <= c.prevInAEL.outIdx && Ic.slopesEqual4(c.prevInAEL.curr, c.prevInAEL.top, c.curr, c.top, this.mUseFullRange) && 0 != c.windDelta && 0 != c.prevInAEL.windDelta && (f = this.addOutPt(c.prevInAEL, c.bot), this.addJoin(e, f, c.top)), e = d.nextInAEL, null != e))
                                for (; e != c;) this.intersectEdges(c, e, d.curr), e = e.nextInAEL
                        }
                    }
                },
                insertEdgeIntoAEL: function(a, b) {
                    if (null == this.mActiveEdges) a.prevInAEL = null, a.nextInAEL = null, this.mActiveEdges = a;
                    else if (null == b && this.e2InsertsBeforeE1(this.mActiveEdges,
                            a)) a.prevInAEL = null, a.nextInAEL = this.mActiveEdges, this.mActiveEdges = this.mActiveEdges.prevInAEL = a;
                    else {
                        null == b && (b = this.mActiveEdges);
                        for (; null != b.nextInAEL && !this.e2InsertsBeforeE1(b.nextInAEL, a);) b = b.nextInAEL;
                        a.nextInAEL = b.nextInAEL;
                        null != b.nextInAEL && (b.nextInAEL.prevInAEL = a);
                        a.prevInAEL = b;
                        b.nextInAEL = a
                    }
                },
                e2InsertsBeforeE1: function(a, b) {
                    return b.curr.x == a.curr.x ? b.top.y > a.top.y ? b.top.x < Fb.topX(a, b.top.y) : a.top.x > Fb.topX(b, a.top.y) : b.curr.x < a.curr.x
                },
                isEvenOddFillType: function(a) {
                    return a.polyType ==
                        Ue.PT_SUBJECT ? this.mSubjFillType == Sd.PFT_EVEN_ODD : this.mClipFillType == Sd.PFT_EVEN_ODD
                },
                isEvenOddAltFillType: function(a) {
                    return a.polyType == Ue.PT_SUBJECT ? this.mClipFillType == Sd.PFT_EVEN_ODD : this.mSubjFillType == Sd.PFT_EVEN_ODD
                },
                isContributing: function(a) {
                    if (a.polyType == Ue.PT_SUBJECT) {
                        var b = this.mSubjFillType;
                        var c = this.mClipFillType
                    } else b = this.mClipFillType, c = this.mSubjFillType;
                    switch (Q.enumIndex(b)) {
                        case 0:
                            if (0 == a.windDelta && 1 != a.windCnt) return !1;
                            break;
                        case 1:
                            if (1 != Math.abs(a.windCnt)) return !1;
                            break;
                        case 2:
                            if (1 != a.windCnt) return !1;
                            break;
                        default:
                            if (-1 != a.windCnt) return !1
                    }
                    switch (Q.enumIndex(this.mClipType)) {
                        case 0:
                            switch (Q.enumIndex(c)) {
                                case 0:
                                case 1:
                                    return 0 != a.windCnt2;
                                case 2:
                                    return 0 < a.windCnt2;
                                default:
                                    return 0 > a.windCnt2
                            }
                            case 1:
                                switch (Q.enumIndex(c)) {
                                    case 0:
                                    case 1:
                                        return 0 == a.windCnt2;
                                    case 2:
                                        return 0 >= a.windCnt2;
                                    default:
                                        return 0 <= a.windCnt2
                                }
                                case 2:
                                    if (a.polyType == Ue.PT_SUBJECT) switch (Q.enumIndex(c)) {
                                        case 0:
                                        case 1:
                                            return 0 == a.windCnt2;
                                        case 2:
                                            return 0 >= a.windCnt2;
                                        default:
                                            return 0 <= a.windCnt2
                                    } else switch (Q.enumIndex(c)) {
                                        case 0:
                                        case 1:
                                            return 0 !=
                                                a.windCnt2;
                                        case 2:
                                            return 0 < a.windCnt2;
                                        default:
                                            return 0 > a.windCnt2
                                    }
                                    case 3: if (0 == a.windDelta) switch (Q.enumIndex(c)) {
                                        case 0:
                                        case 1:
                                            return 0 == a.windCnt2;
                                        case 2:
                                            return 0 >= a.windCnt2;
                                        default:
                                            return 0 <= a.windCnt2
                                    } else return !0
                    }
                },
                setWindingCount: function(a) {
                    for (var b = a.prevInAEL; null != b && (b.polyType != a.polyType || 0 == b.windDelta);) b = b.prevInAEL;
                    if (null == b) b = a.polyType == Ue.PT_SUBJECT ? this.mSubjFillType : this.mClipFillType, a.windCnt = 0 == a.windDelta ? b == Sd.PFT_NEGATIVE ? -1 : 1 : a.windDelta, a.windCnt2 = 0, b = this.mActiveEdges;
                    else {
                        if (0 == a.windDelta && this.mClipType != Ze.CT_UNION) a.windCnt = 1;
                        else if (this.isEvenOddFillType(a))
                            if (0 == a.windDelta) {
                                for (var c = !0, d = b.prevInAEL; null != d;) d.polyType == b.polyType && 0 != d.windDelta && (c = !c), d = d.prevInAEL;
                                a.windCnt = c ? 0 : 1
                            } else a.windCnt = a.windDelta;
                        else a.windCnt = 0 > b.windCnt * b.windDelta ? 1 < Math.abs(b.windCnt) ? 0 > b.windDelta * a.windDelta ? b.windCnt : b.windCnt + a.windDelta : 0 == a.windDelta ? 1 : a.windDelta : 0 == a.windDelta ? 0 > b.windCnt ? b.windCnt - 1 : b.windCnt + 1 : 0 > b.windDelta * a.windDelta ? b.windCnt : b.windCnt +
                            a.windDelta;
                        a.windCnt2 = b.windCnt2;
                        b = b.nextInAEL
                    }
                    if (this.isEvenOddAltFillType(a))
                        for (; b != a;) 0 != b.windDelta && (a.windCnt2 = 0 == a.windCnt2 ? 1 : 0), b = b.nextInAEL;
                    else
                        for (; b != a;) a.windCnt2 += b.windDelta, b = b.nextInAEL
                },
                addEdgeToSEL: function(a) {
                    null == this.mSortedEdges ? (this.mSortedEdges = a, a.prevInSEL = null, a.nextInSEL = null) : (a.nextInSEL = this.mSortedEdges, a.prevInSEL = null, this.mSortedEdges = this.mSortedEdges.prevInSEL = a)
                },
                popEdgeFromSEL: function() {
                    var a = {
                        popped: !1,
                        edge: null
                    };
                    a.edge = this.mSortedEdges;
                    if (null == a.edge) return a;
                    var b = a.edge;
                    this.mSortedEdges = a.edge.nextInSEL;
                    null != this.mSortedEdges && (this.mSortedEdges.prevInSEL = null);
                    b.nextInSEL = null;
                    b.prevInSEL = null;
                    a.popped = !0;
                    return a
                },
                copyAELToSEL: function() {
                    var a = this.mActiveEdges;
                    for (this.mSortedEdges = a; null != a;) a.prevInSEL = a.prevInAEL, a = a.nextInSEL = a.nextInAEL
                },
                swapPositionsInSEL: function(a, b) {
                    if (null != a.nextInSEL || null != a.prevInSEL)
                        if (null != b.nextInSEL || null != b.prevInSEL) {
                            if (a.nextInSEL == b) {
                                var c = b.nextInSEL;
                                null != c && (c.prevInSEL = a);
                                var d = a.prevInSEL;
                                null != d && (d.nextInSEL =
                                    b);
                                b.prevInSEL = d;
                                b.nextInSEL = a;
                                a.prevInSEL = b;
                                a.nextInSEL = c
                            } else b.nextInSEL == a ? (c = a.nextInSEL, null != c && (c.prevInSEL = b), d = b.prevInSEL, null != d && (d.nextInSEL = a), a.prevInSEL = d, a.nextInSEL = b, b.prevInSEL = a, b.nextInSEL = c) : (c = a.nextInSEL, d = a.prevInSEL, a.nextInSEL = b.nextInSEL, null != a.nextInSEL && (a.nextInSEL.prevInSEL = a), a.prevInSEL = b.prevInSEL, null != a.prevInSEL && (a.prevInSEL.nextInSEL = a), b.nextInSEL = c, null != b.nextInSEL && (b.nextInSEL.prevInSEL = b), b.prevInSEL = d, null != b.prevInSEL && (b.prevInSEL.nextInSEL = b));
                            null == a.prevInSEL ? this.mSortedEdges = a : null == b.prevInSEL && (this.mSortedEdges = b)
                        }
                },
                addLocalMaxPoly: function(a, b, c) {
                    this.addOutPt(a, c);
                    0 == b.windDelta && this.addOutPt(b, c);
                    a.outIdx == b.outIdx ? (a.outIdx = -1, b.outIdx = -1) : a.outIdx < b.outIdx ? this.appendPolygon(a, b) : this.appendPolygon(b, a)
                },
                addLocalMinPoly: function(a, b, c) {
                    if (Ic.isHorizontal(b) || a.dx > b.dx) {
                        var d = this.addOutPt(a, c);
                        b.outIdx = a.outIdx;
                        a.side = vf.ES_LEFT;
                        b.side = vf.ES_RIGHT;
                        var e = a;
                        a = e.prevInAEL == b ? b.prevInAEL : e.prevInAEL
                    } else d = this.addOutPt(b, c), a.outIdx =
                        b.outIdx, a.side = vf.ES_RIGHT, b.side = vf.ES_LEFT, e = b, a = e.prevInAEL == a ? a.prevInAEL : e.prevInAEL;
                    if (null != a && 0 <= a.outIdx) {
                        b = Fb.topX(a, c.y);
                        var f = Fb.topX(e, c.y);
                        b == f && 0 != e.windDelta && 0 != a.windDelta && Ic.slopesEqual4(new Ce(b, c.y), a.top, new Ce(f, c.y), e.top, this.mUseFullRange) && (c = this.addOutPt(a, c), this.addJoin(d, c, e.top))
                    }
                    return d
                },
                addOutPt: function(a, b) {
                    if (0 > a.outIdx) {
                        var c = this.createOutRec();
                        c.isOpen = 0 == a.windDelta;
                        var d = new qo;
                        c.pts = d;
                        d.idx = c.idx;
                        d.pt.copyFrom(b);
                        d.next = d;
                        d.prev = d;
                        c.isOpen || this.setHoleState(a,
                            c);
                        a.outIdx = c.idx;
                        return d
                    }
                    c = this.mPolyOuts[a.outIdx];
                    d = c.pts;
                    if ((a = a.side == vf.ES_LEFT) && b.equals(d.pt)) return d;
                    if (!a && b.equals(d.prev.pt)) return d.prev;
                    var e = new qo;
                    e.idx = c.idx;
                    e.pt.copyFrom(b);
                    e.next = d;
                    e.prev = d.prev;
                    e.prev.next = e;
                    d.prev = e;
                    a && (c.pts = e);
                    return e
                },
                getLastOutPt: function(a) {
                    var b = this.mPolyOuts[a.outIdx];
                    return a.side == vf.ES_LEFT ? b.pts : b.pts.prev
                },
                horzSegmentsOverlap: function(a, b, c, d) {
                    if (a > b) {
                        var e = a;
                        a = b;
                        b = e
                    }
                    c > d && (e = c, c = d, d = e);
                    return a < d ? c < b : !1
                },
                setHoleState: function(a, b) {
                    a = a.prevInAEL;
                    for (var c = null; null != a;) 0 <= a.outIdx && 0 != a.windDelta && (null == c ? c = a : c.outIdx == a.outIdx && (c = null)), a = a.prevInAEL;
                    null == c ? (b.firstLeft = null, b.isHole = !1) : (b.firstLeft = this.mPolyOuts[c.outIdx], b.isHole = !b.firstLeft.isHole)
                },
                getDx: function(a, b) {
                    return a.y == b.y ? -3.4E38 : (b.x - a.x) / (b.y - a.y)
                },
                firstIsBottomPt: function(a, b) {
                    for (var c = a.prev; c.pt.equals(a.pt) && c != a;) c = c.prev;
                    var d = Math.abs(this.getDx(a.pt, c.pt));
                    for (c = a.next; c.pt.equals(a.pt) && c != a;) c = c.next;
                    var e = Math.abs(this.getDx(a.pt, c.pt));
                    for (c = b.prev; c.pt.equals(b.pt) &&
                        c != b;) c = c.prev;
                    var f = Math.abs(this.getDx(b.pt, c.pt));
                    for (c = b.next; c.pt.equals(b.pt) && c != b;) c = c.next;
                    b = Math.abs(this.getDx(b.pt, c.pt));
                    return Math.max(d, e) == Math.max(f, b) && Math.min(d, e) == Math.min(f, b) ? 0 < this.areaOfOutPt(a) : d >= f && d >= b ? !0 : e >= f ? e >= b : !1
                },
                getBottomPt: function(a) {
                    for (var b = null, c = a.next; c != a;) c.pt.y > a.pt.y ? (a = c, b = null) : c.pt.y == a.pt.y && c.pt.x <= a.pt.x && (c.pt.x < a.pt.x ? (b = null, a = c) : c.next != a && c.prev != a && (b = c)), c = c.next;
                    if (null != b)
                        for (; b != c;)
                            for (this.firstIsBottomPt(c, b) || (a = b), b = b.next; !b.pt.equals(a.pt);) b =
                                b.next;
                    return a
                },
                getLowermostRec: function(a, b) {
                    null == a.bottomPt && (a.bottomPt = this.getBottomPt(a.pts));
                    null == b.bottomPt && (b.bottomPt = this.getBottomPt(b.pts));
                    var c = a.bottomPt,
                        d = b.bottomPt;
                    return c.pt.y > d.pt.y ? a : c.pt.y < d.pt.y ? b : c.pt.x < d.pt.x ? a : c.pt.x > d.pt.x ? b : c.next == c ? b : d.next == d ? a : this.firstIsBottomPt(c, d) ? a : b
                },
                outRec1RightOfOutRec2: function(a, b) {
                    for (;;) {
                        a = a.firstLeft;
                        if (a == b) return !0;
                        if (null == a) break
                    }
                    return !1
                },
                getOutRec: function(a) {
                    for (a = this.mPolyOuts[a]; a != this.mPolyOuts[a.idx];) a = this.mPolyOuts[a.idx];
                    return a
                },
                appendPolygon: function(a, b) {
                    var c = this.mPolyOuts[a.outIdx],
                        d = this.mPolyOuts[b.outIdx];
                    var e = this.outRec1RightOfOutRec2(c, d) ? d : this.outRec1RightOfOutRec2(d, c) ? c : this.getLowermostRec(c, d);
                    var f = c.pts,
                        h = f.prev,
                        k = d.pts,
                        m = k.prev;
                    a.side == vf.ES_LEFT ? b.side == vf.ES_LEFT ? (this.reversePolyPtLinks(k), k.next = f, f.prev = k, h.next = m, m.prev = h, c.pts = m) : (m.next = f, f.prev = m, k.prev = h, h.next = k, c.pts = k) : b.side == vf.ES_RIGHT ? (this.reversePolyPtLinks(k), h.next = m, m.prev = h, k.next = f, f.prev = k) : (h.next = k, k.prev = h, f.prev =
                        m, m.next = f);
                    c.bottomPt = null;
                    e == d && (d.firstLeft != c && (c.firstLeft = d.firstLeft), c.isHole = d.isHole);
                    d.pts = null;
                    d.bottomPt = null;
                    d.firstLeft = c;
                    e = a.outIdx;
                    f = b.outIdx;
                    a.outIdx = -1;
                    b.outIdx = -1;
                    for (b = this.mActiveEdges; null != b;) {
                        if (b.outIdx == f) {
                            b.outIdx = e;
                            b.side = a.side;
                            break
                        }
                        b = b.nextInAEL
                    }
                    d.idx = c.idx
                },
                reversePolyPtLinks: function(a) {
                    if (null != a) {
                        var b;
                        for (b = a;;) {
                            var c = b.next;
                            b.next = b.prev;
                            b = b.prev = c;
                            if (b == a) break
                        }
                    }
                },
                intersectEdges: function(a, b, c) {
                    var d = 0 <= a.outIdx,
                        e = 0 <= b.outIdx;
                    if (a.polyType == b.polyType)
                        if (this.isEvenOddFillType(a)) {
                            var f =
                                a.windCnt;
                            a.windCnt = b.windCnt;
                            b.windCnt = f
                        } else a.windCnt = 0 == a.windCnt + b.windDelta ? -a.windCnt : a.windCnt + b.windDelta, b.windCnt = 0 == b.windCnt - a.windDelta ? -b.windCnt : b.windCnt - a.windDelta;
                    else this.isEvenOddFillType(b) ? a.windCnt2 = 0 == a.windCnt2 ? 1 : 0 : a.windCnt2 += b.windDelta, this.isEvenOddFillType(a) ? b.windCnt2 = 0 == b.windCnt2 ? 1 : 0 : b.windCnt2 -= a.windDelta;
                    if (a.polyType == Ue.PT_SUBJECT) {
                        var h = this.mSubjFillType;
                        var k = this.mClipFillType
                    } else h = this.mClipFillType, k = this.mSubjFillType;
                    if (b.polyType == Ue.PT_SUBJECT) {
                        var m =
                            this.mSubjFillType;
                        f = this.mClipFillType
                    } else m = this.mClipFillType, f = this.mSubjFillType;
                    switch (Q.enumIndex(h)) {
                        case 2:
                            h = a.windCnt;
                            break;
                        case 3:
                            h = -a.windCnt;
                            break;
                        default:
                            h = E["int"](Math.abs(a.windCnt))
                    }
                    switch (Q.enumIndex(m)) {
                        case 2:
                            m = b.windCnt;
                            break;
                        case 3:
                            m = -b.windCnt;
                            break;
                        default:
                            m = E["int"](Math.abs(b.windCnt))
                    }
                    if (d && e) 0 != h && 1 != h || 0 != m && 1 != m || a.polyType != b.polyType && this.mClipType != Ze.CT_XOR ? this.addLocalMaxPoly(a, b, c) : (this.addOutPt(a, c), this.addOutPt(b, c), Fb.swapSides(a, b), Fb.swapPolyIndexes(a,
                        b));
                    else if (d) {
                        if (0 == m || 1 == m) this.addOutPt(a, c), Fb.swapSides(a, b), Fb.swapPolyIndexes(a, b)
                    } else if (e) {
                        if (0 == h || 1 == h) this.addOutPt(b, c), Fb.swapSides(a, b), Fb.swapPolyIndexes(a, b)
                    } else if (!(0 != h && 1 != h || 0 != m && 1 != m)) {
                        switch (Q.enumIndex(k)) {
                            case 2:
                                d = a.windCnt2;
                                break;
                            case 3:
                                d = -a.windCnt2;
                                break;
                            default:
                                d = E["int"](Math.abs(a.windCnt2))
                        }
                        switch (Q.enumIndex(f)) {
                            case 2:
                                e = b.windCnt2;
                                break;
                            case 3:
                                e = -b.windCnt2;
                                break;
                            default:
                                e = E["int"](Math.abs(b.windCnt2))
                        }
                        if (a.polyType != b.polyType) this.addLocalMinPoly(a, b, c);
                        else if (1 ==
                            h && 1 == m) switch (Q.enumIndex(this.mClipType)) {
                            case 0:
                                0 < d && 0 < e && this.addLocalMinPoly(a, b, c);
                                break;
                            case 1:
                                0 >= d && 0 >= e && this.addLocalMinPoly(a, b, c);
                                break;
                            case 2:
                                (a.polyType == Ue.PT_CLIP && 0 < d && 0 < e || a.polyType == Ue.PT_SUBJECT && 0 >= d && 0 >= e) && this.addLocalMinPoly(a, b, c);
                                break;
                            case 3:
                                this.addLocalMinPoly(a, b, c)
                        } else Fb.swapSides(a, b)
                    }
                },
                processHorizontals: function() {
                    for (var a;;) {
                        var b = this.popEdgeFromSEL();
                        a = b.edge;
                        if (b.popped) this.processHorizontal(a);
                        else break
                    }
                },
                getHorzDirection: function(a, b) {
                    a.bot.x < a.top.x ?
                        (b.left = a.bot.x, b.right = a.top.x, b.dir = ze.D_LEFT_TO_RIGHT) : (b.left = a.top.x, b.right = a.bot.x, b.dir = ze.D_RIGHT_TO_LEFT)
                },
                processHorizontal: function(a) {
                    var b = 0 == a.windDelta,
                        c = {
                            dir: null,
                            left: 0,
                            right: 0
                        };
                    this.getHorzDirection(a, c);
                    var d = c.dir;
                    var e = c.left;
                    var f = c.right;
                    for (var h = a, k = null; null != h.nextInLML && Ic.isHorizontal(h.nextInLML);) h = h.nextInLML;
                    null == h.nextInLML && (k = this.getMaximaPair(h));
                    var m = this.mMaxima;
                    if (null != m)
                        if (d == ze.D_LEFT_TO_RIGHT) {
                            for (; null != m && m.x <= a.bot.x;) m = m.next;
                            null != m && m.x >= h.top.x &&
                                (m = null)
                        } else {
                            for (; null != m.next && m.next.x < a.bot.x;) m = m.next;
                            m.x <= h.top.x && (m = null)
                        } for (var g = null;;) {
                        for (var l = a == h, n = this.getNextInAEL(a, d); null != n;) {
                            if (null != m)
                                if (d == ze.D_LEFT_TO_RIGHT)
                                    for (; null != m && m.x < n.curr.x;) 0 <= a.outIdx && !b && this.addOutPt(a, new Ce(m.x, a.bot.y)), m = m.next;
                                else
                                    for (; null != m && m.x > n.curr.x;) 0 <= a.outIdx && !b && this.addOutPt(a, new Ce(m.x, a.bot.y)), m = m.prev;
                            if (d == ze.D_LEFT_TO_RIGHT && n.curr.x > f || d == ze.D_RIGHT_TO_LEFT && n.curr.x < e) break;
                            if (n.curr.x == a.top.x && null != a.nextInLML && n.dx < a.nextInLML.dx) break;
                            if (0 <= a.outIdx && !b) {
                                g = this.addOutPt(a, n.curr);
                                for (var p = this.mSortedEdges; null != p;) {
                                    if (0 <= p.outIdx && this.horzSegmentsOverlap(a.bot.x, a.top.x, p.bot.x, p.top.x)) {
                                        var x = this.getLastOutPt(p);
                                        this.addJoin(x, g, p.top)
                                    }
                                    p = p.nextInSEL
                                }
                                this.addGhostJoin(g, a.bot)
                            }
                            if (n == k && l) {
                                0 <= a.outIdx && this.addLocalMaxPoly(a, k, a.top);
                                this.deleteFromAEL(a);
                                this.deleteFromAEL(k);
                                return
                            }
                            d == ze.D_LEFT_TO_RIGHT ? (p = new Ce(n.curr.x, a.curr.y), this.intersectEdges(a, n, p)) : (p = new Ce(n.curr.x, a.curr.y), this.intersectEdges(n, a, p));
                            p = this.getNextInAEL(n,
                                d);
                            this.swapPositionsInAEL(a, n);
                            n = p
                        }
                        if (null == a.nextInLML || !Ic.isHorizontal(a.nextInLML)) break;
                        a = this.updateEdgeIntoAEL(a);
                        0 <= a.outIdx && this.addOutPt(a, a.bot);
                        this.getHorzDirection(a, c);
                        d = c.dir;
                        e = c.left;
                        f = c.right
                    }
                    if (0 <= a.outIdx && null == g) {
                        g = this.getLastOutPt(a);
                        for (d = this.mSortedEdges; null != d;) 0 <= d.outIdx && this.horzSegmentsOverlap(a.bot.x, a.top.x, d.bot.x, d.top.x) && (e = this.getLastOutPt(d), this.addJoin(e, g, d.top)), d = d.nextInSEL;
                        this.addGhostJoin(g, a.top)
                    }
                    null != a.nextInLML ? 0 <= a.outIdx ? (g = this.addOutPt(a,
                        a.top), a = this.updateEdgeIntoAEL(a), 0 != a.windDelta && (d = a.prevInAEL, e = a.nextInAEL, null != d && d.curr.x == a.bot.x && d.curr.y == a.bot.y && 0 != d.windDelta && 0 <= d.outIdx && d.curr.y > d.top.y && Ic.slopesEqual(a, d, this.mUseFullRange) ? (d = this.addOutPt(d, a.bot), this.addJoin(g, d, a.top)) : null != e && e.curr.x == a.bot.x && e.curr.y == a.bot.y && 0 != e.windDelta && 0 <= e.outIdx && e.curr.y > e.top.y && Ic.slopesEqual(a, e, this.mUseFullRange) && (d = this.addOutPt(e, a.bot), this.addJoin(g, d, a.top)))) : this.updateEdgeIntoAEL(a) : (0 <= a.outIdx && this.addOutPt(a,
                        a.top), this.deleteFromAEL(a))
                },
                getNextInAEL: function(a, b) {
                    return b == ze.D_LEFT_TO_RIGHT ? a.nextInAEL : a.prevInAEL
                },
                isMaxima: function(a, b) {
                    return null != a && a.top.y == b ? null == a.nextInLML : !1
                },
                isIntermediate: function(a, b) {
                    return a.top.y == b ? null != a.nextInLML : !1
                },
                getMaximaPair: function(a) {
                    return a.next.top.equals(a.top) && null == a.next.nextInLML ? a.next : a.prev.top.equals(a.top) && null == a.prev.nextInLML ? a.prev : null
                },
                getMaximaPairEx: function(a) {
                    a = this.getMaximaPair(a);
                    return null == a || -2 == a.outIdx || a.nextInAEL == a.prevInAEL &&
                        !Ic.isHorizontal(a) ? null : a
                },
                processIntersections: function(a) {
                    if (null == this.mActiveEdges) return !0;
                    try {
                        this.buildIntersectList(a);
                        if (0 == this.mIntersectList.length) return !0;
                        if (1 == this.mIntersectList.length || this.fixupIntersectionOrder()) this.processIntersectList();
                        else return !1
                    } catch (b) {
                        throw vb.lastException = b, this.mSortedEdges = null, Dg.clear(this.mIntersectList), new Z(new pj("ProcessIntersections error"));
                    }
                    this.mSortedEdges = null;
                    return !0
                },
                buildIntersectList: function(a) {
                    if (null != this.mActiveEdges) {
                        var b =
                            this.mActiveEdges;
                        for (this.mSortedEdges = b; null != b;) b.prevInSEL = b.prevInAEL, b.nextInSEL = b.nextInAEL, b.curr.x = Fb.topX(b, a), b = b.nextInAEL;
                        for (var c = !0; c && null != this.mSortedEdges;) {
                            c = !1;
                            for (b = this.mSortedEdges; null != b.nextInSEL;) {
                                var d = b.nextInSEL,
                                    e = new Ce;
                                b.curr.x > d.curr.x ? (this.intersectPoint(b, d, e), e.y < a && (e = new Ce(Fb.topX(b, a), a)), c = new eu, c.edge1 = b, c.edge2 = d, c.pt.copyFrom(e), this.mIntersectList.push(c), this.swapPositionsInSEL(b, d), c = !0) : b = d
                            }
                            if (null != b.prevInSEL) b.prevInSEL.nextInSEL = null;
                            else break
                        }
                        this.mSortedEdges =
                            null
                    }
                },
                edgesAdjacent: function(a) {
                    return a.edge1.nextInSEL != a.edge2 ? a.edge1.prevInSEL == a.edge2 : !0
                },
                fixupIntersectionOrder: function() {
                    Fd.sort(this.mIntersectList, this.mIntersectNodeComparer);
                    this.copyAELToSEL();
                    for (var a = this.mIntersectList.length, b = 0; b < a;) {
                        var c = b++;
                        if (!this.edgesAdjacent(this.mIntersectList[c])) {
                            for (var d = c + 1; d < a && !this.edgesAdjacent(this.mIntersectList[d]);) ++d;
                            if (d == a) return !1;
                            var e = this.mIntersectList[c];
                            this.mIntersectList[c] = this.mIntersectList[d];
                            this.mIntersectList[d] = e
                        }
                        this.swapPositionsInSEL(this.mIntersectList[c].edge1,
                            this.mIntersectList[c].edge2)
                    }
                    return !0
                },
                processIntersectList: function() {
                    for (var a = 0, b = this.mIntersectList.length; a < b;) {
                        var c = a++;
                        c = this.mIntersectList[c];
                        this.intersectEdges(c.edge1, c.edge2, c.pt);
                        this.swapPositionsInAEL(c.edge1, c.edge2)
                    }
                    Dg.clear(this.mIntersectList)
                },
                intersectPoint: function(a, b, c) {
                    if (a.dx == b.dx) c.y = a.curr.y, c.x = Fb.topX(a, c.y);
                    else {
                        if (0 == a.delta.x)
                            if (c.x = a.bot.x, Ic.isHorizontal(b)) c.y = b.bot.y;
                            else {
                                var d = b.bot.y - b.bot.x / b.dx;
                                c.y = Fb.round(c.x / b.dx + d)
                            }
                        else if (0 == b.delta.x)
                            if (c.x = b.bot.x,
                                Ic.isHorizontal(a)) c.y = a.bot.y;
                            else {
                                var e = a.bot.y - a.bot.x / a.dx;
                                c.y = Fb.round(c.x / a.dx + e)
                            }
                        else {
                            e = a.bot.x - a.bot.y * a.dx;
                            d = b.bot.x - b.bot.y * b.dx;
                            var f = (d - e) / (a.dx - b.dx);
                            c.y = Fb.round(f);
                            c.x = Math.abs(a.dx) < Math.abs(b.dx) ? Fb.round(a.dx * f + e) : Fb.round(b.dx * f + d)
                        }
                        if (c.y < a.top.y || c.y < b.top.y) c.y = a.top.y > b.top.y ? a.top.y : b.top.y, c.x = Math.abs(a.dx) < Math.abs(b.dx) ? Fb.topX(a, c.y) : Fb.topX(b, c.y);
                        c.y > a.curr.y && (c.y = a.curr.y, c.x = Math.abs(a.dx) > Math.abs(b.dx) ? Fb.topX(b, c.y) : Fb.topX(a, c.y))
                    }
                },
                processEdgesAtTopOfScanbeam: function(a) {
                    for (var b =
                            this.mActiveEdges; null != b;) {
                        var c = this.isMaxima(b, a);
                        c && (c = this.getMaximaPairEx(b), c = null != c ? !Ic.isHorizontal(c) : !0);
                        if (c) this.strictlySimple && this.insertMaxima(b.top.x), c = b.prevInAEL, this.doMaxima(b), b = null == c ? this.mActiveEdges : c.nextInAEL;
                        else {
                            this.isIntermediate(b, a) && Ic.isHorizontal(b.nextInLML) ? (b = this.updateEdgeIntoAEL(b), 0 <= b.outIdx && this.addOutPt(b, b.bot), this.addEdgeToSEL(b)) : (b.curr.x = Fb.topX(b, a), b.curr.y = a);
                            if (this.strictlySimple) {
                                var d = b.prevInAEL;
                                if (0 <= b.outIdx && 0 != b.windDelta && null !=
                                    d && 0 <= d.outIdx && d.curr.x == b.curr.x && 0 != d.windDelta) {
                                    c = b.curr.clone();
                                    d = this.addOutPt(d, c);
                                    var e = this.addOutPt(b, c);
                                    this.addJoin(d, e, c)
                                }
                            }
                            b = b.nextInAEL
                        }
                    }
                    this.processHorizontals();
                    this.mMaxima = null;
                    for (b = this.mActiveEdges; null != b;) this.isIntermediate(b, a) && (c = null, 0 <= b.outIdx && (c = this.addOutPt(b, b.top)), b = this.updateEdgeIntoAEL(b), d = b.prevInAEL, e = b.nextInAEL, null != d && d.curr.x == b.bot.x && d.curr.y == b.bot.y && null != c && 0 <= d.outIdx && d.curr.y > d.top.y && Ic.slopesEqual4(b.curr, b.top, d.curr, d.top, this.mUseFullRange) &&
                        0 != b.windDelta && 0 != d.windDelta ? (d = this.addOutPt(d, b.bot), this.addJoin(c, d, b.top)) : null != e && e.curr.x == b.bot.x && e.curr.y == b.bot.y && null != c && 0 <= e.outIdx && e.curr.y > e.top.y && Ic.slopesEqual4(b.curr, b.top, e.curr, e.top, this.mUseFullRange) && 0 != b.windDelta && 0 != e.windDelta && (d = this.addOutPt(e, b.bot), this.addJoin(c, d, b.top))), b = b.nextInAEL
                },
                doMaxima: function(a) {
                    var b = this.getMaximaPairEx(a);
                    if (null == b) 0 <= a.outIdx && this.addOutPt(a, a.top), this.deleteFromAEL(a);
                    else {
                        for (var c = a.nextInAEL; null != c && c != b;) this.intersectEdges(a,
                            c, a.top), this.swapPositionsInAEL(a, c), c = a.nextInAEL;
                        if (-1 == a.outIdx && -1 == b.outIdx) this.deleteFromAEL(a), this.deleteFromAEL(b);
                        else if (0 <= a.outIdx && 0 <= b.outIdx) 0 <= a.outIdx && this.addLocalMaxPoly(a, b, a.top), this.deleteFromAEL(a), this.deleteFromAEL(b);
                        else throw new Z(new pj("DoMaxima error"));
                    }
                },
                pointCount: function(a) {
                    if (null == a) return 0;
                    for (var b = 0, c = a; ++b, c = c.next, c != a;);
                    return b
                },
                buildResult: function(a) {
                    Dg.clear(a);
                    for (var b = 0, c = this.mPolyOuts.length; b < c;) {
                        var d = b++;
                        d = this.mPolyOuts[d];
                        if (null != d.pts) {
                            d =
                                d.pts.prev;
                            var e = this.pointCount(d);
                            if (!(2 > e)) {
                                for (var f = [], h = 0; h < e;) h++, f.push(d.pt), d = d.prev;
                                a.push(f)
                            }
                        }
                    }
                },
                fixupOutPolyLine: function(a) {
                    for (var b = a.pts, c = b.prev; b != c;)
                        if (b = b.next, b.pt == b.prev.pt) {
                            b == c && (c = b.prev);
                            var d = b.prev;
                            d.next = b.next;
                            b = b.next.prev = d
                        } b == b.prev && (a.pts = null)
                },
                fixupOutPolygon: function(a) {
                    var b = null;
                    a.bottomPt = null;
                    for (var c = a.pts, d = this.preserveCollinear || this.strictlySimple;;) {
                        if (c.prev == c || c.prev == c.next) {
                            a.pts = null;
                            return
                        }
                        if (c.pt.equals(c.next.pt) || c.pt.equals(c.prev.pt) ||
                            Ic.slopesEqual3(c.prev.pt, c.pt, c.next.pt, this.mUseFullRange) && (!d || !this.pt2IsBetweenPt1AndPt3(c.prev.pt, c.pt, c.next.pt))) b = null, c.prev.next = c.next, c = c.next.prev = c.prev;
                        else if (c == b) break;
                        else null == b && (b = c), c = c.next
                    }
                    a.pts = c
                },
                dupOutPt: function(a, b) {
                    var c = new qo;
                    c.pt.copyFrom(a.pt);
                    c.idx = a.idx;
                    b ? (c.next = a.next, c.prev = a, a.next.prev = c, a.next = c) : (c.prev = a.prev, c.next = a, a.prev.next = c, a.prev = c);
                    return c
                },
                getOverlap: function(a, b, c, d, e) {
                    a < b ? c < d ? (e.left = E["int"](Math.max(a, c)), e.right = E["int"](Math.min(b,
                        d))) : (e.left = E["int"](Math.max(a, d)), e.right = E["int"](Math.min(b, c))) : c < d ? (e.left = E["int"](Math.max(b, c)), e.right = E["int"](Math.min(a, d))) : (e.left = E["int"](Math.max(b, d)), e.right = E["int"](Math.min(a, c)));
                    return e.left < e.right
                },
                joinHorz: function(a, b, c, d, e, f) {
                    var h = a.pt.x > b.pt.x ? ze.D_RIGHT_TO_LEFT : ze.D_LEFT_TO_RIGHT;
                    d = c.pt.x > d.pt.x ? ze.D_RIGHT_TO_LEFT : ze.D_LEFT_TO_RIGHT;
                    if (h == d) return !1;
                    if (h == ze.D_LEFT_TO_RIGHT) {
                        for (; a.next.pt.x <= e.x && a.next.pt.x >= a.pt.x && a.next.pt.y == e.y;) a = a.next;
                        f && a.pt.x != e.x && (a =
                            a.next);
                        b = this.dupOutPt(a, !f);
                        b.pt.equals(e) || (a = b, a.pt.copyFrom(e), b = this.dupOutPt(a, !f))
                    } else {
                        for (; a.next.pt.x >= e.x && a.next.pt.x <= a.pt.x && a.next.pt.y == e.y;) a = a.next;
                        f || a.pt.x == e.x || (a = a.next);
                        b = this.dupOutPt(a, f);
                        b.pt.equals(e) || (a = b, a.pt.copyFrom(e), b = this.dupOutPt(a, f))
                    }
                    if (d == ze.D_LEFT_TO_RIGHT) {
                        for (; c.next.pt.x <= e.x && c.next.pt.x >= c.pt.x && c.next.pt.y == e.y;) c = c.next;
                        f && c.pt.x != e.x && (c = c.next);
                        d = this.dupOutPt(c, !f);
                        d.pt.equals(e) || (c = d, c.pt.copyFrom(e), d = this.dupOutPt(c, !f))
                    } else {
                        for (; c.next.pt.x >=
                            e.x && c.next.pt.x <= c.pt.x && c.next.pt.y == e.y;) c = c.next;
                        f || c.pt.x == e.x || (c = c.next);
                        d = this.dupOutPt(c, f);
                        d.pt.equals(e) || (c = d, c.pt.copyFrom(e), d = this.dupOutPt(c, f))
                    }
                    h == ze.D_LEFT_TO_RIGHT == f ? (a.prev = c, c.next = a, b.next = d, d.prev = b) : (a.next = c, c.prev = a, b.prev = d, d.next = b);
                    return !0
                },
                joinPoints: function(a, b, c) {
                    var d = a.outPt1,
                        e, f = a.outPt2,
                        h;
                    if ((h = a.outPt1.pt.y == a.offPt.y) && a.offPt.equals(a.outPt1.pt) && a.offPt.equals(a.outPt2.pt)) {
                        if (b != c) return !1;
                        for (e = a.outPt1.next; e != d && e.pt.equals(a.offPt);) e = e.next;
                        e = e.pt.y >
                            a.offPt.y;
                        for (h = a.outPt2.next; h != f && h.pt.equals(a.offPt);) h = h.next;
                        if (e == h.pt.y > a.offPt.y) return !1;
                        e ? (e = this.dupOutPt(d, !1), h = this.dupOutPt(f, !0), d.prev = f, f.next = d, e.next = h, h.prev = e) : (e = this.dupOutPt(d, !0), h = this.dupOutPt(f, !1), d.next = f, f.prev = d, e.prev = h, h.next = e);
                        a.outPt1 = d;
                        a.outPt2 = e;
                        return !0
                    }
                    if (h) {
                        for (e = d; d.prev.pt.y == d.pt.y && d.prev != e && d.prev != f;) d = d.prev;
                        for (; e.next.pt.y == e.pt.y && e.next != d && e.next != f;) e = e.next;
                        if (e.next == d || e.next == f) return !1;
                        for (h = f; f.prev.pt.y == f.pt.y && f.prev != h && f.prev != e;) f =
                            f.prev;
                        for (; h.next.pt.y == h.pt.y && h.next != f && h.next != d;) h = h.next;
                        if (h.next == f || h.next == d) return !1;
                        c = {
                            left: 0,
                            right: 0
                        };
                        if (!this.getOverlap(d.pt.x, e.pt.x, f.pt.x, h.pt.x, c)) return !1;
                        b = c.left;
                        var k = c.right;
                        c = new Ce;
                        d.pt.x >= b && d.pt.x <= k ? (c.copyFrom(d.pt), b = d.pt.x > e.pt.x) : f.pt.x >= b && f.pt.x <= k ? (c.copyFrom(f.pt), b = f.pt.x > h.pt.x) : e.pt.x >= b && e.pt.x <= k ? (c.copyFrom(e.pt), b = e.pt.x > d.pt.x) : (c.copyFrom(h.pt), b = h.pt.x > f.pt.x);
                        a.outPt1 = d;
                        a.outPt2 = f;
                        return this.joinHorz(d, e, f, h, c, b)
                    }
                    for (e = d.next; e.pt.equals(d.pt) && e !=
                        d;) e = e.next;
                    if (k = e.pt.y > d.pt.y || !Ic.slopesEqual3(d.pt, e.pt, a.offPt, this.mUseFullRange)) {
                        for (e = d.prev; e.pt.equals(d.pt) && e != d;) e = e.prev;
                        if (e.pt.y > d.pt.y || !Ic.slopesEqual3(d.pt, e.pt, a.offPt, this.mUseFullRange)) return !1
                    }
                    for (h = f.next; h.pt.equals(f.pt) && h != f;) h = h.next;
                    var m = h.pt.y > f.pt.y || !Ic.slopesEqual3(f.pt, h.pt, a.offPt, this.mUseFullRange);
                    if (m) {
                        for (h = f.prev; h.pt.equals(f.pt) && h != f;) h = h.prev;
                        if (h.pt.y > f.pt.y || !Ic.slopesEqual3(f.pt, h.pt, a.offPt, this.mUseFullRange)) return !1
                    }
                    if (e == d || h == f || e == h || b == c &&
                        k == m) return !1;
                    k ? (e = this.dupOutPt(d, !1), h = this.dupOutPt(f, !0), d.prev = f, f.next = d, e.next = h, h.prev = e) : (e = this.dupOutPt(d, !0), h = this.dupOutPt(f, !1), d.next = f, f.prev = d, e.prev = h, h.next = e);
                    a.outPt1 = d;
                    a.outPt2 = e;
                    return !0
                },
                fixupFirstLefts1: function(a, b) {
                    for (var c = 0, d = this.mPolyOuts.length; c < d;) {
                        var e = c++;
                        e = this.mPolyOuts[e];
                        var f = Fb.parseFirstLeft(e.firstLeft);
                        null != e.pts && f == a && Fb.poly2ContainsPoly1(e.pts, b.pts) && (e.firstLeft = b)
                    }
                },
                fixupFirstLefts2: function(a, b) {
                    for (var c = b.firstLeft, d = 0, e = this.mPolyOuts; d <
                        e.length;) {
                        var f = e[d];
                        ++d;
                        if (null != f.pts && f != b && f != a) {
                            var h = Fb.parseFirstLeft(f.firstLeft);
                            if (h == c || h == a || h == b)
                                if (Fb.poly2ContainsPoly1(f.pts, a.pts)) f.firstLeft = a;
                                else if (Fb.poly2ContainsPoly1(f.pts, b.pts)) f.firstLeft = b;
                            else if (f.firstLeft == a || f.firstLeft == b) f.firstLeft = c
                        }
                    }
                },
                fixupFirstLefts3: function(a, b) {
                    for (var c = 0, d = this.mPolyOuts; c < d.length;) {
                        var e = d[c];
                        ++c;
                        var f = Fb.parseFirstLeft(e.firstLeft);
                        null != e.pts && f == a && (e.firstLeft = b)
                    }
                },
                joinCommonEdges: function() {
                    for (var a = 0, b = this.mJoins.length; a < b;) {
                        var c =
                            a++;
                        c = this.mJoins[c];
                        var d = this.getOutRec(c.outPt1.idx),
                            e = this.getOutRec(c.outPt2.idx);
                        if (null != d.pts && null != e.pts && !d.isOpen && !e.isOpen) {
                            var f = d == e ? d : this.outRec1RightOfOutRec2(d, e) ? e : this.outRec1RightOfOutRec2(e, d) ? d : this.getLowermostRec(d, e);
                            this.joinPoints(c, d, e) && (d == e ? (d.pts = c.outPt1, d.bottomPt = null, e = this.createOutRec(), e.pts = c.outPt2, this.updateOutPtIdxs(e), Fb.poly2ContainsPoly1(e.pts, d.pts) ? (e.isHole = !d.isHole, e.firstLeft = d, this.mUsingPolyTree && this.fixupFirstLefts2(e, d), Dg.xor(e.isHole,
                                this.reverseSolution) == 0 < this.areaOfOutRec(e) && this.reversePolyPtLinks(e.pts)) : Fb.poly2ContainsPoly1(d.pts, e.pts) ? (e.isHole = d.isHole, d.isHole = !e.isHole, e.firstLeft = d.firstLeft, d.firstLeft = e, this.mUsingPolyTree && this.fixupFirstLefts2(d, e), Dg.xor(d.isHole, this.reverseSolution) == 0 < this.areaOfOutRec(d) && this.reversePolyPtLinks(d.pts)) : (e.isHole = d.isHole, e.firstLeft = d.firstLeft, this.mUsingPolyTree && this.fixupFirstLefts1(d, e))) : (e.pts = null, e.bottomPt = null, e.idx = d.idx, d.isHole = f.isHole, f == e && (d.firstLeft =
                                e.firstLeft), e.firstLeft = d, this.mUsingPolyTree && this.fixupFirstLefts3(e, d)))
                        }
                    }
                },
                updateOutPtIdxs: function(a) {
                    for (var b = a.pts; b.idx = a.idx, b = b.prev, b != a.pts;);
                },
                doSimplePolygons: function() {
                    for (var a = 0; a < this.mPolyOuts.length;) {
                        var b = this.mPolyOuts[a++],
                            c = b.pts;
                        if (null != c && !b.isOpen)
                            for (;;) {
                                for (var d = c.next; d != b.pts;) {
                                    if (c.pt.equals(d.pt) && d.next != c && d.prev != c) {
                                        var e = c.prev,
                                            f = d.prev;
                                        c.prev = f;
                                        f.next = c;
                                        d.prev = e;
                                        e.next = d;
                                        b.pts = c;
                                        e = this.createOutRec();
                                        e.pts = d;
                                        this.updateOutPtIdxs(e);
                                        Fb.poly2ContainsPoly1(e.pts,
                                            b.pts) ? (e.isHole = !b.isHole, e.firstLeft = b, this.mUsingPolyTree && this.fixupFirstLefts2(e, b)) : Fb.poly2ContainsPoly1(b.pts, e.pts) ? (e.isHole = b.isHole, b.isHole = !e.isHole, e.firstLeft = b.firstLeft, b.firstLeft = e, this.mUsingPolyTree && this.fixupFirstLefts2(b, e)) : (e.isHole = b.isHole, e.firstLeft = b.firstLeft, this.mUsingPolyTree && this.fixupFirstLefts1(b, e));
                                        d = c
                                    }
                                    d = d.next
                                }
                                c = c.next;
                                if (c == b.pts) break
                            }
                    }
                },
                areaOfOutRec: function(a) {
                    return this.areaOfOutPt(a.pts)
                },
                areaOfOutPt: function(a) {
                    var b = a;
                    if (null == a) return 0;
                    for (var c =
                            0; c += (a.prev.pt.x + a.pt.x) * (a.prev.pt.y - a.pt.y), a = a.next, a != b;);
                    return .5 * c
                },
                __class__: Fb
            });
            var pj = function(a) {
                this.desc = a
            };
            g["hxClipper.ClipperException"] = pj;
            pj.__name__ = ["hxClipper", "ClipperException"];
            pj.prototype = {
                desc: null,
                toString: function() {
                    return this.desc
                },
                __class__: pj
            };
            var Dg = function() {};
            g["hxClipper.InternalTools"] = Dg;
            Dg.__name__ = ["hxClipper", "InternalTools"];
            Dg.clear = function(a) {
                a.length = 0
            };
            Dg.xor = function(a, b) {
                return !a || b ? b ? !a : !1 : !0
            };
            var Z = function(a) {
                Error.call(this);
                this.val = a;
                this.message =
                    String(a);
                Error.captureStackTrace && Error.captureStackTrace(this, Z)
            };
            g["js._Boot.HaxeError"] = Z;
            Z.__name__ = ["js", "_Boot", "HaxeError"];
            Z.wrap = function(a) {
                return a instanceof Error ? a : new Z(a)
            };
            Z.__super__ = Error;
            Z.prototype = p(Error.prototype, {
                val: null,
                __class__: Z
            });
            var aa = function() {};
            g["js.Boot"] = aa;
            aa.__name__ = ["js", "Boot"];
            aa.__unhtml = function(a) {
                return a.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;")
            };
            aa.__trace = function(a, b) {
                var c = null != b ? b.fileName + ":" + b.lineNumber + ": " :
                    "";
                c += aa.__string_rec(a, "");
                if (null != b && null != b.customParams)
                    for (a = 0, b = b.customParams; a < b.length;) {
                        var d = b[a];
                        ++a;
                        c += "," + aa.__string_rec(d, "")
                    }
                if ("undefined" != typeof document) {
                    var e = document.getElementById("haxe:trace");
                    a = null != e
                } else a = !1;
                a ? e.innerHTML += aa.__unhtml(c) + "<br/>" : "undefined" != typeof console && null != console.log && console.log(c)
            };
            aa.isClass = function(a) {
                return a.__name__
            };
            aa.isEnum = function(a) {
                return a.__ename__
            };
            aa.getClass = function(a) {
                if (a instanceof Array && null == a.__enum__) return Array;
                var b = a.__class__;
                if (null != b) return b;
                a = aa.__nativeClassName(a);
                return null != a ? aa.__resolveNativeClass(a) : null
            };
            aa.__string_rec = function(a, b) {
                if (null == a) return "null";
                if (5 <= b.length) return "<...>";
                var c = typeof a;
                "function" == c && (aa.isClass(a) || aa.isEnum(a)) && (c = "object");
                switch (c) {
                    case "function":
                        return "<function>";
                    case "object":
                        if (a instanceof Array) {
                            if (a.__enum__) {
                                if (2 == a.length) return a[0];
                                c = a[0] + "(";
                                b += "\t";
                                for (var d = 2, e = a.length; d < e;) {
                                    var f = d++;
                                    c = 2 != f ? c + ("," + aa.__string_rec(a[f], b)) : c + aa.__string_rec(a[f],
                                        b)
                                }
                                return c + ")"
                            }
                            c = a.length;
                            d = "[";
                            b += "\t";
                            for (e = 0; e < c;) f = e++, d += (0 < f ? "," : "") + aa.__string_rec(a[f], b);
                            return d + "]"
                        }
                        try {
                            d = a.toString
                        } catch (h) {
                            return vb.lastException = h, "???"
                        }
                        if (null != d && d != Object.toString && "function" == typeof d && (c = a.toString(), "[object Object]" != c)) return c;
                        c = null;
                        d = "{\n";
                        b += "\t";
                        e = null != a.hasOwnProperty;
                        for (c in a) e && !a.hasOwnProperty(c) || "prototype" == c || "__class__" == c || "__super__" == c || "__interfaces__" == c || "__properties__" == c || (2 != d.length && (d += ", \n"), d += b + c + " : " + aa.__string_rec(a[c],
                            b));
                        b = b.substring(1);
                        return d + ("\n" + b + "}");
                    case "string":
                        return a;
                    default:
                        return String(a)
                }
            };
            aa.__interfLoop = function(a, b) {
                if (null == a) return !1;
                if (a == b) return !0;
                var c = a.__interfaces__;
                if (null != c)
                    for (var d = 0, e = c.length; d < e;) {
                        var f = d++;
                        f = c[f];
                        if (f == b || aa.__interfLoop(f, b)) return !0
                    }
                return aa.__interfLoop(a.__super__, b)
            };
            aa.__instanceof = function(a, b) {
                if (null == b) return !1;
                switch (b) {
                    case Array:
                        return a instanceof Array ? null == a.__enum__ : !1;
                    case Pp:
                        return "boolean" == typeof a;
                    case dx:
                        return !0;
                    case Jw:
                        return "number" ==
                            typeof a;
                    case Lv:
                        return "number" == typeof a ? (a | 0) === a : !1;
                    case String:
                        return "string" == typeof a;
                    default:
                        if (null != a)
                            if ("function" == typeof b) {
                                if (a instanceof b || aa.__interfLoop(aa.getClass(a), b)) return !0
                            } else {
                                if ("object" == typeof b && aa.__isNativeObj(b) && a instanceof b) return !0
                            }
                        else return !1;
                        return b == Ow && null != a.__name__ || b == Pw && null != a.__ename__ ? !0 : a.__enum__ == b
                }
            };
            aa.__cast = function(a, b) {
                if (aa.__instanceof(a, b)) return a;
                throw new Z("Cannot cast " + E.string(a) + " to " + E.string(b));
            };
            aa.__nativeClassName = function(a) {
                a =
                    aa.__toStr.call(a).slice(8, -1);
                return "Object" == a || "Function" == a || "Math" == a || "JSON" == a ? null : a
            };
            aa.__isNativeObj = function(a) {
                return null != aa.__nativeClassName(a)
            };
            aa.__resolveNativeClass = function(a) {
                return C[a]
            };
            var La = function() {};
            g["js.Browser"] = La;
            La.__name__ = ["js", "Browser"];
            La.get_window = function() {
                return window
            };
            La.get_document = function() {
                return window.document
            };
            La.get_location = function() {
                return window.location
            };
            La.get_navigator = function() {
                return window.navigator
            };
            La.get_supported = function() {
                return "undefined" !=
                    typeof La.get_window()
            };
            La.getLocalStorage = function() {
                try {
                    var a = La.get_window().localStorage;
                    a.getItem("");
                    return a
                } catch (b) {
                    return vb.lastException = b, null
                }
            };
            var Xo = function() {};
            g["js.Lib"] = Xo;
            Xo.__name__ = ["js", "Lib"];
            Xo.eval = function(a) {
                return eval(a)
            };
            Xo.get_undefined = function() {};
            var Xv = function() {};
            g["js.html._CanvasElement.CanvasUtil"] = Xv;
            Xv.__name__ = ["js", "html", "_CanvasElement", "CanvasUtil"];
            Xv.getContextWebGL = function(a, b) {
                for (var c = 0, d = ["webgl", "experimental-webgl"]; c < d.length;) {
                    var e = d[c];
                    ++c;
                    e = a.getContext(e, b);
                    if (null != e) return e
                }
                return null
            };
            var Nf = function(a) {
                if (a instanceof Array && null == a.__enum__) this.a = a, this.byteLength = a.length;
                else {
                    this.a = [];
                    for (var b = 0; b < a;) {
                        var c = b++;
                        this.a[c] = 0
                    }
                    this.byteLength = a
                }
            };
            g["js.html.compat.ArrayBuffer"] = Nf;
            Nf.__name__ = ["js", "html", "compat", "ArrayBuffer"];
            Nf.sliceImpl = function(a, b) {
                a = new Cf(this, a, null == b ? null : b - a);
                b = new Ng(a.byteLength);
                (new Cf(b)).set(a);
                return b
            };
            Nf.prototype = {
                byteLength: null,
                a: null,
                slice: function(a, b) {
                    return new Nf(this.a.slice(a,
                        b))
                },
                __class__: Nf
            };
            var hu = function(a, b, c) {
                this.buf = a;
                this.offset = null == b ? 0 : b;
                this.length = null == c ? a.byteLength - this.offset : c;
                if (0 > this.offset || 0 > this.length || this.offset + this.length > a.byteLength) throw new Z(se.OutsideBounds);
                this.byteLength = this.length;
                this.byteOffset = this.offset;
                this.buffer = this.buf
            };
            g["js.html.compat.DataView"] = hu;
            hu.__name__ = ["js", "html", "compat", "DataView"];
            hu.prototype = {
                buf: null,
                offset: null,
                length: null,
                byteLength: null,
                byteOffset: null,
                buffer: null,
                getInt8: function(a) {
                    a = this.buf.a[this.offset +
                        a];
                    return 128 <= a ? a - 256 : a
                },
                getUint8: function(a) {
                    return this.buf.a[this.offset + a]
                },
                getInt16: function(a, b) {
                    a = this.getUint16(a, b);
                    return 32768 <= a ? a - 65536 : a
                },
                getUint16: function(a, b) {
                    return b ? this.buf.a[this.offset + a] | this.buf.a[this.offset + a + 1] << 8 : this.buf.a[this.offset + a] << 8 | this.buf.a[this.offset + a + 1]
                },
                getInt32: function(a, b) {
                    var c = this.offset + a;
                    a = this.buf.a[c++];
                    var d = this.buf.a[c++],
                        e = this.buf.a[c++];
                    c = this.buf.a[c++];
                    return b ? a | d << 8 | e << 16 | c << 24 : c | e << 8 | d << 16 | a << 24
                },
                getUint32: function(a, b) {
                    a = this.getInt32(a,
                        b);
                    return 0 > a ? a + 4294967296 : a
                },
                getFloat32: function(a, b) {
                    return Tg.i32ToFloat(this.getInt32(a, b))
                },
                getFloat64: function(a, b) {
                    var c = this.getInt32(a, b);
                    a = this.getInt32(a + 4, b);
                    return Tg.i64ToDouble(b ? c : a, b ? a : c)
                },
                setInt8: function(a, b) {
                    this.buf.a[a + this.offset] = 0 > b ? b + 128 & 255 : b & 255
                },
                setUint8: function(a, b) {
                    this.buf.a[a + this.offset] = b & 255
                },
                setInt16: function(a, b, c) {
                    this.setUint16(a, 0 > b ? b + 65536 : b, c)
                },
                setUint16: function(a, b, c) {
                    a += this.offset;
                    c ? (this.buf.a[a] = b & 255, this.buf.a[a++] = b >> 8 & 255) : (this.buf.a[a++] = b >>
                        8 & 255, this.buf.a[a] = b & 255)
                },
                setInt32: function(a, b, c) {
                    this.setUint32(a, b, c)
                },
                setUint32: function(a, b, c) {
                    a += this.offset;
                    c ? (this.buf.a[a++] = b & 255, this.buf.a[a++] = b >> 8 & 255, this.buf.a[a++] = b >> 16 & 255, this.buf.a[a++] = b >>> 24) : (this.buf.a[a++] = b >>> 24, this.buf.a[a++] = b >> 16 & 255, this.buf.a[a++] = b >> 8 & 255, this.buf.a[a++] = b & 255)
                },
                setFloat32: function(a, b, c) {
                    this.setUint32(a, Tg.floatToI32(b), c)
                },
                setFloat64: function(a, b, c) {
                    b = Tg.doubleToI64(b);
                    c ? (this.setUint32(a, b.low), this.setUint32(a, b.high)) : (this.setUint32(a, b.high),
                        this.setUint32(a, b.low))
                },
                __class__: hu
            };
            var qj = function() {};
            g["js.html.compat.Float32Array"] = qj;
            qj.__name__ = ["js", "html", "compat", "Float32Array"];
            qj._new = function(a, b, c) {
                if ("number" == typeof a) {
                    var d = [];
                    for (b = 0; b < a;) {
                        var e = b++;
                        d[e] = 0
                    }
                    d.byteLength = d.length << 2;
                    d.byteOffset = 0;
                    a = [];
                    b = 0;
                    for (e = d.length << 2; b < e;) b++, a.push(0);
                    d.buffer = new Nf(a)
                } else if (E.is(a, Nf)) {
                    null == b && (b = 0);
                    null == c && (c = a.byteLength - b >> 2);
                    d = [];
                    for (e = 0; e < c;) {
                        e++;
                        var f = a.a[b++] | a.a[b++] << 8 | a.a[b++] << 16 | a.a[b++] << 24;
                        d.push(Tg.i32ToFloat(f))
                    }
                    d.byteLength =
                        d.length << 2;
                    d.byteOffset = b;
                    d.buffer = a
                } else if (a instanceof Array && null == a.__enum__) {
                    d = a.slice();
                    a = [];
                    for (b = 0; b < d.length;) e = d[b], ++b, e = Tg.floatToI32(e), a.push(e & 255), a.push(e >> 8 & 255), a.push(e >> 16 & 255), a.push(e >>> 24);
                    d.byteLength = d.length << 2;
                    d.byteOffset = 0;
                    d.buffer = new Nf(a)
                } else throw new Z("TODO " + E.string(a));
                d.subarray = qj._subarray;
                d.set = qj._set;
                return d
            };
            qj._set = function(a, b) {
                if (E.is(a.buffer, Nf)) {
                    if (a.byteLength + b > this.byteLength) throw new Z("set() outside of range");
                    for (var c = 0, d = a.byteLength; c <
                        d;) {
                        var e = c++;
                        this[e + b] = a[e]
                    }
                } else if (a instanceof Array && null == a.__enum__) {
                    if (a.length + b > this.byteLength) throw new Z("set() outside of range");
                    c = 0;
                    for (d = a.length; c < d;) e = c++, this[e + b] = a[e]
                } else throw new Z("TODO");
            };
            qj._subarray = function(a, b) {
                b = qj._new(this.slice(a, b));
                b.byteOffset = 4 * a;
                return b
            };
            var rj = function() {};
            g["js.html.compat.Uint8Array"] = rj;
            rj.__name__ = ["js", "html", "compat", "Uint8Array"];
            rj._new = function(a, b, c) {
                if ("number" == typeof a) {
                    c = [];
                    for (b = 0; b < a;) {
                        var d = b++;
                        c[d] = 0
                    }
                    c.byteLength = c.length;
                    c.byteOffset = 0;
                    c.buffer = new Nf(c)
                } else if (E.is(a, Nf)) null == b && (b = 0), null == c && (c = a.byteLength - b), c = 0 == b ? a.a : a.a.slice(b, b + c), c.byteLength = c.length, c.byteOffset = b, c.buffer = a;
                else if (a instanceof Array && null == a.__enum__) c = a.slice(), c.byteLength = c.length, c.byteOffset = 0, c.buffer = new Nf(c);
                else throw new Z("TODO " + E.string(a));
                c.subarray = rj._subarray;
                c.set = rj._set;
                return c
            };
            rj._set = function(a, b) {
                if (E.is(a.buffer, Nf)) {
                    if (a.byteLength + b > this.byteLength) throw new Z("set() outside of range");
                    for (var c = 0, d =
                            a.byteLength; c < d;) {
                        var e = c++;
                        this[e + b] = a[e]
                    }
                } else if (a instanceof Array && null == a.__enum__) {
                    if (a.length + b > this.byteLength) throw new Z("set() outside of range");
                    c = 0;
                    for (d = a.length; c < d;) e = c++, this[e + b] = a[e]
                } else throw new Z("TODO");
            };
            rj._subarray = function(a, b) {
                b = rj._new(this.slice(a, b));
                b.byteOffset = a;
                return b
            };
            var hs = function() {
                this.connected = !0;
                this.buttons = [];
                this.axes = []
            };
            g["lime._internal.backend.html5.GameDeviceData"] = hs;
            hs.__name__ = ["lime", "_internal", "backend", "html5", "GameDeviceData"];
            hs.prototype = {
                connected: null,
                id: null,
                isGamepad: null,
                buttons: null,
                axes: null,
                __class__: hs
            };
            var ju = function(a) {
                this.parent = a;
                this.id = -1;
                this.gain = 1;
                this.position = new iu
            };
            g["lime._internal.backend.html5.HTML5AudioSource"] = ju;
            ju.__name__ = ["lime", "_internal", "backend", "html5", "HTML5AudioSource"];
            ju.prototype = {
                completed: null,
                gain: null,
                id: null,
                length: null,
                loops: null,
                parent: null,
                playing: null,
                position: null,
                dispose: function() {},
                init: function() {},
                play: function() {
                    if (!this.playing && null != this.parent.buffer && null != this.parent.buffer.__srcHowl) {
                        this.playing = !0;
                        var a = this.getCurrentTime();
                        this.completed = !1;
                        var b = this.parent.buffer.__srcHowl._volume;
                        this.parent.buffer.__srcHowl._volume = this.parent.get_gain();
                        this.id = this.parent.buffer.__srcHowl.play();
                        this.parent.buffer.__srcHowl._volume = b;
                        this.setPosition(this.parent.get_position());
                        this.parent.buffer.__srcHowl.on("end", q(this, this.howl_onEnd), this.id);
                        this.setCurrentTime(a)
                    }
                },
                stop: function() {
                    this.playing = !1;
                    null != this.parent.buffer && null != this.parent.buffer.__srcHowl && (this.parent.buffer.__srcHowl.stop(this.id),
                        this.parent.buffer.__srcHowl.off("end", q(this, this.howl_onEnd), this.id))
                },
                howl_onEnd: function() {
                    this.playing = !1;
                    0 < this.loops ? (this.loops--, this.stop(), this.play()) : (null != this.parent.buffer && null != this.parent.buffer.__srcHowl && (this.parent.buffer.__srcHowl.stop(this.id), this.parent.buffer.__srcHowl.off("end", q(this, this.howl_onEnd), this.id)), this.completed = !0, this.parent.onComplete.dispatch())
                },
                getCurrentTime: function() {
                    if (-1 == this.id) return 0;
                    if (this.completed) return this.getLength();
                    if (null != this.parent.buffer &&
                        null != this.parent.buffer.__srcHowl) {
                        var a = E["int"](1E3 * this.parent.buffer.__srcHowl.seek(this.id)) - this.parent.offset;
                        return 0 > a ? 0 : a
                    }
                    return 0
                },
                setCurrentTime: function(a) {
                    if (null != this.parent.buffer && null != this.parent.buffer.__srcHowl) {
                        var b = (a + this.parent.offset) / 1E3;
                        0 > b && (b = 0);
                        this.parent.buffer.__srcHowl.seek(b, this.id)
                    }
                    return a
                },
                getGain: function() {
                    return this.gain
                },
                setGain: function(a) {
                    null != this.parent.buffer && null != this.parent.buffer.__srcHowl && -1 != this.id && this.parent.buffer.__srcHowl.volume(a,
                        this.id);
                    return this.gain = a
                },
                getLength: function() {
                    return 0 != this.length ? this.length : null != this.parent.buffer && null != this.parent.buffer.__srcHowl ? E["int"](1E3 * this.parent.buffer.__srcHowl.duration()) : 0
                },
                setLength: function(a) {
                    return this.length = a
                },
                setLoops: function(a) {
                    return this.loops = a
                },
                getPosition: function() {
                    return this.position
                },
                setPosition: function(a) {
                    this.position.x = a.x;
                    this.position.y = a.y;
                    this.position.z = a.z;
                    this.position.w = a.w;
                    null != this.parent.buffer.__srcHowl && null != (Jf = this.parent.buffer.__srcHowl,
                        q(Jf, Jf.pos)) && this.parent.buffer.__srcHowl.pos(this.position.x, this.position.y, this.position.z, this.id);
                    return this.position
                },
                __class__: ju
            };
            var Na = function() {
                this.validStatus0 = (new Ga("Tizen", "gi")).match(La.get_window().navigator.userAgent)
            };
            g["lime._internal.backend.html5.HTML5HTTPRequest"] = Na;
            Na.__name__ = ["lime", "_internal", "backend", "html5", "HTML5HTTPRequest"];
            Na.loadImage = function(a) {
                var b = new Le;
                Na.activeRequests < Na.requestLimit ? (Na.activeRequests++, Na.__loadImage(a, b, 0)) : Na.requestQueue.add({
                    instance: null,
                    uri: a,
                    promise: b,
                    type: "IMAGE",
                    options: 0
                });
                return b.future
            };
            Na.loadImageFromBytes = function(a, b) {
                var c = Na.__createBlobURIFromBytes(a, b);
                return null != c ? (a = new Le, Na.activeRequests < Na.requestLimit ? (Na.activeRequests++, Na.__loadImage(c, a, 1)) : Na.requestQueue.add({
                    instance: null,
                    uri: c,
                    promise: a,
                    type: "IMAGE",
                    options: 1
                }), a.future) : Na.loadImage("data:" + b + ";base64," + Ug.encode(a))
            };
            Na.processQueue = function() {
                if (Na.activeRequests < Na.requestLimit && 0 < Na.requestQueue.length) {
                    Na.activeRequests++;
                    var a = Na.requestQueue.pop();
                    switch (a.type) {
                        case "BINARY":
                            a.instance.__loadData(a.uri, a.promise);
                            break;
                        case "IMAGE":
                            Na.__loadImage(a.uri, a.promise, a.options);
                            break;
                        case "TEXT":
                            a.instance.__loadText(a.uri, a.promise);
                            break;
                        default:
                            Na.activeRequests--
                    }
                }
            };
            Na.__createBlobURIFromBytes = function(a, b) {
                return URL.createObjectURL(new Blob([a.getData()], {
                    type: b
                }))
            };
            Na.__fixHostname = function(a) {
                return null == a ? "" : a
            };
            Na.__fixPort = function(a, b) {
                if (null == a || "" == a) switch (b) {
                    case "ftp:":
                        return "21";
                    case "gopher:":
                        return "70";
                    case "http:":
                        return "80";
                    case "https:":
                        return "443";
                    case "ws:":
                        return "80";
                    case "wss:":
                        return "443";
                    default:
                        return ""
                }
                return a
            };
            Na.__fixProtocol = function(a) {
                return null == a || "" == a ? "http:" : a
            };
            Na.__isInMemoryURI = function(a) {
                return ka.startsWith(a, "data:") ? !0 : ka.startsWith(a, "blob:")
            };
            Na.__isSameOrigin = function(a) {
                if (null == a || "" == a || Na.__isInMemoryURI(a)) return !0;
                null == Na.originElement && (Na.originElement = La.get_document().createElement("a"), Na.originHostname = Na.__fixHostname(La.get_location().hostname), Na.originProtocol = Na.__fixProtocol(La.get_location().protocol),
                    Na.originPort = Na.__fixPort(La.get_location().port, Na.originProtocol));
                var b = Na.originElement;
                b.href = a;
                "" == b.hostname && (b.href = b.href);
                var c = Na.__fixHostname(b.hostname);
                a = Na.__fixProtocol(b.protocol);
                b = Na.__fixPort(b.port, a);
                c = "" == c || c == Na.originHostname;
                b = "" == b || b == Na.originPort;
                return "file:" != a && c ? b : !1
            };
            Na.__loadImage = function(a, b, c) {
                var d = new Image;
                Na.__isSameOrigin(a) || (d.crossOrigin = "Anonymous");
                null == Na.supportsImageProgress && (Na.supportsImageProgress = "onprogress" in d);
                if (Na.supportsImageProgress ||
                    Na.__isInMemoryURI(a)) d.addEventListener("load", function(e) {
                    Na.__revokeBlobURI(a, c);
                    e = new Ph(null, d.width, d.height);
                    e.__srcImage = d;
                    Na.activeRequests--;
                    Na.processQueue();
                    b.complete(new Cb(e))
                }, !1), d.addEventListener("progress", function(a) {
                    b.progress(a.loaded, a.total)
                }, !1), d.addEventListener("error", function(d) {
                    Na.__revokeBlobURI(a, c);
                    Na.activeRequests--;
                    Na.processQueue();
                    b.error(d.detail)
                }, !1), d.src = a;
                else {
                    var e = new XMLHttpRequest;
                    e.onload = function(a) {
                        Na.activeRequests--;
                        Na.processQueue();
                        (new Cb).__fromBytes(ub.ofData(e.response),
                            function(a) {
                                b.complete(a)
                            })
                    };
                    e.onerror = function(a) {
                        b.error(a.message)
                    };
                    e.onprogress = function(a) {
                        a.lengthComputable && b.progress(a.loaded, a.total)
                    };
                    e.open("GET", a, !0);
                    e.responseType = "arraybuffer";
                    e.overrideMimeType("text/plain; charset=x-user-defined");
                    e.send(null)
                }
            };
            Na.__revokeBlobURI = function(a, b) {
                0 != (b & 1) && URL.revokeObjectURL(a)
            };
            Na.prototype = {
                binary: null,
                parent: null,
                request: null,
                validStatus0: null,
                cancel: function() {
                    null != this.request && this.request.abort()
                },
                init: function(a) {
                    this.parent = a
                },
                load: function(a,
                    b, c) {
                    this.request = new XMLHttpRequest;
                    "POST" == this.parent.method ? this.request.upload.addEventListener("progress", b, !1) : this.request.addEventListener("progress", b, !1);
                    this.request.onreadystatechange = c;
                    b = "";
                    if (null == this.parent.data) {
                        for (c = this.parent.formData.keys(); c.hasNext();) {
                            var d = c.next();
                            0 < b.length && (b += "&");
                            var e = this.parent.formData.get(d); - 1 < d.indexOf("[]") && e instanceof Array && null == e.__enum__ ? (e = hg.map(e, function(a) {
                                    return ka.urlEncode(a)
                                }).join("&amp;" + d + "="), b += ka.urlEncode(d) + "=" + e) :
                                b += ka.urlEncode(d) + "=" + ka.urlEncode(E.string(e))
                        }
                        "GET" == this.parent.method && "" != b && (a = -1 < a.indexOf("?") ? a + ("&" + b) : a + ("?" + b), b = "")
                    }
                    this.request.open(E.string(this.parent.method), a, !0);
                    0 < this.parent.timeout && (this.request.timeout = this.parent.timeout);
                    this.binary && (this.request.responseType = "arraybuffer");
                    a = null;
                    c = 0;
                    for (d = this.parent.headers; c < d.length;) e = d[c], ++c, "Content-Type" == e.name ? a = e.value : this.request.setRequestHeader(e.name, e.value);
                    null != this.parent.contentType && (a = this.parent.contentType);
                    null == a && (null != this.parent.data ? a = "application/octet-stream" : "" != b && (a = "application/x-www-form-urlencoded"));
                    null != a && this.request.setRequestHeader("Content-Type", a);
                    this.parent.withCredentials && (this.request.withCredentials = !0);
                    null != this.parent.data ? this.request.send(this.parent.data.getData()) : this.request.send(b)
                },
                loadData: function(a) {
                    var b = new Le;
                    Na.activeRequests < Na.requestLimit ? (Na.activeRequests++, this.__loadData(a, b)) : Na.requestQueue.add({
                        instance: this,
                        uri: a,
                        promise: b,
                        type: "BINARY",
                        options: 0
                    });
                    return b.future
                },
                loadText: function(a) {
                    var b = new Le;
                    Na.activeRequests < Na.requestLimit ? (Na.activeRequests++, this.__loadText(a, b)) : Na.requestQueue.add({
                        instance: this,
                        uri: a,
                        promise: b,
                        type: "TEXT",
                        options: 0
                    });
                    return b.future
                },
                processResponse: function() {
                    if (this.parent.enableResponseHeaders) {
                        this.parent.responseHeaders = [];
                        for (var a, b, c = 0, d = this.request.getAllResponseHeaders().split("\n"); c < d.length;) b = d[c], ++c, a = ka.trim(la.substr(b, 0, b.indexOf(":"))), b = ka.trim(la.substr(b, b.indexOf(":") + 1, null)), "" != a && this.parent.responseHeaders.push(new Vq(a,
                            b))
                    }
                    this.parent.responseStatus = this.request.status
                },
                __loadData: function(a, b) {
                    var c = this;
                    this.binary = !0;
                    this.load(a, function(a) {
                        b.progress(a.loaded, a.total)
                    }, function(a) {
                        4 == c.request.readyState && (null != c.request.status && (200 <= c.request.status && 400 > c.request.status || c.validStatus0 && 0 == c.request.status) ? (a = null, "" == c.request.responseType ? null != c.request.responseText && (a = ub.ofString(c.request.responseText)) : null != c.request.response && (a = ub.ofData(c.request.response)), c.processResponse(), b.complete(a)) :
                            (c.processResponse(), b.error(c.request.status)), c.request = null, Na.activeRequests--, Na.processQueue())
                    })
                },
                __loadText: function(a, b) {
                    var c = this;
                    this.binary = !1;
                    this.load(a, function(a) {
                        b.progress(a.loaded, a.total)
                    }, function(a) {
                        4 == c.request.readyState && (null != c.request.status && (200 <= c.request.status && 400 >= c.request.status || c.validStatus0 && 0 == c.request.status) ? (c.processResponse(), b.complete(c.request.responseText)) : (c.processResponse(), b.error(c.request.status)), c.request = null, Na.activeRequests--, Na.processQueue())
                    })
                },
                __class__: Na
            };
            var ib = function(a) {
                this.unusedTouchesPool = new Qb;
                this.scale = 1;
                this.currentTouches = new we;
                this.parent = a;
                this.cursor = Sa.DEFAULT;
                this.cacheMouseY = this.cacheMouseX = 0;
                var b = a.__attributes;
                T.hasField(b, "context") || (b.context = {});
                this.renderType = b.context.type;
                T.hasField(b, "element") && (a.element = b.element);
                var c = a.element;
                T.hasField(b, "allowHighDPI") && b.allowHighDPI && "dom" != this.renderType && (this.scale = La.get_window().devicePixelRatio);
                a.__scale = this.scale;
                this.setWidth = T.hasField(b, "width") ?
                    b.width : 0;
                this.setHeight = T.hasField(b, "height") ? b.height : 0;
                a.__width = this.setWidth;
                a.__height = this.setHeight;
                a.id = ib.windowID++;
                E.is(c, HTMLCanvasElement) ? this.canvas = c : "dom" == this.renderType ? this.div = La.get_document().createElement("div") : this.canvas = La.get_document().createElement("canvas");
                if (null != this.canvas) {
                    var d = this.canvas.style;
                    d.setProperty("-webkit-transform", "translateZ(0)", null);
                    d.setProperty("transform", "translateZ(0)", null)
                } else null != this.div && (d = this.div.style, d.setProperty("-webkit-transform",
                    "translate3D(0,0,0)", null), d.setProperty("transform", "translate3D(0,0,0)", null), d.position = "relative", d.overflow = "hidden", d.setProperty("-webkit-user-select", "none", null), d.setProperty("-moz-user-select", "none", null), d.setProperty("-ms-user-select", "none", null), d.setProperty("-o-user-select", "none", null));
                0 == a.__width && 0 == a.__height && (null != c ? (a.__width = c.clientWidth, a.__height = c.clientHeight) : (a.__width = La.get_window().innerWidth, a.__height = La.get_window().innerHeight), this.cacheElementWidth = a.__width,
                    this.cacheElementHeight = a.__height, this.resizeElement = !0);
                null != this.canvas ? (this.canvas.width = Math.round(a.__width * this.scale), this.canvas.height = Math.round(a.__height * this.scale), this.canvas.style.width = a.__width + "px", this.canvas.style.height = a.__height + "px") : (this.div.style.width = a.__width + "px", this.div.style.height = a.__height + "px");
                if (T.hasField(b, "resizable") && b.resizable || !T.hasField(b, "width") && 0 == this.setWidth && 0 == this.setHeight) a.__resizable = !0;
                this.updateSize();
                if (null != c) {
                    null != this.canvas ?
                        c != this.canvas && c.appendChild(this.canvas) : c.appendChild(this.div);
                    b = "mousedown mouseenter mouseleave mousemove mouseup wheel".split(" ");
                    for (d = 0; d < b.length;) {
                        var e = b[d];
                        ++d;
                        c.addEventListener(e, q(this, this.handleMouseEvent), !0)
                    }
                    c.addEventListener("contextmenu", q(this, this.handleContextMenuEvent), !0);
                    c.addEventListener("dragstart", q(this, this.handleDragEvent), !0);
                    c.addEventListener("dragover", q(this, this.handleDragEvent), !0);
                    c.addEventListener("drop", q(this, this.handleDragEvent), !0);
                    c.addEventListener("touchstart",
                        q(this, this.handleTouchEvent), !0);
                    c.addEventListener("touchmove", q(this, this.handleTouchEvent), !0);
                    c.addEventListener("touchend", q(this, this.handleTouchEvent), !0);
                    c.addEventListener("touchcancel", q(this, this.handleTouchEvent), !0);
                    c.addEventListener("gamepadconnected", q(this, this.handleGamepadEvent), !0);
                    c.addEventListener("gamepaddisconnected", q(this, this.handleGamepadEvent), !0)
                }
                this.createContext();
                "webgl" == a.context.type && (this.canvas.addEventListener("webglcontextlost", q(this, this.handleContextEvent),
                    !1), this.canvas.addEventListener("webglcontextrestored", q(this, this.handleContextEvent), !1))
            };
            g["lime._internal.backend.html5.HTML5Window"] = ib;
            ib.__name__ = ["lime", "_internal", "backend", "html5", "HTML5Window"];
            ib.prototype = {
                canvas: null,
                div: null,
                cacheElementHeight: null,
                cacheElementWidth: null,
                cacheMouseX: null,
                cacheMouseY: null,
                cursor: null,
                currentTouches: null,
                parent: null,
                primaryTouch: null,
                renderType: null,
                resizeElement: null,
                scale: null,
                setHeight: null,
                setWidth: null,
                textInputEnabled: null,
                unusedTouchesPool: null,
                close: function() {
                    this.parent.application.__removeWindow(this.parent)
                },
                createContext: function() {
                    var a = new ku,
                        b = this.parent.__attributes.context;
                    a.window = this.parent;
                    a.attributes = b;
                    if (null != this.div) a.dom = this.div, a.type = "dom", a.version = "";
                    else if (null != this.canvas) {
                        var c = null,
                            d = "canvas" == this.renderType,
                            e = "opengl" == this.renderType || "opengles" == this.renderType || "webgl" == this.renderType,
                            f = !T.hasField(b, "version") || "1" != b.version,
                            h = !1;
                        if (e || !d && (!T.hasField(b, "hardware") || b.hardware))
                            for (d = T.hasField(b,
                                    "background") && null == b.background, e = T.hasField(b, "colorDepth") ? b.colorDepth : 16, b = {
                                    alpha: d || 16 < e,
                                    antialias: T.hasField(b, "antialiasing") && 0 < b.antialiasing,
                                    depth: T.hasField(b, "depth") ? b.depth : !0,
                                    premultipliedAlpha: !0,
                                    stencil: T.hasField(b, "stencil") && b.stencil,
                                    preserveDrawingBuffer: !1,
                                    failIfMajorPerformanceCaveat: !0
                                }, d = ["webgl", "experimental-webgl"], f && d.unshift("webgl2"), f = 0; f < d.length && (e = d[f], ++f, c = this.canvas.getContext(e, b), null != c && "webgl2" == e && (h = !0), null == c););
                        null == c ? (a.canvas2D = this.canvas.getContext("2d"),
                            a.type = "canvas", a.version = "") : (a.webgl = Td.fromWebGL2RenderContext(c), h && (a.webgl2 = c), null == nk.context && (nk.context = c, nk.type = "webgl", nk.version = h ? 2 : 1), a.type = "webgl", a.version = h ? "2" : "1")
                    }
                    this.parent.context = a
                },
                getDisplay: function() {
                    return je.getDisplay(0)
                },
                getFrameRate: function() {
                    return null == this.parent.application ? 0 : 0 > this.parent.application.__backend.framePeriod ? 60 : 1E3 == this.parent.application.__backend.framePeriod ? 0 : 1E3 / this.parent.application.__backend.framePeriod
                },
                handleContextEvent: function(a) {
                    switch (a.type) {
                        case "webglcontextlost":
                            a.cancelable &&
                                a.preventDefault();
                            this.parent.context = null;
                            this.parent.onRenderContextLost.dispatch();
                            break;
                        case "webglcontextrestored":
                            this.createContext(), this.parent.onRenderContextRestored.dispatch(this.parent.context)
                    }
                },
                handleContextMenuEvent: function(a) {
                    (this.parent.onMouseUp.canceled || this.parent.onMouseDown.canceled) && a.cancelable && a.preventDefault()
                },
                handleCutOrCopyEvent: function(a) {
                    a.clipboardData.setData("text/plain", Kd.get_text());
                    a.cancelable && a.preventDefault()
                },
                handleDragEvent: function(a) {
                    switch (a.type) {
                        case "dragover":
                            return a.preventDefault(),
                                !1;
                        case "dragstart":
                            if ("img" == aa.__cast(a.target, HTMLElement).nodeName.toLowerCase() && a.cancelable) return a.preventDefault(), !1;
                            break;
                        case "drop":
                            if (null != a.dataTransfer && 0 < a.dataTransfer.files.length) return this.parent.onDropFile.dispatch(a.dataTransfer.files), a.preventDefault(), !1
                    }
                    return !0
                },
                handleFocusEvent: function(a) {
                    var b = this;
                    this.textInputEnabled && (null == a.relatedTarget || this.isDescendent(a.relatedTarget)) && Mh.delay(function() {
                        b.textInputEnabled && ib.textInput.focus()
                    }, 20)
                },
                handleGamepadEvent: function(a) {
                    switch (a.type) {
                        case "gamepadconnected":
                            Zd.__connect(a.gamepad.index);
                            "standard" == a.gamepad.mapping && ee.__connect(a.gamepad.index);
                            break;
                        case "gamepaddisconnected":
                            Zd.__disconnect(a.gamepad.index), ee.__disconnect(a.gamepad.index)
                    }
                },
                handleInputEvent: function(a) {
                    ib.textInput.value != ib.dummyCharacter && (a = ka.replace(ib.textInput.value, ib.dummyCharacter, ""), 0 < a.length && this.parent.onTextInput.dispatch(a), ib.textInput.value = ib.dummyCharacter)
                },
                handleMouseEvent: function(a) {
                    if ("wheel" != a.type) {
                        if (null != this.parent.element)
                            if (null != this.canvas) {
                                var b = this.canvas.getBoundingClientRect();
                                var c = this.parent.__width / b.width * (a.clientX - b.left);
                                b = this.parent.__height / b.height * (a.clientY - b.top)
                            } else null != this.div ? (b = this.div.getBoundingClientRect(), c = a.clientX - b.left, b = a.clientY - b.top) : (b = this.parent.element.getBoundingClientRect(), c = this.parent.__width / b.width * (a.clientX - b.left), b = this.parent.__height / b.height * (a.clientY - b.top));
                        else c = a.clientX, b = a.clientY;
                        switch (a.type) {
                            case "mousedown":
                                a.currentTarget == this.parent.element && La.get_window().addEventListener("mouseup", q(this, this.handleMouseEvent));
                                this.parent.onMouseDown.dispatch(c, b, a.button);
                                this.parent.onMouseDown.canceled && a.cancelable && a.preventDefault();
                                break;
                            case "mouseenter":
                                a.target == this.parent.element && (this.parent.onEnter.dispatch(), this.parent.onEnter.canceled && a.cancelable && a.preventDefault());
                                break;
                            case "mouseleave":
                                a.target == this.parent.element && (this.parent.onLeave.dispatch(), this.parent.onLeave.canceled && a.cancelable && a.preventDefault());
                                break;
                            case "mousemove":
                                if (c != this.cacheMouseX || b != this.cacheMouseY) this.parent.onMouseMove.dispatch(c,
                                    b), this.parent.onMouseMoveRelative.dispatch(c - this.cacheMouseX, b - this.cacheMouseY), (this.parent.onMouseMove.canceled || this.parent.onMouseMoveRelative.canceled) && a.cancelable && a.preventDefault();
                                break;
                            case "mouseup":
                                La.get_window().removeEventListener("mouseup", q(this, this.handleMouseEvent)), a.currentTarget == this.parent.element && a.stopPropagation(), this.parent.onMouseUp.dispatch(c, b, a.button), this.parent.onMouseUp.canceled && a.cancelable && a.preventDefault()
                        }
                        this.cacheMouseX = c;
                        this.cacheMouseY = b
                    } else {
                        switch (a.deltaMode) {
                            case 0:
                                c =
                                    Ld.PIXELS;
                                break;
                            case 1:
                                c = Ld.LINES;
                                break;
                            case 2:
                                c = Ld.PAGES;
                                break;
                            default:
                                c = Ld.UNKNOWN
                        }
                        this.parent.onMouseWheel.dispatch(a.deltaX, -a.deltaY, c);
                        this.parent.onMouseWheel.canceled && a.cancelable && a.preventDefault()
                    }
                },
                handlePasteEvent: function(a) {
                    if (-1 < a.clipboardData.types.indexOf("text/plain")) {
                        var b = a.clipboardData.getData("text/plain");
                        Kd.set_text(b);
                        this.textInputEnabled && this.parent.onTextInput.dispatch(b);
                        a.cancelable && a.preventDefault()
                    }
                },
                handleResizeEvent: function(a) {
                    this.primaryTouch = null;
                    this.updateSize()
                },
                handleTouchEvent: function(a) {
                    a.cancelable && a.preventDefault();
                    var b = null;
                    null != this.parent.element && (b = null != this.canvas ? this.canvas.getBoundingClientRect() : null != this.div ? this.div.getBoundingClientRect() : this.parent.element.getBoundingClientRect());
                    var c = this.setWidth,
                        d = this.setHeight;
                    if (0 == c || 0 == d) null != b ? (c = b.width, d = b.height) : d = c = 1;
                    for (var e, f, h, k, m, g = 0, l = a.changedTouches; g < l.length;) {
                        var n = l[g];
                        ++g;
                        null != b ? (f = c / b.width * (n.clientX - b.left), h = d / b.height * (n.clientY - b.top)) : (f = n.clientX, h = n.clientY);
                        if ("touchstart" == a.type) e = this.unusedTouchesPool.pop(), null == e ? e = new Ge(f / c, h / d, n.identifier, 0, 0, n.force, this.parent.id) : (e.x = f / c, e.y = h / d, e.id = n.identifier, e.dx = 0, e.dy = 0, e.pressure = n.force, e.device = this.parent.id), this.currentTouches.set(n.identifier, e), Ge.onStart.dispatch(e), null == this.primaryTouch && (this.primaryTouch = e), e == this.primaryTouch && this.parent.onMouseDown.dispatch(f, h, 0);
                        else if (e = this.currentTouches.get(n.identifier), null != e) switch (k = e.x, m = e.y, e.x = f / c, e.y = h / d, e.dx = e.x - k, e.dy = e.y - m, e.pressure =
                            n.force, a.type) {
                            case "touchcancel":
                                Ge.onCancel.dispatch(e);
                                this.currentTouches.remove(n.identifier);
                                this.unusedTouchesPool.add(e);
                                e == this.primaryTouch && (this.primaryTouch = null);
                                break;
                            case "touchend":
                                Ge.onEnd.dispatch(e);
                                this.currentTouches.remove(n.identifier);
                                this.unusedTouchesPool.add(e);
                                e == this.primaryTouch && (this.parent.onMouseUp.dispatch(f, h, 0), this.primaryTouch = null);
                                break;
                            case "touchmove":
                                Ge.onMove.dispatch(e), e == this.primaryTouch && this.parent.onMouseMove.dispatch(f, h)
                        }
                    }
                },
                isDescendent: function(a) {
                    if (a ==
                        this.parent.element) return !0;
                    for (; null != a;) {
                        if (a.parentNode == this.parent.element) return !0;
                        a = a.parentNode
                    }
                    return !1
                },
                setClipboard: function(a) {
                    null == ib.textArea && (ib.textArea = La.get_document().createElement("textarea"), ib.textArea.style.height = "0px", ib.textArea.style.left = "-100px", ib.textArea.style.opacity = "0", ib.textArea.style.position = "fixed", ib.textArea.style.top = "-100px", ib.textArea.style.width = "0px", La.get_document().body.appendChild(ib.textArea));
                    ib.textArea.value = a;
                    ib.textArea.focus();
                    ib.textArea.select();
                    La.get_document().queryCommandEnabled("copy") && La.get_document().execCommand("copy")
                },
                setCursor: function(a) {
                    if (this.cursor != a) {
                        if (null == a) this.parent.element.style.cursor = "none";
                        else {
                            switch (Q.enumIndex(a)) {
                                case 0:
                                    var b = "default";
                                    break;
                                case 1:
                                    b = "crosshair";
                                    break;
                                case 3:
                                    b = "move";
                                    break;
                                case 4:
                                    b = "pointer";
                                    break;
                                case 5:
                                    b = "nesw-resize";
                                    break;
                                case 6:
                                    b = "ns-resize";
                                    break;
                                case 7:
                                    b = "nwse-resize";
                                    break;
                                case 8:
                                    b = "ew-resize";
                                    break;
                                case 9:
                                    b = "text";
                                    break;
                                case 10:
                                    b = "wait";
                                    break;
                                case 11:
                                    b = "wait";
                                    break;
                                default:
                                    b = "auto"
                            }
                            this.parent.element.style.cursor =
                                b
                        }
                        this.cursor = a
                    }
                    return this.cursor
                },
                setTextInputEnabled: function(a) {
                    a ? (null == ib.textInput && (ib.textInput = La.get_document().createElement("input"), ib.textInput.type = "text", ib.textInput.style.position = "absolute", ib.textInput.style.opacity = "0", ib.textInput.style.color = "transparent", ib.textInput.value = ib.dummyCharacter, ib.textInput.autocapitalize = "off", ib.textInput.autocorrect = "off", ib.textInput.autocomplete = "off", ib.textInput.style.left = "0px", ib.textInput.style.top = "50%", (new Ga("(iPad|iPhone|iPod).*OS 8_",
                        "gi")).match(La.get_window().navigator.userAgent) ? (ib.textInput.style.fontSize = "0px", ib.textInput.style.width = "0px", ib.textInput.style.height = "0px") : (ib.textInput.style.width = "1px", ib.textInput.style.height = "1px"), ib.textInput.style.pointerEvents = "none", ib.textInput.style.zIndex = "-10000000"), null == ib.textInput.parentNode && this.parent.element.appendChild(ib.textInput), this.textInputEnabled || (ib.textInput.addEventListener("input", q(this, this.handleInputEvent), !0), ib.textInput.addEventListener("blur",
                        q(this, this.handleFocusEvent), !0), ib.textInput.addEventListener("cut", q(this, this.handleCutOrCopyEvent), !0), ib.textInput.addEventListener("copy", q(this, this.handleCutOrCopyEvent), !0), ib.textInput.addEventListener("paste", q(this, this.handlePasteEvent), !0)), ib.textInput.focus(), ib.textInput.select()) : null != ib.textInput && (ib.textInput.removeEventListener("input", q(this, this.handleInputEvent), !0), ib.textInput.removeEventListener("blur", q(this, this.handleFocusEvent), !0), ib.textInput.removeEventListener("cut",
                        q(this, this.handleCutOrCopyEvent), !0), ib.textInput.removeEventListener("copy", q(this, this.handleCutOrCopyEvent), !0), ib.textInput.removeEventListener("paste", q(this, this.handlePasteEvent), !0), ib.textInput.blur());
                    return this.textInputEnabled = a
                },
                updateSize: function() {
                    if (this.parent.__resizable) {
                        if (null != this.parent.element) {
                            var a = this.parent.element.clientWidth;
                            var b = this.parent.element.clientHeight
                        } else a = La.get_window().innerWidth, b = La.get_window().innerHeight;
                        if (a != this.cacheElementWidth || b != this.cacheElementHeight) {
                            this.cacheElementWidth =
                                a;
                            this.cacheElementHeight = b;
                            var c = this.resizeElement || 0 == this.setWidth && 0 == this.setHeight;
                            if (null != this.parent.element && (null == this.div || null != this.div && c))
                                if (c) {
                                    if (this.parent.__width != a || this.parent.__height != b) this.parent.__width = a, this.parent.__height = b, null != this.canvas ? this.parent.element != this.canvas && (this.canvas.width = Math.round(a * this.scale), this.canvas.height = Math.round(b * this.scale), this.canvas.style.width = a + "px", this.canvas.style.height = b + "px") : (this.div.style.width = a + "px", this.div.style.height =
                                        b + "px"), this.parent.onResize.dispatch(a, b)
                                } else {
                                    c = 0 != this.setWidth ? a / this.setWidth : 1;
                                    var d = 0 != this.setHeight ? b / this.setHeight : 1,
                                        e = a,
                                        f = b,
                                        h = 0,
                                        k = 0;
                                    c < d ? (f = Math.floor(this.setHeight * c), k = Math.floor((b - f) / 2)) : (e = Math.floor(this.setWidth * d), h = Math.floor((a - e) / 2));
                                    null != this.canvas ? this.parent.element != this.canvas && (this.canvas.style.width = e + "px", this.canvas.style.height = f + "px", this.canvas.style.marginLeft = h + "px", this.canvas.style.marginTop = k + "px") : (this.div.style.width = e + "px", this.div.style.height = f + "px",
                                        this.div.style.marginLeft = h + "px", this.div.style.marginTop = k + "px")
                                }
                        }
                    }
                },
                __class__: ib
            };
            var Ug = function() {};
            g["lime._internal.format.Base64"] = Ug;
            Ug.__name__ = ["lime", "_internal", "format", "Base64"];
            Ug.decode = function(a) {
                return Mc.decode(a)
            };
            Ug.encode = function(a) {
                var b = [],
                    c = Ug.DICTIONARY,
                    d = Ug.EXTENDED_DICTIONARY,
                    e = a.length,
                    f = Math.floor(e / 3),
                    h = 2 * f;
                b.length = 2 * Math.ceil(e / 3);
                for (var k = 0, m = 0, g; m < h;) g = a.get(k) << 16 | a.get(k + 1) << 8 | a.get(k + 2), b[m] = d[g >> 12 & 4095], b[m + 1] = d[g & 4095], k += 3, m += 2;
                switch (e - 3 * f) {
                    case 1:
                        g = a.get(k) <<
                            16;
                        b[m] = d[g >> 12 & 4095];
                        b[m + 1] = "==";
                        break;
                    case 2:
                        g = a.get(k) << 16 | a.get(k + 1) << 8, b[m] = d[g >> 12 & 4095], b[m + 1] = c[g >> 6 & 63] + "="
                }
                return b.join("")
            };
            var Yv = function() {};
            g["lime._internal.format.Deflate"] = Yv;
            Yv.__name__ = ["lime", "_internal", "format", "Deflate"];
            Yv.decompress = function(a) {
                a = pako.inflateRaw(a.getData());
                return ub.ofData(a)
            };
            var Zv = function() {};
            g["lime._internal.format.GZip"] = Zv;
            Zv.__name__ = ["lime", "_internal", "format", "GZip"];
            Zv.decompress = function(a) {
                a = pako.ungzip(a.getData());
                return ub.ofData(a)
            };
            var $v = function() {};
            g["lime._internal.format.LZMA"] = $v;
            $v.__name__ = ["lime", "_internal", "format", "LZMA"];
            $v.decompress = function(a) {
                return null
            };
            var aw = function() {};
            g["lime._internal.format.Zlib"] = aw;
            aw.__name__ = ["lime", "_internal", "format", "Zlib"];
            aw.decompress = function(a) {
                a = pako.inflate(a.getData());
                return ub.ofData(a)
            };
            var Ua = function() {};
            g["lime._internal.graphics.ImageCanvasUtil"] = Ua;
            Ua.__name__ = ["lime", "_internal", "graphics", "ImageCanvasUtil"];
            Ua.colorTransform = function(a, b, c) {
                Ua.convertToData(a);
                Jd.colorTransform(a, b, c)
            };
            Ua.convertToCanvas = function(a, b) {
                null == b && (b = !1);
                var c = a.buffer;
                null != c.__srcImage ? (null == c.__srcCanvas && (Ua.createCanvas(a, c.__srcImage.width, c.__srcImage.height), c.__srcContext.drawImage(c.__srcImage, 0, 0)), c.__srcImage = null) : null == c.__srcCanvas && null != c.data ? (a.set_transparent(!0), Ua.createCanvas(a, c.width, c.height), Ua.createImageData(a), c.__srcContext.putImageData(c.__srcImageData, 0, 0)) : a.type == Gd.DATA && null != c.__srcImageData && a.dirty && (c.__srcContext.putImageData(c.__srcImageData,
                    0, 0), a.dirty = !1);
                b ? (c.data = null, c.__srcImageData = null) : null == c.data && null != c.__srcImageData && (c.data = c.__srcImageData.data);
                a.type = Gd.CANVAS
            };
            Ua.convertToData = function(a, b) {
                null == b && (b = !1);
                var c = a.buffer;
                null != c.__srcImage && Ua.convertToCanvas(a);
                if (null != c.__srcCanvas && null == c.data) Ua.createImageData(a), a.type == Gd.CANVAS && (a.dirty = !1);
                else if (a.type == Gd.CANVAS && null != c.__srcCanvas && a.dirty) {
                    if (null == c.__srcImageData) Ua.createImageData(a);
                    else {
                        c.__srcImageData = c.__srcContext.getImageData(0, 0, c.width,
                            c.height);
                        var d = c.__srcImageData.data.buffer;
                        d = null != d ? new Cf(d) : null;
                        c.data = d
                    }
                    a.dirty = !1
                }
                b && (a.buffer.__srcCanvas = null, a.buffer.__srcContext = null);
                a.type = Gd.DATA
            };
            Ua.copyChannel = function(a, b, c, d, e, f) {
                Ua.convertToData(b);
                Ua.convertToData(a);
                Jd.copyChannel(a, b, c, d, e, f)
            };
            Ua.copyPixels = function(a, b, c, d, e, f, h) {
                null == h && (h = !1);
                null == d || d.x >= a.width || d.y >= a.height || null == c || 1 > c.width || 1 > c.height || (null != e && e.get_transparent() && (null == f && (f = new ok), b = b.clone(), b.copyChannel(e, new Eg(c.x + f.x, c.y + f.y, c.width,
                    c.height), new ok(c.x, c.y), Md.ALPHA, Md.ALPHA)), Ua.convertToCanvas(a, !0), h || a.get_transparent() && b.get_transparent() && a.buffer.__srcContext.clearRect(d.x + a.offsetX, d.y + a.offsetY, c.width + a.offsetX, c.height + a.offsetY), Ua.convertToCanvas(b), null != b.buffer.get_src() && (a.buffer.__srcContext.globalCompositeOperation = "source-over", a.buffer.__srcContext.drawImage(b.buffer.get_src(), E["int"](c.x + b.offsetX), E["int"](c.y + b.offsetY), E["int"](c.width), E["int"](c.height), E["int"](d.x + a.offsetX), E["int"](d.y + a.offsetY),
                    E["int"](c.width), E["int"](c.height))), a.dirty = !0, a.version++)
            };
            Ua.createCanvas = function(a, b, c) {
                var d = a.buffer;
                null == d.__srcCanvas && (d.__srcCanvas = La.get_document().createElement("canvas"), d.__srcCanvas.width = b, d.__srcCanvas.height = c, a.get_transparent() ? d.__srcContext = d.__srcCanvas.getContext("2d") : (a.get_transparent() || d.__srcCanvas.setAttribute("moz-opaque", "true"), d.__srcContext = d.__srcCanvas.getContext("2d", {
                    alpha: !1
                })))
            };
            Ua.createImageData = function(a) {
                a = a.buffer;
                if (null == a.__srcImageData) {
                    null ==
                        a.data ? a.__srcImageData = a.__srcContext.getImageData(0, 0, a.width, a.height) : (a.__srcImageData = a.__srcContext.createImageData(a.width, a.height), a.__srcImageData.data.set(a.data));
                    var b = a.__srcImageData.data.buffer;
                    b = null != b ? new Cf(b) : null;
                    a.data = b
                }
            };
            Ua.fillRect = function(a, b, c, d) {
                Ua.convertToCanvas(a);
                if (1 == d) {
                    d = c >> 16 & 255;
                    var e = c >> 8 & 255;
                    var f = c & 255;
                    c = a.get_transparent() ? c >> 24 & 255 : 255
                } else d = c >> 24 & 255, e = c >> 16 & 255, f = c >> 8 & 255, c = a.get_transparent() ? c & 255 : 255;
                0 == b.x && 0 == b.y && b.width == a.width && b.height == a.height &&
                    a.get_transparent() && 0 == c ? a.buffer.__srcCanvas.width = a.buffer.width : (255 > c && a.buffer.__srcContext.clearRect(b.x + a.offsetX, b.y + a.offsetY, b.width + a.offsetX, b.height + a.offsetY), 0 < c && (a.buffer.__srcContext.fillStyle = "rgba(" + d + ", " + e + ", " + f + ", " + c / 255 + ")", a.buffer.__srcContext.fillRect(b.x + a.offsetX, b.y + a.offsetY, b.width + a.offsetX, b.height + a.offsetY)), a.dirty = !0, a.version++)
            };
            Ua.setPixel32 = function(a, b, c, d, e) {
                Ua.convertToData(a);
                Jd.setPixel32(a, b, c, d, e)
            };
            Ua.sync = function(a, b) {
                null != a && (a.type != Gd.CANVAS ||
                    null == a.buffer.__srcCanvas && null == a.buffer.data ? a.type == Gd.DATA && Ua.convertToData(a, b) : Ua.convertToCanvas(a, b))
            };
            var Jd = function() {};
            g["lime._internal.graphics.ImageDataUtil"] = Jd;
            Jd.__name__ = ["lime", "_internal", "graphics", "ImageDataUtil"];
            Jd.colorTransform = function(a, b, c) {
                var d = a.buffer.data;
                if (null != d) {
                    var e = a.buffer.format,
                        f = a.buffer.premultiplied;
                    b = new Oi(a, b);
                    var h = zd.getAlphaTable(c),
                        k = zd.getRedTable(c),
                        m = zd.getGreenTable(c);
                    c = zd.getBlueTable(c);
                    for (var g, l, n, p = 0, x = b.height; p < x;) {
                        g = p++;
                        g = b.row(g);
                        for (var u = 0, z = b.width; u < z;) {
                            l = u++;
                            l = g + 4 * l;
                            switch (e) {
                                case 0:
                                    n = (d[l] & 255) << 24 | (d[l + 1] & 255) << 16 | (d[l + 2] & 255) << 8 | d[l + 3] & 255;
                                    break;
                                case 1:
                                    n = (d[l + 1] & 255) << 24 | (d[l + 2] & 255) << 16 | (d[l + 3] & 255) << 8 | d[l] & 255;
                                    break;
                                case 2:
                                    n = (d[l + 2] & 255) << 24 | (d[l + 1] & 255) << 16 | (d[l] & 255) << 8 | d[l + 3] & 255
                            }
                            f && 0 != (n & 255) && 255 != (n & 255) && (ea.unmult = 255 / (n & 255), n = (ea.__clamp[Math.round((n >>> 24 & 255) * ea.unmult)] & 255) << 24 | (ea.__clamp[Math.round((n >>> 16 & 255) * ea.unmult)] & 255) << 16 | (ea.__clamp[Math.round((n >>> 8 & 255) * ea.unmult)] & 255) << 8 | n & 255);
                            n = (k[n >>>
                                24 & 255] & 255) << 24 | (m[n >>> 16 & 255] & 255) << 16 | (c[n >>> 8 & 255] & 255) << 8 | h[n & 255] & 255;
                            f && (0 == (n & 255) ? 0 != n && (n = 0) : 255 != (n & 255) && (ea.a16 = ea.__alpha16[n & 255], n = ((n >>> 24 & 255) * ea.a16 >> 16 & 255) << 24 | ((n >>> 16 & 255) * ea.a16 >> 16 & 255) << 16 | ((n >>> 8 & 255) * ea.a16 >> 16 & 255) << 8 | n & 255));
                            switch (e) {
                                case 0:
                                    d[l] = n >>> 24 & 255;
                                    d[l + 1] = n >>> 16 & 255;
                                    d[l + 2] = n >>> 8 & 255;
                                    d[l + 3] = n & 255;
                                    break;
                                case 1:
                                    d[l] = n & 255;
                                    d[l + 1] = n >>> 24 & 255;
                                    d[l + 2] = n >>> 16 & 255;
                                    d[l + 3] = n >>> 8 & 255;
                                    break;
                                case 2:
                                    d[l] = n >>> 8 & 255, d[l + 1] = n >>> 16 & 255, d[l + 2] = n >>> 24 & 255, d[l + 3] = n & 255
                            }
                        }
                    }
                    a.dirty = !0;
                    a.version++
                }
            };
            Jd.copyChannel = function(a, b, c, d, e, f) {
                switch (Q.enumIndex(f)) {
                    case 0:
                        var h = 0;
                        break;
                    case 1:
                        h = 1;
                        break;
                    case 2:
                        h = 2;
                        break;
                    case 3:
                        h = 3
                }
                switch (Q.enumIndex(e)) {
                    case 0:
                        var k = 0;
                        break;
                    case 1:
                        k = 1;
                        break;
                    case 2:
                        k = 2;
                        break;
                    case 3:
                        k = 3
                }
                e = b.buffer.data;
                f = a.buffer.data;
                if (null != e && null != f) {
                    c = new Oi(b, c);
                    d = new Oi(a, new Eg(d.x, d.y, c.width, c.height));
                    var m = b.buffer.format,
                        g = a.buffer.format;
                    b = b.buffer.premultiplied;
                    for (var l = a.buffer.premultiplied, n, p, x, u, z = 0, w = 0, q = d.height; w < q;) {
                        p = w++;
                        n = c.row(p);
                        p = d.row(p);
                        for (var L =
                                0, A = d.width; L < A;) {
                            L++;
                            switch (m) {
                                case 0:
                                    x = (e[n] & 255) << 24 | (e[n + 1] & 255) << 16 | (e[n + 2] & 255) << 8 | e[n + 3] & 255;
                                    break;
                                case 1:
                                    x = (e[n + 1] & 255) << 24 | (e[n + 2] & 255) << 16 | (e[n + 3] & 255) << 8 | e[n] & 255;
                                    break;
                                case 2:
                                    x = (e[n + 2] & 255) << 24 | (e[n + 1] & 255) << 16 | (e[n] & 255) << 8 | e[n + 3] & 255
                            }
                            b && 0 != (x & 255) && 255 != (x & 255) && (ea.unmult = 255 / (x & 255), x = (ea.__clamp[Math.round((x >>> 24 & 255) * ea.unmult)] & 255) << 24 | (ea.__clamp[Math.round((x >>> 16 & 255) * ea.unmult)] & 255) << 16 | (ea.__clamp[Math.round((x >>> 8 & 255) * ea.unmult)] & 255) << 8 | x & 255);
                            switch (g) {
                                case 0:
                                    u = (f[p] &
                                        255) << 24 | (f[p + 1] & 255) << 16 | (f[p + 2] & 255) << 8 | f[p + 3] & 255;
                                    break;
                                case 1:
                                    u = (f[p + 1] & 255) << 24 | (f[p + 2] & 255) << 16 | (f[p + 3] & 255) << 8 | f[p] & 255;
                                    break;
                                case 2:
                                    u = (f[p + 2] & 255) << 24 | (f[p + 1] & 255) << 16 | (f[p] & 255) << 8 | f[p + 3] & 255
                            }
                            l && 0 != (u & 255) && 255 != (u & 255) && (ea.unmult = 255 / (u & 255), u = (ea.__clamp[Math.round((u >>> 24 & 255) * ea.unmult)] & 255) << 24 | (ea.__clamp[Math.round((u >>> 16 & 255) * ea.unmult)] & 255) << 16 | (ea.__clamp[Math.round((u >>> 8 & 255) * ea.unmult)] & 255) << 8 | u & 255);
                            switch (k) {
                                case 0:
                                    z = x >>> 24 & 255;
                                    break;
                                case 1:
                                    z = x >>> 16 & 255;
                                    break;
                                case 2:
                                    z =
                                        x >>> 8 & 255;
                                    break;
                                case 3:
                                    z = x & 255
                            }
                            switch (h) {
                                case 0:
                                    u = (z & 255) << 24 | (u >>> 16 & 255) << 16 | (u >>> 8 & 255) << 8 | u & 255;
                                    break;
                                case 1:
                                    u = (u >>> 24 & 255) << 24 | (z & 255) << 16 | (u >>> 8 & 255) << 8 | u & 255;
                                    break;
                                case 2:
                                    u = (u >>> 24 & 255) << 24 | (u >>> 16 & 255) << 16 | (z & 255) << 8 | u & 255;
                                    break;
                                case 3:
                                    u = (u >>> 24 & 255) << 24 | (u >>> 16 & 255) << 16 | (u >>> 8 & 255) << 8 | z & 255
                            }
                            l && (0 == (u & 255) ? 0 != u && (u = 0) : 255 != (u & 255) && (ea.a16 = ea.__alpha16[u & 255], u = ((u >>> 24 & 255) * ea.a16 >> 16 & 255) << 24 | ((u >>> 16 & 255) * ea.a16 >> 16 & 255) << 16 | ((u >>> 8 & 255) * ea.a16 >> 16 & 255) << 8 | u & 255));
                            switch (g) {
                                case 0:
                                    f[p] =
                                        u >>> 24 & 255;
                                    f[p + 1] = u >>> 16 & 255;
                                    f[p + 2] = u >>> 8 & 255;
                                    f[p + 3] = u & 255;
                                    break;
                                case 1:
                                    f[p] = u & 255;
                                    f[p + 1] = u >>> 24 & 255;
                                    f[p + 2] = u >>> 16 & 255;
                                    f[p + 3] = u >>> 8 & 255;
                                    break;
                                case 2:
                                    f[p] = u >>> 8 & 255, f[p + 1] = u >>> 16 & 255, f[p + 2] = u >>> 24 & 255, f[p + 3] = u & 255
                            }
                            n += 4;
                            p += 4
                        }
                    }
                    a.dirty = !0;
                    a.version++
                }
            };
            Jd.copyPixels = function(a, b, c, d, e, f, h) {
                null == h && (h = !1);
                if (a.width == b.width && a.height == b.height && c.width == b.width && c.height == b.height && 0 == c.x && 0 == c.y && 0 == d.x && 0 == d.y && null == e && null == f && 0 == h && a.get_format() == b.get_format()) a.buffer.data.set(b.buffer.data);
                else {
                    var k = b.buffer.data,
                        m = a.buffer.data;
                    if (null == k || null == m) return;
                    c = new Oi(b, c);
                    var g = new Eg(d.x, d.y, c.width, c.height);
                    g = new Oi(a, g);
                    var l = b.buffer.format,
                        n = a.buffer.format,
                        p = b.buffer.premultiplied,
                        x = a.buffer.premultiplied;
                    var u = E["int"](b.buffer.bitsPerPixel / 8);
                    var z = E["int"](a.buffer.bitsPerPixel / 8);
                    var w = null != e && e.get_transparent();
                    h = h || w && !a.get_transparent() || !h && !a.get_transparent() && b.get_transparent();
                    if (w)
                        if (z = e.buffer.data, b = e.buffer.format, f = new Oi(e, new Eg(c.x + (null == f ? 0 : f.x), c.y + (null ==
                                f ? 0 : f.y), c.width, c.height)), g.clip(E["int"](d.x), E["int"](d.y), f.width, f.height), h)
                            for (var q = 0, L = g.height; q < L;) {
                                h = q++;
                                d = c.row(h);
                                e = g.row(h);
                                var A = f.row(h);
                                for (var D = 0, Ka = g.width; D < Ka;) {
                                    D++;
                                    switch (l) {
                                        case 0:
                                            var v = (k[d] & 255) << 24 | (k[d + 1] & 255) << 16 | (k[d + 2] & 255) << 8 | k[d + 3] & 255;
                                            break;
                                        case 1:
                                            v = (k[d + 1] & 255) << 24 | (k[d + 2] & 255) << 16 | (k[d + 3] & 255) << 8 | k[d] & 255;
                                            break;
                                        case 2:
                                            v = (k[d + 2] & 255) << 24 | (k[d + 1] & 255) << 16 | (k[d] & 255) << 8 | k[d + 3] & 255
                                    }
                                    p && 0 != (v & 255) && 255 != (v & 255) && (ea.unmult = 255 / (v & 255), v = (ea.__clamp[Math.round((v >>>
                                        24 & 255) * ea.unmult)] & 255) << 24 | (ea.__clamp[Math.round((v >>> 16 & 255) * ea.unmult)] & 255) << 16 | (ea.__clamp[Math.round((v >>> 8 & 255) * ea.unmult)] & 255) << 8 | v & 255);
                                    switch (n) {
                                        case 0:
                                            var y = (m[e] & 255) << 24 | (m[e + 1] & 255) << 16 | (m[e + 2] & 255) << 8 | m[e + 3] & 255;
                                            break;
                                        case 1:
                                            y = (m[e + 1] & 255) << 24 | (m[e + 2] & 255) << 16 | (m[e + 3] & 255) << 8 | m[e] & 255;
                                            break;
                                        case 2:
                                            y = (m[e + 2] & 255) << 24 | (m[e + 1] & 255) << 16 | (m[e] & 255) << 8 | m[e + 3] & 255
                                    }
                                    x && 0 != (y & 255) && 255 != (y & 255) && (ea.unmult = 255 / (y & 255), y = (ea.__clamp[Math.round((y >>> 24 & 255) * ea.unmult)] & 255) << 24 | (ea.__clamp[Math.round((y >>>
                                        16 & 255) * ea.unmult)] & 255) << 16 | (ea.__clamp[Math.round((y >>> 8 & 255) * ea.unmult)] & 255) << 8 | y & 255);
                                    switch (b) {
                                        case 0:
                                            var t = (z[A] & 255) << 24 | (z[A + 1] & 255) << 16 | (z[A + 2] & 255) << 8 | z[A + 3] & 255;
                                            break;
                                        case 1:
                                            t = (z[A + 1] & 255) << 24 | (z[A + 2] & 255) << 16 | (z[A + 3] & 255) << 8 | z[A] & 255;
                                            break;
                                        case 2:
                                            t = (z[A + 2] & 255) << 24 | (z[A + 1] & 255) << 16 | (z[A] & 255) << 8 | z[A + 3] & 255
                                    }
                                    h = (t & 255) / 255 * ((v & 255) / 255);
                                    if (0 < h) {
                                        u = (y & 255) / 255;
                                        w = 1 - h;
                                        var B = h + u * w;
                                        y = (ea.__clamp[Math.round(((v >>> 24 & 255) * h + (y >>> 24 & 255) * u * w) / B)] & 255) << 24 | (y >>> 16 & 255) << 16 | (y >>> 8 & 255) << 8 | y & 255;
                                        y =
                                            (y >>> 24 & 255) << 24 | (ea.__clamp[Math.round(((v >>> 16 & 255) * h + (y >>> 16 & 255) * u * w) / B)] & 255) << 16 | (y >>> 8 & 255) << 8 | y & 255;
                                        y = (y >>> 24 & 255) << 24 | (y >>> 16 & 255) << 16 | (ea.__clamp[Math.round(((v >>> 8 & 255) * h + (y >>> 8 & 255) * u * w) / B)] & 255) << 8 | y & 255;
                                        y = (y >>> 24 & 255) << 24 | (y >>> 16 & 255) << 16 | (y >>> 8 & 255) << 8 | ea.__clamp[Math.round(255 * B)] & 255;
                                        x && (0 == (y & 255) ? 0 != y && (y = 0) : 255 != (y & 255) && (ea.a16 = ea.__alpha16[y & 255], y = ((y >>> 24 & 255) * ea.a16 >> 16 & 255) << 24 | ((y >>> 16 & 255) * ea.a16 >> 16 & 255) << 16 | ((y >>> 8 & 255) * ea.a16 >> 16 & 255) << 8 | y & 255));
                                        switch (n) {
                                            case 0:
                                                m[e] =
                                                    y >>> 24 & 255;
                                                m[e + 1] = y >>> 16 & 255;
                                                m[e + 2] = y >>> 8 & 255;
                                                m[e + 3] = y & 255;
                                                break;
                                            case 1:
                                                m[e] = y & 255;
                                                m[e + 1] = y >>> 24 & 255;
                                                m[e + 2] = y >>> 16 & 255;
                                                m[e + 3] = y >>> 8 & 255;
                                                break;
                                            case 2:
                                                m[e] = y >>> 8 & 255, m[e + 1] = y >>> 16 & 255, m[e + 2] = y >>> 24 & 255, m[e + 3] = y & 255
                                        }
                                    }
                                    d += 4;
                                    e += 4;
                                    A += 4
                                }
                            } else
                                for (y = 0, h = g.height; y < h;)
                                    for (u = y++, d = c.row(u), e = g.row(u), A = f.row(u), u = 0, w = g.width; u < w;) {
                                        u++;
                                        switch (l) {
                                            case 0:
                                                v = (k[d] & 255) << 24 | (k[d + 1] & 255) << 16 | (k[d + 2] & 255) << 8 | k[d + 3] & 255;
                                                break;
                                            case 1:
                                                v = (k[d + 1] & 255) << 24 | (k[d + 2] & 255) << 16 | (k[d + 3] & 255) << 8 | k[d] & 255;
                                                break;
                                            case 2:
                                                v = (k[d + 2] &
                                                    255) << 24 | (k[d + 1] & 255) << 16 | (k[d] & 255) << 8 | k[d + 3] & 255
                                        }
                                        p && 0 != (v & 255) && 255 != (v & 255) && (ea.unmult = 255 / (v & 255), v = (ea.__clamp[Math.round((v >>> 24 & 255) * ea.unmult)] & 255) << 24 | (ea.__clamp[Math.round((v >>> 16 & 255) * ea.unmult)] & 255) << 16 | (ea.__clamp[Math.round((v >>> 8 & 255) * ea.unmult)] & 255) << 8 | v & 255);
                                        switch (b) {
                                            case 0:
                                                t = (z[A] & 255) << 24 | (z[A + 1] & 255) << 16 | (z[A + 2] & 255) << 8 | z[A + 3] & 255;
                                                break;
                                            case 1:
                                                t = (z[A + 1] & 255) << 24 | (z[A + 2] & 255) << 16 | (z[A + 3] & 255) << 8 | z[A] & 255;
                                                break;
                                            case 2:
                                                t = (z[A + 2] & 255) << 24 | (z[A + 1] & 255) << 16 | (z[A] & 255) << 8 | z[A + 3] &
                                                    255
                                        }
                                        v = (v >>> 24 & 255) << 24 | (v >>> 16 & 255) << 16 | (v >>> 8 & 255) << 8 | Math.round((t & 255) / 255 * (v & 255)) & 255;
                                        x && (0 == (v & 255) ? 0 != v && (v = 0) : 255 != (v & 255) && (ea.a16 = ea.__alpha16[v & 255], v = ((v >>> 24 & 255) * ea.a16 >> 16 & 255) << 24 | ((v >>> 16 & 255) * ea.a16 >> 16 & 255) << 16 | ((v >>> 8 & 255) * ea.a16 >> 16 & 255) << 8 | v & 255));
                                        switch (n) {
                                            case 0:
                                                m[e] = v >>> 24 & 255;
                                                m[e + 1] = v >>> 16 & 255;
                                                m[e + 2] = v >>> 8 & 255;
                                                m[e + 3] = v & 255;
                                                break;
                                            case 1:
                                                m[e] = v & 255;
                                                m[e + 1] = v >>> 24 & 255;
                                                m[e + 2] = v >>> 16 & 255;
                                                m[e + 3] = v >>> 8 & 255;
                                                break;
                                            case 2:
                                                m[e] = v >>> 8 & 255, m[e + 1] = v >>> 16 & 255, m[e + 2] = v >>> 24 & 255, m[e + 3] = v &
                                                    255
                                        }
                                        d += 4;
                                        e += 4;
                                        A += 4
                                    } else if (h)
                                        for (t = 0, z = g.height; t < z;)
                                            for (e = t++, d = c.row(e), e = g.row(e), b = 0, f = g.width; b < f;) {
                                                b++;
                                                switch (l) {
                                                    case 0:
                                                        v = (k[d] & 255) << 24 | (k[d + 1] & 255) << 16 | (k[d + 2] & 255) << 8 | k[d + 3] & 255;
                                                        break;
                                                    case 1:
                                                        v = (k[d + 1] & 255) << 24 | (k[d + 2] & 255) << 16 | (k[d + 3] & 255) << 8 | k[d] & 255;
                                                        break;
                                                    case 2:
                                                        v = (k[d + 2] & 255) << 24 | (k[d + 1] & 255) << 16 | (k[d] & 255) << 8 | k[d + 3] & 255
                                                }
                                                p && 0 != (v & 255) && 255 != (v & 255) && (ea.unmult = 255 / (v & 255), v = (ea.__clamp[Math.round((v >>> 24 & 255) * ea.unmult)] & 255) << 24 | (ea.__clamp[Math.round((v >>> 16 & 255) * ea.unmult)] & 255) << 16 |
                                                    (ea.__clamp[Math.round((v >>> 8 & 255) * ea.unmult)] & 255) << 8 | v & 255);
                                                switch (n) {
                                                    case 0:
                                                        y = (m[e] & 255) << 24 | (m[e + 1] & 255) << 16 | (m[e + 2] & 255) << 8 | m[e + 3] & 255;
                                                        break;
                                                    case 1:
                                                        y = (m[e + 1] & 255) << 24 | (m[e + 2] & 255) << 16 | (m[e + 3] & 255) << 8 | m[e] & 255;
                                                        break;
                                                    case 2:
                                                        y = (m[e + 2] & 255) << 24 | (m[e + 1] & 255) << 16 | (m[e] & 255) << 8 | m[e + 3] & 255
                                                }
                                                x && 0 != (y & 255) && 255 != (y & 255) && (ea.unmult = 255 / (y & 255), y = (ea.__clamp[Math.round((y >>> 24 & 255) * ea.unmult)] & 255) << 24 | (ea.__clamp[Math.round((y >>> 16 & 255) * ea.unmult)] & 255) << 16 | (ea.__clamp[Math.round((y >>> 8 & 255) * ea.unmult)] &
                                                    255) << 8 | y & 255);
                                                h = (v & 255) / 255;
                                                u = (y & 255) / 255;
                                                w = 1 - h;
                                                B = h + u * w;
                                                0 == B ? y = 0 : (y = (ea.__clamp[Math.round(((v >>> 24 & 255) * h + (y >>> 24 & 255) * u * w) / B)] & 255) << 24 | (y >>> 16 & 255) << 16 | (y >>> 8 & 255) << 8 | y & 255, y = (y >>> 24 & 255) << 24 | (ea.__clamp[Math.round(((v >>> 16 & 255) * h + (y >>> 16 & 255) * u * w) / B)] & 255) << 16 | (y >>> 8 & 255) << 8 | y & 255, y = (y >>> 24 & 255) << 24 | (y >>> 16 & 255) << 16 | (ea.__clamp[Math.round(((v >>> 8 & 255) * h + (y >>> 8 & 255) * u * w) / B)] & 255) << 8 | y & 255, y = (y >>> 24 & 255) << 24 | (y >>> 16 & 255) << 16 | (y >>> 8 & 255) << 8 | ea.__clamp[Math.round(255 * B)] & 255);
                                                x && (0 == (y & 255) ? 0 != y &&
                                                    (y = 0) : 255 != (y & 255) && (ea.a16 = ea.__alpha16[y & 255], y = ((y >>> 24 & 255) * ea.a16 >> 16 & 255) << 24 | ((y >>> 16 & 255) * ea.a16 >> 16 & 255) << 16 | ((y >>> 8 & 255) * ea.a16 >> 16 & 255) << 8 | y & 255));
                                                switch (n) {
                                                    case 0:
                                                        m[e] = y >>> 24 & 255;
                                                        m[e + 1] = y >>> 16 & 255;
                                                        m[e + 2] = y >>> 8 & 255;
                                                        m[e + 3] = y & 255;
                                                        break;
                                                    case 1:
                                                        m[e] = y & 255;
                                                        m[e + 1] = y >>> 24 & 255;
                                                        m[e + 2] = y >>> 16 & 255;
                                                        m[e + 3] = y >>> 8 & 255;
                                                        break;
                                                    case 2:
                                                        m[e] = y >>> 8 & 255, m[e + 1] = y >>> 16 & 255, m[e + 2] = y >>> 24 & 255, m[e + 3] = y & 255
                                                }
                                                d += 4;
                                                e += 4
                                            } else if (l == n && p == x && u == z)
                                                for (v = 0, l = g.height; v < l;) n = v++, d = c.row(n), e = g.row(n), m.set(k.subarray(d, d +
                                                    g.width * z), e);
                                            else
                                                for (y = 0, t = g.height; y < t;)
                                                    for (e = y++, d = c.row(e), e = g.row(e), z = 0, b = g.width; z < b;) {
                                                        z++;
                                                        switch (l) {
                                                            case 0:
                                                                v = (k[d] & 255) << 24 | (k[d + 1] & 255) << 16 | (k[d + 2] & 255) << 8 | k[d + 3] & 255;
                                                                break;
                                                            case 1:
                                                                v = (k[d + 1] & 255) << 24 | (k[d + 2] & 255) << 16 | (k[d + 3] & 255) << 8 | k[d] & 255;
                                                                break;
                                                            case 2:
                                                                v = (k[d + 2] & 255) << 24 | (k[d + 1] & 255) << 16 | (k[d] & 255) << 8 | k[d + 3] & 255
                                                        }
                                                        p && 0 != (v & 255) && 255 != (v & 255) && (ea.unmult = 255 / (v & 255), v = (ea.__clamp[Math.round((v >>> 24 & 255) * ea.unmult)] & 255) << 24 | (ea.__clamp[Math.round((v >>> 16 & 255) * ea.unmult)] & 255) << 16 | (ea.__clamp[Math.round((v >>>
                                                            8 & 255) * ea.unmult)] & 255) << 8 | v & 255);
                                                        x && (0 == (v & 255) ? 0 != v && (v = 0) : 255 != (v & 255) && (ea.a16 = ea.__alpha16[v & 255], v = ((v >>> 24 & 255) * ea.a16 >> 16 & 255) << 24 | ((v >>> 16 & 255) * ea.a16 >> 16 & 255) << 16 | ((v >>> 8 & 255) * ea.a16 >> 16 & 255) << 8 | v & 255));
                                                        switch (n) {
                                                            case 0:
                                                                m[e] = v >>> 24 & 255;
                                                                m[e + 1] = v >>> 16 & 255;
                                                                m[e + 2] = v >>> 8 & 255;
                                                                m[e + 3] = v & 255;
                                                                break;
                                                            case 1:
                                                                m[e] = v & 255;
                                                                m[e + 1] = v >>> 24 & 255;
                                                                m[e + 2] = v >>> 16 & 255;
                                                                m[e + 3] = v >>> 8 & 255;
                                                                break;
                                                            case 2:
                                                                m[e] = v >>> 8 & 255, m[e + 1] = v >>> 16 & 255, m[e + 2] = v >>> 24 & 255, m[e + 3] = v & 255
                                                        }
                                                        d += 4;
                                                        e += 4
                                                    }
                }
                a.dirty = !0;
                a.version++
            };
            Jd.fillRect = function(a,
                b, c, d) {
                switch (d) {
                    case 1:
                        c = (c >>> 16 & 255) << 24 | (c >>> 8 & 255) << 16 | (c & 255) << 8 | c >>> 24 & 255;
                        break;
                    case 2:
                        c = (c >>> 8 & 255) << 24 | (c >>> 16 & 255) << 16 | (c >>> 24 & 255) << 8 | c & 255
                }
                a.get_transparent() || (c = (c >>> 24 & 255) << 24 | (c >>> 16 & 255) << 16 | (c >>> 8 & 255) << 8 | 255);
                d = a.buffer.data;
                if (null != d) {
                    var e = a.buffer.format;
                    a.buffer.premultiplied && (0 == (c & 255) ? 0 != c && (c = 0) : 255 != (c & 255) && (ea.a16 = ea.__alpha16[c & 255], c = ((c >>> 24 & 255) * ea.a16 >> 16 & 255) << 24 | ((c >>> 16 & 255) * ea.a16 >> 16 & 255) << 16 | ((c >>> 8 & 255) * ea.a16 >> 16 & 255) << 8 | c & 255));
                    b = new Oi(a, b);
                    for (var f,
                            h = 0, k = b.height; h < k;) {
                        f = h++;
                        f = b.row(f);
                        for (var m = 0, g = b.width; m < g;) {
                            var l = m++;
                            l = f + 4 * l;
                            switch (e) {
                                case 0:
                                    d[l] = c >>> 24 & 255;
                                    d[l + 1] = c >>> 16 & 255;
                                    d[l + 2] = c >>> 8 & 255;
                                    d[l + 3] = c & 255;
                                    break;
                                case 1:
                                    d[l] = c & 255;
                                    d[l + 1] = c >>> 24 & 255;
                                    d[l + 2] = c >>> 16 & 255;
                                    d[l + 3] = c >>> 8 & 255;
                                    break;
                                case 2:
                                    d[l] = c >>> 8 & 255, d[l + 1] = c >>> 16 & 255, d[l + 2] = c >>> 24 & 255, d[l + 3] = c & 255
                            }
                        }
                    }
                    a.dirty = !0;
                    a.version++
                }
            };
            Jd.gaussianBlur = function(a, b, c, d, e, f, h, k, m) {
                null == h && (h = 1);
                null == f && (f = 4);
                null == e && (e = 4);
                (k = a.get_premultiplied()) && a.set_premultiplied(!1);
                Zf.blur(a, b, c, d,
                    e, f, h);
                a.dirty = !0;
                a.version++;
                k && a.set_premultiplied(!0);
                return a
            };
            Jd.multiplyAlpha = function(a) {
                var b = a.buffer.data;
                if (null != b && a.buffer.transparent) {
                    for (var c = a.buffer.format, d, e = 0, f = E["int"](b.length / 4); e < f;) {
                        var h = e++,
                            k = 4 * h;
                        switch (c) {
                            case 0:
                                d = (b[k] & 255) << 24 | (b[k + 1] & 255) << 16 | (b[k + 2] & 255) << 8 | b[k + 3] & 255;
                                break;
                            case 1:
                                d = (b[k + 1] & 255) << 24 | (b[k + 2] & 255) << 16 | (b[k + 3] & 255) << 8 | b[k] & 255;
                                break;
                            case 2:
                                d = (b[k + 2] & 255) << 24 | (b[k + 1] & 255) << 16 | (b[k] & 255) << 8 | b[k + 3] & 255
                        }
                        h *= 4;
                        0 == (d & 255) ? 0 != d && (d = 0) : 255 != (d & 255) && (ea.a16 =
                            ea.__alpha16[d & 255], d = ((d >>> 24 & 255) * ea.a16 >> 16 & 255) << 24 | ((d >>> 16 & 255) * ea.a16 >> 16 & 255) << 16 | ((d >>> 8 & 255) * ea.a16 >> 16 & 255) << 8 | d & 255);
                        switch (c) {
                            case 0:
                                b[h] = d >>> 24 & 255;
                                b[h + 1] = d >>> 16 & 255;
                                b[h + 2] = d >>> 8 & 255;
                                b[h + 3] = d & 255;
                                break;
                            case 1:
                                b[h] = d & 255;
                                b[h + 1] = d >>> 24 & 255;
                                b[h + 2] = d >>> 16 & 255;
                                b[h + 3] = d >>> 8 & 255;
                                break;
                            case 2:
                                b[h] = d >>> 8 & 255, b[h + 1] = d >>> 16 & 255, b[h + 2] = d >>> 24 & 255, b[h + 3] = d & 255
                        }
                    }
                    a.buffer.premultiplied = !0;
                    a.dirty = !0;
                    a.version++
                }
            };
            Jd.setFormat = function(a, b) {
                var c = a.buffer.data;
                if (null != c) {
                    var d = E["int"](c.length / 4);
                    switch (a.get_format()) {
                        case 0:
                            var e = 0;
                            var f = 1;
                            var h = 2;
                            var k = 3;
                            break;
                        case 1:
                            e = 1;
                            f = 2;
                            h = 3;
                            k = 0;
                            break;
                        case 2:
                            e = 2, f = 1, h = 0, k = 3
                    }
                    switch (b) {
                        case 0:
                            var m = 0;
                            var g = 1;
                            var l = 2;
                            var n = 3;
                            break;
                        case 1:
                            m = 1;
                            g = 2;
                            l = 3;
                            n = 0;
                            break;
                        case 2:
                            m = 2, g = 1, l = 0, n = 3
                    }
                    for (var p = 0; p < d;) {
                        var x = 4 * p++;
                        var u = c[x + e];
                        var z = c[x + f];
                        var w = c[x + h];
                        var v = c[x + k];
                        c[x + m] = u;
                        c[x + g] = z;
                        c[x + l] = w;
                        c[x + n] = v
                    }
                    a.buffer.format = b;
                    a.dirty = !0;
                    a.version++
                }
            };
            Jd.setPixel32 = function(a, b, c, d, e) {
                switch (e) {
                    case 1:
                        d = (d >>> 16 & 255) << 24 | (d >>> 8 & 255) << 16 | (d & 255) << 8 | d >>> 24 & 255;
                        break;
                    case 2:
                        d = (d >>> 8 & 255) << 24 | (d >>> 16 & 255) << 16 | (d >>> 24 & 255) << 8 | d & 255
                }
                a.get_transparent() || (d = (d >>> 24 & 255) << 24 | (d >>> 16 & 255) << 16 | (d >>> 8 & 255) << 8 | 255);
                e = a.buffer.data;
                b = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
                a.buffer.premultiplied && (0 == (d & 255) ? 0 != d && (d = 0) : 255 != (d & 255) && (ea.a16 = ea.__alpha16[d & 255], d = ((d >>> 24 & 255) * ea.a16 >> 16 & 255) << 24 | ((d >>> 16 & 255) * ea.a16 >> 16 & 255) << 16 | ((d >>> 8 & 255) * ea.a16 >> 16 & 255) << 8 | d & 255));
                switch (a.buffer.format) {
                    case 0:
                        e[b] = d >>> 24 & 255;
                        e[b + 1] = d >>> 16 & 255;
                        e[b + 2] = d >>> 8 & 255;
                        e[b + 3] = d & 255;
                        break;
                    case 1:
                        e[b] = d & 255;
                        e[b + 1] = d >>> 24 & 255;
                        e[b + 2] = d >>> 16 & 255;
                        e[b + 3] = d >>> 8 & 255;
                        break;
                    case 2:
                        e[b] = d >>> 8 & 255, e[b + 1] = d >>> 16 & 255, e[b + 2] = d >>> 24 & 255, e[b + 3] = d & 255
                }
                a.dirty = !0;
                a.version++
            };
            Jd.unmultiplyAlpha = function(a) {
                var b = a.buffer.data;
                if (null != b) {
                    for (var c = a.buffer.format, d, e = 0, f = E["int"](b.length / 4); e < f;) {
                        var h = e++,
                            k = 4 * h;
                        switch (c) {
                            case 0:
                                d = (b[k] & 255) << 24 | (b[k + 1] & 255) << 16 | (b[k + 2] & 255) << 8 | b[k + 3] & 255;
                                break;
                            case 1:
                                d = (b[k + 1] & 255) << 24 | (b[k + 2] & 255) << 16 | (b[k + 3] & 255) << 8 | b[k] & 255;
                                break;
                            case 2:
                                d = (b[k + 2] & 255) << 24 |
                                    (b[k + 1] & 255) << 16 | (b[k] & 255) << 8 | b[k + 3] & 255
                        }
                        0 != (d & 255) && 255 != (d & 255) && (ea.unmult = 255 / (d & 255), d = (ea.__clamp[Math.round((d >>> 24 & 255) * ea.unmult)] & 255) << 24 | (ea.__clamp[Math.round((d >>> 16 & 255) * ea.unmult)] & 255) << 16 | (ea.__clamp[Math.round((d >>> 8 & 255) * ea.unmult)] & 255) << 8 | d & 255);
                        h *= 4;
                        switch (c) {
                            case 0:
                                b[h] = d >>> 24 & 255;
                                b[h + 1] = d >>> 16 & 255;
                                b[h + 2] = d >>> 8 & 255;
                                b[h + 3] = d & 255;
                                break;
                            case 1:
                                b[h] = d & 255;
                                b[h + 1] = d >>> 24 & 255;
                                b[h + 2] = d >>> 16 & 255;
                                b[h + 3] = d >>> 8 & 255;
                                break;
                            case 2:
                                b[h] = d >>> 8 & 255, b[h + 1] = d >>> 16 & 255, b[h + 2] = d >>> 24 & 255, b[h + 3] =
                                    d & 255
                        }
                    }
                    a.buffer.premultiplied = !1;
                    a.dirty = !0;
                    a.version++
                }
            };
            var Oi = function(a, b) {
                this.image = a;
                null == b ? this.rect = a.get_rect() : (0 > b.x && (b.x = 0), 0 > b.y && (b.y = 0), b.x + b.width > a.width && (b.width = a.width - b.x), b.y + b.height > a.height && (b.height = a.height - b.y), 0 > b.width && (b.width = 0), 0 > b.height && (b.height = 0), this.rect = b);
                this.stride = a.buffer.get_stride();
                this.__update()
            };
            g["lime._internal.graphics._ImageDataUtil.ImageDataView"] = Oi;
            Oi.__name__ = ["lime", "_internal", "graphics", "_ImageDataUtil", "ImageDataView"];
            Oi.prototype = {
                x: null,
                y: null,
                height: null,
                width: null,
                byteOffset: null,
                image: null,
                rect: null,
                stride: null,
                tempRect: null,
                clip: function(a, b, c, d) {
                    null == this.tempRect && (this.tempRect = new Eg);
                    this.tempRect.setTo(a, b, c, d);
                    this.rect.intersection(this.tempRect, this.rect);
                    this.__update()
                },
                row: function(a) {
                    return this.byteOffset + this.stride * a
                },
                __update: function() {
                    this.x = Math.ceil(this.rect.x);
                    this.y = Math.ceil(this.rect.y);
                    this.width = Math.floor(this.rect.width);
                    this.height = Math.floor(this.rect.height);
                    this.byteOffset = this.stride *
                        (this.y + this.image.offsetY) + 4 * (this.x + this.image.offsetX)
                },
                __class__: Oi
            };
            var Zf = function() {};
            g["lime._internal.graphics.StackBlur"] = Zf;
            Zf.__name__ = ["lime", "_internal", "graphics", "StackBlur"];
            Zf.blur = function(a, b, c, d, e, f, h) {
                a.copyPixels(b, c, d);
                Zf.__stackBlurCanvasRGBA(a, E["int"](c.width), E["int"](c.height), e, f, h)
            };
            Zf.__stackBlurCanvasRGBA = function(a, b, c, d, e, f) {
                d = Math.round(d) >> 1;
                e = Math.round(e) >> 1;
                if (null != Zf.MUL_TABLE && (d >= Zf.MUL_TABLE.length && (d = Zf.MUL_TABLE.length - 1), e >= Zf.MUL_TABLE.length && (e =
                        Zf.MUL_TABLE.length - 1), !(0 > d || 0 > e))) {
                    1 > f && (f = 1);
                    3 < f && (f = 3);
                    a = a.get_data();
                    var h, k, m, g = d + d + 1;
                    var l = e + e + 1;
                    var n = b - 1,
                        p = c - 1,
                        x = d + 1,
                        u = e + 1,
                        z = new tl,
                        w = z;
                    for (m = 1; m < g;) m++, w = w.n = new tl;
                    w.n = z;
                    var v = g = new tl;
                    for (m = 1; m < l;) m++, v = v.n = new tl;
                    v.n = g;
                    for (var q, y = Zf.MUL_TABLE[d], L = Zf.SHG_TABLE[d], A = Zf.MUL_TABLE[e], D = Zf.SHG_TABLE[e]; 0 < f;) {
                        --f;
                        var Ka = k = 0;
                        var t = y,
                            B = L;
                        for (h = c;;) {
                            var F = a[k];
                            l = x * F;
                            var pa = a[k + 1];
                            m = x * pa;
                            var H = a[k + 2];
                            var J = x * H;
                            var K = a[k + 3];
                            var R = x * K;
                            w = z;
                            for (v = x; w.r = F, w.g = pa, w.b = H, w.a = K, w = w.n, -1 < --v;);
                            K = 1;
                            for (q =
                                x; K < q;) v = K++, v = k + ((n < v ? n : v) << 2), l += w.r = a[v], m += w.g = a[v + 1], J += w.b = a[v + 2], R += w.a = a[v + 3], w = w.n;
                            q = z;
                            w = 0;
                            for (K = b; w < K;) v = w++, a[k++] = l * t >>> B, a[k++] = m * t >>> B, a[k++] = J * t >>> B, a[k++] = R * t >>> B, v = v + d + 1, v = Ka + (v < n ? v : n) << 2, l -= q.r - (q.r = a[v]), m -= q.g - (q.g = a[v + 1]), J -= q.b - (q.b = a[v + 2]), R -= q.a - (q.a = a[v + 3]), q = q.n;
                            Ka += b;
                            if (!(0 < --h)) break
                        }
                        t = A;
                        B = D;
                        h = 0;
                        for (Ka = b; h < Ka;) {
                            w = h++;
                            k = w << 2;
                            F = a[k];
                            l = u * F;
                            pa = a[k + 1];
                            m = u * pa;
                            H = a[k + 2];
                            J = u * H;
                            K = a[k + 3];
                            R = u * K;
                            v = g;
                            k = 0;
                            for (q = u; k < q;) k++, v.r = F, v.g = pa, v.b = H, v.a = K, v = v.n;
                            K = b;
                            q = 1;
                            for (F = e + 1; q < F;) pa = q++, k =
                                K + w << 2, l += v.r = a[k], m += v.g = a[k + 1], J += v.b = a[k + 2], R += v.a = a[k + 3], v = v.n, pa < p && (K += b);
                            k = w;
                            q = g;
                            if (0 < f)
                                for (F = 0, pa = c; F < pa;) H = F++, v = k << 2, K = R * t >>> B, a[v + 3] = K, 0 < K ? (a[v] = l * t >>> B, a[v + 1] = m * t >>> B, a[v + 2] = J * t >>> B) : a[v] = a[v + 1] = a[v + 2] = 0, v = H + u, v = w + (v < p ? v : p) * b << 2, l -= q.r - (q.r = a[v]), m -= q.g - (q.g = a[v + 1]), J -= q.b - (q.b = a[v + 2]), R -= q.a - (q.a = a[v + 3]), q = q.n, k += b;
                            else
                                for (var Ca = 0, X = c; Ca < X;) {
                                    var oa = Ca++;
                                    v = k << 2;
                                    K = R * t >>> B;
                                    a[v + 3] = K;
                                    0 < K ? (K = 255 / K, F = E["int"]((l * t >>> B) * K), pa = E["int"]((m * t >>> B) * K), H = E["int"]((J * t >>> B) * K), a[v] = 255 < F ? 255 : F, a[v +
                                        1] = 255 < pa ? 255 : pa, a[v + 2] = 255 < H ? 255 : H) : a[v] = a[v + 1] = a[v + 2] = 0;
                                    v = oa + u;
                                    v = w + (v < p ? v : p) * b << 2;
                                    l -= q.r - (q.r = a[v]);
                                    m -= q.g - (q.g = a[v + 1]);
                                    J -= q.b - (q.b = a[v + 2]);
                                    R -= q.a - (q.a = a[v + 3]);
                                    q = q.n;
                                    k += b
                                }
                        }
                    }
                }
            };
            var tl = function() {
                this.a = this.b = this.g = this.r = 0;
                this.n = null
            };
            g["lime._internal.graphics.BlurStack"] = tl;
            tl.__name__ = ["lime", "_internal", "graphics", "BlurStack"];
            tl.prototype = {
                r: null,
                g: null,
                b: null,
                a: null,
                n: null,
                __class__: tl
            };
            var Wq = function() {};
            g["lime._internal.unifill.Exception"] = Wq;
            Wq.__name__ = ["lime", "_internal", "unifill",
                "Exception"
            ];
            Wq.prototype = {
                __class__: Wq
            };
            var pk = function(a) {
                this.index = a
            };
            g["lime._internal.unifill.InvalidCodeUnitSequence"] = pk;
            pk.__name__ = ["lime", "_internal", "unifill", "InvalidCodeUnitSequence"];
            pk.__super__ = Wq;
            pk.prototype = p(Wq.prototype, {
                index: null,
                toString: function() {
                    return "InvalidCodeUnitSequence(index: " + this.index + ")"
                },
                __class__: pk
            });
            var wf = function() {};
            g["lime._internal.unifill.InternalEncoding"] = wf;
            wf.__name__ = ["lime", "_internal", "unifill", "InternalEncoding"];
            wf.codePointAt = function(a,
                b) {
                return Xq.codePointAt(a, b)
            };
            wf.charAt = function(a, b) {
                var c = ka.fastCodeAt(a, b);
                return la.substr(a, b, Pi.code_point_width(c))
            };
            wf.codePointCount = function(a, b, c) {
                return Xq.codePointCount(a, b, c)
            };
            wf.codePointWidthAt = function(a, b) {
                a = ka.fastCodeAt(a, b);
                return Pi.code_point_width(a)
            };
            wf.offsetByCodePoints = function(a, b, c) {
                if (0 <= c) {
                    for (var d = a.length, e = 0; e < c && b < d;) {
                        var f = ka.fastCodeAt(a, b);
                        b += Pi.code_point_width(f);
                        ++e
                    }
                    return b
                }
                for (d = 0; d < -c && 0 < b;) b -= Pi.find_prev_code_point(function(a) {
                    return function(b) {
                        return ka.fastCodeAt(a[0],
                            b)
                    }
                }([a]), b), ++d;
                return b
            };
            var Yq = function(a, b, c) {
                this.i = 0;
                this.string = a;
                this.index = b;
                this.endIndex = c
            };
            g["lime._internal.unifill.InternalEncodingIter"] = Yq;
            Yq.__name__ = ["lime", "_internal", "unifill", "InternalEncodingIter"];
            Yq.prototype = {
                string: null,
                index: null,
                endIndex: null,
                hasNext: function() {
                    return this.index < this.endIndex
                },
                i: null,
                next: function() {
                    this.i = this.index;
                    this.index += wf.codePointWidthAt(this.string, this.index);
                    return this.i
                },
                __class__: Yq
            };
            var Qi = function() {};
            g["lime._internal.unifill.Unicode"] =
                Qi;
            Qi.__name__ = ["lime", "_internal", "unifill", "Unicode"];
            Qi.decodeSurrogate = function(a, b) {
                return a - 55232 << 10 | b & 1023
            };
            Qi.isHighSurrogate = function(a) {
                return 55296 <= a ? 56319 >= a : !1
            };
            Qi.isLowSurrogate = function(a) {
                return 56320 <= a ? 57343 >= a : !1
            };
            var Fg = function() {};
            g["lime._internal.unifill.Unifill"] = Fg;
            Fg.__name__ = ["lime", "_internal", "unifill", "Unifill"];
            Fg.uLength = function(a) {
                return wf.codePointCount(a, 0, a.length)
            };
            Fg.uCharAt = function(a, b) {
                b = wf.offsetByCodePoints(a, 0, b);
                return wf.charAt(a, b)
            };
            Fg.uCharCodeAt =
                function(a, b) {
                    b = wf.offsetByCodePoints(a, 0, b);
                    return wf.codePointAt(a, b)
                };
            Fg.uIndexOf = function(a, b, c) {
                null == c && (c = 0);
                b = a.indexOf(b, wf.offsetByCodePoints(a, 0, c));
                return 0 <= b ? wf.codePointCount(a, 0, b) : -1
            };
            Fg.uSubstring = function(a, b, c) {
                b = 0 > b ? 0 : wf.offsetByCodePoints(a, 0, b);
                c = null == c ? a.length : 0 > c ? 0 : wf.offsetByCodePoints(a, 0, c);
                return a.substring(b, c)
            };
            Fg.uCompare = function(a, b) {
                for (var c = new Yq(a, 0, a.length), d = new Yq(b, 0, b.length); c.hasNext() && d.hasNext();) {
                    var e = wf.codePointAt(a, c.next()),
                        f = wf.codePointAt(b,
                            d.next());
                    if (e < f) return -1;
                    if (e > f) return 1
                }
                return d.hasNext() ? -1 : c.hasNext() ? 1 : 0
            };
            var Xq = {};
            g["lime._internal.unifill._Utf16.Utf16_Impl_"] = Xq;
            Xq.__name__ = ["lime", "_internal", "unifill", "_Utf16", "Utf16_Impl_"];
            Xq.codePointAt = function(a, b) {
                return Pi.decode_code_point(a.length, function(b) {
                    return ka.fastCodeAt(a, b)
                }, b)
            };
            Xq.codePointCount = function(a, b, c) {
                for (var d = 0; b < c;) {
                    var e = ka.fastCodeAt(a, b);
                    b += Pi.code_point_width(e);
                    ++d
                }
                return d
            };
            var Pi = function() {};
            g["lime._internal.unifill._Utf16.Utf16Impl"] = Pi;
            Pi.__name__ = ["lime", "_internal", "unifill", "_Utf16", "Utf16Impl"];
            Pi.code_point_width = function(a) {
                return Qi.isHighSurrogate(a) ? 2 : 1
            };
            Pi.find_prev_code_point = function(a, b) {
                a = a(b - 1);
                return Qi.isLowSurrogate(a) ? 2 : 1
            };
            Pi.decode_code_point = function(a, b, c) {
                if (0 > c || a <= c) throw new Z(new pk(c));
                var d = b(c);
                if (Qi.isHighSurrogate(d)) {
                    if (0 > c + 1 || a <= c + 1) throw new Z(new pk(c));
                    a = b(c + 1);
                    if (Qi.isLowSurrogate(a)) return Qi.decodeSurrogate(d, a);
                    throw new Z(new pk(c));
                }
                if (Qi.isLowSurrogate(d)) throw new Z(new pk(c));
                return d
            };
            var oc = function(a, b) {
                null == b && (b = !1);
                if (null != a)
                    if (b) b = new Le, b.future = this, xf.queue({
                        promise: b,
                        work: a
                    });
                    else try {
                        this.value = a(), this.isComplete = !0
                    } catch (c) {
                        vb.lastException = c, c instanceof Z && (c = c.val), this.error = c, this.isError = !0
                    }
            };
            g["lime.app.Future"] = oc;
            oc.__name__ = ["lime", "app", "Future"];
            oc.withError = function(a) {
                var b = new oc;
                b.isError = !0;
                b.error = a;
                return b
            };
            oc.withValue = function(a) {
                var b = new oc;
                b.isComplete = !0;
                b.value = a;
                return b
            };
            oc.prototype = {
                error: null,
                isComplete: null,
                isError: null,
                value: null,
                __completeListeners: null,
                __errorListeners: null,
                __progressListeners: null,
                onComplete: function(a) {
                    null != a && (this.isComplete ? a(this.value) : this.isError || (null == this.__completeListeners && (this.__completeListeners = []), this.__completeListeners.push(a)));
                    return this
                },
                onError: function(a) {
                    null != a && (this.isError ? a(this.error) : this.isComplete || (null == this.__errorListeners && (this.__errorListeners = []), this.__errorListeners.push(a)));
                    return this
                },
                onProgress: function(a) {
                    null != a && (null == this.__progressListeners &&
                        (this.__progressListeners = []), this.__progressListeners.push(a));
                    return this
                },
                then: function(a) {
                    if (this.isComplete) return a(this.value);
                    if (this.isError) {
                        var b = new oc;
                        b.isError = !0;
                        b.error = this.error;
                        return b
                    }
                    var c = new Le;
                    this.onError(q(c, c.error));
                    this.onProgress(q(c, c.progress));
                    this.onComplete(function(b) {
                        b = a(b);
                        b.onError(q(c, c.error));
                        b.onComplete(q(c, c.complete))
                    });
                    return c.future
                },
                __class__: oc
            };
            var xf = function() {};
            g["lime.app._Future.FutureWork"] = xf;
            xf.__name__ = ["lime", "app", "_Future", "FutureWork"];
            xf.queue = function(a) {
                null == xf.threadPool && (xf.threadPool = new lu, xf.threadPool.doWork.add(xf.threadPool_doWork), xf.threadPool.onComplete.add(xf.threadPool_onComplete), xf.threadPool.onError.add(xf.threadPool_onError));
                xf.threadPool.queue(a)
            };
            xf.threadPool_doWork = function(a) {
                try {
                    var b = a.work();
                    xf.threadPool.sendComplete({
                        promise: a.promise,
                        result: b
                    })
                } catch (c) {
                    vb.lastException = c, c instanceof Z && (c = c.val), xf.threadPool.sendError({
                        promise: a.promise,
                        error: c
                    })
                }
            };
            xf.threadPool_onComplete = function(a) {
                a.promise.complete(a.result)
            };
            xf.threadPool_onError = function(a) {
                a.promise.error(a.error)
            };
            var Le = function() {
                this.future = new oc
            };
            g["lime.app.Promise"] = Le;
            Le.__name__ = ["lime", "app", "Promise"];
            Le.prototype = {
                future: null,
                complete: function(a) {
                    if (!this.future.isError && (this.future.isComplete = !0, this.future.value = a, null != this.future.__completeListeners)) {
                        for (var b = 0, c = this.future.__completeListeners; b < c.length;) {
                            var d = c[b];
                            ++b;
                            d(a)
                        }
                        this.future.__completeListeners = null
                    }
                    return this
                },
                completeWith: function(a) {
                    a.onComplete(q(this, this.complete));
                    a.onError(q(this, this.error));
                    a.onProgress(q(this, this.progress));
                    return this
                },
                error: function(a) {
                    if (!this.future.isComplete && (this.future.isError = !0, this.future.error = a, null != this.future.__errorListeners)) {
                        for (var b = 0, c = this.future.__errorListeners; b < c.length;) {
                            var d = c[b];
                            ++b;
                            d(a)
                        }
                        this.future.__errorListeners = null
                    }
                    return this
                },
                progress: function(a, b) {
                    if (!this.future.isError && !this.future.isComplete && null != this.future.__progressListeners)
                        for (var c = 0, d = this.future.__progressListeners; c < d.length;) {
                            var e =
                                d[c];
                            ++c;
                            e(a, b)
                        }
                    return this
                },
                __class__: Le
            };
            var ul = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Dynamic_Void"] = ul;
            ul.__name__ = ["lime", "app", "_Event_Dynamic_Void"];
            ul.prototype = {
                canceled: null,
                __repeat: null,
                __priorities: null,
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f,
                                0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) T.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                __listeners: null,
                dispatch: function(a) {
                    this.canceled = !1;
                    for (var b = this.__listeners, c = this.__repeat, d = 0; d < b.length && (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled););
                },
                __class__: ul
            };
            var mu = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Float_Float_Float_Void"] = mu;
            mu.__name__ = ["lime", "app", "_Event_Float_Float_Float_Void"];
            mu.prototype = {
                canceled: null,
                __repeat: null,
                __priorities: null,
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) T.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                __listeners: null,
                dispatch: function(a, b, c) {
                    this.canceled = !1;
                    for (var d = this.__listeners, e = this.__repeat, f =
                            0; f < d.length && (d[f](a, b, c), e[f] ? ++f : this.remove(d[f]), !this.canceled););
                },
                __class__: mu
            };
            var nu = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Float_Float_Int_Void"] = nu;
            nu.__name__ = ["lime", "app", "_Event_Float_Float_Int_Void"];
            nu.prototype = {
                canceled: null,
                __repeat: null,
                __priorities: null,
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f,
                                0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                cancel: function() {
                    this.canceled = !0
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) T.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                __listeners: null,
                dispatch: function(a, b, c) {
                    this.canceled = !1;
                    for (var d = this.__listeners, e = this.__repeat, f = 0; f < d.length && (d[f](a,
                            b, c), e[f] ? ++f : this.remove(d[f]), !this.canceled););
                },
                __class__: nu
            };
            var ro = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Float_Float_Void"] = ro;
            ro.__name__ = ["lime", "app", "_Event_Float_Float_Void"];
            ro.prototype = {
                canceled: null,
                __repeat: null,
                __priorities: null,
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f,
                                0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) T.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                __listeners: null,
                dispatch: function(a, b) {
                    this.canceled = !1;
                    for (var c = this.__listeners, d = this.__repeat, e = 0; e < c.length && (c[e](a, b), d[e] ? ++e : this.remove(c[e]), !this.canceled););
                },
                __class__: ro
            };
            var ou =
                function() {
                    this.canceled = !1;
                    this.__listeners = [];
                    this.__priorities = [];
                    this.__repeat = []
                };
            g["lime.app._Event_Float_Float_lime_ui_MouseButton_Void"] = ou;
            ou.__name__ = ["lime", "app", "_Event_Float_Float_lime_ui_MouseButton_Void"];
            ou.prototype = {
                canceled: null,
                __repeat: null,
                __priorities: null,
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0,
                                !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                cancel: function() {
                    this.canceled = !0
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) T.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                __listeners: null,
                dispatch: function(a, b, c) {
                    this.canceled = !1;
                    for (var d = this.__listeners, e = this.__repeat, f = 0; f < d.length && (d[f](a, b, c), e[f] ? ++f : this.remove(d[f]), !this.canceled););
                },
                __class__: ou
            };
            var pu = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Float_Float_lime_ui_MouseWheelMode_Void"] = pu;
            pu.__name__ = ["lime", "app", "_Event_Float_Float_lime_ui_MouseWheelMode_Void"];
            pu.prototype = {
                canceled: null,
                __repeat: null,
                __priorities: null,
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f,
                                0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                cancel: function() {
                    this.canceled = !0
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) T.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                __listeners: null,
                dispatch: function(a, b, c) {
                    this.canceled = !1;
                    for (var d = this.__listeners, e = this.__repeat, f = 0; f < d.length && (d[f](a, b, c), e[f] ? ++f : this.remove(d[f]), !this.canceled););
                },
                __class__: pu
            };
            var qu = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Int_Float_Float_Void"] = qu;
            qu.__name__ = ["lime", "app", "_Event_Int_Float_Float_Void"];
            qu.prototype = {
                canceled: null,
                __repeat: null,
                __priorities: null,
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                __listeners: null,
                __class__: qu
            };
            var ru = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Int_Float_Void"] = ru;
            ru.__name__ = ["lime", "app", "_Event_Int_Float_Void"];
            ru.prototype = {
                canceled: null,
                __repeat: null,
                __priorities: null,
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f,
                                0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) T.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                __listeners: null,
                dispatch: function(a, b) {
                    this.canceled = !1;
                    for (var c = this.__listeners, d = this.__repeat, e = 0; e < c.length && (c[e](a, b), d[e] ? ++e : this.remove(c[e]), !this.canceled););
                },
                __class__: ru
            };
            var Zq =
                function() {
                    this.canceled = !1;
                    this.__listeners = [];
                    this.__priorities = [];
                    this.__repeat = []
                };
            g["lime.app._Event_Int_Int_Void"] = Zq;
            Zq.__name__ = ["lime", "app", "_Event_Int_Int_Void"];
            Zq.prototype = {
                canceled: null,
                __repeat: null,
                __priorities: null,
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) T.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                __listeners: null,
                dispatch: function(a, b) {
                    this.canceled = !1;
                    for (var c = this.__listeners, d = this.__repeat, e = 0; e < c.length && (c[e](a, b), d[e] ? ++e : this.remove(c[e]), !this.canceled););
                },
                __class__: Zq
            };
            var Rj = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Int_Void"] =
                Rj;
            Rj.__name__ = ["lime", "app", "_Event_Int_Void"];
            Rj.prototype = {
                canceled: null,
                __repeat: null,
                __priorities: null,
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) T.compareMethods(this.__listeners[b],
                        a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                __listeners: null,
                dispatch: function(a) {
                    this.canceled = !1;
                    for (var b = this.__listeners, c = this.__repeat, d = 0; d < b.length && (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled););
                },
                __class__: Rj
            };
            var su = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Int_lime_ui_JoystickHatPosition_Void"] = su;
            su.__name__ = ["lime", "app", "_Event_Int_lime_ui_JoystickHatPosition_Void"];
            su.prototype = {
                canceled: null,
                __repeat: null,
                __priorities: null,
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                __listeners: null,
                __class__: su
            };
            var tu = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_String_Int_Int_Void"] =
                tu;
            tu.__name__ = ["lime", "app", "_Event_String_Int_Int_Void"];
            tu.prototype = {
                canceled: null,
                __repeat: null,
                __priorities: null,
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                __listeners: null,
                __class__: tu
            };
            var so = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_String_Void"] = so;
            so.__name__ = ["lime", "app", "_Event_String_Void"];
            so.prototype = {
                canceled: null,
                __repeat: null,
                __priorities: null,
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                cancel: function() {
                    this.canceled = !0
                },
                has: function(a) {
                    for (var b = 0, c = this.__listeners; b < c.length;) {
                        var d = c[b];
                        ++b;
                        if (T.compareMethods(d, a)) return !0
                    }
                    return !1
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) T.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                __listeners: null,
                dispatch: function(a) {
                    this.canceled = !1;
                    for (var b = this.__listeners, c = this.__repeat, d = 0; d < b.length && (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled););
                },
                __class__: so
            };
            var Ad =
                function() {
                    this.canceled = !1;
                    this.__listeners = [];
                    this.__priorities = [];
                    this.__repeat = []
                };
            g["lime.app._Event_Void_Void"] = Ad;
            Ad.__name__ = ["lime", "app", "_Event_Void_Void"];
            Ad.prototype = {
                canceled: null,
                __repeat: null,
                __priorities: null,
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) T.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                __listeners: null,
                dispatch: function() {
                    this.canceled = !1;
                    for (var a = this.__listeners, b = this.__repeat, c = 0; c < a.length && (a[c](), b[c] ? ++c : this.remove(a[c]), !this.canceled););
                },
                __class__: Ad
            };
            var $q = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_lime_graphics_RenderContext_Void"] =
                $q;
            $q.__name__ = ["lime", "app", "_Event_lime_graphics_RenderContext_Void"];
            $q.prototype = {
                canceled: null,
                __repeat: null,
                __priorities: null,
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                cancel: function() {
                    this.canceled = !0
                },
                remove: function(a) {
                    for (var b =
                            this.__listeners.length; 0 <= --b;) T.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                __listeners: null,
                dispatch: function(a) {
                    this.canceled = !1;
                    for (var b = this.__listeners, c = this.__repeat, d = 0; d < b.length && (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled););
                },
                __class__: $q
            };
            var uu = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_lime_ui_GamepadAxis_Float_Void"] = uu;
            uu.__name__ = ["lime", "app", "_Event_lime_ui_GamepadAxis_Float_Void"];
            uu.prototype = {
                canceled: null,
                __repeat: null,
                __priorities: null,
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) T.compareMethods(this.__listeners[b],
                        a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                __listeners: null,
                dispatch: function(a, b) {
                    this.canceled = !1;
                    for (var c = this.__listeners, d = this.__repeat, e = 0; e < c.length && (c[e](a, b), d[e] ? ++e : this.remove(c[e]), !this.canceled););
                },
                __class__: uu
            };
            var ar = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_lime_ui_GamepadButton_Void"] = ar;
            ar.__name__ = ["lime", "app", "_Event_lime_ui_GamepadButton_Void"];
            ar.prototype = {
                canceled: null,
                __repeat: null,
                __priorities: null,
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) T.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b,
                        1), this.__repeat.splice(b, 1))
                },
                __listeners: null,
                dispatch: function(a) {
                    this.canceled = !1;
                    for (var b = this.__listeners, c = this.__repeat, d = 0; d < b.length && (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled););
                },
                __class__: ar
            };
            var vu = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_lime_ui_Gamepad_Void"] = vu;
            vu.__name__ = ["lime", "app", "_Event_lime_ui_Gamepad_Void"];
            vu.prototype = {
                canceled: null,
                __repeat: null,
                __priorities: null,
                add: function(a, b, c) {
                    null == c && (c =
                        0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) T.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                __listeners: null,
                dispatch: function(a) {
                    this.canceled = !1;
                    for (var b = this.__listeners, c = this.__repeat, d = 0; d < b.length && (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled););
                },
                __class__: vu
            };
            var wu = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_lime_ui_Joystick_Void"] = wu;
            wu.__name__ = ["lime", "app", "_Event_lime_ui_Joystick_Void"];
            wu.prototype = {
                canceled: null,
                __repeat: null,
                __priorities: null,
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c >
                            this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) T.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                __listeners: null,
                dispatch: function(a) {
                    this.canceled = !1;
                    for (var b = this.__listeners, c = this.__repeat, d = 0; d < b.length &&
                        (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled););
                },
                __class__: wu
            };
            var br = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void"] = br;
            br.__name__ = ["lime", "app", "_Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void"];
            br.prototype = {
                canceled: null,
                __repeat: null,
                __priorities: null,
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f,
                                0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                cancel: function() {
                    this.canceled = !0
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) T.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                __listeners: null,
                dispatch: function(a, b) {
                    this.canceled = !1;
                    for (var c = this.__listeners, d = this.__repeat, e = 0; e < c.length && (c[e](a, b),
                            d[e] ? ++e : this.remove(c[e]), !this.canceled););
                },
                __class__: br
            };
            var vl = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_lime_ui_Touch_Void"] = vl;
            vl.__name__ = ["lime", "app", "_Event_lime_ui_Touch_Void"];
            vl.prototype = {
                canceled: null,
                __repeat: null,
                __priorities: null,
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f,
                                0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) T.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                __listeners: null,
                dispatch: function(a) {
                    this.canceled = !1;
                    for (var b = this.__listeners, c = this.__repeat, d = 0; d < b.length && (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled););
                },
                __class__: vl
            };
            var is = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_lime_ui_Window_Void"] = is;
            is.__name__ = ["lime", "app", "_Event_lime_ui_Window_Void"];
            is.prototype = {
                canceled: null,
                __repeat: null,
                __priorities: null,
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) T.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                __listeners: null,
                dispatch: function(a) {
                    this.canceled = !1;
                    for (var b = this.__listeners, c = this.__repeat, d = 0; d < b.length && (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled););
                },
                __class__: is
            };
            var Cb = function(a, b, c, d, e, f, h) {
                null == e && (e = -1);
                null == d && (d = -1);
                null == c && (c = 0);
                null == b && (b = 0);
                this.offsetX =
                    b;
                this.offsetY = c;
                this.width = d;
                this.height = e;
                this.version = 0;
                null == h && (h = Gd.CANVAS);
                this.type = h;
                if (null == a) {
                    if (0 < d && 0 < e) switch (Q.enumIndex(this.type)) {
                        case 0:
                            this.buffer = new Ph(null, d, e);
                            Ua.createCanvas(this, d, e);
                            null != f && 0 != f && this.fillRect(new Eg(0, 0, d, e), f);
                            break;
                        case 1:
                            a = d * e * 4, a = null != a ? new Cf(a) : null, this.buffer = new Ph(a, d, e), null != f && 0 != f && this.fillRect(new Eg(0, 0, d, e), f)
                    }
                } else this.__fromImageBuffer(a)
            };
            g["lime.graphics.Image"] = Cb;
            Cb.__name__ = ["lime", "graphics", "Image"];
            Cb.fromBase64 = function(a,
                b) {
                if (null == a) return null;
                var c = new Cb;
                c.__fromBase64(a, b);
                return c
            };
            Cb.fromBitmapData = function(a) {
                return null == a ? null : a.image
            };
            Cb.fromBytes = function(a) {
                if (null == a) return null;
                var b = new Cb;
                return b.__fromBytes(a) ? b : null
            };
            Cb.fromCanvas = function(a) {
                if (null == a) return null;
                var b = new Ph(null, a.width, a.height);
                b.set_src(a);
                a = new Cb(b);
                a.type = Gd.CANVAS;
                return a
            };
            Cb.fromFile = function(a) {
                if (null == a) return null;
                var b = new Cb;
                return b.__fromFile(a) ? b : null
            };
            Cb.fromImageElement = function(a) {
                if (null == a) return null;
                var b = new Ph(null, a.width, a.height);
                b.set_src(a);
                a = new Cb(b);
                a.type = Gd.CANVAS;
                return a
            };
            Cb.loadFromBase64 = function(a, b) {
                return null == a || null == b ? oc.withValue(null) : Na.loadImage("data:" + b + ";base64," + a)
            };
            Cb.loadFromBytes = function(a) {
                if (null == a) return oc.withValue(null);
                if (Cb.__isPNG(a)) var b = "image/png";
                else if (Cb.__isJPG(a)) b = "image/jpeg";
                else if (Cb.__isGIF(a)) b = "image/gif";
                else if (Cb.__isWebP(a)) b = "image/webp";
                else return oc.withValue(null);
                return Na.loadImageFromBytes(a, b)
            };
            Cb.loadFromFile = function(a) {
                return null ==
                    a ? oc.withValue(null) : Na.loadImage(a)
            };
            Cb.__isGIF = function(a) {
                if (null == a || 6 > a.length) return !1;
                a = a.getString(0, 6);
                return "GIF87a" != a ? "GIF89a" == a : !0
            };
            Cb.__isJPG = function(a) {
                return null == a || 4 > a.length ? !1 : 255 == a.get(0) && 216 == a.get(1) && 255 == a.get(a.length - 2) ? 217 == a.get(a.length - 1) : !1
            };
            Cb.__isPNG = function(a) {
                return null == a || 8 > a.length ? !1 : 137 == a.get(0) && 80 == a.get(1) && 78 == a.get(2) && 71 == a.get(3) && 13 == a.get(4) && 10 == a.get(5) && 26 == a.get(6) ? 10 == a.get(7) : !1
            };
            Cb.__isWebP = function(a) {
                return null == a || 16 > a.length ? !1 :
                    "RIFF" == a.getString(0, 4) ? "WEBP" == a.getString(8, 4) : !1
            };
            Cb.prototype = {
                buffer: null,
                dirty: null,
                height: null,
                offsetX: null,
                offsetY: null,
                type: null,
                version: null,
                width: null,
                clone: function() {
                    if (null != this.buffer) {
                        this.type == Gd.CANVAS ? Ua.convertToCanvas(this) : Ua.convertToData(this);
                        var a = new Cb(this.buffer.clone(), this.offsetX, this.offsetY, this.width, this.height, null, this.type);
                        a.version = this.version;
                        return a
                    }
                    return new Cb(null, this.offsetX, this.offsetY, this.width, this.height, null, this.type)
                },
                colorTransform: function(a,
                    b) {
                    a = this.__clipRect(a);
                    if (null != this.buffer && null != a) switch (Q.enumIndex(this.type)) {
                        case 0:
                            Ua.colorTransform(this, a, b);
                            break;
                        case 1:
                            Ua.convertToData(this);
                            Jd.colorTransform(this, a, b);
                            break;
                        case 2:
                            a.offset(this.offsetX, this.offsetY), this.buffer.__srcBitmapData.colorTransform(a.__toFlashRectangle(), zd.__toFlashColorTransform(b))
                    }
                },
                copyChannel: function(a, b, c, d, e) {
                    b = this.__clipRect(b);
                    if (null != this.buffer && null != b && !(e == Md.ALPHA && !this.get_transparent() || 0 >= b.width || 0 >= b.height)) switch (b.x + b.width > a.width &&
                        (b.width = a.width - b.x), b.y + b.height > a.height && (b.height = a.height - b.y), Q.enumIndex(this.type)) {
                        case 0:
                            Ua.copyChannel(this, a, b, c, d, e);
                            break;
                        case 1:
                            Ua.convertToData(this);
                            Ua.convertToData(a);
                            Jd.copyChannel(this, a, b, c, d, e);
                            break;
                        case 2:
                            switch (Q.enumIndex(d)) {
                                case 0:
                                    var f = 1;
                                    break;
                                case 1:
                                    f = 2;
                                    break;
                                case 2:
                                    f = 4;
                                    break;
                                case 3:
                                    f = 8
                            }
                            switch (Q.enumIndex(e)) {
                                case 0:
                                    var h = 1;
                                    break;
                                case 1:
                                    h = 2;
                                    break;
                                case 2:
                                    h = 4;
                                    break;
                                case 3:
                                    h = 8
                            }
                            b.offset(a.offsetX, a.offsetY);
                            c.offset(this.offsetX, this.offsetY);
                            this.buffer.__srcBitmapData.copyChannel(a.buffer.get_src(),
                                b.__toFlashRectangle(), c.__toFlashPoint(), f, h)
                    }
                },
                copyPixels: function(a, b, c, d, e, f) {
                    null == f && (f = !1);
                    if (null != this.buffer && null != a && !(0 >= b.width || 0 >= b.height || 0 >= this.width || 0 >= this.height)) switch (b.x + b.width > a.width && (b.width = a.width - b.x), b.y + b.height > a.height && (b.height = a.height - b.y), 0 > b.x && (b.width += b.x, b.x = 0), 0 > b.y && (b.height += b.y, b.y = 0), c.x + b.width > this.width && (b.width = this.width - c.x), c.y + b.height > this.height && (b.height = this.height - c.y), 0 > c.x && (b.width += c.x, b.x -= c.x, c.x = 0), 0 > c.y && (b.height += c.y,
                            b.y -= c.y, c.y = 0), a == this && c.x < b.get_right() && c.y < b.get_bottom() && (a = this.clone()), d == a && (null == e || 0 == e.x && 0 == e.y) && (e = d = null), Q.enumIndex(this.type)) {
                        case 0:
                            null != d ? (Ua.convertToData(this), Ua.convertToData(a), null != d && Ua.convertToData(d), Jd.copyPixels(this, a, b, c, d, e, f)) : (Ua.convertToCanvas(this), Ua.convertToCanvas(a), Ua.copyPixels(this, a, b, c, d, e, f));
                            break;
                        case 1:
                            Ua.convertToData(this);
                            Ua.convertToData(a);
                            null != d && Ua.convertToData(d);
                            Jd.copyPixels(this, a, b, c, d, e, f);
                            break;
                        case 2:
                            b.offset(a.offsetX, a.offsetY),
                                c.offset(this.offsetX, this.offsetY), null != d && null != e && e.offset(d.offsetX, d.offsetY), this.buffer.__srcBitmapData.copyPixels(a.buffer.__srcBitmapData, b.__toFlashRectangle(), c.__toFlashPoint(), null != d ? d.buffer.get_src() : null, null != e ? e.__toFlashPoint() : null, f)
                    }
                },
                fillRect: function(a, b, c) {
                    a = this.__clipRect(a);
                    if (null != this.buffer && null != a) switch (Q.enumIndex(this.type)) {
                        case 0:
                            Ua.fillRect(this, a, b, c);
                            break;
                        case 1:
                            Ua.convertToData(this);
                            if (0 == this.buffer.data.length) break;
                            Jd.fillRect(this, a, b, c);
                            break;
                        case 2:
                            a.offset(this.offsetX,
                                this.offsetY);
                            if (null == c) b = (b & 255) << 24 | (b >>> 24 & 255) << 16 | (b >>> 16 & 255) << 8 | b >>> 8 & 255;
                            else switch (c) {
                                case 1:
                                    break;
                                case 2:
                                    b = (b & 255) << 24 | (b >>> 8 & 255) << 16 | (b >>> 16 & 255) << 8 | b >>> 24 & 255;
                                    break;
                                default:
                                    b = (b & 255) << 24 | (b >>> 24 & 255) << 16 | (b >>> 16 & 255) << 8 | b >>> 8 & 255
                            }
                            this.buffer.__srcBitmapData.fillRect(a.__toFlashRectangle(), b)
                    }
                },
                setPixel32: function(a, b, c, d) {
                    if (!(null == this.buffer || 0 > a || 0 > b || a >= this.width || b >= this.height)) switch (Q.enumIndex(this.type)) {
                        case 0:
                            Ua.setPixel32(this, a, b, c, d);
                            break;
                        case 1:
                            Ua.convertToData(this);
                            Jd.setPixel32(this, a, b, c, d);
                            break;
                        case 2:
                            if (null == d) c = (c & 255) << 24 | (c >>> 24 & 255) << 16 | (c >>> 16 & 255) << 8 | c >>> 8 & 255;
                            else switch (d) {
                                case 1:
                                    break;
                                case 2:
                                    c = (c & 255) << 24 | (c >>> 8 & 255) << 16 | (c >>> 16 & 255) << 8 | c >>> 24 & 255;
                                    break;
                                default:
                                    c = (c & 255) << 24 | (c >>> 24 & 255) << 16 | (c >>> 16 & 255) << 8 | c >>> 8 & 255
                            }
                            this.buffer.__srcBitmapData.setPixel32(a + this.offsetX, b + this.offsetY, c)
                    }
                },
                __clipRect: function(a) {
                    return null == a || 0 > a.x && (a.width -= -a.x, a.x = 0, 0 >= a.x + a.width) || 0 > a.y && (a.height -= -a.y, a.y = 0, 0 >= a.y + a.height) || a.x + a.width >= this.width &&
                        (a.width -= a.x + a.width - this.width, 0 >= a.width) || a.y + a.height >= this.height && (a.height -= a.y + a.height - this.height, 0 >= a.height) ? null : a
                },
                __fromBase64: function(a, b, c) {
                    var d = this,
                        e = new Image;
                    e.addEventListener("load", function(a) {
                        d.buffer = new Ph(null, e.width, e.height);
                        d.buffer.__srcImage = e;
                        d.offsetX = 0;
                        d.offsetY = 0;
                        d.width = d.buffer.width;
                        d.height = d.buffer.height;
                        null != c && c(d)
                    }, !1);
                    e.src = "data:" + b + ";base64," + a
                },
                __fromBytes: function(a, b) {
                    if (Cb.__isPNG(a)) var c = "image/png";
                    else if (Cb.__isJPG(a)) c = "image/jpeg";
                    else if (Cb.__isGIF(a)) c =
                        "image/gif";
                    else return !1;
                    this.__fromBase64(Ug.encode(a), c, b);
                    return !0
                },
                __fromFile: function(a, b, c) {
                    var d = this,
                        e = new Image;
                    Na.__isSameOrigin(a) || (e.crossOrigin = "Anonymous");
                    e.onload = function(a) {
                        d.buffer = new Ph(null, e.width, e.height);
                        d.buffer.__srcImage = e;
                        d.width = e.width;
                        d.height = e.height;
                        null != b && b(d)
                    };
                    e.onerror = function(a) {
                        null != c && c()
                    };
                    e.src = a;
                    return !0
                },
                __fromImageBuffer: function(a) {
                    this.buffer = a;
                    null != a && (-1 == this.width && (this.width = a.width), -1 == this.height && (this.height = a.height))
                },
                get_data: function() {
                    null ==
                        this.buffer.data && 0 < this.buffer.width && 0 < this.buffer.height && Ua.convertToData(this);
                    return this.buffer.data
                },
                get_format: function() {
                    return this.buffer.format
                },
                set_format: function(a) {
                    this.buffer.format != a && 1 == Q.enumIndex(this.type) && Jd.setFormat(this, a);
                    return this.buffer.format = a
                },
                get_premultiplied: function() {
                    return this.buffer.premultiplied
                },
                set_premultiplied: function(a) {
                    if (a && !this.buffer.premultiplied) switch (Q.enumIndex(this.type)) {
                        case 0:
                        case 1:
                            Ua.convertToData(this), Jd.multiplyAlpha(this)
                    } else !a &&
                        this.buffer.premultiplied && 1 == Q.enumIndex(this.type) && (Ua.convertToData(this), Jd.unmultiplyAlpha(this));
                    return a
                },
                get_rect: function() {
                    return new Eg(0, 0, this.width, this.height)
                },
                get_src: function() {
                    null != this.buffer.__srcCanvas || null == this.buffer.data && this.type != Gd.DATA || Ua.convertToCanvas(this);
                    return this.buffer.get_src()
                },
                get_transparent: function() {
                    return null == this.buffer ? !1 : this.buffer.transparent
                },
                set_transparent: function(a) {
                    return null == this.buffer ? !1 : this.buffer.transparent = a
                },
                __class__: Cb
            };
            var Ph = function(a, b, c, d, e) {
                null == d && (d = 32);
                null == c && (c = 0);
                null == b && (b = 0);
                this.data = a;
                this.width = b;
                this.height = c;
                this.bitsPerPixel = d;
                this.format = null == e ? 0 : e;
                this.premultiplied = !1;
                this.transparent = !0
            };
            g["lime.graphics.ImageBuffer"] = Ph;
            Ph.__name__ = ["lime", "graphics", "ImageBuffer"];
            Ph.prototype = {
                bitsPerPixel: null,
                data: null,
                format: null,
                height: null,
                premultiplied: null,
                transparent: null,
                width: null,
                __srcBitmapData: null,
                __srcCanvas: null,
                __srcContext: null,
                __srcImage: null,
                __srcImageData: null,
                clone: function() {
                    var a =
                        new Ph(this.data, this.width, this.height, this.bitsPerPixel);
                    if (null != this.data) {
                        var b = this.data.byteLength;
                        b = null != b ? new Cf(b) : null;
                        a.data = b;
                        b = this.data;
                        b = null != b ? new Cf(b) : null;
                        a.data.set(b)
                    } else null != this.__srcImageData ? (a.__srcCanvas = La.get_document().createElement("canvas"), a.__srcContext = a.__srcCanvas.getContext("2d"), a.__srcCanvas.width = this.__srcImageData.width, a.__srcCanvas.height = this.__srcImageData.height, a.__srcImageData = a.__srcContext.createImageData(this.__srcImageData.width, this.__srcImageData.height),
                        b = new Uint8ClampedArray(this.__srcImageData.data), a.__srcImageData.data.set(b)) : null != this.__srcCanvas ? (a.__srcCanvas = La.get_document().createElement("canvas"), a.__srcContext = a.__srcCanvas.getContext("2d"), a.__srcCanvas.width = this.__srcCanvas.width, a.__srcCanvas.height = this.__srcCanvas.height, a.__srcContext.drawImage(this.__srcCanvas, 0, 0)) : a.__srcImage = this.__srcImage;
                    a.bitsPerPixel = this.bitsPerPixel;
                    a.format = this.format;
                    a.premultiplied = this.premultiplied;
                    a.transparent = this.transparent;
                    return a
                },
                get_src: function() {
                    return null != this.__srcImage ? this.__srcImage : this.__srcCanvas
                },
                set_src: function(a) {
                    E.is(a, Image) ? this.__srcImage = a : E.is(a, HTMLCanvasElement) && (this.__srcCanvas = a, this.__srcContext = this.__srcCanvas.getContext("2d"));
                    return a
                },
                get_stride: function() {
                    return this.width * E["int"](this.bitsPerPixel / 8)
                },
                __class__: Ph
            };
            var Md = g["lime.graphics.ImageChannel"] = {
                __ename__: ["lime", "graphics", "ImageChannel"],
                __constructs__: ["RED", "GREEN", "BLUE", "ALPHA"]
            };
            Md.RED = ["RED", 0];
            Md.RED.toString = l;
            Md.RED.__enum__ =
                Md;
            Md.GREEN = ["GREEN", 1];
            Md.GREEN.toString = l;
            Md.GREEN.__enum__ = Md;
            Md.BLUE = ["BLUE", 2];
            Md.BLUE.toString = l;
            Md.BLUE.__enum__ = Md;
            Md.ALPHA = ["ALPHA", 3];
            Md.ALPHA.toString = l;
            Md.ALPHA.__enum__ = Md;
            var Gd = g["lime.graphics.ImageType"] = {
                __ename__: ["lime", "graphics", "ImageType"],
                __constructs__: ["CANVAS", "DATA", "FLASH", "CUSTOM"]
            };
            Gd.CANVAS = ["CANVAS", 0];
            Gd.CANVAS.toString = l;
            Gd.CANVAS.__enum__ = Gd;
            Gd.DATA = ["DATA", 1];
            Gd.DATA.toString = l;
            Gd.DATA.__enum__ = Gd;
            Gd.FLASH = ["FLASH", 2];
            Gd.FLASH.toString = l;
            Gd.FLASH.__enum__ = Gd;
            Gd.CUSTOM = ["CUSTOM", 3];
            Gd.CUSTOM.toString = l;
            Gd.CUSTOM.__enum__ = Gd;
            var ku = function() {};
            g["lime.graphics.RenderContext"] = ku;
            ku.__name__ = ["lime", "graphics", "RenderContext"];
            ku.prototype = {
                attributes: null,
                canvas2D: null,
                dom: null,
                type: null,
                version: null,
                webgl: null,
                webgl2: null,
                window: null,
                __class__: ku
            };
            var bw = {};
            g["lime.graphics._WebGL2RenderContext.WebGL2RenderContext_Impl_"] = bw;
            bw.__name__ = ["lime", "graphics", "_WebGL2RenderContext", "WebGL2RenderContext_Impl_"];
            bw.uniform2fv = function(a, b, c, d, e) {
                null != d ? a.uniform2fv(b,
                    c, d, e) : a.uniform2fv(b, c)
            };
            var Td = {};
            g["lime.graphics._WebGLRenderContext.WebGLRenderContext_Impl_"] = Td;
            Td.__name__ = ["lime", "graphics", "_WebGLRenderContext", "WebGLRenderContext_Impl_"];
            Td.bufferData = function(a, b, c, d) {
                a.bufferData(b, c, d)
            };
            Td.texImage2D = function(a, b, c, d, e, f, h, k, m, g) {
                null != k ? a.texImage2D(b, c, d, e, f, h, k, m, g) : a.texImage2D(b, c, d, e, f, h)
            };
            Td.uniformMatrix2fv = function(a, b, c, d) {
                a.uniformMatrix2fv(b, c, d)
            };
            Td.uniformMatrix3fv = function(a, b, c, d) {
                a.uniformMatrix3fv(b, c, d)
            };
            Td.uniformMatrix4fv = function(a,
                b, c, d) {
                a.uniformMatrix4fv(b, c, d)
            };
            Td.fromWebGL2RenderContext = function(a) {
                return a
            };
            var cw = function() {};
            g["lime.graphics.cairo.Cairo"] = cw;
            cw.__name__ = ["lime", "graphics", "cairo", "Cairo"];
            cw.prototype = {
                __class__: cw
            };
            var dw = {};
            g["lime.graphics.cairo._CairoSurface.CairoSurface_Impl_"] = dw;
            dw.__name__ = ["lime", "graphics", "cairo", "_CairoSurface", "CairoSurface_Impl_"];
            dw.flush = function(a) {};
            var nk = function() {};
            g["lime.graphics.opengl.GL"] = nk;
            nk.__name__ = ["lime", "graphics", "opengl", "GL"];
            nk.getParameter = function(a) {
                return nk.context.getParameter(a)
            };
            var ew = function() {
                this.STACK_UNDERFLOW = 1284;
                this.STACK_OVERFLOW = 1283;
                this.CONTEXT_FLAG_DEBUG_BIT = 2;
                this.DEBUG_OUTPUT = 37600;
                this.DEBUG_SEVERITY_LOW = 37192;
                this.DEBUG_SEVERITY_MEDIUM = 37191;
                this.DEBUG_SEVERITY_HIGH = 37190;
                this.DEBUG_LOGGED_MESSAGES = 37189;
                this.MAX_DEBUG_LOGGED_MESSAGES = 37188;
                this.MAX_DEBUG_MESSAGE_LENGTH = 37187;
                this.MAX_LABEL_LENGTH = 33512;
                this.SAMPLER = 33510;
                this.QUERY = 33507;
                this.PROGRAM = 33506;
                this.SHADER = 33505;
                this.BUFFER = 33504;
                this.DEBUG_GROUP_STACK_DEPTH = 33389;
                this.MAX_DEBUG_GROUP_STACK_DEPTH =
                    33388;
                this.DEBUG_SEVERITY_NOTIFICATION = 33387;
                this.DEBUG_TYPE_POP_GROUP = 33386;
                this.DEBUG_TYPE_PUSH_GROUP = 33385;
                this.DEBUG_TYPE_MARKER = 33384;
                this.DEBUG_TYPE_OTHER = 33361;
                this.DEBUG_TYPE_PERFORMANCE = 33360;
                this.DEBUG_TYPE_PORTABILITY = 33359;
                this.DEBUG_TYPE_UNDEFINED_BEHAVIOR = 33358;
                this.DEBUG_TYPE_DEPRECATED_BEHAVIOR = 33357;
                this.DEBUG_TYPE_ERROR = 33356;
                this.DEBUG_SOURCE_OTHER = 33355;
                this.DEBUG_SOURCE_APPLICATION = 33354;
                this.DEBUG_SOURCE_THIRD_PARTY = 33353;
                this.DEBUG_SOURCE_SHADER_COMPILER = 33352;
                this.DEBUG_SOURCE_WINDOW_SYSTEM =
                    33351;
                this.DEBUG_SOURCE_API = 33350;
                this.DEBUG_CALLBACK_USER_PARAM = 33349;
                this.DEBUG_CALLBACK_FUNCTION = 33348;
                this.DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = 33347;
                this.DEBUG_OUTPUT_SYNCHRONOUS = 33346
            };
            g["lime.graphics.opengl.ext.KHR_debug"] = ew;
            ew.__name__ = ["lime", "graphics", "opengl", "ext", "KHR_debug"];
            ew.prototype = {
                DEBUG_OUTPUT_SYNCHRONOUS: null,
                DEBUG_NEXT_LOGGED_MESSAGE_LENGTH: null,
                DEBUG_CALLBACK_FUNCTION: null,
                DEBUG_CALLBACK_USER_PARAM: null,
                DEBUG_SOURCE_API: null,
                DEBUG_SOURCE_WINDOW_SYSTEM: null,
                DEBUG_SOURCE_SHADER_COMPILER: null,
                DEBUG_SOURCE_THIRD_PARTY: null,
                DEBUG_SOURCE_APPLICATION: null,
                DEBUG_SOURCE_OTHER: null,
                DEBUG_TYPE_ERROR: null,
                DEBUG_TYPE_DEPRECATED_BEHAVIOR: null,
                DEBUG_TYPE_UNDEFINED_BEHAVIOR: null,
                DEBUG_TYPE_PORTABILITY: null,
                DEBUG_TYPE_PERFORMANCE: null,
                DEBUG_TYPE_OTHER: null,
                DEBUG_TYPE_MARKER: null,
                DEBUG_TYPE_PUSH_GROUP: null,
                DEBUG_TYPE_POP_GROUP: null,
                DEBUG_SEVERITY_NOTIFICATION: null,
                MAX_DEBUG_GROUP_STACK_DEPTH: null,
                DEBUG_GROUP_STACK_DEPTH: null,
                BUFFER: null,
                SHADER: null,
                PROGRAM: null,
                QUERY: null,
                SAMPLER: null,
                MAX_LABEL_LENGTH: null,
                MAX_DEBUG_MESSAGE_LENGTH: null,
                MAX_DEBUG_LOGGED_MESSAGES: null,
                DEBUG_LOGGED_MESSAGES: null,
                DEBUG_SEVERITY_HIGH: null,
                DEBUG_SEVERITY_MEDIUM: null,
                DEBUG_SEVERITY_LOW: null,
                DEBUG_OUTPUT: null,
                CONTEXT_FLAG_DEBUG_BIT: null,
                STACK_OVERFLOW: null,
                STACK_UNDERFLOW: null,
                __class__: ew
            };
            var zd = {};
            g["lime.math._ColorMatrix.ColorMatrix_Impl_"] = zd;
            zd.__name__ = ["lime", "math", "_ColorMatrix", "ColorMatrix_Impl_"];
            zd.getAlphaTable = function(a) {
                if (null == zd.__alphaTable) {
                    var b = new Cf(256);
                    zd.__alphaTable = b
                }
                zd.__alphaTable[0] = 0;
                for (var c =
                        1; 256 > c;) {
                    var d = c++;
                    b = Math.floor(d * a[18] + 255 * a[19]);
                    255 < b && (b = 255);
                    0 > b && (b = 0);
                    zd.__alphaTable[d] = b
                }
                return zd.__alphaTable
            };
            zd.getBlueTable = function(a) {
                if (null == zd.__blueTable) {
                    var b = new Cf(256);
                    zd.__blueTable = b
                }
                for (var c = 0; 256 > c;) {
                    var d = c++;
                    b = Math.floor(d * a[12] + 255 * a[14]);
                    255 < b && (b = 255);
                    0 > b && (b = 0);
                    zd.__blueTable[d] = b
                }
                return zd.__blueTable
            };
            zd.getGreenTable = function(a) {
                if (null == zd.__greenTable) {
                    var b = new Cf(256);
                    zd.__greenTable = b
                }
                for (var c = 0; 256 > c;) {
                    var d = c++;
                    b = Math.floor(d * a[6] + 255 * a[9]);
                    255 < b && (b =
                        255);
                    0 > b && (b = 0);
                    zd.__greenTable[d] = b
                }
                return zd.__greenTable
            };
            zd.getRedTable = function(a) {
                if (null == zd.__redTable) {
                    var b = new Cf(256);
                    zd.__redTable = b
                }
                for (var c = 0; 256 > c;) {
                    var d = c++;
                    b = Math.floor(d * a[0] + 255 * a[4]);
                    255 < b && (b = 255);
                    0 > b && (b = 0);
                    zd.__redTable[d] = b
                }
                return zd.__redTable
            };
            zd.__toFlashColorTransform = function(a) {
                return null
            };
            var Qw = function() {};
            g["lime.math.Matrix3"] = Qw;
            Qw.__name__ = ["lime", "math", "Matrix3"];
            var ic = {};
            g["lime.math._Matrix4.Matrix4_Impl_"] = ic;
            ic.__name__ = ["lime", "math", "_Matrix4", "Matrix4_Impl_"];
            ic._new = function(a) {
                if (null == a || 16 != a.length) a = ic.__identity, a = null != a ? new jg(a) : null;
                return a
            };
            ic.append = function(a, b) {
                var c = a[0],
                    d = a[4],
                    e = a[8],
                    f = a[12],
                    h = a[1],
                    k = a[5],
                    m = a[9],
                    g = a[13],
                    l = a[2],
                    n = a[6],
                    p = a[10],
                    x = a[14],
                    u = a[3],
                    z = a[7],
                    v = a[11],
                    w = a[15],
                    q = ic.get(b, 0),
                    y = ic.get(b, 4),
                    L = ic.get(b, 8),
                    A = ic.get(b, 12),
                    D = ic.get(b, 1),
                    Ka = ic.get(b, 5),
                    t = ic.get(b, 9),
                    E = ic.get(b, 13),
                    B = ic.get(b, 2),
                    F = ic.get(b, 6),
                    pa = ic.get(b, 10),
                    H = ic.get(b, 14),
                    K = ic.get(b, 3),
                    J = ic.get(b, 7),
                    R = ic.get(b, 11);
                b = ic.get(b, 15);
                a[0] = c * q + h * y + l * L + u * A;
                a[1] = c *
                    D + h * Ka + l * t + u * E;
                a[2] = c * B + h * F + l * pa + u * H;
                a[3] = c * K + h * J + l * R + u * b;
                a[4] = d * q + k * y + n * L + z * A;
                a[5] = d * D + k * Ka + n * t + z * E;
                a[6] = d * B + k * F + n * pa + z * H;
                a[7] = d * K + k * J + n * R + z * b;
                a[8] = e * q + m * y + p * L + v * A;
                a[9] = e * D + m * Ka + p * t + v * E;
                a[10] = e * B + m * F + p * pa + v * H;
                a[11] = e * K + m * J + p * R + v * b;
                a[12] = f * q + g * y + x * L + w * A;
                a[13] = f * D + g * Ka + x * t + w * E;
                a[14] = f * B + g * F + x * pa + w * H;
                a[15] = f * K + g * J + x * R + w * b
            };
            ic.createOrtho = function(a, b, c, d, e, f, h) {
                var k = 1 / (c - b),
                    m = 1 / (e - d),
                    g = 1 / (h - f);
                a[0] = 2 * k;
                a[1] = 0;
                a[2] = 0;
                a[3] = 0;
                a[4] = 0;
                a[5] = 2 * m;
                a[6] = 0;
                a[7] = 0;
                a[8] = 0;
                a[9] = 0;
                a[10] = -2 * g;
                a[11] = 0;
                a[12] = -(b + c) *
                    k;
                a[13] = -(d + e) * m;
                a[14] = -(f + h) * g;
                a[15] = 1
            };
            ic.identity = function(a) {
                a[0] = 1;
                a[1] = 0;
                a[2] = 0;
                a[3] = 0;
                a[4] = 0;
                a[5] = 1;
                a[6] = 0;
                a[7] = 0;
                a[8] = 0;
                a[9] = 0;
                a[10] = 1;
                a[11] = 0;
                a[12] = 0;
                a[13] = 0;
                a[14] = 0;
                a[15] = 1
            };
            ic.get = function(a, b) {
                return a[b]
            };
            ic.set = function(a, b, c) {
                return a[b] = c
            };
            var ea = {};
            g["lime.math._RGBA.RGBA_Impl_"] = ea;
            ea.__name__ = ["lime", "math", "_RGBA", "RGBA_Impl_"];
            var Eg = function(a, b, c, d) {
                null == d && (d = 0);
                null == c && (c = 0);
                null == b && (b = 0);
                null == a && (a = 0);
                this.x = a;
                this.y = b;
                this.width = c;
                this.height = d
            };
            g["lime.math.Rectangle"] =
                Eg;
            Eg.__name__ = ["lime", "math", "Rectangle"];
            Eg.prototype = {
                height: null,
                width: null,
                x: null,
                y: null,
                intersection: function(a, b) {
                    null == b && (b = new Eg);
                    var c = this.x < a.x ? a.x : this.x,
                        d = this.get_right() > a.get_right() ? a.get_right() : this.get_right();
                    if (d <= c) return b.setEmpty(), b;
                    var e = this.y < a.y ? a.y : this.y;
                    a = this.get_bottom() > a.get_bottom() ? a.get_bottom() : this.get_bottom();
                    if (a <= e) return b.setEmpty(), b;
                    b.x = c;
                    b.y = e;
                    b.width = d - c;
                    b.height = a - e;
                    return b
                },
                offset: function(a, b) {
                    this.x += a;
                    this.y += b
                },
                setEmpty: function() {
                    this.x =
                        this.y = this.width = this.height = 0
                },
                setTo: function(a, b, c, d) {
                    this.x = a;
                    this.y = b;
                    this.width = c;
                    this.height = d
                },
                __toFlashRectangle: function() {
                    return null
                },
                get_bottom: function() {
                    return this.y + this.height
                },
                get_right: function() {
                    return this.x + this.width
                },
                __class__: Eg
            };
            var ok = function(a, b) {
                null == b && (b = 0);
                null == a && (a = 0);
                this.x = a;
                this.y = b
            };
            g["lime.math.Vector2"] = ok;
            ok.__name__ = ["lime", "math", "Vector2"];
            ok.prototype = {
                x: null,
                y: null,
                offset: function(a, b) {
                    this.x += a;
                    this.y += b
                },
                setTo: function(a, b) {
                    this.x = a;
                    this.y = b
                },
                __toFlashPoint: function() {
                    return null
                },
                __class__: ok
            };
            var iu = function(a, b, c, d) {
                null == d && (d = 0);
                null == c && (c = 0);
                null == b && (b = 0);
                null == a && (a = 0);
                this.w = d;
                this.x = a;
                this.y = b;
                this.z = c
            };
            g["lime.math.Vector4"] = iu;
            iu.__name__ = ["lime", "math", "Vector4"];
            iu.prototype = {
                w: null,
                x: null,
                y: null,
                z: null,
                __class__: iu
            };
            var ed = function() {};
            g["lime.media.AudioBuffer"] = ed;
            ed.__name__ = ["lime", "media", "AudioBuffer"];
            ed.fromBase64 = function(a) {
                if (null == a) return null; - 1 == a.indexOf(",") && (a = "data:" + ed.__getCodec(Ug.decode(a)) + ";base64," + a);
                var b = new ed;
                b.set_src(new Howl({
                    src: [a],
                    html5: !0,
                    preload: !1
                }));
                return b
            };
            ed.fromBytes = function(a) {
                if (null == a) return null;
                var b = new ed;
                b.set_src(new Howl({
                    src: ["data:" + ed.__getCodec(a) + ";base64," + Ug.encode(a)],
                    html5: !0,
                    preload: !1
                }));
                return b
            };
            ed.fromFile = function(a) {
                if (null == a) return null;
                var b = new ed;
                b.__srcHowl = new Howl({
                    src: [a],
                    preload: !1
                });
                return b
            };
            ed.fromFiles = function(a) {
                var b = new ed;
                b.__srcHowl = new Howl({
                    src: a,
                    preload: !1
                });
                return b
            };
            ed.fromVorbisFile = function(a) {
                return null
            };
            ed.loadFromFile = function(a) {
                var b = new Le,
                    c = ed.fromFile(a);
                null != c ? null != c && (c.__srcHowl.on("load", function() {
                    b.complete(c)
                }), c.__srcHowl.on("loaderror", function(a, c) {
                    b.error(c)
                }), c.__srcHowl.load()) : b.error(null);
                return b.future
            };
            ed.loadFromFiles = function(a) {
                var b = new Le,
                    c = ed.fromFiles(a);
                null != c ? (c.__srcHowl.on("load", function() {
                    b.complete(c)
                }), c.__srcHowl.on("loaderror", function() {
                    b.error(null)
                }), c.__srcHowl.load()) : b.error(null);
                return b.future
            };
            ed.__getCodec = function(a) {
                switch (a.getString(0, 4)) {
                    case "OggS":
                        return "audio/ogg";
                    case "RIFF":
                        if ("WAVE" == a.getString(8,
                                4)) return "audio/wav";
                        var b = a.get(2),
                            c = a.get(1);
                        switch (a.get(0)) {
                            case 73:
                                if (68 == c && 51 == b) return "audio/mp3";
                                break;
                            case 255:
                                switch (c) {
                                    case 243:
                                    case 250:
                                    case 251:
                                        return "audio/mp3"
                                }
                        }
                        break;
                    case "fLaC":
                        return "audio/flac";
                    default:
                        switch (b = a.get(2), c = a.get(1), a.get(0)) {
                            case 73:
                                if (68 == c && 51 == b) return "audio/mp3";
                                break;
                            case 255:
                                switch (c) {
                                    case 243:
                                    case 250:
                                    case 251:
                                        return "audio/mp3"
                                }
                        }
                }
                Za.error("Unsupported sound format", {
                    fileName: "AudioBuffer.hx",
                    lineNumber: 362,
                    className: "lime.media.AudioBuffer",
                    methodName: "__getCodec"
                });
                return null
            };
            ed.prototype = {
                __srcHowl: null,
                set_src: function(a) {
                    return this.__srcHowl = a
                },
                __class__: ed
            };
            var yu = function(a) {
                if ("custom" != a) {
                    if (null == a || "web" == a) try {
                        window.AudioContext = window.AudioContext || window.webkitAudioContext, this.web = new window.AudioContext, this.type = "web"
                    } catch (b) {
                        vb.lastException = b
                    }
                    null == this.web && "web" != a && (this.html5 = new xu, this.type = "html5")
                } else this.type = "custom"
            };
            g["lime.media.AudioContext"] = yu;
            yu.__name__ = ["lime", "media", "AudioContext"];
            yu.prototype = {
                html5: null,
                openal: null,
                type: null,
                web: null,
                __class__: yu
            };
            var Ak = function() {};
            g["lime.media.AudioManager"] = Ak;
            Ak.__name__ = ["lime", "media", "AudioManager"];
            Ak.init = function(a) {
                if (null == Ak.context) {
                    if (null == a && (Ak.context = new yu, a = Ak.context, "openal" == a.type)) {
                        var b = a.openal,
                            c = b.openDevice();
                        c = b.createContext(c);
                        b.makeContextCurrent(c);
                        b.processContext(c)
                    }
                    Ak.context = a
                }
            };
            var zu = function(a, b, c, d) {
                null == d && (d = 0);
                null == b && (b = 0);
                this.onComplete = new Ad;
                this.buffer = a;
                this.offset = b;
                this.__backend = new ju(this);
                null != c && 0 != c && this.set_length(c);
                this.set_loops(d);
                null != a && this.init()
            };
            g["lime.media.AudioSource"] = zu;
            zu.__name__ = ["lime", "media", "AudioSource"];
            zu.prototype = {
                onComplete: null,
                buffer: null,
                offset: null,
                __backend: null,
                dispose: function() {
                    this.__backend.dispose()
                },
                init: function() {
                    this.__backend.init()
                },
                play: function() {
                    this.__backend.play()
                },
                stop: function() {
                    this.__backend.stop()
                },
                get_currentTime: function() {
                    return this.__backend.getCurrentTime()
                },
                set_currentTime: function(a) {
                    return this.__backend.setCurrentTime(a)
                },
                get_gain: function() {
                    return this.__backend.getGain()
                },
                set_gain: function(a) {
                    return this.__backend.setGain(a)
                },
                set_length: function(a) {
                    return this.__backend.setLength(a)
                },
                set_loops: function(a) {
                    return this.__backend.setLoops(a)
                },
                get_position: function() {
                    return this.__backend.getPosition()
                },
                set_position: function(a) {
                    return this.__backend.setPosition(a)
                },
                __class__: zu
            };
            var xu = function() {};
            g["lime.media.HTML5AudioContext"] = xu;
            xu.__name__ = ["lime", "media", "HTML5AudioContext"];
            xu.prototype = {
                __class__: xu
            };
            var fw = function() {};
            g["lime.media.OpenALAudioContext"] = fw;
            fw.__name__ = ["lime", "media", "OpenALAudioContext"];
            fw.prototype = {
                createContext: function(a, b) {
                    return sj.createContext(a, b)
                },
                makeContextCurrent: function(a) {
                    return sj.makeContextCurrent(a)
                },
                openDevice: function(a) {
                    return sj.openDevice(a)
                },
                processContext: function(a) {
                    sj.processContext(a)
                },
                __class__: fw
            };
            var sj = function() {};
            g["lime.media.openal.ALC"] = sj;
            sj.__name__ = ["lime", "media", "openal", "ALC"];
            sj.createContext = function(a, b) {
                return null
            };
            sj.makeContextCurrent = function(a) {
                return !1
            };
            sj.openDevice = function(a) {
                return null
            };
            sj.processContext = function(a) {};
            var Au = function() {};
            g["lime.net._IHTTPRequest"] = Au;
            Au.__name__ = ["lime", "net", "_IHTTPRequest"];
            Au.prototype = {
                contentType: null,
                data: null,
                enableResponseHeaders: null,
                followRedirects: null,
                formData: null,
                headers: null,
                method: null,
                responseHeaders: null,
                responseStatus: null,
                timeout: null,
                uri: null,
                userAgent: null,
                withCredentials: null,
                cancel: null,
                __class__: Au
            };
            var ph = function(a) {
                this.uri = a;
                this.contentType = "application/x-www-form-urlencoded";
                this.followRedirects = !0;
                this.enableResponseHeaders = !1;
                this.formData = new fb;
                this.headers = [];
                this.method = "GET";
                this.timeout = 3E4;
                this.withCredentials = !1;
                this.__backend = new Na;
                this.__backend.init(this)
            };
            g["lime.net._HTTPRequest.AbstractHTTPRequest"] = ph;
            ph.__name__ = ["lime", "net", "_HTTPRequest", "AbstractHTTPRequest"];
            ph.__interfaces__ = [Au];
            ph.prototype = {
                contentType: null,
                data: null,
                enableResponseHeaders: null,
                followRedirects: null,
                formData: null,
                headers: null,
                method: null,
                responseData: null,
                responseHeaders: null,
                responseStatus: null,
                timeout: null,
                uri: null,
                userAgent: null,
                withCredentials: null,
                __backend: null,
                cancel: function() {
                    this.__backend.cancel()
                },
                __class__: ph
            };
            var qk = function(a) {
                ph.call(this, a)
            };
            g["lime.net._HTTPRequest_Bytes"] = qk;
            qk.__name__ = ["lime", "net", "_HTTPRequest_Bytes"];
            qk.__super__ = ph;
            qk.prototype = p(ph.prototype, {
                fromBytes: function(a) {
                    return a
                },
                load: function(a) {
                    var b = this;
                    null != a && (this.uri = a);
                    var c = new Le;
                    a = this.__backend.loadData(this.uri);
                    a.onProgress(q(c, c.progress));
                    a.onError(q(c, c.error));
                    a.onComplete(function(a) {
                        b.responseData = b.fromBytes(a);
                        c.complete(b.responseData)
                    });
                    return c.future
                },
                __class__: qk
            });
            var to = function(a) {
                ph.call(this, a)
            };
            g["lime.net._HTTPRequest_String"] = to;
            to.__name__ = ["lime", "net", "_HTTPRequest_String"];
            to.__super__ = ph;
            to.prototype = p(ph.prototype, {
                load: function(a) {
                    var b = this;
                    null != a && (this.uri = a);
                    var c = new Le;
                    a = this.__backend.loadText(this.uri);
                    a.onProgress(q(c, c.progress));
                    a.onError(q(c, c.error));
                    a.onComplete(function(a) {
                        b.responseData = a;
                        c.complete(b.responseData)
                    });
                    return c.future
                },
                __class__: to
            });
            var Vq = function(a, b) {
                null == b && (b = "");
                this.name =
                    a;
                this.value = b
            };
            g["lime.net.HTTPRequestHeader"] = Vq;
            Vq.__name__ = ["lime", "net", "HTTPRequestHeader"];
            Vq.prototype = {
                name: null,
                value: null,
                __class__: Vq
            };
            var cr = function(a) {
                ph.call(this, a)
            };
            g["lime.net._HTTPRequest_lime_utils_Bytes"] = cr;
            cr.__name__ = ["lime", "net", "_HTTPRequest_lime_utils_Bytes"];
            cr.__super__ = qk;
            cr.prototype = p(qk.prototype, {
                fromBytes: function(a) {
                    return yf.fromBytes(a)
                },
                __class__: cr
            });
            var dr = function(a) {
                ph.call(this, a)
            };
            g["lime.net._HTTPRequest_openfl_utils_ByteArray"] = dr;
            dr.__name__ = ["lime",
                "net", "_HTTPRequest_openfl_utils_ByteArray"
            ];
            dr.__super__ = qk;
            dr.prototype = p(qk.prototype, {
                fromBytes: function(a) {
                    return Ve.fromBytes(a)
                },
                __class__: dr
            });
            var Kd = function() {};
            g["lime.system.Clipboard"] = Kd;
            Kd.__name__ = ["lime", "system", "Clipboard"];
            Kd.__update = function() {
                var a = Kd._text;
                Kd._text = null;
                Kd._text != a && Kd.onUpdate.dispatch()
            };
            Kd.get_text = function() {
                Kd.__update();
                return Kd._text
            };
            Kd.set_text = function(a) {
                var b = Kd._text;
                Kd._text = a;
                var c = oa.current.get_window();
                null != c && c.__backend.setClipboard(a);
                Kd._text != b && Kd.onUpdate.dispatch();
                return a
            };
            var Bu = function() {};
            g["lime.system.Display"] = Bu;
            Bu.__name__ = ["lime", "system", "Display"];
            Bu.prototype = {
                bounds: null,
                currentMode: null,
                id: null,
                dpi: null,
                name: null,
                supportedModes: null,
                __class__: Bu
            };
            var Cu = function(a, b, c, d) {
                this.width = a;
                this.height = b;
                this.refreshRate = c;
                this.pixelFormat = d
            };
            g["lime.system.DisplayMode"] = Cu;
            Cu.__name__ = ["lime", "system", "DisplayMode"];
            Cu.prototype = {
                height: null,
                pixelFormat: null,
                refreshRate: null,
                width: null,
                __class__: Cu
            };
            var Ri = g["lime.system.Endian"] = {
                __ename__: ["lime", "system", "Endian"],
                __constructs__: ["LITTLE_ENDIAN", "BIG_ENDIAN"]
            };
            Ri.LITTLE_ENDIAN = ["LITTLE_ENDIAN", 0];
            Ri.LITTLE_ENDIAN.toString = l;
            Ri.LITTLE_ENDIAN.__enum__ = Ri;
            Ri.BIG_ENDIAN = ["BIG_ENDIAN", 1];
            Ri.BIG_ENDIAN.toString = l;
            Ri.BIG_ENDIAN.__enum__ = Ri;
            var yi = function(a, b) {
                this.onUpdate = new mu;
                this.type = a;
                this.id = b
            };
            g["lime.system.Sensor"] = yi;
            yi.__name__ = ["lime", "system", "Sensor"];
            yi.registerSensor = function(a, b) {
                a = new yi(a, b);
                yi.sensors.push(a);
                yi.sensorByID.set(b, a);
                return a
            };
            yi.prototype = {
                id: null,
                onUpdate: null,
                type: null,
                __class__: yi
            };
            var gs = g["lime.system.SensorType"] = {
                __ename__: ["lime", "system", "SensorType"],
                __constructs__: ["ACCELEROMETER"]
            };
            gs.ACCELEROMETER = ["ACCELEROMETER", 0];
            gs.ACCELEROMETER.toString = l;
            gs.ACCELEROMETER.__enum__ = gs;
            var je = function() {};
            g["lime.system.System"] = je;
            je.__name__ = ["lime", "system", "System"];
            je.embed = t.lime.embed = function(a, b, c, d, e) {
                if (null != je.__applicationEntryPoint && je.__applicationEntryPoint.exists(a)) {
                    var f = "string" == typeof b ? La.get_document().getElementById(b) :
                        null == b ? La.get_document().createElement("div") : b;
                    null == f ? La.get_window().console.log("[lime.embed] ERROR: Cannot find target element: " + E.string(b)) : (null == c && (c = 0), null == d && (d = 0), null == e && (e = {}), T.hasField(e, "background") && "string" == typeof e.background && (b = ka.replace(E.string(e.background), "#", ""), -1 < b.indexOf("0x") ? e.background = E.parseInt(b) : e.background = E.parseInt("0x" + b)), e.element = f, e.width = c, e.height = d, je.__applicationEntryPoint.get(a)(e))
                }
            };
            je.exit = function(a) {};
            je.getDisplay = function(a) {
                return 0 ==
                    a ? (a = new Bu, a.id = 0, a.name = "Generic Display", a.dpi = 96 * La.get_window().devicePixelRatio, a.currentMode = new Cu(La.get_window().screen.width, La.get_window().screen.height, 60, 1), a.supportedModes = [a.currentMode], a.bounds = new Eg(0, 0, a.currentMode.width, a.currentMode.height), a) : null
            };
            je.getTimer = function() {
                return E["int"](La.get_window().performance.now())
            };
            je.openURL = function(a, b) {
                null == b && (b = "_blank");
                null != a && La.get_window().open(a, b)
            };
            je.__registerEntryPoint = function(a, b) {
                null == je.__applicationEntryPoint &&
                    (je.__applicationEntryPoint = new fb);
                je.__applicationEntryPoint.set(a, b)
            };
            je.get_endianness = function() {
                if (null == je.__endianness) {
                    var a = new Ng(2),
                        b = null != a ? new Cf(a, 0) : null;
                    a = null != a ? new Uint16Array(a, 0) : null;
                    b[0] = 170;
                    b[1] = 187;
                    je.__endianness = 43707 == a[0] ? Ri.BIG_ENDIAN : Ri.LITTLE_ENDIAN
                }
                return je.__endianness
            };
            var lu = function(a, b) {
                null == b && (b = 1);
                null == a && (a = 0);
                this.onRun = new ul;
                this.onError = new ul;
                this.onComplete = new ul;
                this.doWork = new ul;
                this.minThreads = a;
                this.maxThreads = b;
                this.currentThreads = 0
            };
            g["lime.system.ThreadPool"] =
                lu;
            lu.__name__ = ["lime", "system", "ThreadPool"];
            lu.prototype = {
                currentThreads: null,
                doWork: null,
                maxThreads: null,
                minThreads: null,
                onComplete: null,
                onError: null,
                onRun: null,
                queue: function(a) {
                    this.runWork(a)
                },
                sendComplete: function(a) {
                    this.onComplete.dispatch(a)
                },
                sendError: function(a) {
                    this.onError.dispatch(a)
                },
                runWork: function(a) {
                    this.onRun.dispatch(a);
                    this.doWork.dispatch(a)
                },
                __class__: lu
            };
            var $a = {};
            g["lime.text._UTF8String.UTF8String_Impl_"] = $a;
            $a.__name__ = ["lime", "text", "_UTF8String", "UTF8String_Impl_"];
            $a.charAt = function(a, b) {
                return Fg.uCharAt(a, b)
            };
            $a.charCodeAt = function(a, b) {
                return 0 > b || b >= Fg.uLength(a) ? null : Fg.uCharCodeAt(a, b)
            };
            $a.indexOf = function(a, b, c) {
                null == c && (c = 0);
                return Fg.uIndexOf(a, b, c)
            };
            $a.substr = function(a, b, c) {
                null == c && (c = $a.get_length(a) - b);
                return Vv.sub(a, b, c)
            };
            $a.substring = function(a, b, c) {
                return Fg.uSubstring(a, b, c)
            };
            $a.equals = function(a, b) {
                return null == a || null == b ? a == b : 0 == Fg.uCompare(a, b)
            };
            $a.fromDynamic = function(a) {
                return E.string(a)
            };
            $a.get_length = function(a) {
                return null == a ? 0 :
                    Fg.uLength(a)
            };
            var Rw = function() {};
            g["lime.text.harfbuzz.HBSegmentProperties"] = Rw;
            Rw.__name__ = ["lime", "text", "harfbuzz", "HBSegmentProperties"];
            var Du = function() {
                this.onSave = new so;
                this.onCancel = new Ad
            };
            g["lime.ui.FileDialog"] = Du;
            Du.__name__ = ["lime", "ui", "FileDialog"];
            Du.prototype = {
                onCancel: null,
                onSave: null,
                save: function(a, b, c, d, e) {
                    null == e && (e = "application/octet-stream");
                    if (null == a) return this.onCancel.dispatch(), !1;
                    b = "";
                    Cb.__isPNG(a) ? (e = "image/png", b = ".png") : Cb.__isJPG(a) ? (e = "image/jpeg", b = ".jpg") :
                        Cb.__isGIF(a) ? (e = "image/gif", b = ".gif") : Cb.__isWebP(a) && (e = "image/webp", b = ".webp");
                    c = null != c ? Df.withoutDirectory(c) : "download" + b;
                    a = a.getData();
                    window.saveAs(new Blob([a], {
                        type: e
                    }), c, !0);
                    this.onSave.dispatch(c);
                    return !0
                },
                __class__: Du
            };
            var ee = function(a) {
                this.onDisconnect = new Ad;
                this.onButtonUp = new ar;
                this.onButtonDown = new ar;
                this.onAxisMove = new uu;
                this.id = a;
                this.connected = !0
            };
            g["lime.ui.Gamepad"] = ee;
            ee.__name__ = ["lime", "ui", "Gamepad"];
            ee.__connect = function(a) {
                if (!ee.devices.exists(a)) {
                    var b = new ee(a);
                    ee.devices.set(a, b);
                    ee.onConnect.dispatch(b)
                }
            };
            ee.__disconnect = function(a) {
                var b = ee.devices.get(a);
                null != b && (b.connected = !1);
                ee.devices.remove(a);
                null != b && b.onDisconnect.dispatch()
            };
            ee.prototype = {
                connected: null,
                id: null,
                onAxisMove: null,
                onButtonDown: null,
                onButtonUp: null,
                onDisconnect: null,
                get_guid: function() {
                    return Zd.__getDeviceData()[this.id].id
                },
                get_name: function() {
                    return Zd.__getDeviceData()[this.id].id
                },
                __class__: ee
            };
            var Zd = function(a) {
                this.onTrackballMove = new qu;
                this.onHatMove = new su;
                this.onDisconnect =
                    new Ad;
                this.onButtonUp = new Rj;
                this.onButtonDown = new Rj;
                this.onAxisMove = new ru;
                this.id = a;
                this.connected = !0
            };
            g["lime.ui.Joystick"] = Zd;
            Zd.__name__ = ["lime", "ui", "Joystick"];
            Zd.__connect = function(a) {
                if (!Zd.devices.exists(a)) {
                    var b = new Zd(a);
                    Zd.devices.set(a, b);
                    Zd.onConnect.dispatch(b)
                }
            };
            Zd.__disconnect = function(a) {
                var b = Zd.devices.get(a);
                null != b && (b.connected = !1);
                Zd.devices.remove(a);
                null != b && b.onDisconnect.dispatch()
            };
            Zd.__getDeviceData = function() {
                return navigator.getGamepads ? navigator.getGamepads() :
                    navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : null
            };
            Zd.prototype = {
                connected: null,
                id: null,
                onAxisMove: null,
                onButtonDown: null,
                onButtonUp: null,
                onDisconnect: null,
                onHatMove: null,
                onTrackballMove: null,
                __class__: Zd
            };
            var Jc = {};
            g["lime.ui._KeyModifier.KeyModifier_Impl_"] = Jc;
            Jc.__name__ = ["lime", "ui", "_KeyModifier", "KeyModifier_Impl_"];
            Jc.get_altKey = function(a) {
                return 0 >= (a & 256) ? 0 < (a & 512) : !0
            };
            Jc.get_ctrlKey = function(a) {
                return 0 >= (a & 64) ? 0 < (a & 128) : !0
            };
            Jc.get_metaKey = function(a) {
                return 0 >= (a & 1024) ? 0 <
                    (a & 2048) : !0
            };
            Jc.get_shiftKey = function(a) {
                return 0 >= (a & 1) ? 0 < (a & 2) : !0
            };
            var Sa = g["lime.ui.MouseCursor"] = {
                __ename__: ["lime", "ui", "MouseCursor"],
                __constructs__: "ARROW CROSSHAIR DEFAULT MOVE POINTER RESIZE_NESW RESIZE_NS RESIZE_NWSE RESIZE_WE TEXT WAIT WAIT_ARROW CUSTOM".split(" ")
            };
            Sa.ARROW = ["ARROW", 0];
            Sa.ARROW.toString = l;
            Sa.ARROW.__enum__ = Sa;
            Sa.CROSSHAIR = ["CROSSHAIR", 1];
            Sa.CROSSHAIR.toString = l;
            Sa.CROSSHAIR.__enum__ = Sa;
            Sa.DEFAULT = ["DEFAULT", 2];
            Sa.DEFAULT.toString = l;
            Sa.DEFAULT.__enum__ = Sa;
            Sa.MOVE = ["MOVE",
                3
            ];
            Sa.MOVE.toString = l;
            Sa.MOVE.__enum__ = Sa;
            Sa.POINTER = ["POINTER", 4];
            Sa.POINTER.toString = l;
            Sa.POINTER.__enum__ = Sa;
            Sa.RESIZE_NESW = ["RESIZE_NESW", 5];
            Sa.RESIZE_NESW.toString = l;
            Sa.RESIZE_NESW.__enum__ = Sa;
            Sa.RESIZE_NS = ["RESIZE_NS", 6];
            Sa.RESIZE_NS.toString = l;
            Sa.RESIZE_NS.__enum__ = Sa;
            Sa.RESIZE_NWSE = ["RESIZE_NWSE", 7];
            Sa.RESIZE_NWSE.toString = l;
            Sa.RESIZE_NWSE.__enum__ = Sa;
            Sa.RESIZE_WE = ["RESIZE_WE", 8];
            Sa.RESIZE_WE.toString = l;
            Sa.RESIZE_WE.__enum__ = Sa;
            Sa.TEXT = ["TEXT", 9];
            Sa.TEXT.toString = l;
            Sa.TEXT.__enum__ = Sa;
            Sa.WAIT = ["WAIT", 10];
            Sa.WAIT.toString = l;
            Sa.WAIT.__enum__ = Sa;
            Sa.WAIT_ARROW = ["WAIT_ARROW", 11];
            Sa.WAIT_ARROW.toString = l;
            Sa.WAIT_ARROW.__enum__ = Sa;
            Sa.CUSTOM = ["CUSTOM", 12];
            Sa.CUSTOM.toString = l;
            Sa.CUSTOM.__enum__ = Sa;
            var Ld = g["lime.ui.MouseWheelMode"] = {
                __ename__: ["lime", "ui", "MouseWheelMode"],
                __constructs__: ["PIXELS", "LINES", "PAGES", "UNKNOWN"]
            };
            Ld.PIXELS = ["PIXELS", 0];
            Ld.PIXELS.toString = l;
            Ld.PIXELS.__enum__ = Ld;
            Ld.LINES = ["LINES", 1];
            Ld.LINES.toString = l;
            Ld.LINES.__enum__ = Ld;
            Ld.PAGES = ["PAGES", 2];
            Ld.PAGES.toString = l;
            Ld.PAGES.__enum__ =
                Ld;
            Ld.UNKNOWN = ["UNKNOWN", 3];
            Ld.UNKNOWN.toString = l;
            Ld.UNKNOWN.__enum__ = Ld;
            var Ge = function(a, b, c, d, e, f, h) {
                this.x = a;
                this.y = b;
                this.id = c;
                this.dx = d;
                this.dy = e;
                this.pressure = f;
                this.device = h
            };
            g["lime.ui.Touch"] = Ge;
            Ge.__name__ = ["lime", "ui", "Touch"];
            Ge.prototype = {
                device: null,
                dx: null,
                dy: null,
                id: null,
                pressure: null,
                x: null,
                y: null,
                __class__: Ge
            };
            var uo = function(a, b) {
                this.onTextInput = new so;
                this.onTextEdit = new tu;
                this.onRestore = new Ad;
                this.onResize = new Zq;
                this.onRenderContextRestored = new $q;
                this.onRenderContextLost =
                    new Ad;
                this.onRender = new $q;
                this.onMove = new ro;
                this.onMouseWheel = new pu;
                this.onMouseUp = new nu;
                this.onMouseMoveRelative = new ro;
                this.onMouseMove = new ro;
                this.onMouseDown = new ou;
                this.onMinimize = new Ad;
                this.onLeave = new Ad;
                this.onKeyUp = new br;
                this.onKeyDown = new br;
                this.onFullscreen = new Ad;
                this.onFocusOut = new Ad;
                this.onFocusIn = new Ad;
                this.onExpose = new Ad;
                this.onEnter = new Ad;
                this.onDropFile = new so;
                this.onDeactivate = new Ad;
                this.onClose = new Ad;
                this.onActivate = new Ad;
                this.application = a;
                this.__attributes = null !=
                    b ? b : {};
                T.hasField(this.__attributes, "parameters") && (this.parameters = this.__attributes.parameters);
                this.__height = this.__width = 0;
                this.__fullscreen = !1;
                this.__scale = 1;
                this.__y = this.__x = 0;
                this.__title = "";
                this.id = -1;
                this.__backend = new ib(this)
            };
            g["lime.ui.Window"] = uo;
            uo.__name__ = ["lime", "ui", "Window"];
            uo.prototype = {
                application: null,
                context: null,
                element: null,
                id: null,
                onActivate: null,
                onClose: null,
                onDeactivate: null,
                onDropFile: null,
                onEnter: null,
                onExpose: null,
                onFocusIn: null,
                onFocusOut: null,
                onFullscreen: null,
                onKeyDown: null,
                onKeyUp: null,
                onLeave: null,
                onMinimize: null,
                onMouseDown: null,
                onMouseMove: null,
                onMouseMoveRelative: null,
                onMouseUp: null,
                onMouseWheel: null,
                onMove: null,
                onRender: null,
                onRenderContextLost: null,
                onRenderContextRestored: null,
                onResize: null,
                onRestore: null,
                onTextEdit: null,
                onTextInput: null,
                parameters: null,
                stage: null,
                __attributes: null,
                __backend: null,
                __fullscreen: null,
                __height: null,
                __resizable: null,
                __scale: null,
                __title: null,
                __width: null,
                __x: null,
                __y: null,
                close: function() {
                    this.__backend.close()
                },
                set_cursor: function(a) {
                    return this.__backend.setCursor(a)
                },
                get_display: function() {
                    return this.__backend.getDisplay()
                },
                get_frameRate: function() {
                    return this.__backend.getFrameRate()
                },
                get_fullscreen: function() {
                    return this.__fullscreen
                },
                get_height: function() {
                    return this.__height
                },
                get_scale: function() {
                    return this.__scale
                },
                set_textInputEnabled: function(a) {
                    return this.__backend.setTextInputEnabled(a)
                },
                get_width: function() {
                    return this.__width
                },
                __class__: uo
            };
            var qh = function() {
                this.data = new fb;
                this.paths = []
            };
            g["lime.utils.AssetBundle"] = qh;
            qh.__name__ = ["lime", "utils",
                "AssetBundle"
            ];
            qh.fromBytes = function(a) {
                a = new mo(a);
                return qh.__extractBundle(a)
            };
            qh.loadFromBytes = function(a) {
                return oc.withValue(qh.fromBytes(a))
            };
            qh.loadFromFile = function(a) {
                return yf.loadFromFile(a).then(qh.loadFromBytes)
            };
            qh.__extractBundle = function(a) {
                var b = no.readZip(a);
                a = new qh;
                for (b = b.iterator(); b.hasNext();) {
                    var c = b.next();
                    c.compressed ? a.data.set(c.fileName, yf.decompress(c.data, $f.DEFLATE)) : a.data.set(c.fileName, c.data);
                    a.paths.push(c.fileName)
                }
                return a
            };
            qh.prototype = {
                data: null,
                paths: null,
                __class__: qh
            };
            var Eu = function() {
                this.enabled = !0;
                this.audio = new fb;
                this.font = new fb;
                this.image = new fb;
                this.version = 382681
            };
            g["lime.utils.AssetCache"] = Eu;
            Eu.__name__ = ["lime", "utils", "AssetCache"];
            Eu.prototype = {
                audio: null,
                enabled: null,
                image: null,
                font: null,
                version: null,
                exists: function(a, b) {
                    return ("IMAGE" == b || null == b) && this.image.exists(a) || ("FONT" == b || null == b) && this.font.exists(a) || ("SOUND" == b || "MUSIC" == b || null == b) && this.audio.exists(a) ? !0 : !1
                },
                set: function(a, b, c) {
                    switch (b) {
                        case "FONT":
                            this.font.set(a,
                                c);
                            break;
                        case "IMAGE":
                            if (!E.is(c, Cb)) throw new Z("Cannot cache non-Image asset: " + E.string(c) + " as Image");
                            this.image.set(a, c);
                            break;
                        case "MUSIC":
                        case "SOUND":
                            if (!E.is(c, ed)) throw new Z("Cannot cache non-AudioBuffer asset: " + E.string(c) + " as AudioBuffer");
                            this.audio.set(a, c);
                            break;
                        default:
                            throw new Z(b + " assets are not cachable");
                    }
                },
                clear: function(a) {
                    if (null == a) this.audio = new fb, this.font = new fb, this.image = new fb;
                    else {
                        for (var b = this.audio.keys(); b.hasNext();) {
                            var c = b.next();
                            ka.startsWith(c, a) && this.audio.remove(c)
                        }
                        for (b =
                            this.font.keys(); b.hasNext();) c = b.next(), ka.startsWith(c, a) && this.font.remove(c);
                        for (b = this.image.keys(); b.hasNext();) c = b.next(), ka.startsWith(c, a) && this.image.remove(c)
                    }
                },
                __class__: Eu
            };
            var Oc = function() {
                this.types = new fb;
                this.sizes = new fb;
                this.preload = new fb;
                this.paths = new fb;
                this.pathGroups = new fb;
                this.classTypes = new fb;
                this.cachedText = new fb;
                this.cachedImages = new fb;
                this.cachedFonts = new fb;
                this.cachedBytes = new fb;
                this.cachedAudioBuffers = new fb;
                this.onChange = new Ad;
                this.bytesTotal = this.bytesLoaded =
                    0
            };
            g["lime.utils.AssetLibrary"] = Oc;
            Oc.__name__ = ["lime", "utils", "AssetLibrary"];
            Oc.fromBundle = function(a) {
                if (a.data.exists("library.json")) {
                    var b = gd.fromBytes(a.data.get("library.json"));
                    if (null != b) {
                        if (null == b.libraryType) var c = new Oc;
                        else if (c = Q.resolveClass(b.libraryType), null != c) c = Q.createInstance(c, b.libraryArgs);
                        else return Za.warn("Could not find library type: " + b.libraryType, {
                            fileName: "AssetLibrary.hx",
                            lineNumber: 122,
                            className: "lime.utils.AssetLibrary",
                            methodName: "fromBundle"
                        }), null;
                        c.__fromBundle(a,
                            b);
                        return c
                    }
                } else return b = new Oc, b.__fromBundle(a), b;
                return null
            };
            Oc.fromManifest = function(a) {
                if (null == a) return null;
                if (null == a.libraryType) var b = new Oc;
                else if (b = Q.resolveClass(a.libraryType), null != b) b = Q.createInstance(b, a.libraryArgs);
                else return Za.warn("Could not find library type: " + a.libraryType, {
                    fileName: "AssetLibrary.hx",
                    lineNumber: 160,
                    className: "lime.utils.AssetLibrary",
                    methodName: "fromManifest"
                }), null;
                b.__fromManifest(a);
                return b
            };
            Oc.prototype = {
                onChange: null,
                assetsLoaded: null,
                assetsTotal: null,
                bytesLoaded: null,
                bytesLoadedCache: null,
                bytesTotal: null,
                cachedAudioBuffers: null,
                cachedBytes: null,
                cachedFonts: null,
                cachedImages: null,
                cachedText: null,
                classTypes: null,
                loaded: null,
                pathGroups: null,
                paths: null,
                preload: null,
                promise: null,
                sizes: null,
                types: null,
                exists: function(a, b) {
                    b = null != b ? aa.__cast(b, String) : null;
                    a = this.types.get(a);
                    return null == a || a != b && ("SOUND" != b && "MUSIC" != b || "MUSIC" != a && "SOUND" != a) && "BINARY" != b && null != b && ("BINARY" != a || "TEXT" != b) ? !1 : !0
                },
                getAsset: function(a, b) {
                    switch (b) {
                        case "BINARY":
                            return this.getBytes(a);
                        case "FONT":
                            return this.getFont(a);
                        case "IMAGE":
                            return this.getImage(a);
                        case "MUSIC":
                        case "SOUND":
                            return this.getAudioBuffer(a);
                        case "TEMPLATE":
                            throw new Z("Not sure how to get template: " + a);
                        case "TEXT":
                            return this.getText(a);
                        default:
                            throw new Z("Unknown asset type: " + b);
                    }
                },
                getAudioBuffer: function(a) {
                    return this.cachedAudioBuffers.exists(a) ? this.cachedAudioBuffers.get(a) : this.classTypes.exists(a) ? ed.fromBytes(aa.__cast(Q.createInstance(this.classTypes.get(a), []), ub)) : ed.fromFile(this.paths.get(a))
                },
                getBytes: function(a) {
                    if (this.cachedBytes.exists(a)) return this.cachedBytes.get(a);
                    if (this.cachedText.exists(a)) {
                        var b = yf.ofString(this.cachedText.get(a));
                        this.cachedBytes.set(a, b);
                        return b
                    }
                    return this.classTypes.exists(a) ? aa.__cast(Q.createInstance(this.classTypes.get(a), []), ub) : yf.fromFile(this.paths.get(a))
                },
                getFont: function(a) {
                    return this.cachedFonts.exists(a) ? this.cachedFonts.get(a) : this.classTypes.exists(a) ? aa.__cast(Q.createInstance(this.classTypes.get(a), []), zc) : zc.fromFile(this.paths.get(a))
                },
                getImage: function(a) {
                    return this.cachedImages.exists(a) ? this.cachedImages.get(a) : this.classTypes.exists(a) ? aa.__cast(Q.createInstance(this.classTypes.get(a), []), Cb) : Cb.fromFile(this.paths.get(a))
                },
                getText: function(a) {
                    if (this.cachedText.exists(a)) return this.cachedText.get(a);
                    a = this.getBytes(a);
                    return null == a ? null : a.getString(0, a.length)
                },
                isLocal: function(a, b) {
                    if (this.classTypes.exists(a)) return !0;
                    switch (null != b ? aa.__cast(b, String) : null) {
                        case "FONT":
                            return this.cachedFonts.exists(a);
                        case "IMAGE":
                            return this.cachedImages.exists(a);
                        case "MUSIC":
                        case "SOUND":
                            return this.cachedAudioBuffers.exists(a);
                        default:
                            return this.cachedBytes.exists(a) ? !0 : this.cachedText.exists(a)
                    }
                },
                loadAsset: function(a, b) {
                    switch (b) {
                        case "BINARY":
                            return this.loadBytes(a);
                        case "FONT":
                            return this.loadFont(a);
                        case "IMAGE":
                            return this.loadImage(a);
                        case "MUSIC":
                        case "SOUND":
                            return this.loadAudioBuffer(a);
                        case "TEMPLATE":
                            throw new Z("Not sure how to load template: " + a);
                        case "TEXT":
                            return this.loadText(a);
                        default:
                            throw new Z("Unknown asset type: " + b);
                    }
                },
                load: function() {
                    if (this.loaded) return oc.withValue(this);
                    if (null == this.promise) {
                        this.promise = new Le;
                        this.bytesLoadedCache = new fb;
                        this.assetsLoaded = 0;
                        this.assetsTotal = 1;
                        for (var a = this.preload.keys(); a.hasNext();) {
                            var b = a.next();
                            if (this.preload.get(b)) {
                                Za.verbose("Preloading asset: " + b + " [" + this.types.get(b) + "]", {
                                    fileName: "AssetLibrary.hx",
                                    lineNumber: 405,
                                    className: "lime.utils.AssetLibrary",
                                    methodName: "load"
                                });
                                var c = this.types.get(b);
                                if (null != c) switch (c) {
                                    case "BINARY":
                                        this.assetsTotal++;
                                        c = this.loadBytes(b);
                                        c.onProgress(function(a, b) {
                                            return function(c, d) {
                                                b[0](a[0],
                                                    c, d)
                                            }
                                        }([b], [q(this, this.load_onProgress)]));
                                        c.onError(function(a, b) {
                                            return function(c) {
                                                b[0](a[0], c)
                                            }
                                        }([b], [q(this, this.load_onError)]));
                                        c.onComplete(function(a, b) {
                                            return function(c) {
                                                b[0](a[0], c)
                                            }
                                        }([b], [q(this, this.loadBytes_onComplete)]));
                                        break;
                                    case "FONT":
                                        this.assetsTotal++;
                                        c = this.loadFont(b);
                                        c.onProgress(function(a, b) {
                                            return function(c, d) {
                                                b[0](a[0], c, d)
                                            }
                                        }([b], [q(this, this.load_onProgress)]));
                                        c.onError(function(a, b) {
                                            return function(c) {
                                                b[0](a[0], c)
                                            }
                                        }([b], [q(this, this.load_onError)]));
                                        c.onComplete(function(a,
                                            b) {
                                            return function(c) {
                                                b[0](a[0], c)
                                            }
                                        }([b], [q(this, this.loadFont_onComplete)]));
                                        break;
                                    case "IMAGE":
                                        this.assetsTotal++;
                                        c = this.loadImage(b);
                                        c.onProgress(function(a, b) {
                                            return function(c, d) {
                                                b[0](a[0], c, d)
                                            }
                                        }([b], [q(this, this.load_onProgress)]));
                                        c.onError(function(a, b) {
                                            return function(c) {
                                                b[0](a[0], c)
                                            }
                                        }([b], [q(this, this.load_onError)]));
                                        c.onComplete(function(a, b) {
                                            return function(c) {
                                                b[0](a[0], c)
                                            }
                                        }([b], [q(this, this.loadImage_onComplete)]));
                                        break;
                                    case "MUSIC":
                                    case "SOUND":
                                        this.assetsTotal++;
                                        c = this.loadAudioBuffer(b);
                                        c.onProgress(function(a, b) {
                                            return function(c, d) {
                                                b[0](a[0], c, d)
                                            }
                                        }([b], [q(this, this.load_onProgress)]));
                                        c.onError(function(a, b) {
                                            return function(c) {
                                                b[0](a[0], c)
                                            }
                                        }([b], [q(this, this.loadAudioBuffer_onError)]));
                                        c.onComplete(function(a, b) {
                                            return function(c) {
                                                b[0](a[0], c)
                                            }
                                        }([b], [q(this, this.loadAudioBuffer_onComplete)]));
                                        break;
                                    case "TEXT":
                                        this.assetsTotal++, c = this.loadText(b), c.onProgress(function(a, b) {
                                            return function(c, d) {
                                                b[0](a[0], c, d)
                                            }
                                        }([b], [q(this, this.load_onProgress)])), c.onError(function(a, b) {
                                            return function(c) {
                                                b[0](a[0],
                                                    c)
                                            }
                                        }([b], [q(this, this.load_onError)])), c.onComplete(function(a, b) {
                                            return function(c) {
                                                b[0](a[0], c)
                                            }
                                        }([b], [q(this, this.loadText_onComplete)]))
                                }
                            }
                        }
                        this.__assetLoaded(null)
                    }
                    return this.promise.future
                },
                loadAudioBuffer: function(a) {
                    return this.cachedAudioBuffers.exists(a) ? oc.withValue(this.cachedAudioBuffers.get(a)) : this.classTypes.exists(a) ? oc.withValue(Q.createInstance(this.classTypes.get(a), [])) : this.pathGroups.exists(a) ? ed.loadFromFiles(this.pathGroups.get(a)) : ed.loadFromFile(this.paths.get(a))
                },
                loadBytes: function(a) {
                    return this.cachedBytes.exists(a) ?
                        oc.withValue(this.cachedBytes.get(a)) : this.classTypes.exists(a) ? oc.withValue(Q.createInstance(this.classTypes.get(a), [])) : yf.loadFromFile(this.paths.get(a))
                },
                loadFont: function(a) {
                    return this.cachedFonts.exists(a) ? oc.withValue(this.cachedFonts.get(a)) : this.classTypes.exists(a) ? (a = Q.createInstance(this.classTypes.get(a), []), a.__loadFromName(a.name)) : zc.loadFromName(this.paths.get(a))
                },
                loadImage: function(a) {
                    var b = this;
                    return this.cachedImages.exists(a) ? oc.withValue(this.cachedImages.get(a)) : this.classTypes.exists(a) ?
                        oc.withValue(Q.createInstance(this.classTypes.get(a), [])) : this.cachedBytes.exists(a) ? Cb.loadFromBytes(this.cachedBytes.get(a)).then(function(c) {
                            b.cachedBytes.remove(a);
                            b.cachedImages.set(a, c);
                            return oc.withValue(c)
                        }) : Cb.loadFromFile(this.paths.get(a))
                },
                loadText: function(a) {
                    if (this.cachedText.exists(a)) return oc.withValue(this.cachedText.get(a));
                    if (this.cachedBytes.exists(a) || this.classTypes.exists(a)) {
                        var b = this.getBytes(a);
                        if (null == b) return oc.withValue(null);
                        b = b.getString(0, b.length);
                        this.cachedText.set(a,
                            b);
                        return oc.withValue(b)
                    }
                    return (new to).load(this.paths.get(a))
                },
                unload: function() {},
                __assetLoaded: function(a) {
                    this.assetsLoaded++;
                    null != a && Za.verbose("Loaded asset: " + a + " [" + this.types.get(a) + "] (" + (this.assetsLoaded - 1) + "/" + (this.assetsTotal - 1) + ")", {
                        fileName: "AssetLibrary.hx",
                        lineNumber: 619,
                        className: "lime.utils.AssetLibrary",
                        methodName: "__assetLoaded"
                    });
                    if (null != a) {
                        var b = this.sizes.exists(a) ? this.sizes.get(a) : 0;
                        if (this.bytesLoadedCache.exists(a)) {
                            var c = this.bytesLoadedCache.get(a);
                            c < b && (this.bytesLoaded +=
                                b - c)
                        } else this.bytesLoaded += b;
                        this.bytesLoadedCache.set(a, b)
                    }
                    this.assetsLoaded < this.assetsTotal ? this.promise.progress(this.bytesLoaded, this.bytesTotal) : (this.loaded = !0, this.promise.progress(this.bytesTotal, this.bytesTotal), this.promise.complete(this))
                },
                __cacheBreak: function(a) {
                    return Da.__cacheBreak(a)
                },
                __fromBundle: function(a, b) {
                    if (null != b)
                        for (var c, d, e = 0, f = b.assets; e < f.length;) {
                            var h = f[e];
                            ++e;
                            b = T.hasField(h, "id") ? h.id : h.path;
                            c = a.data.get(h.path);
                            T.hasField(h, "type") ? (d = h.type, "TEXT" == d ? this.cachedText.set(b,
                                null != c ? E.string(c) : null) : this.cachedBytes.set(b, c), this.types.set(b, h.type)) : (this.cachedBytes.set(b, c), this.types.set(b, "BINARY"))
                        } else
                            for (e = 0, b = a.paths; e < b.length;) c = b[e], ++e, this.cachedBytes.set(c, a.data.get(c)), this.types.set(c, "BINARY")
                },
                __fromManifest: function(a) {
                    var b = 2 <= a.version,
                        c = a.rootPath;
                    null == c && (c = "");
                    "" != c && (c += "/");
                    for (var d = 0, e = a.assets; d < e.length;) {
                        var f = e[d];
                        ++d;
                        var h = b && T.hasField(f, "size") ? f.size : 100;
                        var k = T.hasField(f, "id") ? f.id : f.path;
                        T.hasField(f, "path") && this.paths.set(k,
                            this.__cacheBreak(this.__resolvePath(c + E.string(T.field(f, "path")))));
                        if (T.hasField(f, "pathGroup")) {
                            var m = T.field(f, "pathGroup");
                            for (var g = 0, l = m.length; g < l;) {
                                var n = g++;
                                m[n] = this.__cacheBreak(this.__resolvePath(c + m[n]))
                            }
                            this.pathGroups.set(k, m)
                        }
                        this.sizes.set(k, h);
                        this.types.set(k, f.type);
                        T.hasField(f, "preload") && this.preload.set(k, T.field(f, "preload"));
                        T.hasField(f, "className") && (h = Q.resolveClass(T.field(f, "className")), this.classTypes.set(k, h))
                    }
                    b = this.bytesTotal = 0;
                    for (a = a.assets; b < a.length;) k = a[b],
                        ++b, k = T.hasField(k, "id") ? k.id : k.path, this.preload.exists(k) && this.preload.get(k) && this.sizes.exists(k) && (this.bytesTotal += this.sizes.get(k))
                },
                __resolvePath: function(a) {
                    a = ka.replace(a, "\\", "/");
                    var b = a.indexOf(":");
                    ka.startsWith(a, "http") && 0 < b ? (b += 3, a = la.substr(a, 0, b) + ka.replace(la.substr(a, b, null), "//", "/")) : a = ka.replace(a, "//", "/");
                    if (-1 < a.indexOf("./")) {
                        a = a.split("/");
                        b = [];
                        for (var c = 0, d = a.length; c < d;) {
                            var e = c++;
                            ".." == a[e] ? 0 == e || ".." == b[e - 1] ? b.push("..") : b.pop() : "." == a[e] ? 0 == e && b.push(".") : b.push(a[e])
                        }
                        a =
                            b.join("/")
                    }
                    return a
                },
                loadAudioBuffer_onComplete: function(a, b) {
                    this.cachedAudioBuffers.set(a, b);
                    if (this.pathGroups.exists(a))
                        for (var c = this.pathGroups.get(a), d = this.pathGroups.keys(); d.hasNext();) {
                            var e = d.next();
                            if (e != a)
                                for (var f = 0; f < c.length;) {
                                    var h = c[f];
                                    ++f;
                                    if (-1 < this.pathGroups.get(e).indexOf(h)) {
                                        this.cachedAudioBuffers.set(e, b);
                                        break
                                    }
                                }
                        }
                    this.__assetLoaded(a)
                },
                loadAudioBuffer_onError: function(a, b) {
                    null != b && "" != b ? Za.warn('Could not load "' + a + '": ' + E.string(b), {
                        fileName: "AssetLibrary.hx",
                        lineNumber: 865,
                        className: "lime.utils.AssetLibrary",
                        methodName: "loadAudioBuffer_onError"
                    }) : Za.warn('Could not load "' + a + '"', {
                        fileName: "AssetLibrary.hx",
                        lineNumber: 869,
                        className: "lime.utils.AssetLibrary",
                        methodName: "loadAudioBuffer_onError"
                    });
                    this.loadAudioBuffer_onComplete(a, new ed)
                },
                loadBytes_onComplete: function(a, b) {
                    this.cachedBytes.set(a, b);
                    this.__assetLoaded(a)
                },
                loadFont_onComplete: function(a, b) {
                    this.cachedFonts.set(a, b);
                    this.__assetLoaded(a)
                },
                loadImage_onComplete: function(a, b) {
                    this.cachedImages.set(a, b);
                    this.__assetLoaded(a)
                },
                loadText_onComplete: function(a, b) {
                    this.cachedText.set(a, b);
                    this.__assetLoaded(a)
                },
                load_onError: function(a, b) {
                    null != b && "" != b ? this.promise.error('Error loading asset "' + a + '": ' + E.string(b)) : this.promise.error('Error loading asset "' + a + '"')
                },
                load_onProgress: function(a, b, c) {
                    if (0 < b) {
                        var d = this.sizes.get(a);
                        0 < c ? (b /= c, 1 < b && (b = 1), b = Math.floor(b * d)) : b > d && (b = d);
                        this.bytesLoadedCache.exists(a) ? (d = this.bytesLoadedCache.get(a), b != d && (this.bytesLoaded += b - d)) : this.bytesLoaded += b;
                        this.bytesLoadedCache.set(a, b);
                        this.promise.progress(this.bytesLoaded,
                            this.bytesTotal)
                    }
                },
                __class__: Oc
            };
            var gd = function() {
                this.assets = [];
                this.libraryArgs = [];
                this.version = 2
            };
            g["lime.utils.AssetManifest"] = gd;
            gd.__name__ = ["lime", "utils", "AssetManifest"];
            gd.fromBytes = function(a, b) {
                return null != a ? gd.parse(a.getString(0, a.length), b) : null
            };
            gd.fromFile = function(a, b) {
                a = gd.__resolvePath(a);
                b = gd.__resolveRootPath(b, a);
                return null == a ? null : gd.fromBytes(yf.fromFile(a), b)
            };
            gd.loadFromBytes = function(a, b) {
                return oc.withValue(gd.fromBytes(a, b))
            };
            gd.loadFromFile = function(a, b) {
                a = gd.__resolvePath(a);
                b = gd.__resolveRootPath(b, a);
                return null == a ? null : yf.loadFromFile(a).then(function(a) {
                    return oc.withValue(gd.fromBytes(a, b))
                })
            };
            gd.parse = function(a, b) {
                if (null == a || "" == a) return null;
                a = JSON.parse(a);
                var c = new gd;
                T.hasField(a, "name") && (c.name = a.name);
                T.hasField(a, "libraryType") && (c.libraryType = a.libraryType);
                T.hasField(a, "libraryArgs") && (c.libraryArgs = a.libraryArgs);
                if (T.hasField(a, "assets")) {
                    var d = a.assets;
                    T.hasField(a, "version") && 2 >= a.version ? c.assets = tf.run(d) : c.assets = d
                }
                T.hasField(a, "rootPath") && (c.rootPath =
                    a.rootPath);
                null != b && "" != b && (c.rootPath = null == c.rootPath || "" == c.rootPath ? b : b + "/" + c.rootPath);
                return c
            };
            gd.__resolvePath = function(a) {
                if (null == a) return null;
                var b = a.indexOf("?");
                var c = -1 < b ? la.substr(a, 0, b) : a;
                for (c = ka.replace(c, "\\", "/"); ka.endsWith(c, "/");) c = la.substr(c, 0, c.length - 1);
                return ka.endsWith(c, ".bundle") ? -1 < b ? c + "/library.json" + la.substr(a, b, null) : c + "/library.json" : a
            };
            gd.__resolveRootPath = function(a, b) {
                if (null != a) return a;
                a = b.indexOf("?");
                a = -1 < a ? la.substr(b, 0, a) : b;
                for (a = ka.replace(a, "\\",
                        "/"); ka.endsWith(a, "/");) {
                    if ("/" == a) return a;
                    a = la.substr(a, 0, a.length - 1)
                }
                return ka.endsWith(a, ".bundle") ? a : Df.directory(a)
            };
            gd.prototype = {
                assets: null,
                libraryArgs: null,
                libraryType: null,
                name: null,
                rootPath: null,
                version: null,
                __class__: gd
            };
            var Da = function() {};
            g["lime.utils.Assets"] = Da;
            Da.__name__ = ["lime", "utils", "Assets"];
            Da.exists = function(a, b) {
                null == b && (b = "BINARY");
                a = new wl(a);
                return null != a.library ? a.exists(b) : !1
            };
            Da.getAsset = function(a, b, c) {
                if (c && Da.cache.enabled) switch (b) {
                    case "BINARY":
                    case "TEXT":
                        c = !1;
                        break;
                    case "FONT":
                        var d = Da.cache.font.get(a);
                        if (null != d) return d;
                        break;
                    case "IMAGE":
                        d = Da.cache.image.get(a);
                        if (Da.isValidImage(d)) return d;
                        break;
                    case "MUSIC":
                    case "SOUND":
                        d = Da.cache.audio.get(a);
                        if (Da.isValidAudio(d)) return d;
                        break;
                    case "TEMPLATE":
                        throw new Z("Not sure how to get template: " + a);
                    default:
                        return null
                }
                d = new wl(a);
                if (null != d.library)
                    if (d.exists(b)) {
                        if (d.isLocal(b)) return d = d.library.getAsset(d.symbolName, b), c && Da.cache.enabled && Da.cache.set(a, b, d), d;
                        Za.error(b + ' asset "' + a + '" exists, but only asynchronously', {
                            fileName: "Assets.hx",
                            lineNumber: 133,
                            className: "lime.utils.Assets",
                            methodName: "getAsset"
                        })
                    } else Za.error("There is no " + b + ' asset with an ID of "' + a + '"', {
                        fileName: "Assets.hx",
                        lineNumber: 138,
                        className: "lime.utils.Assets",
                        methodName: "getAsset"
                    });
                else Za.error(Da.__libraryNotFound(d.libraryName), {
                    fileName: "Assets.hx",
                    lineNumber: 143,
                    className: "lime.utils.Assets",
                    methodName: "getAsset"
                });
                return null
            };
            Da.getAudioBuffer = function(a, b) {
                null == b && (b = !0);
                return Da.getAsset(a, "SOUND", b)
            };
            Da.getBytes = function(a) {
                return Da.getAsset(a,
                    "BINARY", !1)
            };
            Da.getFont = function(a, b) {
                null == b && (b = !0);
                return Da.getAsset(a, "FONT", b)
            };
            Da.getImage = function(a, b) {
                null == b && (b = !0);
                return Da.getAsset(a, "IMAGE", b)
            };
            Da.getLibrary = function(a) {
                if (null == a || "" == a) a = "default";
                return Da.libraries.get(a)
            };
            Da.getText = function(a) {
                return Da.getAsset(a, "TEXT", !1)
            };
            Da.isLocal = function(a, b, c) {
                null == c && (c = !0);
                if (c && Da.cache.enabled && Da.cache.exists(a, b)) return !0;
                a = new wl(a);
                return null != a.library ? a.isLocal(b) : !1
            };
            Da.isValidAudio = function(a) {
                return null != a
            };
            Da.isValidImage =
                function(a) {
                    return null != a ? null != a.buffer : !1
                };
            Da.loadAsset = function(a, b, c) {
                if (c && Da.cache.enabled) switch (b) {
                    case "BINARY":
                    case "TEXT":
                        c = !1;
                        break;
                    case "FONT":
                        var d = Da.cache.font.get(a);
                        if (null != d) return oc.withValue(d);
                        break;
                    case "IMAGE":
                        d = Da.cache.image.get(a);
                        if (Da.isValidImage(d)) return oc.withValue(d);
                        break;
                    case "MUSIC":
                    case "SOUND":
                        d = Da.cache.audio.get(a);
                        if (Da.isValidAudio(d)) return oc.withValue(d);
                        break;
                    case "TEMPLATE":
                        throw new Z("Not sure how to get template: " + a);
                    default:
                        return null
                }
                d = new wl(a);
                if (null != d.library) {
                    if (d.exists(b)) {
                        d = d.library.loadAsset(d.symbolName, b);
                        if (c && Da.cache.enabled) d.onComplete(function(c) {
                            Da.cache.set(a, b, c)
                        });
                        return d
                    }
                    return oc.withError("There is no " + b + ' asset with an ID of "' + a + '"')
                }
                return oc.withError(Da.__libraryNotFound(d.libraryName))
            };
            Da.loadAudioBuffer = function(a, b) {
                null == b && (b = !0);
                return Da.loadAsset(a, "SOUND", b)
            };
            Da.loadLibrary = function(a) {
                var b = new Le,
                    c = Da.getLibrary(a);
                if (null != c) return c.load();
                c = a;
                var d = null;
                if (Da.bundlePaths.exists(a)) qh.loadFromFile(Da.bundlePaths.get(a)).onComplete(function(c) {
                    null ==
                        c ? b.error('Cannot load bundle for library "' + a + '"') : (c = Oc.fromBundle(c), null == c ? b.error('Cannot open library "' + a + '"') : (Da.libraries.set(a, c), c.onChange.add((Jf = Da.onChange, q(Jf, Jf.dispatch))), c = c.load(), b.completeWith(c)))
                }).onError(function(c) {
                    b.error('There is no asset library with an ID of "' + a + '"')
                });
                else Da.libraryPaths.exists(a) ? (c = Da.libraryPaths.get(a), d = Df.directory(c)) : (ka.endsWith(c, ".bundle") ? (d = c, c += "/library.json") : d = Df.directory(c), c = Da.__cacheBreak(c)), gd.loadFromFile(c, d).onComplete(function(c) {
                    null ==
                        c ? b.error('Cannot parse asset manifest for library "' + a + '"') : (c = Oc.fromManifest(c), null == c ? b.error('Cannot open library "' + a + '"') : (Da.libraries.set(a, c), c.onChange.add((Jf = Da.onChange, q(Jf, Jf.dispatch))), c = c.load(), b.completeWith(c)))
                }).onError(function(c) {
                    b.error('There is no asset library with an ID of "' + a + '"')
                });
                return b.future
            };
            Da.registerLibrary = function(a, b) {
                if (Da.libraries.exists(a)) {
                    if (Da.libraries.get(a) == b) return;
                    Da.unloadLibrary(a)
                }
                null != b && b.onChange.add(Da.library_onChange);
                Da.libraries.set(a,
                    b)
            };
            Da.unloadLibrary = function(a) {
                if (null == a || "" == a) a = "default";
                var b = Da.libraries.get(a);
                null != b && (Da.cache.clear(a + ":"), b.onChange.remove(Da.library_onChange), b.unload());
                Da.libraries.remove(a)
            };
            Da.__cacheBreak = function(a) {
                0 < Da.cache.version && (a = -1 < a.indexOf("?") ? a + ("&" + Da.cache.version) : a + ("?" + Da.cache.version));
                return a
            };
            Da.__libraryNotFound = function(a) {
                if (null == a || "" == a) a = "default";
                return null == oa.current || null == oa.current.get_preloader() || oa.current.get_preloader().complete ? 'There is no asset library named "' +
                    a + '"' : 'There is no asset library named "' + a + '", or it is not yet preloaded'
            };
            Da.library_onChange = function() {
                Da.cache.clear();
                Da.onChange.dispatch()
            };
            var wl = function(a) {
                var b = a.indexOf(":");
                this.libraryName = a.substring(0, b);
                this.symbolName = a.substring(b + 1);
                this.library = Da.getLibrary(this.libraryName)
            };
            g["lime.utils._Assets.LibrarySymbol"] = wl;
            wl.__name__ = ["lime", "utils", "_Assets", "LibrarySymbol"];
            wl.prototype = {
                library: null,
                libraryName: null,
                symbolName: null,
                isLocal: function(a) {
                    return this.library.isLocal(this.symbolName,
                        a)
                },
                exists: function(a) {
                    return this.library.exists(this.symbolName, a)
                },
                __class__: wl
            };
            var Fu = function(a, b) {
                this.bytes = a;
                this.offset = b
            };
            g["lime.utils.BytePointerData"] = Fu;
            Fu.__name__ = ["lime", "utils", "BytePointerData"];
            Fu.prototype = {
                bytes: null,
                offset: null,
                __class__: Fu
            };
            var yf = {};
            g["lime.utils._Bytes.Bytes_Impl_"] = yf;
            yf.__name__ = ["lime", "utils", "_Bytes", "Bytes_Impl_"];
            yf._new = function(a, b) {
                return new ub(b)
            };
            yf.decompress = function(a, b) {
                switch (Q.enumIndex(b)) {
                    case 0:
                        return Yv.decompress(a);
                    case 1:
                        return Zv.decompress(a);
                    case 2:
                        return $v.decompress(a);
                    case 3:
                        return aw.decompress(a)
                }
            };
            yf.fromBytes = function(a) {
                return null == a ? null : yf._new(a.length, a.getData())
            };
            yf.fromFile = function(a) {
                return null
            };
            yf.loadFromFile = function(a) {
                return (new cr).load(a)
            };
            yf.ofString = function(a) {
                a = ub.ofString(a);
                return yf._new(a.length, a.getData())
            };
            var $f = g["lime.utils.CompressionAlgorithm"] = {
                __ename__: ["lime", "utils", "CompressionAlgorithm"],
                __constructs__: ["DEFLATE", "GZIP", "LZMA", "ZLIB"]
            };
            $f.DEFLATE = ["DEFLATE", 0];
            $f.DEFLATE.toString = l;
            $f.DEFLATE.__enum__ =
                $f;
            $f.GZIP = ["GZIP", 1];
            $f.GZIP.toString = l;
            $f.GZIP.__enum__ = $f;
            $f.LZMA = ["LZMA", 2];
            $f.LZMA.toString = l;
            $f.LZMA.__enum__ = $f;
            $f.ZLIB = ["ZLIB", 3];
            $f.ZLIB.toString = l;
            $f.ZLIB.__enum__ = $f;
            var rk = {};
            g["lime.utils._Float32Array.Float32Array_Impl_"] = rk;
            rk.__name__ = ["lime", "utils", "_Float32Array", "Float32Array_Impl_"];
            rk.toArrayBufferView = function(a) {
                return a
            };
            var Za = function() {};
            g["lime.utils.Log"] = Za;
            Za.__name__ = ["lime", "utils", "Log"];
            Za.error = function(a, b) {
                if (1 <= Za.level) {
                    a = "[" + b.className + "] ERROR: " + E.string(a);
                    if (Za.throwErrors) throw new Z(a);
                    console.error(a)
                }
            };
            Za.info = function(a, b) {
                3 <= Za.level && console.info("[" + b.className + "] " + E.string(a))
            };
            Za.println = function(a) {
                console.log(a)
            };
            Za.verbose = function(a, b) {
                5 <= Za.level && Za.println("[" + b.className + "] " + E.string(a))
            };
            Za.warn = function(a, b) {
                2 <= Za.level && console.warn("[" + b.className + "] WARNING: " + E.string(a))
            };
            var js = function() {
                this.bytesTotalCache = new fb;
                this.bytesLoadedCache2 = new fb;
                this.bytesLoadedCache = new Qa;
                this.onProgress = new Zq;
                this.onComplete = new Ad;
                this.bytesTotal = this.bytesLoaded = 0;
                this.libraries = [];
                this.libraryNames = [];
                this.onProgress.add(q(this, this.update))
            };
            g["lime.utils.Preloader"] = js;
            js.__name__ = ["lime", "utils", "Preloader"];
            js.prototype = {
                complete: null,
                onComplete: null,
                onProgress: null,
                bytesLoaded: null,
                bytesLoadedCache: null,
                bytesLoadedCache2: null,
                bytesTotal: null,
                bytesTotalCache: null,
                initLibraryNames: null,
                libraries: null,
                libraryNames: null,
                loadedLibraries: null,
                preloadComplete: null,
                preloadStarted: null,
                simulateProgress: null,
                addLibrary: function(a) {
                    this.libraries.push(a)
                },
                addLibraryName: function(a) {
                    -1 == this.libraryNames.indexOf(a) && this.libraryNames.push(a)
                },
                load: function() {
                    for (var a = this, b = 0, c = this.libraries; b < c.length;) {
                        var d = c[b];
                        ++b;
                        this.bytesTotal += d.bytesTotal
                    }
                    this.loadedLibraries = -1;
                    this.preloadStarted = !1;
                    b = 0;
                    for (c = this.libraries; b < c.length;) d = [c[b]], ++b, Za.verbose("Preloading asset library", {
                        fileName: "Preloader.hx",
                        lineNumber: 132,
                        className: "lime.utils.Preloader",
                        methodName: "load"
                    }), d[0].load().onProgress(function(b) {
                        return function(c, d) {
                            a.bytesLoadedCache.exists(b[0]) ?
                                a.bytesLoaded += c - a.bytesLoadedCache.get(b[0]) : a.bytesLoaded += c;
                            a.bytesLoadedCache.set(b[0], c);
                            a.simulateProgress || a.onProgress.dispatch(a.bytesLoaded, a.bytesTotal)
                        }
                    }(d)).onComplete(function(b) {
                        return function(c) {
                            a.bytesLoadedCache.exists(b[0]) ? a.bytesLoaded += b[0].bytesTotal - a.bytesLoadedCache.get(b[0]) : a.bytesLoaded += b[0].bytesTotal;
                            a.loadedAssetLibrary()
                        }
                    }(d)).onError(function() {
                        return function(a) {
                            Za.error(a, {
                                fileName: "Preloader.hx",
                                lineNumber: 168,
                                className: "lime.utils.Preloader",
                                methodName: "load"
                            })
                        }
                    }());
                    b = 0;
                    for (c = this.libraryNames; b < c.length;) ++b, this.bytesTotal += 200;
                    this.loadedLibraries++;
                    this.preloadStarted = !0;
                    this.updateProgress()
                },
                loadedAssetLibrary: function(a) {
                    this.loadedLibraries++;
                    var b = this.loadedLibraries;
                    this.preloadStarted || ++b;
                    var c = this.libraries.length + this.libraryNames.length;
                    null != a ? Za.verbose("Loaded asset library: " + a + " [" + b + "/" + c + "]", {
                        fileName: "Preloader.hx",
                        lineNumber: 195,
                        className: "lime.utils.Preloader",
                        methodName: "loadedAssetLibrary"
                    }) : Za.verbose("Loaded asset library [" + b +
                        "/" + c + "]", {
                            fileName: "Preloader.hx",
                            lineNumber: 199,
                            className: "lime.utils.Preloader",
                            methodName: "loadedAssetLibrary"
                        });
                    this.updateProgress()
                },
                start: function() {
                    this.complete || this.simulateProgress || !this.preloadComplete || (this.complete = !0, this.onComplete.dispatch())
                },
                update: function(a, b) {},
                updateProgress: function() {
                    var a = this;
                    this.simulateProgress || this.onProgress.dispatch(this.bytesLoaded, this.bytesTotal);
                    if (this.loadedLibraries == this.libraries.length && !this.initLibraryNames) {
                        this.initLibraryNames = !0;
                        for (var b = 0, c = this.libraryNames; b < c.length;) {
                            var d = [c[b]];
                            ++b;
                            Za.verbose("Preloading asset library: " + d[0], {
                                fileName: "Preloader.hx",
                                lineNumber: 236,
                                className: "lime.utils.Preloader",
                                methodName: "updateProgress"
                            });
                            Da.loadLibrary(d[0]).onProgress(function(b) {
                                return function(c, d) {
                                    0 < d && (a.bytesTotalCache.exists(b[0]) || (a.bytesTotalCache.set(b[0], d), a.bytesTotal += d - 200), c > d && (c = d), a.bytesLoadedCache2.exists(b[0]) ? a.bytesLoaded += c - a.bytesLoadedCache2.get(b[0]) : a.bytesLoaded += c, a.bytesLoadedCache2.set(b[0],
                                        c), a.simulateProgress || a.onProgress.dispatch(a.bytesLoaded, a.bytesTotal))
                                }
                            }(d)).onComplete(function(b) {
                                return function(c) {
                                    c = 200;
                                    a.bytesTotalCache.exists(b[0]) && (c = a.bytesTotalCache.get(b[0]));
                                    a.bytesLoadedCache2.exists(b[0]) ? a.bytesLoaded += c - a.bytesLoadedCache2.get(b[0]) : a.bytesLoaded += c;
                                    a.loadedAssetLibrary(b[0])
                                }
                            }(d)).onError(function() {
                                return function(a) {
                                    Za.error(a, {
                                        fileName: "Preloader.hx",
                                        lineNumber: 290,
                                        className: "lime.utils.Preloader",
                                        methodName: "updateProgress"
                                    })
                                }
                            }())
                        }
                    }
                    this.simulateProgress ||
                        this.loadedLibraries != this.libraries.length + this.libraryNames.length || (this.preloadComplete || (this.preloadComplete = !0, Za.verbose("Preload complete", {
                            fileName: "Preloader.hx",
                            lineNumber: 301,
                            className: "lime.utils.Preloader",
                            methodName: "updateProgress"
                        })), this.start())
                },
                __class__: js
            };
            var K = function() {};
            g["nape.Config"] = K;
            K.__name__ = ["nape", "Config"];
            var Qh = function() {
                this.zpp_inner = null
            };
            g["nape.callbacks.Callback"] = Qh;
            Qh.__name__ = ["nape", "callbacks", "Callback"];
            Qh.prototype = {
                zpp_inner: null,
                get_listener: function() {
                    return this.zpp_inner.listener.outer
                },
                toString: function() {
                    return ""
                },
                __class__: Qh
            };
            var er = function() {
                this.zpp_inner = null
            };
            g["nape.callbacks.BodyCallback"] = er;
            er.__name__ = ["nape", "callbacks", "BodyCallback"];
            er.__super__ = Qh;
            er.prototype = p(Qh.prototype, {
                get_body: function() {
                    return this.zpp_inner.body.outer
                },
                toString: function() {
                    var a = "Cb:" + ["WAKE", "SLEEP"][this.zpp_inner.event - 2];
                    a += ":" + this.get_body().toString();
                    return a += " : listener: " + E.string(this.get_listener())
                },
                __class__: er
            });
            var Rh = function() {
                this.zpp_inner = null
            };
            g["nape.callbacks.Listener"] =
                Rh;
            Rh.__name__ = ["nape", "callbacks", "Listener"];
            Rh.prototype = {
                zpp_inner: null,
                toString: function() {
                    var a = "BEGIN END WAKE SLEEP BREAK PRE ONGOING".split(" ")[this.zpp_inner.event];
                    if (0 == this.zpp_inner.type) return "BodyListener{" + a + "::" + E.string(this.zpp_inner.body.outer_zn.get_options()) + "}";
                    if (1 == this.zpp_inner.type) return "ConstraintListener{" + a + "::" + E.string(this.zpp_inner.constraint.outer_zn.get_options()) + "}";
                    var b = this.zpp_inner.interaction;
                    switch (b.itype) {
                        case 1:
                            var c = "COLLISION";
                            break;
                        case 2:
                            c =
                                "SENSOR";
                            break;
                        case 4:
                            c = "FLUID";
                            break;
                        default:
                            c = "ALL"
                    }
                    return (2 == this.zpp_inner.type ? "InteractionListener{" + a + "#" + c + "::" + E.string(b.outer_zni.get_options1()) + ":" + E.string(b.outer_zni.get_options2()) + "}" : "PreListener{" + c + "::" + E.string(b.outer_znp.get_options1()) + ":" + E.string(b.outer_znp.get_options2()) + "}") + " precedence=" + this.zpp_inner.precedence
                },
                __class__: Rh
            };
            var Gu = function() {
                this.zpp_inner_zn = null
            };
            g["nape.callbacks.BodyListener"] = Gu;
            Gu.__name__ = ["nape", "callbacks", "BodyListener"];
            Gu.__super__ =
                Rh;
            Gu.prototype = p(Rh.prototype, {
                zpp_inner_zn: null,
                get_options: function() {
                    return this.zpp_inner_zn.options.outer
                },
                __class__: Gu
            });
            var Sc = function() {};
            g["nape.callbacks.CbEvent"] = Sc;
            Sc.__name__ = ["nape", "callbacks", "CbEvent"];
            Sc.get_BEGIN = function() {
                null == N.CbEvent_BEGIN && (N.internal = !0, N.CbEvent_BEGIN = new Sc, N.internal = !1);
                return N.CbEvent_BEGIN
            };
            Sc.get_ONGOING = function() {
                null == N.CbEvent_ONGOING && (N.internal = !0, N.CbEvent_ONGOING = new Sc, N.internal = !1);
                return N.CbEvent_ONGOING
            };
            Sc.get_END = function() {
                null ==
                    N.CbEvent_END && (N.internal = !0, N.CbEvent_END = new Sc, N.internal = !1);
                return N.CbEvent_END
            };
            Sc.get_WAKE = function() {
                null == N.CbEvent_WAKE && (N.internal = !0, N.CbEvent_WAKE = new Sc, N.internal = !1);
                return N.CbEvent_WAKE
            };
            Sc.get_SLEEP = function() {
                null == N.CbEvent_SLEEP && (N.internal = !0, N.CbEvent_SLEEP = new Sc, N.internal = !1);
                return N.CbEvent_SLEEP
            };
            Sc.get_BREAK = function() {
                null == N.CbEvent_BREAK && (N.internal = !0, N.CbEvent_BREAK = new Sc, N.internal = !1);
                return N.CbEvent_BREAK
            };
            Sc.get_PRE = function() {
                null == N.CbEvent_PRE && (N.internal = !0, N.CbEvent_PRE = new Sc, N.internal = !1);
                return N.CbEvent_PRE
            };
            Sc.prototype = {
                toString: function() {
                    return this == Sc.get_BEGIN() ? "BEGIN" : this == Sc.get_ONGOING() ? "ONGOING" : this == Sc.get_END() ? "END" : this == Sc.get_WAKE() ? "WAKE" : this == Sc.get_SLEEP() ? "SLEEP" : this == Sc.get_BREAK() ? "BREAK" : this == Sc.get_PRE() ? "PRE" : ""
                },
                __class__: Sc
            };
            var $e = function() {
                this.zpp_inner = null;
                this.zpp_inner = new ld;
                this.zpp_inner.outer = this
            };
            g["nape.callbacks.CbType"] = $e;
            $e.__name__ = ["nape", "callbacks", "CbType"];
            $e.get_ANY_BODY = function() {
                return ld.ANY_BODY
            };
            $e.get_ANY_CONSTRAINT = function() {
                return ld.ANY_CONSTRAINT
            };
            $e.get_ANY_SHAPE = function() {
                return ld.ANY_SHAPE
            };
            $e.get_ANY_COMPOUND = function() {
                return ld.ANY_COMPOUND
            };
            $e.prototype = {
                zpp_inner: null,
                get_id: function() {
                    return this.zpp_inner.id
                },
                toString: function() {
                    return this == $e.get_ANY_BODY() ? "ANY_BODY" : this == $e.get_ANY_SHAPE() ? "ANY_SHAPE" : this == $e.get_ANY_COMPOUND() ? "ANY_COMPOUND" : this == $e.get_ANY_CONSTRAINT() ? "ANY_CONSTRAINT" : "CbType#" + this.get_id()
                },
                __class__: $e
            };
            var Sh = function() {
                this.zpp_next = null;
                this.zpp_critical = !1;
                this.zpp_i = 0;
                this.zpp_inner = null
            };
            g["nape.callbacks.CbTypeIterator"] = Sh;
            Sh.__name__ = ["nape", "callbacks", "CbTypeIterator"];
            Sh.get = function(a) {
                if (null == Sh.zpp_pool) {
                    Si.internal = !0;
                    var b = new Sh;
                    Si.internal = !1
                } else b = Sh.zpp_pool, Sh.zpp_pool = b.zpp_next;
                b.zpp_i = 0;
                b.zpp_inner = a;
                b.zpp_critical = !1;
                return b
            };
            Sh.prototype = {
                zpp_inner: null,
                zpp_i: null,
                zpp_critical: null,
                zpp_next: null,
                hasNext: function() {
                    this.zpp_inner.zpp_inner.valmod();
                    var a = this.zpp_inner.get_length();
                    this.zpp_critical = !0;
                    if (this.zpp_i < a) return !0;
                    this.zpp_next = Sh.zpp_pool;
                    Sh.zpp_pool = this;
                    this.zpp_inner = null;
                    return !1
                },
                next: function() {
                    this.zpp_critical = !1;
                    return this.zpp_inner.at(this.zpp_i++)
                },
                __class__: Sh
            };
            var vo = function() {
                this.zpp_inner = null;
                this.zpp_inner = new Si;
                this.zpp_inner.outer = this
            };
            g["nape.callbacks.CbTypeList"] = vo;
            vo.__name__ = ["nape", "callbacks", "CbTypeList"];
            vo.fromArray = function(a) {
                for (var b = new vo, c = 0; c < a.length;) {
                    var d = a[c];
                    ++c;
                    b.push(d)
                }
                return b
            };
            vo.prototype = {
                zpp_inner: null,
                get_length: function() {
                    this.zpp_inner.valmod();
                    this.zpp_inner.zip_length && (this.zpp_inner.zip_length = !1, this.zpp_inner.user_length = this.zpp_inner.inner.length);
                    return this.zpp_inner.user_length
                },
                at: function(a) {
                    this.zpp_inner.valmod();
                    this.zpp_inner.reverse_flag && (a = this.get_length() - 1 - a);
                    if (a < this.zpp_inner.at_index || null == this.zpp_inner.at_ite) this.zpp_inner.at_index = a, this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(a);
                    else
                        for (; this.zpp_inner.at_index != a;) this.zpp_inner.at_index++, this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
                    return this.zpp_inner.at_ite.elem().outer
                },
                push: function(a) {
                    this.zpp_inner.modify_test();
                    this.zpp_inner.valmod();
                    var b = null != this.zpp_inner.adder ? this.zpp_inner.adder(a) : !0;
                    if (b) {
                        if (this.zpp_inner.reverse_flag) this.zpp_inner.inner.add(a.zpp_inner);
                        else {
                            if (null == this.zpp_inner.push_ite) {
                                var c = this.empty() ? null : this.zpp_inner.inner.iterator_at(this.get_length() - 1);
                                this.zpp_inner.push_ite = c
                            }
                            this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite, a.zpp_inner)
                        }
                        this.zpp_inner.invalidate();
                        null != this.zpp_inner.post_adder && this.zpp_inner.post_adder(a)
                    }
                    return b
                },
                empty: function() {
                    return this.zpp_inner.inner.empty()
                },
                iterator: function() {
                    this.zpp_inner.valmod();
                    return Sh.get(this)
                },
                toString: function() {
                    for (var a = "[", b = !0, c = this.iterator(); c.hasNext();) {
                        var d = c.next();
                        b || (a += ",");
                        a += null == d ? "NULL" : d.toString();
                        b = !1
                    }
                    return a + "]"
                },
                __class__: vo
            };
            var fr = function() {
                this.zpp_inner = null
            };
            g["nape.callbacks.ConstraintCallback"] = fr;
            fr.__name__ = ["nape", "callbacks", "ConstraintCallback"];
            fr.__super__ = Qh;
            fr.prototype = p(Qh.prototype, {
                get_constraint: function() {
                    return this.zpp_inner.constraint.outer
                },
                toString: function() {
                    var a = "Cb:" + ["WAKE", "SLEEP", "BREAK"][this.zpp_inner.event - 2];
                    a += ":" + this.get_constraint().toString();
                    return a += " : listener: " + E.string(this.get_listener())
                },
                __class__: fr
            });
            var Hu = function() {
                this.zpp_inner_zn = null
            };
            g["nape.callbacks.ConstraintListener"] = Hu;
            Hu.__name__ = ["nape", "callbacks", "ConstraintListener"];
            Hu.__super__ = Rh;
            Hu.prototype = p(Rh.prototype, {
                zpp_inner_zn: null,
                get_options: function() {
                    return this.zpp_inner_zn.options.outer
                },
                __class__: Hu
            });
            var gr = function() {
                this.zpp_inner =
                    null
            };
            g["nape.callbacks.InteractionCallback"] = gr;
            gr.__name__ = ["nape", "callbacks", "InteractionCallback"];
            gr.__super__ = Qh;
            gr.prototype = p(Qh.prototype, {
                get_int1: function() {
                    return this.zpp_inner.int1.outer_i
                },
                get_int2: function() {
                    return this.zpp_inner.int2.outer_i
                },
                get_arbiters: function() {
                    return this.zpp_inner.wrap_arbiters
                },
                toString: function() {
                    var a = "Cb:" + "BEGIN END     ONGOING".split(" ")[this.zpp_inner.event];
                    a += ":" + this.get_int1().toString() + "/" + this.get_int2().toString();
                    a += " : " + this.get_arbiters().toString();
                    return a += " : listener: " + E.string(this.get_listener())
                },
                __class__: gr
            });
            var Iu = function() {
                this.zpp_inner_zn = null
            };
            g["nape.callbacks.InteractionListener"] = Iu;
            Iu.__name__ = ["nape", "callbacks", "InteractionListener"];
            Iu.__super__ = Rh;
            Iu.prototype = p(Rh.prototype, {
                zpp_inner_zn: null,
                get_options1: function() {
                    return this.zpp_inner_zn.options1.outer
                },
                get_options2: function() {
                    return this.zpp_inner_zn.options2.outer
                },
                __class__: Iu
            });
            var Of = function() {};
            g["nape.callbacks.InteractionType"] = Of;
            Of.__name__ = ["nape", "callbacks",
                "InteractionType"
            ];
            Of.get_COLLISION = function() {
                null == N.InteractionType_COLLISION && (N.internal = !0, N.InteractionType_COLLISION = new Of, N.internal = !1);
                return N.InteractionType_COLLISION
            };
            Of.get_SENSOR = function() {
                null == N.InteractionType_SENSOR && (N.internal = !0, N.InteractionType_SENSOR = new Of, N.internal = !1);
                return N.InteractionType_SENSOR
            };
            Of.get_FLUID = function() {
                null == N.InteractionType_FLUID && (N.internal = !0, N.InteractionType_FLUID = new Of, N.internal = !1);
                return N.InteractionType_FLUID
            };
            Of.get_ANY = function() {
                null ==
                    N.InteractionType_ANY && (N.internal = !0, N.InteractionType_ANY = new Of, N.internal = !1);
                return N.InteractionType_ANY
            };
            Of.prototype = {
                toString: function() {
                    return this == Of.get_COLLISION() ? "COLLISION" : this == Of.get_SENSOR() ? "SENSOR" : this == Of.get_FLUID() ? "FLUID" : this == Of.get_ANY() ? "ANY" : ""
                },
                __class__: Of
            };
            var Th = function() {
                this.zpp_next = null;
                this.zpp_critical = !1;
                this.zpp_i = 0;
                this.zpp_inner = null
            };
            g["nape.callbacks.ListenerIterator"] = Th;
            Th.__name__ = ["nape", "callbacks", "ListenerIterator"];
            Th.get = function(a) {
                if (null ==
                    Th.zpp_pool) {
                    tj.internal = !0;
                    var b = new Th;
                    tj.internal = !1
                } else b = Th.zpp_pool, Th.zpp_pool = b.zpp_next;
                b.zpp_i = 0;
                b.zpp_inner = a;
                b.zpp_critical = !1;
                return b
            };
            Th.prototype = {
                zpp_inner: null,
                zpp_i: null,
                zpp_critical: null,
                zpp_next: null,
                hasNext: function() {
                    this.zpp_inner.zpp_inner.valmod();
                    var a = this.zpp_inner.get_length();
                    this.zpp_critical = !0;
                    if (this.zpp_i < a) return !0;
                    this.zpp_next = Th.zpp_pool;
                    Th.zpp_pool = this;
                    this.zpp_inner = null;
                    return !1
                },
                next: function() {
                    this.zpp_critical = !1;
                    return this.zpp_inner.at(this.zpp_i++)
                },
                __class__: Th
            };
            var Ju = function() {
                this.zpp_inner = null;
                this.zpp_inner = new tj;
                this.zpp_inner.outer = this
            };
            g["nape.callbacks.ListenerList"] = Ju;
            Ju.__name__ = ["nape", "callbacks", "ListenerList"];
            Ju.prototype = {
                zpp_inner: null,
                get_length: function() {
                    this.zpp_inner.valmod();
                    this.zpp_inner.zip_length && (this.zpp_inner.zip_length = !1, this.zpp_inner.user_length = this.zpp_inner.inner.length);
                    return this.zpp_inner.user_length
                },
                at: function(a) {
                    this.zpp_inner.valmod();
                    this.zpp_inner.reverse_flag && (a = this.get_length() - 1 - a);
                    if (a < this.zpp_inner.at_index || null == this.zpp_inner.at_ite) this.zpp_inner.at_index = a, this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(a);
                    else
                        for (; this.zpp_inner.at_index != a;) this.zpp_inner.at_index++, this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
                    return this.zpp_inner.at_ite.elem().outer
                },
                remove: function(a) {
                    this.zpp_inner.modify_test();
                    this.zpp_inner.valmod();
                    var b = !1;
                    for (var c = this.zpp_inner.inner.begin(); null != c;) {
                        if (c.elem() == a.zpp_inner) {
                            b = !0;
                            break
                        }
                        c = c.next
                    }
                    b && (null != this.zpp_inner.subber &&
                        this.zpp_inner.subber(a), this.zpp_inner.dontremove || this.zpp_inner.inner.remove(a.zpp_inner), this.zpp_inner.invalidate());
                    return b
                },
                iterator: function() {
                    this.zpp_inner.valmod();
                    return Th.get(this)
                },
                toString: function() {
                    for (var a = "[", b = !0, c = this.iterator(); c.hasNext();) {
                        var d = c.next();
                        b || (a += ",");
                        a += null == d ? "NULL" : d.toString();
                        b = !1
                    }
                    return a + "]"
                },
                __class__: Ju
            };
            var mg = function() {};
            g["nape.callbacks.ListenerType"] = mg;
            mg.__name__ = ["nape", "callbacks", "ListenerType"];
            mg.get_BODY = function() {
                null == N.ListenerType_BODY &&
                    (N.internal = !0, N.ListenerType_BODY = new mg, N.internal = !1);
                return N.ListenerType_BODY
            };
            mg.get_CONSTRAINT = function() {
                null == N.ListenerType_CONSTRAINT && (N.internal = !0, N.ListenerType_CONSTRAINT = new mg, N.internal = !1);
                return N.ListenerType_CONSTRAINT
            };
            mg.get_INTERACTION = function() {
                null == N.ListenerType_INTERACTION && (N.internal = !0, N.ListenerType_INTERACTION = new mg, N.internal = !1);
                return N.ListenerType_INTERACTION
            };
            mg.get_PRE = function() {
                null == N.ListenerType_PRE && (N.internal = !0, N.ListenerType_PRE = new mg, N.internal = !1);
                return N.ListenerType_PRE
            };
            mg.prototype = {
                toString: function() {
                    return this == mg.get_PRE() ? "PRE" : this == mg.get_BODY() ? "BODY" : this == mg.get_CONSTRAINT() ? "CONSTRAINT" : this == mg.get_INTERACTION() ? "INTERACTION" : ""
                },
                __class__: mg
            };
            var gw = function() {
                this.zpp_inner = null
            };
            g["nape.callbacks.OptionType"] = gw;
            gw.__name__ = ["nape", "callbacks", "OptionType"];
            gw.prototype = {
                zpp_inner: null,
                get_includes: function() {
                    null == this.zpp_inner.wrap_includes && this.zpp_inner.setup_includes();
                    return this.zpp_inner.wrap_includes
                },
                get_excludes: function() {
                    null ==
                        this.zpp_inner.wrap_excludes && this.zpp_inner.setup_excludes();
                    return this.zpp_inner.wrap_excludes
                },
                toString: function() {
                    var a = this.get_includes().toString(),
                        b = this.get_excludes().toString();
                    return "@{" + a + " excluding " + b + "}"
                },
                __class__: gw
            };
            var hr = function() {
                this.zpp_inner = null
            };
            g["nape.callbacks.PreCallback"] = hr;
            hr.__name__ = ["nape", "callbacks", "PreCallback"];
            hr.__super__ = Qh;
            hr.prototype = p(Qh.prototype, {
                get_arbiter: function() {
                    return this.zpp_inner.pre_arbiter.wrapper()
                },
                get_int1: function() {
                    return this.zpp_inner.int1.outer_i
                },
                get_int2: function() {
                    return this.zpp_inner.int2.outer_i
                },
                toString: function() {
                    var a = "Cb:PRE::" + (this.get_int1().toString() + "/" + this.get_int2().toString());
                    a += " : " + this.get_arbiter().toString();
                    return a += " : listnener: " + E.string(this.get_listener())
                },
                __class__: hr
            });
            var fd = function() {};
            g["nape.callbacks.PreFlag"] = fd;
            fd.__name__ = ["nape", "callbacks", "PreFlag"];
            fd.get_ACCEPT = function() {
                null == N.PreFlag_ACCEPT && (N.internal = !0, N.PreFlag_ACCEPT = new fd, N.internal = !1);
                return N.PreFlag_ACCEPT
            };
            fd.get_IGNORE =
                function() {
                    null == N.PreFlag_IGNORE && (N.internal = !0, N.PreFlag_IGNORE = new fd, N.internal = !1);
                    return N.PreFlag_IGNORE
                };
            fd.get_ACCEPT_ONCE = function() {
                null == N.PreFlag_ACCEPT_ONCE && (N.internal = !0, N.PreFlag_ACCEPT_ONCE = new fd, N.internal = !1);
                return N.PreFlag_ACCEPT_ONCE
            };
            fd.get_IGNORE_ONCE = function() {
                null == N.PreFlag_IGNORE_ONCE && (N.internal = !0, N.PreFlag_IGNORE_ONCE = new fd, N.internal = !1);
                return N.PreFlag_IGNORE_ONCE
            };
            fd.prototype = {
                toString: function() {
                    return this == fd.get_ACCEPT() ? "ACCEPT" : this == fd.get_IGNORE() ?
                        "IGNORE" : this == fd.get_ACCEPT_ONCE() ? "ACCEPT_ONCE" : this == fd.get_IGNORE_ONCE() ? "IGNORE_ONCE" : ""
                },
                __class__: fd
            };
            var Ku = function() {
                this.zpp_inner_zn = null
            };
            g["nape.callbacks.PreListener"] = Ku;
            Ku.__name__ = ["nape", "callbacks", "PreListener"];
            Ku.__super__ = Rh;
            Ku.prototype = p(Rh.prototype, {
                zpp_inner_zn: null,
                get_options1: function() {
                    return this.zpp_inner_zn.options1.outer
                },
                get_options2: function() {
                    return this.zpp_inner_zn.options2.outer
                },
                __class__: Ku
            });
            var rh = function() {
                this.zpp_inner.insert_cbtype($e.get_ANY_CONSTRAINT().zpp_inner)
            };
            g["nape.constraint.Constraint"] = rh;
            rh.__name__ = ["nape", "constraint", "Constraint"];
            rh.prototype = {
                zpp_inner: null,
                get_space: function() {
                    return null == this.zpp_inner.space ? null : this.zpp_inner.space.outer
                },
                set_space: function(a) {
                    this.get_space() != a && (null != this.zpp_inner.component && (this.zpp_inner.component.woken = !1), this.zpp_inner.clearcache(), null != this.zpp_inner.space && this.zpp_inner.space.outer.get_constraints().remove(this), null != a ? a.get_constraints().add(this) : this.zpp_inner.space = null);
                    return this.get_space()
                },
                get_active: function() {
                    return this.zpp_inner.active
                },
                set_active: function(a) {
                    this.get_active() != a && (null != this.zpp_inner.component && (this.zpp_inner.component.woken = !1), this.zpp_inner.clearcache(), a ? (this.zpp_inner.active = a, this.zpp_inner.activate(), null != this.zpp_inner.space && (null != this.zpp_inner.component && (this.zpp_inner.component.sleeping = !0), this.zpp_inner.space.wake_constraint(this.zpp_inner, !0))) : (null != this.zpp_inner.space && (this.zpp_inner.wake(), this.zpp_inner.space.live_constraints.remove(this.zpp_inner)),
                        this.zpp_inner.active = a, this.zpp_inner.deactivate()));
                    return this.get_active()
                },
                get_stiff: function() {
                    return this.zpp_inner.stiff
                },
                set_stiff: function(a) {
                    this.get_stiff() != a && (this.zpp_inner.stiff = a, this.zpp_inner.wake());
                    return this.get_stiff()
                },
                get_frequency: function() {
                    return this.zpp_inner.frequency
                },
                set_frequency: function(a) {
                    this.get_frequency() != a && (this.zpp_inner.frequency = a, this.zpp_inner.stiff || this.zpp_inner.wake());
                    return this.get_frequency()
                },
                get_damping: function() {
                    return this.zpp_inner.damping
                },
                set_damping: function(a) {
                    this.get_damping() != a && (this.zpp_inner.damping = a, this.zpp_inner.stiff || this.zpp_inner.wake());
                    return this.get_damping()
                },
                get_maxForce: function() {
                    return this.zpp_inner.maxForce
                },
                set_maxForce: function(a) {
                    this.get_maxForce() != a && (this.zpp_inner.maxForce = a, this.zpp_inner.wake());
                    return this.get_maxForce()
                },
                get_maxError: function() {
                    return this.zpp_inner.maxError
                },
                set_maxError: function(a) {
                    this.get_maxError() != a && (this.zpp_inner.maxError = a, this.zpp_inner.wake());
                    return this.get_maxError()
                },
                toString: function() {
                    return "{Constraint}"
                },
                __class__: rh
            };
            var Gq = function(a, b, c, d, e) {
                null == e && (e = 1);
                this.zpp_inner_zn = null;
                this.zpp_inner = this.zpp_inner_zn = new ir;
                this.zpp_inner.outer = this;
                this.zpp_inner_zn.outer_zn = this;
                rh.call(this);
                this.set_body1(a);
                this.set_body2(b);
                this.set_jointMin(c);
                this.set_jointMax(d);
                this.set_ratio(e)
            };
            g["nape.constraint.AngleJoint"] = Gq;
            Gq.__name__ = ["nape", "constraint", "AngleJoint"];
            Gq.__super__ = rh;
            Gq.prototype = p(rh.prototype, {
                zpp_inner_zn: null,
                get_body1: function() {
                    return null ==
                        this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer
                },
                set_body1: function(a) {
                    this.zpp_inner.immutable_midstep("Constraint::body1");
                    a = null == a ? null : a.zpp_inner;
                    a != this.zpp_inner_zn.b1 && (null != this.zpp_inner_zn.b1 && (null != this.get_space() && this.zpp_inner_zn.b2 != this.zpp_inner_zn.b1 && null != this.zpp_inner_zn.b1 && this.zpp_inner_zn.b1.constraints.remove(this.zpp_inner), this.get_active() && null != this.get_space() && this.zpp_inner_zn.b1.wake()), this.zpp_inner_zn.b1 = a, null != this.get_space() && null != a && this.zpp_inner_zn.b2 !=
                        a && null != a && a.constraints.add(this.zpp_inner), this.get_active() && null != this.get_space() && (this.zpp_inner.wake(), null != a && a.wake()));
                    return this.get_body1()
                },
                get_body2: function() {
                    return null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer
                },
                set_body2: function(a) {
                    this.zpp_inner.immutable_midstep("Constraint::body2");
                    a = null == a ? null : a.zpp_inner;
                    a != this.zpp_inner_zn.b2 && (null != this.zpp_inner_zn.b2 && (null != this.get_space() && this.zpp_inner_zn.b1 != this.zpp_inner_zn.b2 && null != this.zpp_inner_zn.b2 && this.zpp_inner_zn.b2.constraints.remove(this.zpp_inner),
                        this.get_active() && null != this.get_space() && this.zpp_inner_zn.b2.wake()), this.zpp_inner_zn.b2 = a, null != this.get_space() && null != a && this.zpp_inner_zn.b1 != a && null != a && a.constraints.add(this.zpp_inner), this.get_active() && null != this.get_space() && (this.zpp_inner.wake(), null != a && a.wake()));
                    return this.get_body2()
                },
                get_jointMin: function() {
                    return this.zpp_inner_zn.jointMin
                },
                set_jointMin: function(a) {
                    this.zpp_inner.immutable_midstep("AngleJoint::jointMin");
                    this.get_jointMin() != a && (this.zpp_inner_zn.jointMin = a,
                        this.zpp_inner.wake());
                    return this.get_jointMin()
                },
                get_jointMax: function() {
                    return this.zpp_inner_zn.jointMax
                },
                set_jointMax: function(a) {
                    this.zpp_inner.immutable_midstep("AngleJoint::jointMax");
                    this.get_jointMax() != a && (this.zpp_inner_zn.jointMax = a, this.zpp_inner.wake());
                    return this.get_jointMax()
                },
                get_ratio: function() {
                    return this.zpp_inner_zn.ratio
                },
                set_ratio: function(a) {
                    this.zpp_inner.immutable_midstep("AngleJoint::ratio");
                    this.get_ratio() != a && (this.zpp_inner_zn.ratio = a, this.zpp_inner.wake());
                    return this.get_ratio()
                },
                __class__: Gq
            });
            var Uh = function() {
                this.zpp_next = null;
                this.zpp_critical = !1;
                this.zpp_i = 0;
                this.zpp_inner = null
            };
            g["nape.constraint.ConstraintIterator"] = Uh;
            Uh.__name__ = ["nape", "constraint", "ConstraintIterator"];
            Uh.get = function(a) {
                if (null == Uh.zpp_pool) {
                    Ti.internal = !0;
                    var b = new Uh;
                    Ti.internal = !1
                } else b = Uh.zpp_pool, Uh.zpp_pool = b.zpp_next;
                b.zpp_i = 0;
                b.zpp_inner = a;
                b.zpp_critical = !1;
                return b
            };
            Uh.prototype = {
                zpp_inner: null,
                zpp_i: null,
                zpp_critical: null,
                zpp_next: null,
                hasNext: function() {
                    this.zpp_inner.zpp_inner.valmod();
                    var a = this.zpp_inner.get_length();
                    this.zpp_critical = !0;
                    if (this.zpp_i < a) return !0;
                    this.zpp_next = Uh.zpp_pool;
                    Uh.zpp_pool = this;
                    this.zpp_inner = null;
                    return !1
                },
                next: function() {
                    this.zpp_critical = !1;
                    return this.zpp_inner.at(this.zpp_i++)
                },
                __class__: Uh
            };
            var Lu = function() {
                this.zpp_inner = null;
                this.zpp_inner = new Ti;
                this.zpp_inner.outer = this
            };
            g["nape.constraint.ConstraintList"] = Lu;
            Lu.__name__ = ["nape", "constraint", "ConstraintList"];
            Lu.prototype = {
                zpp_inner: null,
                get_length: function() {
                    this.zpp_inner.valmod();
                    this.zpp_inner.zip_length &&
                        (this.zpp_inner.zip_length = !1, this.zpp_inner.user_length = this.zpp_inner.inner.length);
                    return this.zpp_inner.user_length
                },
                at: function(a) {
                    this.zpp_inner.valmod();
                    this.zpp_inner.reverse_flag && (a = this.get_length() - 1 - a);
                    if (a < this.zpp_inner.at_index || null == this.zpp_inner.at_ite) this.zpp_inner.at_index = a, this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(a);
                    else
                        for (; this.zpp_inner.at_index != a;) this.zpp_inner.at_index++, this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
                    return this.zpp_inner.at_ite.elem().outer
                },
                push: function(a) {
                    this.zpp_inner.modify_test();
                    this.zpp_inner.valmod();
                    var b = null != this.zpp_inner.adder ? this.zpp_inner.adder(a) : !0;
                    if (b) {
                        if (this.zpp_inner.reverse_flag) this.zpp_inner.inner.add(a.zpp_inner);
                        else {
                            if (null == this.zpp_inner.push_ite) {
                                var c = this.empty() ? null : this.zpp_inner.inner.iterator_at(this.get_length() - 1);
                                this.zpp_inner.push_ite = c
                            }
                            this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite, a.zpp_inner)
                        }
                        this.zpp_inner.invalidate();
                        null != this.zpp_inner.post_adder && this.zpp_inner.post_adder(a)
                    }
                    return b
                },
                unshift: function(a) {
                    this.zpp_inner.modify_test();
                    this.zpp_inner.valmod();
                    var b = null != this.zpp_inner.adder ? this.zpp_inner.adder(a) : !0;
                    if (b) {
                        if (this.zpp_inner.reverse_flag) {
                            if (null == this.zpp_inner.push_ite) {
                                var c = this.empty() ? null : this.zpp_inner.inner.iterator_at(this.get_length() - 1);
                                this.zpp_inner.push_ite = c
                            }
                            this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite, a.zpp_inner)
                        } else this.zpp_inner.inner.add(a.zpp_inner);
                        this.zpp_inner.invalidate();
                        null != this.zpp_inner.post_adder &&
                            this.zpp_inner.post_adder(a)
                    }
                    return b
                },
                add: function(a) {
                    return this.zpp_inner.reverse_flag ? this.push(a) : this.unshift(a)
                },
                remove: function(a) {
                    this.zpp_inner.modify_test();
                    this.zpp_inner.valmod();
                    var b = !1;
                    for (var c = this.zpp_inner.inner.begin(); null != c;) {
                        if (c.elem() == a.zpp_inner) {
                            b = !0;
                            break
                        }
                        c = c.next
                    }
                    b && (null != this.zpp_inner.subber && this.zpp_inner.subber(a), this.zpp_inner.dontremove || this.zpp_inner.inner.remove(a.zpp_inner), this.zpp_inner.invalidate());
                    return b
                },
                empty: function() {
                    return this.zpp_inner.inner.empty()
                },
                iterator: function() {
                    this.zpp_inner.valmod();
                    return Uh.get(this)
                },
                toString: function() {
                    for (var a = "[", b = !0, c = this.iterator(); c.hasNext();) {
                        var d = c.next();
                        b || (a += ",");
                        a += null == d ? "NULL" : d.toString();
                        b = !1
                    }
                    return a + "]"
                },
                __class__: Lu
            };
            var Fq = function(a, b, c, d, e, f, h) {
                this.zpp_inner_zn = null;
                this.zpp_inner = this.zpp_inner_zn = new jr;
                this.zpp_inner.outer = this;
                this.zpp_inner_zn.outer_zn = this;
                rh.call(this);
                this.set_body1(a);
                this.set_body2(b);
                this.set_anchor1(c);
                this.set_anchor2(d);
                this.set_direction(e);
                this.set_jointMin(f);
                this.set_jointMax(h)
            };
            g["nape.constraint.LineJoint"] = Fq;
            Fq.__name__ = ["nape", "constraint", "LineJoint"];
            Fq.__super__ = rh;
            Fq.prototype = p(rh.prototype, {
                zpp_inner_zn: null,
                get_body1: function() {
                    return null == this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer
                },
                set_body1: function(a) {
                    this.zpp_inner.immutable_midstep("Constraint::body1");
                    a = null == a ? null : a.zpp_inner;
                    a != this.zpp_inner_zn.b1 && (null != this.zpp_inner_zn.b1 && (null != this.get_space() && this.zpp_inner_zn.b2 != this.zpp_inner_zn.b1 && null != this.zpp_inner_zn.b1 &&
                        this.zpp_inner_zn.b1.constraints.remove(this.zpp_inner), this.get_active() && null != this.get_space() && this.zpp_inner_zn.b1.wake()), this.zpp_inner_zn.b1 = a, null != this.get_space() && null != a && this.zpp_inner_zn.b2 != a && null != a && a.constraints.add(this.zpp_inner), this.get_active() && null != this.get_space() && (this.zpp_inner.wake(), null != a && a.wake()));
                    return this.get_body1()
                },
                get_body2: function() {
                    return null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer
                },
                set_body2: function(a) {
                    this.zpp_inner.immutable_midstep("Constraint::body2");
                    a = null == a ? null : a.zpp_inner;
                    a != this.zpp_inner_zn.b2 && (null != this.zpp_inner_zn.b2 && (null != this.get_space() && this.zpp_inner_zn.b1 != this.zpp_inner_zn.b2 && null != this.zpp_inner_zn.b2 && this.zpp_inner_zn.b2.constraints.remove(this.zpp_inner), this.get_active() && null != this.get_space() && this.zpp_inner_zn.b2.wake()), this.zpp_inner_zn.b2 = a, null != this.get_space() && null != a && this.zpp_inner_zn.b1 != a && null != a && a.constraints.add(this.zpp_inner), this.get_active() && null != this.get_space() && (this.zpp_inner.wake(), null !=
                        a && a.wake()));
                    return this.get_body2()
                },
                get_anchor1: function() {
                    null == this.zpp_inner_zn.wrap_a1 && this.zpp_inner_zn.setup_a1();
                    return this.zpp_inner_zn.wrap_a1
                },
                set_anchor1: function(a) {
                    this.get_anchor1().set(a);
                    return this.get_anchor1()
                },
                get_anchor2: function() {
                    null == this.zpp_inner_zn.wrap_a2 && this.zpp_inner_zn.setup_a2();
                    return this.zpp_inner_zn.wrap_a2
                },
                set_anchor2: function(a) {
                    this.get_anchor2().set(a);
                    return this.get_anchor2()
                },
                get_direction: function() {
                    null == this.zpp_inner_zn.wrap_n && this.zpp_inner_zn.setup_n();
                    return this.zpp_inner_zn.wrap_n
                },
                set_direction: function(a) {
                    this.get_direction().set(a);
                    return this.get_direction()
                },
                get_jointMin: function() {
                    return this.zpp_inner_zn.jointMin
                },
                set_jointMin: function(a) {
                    this.zpp_inner.immutable_midstep("LineJoint::jointMin");
                    this.get_jointMin() != a && (this.zpp_inner_zn.jointMin = a, this.zpp_inner.wake());
                    return this.get_jointMin()
                },
                get_jointMax: function() {
                    return this.zpp_inner_zn.jointMax
                },
                set_jointMax: function(a) {
                    this.zpp_inner.immutable_midstep("LineJoint::jointMax");
                    this.get_jointMax() != a && (this.zpp_inner_zn.jointMax = a, this.zpp_inner.wake());
                    return this.get_jointMax()
                },
                __class__: Fq
            });
            var ol = function(a, b, c, d) {
                this.zpp_inner_zn = null;
                this.zpp_inner = this.zpp_inner_zn = new kr;
                this.zpp_inner.outer = this;
                this.zpp_inner_zn.outer_zn = this;
                rh.call(this);
                this.set_body1(a);
                this.set_body2(b);
                this.set_anchor1(c);
                this.set_anchor2(d)
            };
            g["nape.constraint.PivotJoint"] = ol;
            ol.__name__ = ["nape", "constraint", "PivotJoint"];
            ol.__super__ = rh;
            ol.prototype = p(rh.prototype, {
                zpp_inner_zn: null,
                get_body1: function() {
                    return null == this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer
                },
                set_body1: function(a) {
                    this.zpp_inner.immutable_midstep("Constraint::body1");
                    a = null == a ? null : a.zpp_inner;
                    a != this.zpp_inner_zn.b1 && (null != this.zpp_inner_zn.b1 && (null != this.get_space() && this.zpp_inner_zn.b2 != this.zpp_inner_zn.b1 && null != this.zpp_inner_zn.b1 && this.zpp_inner_zn.b1.constraints.remove(this.zpp_inner), this.get_active() && null != this.get_space() && this.zpp_inner_zn.b1.wake()), this.zpp_inner_zn.b1 = a, null != this.get_space() &&
                        null != a && this.zpp_inner_zn.b2 != a && null != a && a.constraints.add(this.zpp_inner), this.get_active() && null != this.get_space() && (this.zpp_inner.wake(), null != a && a.wake()));
                    return this.get_body1()
                },
                get_body2: function() {
                    return null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer
                },
                set_body2: function(a) {
                    this.zpp_inner.immutable_midstep("Constraint::body2");
                    a = null == a ? null : a.zpp_inner;
                    a != this.zpp_inner_zn.b2 && (null != this.zpp_inner_zn.b2 && (null != this.get_space() && this.zpp_inner_zn.b1 != this.zpp_inner_zn.b2 &&
                        null != this.zpp_inner_zn.b2 && this.zpp_inner_zn.b2.constraints.remove(this.zpp_inner), this.get_active() && null != this.get_space() && this.zpp_inner_zn.b2.wake()), this.zpp_inner_zn.b2 = a, null != this.get_space() && null != a && this.zpp_inner_zn.b1 != a && null != a && a.constraints.add(this.zpp_inner), this.get_active() && null != this.get_space() && (this.zpp_inner.wake(), null != a && a.wake()));
                    return this.get_body2()
                },
                get_anchor1: function() {
                    null == this.zpp_inner_zn.wrap_a1 && this.zpp_inner_zn.setup_a1();
                    return this.zpp_inner_zn.wrap_a1
                },
                set_anchor1: function(a) {
                    this.get_anchor1().set(a);
                    return this.get_anchor1()
                },
                get_anchor2: function() {
                    null == this.zpp_inner_zn.wrap_a2 && this.zpp_inner_zn.setup_a2();
                    return this.zpp_inner_zn.wrap_a2
                },
                set_anchor2: function(a) {
                    this.get_anchor2().set(a);
                    return this.get_anchor2()
                },
                __class__: ol
            });
            var sk = function() {
                this.zpp_inner = null
            };
            g["nape.dynamics.Arbiter"] = sk;
            sk.__name__ = ["nape", "dynamics", "Arbiter"];
            sk.prototype = {
                zpp_inner: null,
                isCollisionArbiter: function() {
                    return this.zpp_inner.type == Wb.COL
                },
                isFluidArbiter: function() {
                    return this.zpp_inner.type ==
                        Wb.FLUID
                },
                get_shape1: function() {
                    return this.zpp_inner.ws1.id > this.zpp_inner.ws2.id ? this.zpp_inner.ws2.outer : this.zpp_inner.ws1.outer
                },
                get_shape2: function() {
                    return this.zpp_inner.ws1.id > this.zpp_inner.ws2.id ? this.zpp_inner.ws1.outer : this.zpp_inner.ws2.outer
                },
                get_body1: function() {
                    return this.zpp_inner.ws1.id > this.zpp_inner.ws2.id ? this.zpp_inner.b2.outer : this.zpp_inner.b1.outer
                },
                get_body2: function() {
                    return this.zpp_inner.ws1.id > this.zpp_inner.ws2.id ? this.zpp_inner.b1.outer : this.zpp_inner.b2.outer
                },
                get_state: function() {
                    var a =
                        this.zpp_inner.immState;
                    return 5 == a ? fd.get_ACCEPT() : 1 == a ? fd.get_ACCEPT_ONCE() : 6 == a ? fd.get_IGNORE() : fd.get_IGNORE_ONCE()
                },
                toString: function() {
                    var a = this.isCollisionArbiter() ? "CollisionArbiter" : this.isFluidArbiter() ? "FluidArbiter" : "SensorArbiter";
                    return this.zpp_inner.cleared ? a + "(object-pooled)" : a + "(" + this.get_shape1().toString() + "|" + this.get_shape2().toString() + ")" + (this.isCollisionArbiter() ? "[" + ["SD", "DD"][this.zpp_inner.colarb.stat ? 0 : 1] + "]" : "") + "<-" + this.get_state().toString()
                },
                __class__: sk
            };
            var Vh =
                function() {
                    this.zpp_next = null;
                    this.zpp_critical = !1;
                    this.zpp_i = 0;
                    this.zpp_inner = null
                };
            g["nape.dynamics.ArbiterIterator"] = Vh;
            Vh.__name__ = ["nape", "dynamics", "ArbiterIterator"];
            Vh.get = function(a) {
                if (null == Vh.zpp_pool) {
                    Ui.internal = !0;
                    var b = new Vh;
                    Ui.internal = !1
                } else b = Vh.zpp_pool, Vh.zpp_pool = b.zpp_next;
                b.zpp_i = 0;
                b.zpp_inner = a;
                b.zpp_critical = !1;
                return b
            };
            Vh.prototype = {
                zpp_inner: null,
                zpp_i: null,
                zpp_critical: null,
                zpp_next: null,
                hasNext: function() {
                    this.zpp_inner.zpp_inner.valmod();
                    var a = this.zpp_inner.get_length();
                    this.zpp_critical = !0;
                    if (this.zpp_i < a) return !0;
                    this.zpp_next = Vh.zpp_pool;
                    Vh.zpp_pool = this;
                    this.zpp_inner = null;
                    return !1
                },
                next: function() {
                    this.zpp_critical = !1;
                    return this.zpp_inner.at(this.zpp_i++)
                },
                __class__: Vh
            };
            var Mu = function() {
                this.zpp_inner = null;
                this.zpp_inner = new Ui;
                this.zpp_inner.outer = this
            };
            g["nape.dynamics.ArbiterList"] = Mu;
            Mu.__name__ = ["nape", "dynamics", "ArbiterList"];
            Mu.prototype = {
                zpp_inner: null,
                get_length: function() {
                    return this.zpp_gl()
                },
                zpp_gl: function() {
                    this.zpp_inner.valmod();
                    if (this.zpp_inner.zip_length) {
                        this.zpp_inner.zip_length = !1;
                        this.zpp_inner.user_length = 0;
                        for (var a = this.zpp_inner.inner.begin(); null != a;) a.elem().active && this.zpp_inner.user_length++, a = a.next
                    }
                    return this.zpp_inner.user_length
                },
                zpp_vm: function() {
                    this.zpp_inner.valmod()
                },
                at: function(a) {
                    this.zpp_vm();
                    this.zpp_inner.reverse_flag && (a = this.get_length() - 1 - a);
                    if (a < this.zpp_inner.at_index || null == this.zpp_inner.at_ite)
                        for (this.zpp_inner.at_index = 0, this.zpp_inner.at_ite = this.zpp_inner.inner.begin(); !this.zpp_inner.at_ite.elem().active;) this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
                    for (; this.zpp_inner.at_index != a;)
                        for (this.zpp_inner.at_index++, this.zpp_inner.at_ite = this.zpp_inner.at_ite.next; !this.zpp_inner.at_ite.elem().active;) this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
                    return this.zpp_inner.at_ite.elem().wrapper()
                },
                iterator: function() {
                    this.zpp_vm();
                    return Vh.get(this)
                },
                toString: function() {
                    for (var a = "[", b = !0, c = this.iterator(); c.hasNext();) {
                        var d = c.next();
                        b || (a += ",");
                        a += null == d ? "NULL" : d.toString();
                        b = !1
                    }
                    return a + "]"
                },
                __class__: Mu
            };
            var sh = function() {};
            g["nape.dynamics.ArbiterType"] =
                sh;
            sh.__name__ = ["nape", "dynamics", "ArbiterType"];
            sh.get_COLLISION = function() {
                null == N.ArbiterType_COLLISION && (N.internal = !0, N.ArbiterType_COLLISION = new sh, N.internal = !1);
                return N.ArbiterType_COLLISION
            };
            sh.get_SENSOR = function() {
                null == N.ArbiterType_SENSOR && (N.internal = !0, N.ArbiterType_SENSOR = new sh, N.internal = !1);
                return N.ArbiterType_SENSOR
            };
            sh.get_FLUID = function() {
                null == N.ArbiterType_FLUID && (N.internal = !0, N.ArbiterType_FLUID = new sh, N.internal = !1);
                return N.ArbiterType_FLUID
            };
            sh.prototype = {
                toString: function() {
                    return this ==
                        sh.get_COLLISION() ? "COLLISION" : this == sh.get_SENSOR() ? "SENSOR" : this == sh.get_FLUID() ? "FLUID" : ""
                },
                __class__: sh
            };
            var lr = function() {
                this.zpp_inner = null
            };
            g["nape.dynamics.CollisionArbiter"] = lr;
            lr.__name__ = ["nape", "dynamics", "CollisionArbiter"];
            lr.__super__ = sk;
            lr.prototype = p(sk.prototype, {
                __class__: lr
            });
            var Nu = function() {
                this.zpp_inner = null
            };
            g["nape.dynamics.Contact"] = Nu;
            Nu.__name__ = ["nape", "dynamics", "Contact"];
            Nu.prototype = {
                zpp_inner: null,
                toString: function() {
                    return null == this.zpp_inner.arbiter || this.zpp_inner.arbiter.cleared ?
                        "{object-pooled}" : "{Contact}"
                },
                __class__: Nu
            };
            var Wh = function() {
                this.zpp_next = null;
                this.zpp_critical = !1;
                this.zpp_i = 0;
                this.zpp_inner = null
            };
            g["nape.dynamics.ContactIterator"] = Wh;
            Wh.__name__ = ["nape", "dynamics", "ContactIterator"];
            Wh.get = function(a) {
                if (null == Wh.zpp_pool) {
                    wo.internal = !0;
                    var b = new Wh;
                    wo.internal = !1
                } else b = Wh.zpp_pool, Wh.zpp_pool = b.zpp_next;
                b.zpp_i = 0;
                b.zpp_inner = a;
                b.zpp_critical = !1;
                return b
            };
            Wh.prototype = {
                zpp_inner: null,
                zpp_i: null,
                zpp_critical: null,
                zpp_next: null,
                hasNext: function() {
                    this.zpp_inner.zpp_inner.valmod();
                    var a = this.zpp_inner.get_length();
                    this.zpp_critical = !0;
                    if (this.zpp_i < a) return !0;
                    this.zpp_next = Wh.zpp_pool;
                    Wh.zpp_pool = this;
                    this.zpp_inner = null;
                    return !1
                },
                next: function() {
                    this.zpp_critical = !1;
                    return this.zpp_inner.at(this.zpp_i++)
                },
                __class__: Wh
            };
            var hw = function() {
                this.zpp_inner = null
            };
            g["nape.dynamics.ContactList"] = hw;
            hw.__name__ = ["nape", "dynamics", "ContactList"];
            hw.prototype = {
                zpp_inner: null,
                get_length: function() {
                    this.zpp_inner.valmod();
                    if (this.zpp_inner.zip_length) {
                        this.zpp_inner.zip_length = !1;
                        this.zpp_inner.user_length =
                            0;
                        for (var a = this.zpp_inner.inner.begin(); null != a;) {
                            var b = a.elem();
                            b.active && b.arbiter.active && this.zpp_inner.user_length++;
                            a = a.next
                        }
                    }
                    return this.zpp_inner.user_length
                },
                at: function(a) {
                    this.zpp_inner.valmod();
                    this.zpp_inner.reverse_flag && (a = this.get_length() - 1 - a);
                    if (a < this.zpp_inner.at_index || null == this.zpp_inner.at_ite)
                        for (this.zpp_inner.at_index = 0, this.zpp_inner.at_ite = this.zpp_inner.inner.begin();;) {
                            var b = this.zpp_inner.at_ite.elem();
                            if (b.active && b.arbiter.active) break;
                            this.zpp_inner.at_ite = this.zpp_inner.at_ite.next
                        }
                    for (; this.zpp_inner.at_index !=
                        a;)
                        for (this.zpp_inner.at_index++, this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;;) {
                            b = this.zpp_inner.at_ite.elem();
                            if (b.active && b.arbiter.active) break;
                            this.zpp_inner.at_ite = this.zpp_inner.at_ite.next
                        }
                    return this.zpp_inner.at_ite.elem().wrapper()
                },
                iterator: function() {
                    this.zpp_inner.valmod();
                    return Wh.get(this)
                },
                toString: function() {
                    for (var a = "[", b = !0, c = this.iterator(); c.hasNext();) {
                        var d = c.next();
                        b || (a += ",");
                        a += null == d ? "NULL" : d.toString();
                        b = !1
                    }
                    return a + "]"
                },
                __class__: hw
            };
            var mr = function() {
                this.zpp_inner =
                    null
            };
            g["nape.dynamics.FluidArbiter"] = mr;
            mr.__name__ = ["nape", "dynamics", "FluidArbiter"];
            mr.__super__ = sk;
            mr.prototype = p(sk.prototype, {
                __class__: mr
            });
            var Eq = function(a) {
                null == a && (a = !1);
                this.zpp_inner = null;
                this.zpp_inner = new Ou;
                this.zpp_inner.outer = this;
                this.set_ignore(a)
            };
            g["nape.dynamics.InteractionGroup"] = Eq;
            Eq.__name__ = ["nape", "dynamics", "InteractionGroup"];
            Eq.prototype = {
                zpp_inner: null,
                get_group: function() {
                    return null == this.zpp_inner.group ? null : this.zpp_inner.group.outer
                },
                set_group: function(a) {
                    this.zpp_inner.setGroup(null ==
                        a ? null : a.zpp_inner);
                    return this.get_group()
                },
                get_ignore: function() {
                    return this.zpp_inner.ignore
                },
                set_ignore: function(a) {
                    this.get_ignore() != a && (this.zpp_inner.invalidate(!0), this.zpp_inner.ignore = a);
                    return this.get_ignore()
                },
                toString: function() {
                    var a = "InteractionGroup";
                    this.get_ignore() && (a += ":ignore");
                    return a
                },
                __class__: Eq
            };
            var Xh = function() {
                this.zpp_next = null;
                this.zpp_critical = !1;
                this.zpp_i = 0;
                this.zpp_inner = null
            };
            g["nape.dynamics.InteractionGroupIterator"] = Xh;
            Xh.__name__ = ["nape", "dynamics", "InteractionGroupIterator"];
            Xh.get = function(a) {
                if (null == Xh.zpp_pool) {
                    xo.internal = !0;
                    var b = new Xh;
                    xo.internal = !1
                } else b = Xh.zpp_pool, Xh.zpp_pool = b.zpp_next;
                b.zpp_i = 0;
                b.zpp_inner = a;
                b.zpp_critical = !1;
                return b
            };
            Xh.prototype = {
                zpp_inner: null,
                zpp_i: null,
                zpp_critical: null,
                zpp_next: null,
                hasNext: function() {
                    this.zpp_inner.zpp_inner.valmod();
                    var a = this.zpp_inner.get_length();
                    this.zpp_critical = !0;
                    if (this.zpp_i < a) return !0;
                    this.zpp_next = Xh.zpp_pool;
                    Xh.zpp_pool = this;
                    this.zpp_inner = null;
                    return !1
                },
                next: function() {
                    this.zpp_critical = !1;
                    return this.zpp_inner.at(this.zpp_i++)
                },
                __class__: Xh
            };
            var iw = function() {
                this.zpp_inner = null
            };
            g["nape.dynamics.InteractionGroupList"] = iw;
            iw.__name__ = ["nape", "dynamics", "InteractionGroupList"];
            iw.prototype = {
                zpp_inner: null,
                get_length: function() {
                    this.zpp_inner.valmod();
                    this.zpp_inner.zip_length && (this.zpp_inner.zip_length = !1, this.zpp_inner.user_length = this.zpp_inner.inner.length);
                    return this.zpp_inner.user_length
                },
                at: function(a) {
                    this.zpp_inner.valmod();
                    this.zpp_inner.reverse_flag && (a = this.get_length() - 1 - a);
                    if (a < this.zpp_inner.at_index || null ==
                        this.zpp_inner.at_ite) this.zpp_inner.at_index = a, this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(a);
                    else
                        for (; this.zpp_inner.at_index != a;) this.zpp_inner.at_index++, this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
                    return this.zpp_inner.at_ite.elem().outer
                },
                iterator: function() {
                    this.zpp_inner.valmod();
                    return Xh.get(this)
                },
                toString: function() {
                    for (var a = "[", b = !0, c = this.iterator(); c.hasNext();) {
                        var d = c.next();
                        b || (a += ",");
                        a += null == d ? "NULL" : d.toString();
                        b = !1
                    }
                    return a + "]"
                },
                __class__: iw
            };
            var jw = function() {
                this.zpp_inner =
                    null
            };
            g["nape.geom.AABB"] = jw;
            jw.__name__ = ["nape", "geom", "AABB"];
            jw.prototype = {
                zpp_inner: null,
                toString: function() {
                    this.zpp_inner.validate();
                    return this.zpp_inner.toString()
                },
                __class__: jw
            };
            var kw = function() {
                this.zpp_inner = null
            };
            g["nape.geom.ConvexResult"] = kw;
            kw.__name__ = ["nape", "geom", "ConvexResult"];
            kw.prototype = {
                zpp_inner: null,
                get_toi: function() {
                    return this.zpp_inner.toiDistance
                },
                get_shape: function() {
                    return this.zpp_inner.shape
                },
                toString: function() {
                    return "{ shape: " + E.string(this.get_shape()) + " toi: " +
                        this.get_toi() + " }"
                },
                __class__: kw
            };
            var Yh = function() {
                this.zpp_next = null;
                this.zpp_critical = !1;
                this.zpp_i = 0;
                this.zpp_inner = null
            };
            g["nape.geom.ConvexResultIterator"] = Yh;
            Yh.__name__ = ["nape", "geom", "ConvexResultIterator"];
            Yh.get = function(a) {
                if (null == Yh.zpp_pool) {
                    yo.internal = !0;
                    var b = new Yh;
                    yo.internal = !1
                } else b = Yh.zpp_pool, Yh.zpp_pool = b.zpp_next;
                b.zpp_i = 0;
                b.zpp_inner = a;
                b.zpp_critical = !1;
                return b
            };
            Yh.prototype = {
                zpp_inner: null,
                zpp_i: null,
                zpp_critical: null,
                zpp_next: null,
                hasNext: function() {
                    this.zpp_inner.zpp_inner.valmod();
                    var a = this.zpp_inner.get_length();
                    this.zpp_critical = !0;
                    if (this.zpp_i < a) return !0;
                    this.zpp_next = Yh.zpp_pool;
                    Yh.zpp_pool = this;
                    this.zpp_inner = null;
                    return !1
                },
                next: function() {
                    this.zpp_critical = !1;
                    return this.zpp_inner.at(this.zpp_i++)
                },
                __class__: Yh
            };
            var lw = function() {
                this.zpp_inner = null
            };
            g["nape.geom.ConvexResultList"] = lw;
            lw.__name__ = ["nape", "geom", "ConvexResultList"];
            lw.prototype = {
                zpp_inner: null,
                get_length: function() {
                    this.zpp_inner.valmod();
                    this.zpp_inner.zip_length && (this.zpp_inner.zip_length = !1, this.zpp_inner.user_length =
                        this.zpp_inner.inner.length);
                    return this.zpp_inner.user_length
                },
                at: function(a) {
                    this.zpp_inner.valmod();
                    this.zpp_inner.reverse_flag && (a = this.get_length() - 1 - a);
                    if (a < this.zpp_inner.at_index || null == this.zpp_inner.at_ite) this.zpp_inner.at_index = a, this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(a);
                    else
                        for (; this.zpp_inner.at_index != a;) this.zpp_inner.at_index++, this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
                    return this.zpp_inner.at_ite.elem()
                },
                iterator: function() {
                    this.zpp_inner.valmod();
                    return Yh.get(this)
                },
                toString: function() {
                    for (var a = "[", b = !0, c = this.iterator(); c.hasNext();) {
                        var d = c.next();
                        b || (a += ",");
                        a += null == d ? "NULL" : d.toString();
                        b = !1
                    }
                    return a + "]"
                },
                __class__: lw
            };
            var Hq = function() {};
            g["nape.geom.Geom"] = Hq;
            Hq.__name__ = ["nape", "geom", "Geom"];
            Hq.distanceBody = function(a, b, c, d) {
                c.zpp_inner.immutable();
                d.zpp_inner.immutable();
                for (var e = a.zpp_inner.shapes.begin(); null != e;) {
                    var f = e.elem();
                    zo.validateShape(f);
                    e = e.next
                }
                for (e = b.zpp_inner.shapes.begin(); null != e;) f = e.elem(), zo.validateShape(f), e = e.next;
                return We.distanceBody(a.zpp_inner,
                    b.zpp_inner, c.zpp_inner, d.zpp_inner)
            };
            Hq.distance = function(a, b, c, d) {
                c.zpp_inner.immutable();
                d.zpp_inner.immutable();
                zo.validateShape(a.zpp_inner);
                zo.validateShape(b.zpp_inner);
                if (null == kb.zpp_pool) var e = new kb;
                else e = kb.zpp_pool, kb.zpp_pool = e.next, e.next = null;
                e.alloc();
                a = We.distance(a.zpp_inner, b.zpp_inner, c.zpp_inner, d.zpp_inner, e, Nb.FMAX);
                e.free();
                e.next = kb.zpp_pool;
                kb.zpp_pool = e;
                return a
            };
            var Dh = function(a) {
                this.zpp_pool = this.zpp_inner = null;
                this.zpp_inner = new Pu(this);
                if (null != a) {
                    if (a instanceof Array && null == a.__enum__)
                        for (var b = 0; b < a.length;) {
                            var c = a[b];
                            ++b;
                            c = Ef.get(c.get_x(), c.get_y());
                            null == this.zpp_inner.vertices ? this.zpp_inner.vertices = c.prev = c.next = c : (c.prev = this.zpp_inner.vertices, c.next = this.zpp_inner.vertices.next, this.zpp_inner.vertices.next.prev = c, this.zpp_inner.vertices.next = c);
                            this.zpp_inner.vertices = c
                        } else if (E.is(a, Gg))
                            for (b = a.iterator(); b.hasNext();) c = b.next(), c = Ef.get(c.get_x(), c.get_y()), null == this.zpp_inner.vertices ? this.zpp_inner.vertices = c.prev = c.next = c : (c.prev = this.zpp_inner.vertices,
                                c.next = this.zpp_inner.vertices.next, this.zpp_inner.vertices.next.prev = c, this.zpp_inner.vertices.next = c), this.zpp_inner.vertices = c;
                        else if (E.is(a, Dh) && (b = a.zpp_inner.vertices, null != b))
                        for (c = b;;) {
                            var d = Wa.get(c.x, c.y);
                            c = c.next;
                            var e = Ef.get(d.get_x(), d.get_y());
                            null == this.zpp_inner.vertices ? this.zpp_inner.vertices = e.prev = e.next = e : (e.prev = this.zpp_inner.vertices, e.next = this.zpp_inner.vertices.next, this.zpp_inner.vertices.next.prev = e, this.zpp_inner.vertices.next = e);
                            this.zpp_inner.vertices = e;
                            d.dispose();
                            if (c == b) break
                        }
                    this.skipForward(1);
                    if (a instanceof Array && null == a.__enum__)
                        for (b = 0; b < a.length;) c = a[b], c.zpp_inner.weak ? (c.dispose(), c = !0) : c = !1, c ? a.splice(b, 1) : ++b;
                    else if (E.is(a, Gg))
                        for (null != a.zpp_inner._validate && a.zpp_inner._validate(), a = a.zpp_inner.inner, b = null, c = a.begin(); null != c;) d = c.elem(), d.outer.zpp_inner.weak ? (c = a.erase(b), d.outer.zpp_inner.weak && d.outer.dispose()) : (b = c, c = c.next)
                }
            };
            g["nape.geom.GeomPoly"] = Dh;
            Dh.__name__ = ["nape", "geom", "GeomPoly"];
            Dh.get = function(a) {
                if (null == Zh.poolGeomPoly) var b =
                    new Dh;
                else b = Zh.poolGeomPoly, Zh.poolGeomPoly = b.zpp_pool, b.zpp_pool = null;
                if (null != a) {
                    if (a instanceof Array && null == a.__enum__)
                        for (var c = 0; c < a.length;) {
                            var d = a[c];
                            ++c;
                            d = Ef.get(d.get_x(), d.get_y());
                            null == b.zpp_inner.vertices ? b.zpp_inner.vertices = d.prev = d.next = d : (d.prev = b.zpp_inner.vertices, d.next = b.zpp_inner.vertices.next, b.zpp_inner.vertices.next.prev = d, b.zpp_inner.vertices.next = d);
                            b.zpp_inner.vertices = d
                        } else if (E.is(a, Gg))
                            for (c = a.iterator(); c.hasNext();) d = c.next(), d = Ef.get(d.get_x(), d.get_y()), null ==
                                b.zpp_inner.vertices ? b.zpp_inner.vertices = d.prev = d.next = d : (d.prev = b.zpp_inner.vertices, d.next = b.zpp_inner.vertices.next, b.zpp_inner.vertices.next.prev = d, b.zpp_inner.vertices.next = d), b.zpp_inner.vertices = d;
                        else if (E.is(a, Dh) && (c = a.zpp_inner.vertices, null != c))
                        for (d = c;;) {
                            var e = Wa.get(d.x, d.y);
                            d = d.next;
                            var f = Ef.get(e.get_x(), e.get_y());
                            null == b.zpp_inner.vertices ? b.zpp_inner.vertices = f.prev = f.next = f : (f.prev = b.zpp_inner.vertices, f.next = b.zpp_inner.vertices.next, b.zpp_inner.vertices.next.prev = f, b.zpp_inner.vertices.next =
                                f);
                            b.zpp_inner.vertices = f;
                            e.dispose();
                            if (d == c) break
                        }
                    b.skipForward(1);
                    if (a instanceof Array && null == a.__enum__)
                        for (c = 0; c < a.length;) d = a[c], d.zpp_inner.weak ? (d.dispose(), d = !0) : d = !1, d ? a.splice(c, 1) : ++c;
                    else if (E.is(a, Gg))
                        for (null != a.zpp_inner._validate && a.zpp_inner._validate(), a = a.zpp_inner.inner, c = null, d = a.begin(); null != d;) e = d.elem(), e.outer.zpp_inner.weak ? (d = a.erase(c), e.outer.zpp_inner.weak && e.outer.dispose()) : (c = d, d = d.next)
                }
                return b
            };
            Dh.prototype = {
                zpp_pool: null,
                zpp_inner: null,
                iterator: function() {
                    return $h.get(this.zpp_inner.vertices,
                        !0)
                },
                push: function(a) {
                    var b = Ef.get(a.get_x(), a.get_y());
                    null == this.zpp_inner.vertices ? this.zpp_inner.vertices = b.prev = b.next = b : (b.prev = this.zpp_inner.vertices, b.next = this.zpp_inner.vertices.next, this.zpp_inner.vertices.next.prev = b, this.zpp_inner.vertices.next = b);
                    this.zpp_inner.vertices = b;
                    a.zpp_inner.weak && a.dispose();
                    return this
                },
                skipForward: function(a) {
                    if (null != this.zpp_inner.vertices)
                        if (0 < a)
                            for (; 0 < a--;) this.zpp_inner.vertices = this.zpp_inner.vertices.next;
                        else if (0 > a)
                        for (; 0 > a++;) this.zpp_inner.vertices =
                            this.zpp_inner.vertices.prev;
                    return this
                },
                clear: function() {
                    for (; null != this.zpp_inner.vertices;) {
                        var a = this.zpp_inner.vertices;
                        if (null != this.zpp_inner.vertices && this.zpp_inner.vertices.prev == this.zpp_inner.vertices) {
                            this.zpp_inner.vertices.next = this.zpp_inner.vertices.prev = null;
                            var b = this.zpp_inner.vertices = null
                        } else b = this.zpp_inner.vertices.next, this.zpp_inner.vertices.prev.next = this.zpp_inner.vertices.next, this.zpp_inner.vertices.next.prev = this.zpp_inner.vertices.prev, this.zpp_inner.vertices.next =
                            this.zpp_inner.vertices.prev = null, this.zpp_inner.vertices = null;
                        this.zpp_inner.vertices = b;
                        a.free();
                        a.next = Ef.zpp_pool;
                        Ef.zpp_pool = a
                    }
                    return this
                },
                dispose: function() {
                    this.clear();
                    this.zpp_pool = Zh.poolGeomPoly;
                    Zh.poolGeomPoly = this
                },
                toString: function() {
                    var a = "GeomPoly[",
                        b = this.zpp_inner.vertices,
                        c = this.zpp_inner.vertices;
                    if (null != b)
                        for (;;) {
                            var d = b;
                            d != this.zpp_inner.vertices && (a += ",");
                            a += "{" + d.x + "," + d.y + "}";
                            b = b.next;
                            if (b == c) break
                        }
                    return a + "]"
                },
                isSimple: function() {
                    return null == this.zpp_inner.vertices || null ==
                        this.zpp_inner.vertices.next || this.zpp_inner.vertices.prev == this.zpp_inner.vertices.next ? !0 : Xe.isSimple(this.zpp_inner.vertices)
                },
                convexDecomposition: function(a, b) {
                    null == a && (a = !1);
                    var c = ec.decompose(this.zpp_inner.vertices, ec.getShared()).extract_partitions(Ud.getSharedPP());
                    for (b = null == b ? new Qu : b; !c.empty();) {
                        var d = c.pop_unsafe();
                        Gb.triangulate(d);
                        a && Gb.optimise(d);
                        Ao.optimise(d);
                        var e = d.extract(Ud.getShared());
                        d.free();
                        d.next = Ud.zpp_pool;
                        for (Ud.zpp_pool = d; !e.empty();) {
                            d = e.pop_unsafe();
                            var f = Dh.get();
                            f.zpp_inner.vertices = d;
                            b.add(f)
                        }
                    }
                    return b
                },
                __class__: Dh
            };
            var ai = function() {
                this.zpp_next = null;
                this.zpp_critical = !1;
                this.zpp_i = 0;
                this.zpp_inner = null
            };
            g["nape.geom.GeomPolyIterator"] = ai;
            ai.__name__ = ["nape", "geom", "GeomPolyIterator"];
            ai.get = function(a) {
                if (null == ai.zpp_pool) {
                    xl.internal = !0;
                    var b = new ai;
                    xl.internal = !1
                } else b = ai.zpp_pool, ai.zpp_pool = b.zpp_next;
                b.zpp_i = 0;
                b.zpp_inner = a;
                b.zpp_critical = !1;
                return b
            };
            ai.prototype = {
                zpp_inner: null,
                zpp_i: null,
                zpp_critical: null,
                zpp_next: null,
                hasNext: function() {
                    this.zpp_inner.zpp_inner.valmod();
                    var a = this.zpp_inner.get_length();
                    this.zpp_critical = !0;
                    if (this.zpp_i < a) return !0;
                    this.zpp_next = ai.zpp_pool;
                    ai.zpp_pool = this;
                    this.zpp_inner = null;
                    return !1
                },
                next: function() {
                    this.zpp_critical = !1;
                    return this.zpp_inner.at(this.zpp_i++)
                },
                __class__: ai
            };
            var Qu = function() {
                this.zpp_inner = null;
                this.zpp_inner = new xl;
                this.zpp_inner.outer = this
            };
            g["nape.geom.GeomPolyList"] = Qu;
            Qu.__name__ = ["nape", "geom", "GeomPolyList"];
            Qu.prototype = {
                zpp_inner: null,
                get_length: function() {
                    this.zpp_inner.valmod();
                    this.zpp_inner.zip_length &&
                        (this.zpp_inner.zip_length = !1, this.zpp_inner.user_length = this.zpp_inner.inner.length);
                    return this.zpp_inner.user_length
                },
                at: function(a) {
                    this.zpp_inner.valmod();
                    this.zpp_inner.reverse_flag && (a = this.get_length() - 1 - a);
                    if (a < this.zpp_inner.at_index || null == this.zpp_inner.at_ite) this.zpp_inner.at_index = a, this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(a);
                    else
                        for (; this.zpp_inner.at_index != a;) this.zpp_inner.at_index++, this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
                    return this.zpp_inner.at_ite.elem().outer
                },
                push: function(a) {
                    this.zpp_inner.modify_test();
                    this.zpp_inner.valmod();
                    var b = null != this.zpp_inner.adder ? this.zpp_inner.adder(a) : !0;
                    if (b) {
                        if (this.zpp_inner.reverse_flag) this.zpp_inner.inner.add(a.zpp_inner);
                        else {
                            if (null == this.zpp_inner.push_ite) {
                                var c = this.empty() ? null : this.zpp_inner.inner.iterator_at(this.get_length() - 1);
                                this.zpp_inner.push_ite = c
                            }
                            this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite, a.zpp_inner)
                        }
                        this.zpp_inner.invalidate();
                        null != this.zpp_inner.post_adder && this.zpp_inner.post_adder(a)
                    }
                    return b
                },
                unshift: function(a) {
                    this.zpp_inner.modify_test();
                    this.zpp_inner.valmod();
                    var b = null != this.zpp_inner.adder ? this.zpp_inner.adder(a) : !0;
                    if (b) {
                        if (this.zpp_inner.reverse_flag) {
                            if (null == this.zpp_inner.push_ite) {
                                var c = this.empty() ? null : this.zpp_inner.inner.iterator_at(this.get_length() - 1);
                                this.zpp_inner.push_ite = c
                            }
                            this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite, a.zpp_inner)
                        } else this.zpp_inner.inner.add(a.zpp_inner);
                        this.zpp_inner.invalidate();
                        null != this.zpp_inner.post_adder &&
                            this.zpp_inner.post_adder(a)
                    }
                    return b
                },
                pop: function() {
                    this.zpp_inner.modify_test();
                    this.zpp_inner.valmod();
                    if (this.zpp_inner.reverse_flag) {
                        var a = this.zpp_inner.inner.front();
                        var b = a.outer;
                        null != this.zpp_inner.subber && this.zpp_inner.subber(b);
                        this.zpp_inner.dontremove || this.zpp_inner.inner.pop()
                    } else {
                        null != this.zpp_inner.at_ite && null == this.zpp_inner.at_ite.next && (this.zpp_inner.at_ite = null);
                        b = 1 == this.get_length() ? null : this.zpp_inner.inner.iterator_at(this.get_length() - 2);
                        a = null == b ? this.zpp_inner.inner.front() :
                            b.next.elem();
                        var c = a.outer;
                        null != this.zpp_inner.subber && this.zpp_inner.subber(c);
                        this.zpp_inner.dontremove || this.zpp_inner.inner.erase(b)
                    }
                    this.zpp_inner.invalidate();
                    return a.outer
                },
                add: function(a) {
                    return this.zpp_inner.reverse_flag ? this.push(a) : this.unshift(a)
                },
                empty: function() {
                    return this.zpp_inner.inner.empty()
                },
                iterator: function() {
                    this.zpp_inner.valmod();
                    return ai.get(this)
                },
                toString: function() {
                    for (var a = "[", b = !0, c = this.iterator(); c.hasNext();) {
                        var d = c.next();
                        b || (a += ",");
                        a += null == d ? "NULL" : d.toString();
                        b = !1
                    }
                    return a + "]"
                },
                __class__: Qu
            };
            var Ru = function() {};
            g["nape.geom.GeomVertexIterator"] = Ru;
            Ru.__name__ = ["nape", "geom", "GeomVertexIterator"];
            Ru.prototype = {
                zpp_inner: null,
                hasNext: function() {
                    var a = this.zpp_inner.ptr != this.zpp_inner.start || this.zpp_inner.first;
                    this.zpp_inner.first = !1;
                    if (!a) {
                        var b = this.zpp_inner;
                        b.free();
                        b.next = $h.zpp_pool;
                        $h.zpp_pool = b
                    }
                    return a
                },
                next: function() {
                    var a = this.zpp_inner.ptr.wrapper();
                    this.zpp_inner.ptr = this.zpp_inner.forward ? this.zpp_inner.ptr.next : this.zpp_inner.ptr.prev;
                    return a
                },
                __class__: Ru
            };
            var Su = function(a, b, c, d, e, f) {
                null == f && (f = 0);
                null == e && (e = 0);
                null == d && (d = 1);
                null == c && (c = 0);
                null == b && (b = 0);
                null == a && (a = 1);
                this.zpp_inner = null;
                this.zpp_inner = uj.get();
                this.zpp_inner.outer = this;
                this.set_a(a);
                this.set_b(b);
                this.set_tx(e);
                this.set_c(c);
                this.set_d(d);
                this.set_ty(f)
            };
            g["nape.geom.Mat23"] = Su;
            Su.__name__ = ["nape", "geom", "Mat23"];
            Su.prototype = {
                zpp_inner: null,
                get_a: function() {
                    return this.zpp_inner.a
                },
                set_a: function(a) {
                    this.zpp_inner.a = a;
                    this.zpp_inner.invalidate();
                    return this.get_a()
                },
                get_b: function() {
                    return this.zpp_inner.b
                },
                set_b: function(a) {
                    this.zpp_inner.b = a;
                    this.zpp_inner.invalidate();
                    return this.get_b()
                },
                get_c: function() {
                    return this.zpp_inner.c
                },
                set_c: function(a) {
                    this.zpp_inner.c = a;
                    this.zpp_inner.invalidate();
                    return this.get_c()
                },
                get_d: function() {
                    return this.zpp_inner.d
                },
                set_d: function(a) {
                    this.zpp_inner.d = a;
                    this.zpp_inner.invalidate();
                    return this.get_d()
                },
                get_tx: function() {
                    return this.zpp_inner.tx
                },
                set_tx: function(a) {
                    this.zpp_inner.tx = a;
                    this.zpp_inner.invalidate();
                    return this.get_tx()
                },
                get_ty: function() {
                    return this.zpp_inner.ty
                },
                set_ty: function(a) {
                    this.zpp_inner.ty = a;
                    this.zpp_inner.invalidate();
                    return this.get_ty()
                },
                get_determinant: function() {
                    return this.get_a() * this.get_d() - this.get_b() * this.get_c()
                },
                singular: function() {
                    var a = this.get_a() * this.get_a() + this.get_b() * this.get_b() + this.get_c() * this.get_c() + this.get_d() * this.get_d(),
                        b = this.get_determinant();
                    0 > b && (b = -b);
                    return a > K.illConditionedThreshold * b
                },
                toString: function() {
                    return "{ a: " + this.get_a() + " b: " + this.get_b() + " c: " + this.get_c() +
                        " d: " + this.get_d() + " tx: " + this.get_tx() + " ty: " + this.get_ty() + " }"
                },
                equiorthogonal: function() {
                    if (this.singular()) return !1;
                    var a = this.get_a() * this.get_b() + this.get_c() * this.get_d();
                    return a * a < K.epsilon ? (a = this.get_a() * this.get_a() + this.get_b() * this.get_b() - this.get_c() * this.get_c() - this.get_d() * this.get_d(), a * a < K.epsilon) : !1
                },
                __class__: Su
            };
            var mw = function() {
                this.zpp_inner = null
            };
            g["nape.geom.MatMN"] = mw;
            mw.__name__ = ["nape", "geom", "MatMN"];
            mw.prototype = {
                zpp_inner: null,
                get_rows: function() {
                    return this.zpp_inner.m
                },
                get_cols: function() {
                    return this.zpp_inner.n
                },
                x: function(a, b) {
                    return this.zpp_inner.x[a * this.get_cols() + b]
                },
                toString: function() {
                    for (var a = "{ ", b = !0, c = 0, d = this.get_rows(); c < d;) {
                        var e = c++;
                        b || (a += "; ");
                        b = !1;
                        for (var f = 0, h = this.get_cols(); f < h;) {
                            var k = f++;
                            a += this.x(e, k) + " "
                        }
                    }
                    return a + "}"
                },
                __class__: mw
            };
            var nw = function() {
                this.zpp_inner = null
            };
            g["nape.geom.RayResult"] = nw;
            nw.__name__ = ["nape", "geom", "RayResult"];
            nw.prototype = {
                zpp_inner: null,
                get_distance: function() {
                    return this.zpp_inner.toiDistance
                },
                get_inner: function() {
                    return this.zpp_inner.inner
                },
                get_shape: function() {
                    return this.zpp_inner.shape
                },
                toString: function() {
                    return "{ shape: " + E.string(this.get_shape()) + " distance: " + this.get_distance() + " ?inner: " + E.string(this.get_inner()) + " }"
                },
                __class__: nw
            };
            var bi = function() {
                this.zpp_next = null;
                this.zpp_critical = !1;
                this.zpp_i = 0;
                this.zpp_inner = null
            };
            g["nape.geom.RayResultIterator"] = bi;
            bi.__name__ = ["nape", "geom", "RayResultIterator"];
            bi.get = function(a) {
                if (null == bi.zpp_pool) {
                    Bo.internal = !0;
                    var b = new bi;
                    Bo.internal = !1
                } else b = bi.zpp_pool, bi.zpp_pool = b.zpp_next;
                b.zpp_i = 0;
                b.zpp_inner = a;
                b.zpp_critical = !1;
                return b
            };
            bi.prototype = {
                zpp_inner: null,
                zpp_i: null,
                zpp_critical: null,
                zpp_next: null,
                hasNext: function() {
                    this.zpp_inner.zpp_inner.valmod();
                    var a = this.zpp_inner.get_length();
                    this.zpp_critical = !0;
                    if (this.zpp_i < a) return !0;
                    this.zpp_next = bi.zpp_pool;
                    bi.zpp_pool = this;
                    this.zpp_inner = null;
                    return !1
                },
                next: function() {
                    this.zpp_critical = !1;
                    return this.zpp_inner.at(this.zpp_i++)
                },
                __class__: bi
            };
            var ow = function() {
                this.zpp_inner = null
            };
            g["nape.geom.RayResultList"] = ow;
            ow.__name__ = ["nape", "geom", "RayResultList"];
            ow.prototype = {
                zpp_inner: null,
                get_length: function() {
                    this.zpp_inner.valmod();
                    this.zpp_inner.zip_length && (this.zpp_inner.zip_length = !1, this.zpp_inner.user_length = this.zpp_inner.inner.length);
                    return this.zpp_inner.user_length
                },
                at: function(a) {
                    this.zpp_inner.valmod();
                    this.zpp_inner.reverse_flag && (a = this.get_length() - 1 - a);
                    if (a < this.zpp_inner.at_index || null == this.zpp_inner.at_ite) this.zpp_inner.at_index = a, this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(a);
                    else
                        for (; this.zpp_inner.at_index !=
                            a;) this.zpp_inner.at_index++, this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
                    return this.zpp_inner.at_ite.elem()
                },
                iterator: function() {
                    this.zpp_inner.valmod();
                    return bi.get(this)
                },
                toString: function() {
                    for (var a = "[", b = !0, c = this.iterator(); c.hasNext();) {
                        var d = c.next();
                        b || (a += ",");
                        a += null == d ? "NULL" : d.toString();
                        b = !1
                    }
                    return a + "]"
                },
                __class__: ow
            };
            var Wa = function(a, b) {
                null == b && (b = 0);
                null == a && (a = 0);
                this.zpp_inner = this.zpp_pool = null;
                this.zpp_inner = kb.get(a, b);
                this.zpp_inner.outer = this
            };
            g["nape.geom.Vec2"] =
                Wa;
            Wa.__name__ = ["nape", "geom", "Vec2"];
            Wa.get = function(a, b, c) {
                null == c && (c = !1);
                null == b && (b = 0);
                null == a && (a = 0);
                if (null == Zh.poolVec2) var d = new Wa;
                else d = Zh.poolVec2, Zh.poolVec2 = d.zpp_pool, d.zpp_pool = null;
                null == d.zpp_inner ? (d.zpp_inner = kb.get(a, b), d.zpp_inner.outer = d) : d.setxy(a, b);
                d.zpp_inner.weak = c;
                return d
            };
            Wa.distance = function(a, b) {
                var c = Math.sqrt(pc.vec_dsq(a.get_x(), a.get_y(), b.get_x(), b.get_y()));
                a.zpp_inner.weak && a.dispose();
                b.zpp_inner.weak && b.dispose();
                return c
            };
            Wa.prototype = {
                zpp_inner: null,
                zpp_pool: null,
                dispose: function() {
                    this.zpp_inner.immutable();
                    var a = this.zpp_inner;
                    this.zpp_inner = this.zpp_inner.outer = null;
                    this.zpp_pool = Zh.poolVec2;
                    Zh.poolVec2 = this;
                    a.free();
                    a.next = kb.zpp_pool;
                    kb.zpp_pool = a
                },
                copy: function(a) {
                    null == a && (a = !1);
                    return Wa.get(this.get_x(), this.get_y(), a)
                },
                get_x: function() {
                    this.zpp_inner.validate();
                    return this.zpp_inner.x
                },
                set_x: function(a) {
                    this.zpp_inner.immutable();
                    this.get_x() != a && (this.zpp_inner.x = a, this.zpp_inner.invalidate());
                    return this.get_x()
                },
                get_y: function() {
                    this.zpp_inner.validate();
                    return this.zpp_inner.y
                },
                set_y: function(a) {
                    this.zpp_inner.immutable();
                    this.get_y() != a && (this.zpp_inner.y = a, this.zpp_inner.invalidate());
                    return this.get_y()
                },
                get_length: function() {
                    return Math.sqrt(this.get_x() * this.get_x() + this.get_y() * this.get_y())
                },
                lsq: function() {
                    return this.get_x() * this.get_x() + this.get_y() * this.get_y()
                },
                set: function(a) {
                    this.zpp_inner.immutable();
                    var b = this.setxy(a.get_x(), a.get_y());
                    a.zpp_inner.weak && a.dispose();
                    return b
                },
                setxy: function(a, b) {
                    this.zpp_inner.immutable();
                    if (this.get_x() !=
                        a || this.get_y() != b) this.zpp_inner.x = a, this.zpp_inner.y = b, this.zpp_inner.invalidate();
                    return this
                },
                get_angle: function() {
                    return this.get_x() == this.get_y() && 0 == this.get_x() ? 0 : Math.atan2(this.get_y(), this.get_x())
                },
                rotate: function(a) {
                    this.zpp_inner.immutable();
                    if (0 != a % (2 * Math.PI)) {
                        var b = Math.sin(a);
                        a = Math.cos(a);
                        var c = a * this.zpp_inner.x - b * this.zpp_inner.y;
                        this.zpp_inner.y = this.zpp_inner.x * b + this.zpp_inner.y * a;
                        this.zpp_inner.x = c;
                        this.zpp_inner.invalidate()
                    }
                    return this
                },
                add: function(a, b) {
                    null == b && (b = !1);
                    b = Wa.get(this.get_x() + a.get_x(), this.get_y() + a.get_y(), b);
                    a.zpp_inner.weak && a.dispose();
                    return b
                },
                sub: function(a, b) {
                    null == b && (b = !1);
                    b = Wa.get(this.get_x() - a.get_x(), this.get_y() - a.get_y(), b);
                    a.zpp_inner.weak && a.dispose();
                    return b
                },
                subeq: function(a) {
                    this.zpp_inner.immutable();
                    this.setxy(this.get_x() - a.get_x(), this.get_y() - a.get_y());
                    a.zpp_inner.weak && a.dispose();
                    return this
                },
                muleq: function(a) {
                    this.zpp_inner.immutable();
                    return this.setxy(this.get_x() * a, this.get_y() * a)
                },
                toString: function() {
                    this.zpp_inner.validate();
                    return this.zpp_inner.toString()
                },
                __class__: Wa
            };
            var ci = function() {
                this.zpp_next = null;
                this.zpp_critical = !1;
                this.zpp_i = 0;
                this.zpp_inner = null
            };
            g["nape.geom.Vec2Iterator"] = ci;
            ci.__name__ = ["nape", "geom", "Vec2Iterator"];
            ci.get = function(a) {
                if (null == ci.zpp_pool) {
                    yl.internal = !0;
                    var b = new ci;
                    yl.internal = !1
                } else b = ci.zpp_pool, ci.zpp_pool = b.zpp_next;
                b.zpp_i = 0;
                b.zpp_inner = a;
                b.zpp_critical = !1;
                return b
            };
            ci.prototype = {
                zpp_inner: null,
                zpp_i: null,
                zpp_critical: null,
                zpp_next: null,
                hasNext: function() {
                    this.zpp_inner.zpp_inner.valmod();
                    var a = this.zpp_inner.get_length();
                    this.zpp_critical = !0;
                    if (this.zpp_i < a) return !0;
                    this.zpp_next = ci.zpp_pool;
                    ci.zpp_pool = this;
                    this.zpp_inner = null;
                    return !1
                },
                next: function() {
                    this.zpp_critical = !1;
                    return this.zpp_inner.at(this.zpp_i++)
                },
                __class__: ci
            };
            var Gg = function() {
                this.zpp_inner = null;
                this.zpp_inner = new yl;
                this.zpp_inner.outer = this
            };
            g["nape.geom.Vec2List"] = Gg;
            Gg.__name__ = ["nape", "geom", "Vec2List"];
            Gg.fromArray = function(a) {
                for (var b = new Gg, c = 0; c < a.length;) {
                    var d = a[c];
                    ++c;
                    b.push(d)
                }
                return b
            };
            Gg.prototype = {
                zpp_inner: null,
                get_length: function() {
                    return this.zpp_gl()
                },
                zpp_gl: function() {
                    this.zpp_inner.valmod();
                    this.zpp_inner.zip_length && (this.zpp_inner.zip_length = !1, this.zpp_inner.user_length = this.zpp_inner.inner.length);
                    return this.zpp_inner.user_length
                },
                zpp_vm: function() {
                    this.zpp_inner.valmod()
                },
                at: function(a) {
                    this.zpp_vm();
                    this.zpp_inner.reverse_flag && (a = this.get_length() - 1 - a);
                    if (a < this.zpp_inner.at_index || null == this.zpp_inner.at_ite) this.zpp_inner.at_index = a, this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(a);
                    else
                        for (; this.zpp_inner.at_index != a;) this.zpp_inner.at_index++, this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
                    return this.zpp_inner.at_ite.elem().wrapper()
                },
                push: function(a) {
                    this.zpp_inner.modify_test();
                    this.zpp_vm();
                    var b = null != this.zpp_inner.adder ? this.zpp_inner.adder(a) : !0;
                    if (b) {
                        if (this.zpp_inner.reverse_flag) this.zpp_inner.inner.add(a.zpp_inner);
                        else {
                            if (null == this.zpp_inner.push_ite) {
                                var c = this.empty() ? null : this.zpp_inner.inner.iterator_at(this.get_length() - 1);
                                this.zpp_inner.push_ite = c
                            }
                            this.zpp_inner.push_ite =
                                this.zpp_inner.inner.insert(this.zpp_inner.push_ite, a.zpp_inner)
                        }
                        this.zpp_inner.invalidate();
                        null != this.zpp_inner.post_adder && this.zpp_inner.post_adder(a)
                    }
                    return b
                },
                empty: function() {
                    return 0 == this.get_length()
                },
                iterator: function() {
                    this.zpp_vm();
                    return ci.get(this)
                },
                toString: function() {
                    for (var a = "[", b = !0, c = this.iterator(); c.hasNext();) {
                        var d = c.next();
                        b || (a += ",");
                        a += null == d ? "NULL" : d.toString();
                        b = !1
                    }
                    return a + "]"
                },
                __class__: Gg
            };
            var pw = function() {
                this.zpp_inner = null
            };
            g["nape.geom.Vec3"] = pw;
            pw.__name__ = ["nape", "geom", "Vec3"];
            pw.prototype = {
                zpp_inner: null,
                get_x: function() {
                    this.zpp_inner.validate();
                    return this.zpp_inner.x
                },
                get_y: function() {
                    this.zpp_inner.validate();
                    return this.zpp_inner.y
                },
                get_z: function() {
                    this.zpp_inner.validate();
                    return this.zpp_inner.z
                },
                toString: function() {
                    return "{ x: " + this.get_x() + " y: " + this.get_y() + " z: " + this.get_z() + " }"
                },
                __class__: pw
            };
            var th = function() {};
            g["nape.geom.Winding"] = th;
            th.__name__ = ["nape", "geom", "Winding"];
            th.get_UNDEFINED = function() {
                null == N.Winding_UNDEFINED &&
                    (N.internal = !0, N.Winding_UNDEFINED = new th, N.internal = !1);
                return N.Winding_UNDEFINED
            };
            th.get_CLOCKWISE = function() {
                null == N.Winding_CLOCKWISE && (N.internal = !0, N.Winding_CLOCKWISE = new th, N.internal = !1);
                return N.Winding_CLOCKWISE
            };
            th.get_ANTICLOCKWISE = function() {
                null == N.Winding_ANTICLOCKWISE && (N.internal = !0, N.Winding_ANTICLOCKWISE = new th, N.internal = !1);
                return N.Winding_ANTICLOCKWISE
            };
            th.prototype = {
                toString: function() {
                    return this == th.get_UNDEFINED() ? "UNDEFINED" : this == th.get_CLOCKWISE() ? "CLOCKWISE" : this ==
                        th.get_ANTICLOCKWISE() ? "ANTICLOCKWISE" : ""
                },
                __class__: th
            };
            var vj = function() {
                this.zpp_inner_i = null
            };
            g["nape.phys.Interactor"] = vj;
            vj.__name__ = ["nape", "phys", "Interactor"];
            vj.prototype = {
                zpp_inner_i: null,
                get_id: function() {
                    return this.zpp_inner_i.id
                },
                get_group: function() {
                    return null == this.zpp_inner_i.group ? null : this.zpp_inner_i.group.outer
                },
                set_group: function(a) {
                    this.zpp_inner_i.immutable_midstep("Interactor::group");
                    this.zpp_inner_i.setGroup(null == a ? null : a.zpp_inner);
                    return this.get_group()
                },
                toString: function() {
                    return ""
                },
                __class__: vj
            };
            var Ag = function(a, b) {
                this.zpp_inner_i = this.zpp_inner = null;
                this.zpp_inner = new wj;
                this.zpp_inner.outer = this;
                this.zpp_inner.outer_i = this;
                this.zpp_inner_i = this.zpp_inner;
                null != b ? (this.zpp_inner.posx = b.get_x(), this.zpp_inner.posy = b.get_y()) : (this.zpp_inner.posx = 0, this.zpp_inner.posy = 0);
                this.set_type(null == a ? Pc.get_DYNAMIC() : a);
                null != b && b.zpp_inner.weak && b.dispose();
                this.zpp_inner_i.insert_cbtype($e.get_ANY_BODY().zpp_inner)
            };
            g["nape.phys.Body"] = Ag;
            Ag.__name__ = ["nape", "phys", "Body"];
            Ag.__super__ =
                vj;
            Ag.prototype = p(vj.prototype, {
                zpp_inner: null,
                get_type: function() {
                    return wj.types[this.zpp_inner.type]
                },
                set_type: function(a) {
                    this.zpp_inner.immutable_midstep("Body::type");
                    this.get_type() != a && (a = a == Pc.get_DYNAMIC() ? 2 : a == Pc.get_KINEMATIC() ? 3 : 1, 1 == a && null != this.zpp_inner.space && (this.zpp_inner.velx = 0, this.zpp_inner.vely = 0, this.zpp_inner.angvel = 0), this.zpp_inner.invalidate_type(), null != this.zpp_inner.space ? this.zpp_inner.space.transmitType(this.zpp_inner, a) : this.zpp_inner.type = a);
                    return this.get_type()
                },
                isStatic: function() {
                    return this.zpp_inner.isStatic()
                },
                isDynamic: function() {
                    return this.zpp_inner.isDynamic()
                },
                isKinematic: function() {
                    return this.zpp_inner.isKinematic()
                },
                get_shapes: function() {
                    return this.zpp_inner.wrap_shapes
                },
                get_space: function() {
                    return null == this.zpp_inner.space ? null : this.zpp_inner.space.outer
                },
                set_space: function(a) {
                    this.zpp_inner.immutable_midstep("Body::space");
                    this.get_space() != a && (null != this.get_space() && (this.zpp_inner.component.woken = !1), null != this.get_space() && this.get_space().get_bodies().remove(this),
                        null != a && a.get_bodies().add(this));
                    return this.get_space()
                },
                get_arbiters: function() {
                    null == this.zpp_inner.wrap_arbiters && (this.zpp_inner.wrap_arbiters = Ui.get(this.zpp_inner.arbiters, !0));
                    return this.zpp_inner.wrap_arbiters
                },
                get_position: function() {
                    null == this.zpp_inner.wrap_pos && this.zpp_inner.setupPosition();
                    return this.zpp_inner.wrap_pos
                },
                get_velocity: function() {
                    null == this.zpp_inner.wrap_vel && this.zpp_inner.setupVelocity();
                    return this.zpp_inner.wrap_vel
                },
                set_velocity: function(a) {
                    this.get_velocity().set(a);
                    return this.get_velocity()
                },
                get_rotation: function() {
                    return this.zpp_inner.rot
                },
                set_rotation: function(a) {
                    this.zpp_inner.immutable_midstep("Body::rotation");
                    this.get_rotation() != a && (this.zpp_inner.rot = a, this.zpp_inner.invalidate_rot(), this.zpp_inner.wake());
                    return this.get_rotation()
                },
                get_angularVel: function() {
                    return this.zpp_inner.angvel
                },
                set_angularVel: function(a) {
                    this.get_angularVel() != a && (this.zpp_inner.angvel = a, this.zpp_inner.invalidate_wake());
                    return this.get_angularVel()
                },
                get_allowMovement: function() {
                    return !this.zpp_inner.nomove
                },
                set_allowMovement: function(a) {
                    this.zpp_inner.immutable_midstep("Body::" + (null == a ? "null" : "" + a));
                    this.get_allowMovement() != a && (this.zpp_inner.nomove = !a, this.zpp_inner.invalidate_mass());
                    return this.get_allowMovement()
                },
                get_allowRotation: function() {
                    return !this.zpp_inner.norotate
                },
                set_allowRotation: function(a) {
                    this.zpp_inner.immutable_midstep("Body::" + (null == a ? "null" : "" + a));
                    this.get_allowRotation() != a && (this.zpp_inner.norotate = !a, this.zpp_inner.invalidate_inertia());
                    return this.get_allowRotation()
                },
                get_mass: function() {
                    this.zpp_inner.validate_mass();
                    return this.zpp_inner.cmass
                },
                localPointToWorld: function(a, b) {
                    null == b && (b = !1);
                    this.zpp_inner.validate_axis();
                    var c = this.zpp_inner.axisy * a.get_x() - this.zpp_inner.axisx * a.get_y();
                    var d = a.get_x() * this.zpp_inner.axisx + a.get_y() * this.zpp_inner.axisy;
                    a.zpp_inner.weak && a.dispose();
                    return Wa.get(c + this.zpp_inner.posx, d + this.zpp_inner.posy, b)
                },
                worldPointToLocal: function(a, b) {
                    null == b && (b = !1);
                    this.zpp_inner.validate_axis();
                    var c = a.get_x() - this.zpp_inner.posx;
                    var d = a.get_y() - this.zpp_inner.posy;
                    var e = c * this.zpp_inner.axisy +
                        d * this.zpp_inner.axisx;
                    c = d * this.zpp_inner.axisy - c * this.zpp_inner.axisx;
                    a.zpp_inner.weak && a.dispose();
                    return Wa.get(e, c, b)
                },
                localVectorToWorld: function(a, b) {
                    null == b && (b = !1);
                    this.zpp_inner.validate_axis();
                    var c = this.zpp_inner.axisy * a.get_x() - this.zpp_inner.axisx * a.get_y();
                    var d = a.get_x() * this.zpp_inner.axisx + a.get_y() * this.zpp_inner.axisy;
                    a.zpp_inner.weak && a.dispose();
                    return Wa.get(c, d, b)
                },
                translateShapes: function(a) {
                    this.zpp_inner.immutable_midstep("Body::translateShapes()");
                    var b = a.zpp_inner.weak;
                    a.zpp_inner.weak = !1;
                    for (var c = this.zpp_inner.shapes.begin(); null != c;) c.elem().outer.translate(a), c = c.next;
                    a.zpp_inner.weak = b;
                    a.zpp_inner.weak && a.dispose();
                    return this
                },
                align: function() {
                    this.zpp_inner.immutable_midstep("Body::align()");
                    this.zpp_inner.validate_localCOM();
                    var a = Wa.get(-this.zpp_inner.localCOMx, -this.zpp_inner.localCOMy);
                    this.translateShapes(a);
                    var b = this.localVectorToWorld(a);
                    this.get_position().subeq(b);
                    this.zpp_inner.pre_posx < Nb.POSINF() && (this.zpp_inner.pre_posx -= 1 * b.get_x(), this.zpp_inner.pre_posy -=
                        1 * b.get_y());
                    a.dispose();
                    b.dispose();
                    return this
                },
                setShapeMaterials: function(a) {
                    this.zpp_inner.immutable_midstep("Body::setShapeMaterials()");
                    for (var b = this.zpp_inner.shapes.begin(); null != b;) b.elem().outer.set_material(a), b = b.next;
                    return this
                },
                setShapeFilters: function(a) {
                    this.zpp_inner.immutable_midstep("Body::setShapeFilters()");
                    for (var b = this.zpp_inner.shapes.begin(); null != b;) b.elem().outer.set_filter(a), b = b.next;
                    return this
                },
                toString: function() {
                    return (this.zpp_inner.world ? "(space::world" : "(" + (this.isDynamic() ?
                        "dynamic" : this.isStatic() ? "static" : "kinematic")) + ")#" + this.get_id()
                },
                __class__: Ag
            });
            var di = function() {
                this.zpp_next = null;
                this.zpp_critical = !1;
                this.zpp_i = 0;
                this.zpp_inner = null
            };
            g["nape.phys.BodyIterator"] = di;
            di.__name__ = ["nape", "phys", "BodyIterator"];
            di.get = function(a) {
                if (null == di.zpp_pool) {
                    Vi.internal = !0;
                    var b = new di;
                    Vi.internal = !1
                } else b = di.zpp_pool, di.zpp_pool = b.zpp_next;
                b.zpp_i = 0;
                b.zpp_inner = a;
                b.zpp_critical = !1;
                return b
            };
            di.prototype = {
                zpp_inner: null,
                zpp_i: null,
                zpp_critical: null,
                zpp_next: null,
                hasNext: function() {
                    this.zpp_inner.zpp_inner.valmod();
                    var a = this.zpp_inner.get_length();
                    this.zpp_critical = !0;
                    if (this.zpp_i < a) return !0;
                    this.zpp_next = di.zpp_pool;
                    di.zpp_pool = this;
                    this.zpp_inner = null;
                    return !1
                },
                next: function() {
                    this.zpp_critical = !1;
                    return this.zpp_inner.at(this.zpp_i++)
                },
                __class__: di
            };
            var Tu = function() {
                this.zpp_inner = null;
                this.zpp_inner = new Vi;
                this.zpp_inner.outer = this
            };
            g["nape.phys.BodyList"] = Tu;
            Tu.__name__ = ["nape", "phys", "BodyList"];
            Tu.prototype = {
                zpp_inner: null,
                get_length: function() {
                    this.zpp_inner.valmod();
                    this.zpp_inner.zip_length && (this.zpp_inner.zip_length = !1, this.zpp_inner.user_length = this.zpp_inner.inner.length);
                    return this.zpp_inner.user_length
                },
                at: function(a) {
                    this.zpp_inner.valmod();
                    this.zpp_inner.reverse_flag && (a = this.get_length() - 1 - a);
                    if (a < this.zpp_inner.at_index || null == this.zpp_inner.at_ite) this.zpp_inner.at_index = a, this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(a);
                    else
                        for (; this.zpp_inner.at_index != a;) this.zpp_inner.at_index++, this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
                    return this.zpp_inner.at_ite.elem().outer
                },
                push: function(a) {
                    this.zpp_inner.modify_test();
                    this.zpp_inner.valmod();
                    var b = null != this.zpp_inner.adder ? this.zpp_inner.adder(a) : !0;
                    if (b) {
                        if (this.zpp_inner.reverse_flag) this.zpp_inner.inner.add(a.zpp_inner);
                        else {
                            if (null == this.zpp_inner.push_ite) {
                                var c = this.empty() ? null : this.zpp_inner.inner.iterator_at(this.get_length() - 1);
                                this.zpp_inner.push_ite = c
                            }
                            this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite, a.zpp_inner)
                        }
                        this.zpp_inner.invalidate();
                        null != this.zpp_inner.post_adder && this.zpp_inner.post_adder(a)
                    }
                    return b
                },
                unshift: function(a) {
                    this.zpp_inner.modify_test();
                    this.zpp_inner.valmod();
                    var b = null != this.zpp_inner.adder ? this.zpp_inner.adder(a) : !0;
                    if (b) {
                        if (this.zpp_inner.reverse_flag) {
                            if (null == this.zpp_inner.push_ite) {
                                var c = this.empty() ? null : this.zpp_inner.inner.iterator_at(this.get_length() - 1);
                                this.zpp_inner.push_ite = c
                            }
                            this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite, a.zpp_inner)
                        } else this.zpp_inner.inner.add(a.zpp_inner);
                        this.zpp_inner.invalidate();
                        null != this.zpp_inner.post_adder && this.zpp_inner.post_adder(a)
                    }
                    return b
                },
                add: function(a) {
                    return this.zpp_inner.reverse_flag ?
                        this.push(a) : this.unshift(a)
                },
                remove: function(a) {
                    this.zpp_inner.modify_test();
                    this.zpp_inner.valmod();
                    var b = !1;
                    for (var c = this.zpp_inner.inner.begin(); null != c;) {
                        if (c.elem() == a.zpp_inner) {
                            b = !0;
                            break
                        }
                        c = c.next
                    }
                    b && (null != this.zpp_inner.subber && this.zpp_inner.subber(a), this.zpp_inner.dontremove || this.zpp_inner.inner.remove(a.zpp_inner), this.zpp_inner.invalidate());
                    return b
                },
                empty: function() {
                    return this.zpp_inner.inner.empty()
                },
                iterator: function() {
                    this.zpp_inner.valmod();
                    return di.get(this)
                },
                toString: function() {
                    for (var a =
                            "[", b = !0, c = this.iterator(); c.hasNext();) {
                        var d = c.next();
                        b || (a += ",");
                        a += null == d ? "NULL" : d.toString();
                        b = !1
                    }
                    return a + "]"
                },
                __class__: Tu
            };
            var Pc = function() {};
            g["nape.phys.BodyType"] = Pc;
            Pc.__name__ = ["nape", "phys", "BodyType"];
            Pc.get_STATIC = function() {
                null == N.BodyType_STATIC && (N.internal = !0, N.BodyType_STATIC = new Pc, N.internal = !1);
                return N.BodyType_STATIC
            };
            Pc.get_DYNAMIC = function() {
                null == N.BodyType_DYNAMIC && (N.internal = !0, N.BodyType_DYNAMIC = new Pc, N.internal = !1);
                return N.BodyType_DYNAMIC
            };
            Pc.get_KINEMATIC =
                function() {
                    null == N.BodyType_KINEMATIC && (N.internal = !0, N.BodyType_KINEMATIC = new Pc, N.internal = !1);
                    return N.BodyType_KINEMATIC
                };
            Pc.prototype = {
                toString: function() {
                    return this == Pc.get_STATIC() ? "STATIC" : this == Pc.get_DYNAMIC() ? "DYNAMIC" : this == Pc.get_KINEMATIC() ? "KINEMATIC" : ""
                },
                __class__: Pc
            };
            var Uu = function() {
                this.zpp_inner = null
            };
            g["nape.phys.Compound"] = Uu;
            Uu.__name__ = ["nape", "phys", "Compound"];
            Uu.__super__ = vj;
            Uu.prototype = p(vj.prototype, {
                zpp_inner: null,
                toString: function() {
                    return "Compound" + this.get_id()
                },
                __class__: Uu
            });
            var ei = function() {
                this.zpp_next = null;
                this.zpp_critical = !1;
                this.zpp_i = 0;
                this.zpp_inner = null
            };
            g["nape.phys.CompoundIterator"] = ei;
            ei.__name__ = ["nape", "phys", "CompoundIterator"];
            ei.get = function(a) {
                if (null == ei.zpp_pool) {
                    xj.internal = !0;
                    var b = new ei;
                    xj.internal = !1
                } else b = ei.zpp_pool, ei.zpp_pool = b.zpp_next;
                b.zpp_i = 0;
                b.zpp_inner = a;
                b.zpp_critical = !1;
                return b
            };
            ei.prototype = {
                zpp_inner: null,
                zpp_i: null,
                zpp_critical: null,
                zpp_next: null,
                hasNext: function() {
                    this.zpp_inner.zpp_inner.valmod();
                    var a = this.zpp_inner.get_length();
                    this.zpp_critical = !0;
                    if (this.zpp_i < a) return !0;
                    this.zpp_next = ei.zpp_pool;
                    ei.zpp_pool = this;
                    this.zpp_inner = null;
                    return !1
                },
                next: function() {
                    this.zpp_critical = !1;
                    return this.zpp_inner.at(this.zpp_i++)
                },
                __class__: ei
            };
            var Vu = function() {
                this.zpp_inner = null;
                this.zpp_inner = new xj;
                this.zpp_inner.outer = this
            };
            g["nape.phys.CompoundList"] = Vu;
            Vu.__name__ = ["nape", "phys", "CompoundList"];
            Vu.prototype = {
                zpp_inner: null,
                get_length: function() {
                    this.zpp_inner.valmod();
                    this.zpp_inner.zip_length && (this.zpp_inner.zip_length = !1,
                        this.zpp_inner.user_length = this.zpp_inner.inner.length);
                    return this.zpp_inner.user_length
                },
                at: function(a) {
                    this.zpp_inner.valmod();
                    this.zpp_inner.reverse_flag && (a = this.get_length() - 1 - a);
                    if (a < this.zpp_inner.at_index || null == this.zpp_inner.at_ite) this.zpp_inner.at_index = a, this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(a);
                    else
                        for (; this.zpp_inner.at_index != a;) this.zpp_inner.at_index++, this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
                    return this.zpp_inner.at_ite.elem().outer
                },
                remove: function(a) {
                    this.zpp_inner.modify_test();
                    this.zpp_inner.valmod();
                    var b = !1;
                    for (var c = this.zpp_inner.inner.begin(); null != c;) {
                        if (c.elem() == a.zpp_inner) {
                            b = !0;
                            break
                        }
                        c = c.next
                    }
                    b && (null != this.zpp_inner.subber && this.zpp_inner.subber(a), this.zpp_inner.dontremove || this.zpp_inner.inner.remove(a.zpp_inner), this.zpp_inner.invalidate());
                    return b
                },
                iterator: function() {
                    this.zpp_inner.valmod();
                    return ei.get(this)
                },
                toString: function() {
                    for (var a = "[", b = !0, c = this.iterator(); c.hasNext();) {
                        var d = c.next();
                        b || (a += ",");
                        a += null == d ? "NULL" : d.toString();
                        b = !1
                    }
                    return a +
                        "]"
                },
                __class__: Vu
            };
            var qw = function() {
                this.zpp_inner = null
            };
            g["nape.phys.FluidProperties"] = qw;
            qw.__name__ = ["nape", "phys", "FluidProperties"];
            qw.prototype = {
                zpp_inner: null,
                get_density: function() {
                    return 1E3 * this.zpp_inner.density
                },
                get_viscosity: function() {
                    return this.zpp_inner.viscosity
                },
                get_gravity: function() {
                    return this.zpp_inner.wrap_gravity
                },
                toString: function() {
                    return "{ density: " + this.get_density() + " viscosity: " + this.get_viscosity() + " gravity: " + E.string(this.get_gravity()) + " }"
                },
                __class__: qw
            };
            var uh =
                function() {};
            g["nape.phys.GravMassMode"] = uh;
            uh.__name__ = ["nape", "phys", "GravMassMode"];
            uh.get_DEFAULT = function() {
                null == N.GravMassMode_DEFAULT && (N.internal = !0, N.GravMassMode_DEFAULT = new uh, N.internal = !1);
                return N.GravMassMode_DEFAULT
            };
            uh.get_FIXED = function() {
                null == N.GravMassMode_FIXED && (N.internal = !0, N.GravMassMode_FIXED = new uh, N.internal = !1);
                return N.GravMassMode_FIXED
            };
            uh.get_SCALED = function() {
                null == N.GravMassMode_SCALED && (N.internal = !0, N.GravMassMode_SCALED = new uh, N.internal = !1);
                return N.GravMassMode_SCALED
            };
            uh.prototype = {
                toString: function() {
                    return this == uh.get_DEFAULT() ? "DEFAULT" : this == uh.get_FIXED() ? "FIXED" : this == uh.get_SCALED() ? "SCALED" : ""
                },
                __class__: uh
            };
            var yj = function() {};
            g["nape.phys.InertiaMode"] = yj;
            yj.__name__ = ["nape", "phys", "InertiaMode"];
            yj.get_DEFAULT = function() {
                null == N.InertiaMode_DEFAULT && (N.internal = !0, N.InertiaMode_DEFAULT = new yj, N.internal = !1);
                return N.InertiaMode_DEFAULT
            };
            yj.get_FIXED = function() {
                null == N.InertiaMode_FIXED && (N.internal = !0, N.InertiaMode_FIXED = new yj, N.internal = !1);
                return N.InertiaMode_FIXED
            };
            yj.prototype = {
                toString: function() {
                    return this == yj.get_DEFAULT() ? "DEFAULT" : this == yj.get_FIXED() ? "FIXED" : ""
                },
                __class__: yj
            };
            var fi = function() {
                this.zpp_next = null;
                this.zpp_critical = !1;
                this.zpp_i = 0;
                this.zpp_inner = null
            };
            g["nape.phys.InteractorIterator"] = fi;
            fi.__name__ = ["nape", "phys", "InteractorIterator"];
            fi.get = function(a) {
                if (null == fi.zpp_pool) {
                    Co.internal = !0;
                    var b = new fi;
                    Co.internal = !1
                } else b = fi.zpp_pool, fi.zpp_pool = b.zpp_next;
                b.zpp_i = 0;
                b.zpp_inner = a;
                b.zpp_critical = !1;
                return b
            };
            fi.prototype = {
                zpp_inner: null,
                zpp_i: null,
                zpp_critical: null,
                zpp_next: null,
                hasNext: function() {
                    this.zpp_inner.zpp_inner.valmod();
                    var a = this.zpp_inner.get_length();
                    this.zpp_critical = !0;
                    if (this.zpp_i < a) return !0;
                    this.zpp_next = fi.zpp_pool;
                    fi.zpp_pool = this;
                    this.zpp_inner = null;
                    return !1
                },
                next: function() {
                    this.zpp_critical = !1;
                    return this.zpp_inner.at(this.zpp_i++)
                },
                __class__: fi
            };
            var rw = function() {
                this.zpp_inner = null
            };
            g["nape.phys.InteractorList"] = rw;
            rw.__name__ = ["nape", "phys", "InteractorList"];
            rw.prototype = {
                zpp_inner: null,
                get_length: function() {
                    this.zpp_inner.valmod();
                    this.zpp_inner.zip_length && (this.zpp_inner.zip_length = !1, this.zpp_inner.user_length = this.zpp_inner.inner.length);
                    return this.zpp_inner.user_length
                },
                at: function(a) {
                    this.zpp_inner.valmod();
                    this.zpp_inner.reverse_flag && (a = this.get_length() - 1 - a);
                    if (a < this.zpp_inner.at_index || null == this.zpp_inner.at_ite) this.zpp_inner.at_index = a, this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(a);
                    else
                        for (; this.zpp_inner.at_index != a;) this.zpp_inner.at_index++, this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
                    return this.zpp_inner.at_ite.elem().outer_i
                },
                iterator: function() {
                    this.zpp_inner.valmod();
                    return fi.get(this)
                },
                toString: function() {
                    for (var a = "[", b = !0, c = this.iterator(); c.hasNext();) {
                        var d = c.next();
                        b || (a += ",");
                        a += null == d ? "NULL" : d.toString();
                        b = !1
                    }
                    return a + "]"
                },
                __class__: rw
            };
            var zj = function() {};
            g["nape.phys.MassMode"] = zj;
            zj.__name__ = ["nape", "phys", "MassMode"];
            zj.get_DEFAULT = function() {
                null == N.MassMode_DEFAULT && (N.internal = !0, N.MassMode_DEFAULT = new zj, N.internal = !1);
                return N.MassMode_DEFAULT
            };
            zj.get_FIXED = function() {
                null == N.MassMode_FIXED && (N.internal = !0, N.MassMode_FIXED = new zj, N.internal = !1);
                return N.MassMode_FIXED
            };
            zj.prototype = {
                toString: function() {
                    return this == zj.get_DEFAULT() ? "DEFAULT" : this == zj.get_FIXED() ? "FIXED" : ""
                },
                __class__: zj
            };
            var Wi = function() {
                this.zpp_inner_i = this.zpp_inner = null
            };
            g["nape.shape.Shape"] = Wi;
            Wi.__name__ = ["nape", "shape", "Shape"];
            Wi.__super__ = vj;
            Wi.prototype = p(vj.prototype, {
                zpp_inner: null,
                isCircle: function() {
                    return this.zpp_inner.isCircle()
                },
                get_body: function() {
                    return null != this.zpp_inner.body ? this.zpp_inner.body.outer : null
                },
                get_localCOM: function() {
                    null == this.zpp_inner.wrap_localCOM && (this.isCircle() ? this.zpp_inner.circle.setupLocalCOM() : this.zpp_inner.polygon.setupLocalCOM());
                    return this.zpp_inner.wrap_localCOM
                },
                get_material: function() {
                    return this.zpp_inner.material.wrapper()
                },
                set_material: function(a) {
                    this.zpp_inner.immutable_midstep("Shape::material");
                    this.zpp_inner.setMaterial(a.zpp_inner);
                    return this.get_material()
                },
                get_filter: function() {
                    return this.zpp_inner.filter.wrapper()
                },
                set_filter: function(a) {
                    this.zpp_inner.immutable_midstep("Shape::filter");
                    this.zpp_inner.setFilter(a.zpp_inner);
                    return this.get_filter()
                },
                translate: function(a) {
                    this.zpp_inner.immutable_midstep("Shape::translate()");
                    0 < a.lsq() && (this.isCircle() ? this.zpp_inner.circle.__translate(a.get_x(), a.get_y()) : this.zpp_inner.polygon.__translate(a.get_x(), a.get_y()));
                    a.zpp_inner.weak && a.dispose();
                    return this
                },
                scale: function(a, b) {
                    this.zpp_inner.immutable_midstep("Shape::scale()");
                    if (this.isCircle()) {
                        var c = a * a - b * b;
                        c * c < K.epsilon * K.epsilon && this.zpp_inner.circle.__scale(a, b)
                    } else this.zpp_inner.polygon.__scale(a,
                        b);
                    return this
                },
                rotate: function(a) {
                    this.zpp_inner.immutable_midstep("Shape::rotate()");
                    if (0 != a % (2 * Math.PI)) {
                        var b = Math.cos(a);
                        a = Math.sin(a);
                        this.isCircle() ? this.zpp_inner.circle.__rotate(a, b) : this.zpp_inner.polygon.__rotate(a, b)
                    }
                    return this
                },
                transform: function(a) {
                    this.zpp_inner.immutable_midstep("Shape::transform()");
                    this.isCircle() ? a.equiorthogonal() && this.zpp_inner.circle.__transform(a) : this.zpp_inner.polygon.__transform(a);
                    return this
                },
                toString: function() {
                    return (this.isCircle() ? "Circle" : "Polygon") +
                        "#" + this.get_id()
                },
                __class__: Wi
            });
            var bk = function(a, b, c, d) {
                this.zpp_inner_zn = null;
                Wi.call(this);
                this.zpp_inner_zn = new nr;
                this.zpp_inner_zn.outer = this;
                this.zpp_inner_zn.outer_zn = this;
                this.zpp_inner_i = this.zpp_inner = this.zpp_inner_zn;
                this.zpp_inner_i.outer_i = this;
                this.set_radius(a);
                null == b ? (this.zpp_inner.localCOMx = 0, this.zpp_inner.localCOMy = 0) : (this.zpp_inner.localCOMx = b.get_x(), this.zpp_inner.localCOMy = b.get_y(), b.zpp_inner.weak && b.dispose());
                null == c ? (null == dc.zpp_pool ? this.zpp_inner.material = new dc :
                    (this.zpp_inner.material = dc.zpp_pool, dc.zpp_pool = this.zpp_inner.material.next, this.zpp_inner.material.next = null), this.zpp_inner.material.alloc()) : this.set_material(c);
                null == d ? (null == rf.zpp_pool ? this.zpp_inner.filter = new rf : (this.zpp_inner.filter = rf.zpp_pool, rf.zpp_pool = this.zpp_inner.filter.next, this.zpp_inner.filter.next = null), this.zpp_inner.filter.alloc()) : this.set_filter(d);
                this.zpp_inner_i.insert_cbtype($e.get_ANY_SHAPE().zpp_inner)
            };
            g["nape.shape.Circle"] = bk;
            bk.__name__ = ["nape", "shape", "Circle"];
            bk.__super__ = Wi;
            bk.prototype = p(Wi.prototype, {
                zpp_inner_zn: null,
                get_radius: function() {
                    return this.zpp_inner_zn.radius
                },
                set_radius: function(a) {
                    this.zpp_inner.immutable_midstep("Circle::radius");
                    a != this.get_radius() && (this.zpp_inner_zn.radius = a, this.zpp_inner_zn.invalidate_radius());
                    return this.get_radius()
                },
                __class__: bk
            });
            var Wu = function() {
                this.zpp_inner = null
            };
            g["nape.shape.Edge"] = Wu;
            Wu.__name__ = ["nape", "shape", "Edge"];
            Wu.prototype = {
                zpp_inner: null,
                toString: function() {
                    if (null == this.zpp_inner.polygon) return "Edge(object-pooled)";
                    if (null == this.zpp_inner.polygon.body) return this.zpp_inner.polygon.validate_laxi(), "{ localNormal : { x: " + (this.zpp_inner.lnormx + " y: " + this.zpp_inner.lnormy + " } }");
                    this.zpp_inner.polygon.validate_gaxi();
                    return "{ localNormal : { x: " + (this.zpp_inner.lnormx + " y: " + this.zpp_inner.lnormy + " } worldNormal : { x: ") + (this.zpp_inner.gnormx + " y: " + this.zpp_inner.gnormy + " } }")
                },
                __class__: Wu
            };
            var gi = function() {
                this.zpp_next = null;
                this.zpp_critical = !1;
                this.zpp_i = 0;
                this.zpp_inner = null
            };
            g["nape.shape.EdgeIterator"] =
                gi;
            gi.__name__ = ["nape", "shape", "EdgeIterator"];
            gi.get = function(a) {
                if (null == gi.zpp_pool) {
                    Do.internal = !0;
                    var b = new gi;
                    Do.internal = !1
                } else b = gi.zpp_pool, gi.zpp_pool = b.zpp_next;
                b.zpp_i = 0;
                b.zpp_inner = a;
                b.zpp_critical = !1;
                return b
            };
            gi.prototype = {
                zpp_inner: null,
                zpp_i: null,
                zpp_critical: null,
                zpp_next: null,
                hasNext: function() {
                    this.zpp_inner.zpp_inner.valmod();
                    var a = this.zpp_inner.get_length();
                    this.zpp_critical = !0;
                    if (this.zpp_i < a) return !0;
                    this.zpp_next = gi.zpp_pool;
                    gi.zpp_pool = this;
                    this.zpp_inner = null;
                    return !1
                },
                next: function() {
                    this.zpp_critical = !1;
                    return this.zpp_inner.at(this.zpp_i++)
                },
                __class__: gi
            };
            var sw = function() {
                this.zpp_inner = null
            };
            g["nape.shape.EdgeList"] = sw;
            sw.__name__ = ["nape", "shape", "EdgeList"];
            sw.prototype = {
                zpp_inner: null,
                get_length: function() {
                    this.zpp_inner.valmod();
                    this.zpp_inner.zip_length && (this.zpp_inner.zip_length = !1, this.zpp_inner.user_length = this.zpp_inner.inner.length);
                    return this.zpp_inner.user_length
                },
                at: function(a) {
                    this.zpp_inner.valmod();
                    this.zpp_inner.reverse_flag && a != this.get_length() -
                        1 && (a = this.get_length() - 2 - a);
                    if (a < this.zpp_inner.at_index || null == this.zpp_inner.at_ite) this.zpp_inner.at_index = a, this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(a);
                    else
                        for (; this.zpp_inner.at_index != a;) this.zpp_inner.at_index++, this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
                    return this.zpp_inner.at_ite.elem().wrapper()
                },
                iterator: function() {
                    this.zpp_inner.valmod();
                    return gi.get(this)
                },
                toString: function() {
                    for (var a = "[", b = !0, c = this.iterator(); c.hasNext();) {
                        var d = c.next();
                        b || (a += ",");
                        a += null ==
                            d ? "NULL" : d.toString();
                        b = !1
                    }
                    return a + "]"
                },
                __class__: sw
            };
            var ad = function(a, b, c) {
                this.zpp_inner_zn = null;
                Wi.call(this);
                this.zpp_inner_zn = new or;
                this.zpp_inner_zn.outer = this;
                this.zpp_inner_zn.outer_zn = this;
                this.zpp_inner_i = this.zpp_inner = this.zpp_inner_zn;
                this.zpp_inner_i.outer_i = this;
                if (a instanceof Array && null == a.__enum__)
                    for (var d = 0; d < a.length;) {
                        var e = a[d];
                        ++d;
                        this.get_localVerts().push(e.copy())
                    } else if (E.is(a, Gg))
                        for (d = a.iterator(); d.hasNext();) e = d.next(), this.get_localVerts().push(e.copy());
                    else if (E.is(a,
                        Dh) && (d = a.zpp_inner.vertices, null != d))
                    for (e = d;;) {
                        var f = Wa.get(e.x, e.y);
                        e = e.next;
                        this.get_localVerts().push(f.copy());
                        f.dispose();
                        if (e == d) break
                    }
                if (a instanceof Array && null == a.__enum__)
                    for (d = 0; d < a.length;) e = a[d], e.zpp_inner.weak ? (e.dispose(), e = !0) : e = !1, e ? a.splice(d, 1) : ++d;
                else if (E.is(a, Gg))
                    for (null != a.zpp_inner._validate && a.zpp_inner._validate(), a = a.zpp_inner.inner, d = null, e = a.begin(); null != e;) f = e.elem(), f.outer.zpp_inner.weak ? (e = a.erase(d), f.outer.zpp_inner.weak && f.outer.dispose()) : (d = e, e = e.next);
                null == b ? (null == dc.zpp_pool ? this.zpp_inner.material = new dc : (this.zpp_inner.material = dc.zpp_pool, dc.zpp_pool = this.zpp_inner.material.next, this.zpp_inner.material.next = null), this.zpp_inner.material.alloc()) : this.set_material(b);
                null == c ? (null == rf.zpp_pool ? this.zpp_inner.filter = new rf : (this.zpp_inner.filter = rf.zpp_pool, rf.zpp_pool = this.zpp_inner.filter.next, this.zpp_inner.filter.next = null), this.zpp_inner.filter.alloc()) : this.set_filter(c);
                this.zpp_inner_i.insert_cbtype($e.get_ANY_SHAPE().zpp_inner)
            };
            g["nape.shape.Polygon"] =
                ad;
            ad.__name__ = ["nape", "shape", "Polygon"];
            ad.rect = function(a, b, c, d, e) {
                null == e && (e = !1);
                return [Wa.get(a, b, e), Wa.get(a + c, b, e), Wa.get(a + c, b + d, e), Wa.get(a, b + d, e)]
            };
            ad.box = function(a, b, c) {
                null == c && (c = !1);
                return ad.rect(-a / 2, -b / 2, a, b, c)
            };
            ad.__super__ = Wi;
            ad.prototype = p(Wi.prototype, {
                zpp_inner_zn: null,
                get_localVerts: function() {
                    null == this.zpp_inner_zn.wrap_lverts && this.zpp_inner_zn.getlverts();
                    return this.zpp_inner_zn.wrap_lverts
                },
                __class__: ad
            });
            var hi = function() {
                this.zpp_next = null;
                this.zpp_critical = !1;
                this.zpp_i =
                    0;
                this.zpp_inner = null
            };
            g["nape.shape.ShapeIterator"] = hi;
            hi.__name__ = ["nape", "shape", "ShapeIterator"];
            hi.get = function(a) {
                if (null == hi.zpp_pool) {
                    Aj.internal = !0;
                    var b = new hi;
                    Aj.internal = !1
                } else b = hi.zpp_pool, hi.zpp_pool = b.zpp_next;
                b.zpp_i = 0;
                b.zpp_inner = a;
                b.zpp_critical = !1;
                return b
            };
            hi.prototype = {
                zpp_inner: null,
                zpp_i: null,
                zpp_critical: null,
                zpp_next: null,
                hasNext: function() {
                    this.zpp_inner.zpp_inner.valmod();
                    var a = this.zpp_inner.get_length();
                    this.zpp_critical = !0;
                    if (this.zpp_i < a) return !0;
                    this.zpp_next = hi.zpp_pool;
                    hi.zpp_pool = this;
                    this.zpp_inner = null;
                    return !1
                },
                next: function() {
                    this.zpp_critical = !1;
                    return this.zpp_inner.at(this.zpp_i++)
                },
                __class__: hi
            };
            var Eo = function() {
                this.zpp_inner = null;
                this.zpp_inner = new Aj;
                this.zpp_inner.outer = this
            };
            g["nape.shape.ShapeList"] = Eo;
            Eo.__name__ = ["nape", "shape", "ShapeList"];
            Eo.prototype = {
                zpp_inner: null,
                get_length: function() {
                    this.zpp_inner.valmod();
                    this.zpp_inner.zip_length && (this.zpp_inner.zip_length = !1, this.zpp_inner.user_length = this.zpp_inner.inner.length);
                    return this.zpp_inner.user_length
                },
                at: function(a) {
                    this.zpp_inner.valmod();
                    this.zpp_inner.reverse_flag && (a = this.get_length() - 1 - a);
                    if (a < this.zpp_inner.at_index || null == this.zpp_inner.at_ite) this.zpp_inner.at_index = a, this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(a);
                    else
                        for (; this.zpp_inner.at_index != a;) this.zpp_inner.at_index++, this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
                    return this.zpp_inner.at_ite.elem().outer
                },
                push: function(a) {
                    this.zpp_inner.modify_test();
                    this.zpp_inner.valmod();
                    var b = null != this.zpp_inner.adder ? this.zpp_inner.adder(a) :
                        !0;
                    if (b) {
                        if (this.zpp_inner.reverse_flag) this.zpp_inner.inner.add(a.zpp_inner);
                        else {
                            if (null == this.zpp_inner.push_ite) {
                                var c = this.empty() ? null : this.zpp_inner.inner.iterator_at(this.get_length() - 1);
                                this.zpp_inner.push_ite = c
                            }
                            this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite, a.zpp_inner)
                        }
                        this.zpp_inner.invalidate();
                        null != this.zpp_inner.post_adder && this.zpp_inner.post_adder(a)
                    }
                    return b
                },
                unshift: function(a) {
                    this.zpp_inner.modify_test();
                    this.zpp_inner.valmod();
                    var b = null != this.zpp_inner.adder ?
                        this.zpp_inner.adder(a) : !0;
                    if (b) {
                        if (this.zpp_inner.reverse_flag) {
                            if (null == this.zpp_inner.push_ite) {
                                var c = this.empty() ? null : this.zpp_inner.inner.iterator_at(this.get_length() - 1);
                                this.zpp_inner.push_ite = c
                            }
                            this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite, a.zpp_inner)
                        } else this.zpp_inner.inner.add(a.zpp_inner);
                        this.zpp_inner.invalidate();
                        null != this.zpp_inner.post_adder && this.zpp_inner.post_adder(a)
                    }
                    return b
                },
                add: function(a) {
                    return this.zpp_inner.reverse_flag ? this.push(a) : this.unshift(a)
                },
                remove: function(a) {
                    this.zpp_inner.modify_test();
                    this.zpp_inner.valmod();
                    var b = !1;
                    for (var c = this.zpp_inner.inner.begin(); null != c;) {
                        if (c.elem() == a.zpp_inner) {
                            b = !0;
                            break
                        }
                        c = c.next
                    }
                    b && (null != this.zpp_inner.subber && this.zpp_inner.subber(a), this.zpp_inner.dontremove || this.zpp_inner.inner.remove(a.zpp_inner), this.zpp_inner.invalidate());
                    return b
                },
                empty: function() {
                    return this.zpp_inner.inner.empty()
                },
                iterator: function() {
                    this.zpp_inner.valmod();
                    return hi.get(this)
                },
                toString: function() {
                    for (var a = "[", b = !0, c =
                            this.iterator(); c.hasNext();) {
                        var d = c.next();
                        b || (a += ",");
                        a += null == d ? "NULL" : d.toString();
                        b = !1
                    }
                    return a + "]"
                },
                __class__: Eo
            };
            var Bj = function() {};
            g["nape.shape.ShapeType"] = Bj;
            Bj.__name__ = ["nape", "shape", "ShapeType"];
            Bj.get_CIRCLE = function() {
                null == N.ShapeType_CIRCLE && (N.internal = !0, N.ShapeType_CIRCLE = new Bj, N.internal = !1);
                return N.ShapeType_CIRCLE
            };
            Bj.get_POLYGON = function() {
                null == N.ShapeType_POLYGON && (N.internal = !0, N.ShapeType_POLYGON = new Bj, N.internal = !1);
                return N.ShapeType_POLYGON
            };
            Bj.prototype = {
                toString: function() {
                    return this ==
                        Bj.get_CIRCLE() ? "CIRCLE" : this == Bj.get_POLYGON() ? "POLYGON" : ""
                },
                __class__: Bj
            };
            var ag = function() {};
            g["nape.shape.ValidationResult"] = ag;
            ag.__name__ = ["nape", "shape", "ValidationResult"];
            ag.get_VALID = function() {
                null == N.ValidationResult_VALID && (N.internal = !0, N.ValidationResult_VALID = new ag, N.internal = !1);
                return N.ValidationResult_VALID
            };
            ag.get_DEGENERATE = function() {
                null == N.ValidationResult_DEGENERATE && (N.internal = !0, N.ValidationResult_DEGENERATE = new ag, N.internal = !1);
                return N.ValidationResult_DEGENERATE
            };
            ag.get_CONCAVE = function() {
                null == N.ValidationResult_CONCAVE && (N.internal = !0, N.ValidationResult_CONCAVE = new ag, N.internal = !1);
                return N.ValidationResult_CONCAVE
            };
            ag.get_SELF_INTERSECTING = function() {
                null == N.ValidationResult_SELF_INTERSECTING && (N.internal = !0, N.ValidationResult_SELF_INTERSECTING = new ag, N.internal = !1);
                return N.ValidationResult_SELF_INTERSECTING
            };
            ag.prototype = {
                toString: function() {
                    return this == ag.get_VALID() ? "VALID" : this == ag.get_DEGENERATE() ? "DEGENERATE" : this == ag.get_CONCAVE() ? "CONCAVE" : this ==
                        ag.get_SELF_INTERSECTING() ? "SELF_INTERSECTING" : ""
                },
                __class__: ag
            };
            var dh = function() {};
            g["nape.space.Broadphase"] = dh;
            dh.__name__ = ["nape", "space", "Broadphase"];
            dh.get_DYNAMIC_AABB_TREE = function() {
                null == N.Broadphase_DYNAMIC_AABB_TREE && (N.internal = !0, N.Broadphase_DYNAMIC_AABB_TREE = new dh, N.internal = !1);
                return N.Broadphase_DYNAMIC_AABB_TREE
            };
            dh.get_SWEEP_AND_PRUNE = function() {
                null == N.Broadphase_SWEEP_AND_PRUNE && (N.internal = !0, N.Broadphase_SWEEP_AND_PRUNE = new dh, N.internal = !1);
                return N.Broadphase_SWEEP_AND_PRUNE
            };
            dh.prototype = {
                toString: function() {
                    return this == dh.get_DYNAMIC_AABB_TREE() ? "DYNAMIC_AABB_TREE" : this == dh.get_SWEEP_AND_PRUNE() ? "SWEEP_AND_PRUNE" : ""
                },
                __class__: dh
            };
            var gt = function(a, b) {
                this.zpp_inner = null;
                this.zpp_inner = new Xu(null == a ? null : a.zpp_inner, b);
                this.zpp_inner.outer = this;
                null != a && a.zpp_inner.weak && a.dispose()
            };
            g["nape.space.Space"] = gt;
            gt.__name__ = ["nape", "space", "Space"];
            gt.prototype = {
                zpp_inner: null,
                get_worldAngularDrag: function() {
                    return this.zpp_inner.global_ang_drag
                },
                set_worldAngularDrag: function(a) {
                    this.zpp_inner.global_ang_drag =
                        a;
                    return this.get_worldAngularDrag()
                },
                get_worldLinearDrag: function() {
                    return this.zpp_inner.global_lin_drag
                },
                set_worldLinearDrag: function(a) {
                    this.zpp_inner.global_lin_drag = a;
                    return this.get_worldLinearDrag()
                },
                get_bodies: function() {
                    return this.zpp_inner.wrap_bodies
                },
                get_constraints: function() {
                    return this.zpp_inner.wrap_constraints
                },
                get_world: function() {
                    return this.zpp_inner.__static
                },
                get_listeners: function() {
                    return this.zpp_inner.wrap_listeners
                },
                clear: function() {
                    this.zpp_inner.clear()
                },
                step: function(a,
                    b, c) {
                    null == c && (c = 10);
                    null == b && (b = 10);
                    this.zpp_inner.step(a, b, c)
                },
                shapesInCircle: function(a, b, c, d, e) {
                    null == c && (c = !1);
                    b = this.zpp_inner.shapesInCircle(a, b, c, null == d ? null : d.zpp_inner, e);
                    a.zpp_inner.weak && a.dispose();
                    return b
                },
                __class__: gt
            };
            var ia = function() {};
            g["openfl.Lib"] = ia;
            ia.__name__ = ["openfl", "Lib"];
            ia.getTimer = function() {
                return je.getTimer()
            };
            ia.getURL = function(a, b) {
                ia.navigateToURL(a, b)
            };
            ia.navigateToURL = function(a, b) {
                null == b && (b = "_blank");
                var c = a.url;
                if (Q["typeof"](a.data) == Yb.TObject) {
                    for (var d =
                            "", e = T.fields(a.data), f = 0; f < e.length;) {
                        var h = e[f];
                        ++f;
                        0 < d.length && (d += "&");
                        d += ka.urlEncode(h) + "=" + ka.urlEncode(E.string(T.field(a.data, h)))
                    }
                    c = -1 < c.indexOf("?") ? c + ("&" + d) : c + ("?" + d)
                }
                je.openURL(c, b)
            };
            ia.get_application = function() {
                return fc.application
            };
            ia.get_current = function() {
                null == fc.current && (fc.current = new n);
                return fc.current
            };
            var Cj = function() {};
            g["openfl._Vector.IVector"] = Cj;
            Cj.__name__ = ["openfl", "_Vector", "IVector"];
            Cj.prototype = {
                get_length: null,
                get: null,
                __class__: Cj
            };
            var pr = function() {};
            g["openfl._Vector.BoolVector"] =
                pr;
            pr.__name__ = ["openfl", "_Vector", "BoolVector"];
            pr.__interfaces__ = [Cj];
            pr.prototype = {
                __array: null,
                get: function(a) {
                    return a >= this.__array.length ? !1 : this.__array[a]
                },
                toJSON: function() {
                    return this.__array
                },
                get_length: function() {
                    return this.__array.length
                },
                __class__: pr
            };
            var zi = function(a, b, c, d) {
                null == d && (d = !1);
                null == b && (b = !1);
                null == a && (a = 0);
                if (d) {
                    if (this.__array = [], null != c) {
                        d = 0;
                        for (var e = c.length; d < e;) {
                            var f = d++;
                            this.__array[f] = c[f]
                        }
                    }
                } else null == c && (c = []), this.__array = c;
                0 < a && this.set_length(a);
                this.fixed =
                    b
            };
            g["openfl._Vector.FloatVector"] = zi;
            zi.__name__ = ["openfl", "_Vector", "FloatVector"];
            zi.__interfaces__ = [Cj];
            zi.prototype = {
                fixed: null,
                __array: null,
                concat: function(a) {
                    return null == a ? new zi(0, !1, this.__array.slice()) : 0 < a.__array.length ? new zi(0, !1, this.__array.concat(a.__array)) : new zi(0, !1, this.__array.slice())
                },
                copy: function() {
                    return new zi(0, this.fixed, this.__array.slice())
                },
                get: function(a) {
                    return this.__array[a]
                },
                push: function(a) {
                    return this.fixed ? this.__array.length : this.__array.push(a)
                },
                set: function(a,
                    b) {
                    return !this.fixed || a < this.__array.length ? this.__array[a] = b : b
                },
                toJSON: function() {
                    return this.__array
                },
                get_length: function() {
                    return this.__array.length
                },
                set_length: function(a) {
                    if (a != this.__array.length && !this.fixed) {
                        var b = this.__array.length;
                        0 > a && (a = 0);
                        if (a > b)
                            for (; b < a;) {
                                var c = b++;
                                this.__array[c] = 0
                            } else
                                for (; this.__array.length > a;) this.__array.pop()
                    }
                    return this.__array.length
                },
                __class__: zi
            };
            var qr = function() {};
            g["openfl._Vector.FunctionVector"] = qr;
            qr.__name__ = ["openfl", "_Vector", "FunctionVector"];
            qr.__interfaces__ = [Cj];
            qr.prototype = {
                __array: null,
                get: function(a) {
                    return a >= this.__array.length ? null : this.__array[a]
                },
                toJSON: function() {
                    return this.__array
                },
                get_length: function() {
                    return this.__array.length
                },
                __class__: qr
            };
            var Ul = function(a, b, c) {
                null == b && (b = !1);
                null == a && (a = 0);
                null == c && (c = []);
                this.__array = c;
                0 < a && this.set_length(a);
                this.fixed = b
            };
            g["openfl._Vector.IntVector"] = Ul;
            Ul.__name__ = ["openfl", "_Vector", "IntVector"];
            Ul.__interfaces__ = [Cj];
            Ul.prototype = {
                fixed: null,
                __array: null,
                get: function(a) {
                    return this.__array[a]
                },
                push: function(a) {
                    return this.fixed ? this.__array.length : this.__array.push(a)
                },
                toJSON: function() {
                    return this.__array
                },
                get_length: function() {
                    return this.__array.length
                },
                set_length: function(a) {
                    if (!this.fixed) {
                        var b = this.__array.length;
                        0 > a && (a = 0);
                        if (a > b)
                            for (; b < a;) {
                                var c = b++;
                                this.__array[c] = 0
                            } else
                                for (; this.__array.length > a;) this.__array.pop()
                    }
                    return this.__array.length
                },
                __class__: Ul
            };
            var Ck = function(a, b, c, d) {
                null == d && (d = !1);
                null == b && (b = !1);
                null == a && (a = 0);
                if (d) {
                    if (this.__array = [], null != c) {
                        d = 0;
                        for (var e =
                                c.length; d < e;) {
                            var f = d++;
                            this.__array[f] = c[f]
                        }
                    }
                } else null == c && (c = []), this.__array = c;
                0 < a && this.set_length(a);
                this.fixed = b
            };
            g["openfl._Vector.ObjectVector"] = Ck;
            Ck.__name__ = ["openfl", "_Vector", "ObjectVector"];
            Ck.__interfaces__ = [Cj];
            Ck.prototype = {
                fixed: null,
                __array: null,
                get: function(a) {
                    return this.__array[a]
                },
                indexOf: function(a, b) {
                    null == b && (b = 0);
                    for (var c = this.__array.length; b < c;) {
                        var d = b++;
                        if (this.__array[d] == a) return d
                    }
                    return -1
                },
                insertAt: function(a, b) {
                    (!this.fixed || a < this.__array.length) && this.__array.splice(a,
                        0, b)
                },
                push: function(a) {
                    return this.fixed ? this.__array.length : this.__array.push(a)
                },
                set: function(a, b) {
                    return !this.fixed || a < this.__array.length ? this.__array[a] = b : b
                },
                splice: function(a, b) {
                    return new Ck(0, !1, this.__array.splice(a, b))
                },
                toJSON: function() {
                    return this.__array
                },
                get_length: function() {
                    return this.__array.length
                },
                set_length: function(a) {
                    if (!this.fixed) {
                        var b = this.__array.length;
                        0 > a && (a = 0);
                        if (a > b)
                            for (; b < a;) b++, this.__array.push(null);
                        else
                            for (; this.__array.length > a;) this.__array.pop()
                    }
                    return this.__array.length
                },
                __class__: Ck
            };
            var fc = function() {};
            g["openfl._internal.Lib"] = fc;
            fc.__name__ = ["openfl", "_internal", "Lib"];
            var eb = function() {};
            g["openfl._internal.formats.html.HTMLParser"] = eb;
            eb.__name__ = ["openfl", "_internal", "formats", "html", "HTMLParser"];
            eb.parse = function(a, b, c) {
                a = eb.__regexBreakTag.replace(a, "\n");
                a = eb.__regexEntities[0].replace(a, '"');
                a = eb.__regexEntities[1].replace(a, "'");
                a = eb.__regexEntities[2].replace(a, "&");
                a = eb.__regexEntities[5].replace(a, " ");
                var d = a.split("<");
                if (1 == d.length) a = eb.__regexHTMLTag.replace(a,
                    ""), 1 < c.get_length() && c.splice(1, c.get_length() - 1), a = eb.__regexEntities[3].replace(a, "<"), a = eb.__regexEntities[4].replace(a, ">"), c = c.get(0), c.format = b, c.start = 0, c.end = a.length;
                else {
                    c.splice(0, c.get_length());
                    a = "";
                    for (var e, f = 0, h = d.length; f < h;) {
                        var k = f++;
                        e = d[k];
                        e = eb.__regexEntities[3].replace(e, "<");
                        e = eb.__regexEntities[4].replace(e, ">");
                        d[k] = e
                    }
                    e = [b.clone()];
                    f = [];
                    k = !1;
                    for (h = 0; h < d.length;) {
                        var m = d[h];
                        ++h;
                        if ("" != m) {
                            var g = "/" == la.substr(m, 0, 1),
                                l = m.indexOf(">"),
                                n = l + 1,
                                p = m.indexOf(" ");
                            p = m.substring(g ? 1 :
                                0, -1 < p && p < l ? p : l);
                            if (g) 0 == f.length || p.toLowerCase() != f[f.length - 1].toLowerCase() ? Za.info("Invalid HTML, unexpected closing tag ignored: " + p, {
                                fileName: "HTMLParser.hx",
                                lineNumber: 97,
                                className: "openfl._internal.formats.html.HTMLParser",
                                methodName: "parse"
                            }) : (f.pop(), e.pop(), g = e[e.length - 1].clone(), "p" == p.toLowerCase() && 0 < c.get_length() && (a += "\n", k = !0), n < m.length && (k = la.substr(m, n, null), c.push(new Xi(g, a.length, a.length + k.length)), a += k, k = !1));
                            else if (g = e[e.length - 1].clone(), -1 < l) {
                                switch (p.toLowerCase()) {
                                    case "a":
                                        eb.__regexHref.match(m) &&
                                            (g.url = eb.__getAttributeMatch(eb.__regexHref));
                                        break;
                                    case "b":
                                        g.bold = !0;
                                        break;
                                    case "em":
                                    case "i":
                                        g.italic = !0;
                                        break;
                                    case "font":
                                        eb.__regexFace.match(m) && (g.font = eb.__getAttributeMatch(eb.__regexFace));
                                        eb.__regexColor.match(m) && (g.color = E.parseInt("0x" + eb.__getAttributeMatch(eb.__regexColor)));
                                        if (eb.__regexSize.match(m)) {
                                            l = eb.__getAttributeMatch(eb.__regexSize);
                                            var x = la.cca(l, 0);
                                            g.size = 43 == x || 45 == x ? (2 <= e.length ? e[e.length - 2] : b).size + E.parseInt(l) : E.parseInt(l)
                                        }
                                        break;
                                    case "p":
                                        0 < c.get_length() && !k && (a +=
                                            "\n");
                                        eb.__regexAlign.match(m) && (l = eb.__getAttributeMatch(eb.__regexAlign).toLowerCase(), g.align = tw.fromString(l));
                                        break;
                                    case "textformat":
                                        eb.__regexBlockIndent.match(m) && (g.blockIndent = E.parseInt(eb.__getAttributeMatch(eb.__regexBlockIndent)));
                                        eb.__regexIndent.match(m) && (g.indent = E.parseInt(eb.__getAttributeMatch(eb.__regexIndent)));
                                        eb.__regexLeading.match(m) && (g.leading = E.parseInt(eb.__getAttributeMatch(eb.__regexLeading)));
                                        eb.__regexLeftMargin.match(m) && (g.leftMargin = E.parseInt(eb.__getAttributeMatch(eb.__regexLeftMargin)));
                                        eb.__regexRightMargin.match(m) && (g.rightMargin = E.parseInt(eb.__getAttributeMatch(eb.__regexRightMargin)));
                                        if (eb.__regexTabStops.match(m)) {
                                            l = eb.__getAttributeMatch(eb.__regexTabStops).split(" ");
                                            x = [];
                                            for (var u = 0; u < l.length;) {
                                                var z = l[u];
                                                ++u;
                                                x.push(E.parseInt(z))
                                            }
                                            g.tabStops = x
                                        }
                                        break;
                                    case "u":
                                        g.underline = !0
                                }
                                e.push(g);
                                f.push(p);
                                n < m.length && (k = m.substring(n), c.push(new Xi(g, a.length, a.length + k.length)), a += k, k = !1)
                            } else c.push(new Xi(g, a.length, a.length + m.length)), a += m, k = !1
                        }
                    }
                    0 == c.get_length() && c.push(new Xi(e[0],
                        0, 0))
                }
                return a
            };
            eb.__getAttributeMatch = function(a) {
                return null != a.matched(2) ? a.matched(2) : a.matched(3)
            };
            var tk = function() {
                this.rollOutStack = []
            };
            g["openfl._internal.utils.TouchData"] = tk;
            tk.__name__ = ["openfl", "_internal", "utils", "TouchData"];
            tk.prototype = {
                rollOutStack: null,
                touch: null,
                touchDownTarget: null,
                touchOverTarget: null,
                reset: function() {
                    this.touchOverTarget = this.touchDownTarget = this.touch = null;
                    this.rollOutStack.splice(0, this.rollOutStack.length)
                },
                __class__: tk
            };
            var Rl = function() {
                oa.call(this);
                null ==
                    fc.application && (fc.application = this);
                null == fc.current && (fc.current = new n);
                fc.current.__loaderInfo = Yi.create(null);
                fc.current.__loaderInfo.content = fc.current
            };
            g["openfl.display.Application"] = Rl;
            Rl.__name__ = ["openfl", "display", "Application"];
            Rl.__super__ = oa;
            Rl.prototype = p(oa.prototype, {
                createWindow: function(a) {
                    var b = new Bk(this, a);
                    this.__windows.push(b);
                    this.__windowByID.set(b.id, b);
                    var c = q(this, this.__onWindowClose);
                    b.onClose.add(function() {
                        c(b)
                    }, !1, -1E4);
                    null == this.__window && (this.__window = b, b.onActivate.add(q(this,
                        this.onWindowActivate)), b.onRenderContextLost.add(q(this, this.onRenderContextLost)), b.onRenderContextRestored.add(q(this, this.onRenderContextRestored)), b.onDeactivate.add(q(this, this.onWindowDeactivate)), b.onDropFile.add(q(this, this.onWindowDropFile)), b.onEnter.add(q(this, this.onWindowEnter)), b.onExpose.add(q(this, this.onWindowExpose)), b.onFocusIn.add(q(this, this.onWindowFocusIn)), b.onFocusOut.add(q(this, this.onWindowFocusOut)), b.onFullscreen.add(q(this, this.onWindowFullscreen)), b.onKeyDown.add(q(this,
                        this.onKeyDown)), b.onKeyUp.add(q(this, this.onKeyUp)), b.onLeave.add(q(this, this.onWindowLeave)), b.onMinimize.add(q(this, this.onWindowMinimize)), b.onMouseDown.add(q(this, this.onMouseDown)), b.onMouseMove.add(q(this, this.onMouseMove)), b.onMouseMoveRelative.add(q(this, this.onMouseMoveRelative)), b.onMouseUp.add(q(this, this.onMouseUp)), b.onMouseWheel.add(q(this, this.onMouseWheel)), b.onMove.add(q(this, this.onWindowMove)), b.onRender.add(q(this, this.render)), b.onResize.add(q(this, this.onWindowResize)), b.onRestore.add(q(this,
                        this.onWindowRestore)), b.onTextEdit.add(q(this, this.onTextEdit)), b.onTextInput.add(q(this, this.onTextInput)), this.onWindowCreate());
                    this.onCreateWindow.dispatch(b);
                    return b
                },
                __class__: Rl
            });
            var If = function(a, b, c) {
                null == c && (c = !1);
                R.call(this);
                this.__bitmapData = a;
                this.pixelSnapping = b;
                this.smoothing = c;
                null == b && (this.pixelSnapping = 1)
            };
            g["openfl.display.Bitmap"] = If;
            If.__name__ = ["openfl", "display", "Bitmap"];
            If.__super__ = R;
            If.prototype = p(R.prototype, {
                pixelSnapping: null,
                smoothing: null,
                __image: null,
                __bitmapData: null,
                __imageVersion: null,
                __enterFrame: function(a) {
                    null != this.__bitmapData && null != this.__bitmapData.image && this.__bitmapData.image.version != this.__imageVersion && this.__setRenderDirty()
                },
                __getBounds: function(a, b) {
                    var c = hb.__pool.get();
                    null != this.__bitmapData ? c.setTo(0, 0, this.__bitmapData.width, this.__bitmapData.height) : c.setTo(0, 0, 0, 0);
                    c.__transform(c, b);
                    a.__expand(c.x, c.y, c.width, c.height);
                    hb.__pool.release(c)
                },
                __hitTest: function(a, b, c, d, e, f) {
                    if (!f.get_visible() || this.__isMask || null == this.__bitmapData ||
                        null != this.get_mask() && !this.get_mask().__hitTestMask(a, b)) return !1;
                    this.__getRenderTransform();
                    c = this.__renderTransform.__transformInverseX(a, b);
                    a = this.__renderTransform.__transformInverseY(a, b);
                    if (0 < c && 0 < a && c <= this.__bitmapData.width && a <= this.__bitmapData.height) {
                        if (null != this.__scrollRect && !this.__scrollRect.contains(c, a)) return !1;
                        null == d || e || d.push(f);
                        return !0
                    }
                    return !1
                },
                __hitTestMask: function(a, b) {
                    if (null == this.__bitmapData) return !1;
                    this.__getRenderTransform();
                    var c = this.__renderTransform.__transformInverseX(a,
                        b);
                    a = this.__renderTransform.__transformInverseY(a, b);
                    return 0 < c && 0 < a && c <= this.__bitmapData.width && a <= this.__bitmapData.height ? !0 : !1
                },
                __renderCanvas: function(a) {
                    this.__updateCacheBitmap(a, !1);
                    null != this.__bitmapData && null != this.__bitmapData.image && (this.__imageVersion = this.__bitmapData.image.version);
                    null == this.__cacheBitmap || this.__isCacheBitmapRender ? (Vl.render(this, a), Dk.render(this, a)) : Dk.render(this.__cacheBitmap, a);
                    this.__renderEvent(a)
                },
                __renderCanvasMask: function(a) {
                    a.context.rect(0, 0, this.get_width(),
                        this.get_height())
                },
                __renderDOM: function(a) {
                    this.__updateCacheBitmap(a, !1);
                    null == this.__cacheBitmap || this.__isCacheBitmapRender ? (Ek.render(this, a), Hf.render(this, a)) : (this.__renderDOMClear(a), this.__cacheBitmap.stage = this.stage, Hf.render(this.__cacheBitmap, a));
                    this.__renderEvent(a)
                },
                __renderDOMClear: function(a) {
                    Hf.clear(this, a)
                },
                __renderGL: function(a) {
                    this.__updateCacheBitmap(a, !1);
                    null != this.__bitmapData && null != this.__bitmapData.image && (this.__imageVersion = this.__bitmapData.image.version);
                    null ==
                        this.__cacheBitmap || this.__isCacheBitmapRender ? (Wl.render(this, a), cj.render(this, a)) : cj.render(this.__cacheBitmap, a);
                    this.__renderEvent(a)
                },
                __renderGLMask: function(a) {
                    cj.renderMask(this, a)
                },
                __updateCacheBitmap: function(a, b) {
                    return null == this.__bitmapData || null == this.__filters && "opengl" == a.__type && null == this.__cacheBitmap ? !1 : R.prototype.__updateCacheBitmap.call(this, a, null != this.__bitmapData.image && this.__bitmapData.image.version != this.__imageVersion)
                },
                get_bitmapData: function() {
                    return this.__bitmapData
                },
                set_bitmapData: function(a) {
                    this.__bitmapData = a;
                    this.smoothing = !1;
                    this.__setRenderDirty();
                    this.__imageVersion = -1;
                    return this.__bitmapData
                },
                set_height: function(a) {
                    null != this.__bitmapData ? this.set_scaleY(a / this.__bitmapData.height) : this.set_scaleY(0);
                    return a
                },
                set_width: function(a) {
                    null != this.__bitmapData ? this.set_scaleX(a / this.__bitmapData.width) : this.set_scaleX(0);
                    return a
                },
                __class__: If
            });
            var Kb = function(a, b, c, d) {
                null == d && (d = -1);
                null == c && (c = !0);
                this.transparent = c;
                null == a && (a = 0);
                null == b && (b = 0);
                0 > a &&
                    (a = 0);
                0 > b && (b = 0);
                this.width = a;
                this.height = b;
                this.rect = new hb(0, 0, a, b);
                this.__textureWidth = a;
                this.__textureHeight = b;
                0 < a && 0 < b && (c ? 0 == (d & -16777216) && (d = 0) : d = -16777216 | d & 16777215, this.image = new Cb(null, 0, 0, a, b, d << 8 | d >>> 24 & 255), this.image.set_transparent(c), this.readable = this.__isValid = !0);
                this.__renderTransform = new Ya;
                this.__worldAlpha = 1;
                this.__worldTransform = new Ya;
                this.__worldColorTransform = new mc;
                this.__renderable = !0
            };
            g["openfl.display.BitmapData"] = Kb;
            Kb.__name__ = ["openfl", "display", "BitmapData"];
            Kb.__interfaces__ = [fa];
            Kb.fromBase64 = function(a, b) {
                return null
            };
            Kb.fromBytes = function(a, b) {
                return null
            };
            Kb.fromCanvas = function(a, b) {
                null == b && (b = !0);
                if (null == a) return null;
                var c = new Kb(0, 0, b, 0);
                c.__fromImage(Cb.fromCanvas(a));
                c.image.set_transparent(b);
                return c
            };
            Kb.fromFile = function(a) {
                return null
            };
            Kb.fromImage = function(a, b) {
                null == b && (b = !0);
                if (null == a || null == a.buffer) return null;
                var c = new Kb(0, 0, b, 0);
                c.__fromImage(a);
                c.image.set_transparent(b);
                return null != c.image ? c : null
            };
            Kb.fromTexture = function(a) {
                if (null ==
                    a) return null;
                var b = new Kb(a.__width, a.__height, !0, 0);
                b.readable = !1;
                b.__texture = a;
                b.__textureContext = a.__textureContext;
                b.image = null;
                return b
            };
            Kb.loadFromBase64 = function(a, b) {
                return Cb.loadFromBase64(a, b).then(function(a) {
                    return oc.withValue(Kb.fromImage(a))
                })
            };
            Kb.loadFromBytes = function(a, b) {
                return Cb.loadFromBytes(Ve.toBytes(a)).then(function(a) {
                    a = Kb.fromImage(a);
                    null != b && a.__applyAlpha(b);
                    return oc.withValue(a)
                })
            };
            Kb.loadFromFile = function(a) {
                return Cb.loadFromFile(a).then(function(a) {
                    return oc.withValue(Kb.fromImage(a))
                })
            };
            Kb.prototype = {
                height: null,
                image: null,
                readable: null,
                rect: null,
                transparent: null,
                width: null,
                __framebuffer: null,
                __framebufferContext: null,
                __indexBuffer: null,
                __indexBufferContext: null,
                __indexBufferData: null,
                __indexBufferGrid: null,
                __isValid: null,
                __mask: null,
                __renderable: null,
                __renderTransform: null,
                __scrollRect: null,
                __surface: null,
                __texture: null,
                __textureContext: null,
                __textureHeight: null,
                __textureVersion: null,
                __textureWidth: null,
                __uvRect: null,
                __vertexBuffer: null,
                __vertexBufferContext: null,
                __vertexBufferData: null,
                __vertexBufferGrid: null,
                __vertexBufferHeight: null,
                __vertexBufferScaleX: null,
                __vertexBufferScaleY: null,
                __vertexBufferWidth: null,
                __worldAlpha: null,
                __worldColorTransform: null,
                __worldTransform: null,
                colorTransform: function(a, b) {
                    this.readable && this.image.colorTransform(a.__toLimeRectangle(), b.__toLimeColorMatrix())
                },
                copyPixels: function(a, b, c, d, e, f) {
                    null == f && (f = !1);
                    this.readable && null != a && (null != e && (Kb.__tempVector.x = e.x, Kb.__tempVector.y = e.y), this.image.copyPixels(a.image, b.__toLimeRectangle(), c.__toLimeVector2(),
                        null != d ? d.image : null, null != e ? Kb.__tempVector : null, f))
                },
                dispose: function() {
                    this.image = null;
                    this.height = this.width = 0;
                    this.rect = null;
                    this.readable = this.__isValid = !1;
                    this.__textureContext = this.__texture = this.__framebufferContext = this.__framebuffer = this.__vertexBuffer = this.__surface = null
                },
                draw: function(a, b, c, d, e, f) {
                    null == f && (f = !1);
                    if (null != a) {
                        a.__update(!1, !0);
                        var h = Ya.__pool.get();
                        h.copyFrom(a.__renderTransform);
                        h.invert();
                        null != b && h.concat(b);
                        b = null;
                        null != e && (b = Ya.__pool.get(), b.copyFrom(h), b.invert());
                        var k = new mc;
                        k.__copyFrom(a.__worldColorTransform);
                        k.__invert();
                        if (this.readable || null == ia.get_current().stage.context3D) {
                            if (null != c) {
                                var m = hb.__pool.get(),
                                    g = Ya.__pool.get();
                                a.__getBounds(m, g);
                                var l = Math.ceil(m.width),
                                    n = Math.ceil(m.height);
                                g.tx = -m.x;
                                g.ty = -m.y;
                                l = new Kb(l, n, !0, 0);
                                l.draw(a, g);
                                l.colorTransform(l.rect, c);
                                l.__renderTransform.identity();
                                l.__renderTransform.tx = m.x;
                                l.__renderTransform.ty = m.y;
                                l.__renderTransform.concat(a.__renderTransform);
                                l.__worldAlpha = a.__worldAlpha;
                                l.__worldColorTransform.__copyFrom(a.__worldColorTransform);
                                a = l;
                                hb.__pool.release(m);
                                Ya.__pool.release(g)
                            }
                            Ua.convertToCanvas(this.image);
                            c = new xh(this.image.buffer.__srcContext);
                            c.__allowSmoothing = f;
                            c.__overrideBlendMode = d;
                            c.__worldTransform = h;
                            c.__worldAlpha = 1 / a.__worldAlpha;
                            c.__worldColorTransform = k;
                            null != e && c.__pushMaskRect(e, b);
                            this.__drawCanvas(a, c);
                            null != e && (c.__popMaskRect(), Ya.__pool.release(b))
                        } else null == this.__textureContext && (this.__textureContext = oa.current.get_window().context), null != c && k.__combine(c), c = new Bb(ia.get_current().stage.context3D,
                            this), c.__allowSmoothing = f, c.__overrideBlendMode = d, c.__worldTransform = h, c.__worldAlpha = 1 / a.__worldAlpha, c.__worldColorTransform = k, c.__resize(this.width, this.height), null != e && c.__pushMaskRect(e, b), this.__drawGL(a, c), null != e && (c.__popMaskRect(), Ya.__pool.release(b));
                        Ya.__pool.release(h)
                    }
                },
                fillRect: function(a, b) {
                    this.__fillRect(a, b, !0)
                },
                generateFilterRect: function(a, b) {
                    return a.clone()
                },
                getIndexBuffer: function(a, b) {
                    if (null == this.__indexBuffer || this.__indexBufferContext != a.__context || null != b && null == this.__indexBufferGrid ||
                        null != this.__indexBufferGrid && !this.__indexBufferGrid.equals(b)) {
                        this.__indexBufferContext = a.__context;
                        this.__indexBuffer = null;
                        if (null != b) {
                            null == this.__indexBufferGrid && (this.__indexBufferGrid = new hb);
                            this.__indexBufferGrid.copyFrom(b);
                            var c = b.width;
                            b = b.height;
                            0 != c && 0 != b ? (this.__indexBufferData = new Uint16Array(54), this.__indexBufferData[0] = 0, this.__indexBufferData[1] = 1, this.__indexBufferData[2] = 2, this.__indexBufferData[3] = 2, this.__indexBufferData[4] = 1, this.__indexBufferData[5] = 3, this.__indexBufferData[6] =
                                    4, this.__indexBufferData[7] = 0, this.__indexBufferData[8] = 5, this.__indexBufferData[9] = 5, this.__indexBufferData[10] = 0, this.__indexBufferData[11] = 2, this.__indexBufferData[12] = 6, this.__indexBufferData[13] = 4, this.__indexBufferData[14] = 7, this.__indexBufferData[15] = 7, this.__indexBufferData[16] = 4, this.__indexBufferData[17] = 5, this.__indexBufferData[18] = 8, this.__indexBufferData[19] = 9, this.__indexBufferData[20] = 0, this.__indexBufferData[21] = 0, this.__indexBufferData[22] = 9, this.__indexBufferData[23] = 1, this.__indexBufferData[24] =
                                    10, this.__indexBufferData[25] = 8, this.__indexBufferData[26] = 4, this.__indexBufferData[27] = 4, this.__indexBufferData[28] = 8, this.__indexBufferData[29] = 0, this.__indexBufferData[30] = 11, this.__indexBufferData[31] = 10, this.__indexBufferData[32] = 6, this.__indexBufferData[33] = 6, this.__indexBufferData[34] = 10, this.__indexBufferData[35] = 4, this.__indexBufferData[36] = 12, this.__indexBufferData[37] = 13, this.__indexBufferData[38] = 8, this.__indexBufferData[39] = 8, this.__indexBufferData[40] = 13, this.__indexBufferData[41] = 9,
                                    this.__indexBufferData[42] = 14, this.__indexBufferData[43] = 12, this.__indexBufferData[44] = 10, this.__indexBufferData[45] = 10, this.__indexBufferData[46] = 12, this.__indexBufferData[47] = 8, this.__indexBufferData[48] = 15, this.__indexBufferData[49] = 14, this.__indexBufferData[50] = 11, this.__indexBufferData[51] = 11, this.__indexBufferData[52] = 14, this.__indexBufferData[53] = 10, this.__indexBuffer = a.createIndexBuffer(54)) : 0 == c && 0 != b ? (this.__indexBufferData = new Uint16Array(18), this.__indexBufferData[0] = 0, this.__indexBufferData[1] =
                                    1, this.__indexBufferData[2] = 2, this.__indexBufferData[3] = 2, this.__indexBufferData[4] = 1, this.__indexBufferData[5] = 3, this.__indexBufferData[6] = 4, this.__indexBufferData[7] = 5, this.__indexBufferData[8] = 0, this.__indexBufferData[9] = 0, this.__indexBufferData[10] = 5, this.__indexBufferData[11] = 1, this.__indexBufferData[12] = 6, this.__indexBufferData[13] = 7, this.__indexBufferData[14] = 4, this.__indexBufferData[15] = 4, this.__indexBufferData[16] = 7, this.__indexBufferData[17] = 5, this.__indexBuffer = a.createIndexBuffer(18)) :
                                0 != c && 0 == b && (this.__indexBufferData = new Uint16Array(18), this.__indexBufferData[0] = 0, this.__indexBufferData[1] = 1, this.__indexBufferData[2] = 2, this.__indexBufferData[3] = 2, this.__indexBufferData[4] = 1, this.__indexBufferData[5] = 3, this.__indexBufferData[6] = 4, this.__indexBufferData[7] = 0, this.__indexBufferData[8] = 5, this.__indexBufferData[9] = 5, this.__indexBufferData[10] = 0, this.__indexBufferData[11] = 2, this.__indexBufferData[12] = 6, this.__indexBufferData[13] = 4, this.__indexBufferData[14] = 7, this.__indexBufferData[15] =
                                    7, this.__indexBufferData[16] = 4, this.__indexBufferData[17] = 5, this.__indexBuffer = a.createIndexBuffer(18))
                        } else this.__indexBufferGrid = null;
                        null == this.__indexBuffer && (this.__indexBufferData = new Uint16Array(6), this.__indexBufferData[0] = 0, this.__indexBufferData[1] = 1, this.__indexBufferData[2] = 2, this.__indexBufferData[3] = 2, this.__indexBufferData[4] = 1, this.__indexBufferData[5] = 3, this.__indexBuffer = a.createIndexBuffer(6));
                        this.__indexBuffer.uploadFromTypedArray(this.__indexBufferData)
                    }
                    return this.__indexBuffer
                },
                getVertexBuffer: function(a, b, c) {
                    if (null == this.__vertexBuffer || this.__vertexBufferContext != a.__context || null != b && null == this.__vertexBufferGrid || null != this.__vertexBufferGrid && !this.__vertexBufferGrid.equals(b) || null != c && (this.__vertexBufferWidth != c.get_width() || this.__vertexBufferHeight != c.get_height() || this.__vertexBufferScaleX != c.get_scaleX() || this.__vertexBufferScaleY != c.get_scaleY())) {
                        this.__uvRect = new hb(0, 0, this.width, this.height);
                        this.__vertexBufferContext = a.__context;
                        this.__vertexBuffer = null;
                        null != c && (this.__vertexBufferWidth = c.get_width(), this.__vertexBufferHeight = c.get_height(), this.__vertexBufferScaleX = c.get_scaleX(), this.__vertexBufferScaleY = c.get_scaleY());
                        if (null != b && null != c) {
                            null == this.__vertexBufferGrid && (this.__vertexBufferGrid = new hb);
                            this.__vertexBufferGrid.copyFrom(b);
                            this.__vertexBufferWidth = c.get_width();
                            this.__vertexBufferHeight = c.get_height();
                            this.__vertexBufferScaleX = c.get_scaleX();
                            this.__vertexBufferScaleY = c.get_scaleY();
                            var d = b.width,
                                e = b.height;
                            if (0 != d && 0 != e) {
                                this.__vertexBufferData =
                                    new jg(224);
                                var f = b.x,
                                    h = b.y,
                                    k = this.width - d - f,
                                    m = this.height - e - h;
                                b = f / this.width;
                                var g = h / this.height;
                                d /= this.width;
                                e /= this.height;
                                f /= c.get_scaleX();
                                h /= c.get_scaleY();
                                k /= c.get_scaleX();
                                m /= c.get_scaleY();
                                k = c.get_width() / c.get_scaleX() - f - k;
                                c = c.get_height() / c.get_scaleY() - h - m;
                                this.__vertexBufferData[0] = f;
                                this.__vertexBufferData[1] = h;
                                this.__vertexBufferData[3] = 1 * b;
                                this.__vertexBufferData[4] = 1 * g;
                                this.__vertexBufferData[15] = h;
                                this.__vertexBufferData[18] = 1 * g;
                                this.__vertexBufferData[28] = f;
                                this.__vertexBufferData[31] =
                                    1 * b;
                                this.__vertexBufferData[56] = f + k;
                                this.__vertexBufferData[57] = h;
                                this.__vertexBufferData[59] = 1 * (b + d);
                                this.__vertexBufferData[60] = 1 * g;
                                this.__vertexBufferData[70] = f + k;
                                this.__vertexBufferData[73] = 1 * (b + d);
                                this.__vertexBufferData[84] = this.width;
                                this.__vertexBufferData[85] = h;
                                this.__vertexBufferData[87] = 1;
                                this.__vertexBufferData[88] = 1 * g;
                                this.__vertexBufferData[98] = this.width;
                                this.__vertexBufferData[101] = 1;
                                this.__vertexBufferData[112] = f;
                                this.__vertexBufferData[113] = h + c;
                                this.__vertexBufferData[115] = 1 * b;
                                this.__vertexBufferData[116] =
                                    1 * (g + e);
                                this.__vertexBufferData[127] = h + c;
                                this.__vertexBufferData[130] = 1 * (g + e);
                                this.__vertexBufferData[140] = f + k;
                                this.__vertexBufferData[141] = h + c;
                                this.__vertexBufferData[143] = 1 * (b + d);
                                this.__vertexBufferData[144] = 1 * (g + e);
                                this.__vertexBufferData[154] = this.width;
                                this.__vertexBufferData[155] = h + c;
                                this.__vertexBufferData[157] = 1;
                                this.__vertexBufferData[158] = 1 * (g + e);
                                this.__vertexBufferData[168] = f;
                                this.__vertexBufferData[169] = this.height;
                                this.__vertexBufferData[171] = 1 * b;
                                this.__vertexBufferData[172] = 1;
                                this.__vertexBufferData[183] =
                                    this.height;
                                this.__vertexBufferData[186] = 1;
                                this.__vertexBufferData[196] = f + k;
                                this.__vertexBufferData[197] = this.height;
                                this.__vertexBufferData[199] = 1 * (b + d);
                                this.__vertexBufferData[200] = 1;
                                this.__vertexBufferData[210] = this.width;
                                this.__vertexBufferData[211] = this.height;
                                this.__vertexBufferData[213] = 1;
                                this.__vertexBufferData[214] = 1;
                                this.__vertexBuffer = a.createVertexBuffer(16, 14)
                            } else 0 == d && 0 != e ? (this.__vertexBufferData = new jg(112), d = b.y, m = this.height - e - d, b = d / this.height, g = e / this.height, d /= c.get_scaleY(),
                                e = m / c.get_scaleY(), e = c.get_height() / c.get_scaleY() - d - e, c = c.get_width() / c.get_scaleX(), this.__vertexBufferData[0] = c, this.__vertexBufferData[1] = d, this.__vertexBufferData[3] = 1, this.__vertexBufferData[4] = 1 * b, this.__vertexBufferData[15] = d, this.__vertexBufferData[18] = 1 * b, this.__vertexBufferData[28] = c, this.__vertexBufferData[31] = 1, this.__vertexBufferData[56] = c, this.__vertexBufferData[57] = d + e, this.__vertexBufferData[59] = 1, this.__vertexBufferData[60] = 1 * (b + g), this.__vertexBufferData[71] = d + e, this.__vertexBufferData[74] =
                                1 * (b + g), this.__vertexBufferData[84] = c, this.__vertexBufferData[85] = this.height, this.__vertexBufferData[87] = 1, this.__vertexBufferData[88] = 1, this.__vertexBufferData[99] = this.height, this.__vertexBufferData[102] = 1, this.__vertexBuffer = a.createVertexBuffer(8, 14)) : 0 == e && 0 != d && (this.__vertexBufferData = new jg(112), m = b.x, e = this.width - d - m, b = m / this.width, g = d / this.width, d = m / c.get_scaleX(), e /= c.get_scaleX(), e = c.get_width() / c.get_scaleX() - d - e, c = c.get_height() / c.get_scaleY(), this.__vertexBufferData[0] = d, this.__vertexBufferData[1] =
                                c, this.__vertexBufferData[3] = 1 * b, this.__vertexBufferData[4] = 1, this.__vertexBufferData[15] = c, this.__vertexBufferData[18] = 1, this.__vertexBufferData[28] = d, this.__vertexBufferData[31] = 1 * b, this.__vertexBufferData[56] = d + e, this.__vertexBufferData[57] = c, this.__vertexBufferData[59] = 1 * (b + g), this.__vertexBufferData[60] = 1, this.__vertexBufferData[70] = d + e, this.__vertexBufferData[73] = 1 * (b + g), this.__vertexBufferData[84] = this.width, this.__vertexBufferData[85] = c, this.__vertexBufferData[87] = 1, this.__vertexBufferData[88] =
                                1, this.__vertexBufferData[98] = this.width, this.__vertexBufferData[101] = 1, this.__vertexBuffer = a.createVertexBuffer(8, 14))
                        } else this.__vertexBufferGrid = null;
                        null == this.__vertexBuffer && (this.__vertexBufferData = new jg(56), this.__vertexBufferData[0] = this.width, this.__vertexBufferData[1] = this.height, this.__vertexBufferData[3] = 1, this.__vertexBufferData[4] = 1, this.__vertexBufferData[15] = this.height, this.__vertexBufferData[18] = 1, this.__vertexBufferData[28] = this.width, this.__vertexBufferData[31] = 1, this.__vertexBuffer =
                            a.createVertexBuffer(3, 14));
                        this.__vertexBuffer.uploadFromTypedArray(rk.toArrayBufferView(this.__vertexBufferData))
                    }
                    return this.__vertexBuffer
                },
                getTexture: function(a) {
                    if (!this.__isValid) return null;
                    if (null == this.__texture || this.__textureContext != a.__context) this.__textureContext = a.__context, this.__texture = a.createRectangleTexture(this.width, this.height, 1, !1), this.__textureVersion = -1;
                    Ua.sync(this.image, !1);
                    null != this.image && this.image.version > this.__textureVersion && (null != this.__surface && dw.flush(this.__surface),
                        a = this.image, Kc.__supportsBGRA || 0 == a.get_format() || (a = a.clone(), a.set_format(0)), this.__texture.__uploadFromImage(a), this.__textureVersion = this.image.version, this.__textureWidth = a.buffer.width, this.__textureHeight = a.buffer.height);
                    this.readable || null == this.image || (this.image = this.__surface = null);
                    return this.__texture
                },
                lock: function() {},
                setPixel32: function(a, b, c) {
                    this.readable && this.image.setPixel32(a, b, c, 1)
                },
                unlock: function(a) {},
                __applyAlpha: function(a) {
                    Ua.convertToCanvas(this.image);
                    Ua.createImageData(this.image);
                    for (var b = this.image.buffer.data, c = 0, d = Ve.get_length(a); c < d;) {
                        var e = c++;
                        b[4 * e + 3] = a.readUnsignedByte()
                    }
                    this.image.version++
                },
                __drawCanvas: function(a, b) {
                    var c = this.image.buffer;
                    b.__allowSmoothing || b.applySmoothing(c.__srcContext, !1);
                    b.__render(a);
                    b.__allowSmoothing || b.applySmoothing(c.__srcContext, !0);
                    c.__srcContext.setTransform(1, 0, 0, 1, 0, 0);
                    c.__srcImageData = null;
                    c.data = null;
                    this.image.dirty = !0;
                    this.image.version++
                },
                __drawGL: function(a, b) {
                    var c = b.__context3D,
                        d = c.__state.renderToTexture,
                        e = c.__state.renderToTextureDepthStencil,
                        f = c.__state.renderToTextureAntiAlias,
                        h = c.__state.renderToTextureSurfaceSelector;
                    c.setRenderToTexture(this.getTexture(c), !0);
                    b.__render(a);
                    null != d ? c.setRenderToTexture(d, e, f, h) : c.setRenderToBackBuffer()
                },
                __fillRect: function(a, b, c) {
                    if (null != a)
                        if (this.transparent && 0 == (b & -16777216) && (b = 0), c && null != this.__texture && null != this.__texture.__glFramebuffer && "opengl" == ia.get_current().stage.__renderer.__type) {
                            c = ia.get_current().stage.__renderer.__context3D;
                            var d = !this.rect.equals(a),
                                e = c.__state.renderToTexture,
                                f = c.__state.renderToTextureDepthStencil,
                                h = c.__state.renderToTextureAntiAlias,
                                k = c.__state.renderToTextureSurfaceSelector;
                            c.setRenderToTexture(this.__texture);
                            d && c.setScissorRectangle(a);
                            c.clear((b >>> 16 & 255) / 255, (b >>> 8 & 255) / 255, (b & 255) / 255, this.transparent ? (b >>> 24 & 255) / 255 : 1, 0, 0, 1);
                            d && c.setScissorRectangle(null);
                            null != e ? c.setRenderToTexture(e, f, h, k) : c.setRenderToBackBuffer()
                        } else this.readable && this.image.fillRect(a.__toLimeRectangle(), b, 1)
                },
                __fromImage: function(a) {
                    null != a && null != a.buffer && (this.image =
                        a, this.width = a.width, this.height = a.height, this.rect = new hb(0, 0, a.width, a.height), this.__textureWidth = this.width, this.__textureHeight = this.height, this.__isValid = this.readable = !0)
                },
                __getBounds: function(a, b) {
                    var c = hb.__pool.get();
                    this.rect.__transform(c, b);
                    a.__expand(c.x, c.y, c.width, c.height);
                    hb.__pool.release(c)
                },
                __renderCanvas: function(a) {
                    if (this.readable) {
                        this.image.type == Gd.DATA && Ua.convertToCanvas(this.image);
                        var b = a.context;
                        b.globalAlpha = 1;
                        a.setTransform(this.__renderTransform, b);
                        b.drawImage(this.image.get_src(),
                            0, 0, this.image.width, this.image.height)
                    }
                },
                __renderDOM: function(a) {},
                __renderGL: function(a) {
                    var b = a.__context3D;
                    a.__setBlendMode(10);
                    var c = a.__defaultDisplayShader;
                    a.setShader(c);
                    a.applyBitmapData(this, a.__upscaled);
                    a.applyMatrix(a.__getMatrix(this.__worldTransform, 1));
                    a.applyAlpha(this.__worldAlpha);
                    a.applyColorTransform(this.__worldColorTransform);
                    a.updateShader();
                    var d = this.getVertexBuffer(b);
                    null != c.__position && b.setVertexBufferAt(c.__position.index, d, 0, 3);
                    null != c.__textureCoord && b.setVertexBufferAt(c.__textureCoord.index,
                        d, 3, 2);
                    c = this.getIndexBuffer(b);
                    b.drawTriangles(c);
                    a.__clearShader()
                },
                __setUVRect: function(a, b, c, d, e) {
                    if (null != this.getVertexBuffer(a) && (d != this.__uvRect.width || e != this.__uvRect.height || b != this.__uvRect.x || c != this.__uvRect.y)) {
                        null == this.__uvRect && (this.__uvRect = new hb);
                        this.__uvRect.setTo(b, c, d, e);
                        a = 0 < this.__textureWidth ? b / this.__textureWidth : 0;
                        c = 0 < this.__textureHeight ? c / this.__textureHeight : 0;
                        b = 0 < this.__textureWidth ? d / this.__textureWidth : 0;
                        var f = 0 < this.__textureHeight ? e / this.__textureHeight : 0;
                        this.__vertexBufferData[0] =
                            d;
                        this.__vertexBufferData[1] = e;
                        this.__vertexBufferData[3] = a + b;
                        this.__vertexBufferData[4] = c + f;
                        this.__vertexBufferData[15] = e;
                        this.__vertexBufferData[17] = a;
                        this.__vertexBufferData[18] = c + f;
                        this.__vertexBufferData[28] = d;
                        this.__vertexBufferData[31] = a + b;
                        this.__vertexBufferData[32] = c;
                        this.__vertexBufferData[45] = a;
                        this.__vertexBufferData[46] = c;
                        this.__vertexBuffer.uploadFromTypedArray(rk.toArrayBufferView(this.__vertexBufferData))
                    }
                },
                __update: function(a, b) {
                    this.__updateTransforms()
                },
                __updateTransforms: function(a) {
                    null ==
                        a ? this.__worldTransform.identity() : this.__worldTransform.copyFrom(a);
                    this.__renderTransform.copyFrom(this.__worldTransform)
                },
                __class__: Kb
            };
            var Hg = function() {
                bb.call(this);
                this.__allowSmoothing = !0;
                this.__tempColorTransform = new mc;
                this.__worldAlpha = 1
            };
            g["openfl.display.DisplayObjectRenderer"] = Hg;
            Hg.__name__ = ["openfl", "display", "DisplayObjectRenderer"];
            Hg.__super__ = bb;
            Hg.prototype = p(bb.prototype, {
                __allowSmoothing: null,
                __blendMode: null,
                __cleared: null,
                __context: null,
                __overrideBlendMode: null,
                __roundPixels: null,
                __stage: null,
                __tempColorTransform: null,
                __type: null,
                __worldAlpha: null,
                __worldColorTransform: null,
                __worldTransform: null,
                __clear: function() {},
                __getAlpha: function(a) {
                    return a * this.__worldAlpha
                },
                __popMaskObject: function(a, b) {},
                __pushMaskObject: function(a, b) {},
                __render: function(a) {},
                __resize: function(a, b) {},
                __setBlendMode: function(a) {},
                __class__: Hg
            });
            var xh = function(a) {
                this.pixelRatio = 1;
                Hg.call(this);
                this.context = a;
                this.__tempMatrix = new Ya;
                this.__type = "canvas"
            };
            g["openfl.display.CanvasRenderer"] = xh;
            xh.__name__ = ["openfl", "display", "CanvasRenderer"];
            xh.__super__ = Hg;
            xh.prototype = p(Hg.prototype, {
                context: null,
                pixelRatio: null,
                __isDOM: null,
                __tempMatrix: null,
                applySmoothing: function(a, b) {
                    a.imageSmoothingEnabled = b
                },
                setTransform: function(a, b) {
                    null == b ? b = this.context : this.context == b && null != this.__worldTransform && (this.__tempMatrix.copyFrom(a), this.__tempMatrix.concat(this.__worldTransform), a = this.__tempMatrix);
                    this.__roundPixels ? b.setTransform(a.a, a.b, a.c, a.d, E["int"](a.tx), E["int"](a.ty)) : b.setTransform(a.a, a.b, a.c,
                        a.d, a.tx, a.ty)
                },
                __clear: function() {
                    if (null != this.__stage) {
                        var a = this.__blendMode;
                        this.__blendMode = null;
                        this.__setBlendMode(10);
                        this.context.setTransform(1, 0, 0, 1, 0, 0);
                        this.context.globalAlpha = 1;
                        !this.__stage.__transparent && this.__stage.__clearBeforeRender ? (this.context.fillStyle = this.__stage.__colorString, this.context.fillRect(0, 0, this.__stage.stageWidth * this.__stage.window.get_scale(), this.__stage.stageHeight * this.__stage.window.get_scale())) : this.__stage.__transparent && this.__stage.__clearBeforeRender &&
                            this.context.clearRect(0, 0, this.__stage.stageWidth * this.__stage.window.get_scale(), this.__stage.stageHeight * this.__stage.window.get_scale());
                        this.__setBlendMode(a)
                    }
                },
                __popMask: function() {
                    this.context.restore()
                },
                __popMaskObject: function(a, b) {
                    null == b && (b = !0);
                    a.__isCacheBitmapRender || null == a.__mask || this.__popMask();
                    b && null != a.__scrollRect && this.__popMaskRect()
                },
                __popMaskRect: function() {
                    this.context.restore()
                },
                __pushMask: function(a) {
                    this.context.save();
                    this.setTransform(a.__renderTransform, this.context);
                    this.context.beginPath();
                    a.__renderCanvasMask(this);
                    this.context.closePath();
                    this.context.clip()
                },
                __pushMaskObject: function(a, b) {
                    null == b && (b = !0);
                    b && null != a.__scrollRect && this.__pushMaskRect(a.__scrollRect, a.__renderTransform);
                    a.__isCacheBitmapRender || null == a.__mask || this.__pushMask(a.__mask)
                },
                __pushMaskRect: function(a, b) {
                    this.context.save();
                    this.setTransform(b, this.context);
                    this.context.beginPath();
                    this.context.rect(a.x, a.y, a.width, a.height);
                    this.context.clip()
                },
                __render: function(a) {
                    a.__renderCanvas(this)
                },
                __setBlendMode: function(a) {
                    null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
                    this.__blendMode != a && (this.__blendMode = a, this.__setBlendModeContext(this.context, a))
                },
                __setBlendModeContext: function(a, b) {
                    switch (b) {
                        case 0:
                            a.globalCompositeOperation = "lighter";
                            break;
                        case 2:
                            a.globalCompositeOperation = "darken";
                            break;
                        case 3:
                            a.globalCompositeOperation = "difference";
                            break;
                        case 5:
                            a.globalCompositeOperation = "hard-light";
                            break;
                        case 8:
                            a.globalCompositeOperation = "lighten";
                            break;
                        case 9:
                            a.globalCompositeOperation =
                                "multiply";
                            break;
                        case 11:
                            a.globalCompositeOperation = "overlay";
                            break;
                        case 12:
                            a.globalCompositeOperation = "screen";
                            break;
                        default:
                            a.globalCompositeOperation = "source-over"
                    }
                },
                __class__: xh
            });
            var uw = {};
            g["openfl.display._CapsStyle.CapsStyle_Impl_"] = uw;
            uw.__name__ = ["openfl", "display", "_CapsStyle", "CapsStyle_Impl_"];
            uw.toString = function(a) {
                switch (a) {
                    case 0:
                        return "none";
                    case 1:
                        return "round";
                    case 2:
                        return "square";
                    default:
                        return null
                }
            };
            var zl = function(a) {
                this.pixelRatio = 1;
                Hg.call(this);
                this.element = a;
                R.__supportDOM = !0;
                a = window.getComputedStyle(document.documentElement, "");
                a = (Array.prototype.slice.call(a).join("").match(/-(moz|webkit|ms)-/) || "" === a.OLink && ["", "o"])[1];
                "WebKit|Moz|MS|O".match(new RegExp("(" + a + ")", "i"));
                a[0].toUpperCase();
                a.substr(1);
                this.__vendorPrefix = a;
                this.__transformProperty = "webkit" == a ? "-webkit-transform" : "transform";
                this.__transformOriginProperty = "webkit" == a ? "-webkit-transform-origin" : "transform-origin";
                this.__clipRects = [];
                this.__z = this.__numClipRects = 0;
                this.__type = "dom";
                this.__canvasRenderer =
                    new xh(null);
                this.__canvasRenderer.__isDOM = !0
            };
            g["openfl.display.DOMRenderer"] = zl;
            zl.__name__ = ["openfl", "display", "DOMRenderer"];
            zl.__super__ = Hg;
            zl.prototype = p(Hg.prototype, {
                element: null,
                pixelRatio: null,
                __canvasRenderer: null,
                __clipRects: null,
                __currentClipRect: null,
                __numClipRects: null,
                __transformOriginProperty: null,
                __transformProperty: null,
                __vendorPrefix: null,
                __z: null,
                __applyStyle: function(a, b, c, d) {
                    var e = a.__style;
                    b && a.__renderTransformChanged && e.setProperty(this.__transformProperty, a.__renderTransform.to3DString(this.__roundPixels),
                        null);
                    a.__worldZ != ++this.__z && (a.__worldZ = this.__z, e.setProperty("z-index", null == a.__worldZ ? "null" : "" + a.__worldZ, null));
                    c && a.__worldAlphaChanged && (1 > a.__worldAlpha ? e.setProperty("opacity", null == a.__worldAlpha ? "null" : "" + a.__worldAlpha, null) : e.removeProperty("opacity"));
                    d && a.__worldClipChanged && (null == a.__worldClip ? e.removeProperty("clip") : (a = a.__worldClip, e.setProperty("clip", "rect(" + a.y + "px, " + a.get_right() + "px, " + a.get_bottom() + "px, " + a.x + "px)", null)))
                },
                __initializeElement: function(a, b) {
                    var c = a.__style =
                        b.style;
                    c.setProperty("position", "absolute", null);
                    c.setProperty("top", "0", null);
                    c.setProperty("left", "0", null);
                    c.setProperty(this.__transformOriginProperty, "0 0 0", null);
                    this.element.appendChild(b);
                    a.__worldAlphaChanged = !0;
                    a.__renderTransformChanged = !0;
                    a.__worldVisibleChanged = !0;
                    a.__worldClipChanged = !0;
                    a.__worldClip = null;
                    a.__worldZ = -1
                },
                __popMask: function() {
                    this.__popMaskRect()
                },
                __popMaskObject: function(a, b) {
                    null == b && (b = !0);
                    null != a.__mask && this.__popMask();
                    b && null != a.__scrollRect && this.__popMaskRect()
                },
                __popMaskRect: function() {
                    0 < this.__numClipRects && (this.__numClipRects--, this.__currentClipRect = 0 < this.__numClipRects ? this.__clipRects[this.__numClipRects - 1] : null)
                },
                __pushMask: function(a) {
                    this.__pushMaskRect(a.getBounds(a), a.__renderTransform)
                },
                __pushMaskObject: function(a, b) {
                    null == b && (b = !0);
                    b && null != a.__scrollRect && this.__pushMaskRect(a.__scrollRect, a.__renderTransform);
                    null != a.__mask && this.__pushMask(a.__mask)
                },
                __pushMaskRect: function(a, b) {
                    this.__numClipRects == this.__clipRects.length && (this.__clipRects[this.__numClipRects] =
                        new hb);
                    var c = this.__clipRects[this.__numClipRects];
                    a.__transform(c, b);
                    0 < this.__numClipRects && (a = this.__clipRects[this.__numClipRects - 1], c.__contract(a.x, a.y, a.width, a.height));
                    0 > c.height && (c.height = 0);
                    0 > c.width && (c.width = 0);
                    this.__currentClipRect = c;
                    this.__numClipRects++
                },
                __render: function(a) {
                    this.element.style.background = this.__stage.__transparent ? "none" : this.__stage.__colorString;
                    this.__z = 1;
                    a.__renderDOM(this)
                },
                __setBlendMode: function(a) {
                    null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
                    this.__blendMode != a && (this.__blendMode = a)
                },
                __updateClip: function(a) {
                    if (null == this.__currentClipRect) a.__worldClipChanged = null != a.__worldClip, a.__worldClip = null;
                    else {
                        null == a.__worldClip && (a.__worldClip = new hb);
                        var b = hb.__pool.get(),
                            c = Ya.__pool.get();
                        c.copyFrom(a.__renderTransform);
                        c.invert();
                        this.__currentClipRect.__transform(b, c);
                        b.equals(a.__worldClip) ? a.__worldClipChanged = !1 : (a.__worldClip.copyFrom(b), a.__worldClipChanged = !0);
                        hb.__pool.release(b);
                        Ya.__pool.release(c)
                    }
                },
                __class__: zl
            });
            var rr = function(a) {
                null ==
                    this.__glFragmentSource && (this.__glFragmentSource = "varying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\tvec4 color = texture2D (openfl_Texture, openfl_TextureCoordv);\n\n\t\tif (color.a == 0.0) {\n\n\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t} else if (openfl_HasColorTransform) {\n\n\t\t\tcolor = vec4 (color.rgb / color.a, color.a);\n\n\t\t\tmat4 colorMultiplier = mat4 (0);\n\t\t\tcolorMultiplier[0][0] = openfl_ColorMultiplierv.x;\n\t\t\tcolorMultiplier[1][1] = openfl_ColorMultiplierv.y;\n\t\t\tcolorMultiplier[2][2] = openfl_ColorMultiplierv.z;\n\t\t\tcolorMultiplier[3][3] = 1.0; // openfl_ColorMultiplierv.w;\n\n\t\t\tcolor = clamp (openfl_ColorOffsetv + (color * colorMultiplier), 0.0, 1.0);\n\n\t\t\tif (color.a > 0.0) {\n\n\t\t\t\tgl_FragColor = vec4 (color.rgb * color.a * openfl_Alphav, color.a * openfl_Alphav);\n\n\t\t\t} else {\n\n\t\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl_FragColor = color * openfl_Alphav;\n\n\t\t}\n\n\t\t}");
                null == this.__glVertexSource && (this.__glVertexSource = "attribute float openfl_Alpha;\n\t\tattribute vec4 openfl_ColorMultiplier;\n\t\tattribute vec4 openfl_ColorOffset;\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tvarying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_Alphav = openfl_Alpha;\n\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\tif (openfl_HasColorTransform) {\n\n\t\t\topenfl_ColorMultiplierv = openfl_ColorMultiplier;\n\t\t\topenfl_ColorOffsetv = openfl_ColorOffset / 255.0;\n\n\t\t}\n\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}");
                Uf.call(this, a);
                this.__isGenerated = !0;
                this.__initGL()
            };
            g["openfl.display.DisplayObjectShader"] = rr;
            rr.__name__ = ["openfl", "display", "DisplayObjectShader"];
            rr.__super__ = Uf;
            rr.prototype = p(Uf.prototype, {
                openfl_Alpha: null,
                openfl_ColorMultiplier: null,
                openfl_ColorOffset: null,
                openfl_Position: null,
                openfl_TextureCoord: null,
                openfl_Matrix: null,
                openfl_HasColorTransform: null,
                openfl_TextureSize: null,
                openfl_Texture: null,
                __class__: rr
            });
            var sr = function(a, b) {
                bb.call(this);
                this.name = a;
                this.frame = b
            };
            g["openfl.display.FrameLabel"] =
                sr;
            sr.__name__ = ["openfl", "display", "FrameLabel"];
            sr.__super__ = bb;
            sr.prototype = p(bb.prototype, {
                frame: null,
                name: null,
                __class__: sr
            });
            var tr = function(a, b) {
                this.script = a;
                this.frame = b
            };
            g["openfl.display.FrameScript"] = tr;
            tr.__name__ = ["openfl", "display", "FrameScript"];
            tr.prototype = {
                frame: null,
                script: null,
                __class__: tr
            };
            var jf = function(a) {
                this.__dirty = !0;
                this.__owner = a;
                this.__commands = new Ff;
                this.__positionY = this.__positionX = this.__strokePadding = 0;
                this.__renderTransform = new Ya;
                this.__usedShaderBuffers = new Qb;
                this.__worldTransform = new Ya;
                this.__height = this.__width = 0;
                this.__shaderBufferPool = new Rb(function() {
                    return new ur
                });
                this.moveTo(0, 0)
            };
            g["openfl.display.Graphics"] = jf;
            jf.__name__ = ["openfl", "display", "Graphics"];
            jf.prototype = {
                __bounds: null,
                __commands: null,
                __dirty: null,
                __hardwareDirty: null,
                __height: null,
                __positionX: null,
                __positionY: null,
                __quadBuffer: null,
                __renderTransform: null,
                __shaderBufferPool: null,
                __softwareDirty: null,
                __strokePadding: null,
                __transformDirty: null,
                __triangleIndexBuffer: null,
                __triangleIndexBufferCount: null,
                __triangleIndexBufferData: null,
                __usedShaderBuffers: null,
                __vertexBuffer: null,
                __vertexBufferCount: null,
                __vertexBufferCountUVT: null,
                __vertexBufferData: null,
                __vertexBufferDataUVT: null,
                __vertexBufferUVT: null,
                __visible: null,
                __owner: null,
                __width: null,
                __worldTransform: null,
                __canvas: null,
                __context: null,
                __bitmap: null,
                beginBitmapFill: function(a, b, c, d) {
                    null == d && (d = !1);
                    null == c && (c = !0);
                    this.__commands.beginBitmapFill(a, null != b ? b.clone() : null, c, d);
                    this.__visible = !0
                },
                beginFill: function(a, b) {
                    null == b && (b = 1);
                    null ==
                        a && (a = 0);
                    this.__commands.beginFill(a & 16777215, b);
                    0 < b && (this.__visible = !0)
                },
                beginGradientFill: function(a, b, c, d, e, f, h, k) {
                    null == k && (k = 0);
                    null == h && (h = 1);
                    null == f && (f = 0);
                    if (null != b && 0 != b.length) {
                        if (null == c) {
                            c = [];
                            for (var m = 0, g = b.length; m < g;) m++, c.push(1)
                        }
                        if (null == d)
                            for (d = [], m = 0, g = b.length; m < g;) {
                                var l = m++;
                                d.push(Math.ceil(l / b.length * 255))
                            }
                        if (!(c.length < b.length || d.length < b.length))
                            for (this.__commands.beginGradientFill(a, b, c, d, e, f, h, k), a = 0; a < c.length;)
                                if (b = c[a], ++a, 0 < b) {
                                    this.__visible = !0;
                                    break
                                }
                    }
                },
                clear: function() {
                    for (var a =
                            this.__usedShaderBuffers.iterator(); a.hasNext();) {
                        var b = a.next();
                        this.__shaderBufferPool.release(b)
                    }
                    this.__usedShaderBuffers.clear();
                    this.__commands.clear();
                    this.__strokePadding = 0;
                    null != this.__bounds && (this.set___dirty(!0), this.__transformDirty = !0, this.__bounds = null);
                    this.__visible = !1;
                    this.__positionY = this.__positionX = 0;
                    this.moveTo(0, 0)
                },
                copyFrom: function(a) {
                    this.__bounds = null != a.__bounds ? a.__bounds.clone() : null;
                    this.__commands = a.__commands.copy();
                    this.set___dirty(!0);
                    this.__strokePadding = a.__strokePadding;
                    this.__positionX = a.__positionX;
                    this.__positionY = a.__positionY;
                    this.__transformDirty = !0;
                    this.__visible = a.__visible
                },
                curveTo: function(a, b, c, d) {
                    this.__inflateBounds(this.__positionX - this.__strokePadding, this.__positionY - this.__strokePadding);
                    this.__inflateBounds(this.__positionX + this.__strokePadding, this.__positionY + this.__strokePadding);
                    var e = a < c && a > this.__positionX || a > c && a < this.__positionX ? c : this.__calculateBezierQuadPoint((this.__positionX - a) / (this.__positionX - 2 * a + c), this.__positionX, a, c);
                    var f = b <
                        d && b > this.__positionY || b > d && b < this.__positionY ? d : this.__calculateBezierQuadPoint((this.__positionY - b) / (this.__positionY - 2 * b + d), this.__positionY, b, d);
                    this.__inflateBounds(e - this.__strokePadding, f - this.__strokePadding);
                    this.__inflateBounds(e + this.__strokePadding, f + this.__strokePadding);
                    this.__positionX = c;
                    this.__positionY = d;
                    this.__commands.curveTo(a, b, c, d);
                    this.set___dirty(!0)
                },
                drawCircle: function(a, b, c) {
                    0 >= c || (this.__inflateBounds(a - c - this.__strokePadding, b - c - this.__strokePadding), this.__inflateBounds(a +
                        c + this.__strokePadding, b + c + this.__strokePadding), this.__commands.drawCircle(a, b, c), this.set___dirty(!0))
                },
                drawRect: function(a, b, c, d) {
                    if (0 != c || 0 != d) {
                        var e = 0 > c ? -1 : 1,
                            f = 0 > d ? -1 : 1;
                        this.__inflateBounds(a - this.__strokePadding * e, b - this.__strokePadding * f);
                        this.__inflateBounds(a + c + this.__strokePadding * e, b + d + this.__strokePadding * f);
                        this.__commands.drawRect(a, b, c, d);
                        this.set___dirty(!0)
                    }
                },
                drawRoundRect: function(a, b, c, d, e, f) {
                    if (0 != c || 0 != d) {
                        var h = 0 > c ? -1 : 1,
                            k = 0 > d ? -1 : 1;
                        this.__inflateBounds(a - this.__strokePadding * h,
                            b - this.__strokePadding * k);
                        this.__inflateBounds(a + c + this.__strokePadding * h, b + d + this.__strokePadding * k);
                        this.__commands.drawRoundRect(a, b, c, d, e, f);
                        this.set___dirty(!0)
                    }
                },
                endFill: function() {
                    this.__commands.endFill()
                },
                lineBitmapStyle: function(a, b, c, d) {
                    null == d && (d = !1);
                    null == c && (c = !0);
                    this.__commands.lineBitmapStyle(a, null != b ? b.clone() : null, c, d)
                },
                lineStyle: function(a, b, c, d, e, f, h, k) {
                    null == k && (k = 3);
                    null == e && (e = 2);
                    null == d && (d = !1);
                    null == c && (c = 1);
                    null == b && (b = 0);
                    null != a && (1 == h ? a > this.__strokePadding && (this.__strokePadding =
                        a) : a / 2 > this.__strokePadding && (this.__strokePadding = a / 2));
                    this.__commands.lineStyle(a, b, c, d, e, f, h, k);
                    null != a && (this.__visible = !0)
                },
                lineTo: function(a, b) {
                    isFinite(a) && isFinite(b) && (this.__inflateBounds(this.__positionX - this.__strokePadding, this.__positionY - this.__strokePadding), this.__inflateBounds(this.__positionX + this.__strokePadding, this.__positionY + this.__strokePadding), this.__positionX = a, this.__positionY = b, this.__inflateBounds(this.__positionX - this.__strokePadding, this.__positionY - this.__strokePadding),
                        this.__inflateBounds(this.__positionX + 2 * this.__strokePadding, this.__positionY + this.__strokePadding), this.__commands.lineTo(a, b), this.set___dirty(!0))
                },
                moveTo: function(a, b) {
                    this.__positionX = a;
                    this.__positionY = b;
                    this.__commands.moveTo(a, b)
                },
                readGraphicsData: function(a) {
                    null == a && (a = !0);
                    var b = M.toObjectVector(null);
                    this.__owner.__readGraphicsData(b, a);
                    return b
                },
                __calculateBezierQuadPoint: function(a, b, c, d) {
                    var e = 1 - a;
                    return e * e * b + 2 * e * a * c + a * a * d
                },
                __cleanup: function() {
                    null != this.__bounds && null != this.__canvas &&
                        (this.set___dirty(!0), this.__transformDirty = !0);
                    this.__context = this.__canvas = this.__bitmap = null
                },
                __getBounds: function(a, b) {
                    if (null != this.__bounds) {
                        var c = hb.__pool.get();
                        this.__bounds.__transform(c, b);
                        a.__expand(c.x, c.y, c.width, c.height);
                        hb.__pool.release(c)
                    }
                },
                __hitTest: function(a, b, c, d) {
                    if (null == this.__bounds) return !1;
                    var e = d.__transformInverseX(a, b);
                    a = d.__transformInverseY(a, b);
                    return e > this.__bounds.x && a > this.__bounds.y && this.__bounds.contains(e, a) ? c ? A.hitTest(this, e, a) : !0 : !1
                },
                __inflateBounds: function(a,
                    b) {
                    null == this.__bounds ? (this.__bounds = new hb(a, b, 0, 0), this.__transformDirty = !0) : (a < this.__bounds.x && (this.__bounds.width += this.__bounds.x - a, this.__bounds.x = a, this.__transformDirty = !0), b < this.__bounds.y && (this.__bounds.height += this.__bounds.y - b, this.__bounds.y = b, this.__transformDirty = !0), a > this.__bounds.x + this.__bounds.width && (this.__bounds.width = a - this.__bounds.x), b > this.__bounds.y + this.__bounds.height && (this.__bounds.height = b - this.__bounds.y))
                },
                __readGraphicsData: function(a) {
                    for (var b = new Vg(this.__commands),
                            c = null, d, e = 0, f = this.__commands.types; e < f.length;) {
                        d = f[e];
                        ++e;
                        switch (Q.enumIndex(d)) {
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                            case 9:
                            case 10:
                            case 17:
                            case 18:
                                null == c && (c = new Kh);
                                break;
                            default:
                                null != c && (a.push(c), c = null)
                        }
                        switch (Q.enumIndex(d)) {
                            case 0:
                                d = b.readBeginBitmapFill();
                                a.push(new vr(d.obj(0), d.obj(1), d.bool(0), d.bool(1)));
                                break;
                            case 1:
                                d = b.readBeginFill();
                                a.push(new mk(d["int"](0), 1));
                                break;
                            case 2:
                                d = b.readBeginGradientFill();
                                a.push(new wr(d.obj(0), d.iArr(0), d.fArr(0), d.iArr(1), d.obj(1), d.obj(2), d.obj(3), d["float"](0)));
                                break;
                            case 3:
                                break;
                            case 4:
                                d = b.readCubicCurveTo();
                                c.cubicCurveTo(d["float"](0), d["float"](1), d["float"](2), d["float"](3), d["float"](4), d["float"](5));
                                break;
                            case 5:
                                d = b.readCurveTo();
                                c.curveTo(d["float"](0), d["float"](1), d["float"](2), d["float"](3));
                                break;
                            case 6:
                                d = b.readDrawCircle();
                                c.__drawCircle(d["float"](0), d["float"](1), d["float"](2));
                                break;
                            case 7:
                                d = b.readDrawEllipse();
                                c.__drawEllipse(d["float"](0), d["float"](1), d["float"](2), d["float"](3));
                                break;
                            case 9:
                                d = b.readDrawRect();
                                c.__drawRect(d["float"](0),
                                    d["float"](1), d["float"](2), d["float"](3));
                                break;
                            case 10:
                                d = b.readDrawRoundRect();
                                c.__drawRoundRect(d["float"](0), d["float"](1), d["float"](2), d["float"](3), d["float"](4), null != d.obj(0) ? d.obj(0) : d["float"](4));
                                break;
                            case 13:
                                b.readEndFill();
                                a.push(new io);
                                break;
                            case 14:
                                b.readLineBitmapStyle();
                                c = null;
                                break;
                            case 15:
                                b.readLineGradientStyle();
                                break;
                            case 16:
                                var h = b.readLineStyle();
                                d = new xr(h.obj(0), h.bool(0), h.obj(1), h.obj(2), h.obj(3), h["float"](1));
                                d.fill = new mk(h["int"](0), h["float"](0));
                                a.push(d);
                                break;
                            case 17:
                                d = b.readLineTo();
                                c.lineTo(d["float"](0), d["float"](1));
                                break;
                            case 18:
                                d = b.readMoveTo();
                                c.moveTo(d["float"](0), d["float"](1));
                                break;
                            default:
                                b.skip(d)
                        }
                    }
                    null != c && a.push(c)
                },
                __update: function(a) {
                    if (!(null == this.__bounds || 0 >= this.__bounds.width || 0 >= this.__bounds.height)) {
                        var b = this.__owner.__renderTransform;
                        if (null != b) {
                            var c = 0 == b.b ? Math.abs(b.a) : Math.sqrt(b.a * b.a + b.b * b.b);
                            var d = 0 == b.c ? Math.abs(b.d) : Math.sqrt(b.c * b.c + b.d * b.d);
                            null != a && (c = 0 == a.b ? c * a.a : c * Math.sqrt(a.a * a.a + a.b * a.b), d = 0 == a.c ? d * a.d : d *
                                Math.sqrt(a.c * a.c + a.d * a.d));
                            a = this.__bounds.width * c;
                            d *= this.__bounds.height;
                            if (1 > a || 1 > d)(1 <= this.__width || 1 <= this.__height) && this.set___dirty(!0), this.__height = this.__width = 0;
                            else {
                                null != jf.maxTextureWidth && a > jf.maxTextureWidth && (a = jf.maxTextureWidth);
                                null != jf.maxTextureWidth && d > jf.maxTextureHeight && (d = jf.maxTextureHeight);
                                this.__renderTransform.a = a / this.__bounds.width;
                                this.__renderTransform.d = d / this.__bounds.height;
                                c = 1 / this.__renderTransform.a;
                                var e = 1 / this.__renderTransform.d;
                                this.__worldTransform.a =
                                    c * b.a;
                                this.__worldTransform.b = c * b.b;
                                this.__worldTransform.c = e * b.c;
                                this.__worldTransform.d = e * b.d;
                                e = this.__bounds.x;
                                var f = this.__bounds.y;
                                c = e * b.a + f * b.c + b.tx;
                                b = e * b.b + f * b.d + b.ty;
                                this.__worldTransform.tx = Math.round(c);
                                this.__worldTransform.ty = Math.round(b);
                                this.__renderTransform.tx = this.__worldTransform.__transformInverseX(c, b);
                                this.__renderTransform.ty = this.__worldTransform.__transformInverseY(c, b);
                                b = Math.ceil(a + 1);
                                a = Math.ceil(d + 1);
                                b == this.__width && a == this.__height || this.set___dirty(!0);
                                this.__width =
                                    b;
                                this.__height = a
                            }
                        }
                    }
                },
                set___dirty: function(a) {
                    a && null != this.__owner && this.__owner.__setRenderDirty();
                    a && (this.__hardwareDirty = this.__softwareDirty = !0);
                    return this.__dirty = a
                },
                __class__: jf
            };
            var yr = function() {};
            g["openfl.display.IGraphicsFill"] = yr;
            yr.__name__ = ["openfl", "display", "IGraphicsFill"];
            var Al = function() {};
            g["openfl.display.IGraphicsData"] = Al;
            Al.__name__ = ["openfl", "display", "IGraphicsData"];
            var vr = function(a, b, c, d) {
                null == d && (d = !1);
                null == c && (c = !0);
                this.bitmapData = a;
                this.matrix = b;
                this.repeat =
                    c;
                this.smooth = d;
                this.__graphicsDataType = 4;
                this.__graphicsFillType = 2
            };
            g["openfl.display.GraphicsBitmapFill"] = vr;
            vr.__name__ = ["openfl", "display", "GraphicsBitmapFill"];
            vr.__interfaces__ = [yr, Al];
            vr.prototype = {
                bitmapData: null,
                matrix: null,
                repeat: null,
                smooth: null,
                __graphicsDataType: null,
                __graphicsFillType: null,
                __class__: vr
            };
            var io = function() {
                this.__graphicsDataType = 5;
                this.__graphicsFillType = 3
            };
            g["openfl.display.GraphicsEndFill"] = io;
            io.__name__ = ["openfl", "display", "GraphicsEndFill"];
            io.__interfaces__ = [yr,
                Al
            ];
            io.prototype = {
                __graphicsDataType: null,
                __graphicsFillType: null,
                __class__: io
            };
            var wr = function(a, b, c, d, e, f, h, k) {
                null == k && (k = 0);
                null == a && (a = 0);
                null == f && (f = 0);
                null == h && (h = 1);
                this.type = a;
                this.colors = b;
                this.alphas = c;
                this.ratios = d;
                this.matrix = e;
                this.spreadMethod = f;
                this.interpolationMethod = h;
                this.focalPointRatio = k;
                this.__graphicsDataType = 2;
                this.__graphicsFillType = 1
            };
            g["openfl.display.GraphicsGradientFill"] = wr;
            wr.__name__ = ["openfl", "display", "GraphicsGradientFill"];
            wr.__interfaces__ = [yr, Al];
            wr.prototype = {
                alphas: null,
                colors: null,
                focalPointRatio: null,
                interpolationMethod: null,
                matrix: null,
                ratios: null,
                spreadMethod: null,
                type: null,
                __graphicsDataType: null,
                __graphicsFillType: null,
                __class__: wr
            };
            var Kw = function() {};
            g["openfl.display.IGraphicsPath"] = Kw;
            Kw.__name__ = ["openfl", "display", "IGraphicsPath"];
            var Kh = function(a, b, c) {
                null == c && (c = 0);
                this.commands = a;
                this.data = b;
                this.winding = c;
                this.__graphicsDataType = 3
            };
            g["openfl.display.GraphicsPath"] = Kh;
            Kh.__name__ = ["openfl", "display", "GraphicsPath"];
            Kh.__interfaces__ = [Kw, Al];
            Kh.prototype = {
                commands: null,
                data: null,
                winding: null,
                __graphicsDataType: null,
                cubicCurveTo: function(a, b, c, d, e, f) {
                    null == this.commands && (this.commands = M.toIntVector(null));
                    null == this.data && (this.data = M.toFloatVector(null));
                    this.commands.push(6);
                    this.data.push(a);
                    this.data.push(b);
                    this.data.push(c);
                    this.data.push(d);
                    this.data.push(e);
                    this.data.push(f)
                },
                curveTo: function(a, b, c, d) {
                    null == this.commands && (this.commands = M.toIntVector(null));
                    null == this.data && (this.data = M.toFloatVector(null));
                    this.commands.push(3);
                    this.data.push(a);
                    this.data.push(b);
                    this.data.push(c);
                    this.data.push(d)
                },
                lineTo: function(a, b) {
                    null == this.commands && (this.commands = M.toIntVector(null));
                    null == this.data && (this.data = M.toFloatVector(null));
                    this.commands.push(2);
                    this.data.push(a);
                    this.data.push(b)
                },
                moveTo: function(a, b) {
                    null == this.commands && (this.commands = M.toIntVector(null));
                    null == this.data && (this.data = M.toFloatVector(null));
                    this.commands.push(1);
                    this.data.push(a);
                    this.data.push(b)
                },
                __drawCircle: function(a, b, c) {
                    this.__drawRoundRect(a -
                        c, b - c, 2 * c, 2 * c, 2 * c, 2 * c)
                },
                __drawEllipse: function(a, b, c, d) {
                    this.__drawRoundRect(a, b, c, d, c, d)
                },
                __drawRect: function(a, b, c, d) {
                    this.moveTo(a, b);
                    this.lineTo(a + c, b);
                    this.lineTo(a + c, b + d);
                    this.lineTo(a, b + d);
                    this.lineTo(a, b)
                },
                __drawRoundRect: function(a, b, c, d, e, f) {
                    e *= .5;
                    f *= .5;
                    e > c / 2 && (e = c / 2);
                    f > d / 2 && (f = d / 2);
                    c = a + c;
                    d = b + d;
                    var h = -e + .7071067811865476 * e,
                        k = -e + .41421356237309503 * e,
                        m = -f + .7071067811865476 * f,
                        g = -f + .41421356237309503 * f;
                    this.moveTo(c, d - f);
                    this.curveTo(c, d + g, c + h, d + m);
                    this.curveTo(c + k, d, c - e, d);
                    this.lineTo(a + e,
                        d);
                    this.curveTo(a - k, d, a - h, d + m);
                    this.curveTo(a, d + g, a, d - f);
                    this.lineTo(a, b + f);
                    this.curveTo(a, b - g, a - h, b - m);
                    this.curveTo(a - k, b, a + e, b);
                    this.lineTo(c - e, b);
                    this.curveTo(c + k, b, c + h, b - m);
                    this.curveTo(c, b - g, c, b + f);
                    this.lineTo(c, d - f)
                },
                __class__: Kh
            };
            var zr = function(a) {
                null == this.__glFragmentSource && (this.__glFragmentSource = "varying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform sampler2D bitmap;\n\n\t\tvoid main(void) {\n\n\t\t\tvec4 color = texture2D (bitmap, openfl_TextureCoordv);\n\n\t\tif (color.a == 0.0) {\n\n\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t} else if (openfl_HasColorTransform) {\n\n\t\t\tcolor = vec4 (color.rgb / color.a, color.a);\n\n\t\t\tmat4 colorMultiplier = mat4 (0);\n\t\t\tcolorMultiplier[0][0] = openfl_ColorMultiplierv.x;\n\t\t\tcolorMultiplier[1][1] = openfl_ColorMultiplierv.y;\n\t\t\tcolorMultiplier[2][2] = openfl_ColorMultiplierv.z;\n\t\t\tcolorMultiplier[3][3] = 1.0; // openfl_ColorMultiplierv.w;\n\n\t\t\tcolor = clamp (openfl_ColorOffsetv + (color * colorMultiplier), 0.0, 1.0);\n\n\t\t\tif (color.a > 0.0) {\n\n\t\t\t\tgl_FragColor = vec4 (color.rgb * color.a * openfl_Alphav, color.a * openfl_Alphav);\n\n\t\t\t} else {\n\n\t\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl_FragColor = color * openfl_Alphav;\n\n\t\t}\n\n\t\t}");
                null == this.__glVertexSource && (this.__glVertexSource = "attribute float openfl_Alpha;\n\t\tattribute vec4 openfl_ColorMultiplier;\n\t\tattribute vec4 openfl_ColorOffset;\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tvarying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_Alphav = openfl_Alpha;\n\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\tif (openfl_HasColorTransform) {\n\n\t\t\topenfl_ColorMultiplierv = openfl_ColorMultiplier;\n\t\t\topenfl_ColorOffsetv = openfl_ColorOffset / 255.0;\n\n\t\t}\n\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}");
                Uf.call(this, a);
                this.__isGenerated = !0;
                this.__initGL()
            };
            g["openfl.display.GraphicsShader"] = zr;
            zr.__name__ = ["openfl", "display", "GraphicsShader"];
            zr.__super__ = Uf;
            zr.prototype = p(Uf.prototype, {
                openfl_Alpha: null,
                openfl_ColorMultiplier: null,
                openfl_ColorOffset: null,
                openfl_Position: null,
                openfl_TextureCoord: null,
                openfl_Matrix: null,
                openfl_HasColorTransform: null,
                openfl_TextureSize: null,
                bitmap: null,
                __class__: zr
            });
            var mk = function(a, b) {
                null == b && (b = 1);
                null == a && (a = 0);
                this.alpha = b;
                this.color = a;
                this.__graphicsDataType =
                    1;
                this.__graphicsFillType = 0
            };
            g["openfl.display.GraphicsSolidFill"] = mk;
            mk.__name__ = ["openfl", "display", "GraphicsSolidFill"];
            mk.__interfaces__ = [yr, Al];
            mk.prototype = {
                alpha: null,
                color: null,
                __graphicsDataType: null,
                __graphicsFillType: null,
                __class__: mk
            };
            var Lw = function() {};
            g["openfl.display.IGraphicsStroke"] = Lw;
            Lw.__name__ = ["openfl", "display", "IGraphicsStroke"];
            var xr = function(a, b, c, d, e, f, h) {
                null == f && (f = 3);
                null == e && (e = 2);
                null == d && (d = 0);
                null == c && (c = 2);
                null == b && (b = !1);
                null == a && (a = NaN);
                this.caps = d;
                this.fill =
                    h;
                this.joints = e;
                this.miterLimit = f;
                this.pixelHinting = b;
                this.scaleMode = c;
                this.thickness = a;
                this.__graphicsDataType = 0
            };
            g["openfl.display.GraphicsStroke"] = xr;
            xr.__name__ = ["openfl", "display", "GraphicsStroke"];
            xr.__interfaces__ = [Lw, Al];
            xr.prototype = {
                caps: null,
                fill: null,
                joints: null,
                miterLimit: null,
                pixelHinting: null,
                scaleMode: null,
                thickness: null,
                __graphicsDataType: null,
                __class__: xr
            };
            var vw = {};
            g["openfl.display._JointStyle.JointStyle_Impl_"] = vw;
            vw.__name__ = ["openfl", "display", "_JointStyle", "JointStyle_Impl_"];
            vw.toString = function(a) {
                switch (a) {
                    case 0:
                        return "bevel";
                    case 1:
                        return "miter";
                    case 2:
                        return "round";
                    default:
                        return null
                }
            };
            var Yu = function() {};
            g["openfl.display.Loader"] = Yu;
            Yu.__name__ = ["openfl", "display", "Loader"];
            Yu.__super__ = gb;
            Yu.prototype = p(gb.prototype, {
                __class__: Yu
            });
            var Yi = function() {
                bb.call(this);
                this.applicationDomain = Bl.currentDomain;
                this.bytesTotal = this.bytesLoaded = 0;
                this.childAllowsParent = !0;
                this.parameters = {}
            };
            g["openfl.display.LoaderInfo"] = Yi;
            Yi.__name__ = ["openfl", "display", "LoaderInfo"];
            Yi.create = function(a) {
                var b = new Yi;
                b.uncaughtErrorEvents = new Ar;
                null != a ? b.loader = a : b.url = Yi.__rootURL;
                return b
            };
            Yi.__super__ = bb;
            Yi.prototype = p(bb.prototype, {
                applicationDomain: null,
                bytesLoaded: null,
                bytesTotal: null,
                childAllowsParent: null,
                content: null,
                loader: null,
                parameters: null,
                uncaughtErrorEvents: null,
                url: null,
                __completed: null,
                __complete: function() {
                    this.__completed || (this.bytesLoaded < this.bytesTotal && (this.bytesLoaded = this.bytesTotal), this.__update(this.bytesLoaded, this.bytesTotal), this.__completed = !0, this.dispatchEvent(new Oa("complete")))
                },
                __update: function(a, b) {
                    this.bytesLoaded = a;
                    this.bytesTotal = b;
                    this.dispatchEvent(new Cl("progress", !1, !1, a, b))
                },
                __class__: Yi
            });
            var hb = function(a, b, c, d) {
                null == d && (d = 0);
                null == c && (c = 0);
                null == b && (b = 0);
                null == a && (a = 0);
                this.x = a;
                this.y = b;
                this.width = c;
                this.height = d
            };
            g["openfl.geom.Rectangle"] = hb;
            hb.__name__ = ["openfl", "geom", "Rectangle"];
            hb.prototype = {
                height: null,
                width: null,
                x: null,
                y: null,
                clone: function() {
                    return new hb(this.x, this.y, this.width, this.height)
                },
                contains: function(a,
                    b) {
                    return a >= this.x && b >= this.y && a < this.get_right() ? b < this.get_bottom() : !1
                },
                containsPoint: function(a) {
                    return this.contains(a.x, a.y)
                },
                copyFrom: function(a) {
                    this.x = a.x;
                    this.y = a.y;
                    this.width = a.width;
                    this.height = a.height
                },
                equals: function(a) {
                    return a == this ? !0 : null != a && this.x == a.x && this.y == a.y && this.width == a.width ? this.height == a.height : !1
                },
                setTo: function(a, b, c, d) {
                    this.x = a;
                    this.y = b;
                    this.width = c;
                    this.height = d
                },
                union: function(a) {
                    if (0 == this.width || 0 == this.height) return a.clone();
                    if (0 == a.width || 0 == a.height) return this.clone();
                    var b = this.x > a.x ? a.x : this.x,
                        c = this.get_right() < a.get_right() ? a.get_right() : this.get_right(),
                        d = this.y > a.y ? a.y : this.y;
                    a = this.get_bottom() < a.get_bottom() ? a.get_bottom() : this.get_bottom();
                    return new hb(b, d, c - b, a - d)
                },
                __contract: function(a, b, c, d) {
                    if (0 != this.width || 0 != this.height) {
                        var e = 0,
                            f = 0,
                            h = 0,
                            k = 0;
                        this.x < a && (e = a - this.x);
                        this.y < b && (f = b - this.y);
                        this.get_right() > a + c && (h = a + c - this.get_right());
                        this.get_bottom() > b + d && (k = b + d - this.get_bottom());
                        this.x += e;
                        this.y += f;
                        this.width += h - e;
                        this.height += k - f
                    }
                },
                __expand: function(a,
                    b, c, d) {
                    if (0 == this.width && 0 == this.height) this.x = a, this.y = b, this.width = c, this.height = d;
                    else {
                        var e = this.get_right(),
                            f = this.get_bottom();
                        this.x > a && (this.x = a, this.width = e - a);
                        this.y > b && (this.y = b, this.height = f - b);
                        e < a + c && (this.width = a + c - this.x);
                        f < b + d && (this.height = b + d - this.y)
                    }
                },
                __toLimeRectangle: function() {
                    null == hb.__limeRectangle && (hb.__limeRectangle = new Eg);
                    hb.__limeRectangle.setTo(this.x, this.y, this.width, this.height);
                    return hb.__limeRectangle
                },
                __transform: function(a, b) {
                    var c = b.a * this.x + b.c * this.y,
                        d = c,
                        e = b.b * this.x + b.d * this.y,
                        f = e,
                        h = b.a * (this.x + this.width) + b.c * this.y,
                        k = b.b * (this.x + this.width) + b.d * this.y;
                    h < c && (c = h);
                    k < e && (e = k);
                    h > d && (d = h);
                    k > f && (f = k);
                    h = b.a * (this.x + this.width) + b.c * (this.y + this.height);
                    k = b.b * (this.x + this.width) + b.d * (this.y + this.height);
                    h < c && (c = h);
                    k < e && (e = k);
                    h > d && (d = h);
                    k > f && (f = k);
                    h = b.a * this.x + b.c * (this.y + this.height);
                    k = b.b * this.x + b.d * (this.y + this.height);
                    h < c && (c = h);
                    k < e && (e = k);
                    h > d && (d = h);
                    k > f && (f = k);
                    a.setTo(c + b.tx, e + b.ty, d - c, f - e)
                },
                get_bottom: function() {
                    return this.y + this.height
                },
                get_left: function() {
                    return this.x
                },
                get_right: function() {
                    return this.x + this.width
                },
                get_top: function() {
                    return this.y
                },
                __class__: hb
            };
            var Bb = function(a, b) {
                Hg.call(this);
                this.__context3D = a;
                this.__context = a.__context;
                this.__gl = this.gl = a.__context.webgl;
                this.__defaultRenderTarget = b;
                this.__flipped = null == this.__defaultRenderTarget;
                null == jf.maxTextureWidth && (jf.maxTextureWidth = jf.maxTextureHeight = this.__gl.getParameter(this.__gl.MAX_TEXTURE_SIZE));
                this.__matrix = ic._new();
                this.__values = [];
                this.__softwareRenderer = new xh(null);
                this.__type = "opengl";
                this.__setBlendMode(10);
                this.__context3D.__setGLBlend(!0);
                this.__clipRects = [];
                this.__maskObjects = [];
                this.__numClipRects = 0;
                this.__projection = ic._new();
                this.__projectionFlipped = ic._new();
                this.__stencilReference = 0;
                this.__tempRect = new hb;
                this.__defaultDisplayShader = new rr;
                this.__defaultGraphicsShader = new zr;
                this.__defaultShader = this.__defaultDisplayShader;
                this.__initShader(this.__defaultShader);
                this.__scrollRectMasks = new Rb(function() {
                    return new Ke
                });
                this.__maskShader = new Dl
            };
            g["openfl.display.OpenGLRenderer"] =
                Bb;
            Bb.__name__ = ["openfl", "display", "OpenGLRenderer"];
            Bb.__super__ = Hg;
            Bb.prototype = p(Hg.prototype, {
                gl: null,
                __context3D: null,
                __clipRects: null,
                __currentDisplayShader: null,
                __currentGraphicsShader: null,
                __currentShader: null,
                __currentShaderBuffer: null,
                __defaultDisplayShader: null,
                __defaultGraphicsShader: null,
                __defaultRenderTarget: null,
                __defaultShader: null,
                __displayHeight: null,
                __displayWidth: null,
                __flipped: null,
                __gl: null,
                __height: null,
                __maskShader: null,
                __matrix: null,
                __maskObjects: null,
                __numClipRects: null,
                __offsetX: null,
                __offsetY: null,
                __projection: null,
                __projectionFlipped: null,
                __scrollRectMasks: null,
                __softwareRenderer: null,
                __stencilReference: null,
                __tempRect: null,
                __updatedStencil: null,
                __upscaled: null,
                __values: null,
                __width: null,
                applyAlpha: function(a) {
                    Bb.__alphaValue[0] = a;
                    null != this.__currentShaderBuffer ? this.__currentShaderBuffer.addFloatOverride("openfl_Alpha", Bb.__alphaValue) : null != this.__currentShader && null != this.__currentShader.__alpha && (this.__currentShader.__alpha.value = Bb.__alphaValue)
                },
                applyBitmapData: function(a,
                    b, c) {
                    null == c && (c = !1);
                    null != this.__currentShaderBuffer ? null != a && (Bb.__textureSizeValue[0] = a.__textureWidth, Bb.__textureSizeValue[1] = a.__textureHeight, this.__currentShaderBuffer.addFloatOverride("openfl_TextureSize", Bb.__textureSizeValue)) : null != this.__currentShader && (null != this.__currentShader.__bitmap && (this.__currentShader.__bitmap.input = a, this.__currentShader.__bitmap.filter = b && this.__allowSmoothing ? 4 : 5, this.__currentShader.__bitmap.mipFilter = 2, this.__currentShader.__bitmap.wrap = c ? 2 : 0), null != this.__currentShader.__texture &&
                        (this.__currentShader.__texture.input = a, this.__currentShader.__texture.filter = b && this.__allowSmoothing ? 4 : 5, this.__currentShader.__texture.mipFilter = 2, this.__currentShader.__texture.wrap = c ? 2 : 0), null != this.__currentShader.__textureSize && (null != a ? (Bb.__textureSizeValue[0] = a.__textureWidth, Bb.__textureSizeValue[1] = a.__textureHeight, this.__currentShader.__textureSize.value = Bb.__textureSizeValue) : this.__currentShader.__textureSize.value = null))
                },
                applyColorTransform: function(a) {
                    var b = null != a && !a.__isDefault(!0);
                    this.applyHasColorTransform(b);
                    b ? (a.__setArrays(Bb.__colorMultipliersValue, Bb.__colorOffsetsValue), null != this.__currentShaderBuffer ? (this.__currentShaderBuffer.addFloatOverride("openfl_ColorMultiplier", Bb.__colorMultipliersValue), this.__currentShaderBuffer.addFloatOverride("openfl_ColorOffset", Bb.__colorOffsetsValue)) : null != this.__currentShader && (null != this.__currentShader.__colorMultiplier && (this.__currentShader.__colorMultiplier.value = Bb.__colorMultipliersValue), null != this.__currentShader.__colorOffset &&
                        (this.__currentShader.__colorOffset.value = Bb.__colorOffsetsValue))) : null != this.__currentShaderBuffer ? (this.__currentShaderBuffer.addFloatOverride("openfl_ColorMultiplier", Bb.__emptyColorValue), this.__currentShaderBuffer.addFloatOverride("openfl_ColorOffset", Bb.__emptyColorValue)) : null != this.__currentShader && (null != this.__currentShader.__colorMultiplier && (this.__currentShader.__colorMultiplier.value = Bb.__emptyColorValue), null != this.__currentShader.__colorOffset && (this.__currentShader.__colorOffset.value =
                        Bb.__emptyColorValue))
                },
                applyHasColorTransform: function(a) {
                    Bb.__hasColorTransformValue[0] = a;
                    null != this.__currentShaderBuffer ? this.__currentShaderBuffer.addBoolOverride("openfl_HasColorTransform", Bb.__hasColorTransformValue) : null != this.__currentShader && null != this.__currentShader.__hasColorTransform && (this.__currentShader.__hasColorTransform.value = Bb.__hasColorTransformValue)
                },
                applyMatrix: function(a) {
                    null != this.__currentShaderBuffer ? this.__currentShaderBuffer.addFloatOverride("openfl_Matrix", a) : null !=
                        this.__currentShader && null != this.__currentShader.__matrix && (this.__currentShader.__matrix.value = a)
                },
                setShader: function(a) {
                    this.__currentShaderBuffer = null;
                    this.__currentShader != a && (null == a ? (this.__currentShader = null, this.__context3D.setProgram(null)) : (this.__currentShader = a, this.__initShader(a), this.__context3D.setProgram(a.program), this.__context3D.__flushGLProgram(), this.__currentShader.__enable(), this.__context3D.__state.shader = a))
                },
                setViewport: function() {
                    this.__gl.viewport(this.__offsetX, this.__offsetY,
                        this.__displayWidth, this.__displayHeight)
                },
                updateShader: function() {
                    null != this.__currentShader && (null != this.__currentShader.__position && (this.__currentShader.__position.__useArray = !0), null != this.__currentShader.__textureCoord && (this.__currentShader.__textureCoord.__useArray = !0), this.__context3D.setProgram(this.__currentShader.program), this.__context3D.__flushGLProgram(), this.__context3D.__flushGLTextures(), this.__currentShader.__update())
                },
                __clear: function() {
                    null == this.__stage || this.__stage.__transparent ?
                        this.__context3D.clear(0, 0, 0, 0, 0, 0, 1) : this.__context3D.clear(this.__stage.__colorSplit[0], this.__stage.__colorSplit[1], this.__stage.__colorSplit[2], 1, 0, 0, 1);
                    this.__cleared = !0
                },
                __clearShader: function() {
                    null != this.__currentShader && (null == this.__currentShaderBuffer ? null != this.__currentShader.__bitmap && (this.__currentShader.__bitmap.input = null) : this.__currentShaderBuffer.clearOverride(), null != this.__currentShader.__texture && (this.__currentShader.__texture.input = null), null != this.__currentShader.__textureSize &&
                        (this.__currentShader.__textureSize.value = null), null != this.__currentShader.__hasColorTransform && (this.__currentShader.__hasColorTransform.value = null), null != this.__currentShader.__position && (this.__currentShader.__position.value = null), null != this.__currentShader.__matrix && (this.__currentShader.__matrix.value = null), this.__currentShader.__clearUseArray())
                },
                __copyShader: function(a) {
                    this.__currentShader = a.__currentShader;
                    this.__currentShaderBuffer = a.__currentShaderBuffer;
                    this.__currentDisplayShader = a.__currentDisplayShader;
                    this.__currentGraphicsShader = a.__currentGraphicsShader
                },
                __getMatrix: function(a, b) {
                    var c = Ya.__pool.get();
                    c.copyFrom(a);
                    c.concat(this.__worldTransform);
                    if (0 == b || 1 == b && 0 == c.b && 0 == c.c && 1.001 > c.a && .999 < c.a && 1.001 > c.d && .999 < c.d) c.tx = Math.round(c.tx), c.ty = Math.round(c.ty);
                    ic.identity(this.__matrix);
                    ic.set(this.__matrix, 0, c.a);
                    ic.set(this.__matrix, 1, c.b);
                    ic.set(this.__matrix, 4, c.c);
                    ic.set(this.__matrix, 5, c.d);
                    ic.set(this.__matrix, 12, c.tx);
                    ic.set(this.__matrix, 13, c.ty);
                    ic.append(this.__matrix, this.__flipped ?
                        this.__projectionFlipped : this.__projection);
                    for (a = 0; 16 > a;) b = a++, this.__values[b] = ic.get(this.__matrix, b);
                    Ya.__pool.release(c);
                    return this.__values
                },
                __initShader: function(a) {
                    return null != a ? (null == a.__context && (a.__context = this.__context3D, a.__init()), a) : this.__defaultShader
                },
                __initDisplayShader: function(a) {
                    return null != a ? (null == a.__context && (a.__context = this.__context3D, a.__init()), a) : this.__defaultDisplayShader
                },
                __initGraphicsShader: function(a) {
                    return null != a ? (null == a.__context && (a.__context = this.__context3D,
                        a.__init()), a) : this.__defaultGraphicsShader
                },
                __initShaderBuffer: function(a) {
                    return null != a ? this.__initGraphicsShader(a.shader) : this.__defaultGraphicsShader
                },
                __popMask: function() {
                    if (0 != this.__stencilReference) {
                        var a = this.__maskObjects.pop();
                        1 < this.__stencilReference ? (this.__context3D.setStencilActions(2, 1, 0, 0, 5), this.__context3D.setStencilReferenceValue(this.__stencilReference, 255, 255), this.__context3D.setColorMask(!1, !1, !1, !1), a.__renderGLMask(this), this.__stencilReference--, this.__context3D.setStencilActions(2,
                            1, 5, 5, 5), this.__context3D.setStencilReferenceValue(this.__stencilReference, 255, 0), this.__context3D.setColorMask(!0, !0, !0, !0)) : (this.__stencilReference = 0, this.__context3D.setStencilActions(), this.__context3D.setStencilReferenceValue(0, 0, 0))
                    }
                },
                __popMaskObject: function(a, b) {
                    null == b && (b = !0);
                    null != a.__mask && this.__popMask();
                    b && null != a.__scrollRect && (0 != a.__renderTransform.b || 0 != a.__renderTransform.c ? (this.__scrollRectMasks.release(this.__maskObjects[this.__maskObjects.length - 1]), this.__popMask()) : this.__popMaskRect())
                },
                __popMaskRect: function() {
                    0 < this.__numClipRects && (this.__numClipRects--, 0 < this.__numClipRects ? this.__scissorRect(this.__clipRects[this.__numClipRects - 1]) : this.__scissorRect())
                },
                __pushMask: function(a) {
                    0 == this.__stencilReference && (this.__context3D.clear(0, 0, 0, 0, 0, 0, 4), this.__updatedStencil = !0);
                    this.__context3D.setStencilActions(2, 1, 2, 5, 5);
                    this.__context3D.setStencilReferenceValue(this.__stencilReference, 255, 255);
                    this.__context3D.setColorMask(!1, !1, !1, !1);
                    a.__renderGLMask(this);
                    this.__maskObjects.push(a);
                    this.__stencilReference++;
                    this.__context3D.setStencilActions(2, 1, 5, 5, 5);
                    this.__context3D.setStencilReferenceValue(this.__stencilReference, 255, 0);
                    this.__context3D.setColorMask(!0, !0, !0, !0)
                },
                __pushMaskObject: function(a, b) {
                    null == b && (b = !0);
                    b && null != a.__scrollRect && (0 != a.__renderTransform.b || 0 != a.__renderTransform.c ? (b = this.__scrollRectMasks.get(), b.get_graphics().clear(), b.get_graphics().beginFill(65280), b.get_graphics().drawRect(a.__scrollRect.x, a.__scrollRect.y, a.__scrollRect.width, a.__scrollRect.height),
                        b.__renderTransform.copyFrom(a.__renderTransform), this.__pushMask(b)) : this.__pushMaskRect(a.__scrollRect, a.__renderTransform));
                    null != a.__mask && this.__pushMask(a.__mask)
                },
                __pushMaskRect: function(a, b) {
                    this.__numClipRects == this.__clipRects.length && (this.__clipRects[this.__numClipRects] = new hb);
                    var c = Ya.__pool.get();
                    c.copyFrom(b);
                    c.concat(this.__worldTransform);
                    b = this.__clipRects[this.__numClipRects];
                    a.__transform(b, c);
                    0 < this.__numClipRects && (a = this.__clipRects[this.__numClipRects - 1], b.__contract(a.x,
                        a.y, a.width, a.height));
                    0 > b.height && (b.height = 0);
                    0 > b.width && (b.width = 0);
                    Ya.__pool.release(c);
                    this.__scissorRect(b);
                    this.__numClipRects++
                },
                __render: function(a) {
                    this.__context3D.setColorMask(!0, !0, !0, !0);
                    this.__context3D.setCulling(3);
                    this.__context3D.setDepthTest(!1, 0);
                    this.__context3D.setStencilActions();
                    this.__context3D.setStencilReferenceValue(0, 0, 0);
                    this.__context3D.setScissorRectangle(null);
                    this.__blendMode = null;
                    this.__setBlendMode(10);
                    if (null == this.__defaultRenderTarget) {
                        if (Bb.__scissorRectangle.setTo(this.__offsetX,
                                this.__offsetY, this.__displayWidth, this.__displayHeight), this.__context3D.setScissorRectangle(Bb.__scissorRectangle), this.__upscaled = 1 != this.__worldTransform.a || 1 != this.__worldTransform.d, a.__renderGL(this), 0 < this.__offsetX || 0 < this.__offsetY) 0 < this.__offsetX && (Bb.__scissorRectangle.setTo(0, 0, this.__offsetX, this.__height), this.__context3D.setScissorRectangle(Bb.__scissorRectangle), this.__context3D.__flushGL(), this.__gl.clearColor(0, 0, 0, 1), this.__gl.clear(this.__gl.COLOR_BUFFER_BIT), Bb.__scissorRectangle.setTo(this.__offsetX +
                            this.__displayWidth, 0, this.__width, this.__height), this.__context3D.setScissorRectangle(Bb.__scissorRectangle), this.__context3D.__flushGL(), this.__gl.clearColor(0, 0, 0, 1), this.__gl.clear(this.__gl.COLOR_BUFFER_BIT)), 0 < this.__offsetY && (Bb.__scissorRectangle.setTo(0, 0, this.__width, this.__offsetY), this.__context3D.setScissorRectangle(Bb.__scissorRectangle), this.__context3D.__flushGL(), this.__gl.clearColor(0, 0, 0, 1), this.__gl.clear(this.__gl.COLOR_BUFFER_BIT), Bb.__scissorRectangle.setTo(0, this.__offsetY +
                            this.__displayHeight, this.__width, this.__height), this.__context3D.setScissorRectangle(Bb.__scissorRectangle), this.__context3D.__flushGL(), this.__gl.clearColor(0, 0, 0, 1), this.__gl.clear(this.__gl.COLOR_BUFFER_BIT)), this.__context3D.setScissorRectangle(null)
                    } else {
                        Bb.__scissorRectangle.setTo(this.__offsetX, this.__offsetY, this.__displayWidth, this.__displayHeight);
                        this.__context3D.setScissorRectangle(Bb.__scissorRectangle);
                        var b = a.__mask,
                            c = a.__scrollRect;
                        a.__mask = null;
                        a.__scrollRect = null;
                        a.__renderGL(this);
                        a.__mask = b;
                        a.__scrollRect = c
                    }
                    this.__context3D.present()
                },
                __renderFilterPass: function(a, b, c, d) {
                    null == d && (d = !0);
                    if (null != a && null != b && null != this.__defaultRenderTarget) {
                        var e = this.__context3D.__state.renderToTexture,
                            f = this.__context3D.__state.renderToTextureDepthStencil,
                            h = this.__context3D.__state.renderToTextureAntiAlias,
                            k = this.__context3D.__state.renderToTextureSurfaceSelector;
                        this.__context3D.setRenderToTexture(this.__defaultRenderTarget.getTexture(this.__context3D), !1);
                        d && this.__context3D.clear(0, 0,
                            0, 0, 0, 0, 1);
                        b = this.__initShader(b);
                        this.setShader(b);
                        this.applyAlpha(1);
                        this.applyBitmapData(a, c);
                        this.applyColorTransform(null);
                        this.applyMatrix(this.__getMatrix(a.__renderTransform, 1));
                        this.updateShader();
                        c = a.getVertexBuffer(this.__context3D);
                        null != b.__position && this.__context3D.setVertexBufferAt(b.__position.index, c, 0, 3);
                        null != b.__textureCoord && this.__context3D.setVertexBufferAt(b.__textureCoord.index, c, 3, 2);
                        a = a.getIndexBuffer(this.__context3D);
                        this.__context3D.drawTriangles(a);
                        null != e ? this.__context3D.setRenderToTexture(e,
                            f, h, k) : this.__context3D.setRenderToBackBuffer();
                        this.__clearShader()
                    }
                },
                __resize: function(a, b) {
                    this.__width = a;
                    this.__height = b;
                    a = null == this.__defaultRenderTarget ? this.__stage.stageWidth : this.__defaultRenderTarget.width;
                    b = null == this.__defaultRenderTarget ? this.__stage.stageHeight : this.__defaultRenderTarget.height;
                    this.__offsetX = null == this.__defaultRenderTarget ? Math.round(this.__worldTransform.__transformX(0, 0)) : 0;
                    this.__offsetY = null == this.__defaultRenderTarget ? Math.round(this.__worldTransform.__transformY(0,
                        0)) : 0;
                    this.__displayWidth = null == this.__defaultRenderTarget ? Math.round(this.__worldTransform.__transformX(a, 0) - this.__offsetX) : a;
                    this.__displayHeight = null == this.__defaultRenderTarget ? Math.round(this.__worldTransform.__transformY(0, b) - this.__offsetY) : b;
                    ic.createOrtho(this.__projection, 0, this.__displayWidth + 2 * this.__offsetX, 0, this.__displayHeight + 2 * this.__offsetY, -1E3, 1E3);
                    ic.createOrtho(this.__projectionFlipped, 0, this.__displayWidth + 2 * this.__offsetX, this.__displayHeight + 2 * this.__offsetY, 0, -1E3, 1E3)
                },
                __resumeClipAndMask: function(a) {
                    0 < this.__stencilReference ? (this.__context3D.setStencilActions(2, 1, 5, 5, 5), this.__context3D.setStencilReferenceValue(this.__stencilReference, 255, 0)) : (this.__context3D.setStencilActions(), this.__context3D.setStencilReferenceValue(0, 0, 0));
                    0 < this.__numClipRects ? this.__scissorRect(this.__clipRects[this.__numClipRects - 1]) : this.__scissorRect()
                },
                __scissorRect: function(a) {
                    if (null != a) {
                        var b = Math.floor(a.x),
                            c = Math.floor(a.y),
                            d = 0 < a.width ? Math.ceil(a.get_right()) - b : 0;
                        a = 0 < a.height ?
                            Math.ceil(a.get_bottom()) - c : 0;
                        0 > d && (d = 0);
                        0 > a && (a = 0);
                        Bb.__scissorRectangle.setTo(b, c, d, a);
                        this.__context3D.setScissorRectangle(Bb.__scissorRectangle)
                    } else this.__context3D.setScissorRectangle(null)
                },
                __setBlendMode: function(a) {
                    null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
                    if (this.__blendMode != a) switch (this.__blendMode = a, a) {
                        case 0:
                            this.__context3D.setBlendFactors(2, 2);
                            break;
                        case 9:
                            this.__context3D.setBlendFactors(1, 5);
                            break;
                        case 12:
                            this.__context3D.setBlendFactors(2, 6);
                            break;
                        case 14:
                            this.__context3D.setBlendFactors(2,
                                2);
                            this.__context3D.__setGLBlendEquation(this.__gl.FUNC_REVERSE_SUBTRACT);
                            break;
                        default:
                            this.__context3D.setBlendFactors(2, 5)
                    }
                },
                __setRenderTarget: function(a) {
                    this.__defaultRenderTarget = a;
                    this.__flipped = null == a;
                    null != a && this.__resize(a.width, a.height)
                },
                __setShaderBuffer: function(a) {
                    this.setShader(a.shader);
                    this.__currentShaderBuffer = a
                },
                __suspendClipAndMask: function() {
                    0 < this.__stencilReference && (this.__context3D.setStencilActions(), this.__context3D.setStencilReferenceValue(0, 0, 0));
                    0 < this.__numClipRects &&
                        this.__scissorRect()
                },
                __updateShaderBuffer: function(a) {
                    null != this.__currentShader && null != this.__currentShaderBuffer && this.__currentShader.__updateFromBuffer(this.__currentShaderBuffer, a)
                },
                __class__: Bb
            });
            var So = function(a) {
                this.onComplete = new Ad;
                this.display = a;
                null != a && (a.addEventListener("unload", q(this, this.display_onUnload)), ia.get_current().addChild(a))
            };
            g["openfl.display.Preloader"] = So;
            So.__name__ = ["openfl", "display", "Preloader"];
            So.prototype = {
                onComplete: null,
                complete: null,
                display: null,
                ready: null,
                start: function() {
                    this.ready = !0;
                    ia.get_current().get_loaderInfo().__complete();
                    if (null != this.display) {
                        var a = new Oa("complete", !0, !0);
                        this.display.dispatchEvent(a);
                        a.isDefaultPrevented() || this.display.dispatchEvent(new Oa("unload"))
                    } else this.complete || (this.complete = !0, this.onComplete.dispatch())
                },
                update: function(a, b) {
                    ia.get_current().get_loaderInfo().__update(a, b);
                    null != this.display && this.display.dispatchEvent(new Cl("progress", !0, !0, a, b))
                },
                display_onUnload: function(a) {
                    null != this.display && (this.display.removeEventListener("unload",
                        q(this, this.display_onUnload)), this.display.parent == ia.get_current() && ia.get_current().removeChild(this.display), ia.get_current().stage.set_focus(null), this.display = null);
                    this.ready && !this.complete && (this.complete = !0, this.onComplete.dispatch())
                },
                __class__: So
            };
            var Zu = function(a, b, c) {
                this.name = a;
                this.labels = b;
                this.numFrames = c
            };
            g["openfl.display.Scene"] = Zu;
            Zu.__name__ = ["openfl", "display", "Scene"];
            Zu.prototype = {
                labels: null,
                name: null,
                numFrames: null,
                __class__: Zu
            };
            var qq = function() {
                this.channels = 0;
                this.filter =
                    5;
                this.index = this.height = 0;
                this.mipFilter = 2;
                this.wrap = this.width = 0
            };
            g["openfl.display.ShaderInput"] = qq;
            qq.__name__ = ["openfl", "display", "ShaderInput"];
            qq.prototype = {
                channels: null,
                filter: null,
                height: null,
                index: null,
                input: null,
                mipFilter: null,
                name: null,
                width: null,
                wrap: null,
                __isUniform: null,
                __disableGL: function(a, b) {
                    a.setTextureAt(b, null)
                },
                __updateGL: function(a, b, c, d, e, f) {
                    c = null != c ? c : this.input;
                    d = null != d ? d : this.filter;
                    e = null != e ? e : this.mipFilter;
                    f = null != f ? f : this.wrap;
                    null != c ? (a.setTextureAt(b, c.getTexture(a)),
                        a.setSamplerStateAt(b, f, d, e)) : a.setTextureAt(b, null)
                },
                __class__: qq
            };
            var ll = function() {
                this.index = 0
            };
            g["openfl.display.ShaderParameter"] = ll;
            ll.__name__ = ["openfl", "display", "ShaderParameter"];
            ll.prototype = {
                index: null,
                name: null,
                type: null,
                value: null,
                __arrayLength: null,
                __internal: null,
                __isBool: null,
                __isFloat: null,
                __isInt: null,
                __isUniform: null,
                __length: null,
                __uniformMatrix: null,
                __useArray: null,
                __disableGL: function(a) {
                    a = a.gl;
                    if (!this.__isUniform)
                        for (var b = 0, c = this.__arrayLength; b < c;) {
                            var d = b++;
                            a.disableVertexAttribArray(this.index +
                                d)
                        }
                },
                __updateGL: function(a, b) {
                    a = a.gl;
                    var c = null != b ? b : this.value,
                        d = this.__isBool ? c : null;
                    b = this.__isFloat ? c : null;
                    var e = this.__isInt ? c : null;
                    if (this.__isUniform)
                        if (null != c && c.length >= this.__length) switch (this.type) {
                            case 0:
                                a.uniform1i(this.index, d[0] ? 1 : 0);
                                break;
                            case 1:
                                a.uniform2i(this.index, d[0] ? 1 : 0, d[1] ? 1 : 0);
                                break;
                            case 2:
                                a.uniform3i(this.index, d[0] ? 1 : 0, d[1] ? 1 : 0, d[2] ? 1 : 0);
                                break;
                            case 3:
                                a.uniform4i(this.index, d[0] ? 1 : 0, d[1] ? 1 : 0, d[2] ? 1 : 0, d[3] ? 1 : 0);
                                break;
                            case 4:
                                a.uniform1f(this.index, b[0]);
                                break;
                            case 5:
                                a.uniform2f(this.index,
                                    b[0], b[1]);
                                break;
                            case 6:
                                a.uniform3f(this.index, b[0], b[1], b[2]);
                                break;
                            case 7:
                                a.uniform4f(this.index, b[0], b[1], b[2], b[3]);
                                break;
                            case 8:
                                a.uniform1i(this.index, e[0]);
                                break;
                            case 9:
                                a.uniform2i(this.index, e[0], e[1]);
                                break;
                            case 10:
                                a.uniform3i(this.index, e[0], e[1], e[2]);
                                break;
                            case 11:
                                a.uniform4i(this.index, e[0], e[1], e[2], e[3]);
                                break;
                            case 12:
                                for (c = 0; 4 > c;) d = c++, this.__uniformMatrix[d] = b[d];
                                Td.uniformMatrix2fv(a, this.index, !1, this.__uniformMatrix);
                                break;
                            case 16:
                                for (c = 0; 9 > c;) d = c++, this.__uniformMatrix[d] = b[d];
                                Td.uniformMatrix3fv(a, this.index, !1, this.__uniformMatrix);
                                break;
                            case 20:
                                for (c = 0; 16 > c;) d = c++, this.__uniformMatrix[d] = b[d];
                                Td.uniformMatrix4fv(a, this.index, !1, this.__uniformMatrix)
                        } else switch (this.type) {
                                case 1:
                                case 9:
                                    a.uniform2i(this.index, 0, 0);
                                    break;
                                case 3:
                                case 11:
                                    a.uniform4i(this.index, 0, 0, 0, 0);
                                    break;
                                case 4:
                                    a.uniform1f(this.index, 0);
                                    break;
                                case 5:
                                    a.uniform2f(this.index, 0, 0);
                                    break;
                                case 6:
                                    a.uniform3f(this.index, 0, 0, 0);
                                    break;
                                case 7:
                                    a.uniform4f(this.index, 0, 0, 0, 0);
                                    break;
                                case 0:
                                case 8:
                                    a.uniform1i(this.index,
                                        0);
                                    break;
                                case 2:
                                case 10:
                                    a.uniform3i(this.index, 0, 0, 0);
                                    break;
                                case 12:
                                    for (b = 0; 4 > b;) c = b++, this.__uniformMatrix[c] = 0;
                                    Td.uniformMatrix2fv(a, this.index, !1, this.__uniformMatrix);
                                    break;
                                case 16:
                                    for (b = 0; 9 > b;) c = b++, this.__uniformMatrix[c] = 0;
                                    Td.uniformMatrix3fv(a, this.index, !1, this.__uniformMatrix);
                                    break;
                                case 20:
                                    for (b = 0; 16 > b;) c = b++, this.__uniformMatrix[c] = 0;
                                    Td.uniformMatrix4fv(a, this.index, !1, this.__uniformMatrix)
                            } else if (this.__useArray || null != c && c.length != this.__length)
                                for (b = 0, c = this.__arrayLength; b < c;) d = b++,
                                    a.enableVertexAttribArray(this.index + d);
                            else {
                                for (var f = 0, h = this.__arrayLength; f < h;) {
                                    var k = f++;
                                    a.disableVertexAttribArray(this.index + k)
                                }
                                if (null != c) switch (this.type) {
                                    case 0:
                                        a.vertexAttrib1f(this.index, d[0] ? 1 : 0);
                                        break;
                                    case 1:
                                        a.vertexAttrib2f(this.index, d[0] ? 1 : 0, d[1] ? 1 : 0);
                                        break;
                                    case 2:
                                        a.vertexAttrib3f(this.index, d[0] ? 1 : 0, d[1] ? 1 : 0, d[2] ? 1 : 0);
                                        break;
                                    case 3:
                                        a.vertexAttrib4f(this.index, d[0] ? 1 : 0, d[1] ? 1 : 0, d[2] ? 1 : 0, d[3] ? 1 : 0);
                                        break;
                                    case 4:
                                        a.vertexAttrib1f(this.index, b[0]);
                                        break;
                                    case 5:
                                        a.vertexAttrib2f(this.index,
                                            b[0], b[1]);
                                        break;
                                    case 6:
                                        a.vertexAttrib3f(this.index, b[0], b[1], b[2]);
                                        break;
                                    case 7:
                                        a.vertexAttrib4f(this.index, b[0], b[1], b[2], b[3]);
                                        break;
                                    case 8:
                                        a.vertexAttrib1f(this.index, e[0]);
                                        break;
                                    case 9:
                                        a.vertexAttrib2f(this.index, e[0], e[1]);
                                        break;
                                    case 10:
                                        a.vertexAttrib3f(this.index, e[0], e[1], e[2]);
                                        break;
                                    case 11:
                                        a.vertexAttrib4f(this.index, e[0], e[1], e[2], e[3]);
                                        break;
                                    case 12:
                                        for (c = 0; 2 > c;) d = c++, a.vertexAttrib2f(this.index + d, b[2 * d], b[2 * d + 1]);
                                        break;
                                    case 16:
                                        for (c = 0; 3 > c;) d = c++, a.vertexAttrib3f(this.index + d, b[3 * d], b[3 *
                                            d + 1], b[3 * d + 2]);
                                        break;
                                    case 20:
                                        for (c = 0; 4 > c;) d = c++, a.vertexAttrib4f(this.index + d, b[4 * d], b[4 * d + 1], b[4 * d + 2], b[4 * d + 3])
                                } else switch (this.type) {
                                    case 1:
                                    case 5:
                                    case 9:
                                        a.vertexAttrib2f(this.index, 0, 0);
                                        break;
                                    case 3:
                                    case 7:
                                    case 11:
                                        a.vertexAttrib4f(this.index, 0, 0, 0, 0);
                                        break;
                                    case 0:
                                    case 4:
                                    case 8:
                                        a.vertexAttrib1f(this.index, 0);
                                        break;
                                    case 2:
                                    case 6:
                                    case 10:
                                        a.vertexAttrib3f(this.index, 0, 0, 0);
                                        break;
                                    case 12:
                                        for (b = 0; 2 > b;) c = b++, a.vertexAttrib2f(this.index + c, 0, 0);
                                        break;
                                    case 16:
                                        for (b = 0; 3 > b;) c = b++, a.vertexAttrib3f(this.index +
                                            c, 0, 0, 0);
                                        break;
                                    case 20:
                                        for (b = 0; 4 > b;) c = b++, a.vertexAttrib4f(this.index + c, 0, 0, 0, 0)
                                }
                            }
                },
                __updateGLFromBuffer: function(a, b, c, d, e) {
                    a = a.gl;
                    if (this.__isUniform) {
                        if (d >= this.__length) switch (this.type) {
                            case 1:
                            case 9:
                                a.uniform2i(this.index, E["int"](b[c]), E["int"](b[c + 1]));
                                break;
                            case 3:
                            case 11:
                                a.uniform4i(this.index, E["int"](b[c]), E["int"](b[c + 1]), E["int"](b[c + 2]), E["int"](b[c + 3]));
                                break;
                            case 4:
                                a.uniform1f(this.index, b[c]);
                                break;
                            case 5:
                                a.uniform2f(this.index, b[c], b[c + 1]);
                                break;
                            case 6:
                                a.uniform3f(this.index, b[c],
                                    b[c + 1], b[c + 2]);
                                break;
                            case 7:
                                a.uniform4f(this.index, b[c], b[c + 1], b[c + 2], b[c + 3]);
                                break;
                            case 0:
                            case 8:
                                a.uniform1i(this.index, E["int"](b[c]));
                                break;
                            case 2:
                            case 10:
                                a.uniform3i(this.index, E["int"](b[c]), E["int"](b[c + 1]), E["int"](b[c + 2]));
                                break;
                            case 12:
                                for (d = 0; 4 > d;) e = d++, this.__uniformMatrix[e] = b[c + e];
                                Td.uniformMatrix2fv(a, this.index, !1, this.__uniformMatrix);
                                break;
                            case 16:
                                for (d = 0; 9 > d;) e = d++, this.__uniformMatrix[e] = b[c + e];
                                Td.uniformMatrix3fv(a, this.index, !1, this.__uniformMatrix);
                                break;
                            case 20:
                                for (d = 0; 16 > d;) e =
                                    d++, this.__uniformMatrix[e] = b[c + e];
                                Td.uniformMatrix4fv(a, this.index, !1, this.__uniformMatrix)
                        }
                    } else if (this.__internal || 0 != d && d != this.__length) {
                        b = a.FLOAT;
                        this.__isBool ? b = a.INT : this.__isInt && (b = a.INT);
                        for (var f = 0, h = this.__arrayLength; f < h;) {
                            var k = f++;
                            a.enableVertexAttribArray(this.index + k)
                        }
                        if (0 < d)
                            for (d = 0, f = this.__arrayLength; d < f;) h = d++, a.vertexAttribPointer(this.index + h, this.__length, b, !1, 4 * this.__length, 4 * (c + e * this.__length + h * this.__arrayLength))
                    } else {
                        e = 0;
                        for (f = this.__arrayLength; e < f;) h = e++, a.disableVertexAttribArray(this.index +
                            h);
                        if (0 < d) switch (this.type) {
                            case 1:
                            case 5:
                            case 9:
                                a.vertexAttrib2f(this.index, b[c], b[c + 1]);
                                break;
                            case 3:
                            case 7:
                            case 11:
                                a.vertexAttrib4f(this.index, b[c], b[c + 1], b[c + 2], b[c + 3]);
                                break;
                            case 0:
                            case 4:
                            case 8:
                                a.vertexAttrib1f(this.index, b[c]);
                                break;
                            case 2:
                            case 6:
                            case 10:
                                a.vertexAttrib3f(this.index, b[c], b[c + 1], b[c + 2]);
                                break;
                            case 12:
                                for (d = 0; 2 > d;) e = d++, a.vertexAttrib2f(this.index + e, b[c + 2 * e], b[c + 2 * e + 1]);
                                break;
                            case 16:
                                for (d = 0; 3 > d;) e = d++, a.vertexAttrib3f(this.index + e, b[c + 3 * e], b[c + 3 * e + 1], b[c + 3 * e + 2]);
                                break;
                            case 20:
                                for (d =
                                    0; 4 > d;) e = d++, a.vertexAttrib4f(this.index + e, b[c + 4 * e], b[c + 4 * e + 1], b[c + 4 * e + 2], b[c + 4 * e + 3])
                        } else switch (this.type) {
                            case 1:
                            case 5:
                            case 9:
                                a.vertexAttrib2f(this.index, 0, 0);
                                break;
                            case 3:
                            case 7:
                            case 11:
                                a.vertexAttrib4f(this.index, 0, 0, 0, 0);
                                break;
                            case 0:
                            case 4:
                            case 8:
                                a.vertexAttrib1f(this.index, 0);
                                break;
                            case 2:
                            case 6:
                            case 10:
                                a.vertexAttrib3f(this.index, 0, 0, 0);
                                break;
                            case 12:
                                for (c = 0; 2 > c;) b = c++, a.vertexAttrib2f(this.index + b, 0, 0);
                                break;
                            case 16:
                                for (c = 0; 3 > c;) b = c++, a.vertexAttrib3f(this.index + b, 0, 0, 0);
                                break;
                            case 20:
                                for (c =
                                    0; 4 > c;) b = c++, a.vertexAttrib4f(this.index + b, 0, 0, 0, 0)
                        }
                    }
                },
                set_name: function(a) {
                    this.__internal = ka.startsWith(a, "openfl_");
                    return this.name = a
                },
                __class__: ll
            };
            var Ke = function() {
                R.call(this)
            };
            g["openfl.display.Shape"] = Ke;
            Ke.__name__ = ["openfl", "display", "Shape"];
            Ke.__super__ = R;
            Ke.prototype = p(R.prototype, {
                get_graphics: function() {
                    null == this.__graphics && (this.__graphics = new jf(this));
                    return this.__graphics
                },
                __class__: Ke
            });
            var Dj = function(a, b, c, d) {
                ra.call(this);
                this.enabled = !0;
                this.trackAsMenu = !1;
                this.useHandCursor = !0;
                this.__upState = null != a ? a : new R;
                this.__overState = b;
                this.__downState = c;
                this.set_hitTestState(null != d ? d : new R);
                this.addEventListener("mouseDown", q(this, this.__this_onMouseDown));
                this.addEventListener("mouseOut", q(this, this.__this_onMouseOut));
                this.addEventListener("mouseOver", q(this, this.__this_onMouseOver));
                this.addEventListener("mouseUp", q(this, this.__this_onMouseUp));
                this.__tabEnabled = !0;
                this.set___currentState(this.__upState);
                null != Dj.__constructor && (a = Dj.__constructor, Dj.__constructor = null, a(this))
            };
            g["openfl.display.SimpleButton"] = Dj;
            Dj.__name__ = ["openfl", "display", "SimpleButton"];
            Dj.__super__ = ra;
            Dj.prototype = p(ra.prototype, {
                enabled: null,
                trackAsMenu: null,
                useHandCursor: null,
                __currentState: null,
                __downState: null,
                __hitTestState: null,
                __ignoreEvent: null,
                __overState: null,
                __previousStates: null,
                __upState: null,
                __getBounds: function(a, b) {
                    ra.prototype.__getBounds.call(this, a, b);
                    var c = Ya.__pool.get();
                    R.__calculateAbsoluteTransform(this.__currentState.__transform, b, c);
                    this.__currentState.__getBounds(a, c);
                    Ya.__pool.release(c)
                },
                __getRenderBounds: function(a, b) {
                    if (null != this.__scrollRect) ra.prototype.__getRenderBounds.call(this, a, b);
                    else {
                        ra.prototype.__getBounds.call(this, a, b);
                        var c = Ya.__pool.get();
                        R.__calculateAbsoluteTransform(this.__currentState.__transform, b, c);
                        this.__currentState.__getRenderBounds(a, c);
                        Ya.__pool.release(c)
                    }
                },
                __getCursor: function() {
                    return this.useHandCursor && !this.__ignoreEvent && this.enabled ? "button" : null
                },
                __hitTest: function(a, b, c, d, e, f) {
                    var h = !1;
                    null != this.get_hitTestState() ? this.get_hitTestState().__hitTest(a,
                        b, c, d, e, f) && (null != d && (0 == d.length ? d[0] = f : d[d.length - 1] = f), h = e ? this.mouseEnabled : !0) : null != this.__currentState && (!f.get_visible() || this.__isMask || e && !this.mouseEnabled || null != this.get_mask() && !this.get_mask().__hitTestMask(a, b) ? h = !1 : this.__currentState.__hitTest(a, b, c, d, e, f) && (h = e));
                    if (null != d)
                        for (; 1 < d.length && d[d.length - 1] == d[d.length - 2];) d.pop();
                    return h
                },
                __hitTestMask: function(a, b) {
                    var c = !1;
                    this.__currentState.__hitTestMask(a, b) && (c = !0);
                    return c
                },
                __renderCanvas: function(a) {
                    !this.__renderable ||
                        0 >= this.__worldAlpha || null == this.__currentState || (a.__pushMaskObject(this), this.__currentState.__renderCanvas(a), a.__popMaskObject(this), this.__renderEvent(a))
                },
                __renderCanvasMask: function(a) {
                    this.__currentState.__renderCanvasMask(a)
                },
                __renderDOM: function(a) {
                    a.__pushMaskObject(this);
                    for (var b = 0, c = this.__previousStates; b < c.get_length();) {
                        var d = c.get(b);
                        ++b;
                        d.__renderDOM(a)
                    }
                    this.__previousStates.set_length(0);
                    null != this.__currentState && (this.__currentState.stage != this.stage && this.__currentState.__setStageReference(this.stage),
                        this.__currentState.__renderDOM(a));
                    a.__popMaskObject(this);
                    this.__renderEvent(a)
                },
                __renderGL: function(a) {
                    !this.__renderable || 0 >= this.__worldAlpha || null == this.__currentState || (a.__pushMaskObject(this), this.__currentState.__renderGL(a), a.__popMaskObject(this), this.__renderEvent(a))
                },
                __renderGLMask: function(a) {
                    null != this.__currentState && this.__currentState.__renderGLMask(a)
                },
                __setStageReference: function(a) {
                    ra.prototype.__setStageReference.call(this, a);
                    null != this.__currentState && this.__currentState.__setStageReference(a);
                    null != this.get_hitTestState() && this.get_hitTestState() != this.__currentState && this.get_hitTestState().__setStageReference(a)
                },
                __setTransformDirty: function() {
                    ra.prototype.__setTransformDirty.call(this);
                    null != this.__currentState && this.__currentState.__setTransformDirty();
                    null != this.get_hitTestState() && this.get_hitTestState() != this.__currentState && this.get_hitTestState().__setTransformDirty()
                },
                __update: function(a, b) {
                    ra.prototype.__update.call(this, a, b);
                    b && (null != this.__currentState && this.__currentState.__update(a,
                        !0), null != this.get_hitTestState() && this.get_hitTestState() != this.__currentState && this.get_hitTestState().__update(a, !0))
                },
                __updateTransforms: function(a) {
                    ra.prototype.__updateTransforms.call(this, a);
                    null != this.__currentState && this.__currentState.__updateTransforms();
                    null != this.get_hitTestState() && this.get_hitTestState() != this.__currentState && this.get_hitTestState().__updateTransforms()
                },
                get_downState: function() {
                    return this.__downState
                },
                set_downState: function(a) {
                    null != this.__downState && this.__currentState ==
                        this.__downState && this.set___currentState(this.__downState);
                    return this.__downState = a
                },
                get_hitTestState: function() {
                    return this.__hitTestState
                },
                set_hitTestState: function(a) {
                    null != this.__hitTestState && this.__hitTestState != a && this.__hitTestState != this.get_downState() && this.__hitTestState != this.get_upState() && this.__hitTestState != this.get_overState() && (this.__hitTestState.__renderParent = null);
                    null != a && (a.__renderParent = this, a.__setRenderDirty());
                    return this.__hitTestState = a
                },
                get_overState: function() {
                    return this.__overState
                },
                set_overState: function(a) {
                    null != this.__overState && this.__currentState == this.__overState && this.set___currentState(a);
                    return this.__overState = a
                },
                get_upState: function() {
                    return this.__upState
                },
                set_upState: function(a) {
                    null != this.__upState && this.__currentState == this.__upState && this.set___currentState(a);
                    return this.__upState = a
                },
                set___currentState: function(a) {
                    null != this.__currentState && this.__currentState != this.get_hitTestState() && (this.__currentState.__renderParent = null);
                    null != a && null != a.parent && a.parent.removeChild(a);
                    R.__supportDOM && null == this.__previousStates && (this.__previousStates = M.toObjectVector(null));
                    if (a != this.__currentState) {
                        if (R.__supportDOM) {
                            null != this.__currentState && (this.__currentState.__setStageReference(null), this.__previousStates.push(this.__currentState));
                            var b = this.__previousStates.indexOf(a, 0); - 1 < b && this.__previousStates.splice(b, 1)
                        }
                        null != a && (a.__renderParent = this, a.__setRenderDirty());
                        this.__setRenderDirty()
                    }
                    return this.__currentState = a
                },
                __this_onMouseDown: function(a) {
                    this.enabled && this.set___currentState(this.get_downState())
                },
                __this_onMouseOut: function(a) {
                    this.__ignoreEvent = !1;
                    this.get_upState() != this.__currentState && this.set___currentState(this.get_upState())
                },
                __this_onMouseOver: function(a) {
                    a.buttonDown && (this.__ignoreEvent = !0);
                    this.get_overState() != this.__currentState && null != this.get_overState() && !this.__ignoreEvent && this.enabled && this.set___currentState(this.get_overState())
                },
                __this_onMouseUp: function(a) {
                    this.__ignoreEvent = !1;
                    this.enabled && null != this.get_overState() ? this.set___currentState(this.get_overState()) : this.set___currentState(this.get_upState())
                },
                __class__: Dj
            });
            var Ci = function(a, b) {
                gb.call(this);
                this.set_name(null);
                this.__color = -1;
                this.__colorSplit = [255, 255, 255];
                this.__colorString = "#FFFFFF";
                this.__contentsScaleFactor = 1;
                this.__deltaTime = this.__currentTabOrderIndex = 0;
                this.__displayState = 2;
                this.__logicalHeight = this.__logicalWidth = this.__lastClickTime = this.__mouseY = this.__mouseX = 0;
                this.__displayMatrix = new Ya;
                this.__displayRect = new hb;
                this.__renderDirty = !0;
                this.stage3Ds = M.toObjectVector(null);
                for (var c = 0; 4 > c;) c++, this.stage3Ds.push(new Br(this));
                this.stage = this;
                this.align = 6;
                this.allowsFullScreenInteractive = this.allowsFullScreen = !0;
                this.__quality = 1;
                this.__scaleMode = 2;
                this.showDefaultContextMenu = !0;
                this.softKeyboardRect = new hb;
                this.stageFocusRect = !0;
                this.__macKeyboard = /AppleWebKit/.test(navigator.userAgent) && /Mobile\/\w+/.test(navigator.userAgent) || /Mac/.test(navigator.platform);
                this.__clearBeforeRender = !0;
                this.__forceRender = !1;
                this.__stack = [];
                this.__rollOutStack = [];
                this.__mouseOutStack = [];
                this.__touchData = new we;
                this.application = a.application;
                this.window = a;
                this.set_color(b);
                this.__contentsScaleFactor = a.get_scale();
                this.__wasFullscreen = a.get_fullscreen();
                this.__resize();
                null == ia.get_current().stage && this.stage.addChild(ia.get_current())
            };
            g["openfl.display.Stage"] = Ci;
            Ci.__name__ = ["openfl", "display", "Stage"];
            Ci.__interfaces__ = [L];
            Ci.__super__ = gb;
            Ci.prototype = p(gb.prototype, {
                align: null,
                allowsFullScreen: null,
                allowsFullScreenInteractive: null,
                application: null,
                context3D: null,
                showDefaultContextMenu: null,
                softKeyboardRect: null,
                stage3Ds: null,
                stageFocusRect: null,
                stageHeight: null,
                stageWidth: null,
                window: null,
                __cacheFocus: null,
                __clearBeforeRender: null,
                __color: null,
                __colorSplit: null,
                __colorString: null,
                __contentsScaleFactor: null,
                __currentTabOrderIndex: null,
                __deltaTime: null,
                __displayMatrix: null,
                __displayRect: null,
                __displayState: null,
                __dragBounds: null,
                __dragObject: null,
                __dragOffsetX: null,
                __dragOffsetY: null,
                __focus: null,
                __forceRender: null,
                __fullScreenSourceRect: null,
                __invalidated: null,
                __lastClickTime: null,
                __logicalWidth: null,
                __logicalHeight: null,
                __macKeyboard: null,
                __mouseDownLeft: null,
                __mouseDownMiddle: null,
                __mouseDownRight: null,
                __mouseOutStack: null,
                __mouseOverTarget: null,
                __mouseX: null,
                __mouseY: null,
                __pendingMouseEvent: null,
                __pendingMouseX: null,
                __pendingMouseY: null,
                __quality: null,
                __renderer: null,
                __rendering: null,
                __rollOutStack: null,
                __scaleMode: null,
                __stack: null,
                __touchData: null,
                __transparent: null,
                __wasDirty: null,
                __wasFullscreen: null,
                __primaryTouch: null,
                localToGlobal: function(a) {
                    return a.clone()
                },
                __broadcastEvent: function(a) {
                    if (R.__broadcastEvents.exists(a.type))
                        for (var b =
                                R.__broadcastEvents.get(a.type), c = 0; c < b.length;) {
                            var d = b[c];
                            ++c;
                            if (d.stage == this || null == d.stage) try {
                                d.__dispatch(a)
                            } catch (e) {
                                vb.lastException = e, e instanceof Z && (e = e.val), this.__handleError(e)
                            }
                        }
                },
                __createRenderer: function() {
                    var a = 1;
                    1 < this.window.get_scale() && (a = this.window.devicePixelRatio ? !0 : 1);
                    var b = E["int"](this.window.get_width() * this.window.get_scale()),
                        c = E["int"](this.window.get_height() * this.window.get_scale());
                    switch (this.window.context.type) {
                        case "canvas":
                            this.__renderer = new xh(this.window.context.canvas2D);
                            aa.__cast(this.__renderer, xh).pixelRatio = a;
                            break;
                        case "dom":
                            this.__renderer = new zl(this.window.context.dom);
                            aa.__cast(this.__renderer, zl).pixelRatio = a;
                            break;
                        case "opengl":
                        case "opengles":
                        case "webgl":
                            this.context3D = new Hb(this), this.context3D.configureBackBuffer(b, c, 0, !0, !0, !0), this.context3D.present(), this.__renderer = new Bb(this.context3D)
                    }
                    null != this.__renderer && (a = this.get_quality(), this.__renderer.__allowSmoothing = 2 != a, this.__renderer.__worldTransform = this.__displayMatrix, this.__renderer.__stage =
                        this, this.__renderer.__resize(b, c))
                },
                __dispatchEvent: function(a) {
                    try {
                        return gb.prototype.__dispatchEvent.call(this, a)
                    } catch (b) {
                        return vb.lastException = b, b instanceof Z && (b = b.val), this.__handleError(b), !1
                    }
                },
                __dispatchPendingMouseEvent: function() {
                    this.__pendingMouseEvent && (this.__onMouse("mouseMove", this.__pendingMouseX, this.__pendingMouseY, 0), this.__pendingMouseEvent = !1)
                },
                __dispatchStack: function(a, b) {
                    try {
                        var c = b.length;
                        if (0 == c) {
                            a.eventPhase = 2;
                            var d = a.target;
                            d.__dispatch(a)
                        } else {
                            a.eventPhase = 1;
                            a.target =
                                b[b.length - 1];
                            for (var e = 0, f = c - 1; e < f;) {
                                var h = e++;
                                b[h].__dispatch(a);
                                if (a.__isCanceled) return
                            }
                            a.eventPhase = 2;
                            d = a.target;
                            d.__dispatch(a);
                            if (!a.__isCanceled && a.bubbles)
                                for (a.eventPhase = 3, d = c - 2; 0 <= d;) {
                                    b[d].__dispatch(a);
                                    if (a.__isCanceled) break;
                                    --d
                                }
                        }
                    } catch (k) {
                        vb.lastException = k, k instanceof Z && (k = k.val), this.__handleError(k)
                    }
                },
                __dispatchTarget: function(a, b) {
                    try {
                        return a.__dispatchEvent(b)
                    } catch (c) {
                        return vb.lastException = c, c instanceof Z && (c = c.val), this.__handleError(c), !1
                    }
                },
                __drag: function(a) {
                    var b = this.__dragObject.parent;
                    null != b && b.__getWorldTransform().__transformInversePoint(a);
                    b = a.x + this.__dragOffsetX;
                    a = a.y + this.__dragOffsetY;
                    null != this.__dragBounds && (b < this.__dragBounds.x ? b = this.__dragBounds.x : b > this.__dragBounds.get_right() && (b = this.__dragBounds.get_right()), a < this.__dragBounds.y ? a = this.__dragBounds.y : a > this.__dragBounds.get_bottom() && (a = this.__dragBounds.get_bottom()));
                    this.__dragObject.set_x(b);
                    this.__dragObject.set_y(a)
                },
                __getInteractive: function(a) {
                    null != a && a.push(this);
                    return !0
                },
                __globalToLocal: function(a,
                    b) {
                    a != b && b.copyFrom(a);
                    return b
                },
                __handleError: function(a) {
                    var b = new Cr("uncaughtError", !0, !0, a);
                    try {
                        ia.get_current().__loaderInfo.uncaughtErrorEvents.dispatchEvent(b)
                    } catch (e) {
                        vb.lastException = e
                    }
                    if (!b.__preventDefault) {
                        Za.println(vb.toString(vb.exceptionStack()));
                        Za.println(E.string(a));
                        try {
                            var c = vb.lastException;
                            if (null != c && T.hasField(c, "stack") && null != c.stack && "" != c.stack) console.log(c.stack), a.stack = c.stack;
                            else {
                                var d = vb.toString(vb.callStack());
                                console.log(d)
                            }
                        } catch (e) {
                            vb.lastException = e
                        }
                        throw a;
                    }
                },
                __onKey: function(a, b, c) {
                    this.__dispatchPendingMouseEvent();
                    sb.__altKey = Jc.get_altKey(c);
                    sb.__commandKey = Jc.get_metaKey(c);
                    sb.__ctrlKey = Jc.get_ctrlKey(c);
                    sb.__shiftKey = Jc.get_shiftKey(c);
                    var d = [];
                    null == this.__focus ? this.__getInteractive(d) : this.__focus.__getInteractive(d);
                    if (0 < d.length) {
                        var e = El.__getKeyLocation(b);
                        b = El.__convertKeyCode(b);
                        var f = El.__getCharCode(b, Jc.get_shiftKey(c));
                        if ("keyUp" == a && (32 == b || 13 == b) && E.is(this.__focus, S)) {
                            var h = aa.__cast(this.__focus, S);
                            if (h.get_buttonMode() && 1 == h.focusRect) {
                                var k =
                                    Ta.__pool.get(),
                                    m = Ta.__pool.get();
                                m.x = this.__mouseX;
                                m.y = this.__mouseY;
                                h = sb.__create("click", 0, this.__mouseX, this.__mouseY, h.__globalToLocal(m, k), h);
                                this.__dispatchStack(h, d);
                                Ta.__pool.release(m);
                                Ta.__pool.release(k)
                            }
                        }
                        e = new Dr(a, !0, !0, f, b, e, this.__macKeyboard ? Jc.get_ctrlKey(c) || Jc.get_metaKey(c) : Jc.get_ctrlKey(c), Jc.get_altKey(c), Jc.get_shiftKey(c), Jc.get_ctrlKey(c), Jc.get_metaKey(c));
                        d.reverse();
                        this.__dispatchStack(e, d);
                        if (e.__preventDefault) "keyDown" == a ? this.window.onKeyDown.cancel() : this.window.onKeyUp.cancel();
                        else if ("keyDown" == a && 9 == b) {
                            d = [];
                            this.__tabTest(d);
                            b = -1;
                            a = null;
                            e = Jc.get_shiftKey(c) ? -1 : 1;
                            if (1 < d.length) {
                                Fd.sort(d, function(a, b) {
                                    return a.get_tabIndex() - b.get_tabIndex()
                                });
                                if (-1 != d[d.length - 1].get_tabIndex())
                                    for (b = 0; b < d.length;) {
                                        if (-1 < d[b].get_tabIndex()) {
                                            0 < b && d.splice(0, b);
                                            break
                                        }++b
                                    }
                                if (null != this.get_focus()) {
                                    k = this.get_focus();
                                    for (f = d.indexOf(k); - 1 == f && null != k;) {
                                        b = k.parent;
                                        if (null != b && b.get_tabChildren()) {
                                            k = b.getChildIndex(k);
                                            if (-1 == k) {
                                                k = b;
                                                continue
                                            }
                                            for (k += e; Jc.get_shiftKey(c) ? 0 <= k : k < b.get_numChildren();) {
                                                m =
                                                    b.getChildAt(k);
                                                if (E.is(m, ra) && (f = aa.__cast(m, ra), f = d.indexOf(f), -1 != f)) {
                                                    e = 0;
                                                    break
                                                }
                                                k += e
                                            }
                                        } else Jc.get_shiftKey(c) && (f = d.indexOf(b), -1 != f && (e = 0));
                                        k = b
                                    }
                                    b = 0 > f ? 0 : f + e
                                } else b = this.__currentTabOrderIndex
                            } else 1 == d.length && (a = d[0], this.get_focus() == a && (a = null));
                            f = 0 <= b && b < d.length;
                            1 == d.length || 0 == d.length && null != this.get_focus() ? b = 0 : 1 < d.length && (0 > b && (b += d.length), b %= d.length, a = d[b], a == this.get_focus() && (b += e, 0 > b && (b += d.length), b %= d.length, a = d[b]));
                            e = null;
                            null != this.get_focus() && (e = new uk("keyFocusChange", !0,
                                !0, a, Jc.get_shiftKey(c), 0), d = [], this.get_focus().__getInteractive(d), d.reverse(), this.__dispatchStack(e, d), e.isDefaultPrevented() && this.window.onKeyDown.cancel());
                            null != e && e.isDefaultPrevented() || (this.__currentTabOrderIndex = b, null != a && this.set_focus(a), f && this.window.onKeyDown.cancel())
                        }
                    }
                },
                __onLimeCreateWindow: function(a) {
                    if (this.window == a) {
                        var b = q(this, this.__onLimeWindowActivate);
                        a.onActivate.add(function() {
                            b(a)
                        });
                        var c = q(this, this.__onLimeWindowClose);
                        a.onClose.add(function() {
                            c(a)
                        }, !1, -9E3);
                        var d =
                            q(this, this.__onLimeWindowDeactivate);
                        a.onDeactivate.add(function() {
                            d(a)
                        });
                        var e = q(this, this.__onLimeWindowDropFile);
                        a.onDropFile.add(function(b) {
                            e(a, b)
                        });
                        var f = q(this, this.__onLimeWindowEnter);
                        a.onEnter.add(function() {
                            f(a)
                        });
                        var h = q(this, this.__onLimeWindowExpose);
                        a.onExpose.add(function() {
                            h(a)
                        });
                        var k = q(this, this.__onLimeWindowFocusIn);
                        a.onFocusIn.add(function() {
                            k(a)
                        });
                        var m = q(this, this.__onLimeWindowFocusOut);
                        a.onFocusOut.add(function() {
                            m(a)
                        });
                        var g = q(this, this.__onLimeWindowFullscreen);
                        a.onFullscreen.add(function() {
                            g(a)
                        });
                        var l = q(this, this.__onLimeKeyDown);
                        a.onKeyDown.add(function(b, c) {
                            l(a, b, c)
                        });
                        var n = q(this, this.__onLimeKeyUp);
                        a.onKeyUp.add(function(b, c) {
                            n(a, b, c)
                        });
                        var p = q(this, this.__onLimeWindowLeave);
                        a.onLeave.add(function() {
                            p(a)
                        });
                        var x = q(this, this.__onLimeWindowMinimize);
                        a.onMinimize.add(function() {
                            x(a)
                        });
                        var u = q(this, this.__onLimeMouseDown);
                        a.onMouseDown.add(function(b, c, d) {
                            u(a, b, c, d)
                        });
                        var z = q(this, this.__onLimeMouseMove);
                        a.onMouseMove.add(function(b, c) {
                            z(a, b, c)
                        });
                        var v = q(this, this.__onLimeMouseMoveRelative);
                        a.onMouseMoveRelative.add(function(b, c) {
                            v(a, b, c)
                        });
                        var w = q(this, this.__onLimeMouseUp);
                        a.onMouseUp.add(function(b, c, d) {
                            w(a, b, c, d)
                        });
                        var y = q(this, this.__onLimeMouseWheel);
                        a.onMouseWheel.add(function(b, c, d) {
                            y(a, b, c, d)
                        });
                        var L = q(this, this.__onLimeWindowMove);
                        a.onMove.add(function(b, c) {
                            L(a, b, c)
                        });
                        a.onRender.add(q(this, this.__onLimeRender));
                        a.onRenderContextLost.add(q(this, this.__onLimeRenderContextLost));
                        a.onRenderContextRestored.add(q(this, this.__onLimeRenderContextRestored));
                        var A = q(this, this.__onLimeWindowResize);
                        a.onResize.add(function(b, c) {
                            A(a, b, c)
                        });
                        var D = q(this, this.__onLimeWindowRestore);
                        a.onRestore.add(function() {
                            D(a)
                        });
                        var Ka = q(this, this.__onLimeTextEdit);
                        a.onTextEdit.add(function(b, c, d) {
                            Ka(a, b, c, d)
                        });
                        var t = q(this, this.__onLimeTextInput);
                        a.onTextInput.add(function(b) {
                            t(a, b)
                        });
                        this.__onLimeWindowCreate(a)
                    }
                },
                __onLimeGamepadAxisMove: function(a, b, c) {
                    try {
                        Xb.__onGamepadAxisMove(a, b, c)
                    } catch (d) {
                        vb.lastException = d, d instanceof Z && (d = d.val), this.__handleError(d)
                    }
                },
                __onLimeGamepadButtonDown: function(a, b) {
                    try {
                        Xb.__onGamepadButtonDown(a,
                            b)
                    } catch (c) {
                        vb.lastException = c, c instanceof Z && (c = c.val), this.__handleError(c)
                    }
                },
                __onLimeGamepadButtonUp: function(a, b) {
                    try {
                        Xb.__onGamepadButtonUp(a, b)
                    } catch (c) {
                        vb.lastException = c, c instanceof Z && (c = c.val), this.__handleError(c)
                    }
                },
                __onLimeGamepadConnect: function(a) {
                    try {
                        Xb.__onGamepadConnect(a)
                    } catch (f) {
                        vb.lastException = f, f instanceof Z && (f = f.val), this.__handleError(f)
                    }
                    var b = q(this, this.__onLimeGamepadAxisMove);
                    a.onAxisMove.add(function(c, d) {
                        b(a, c, d)
                    });
                    var c = q(this, this.__onLimeGamepadButtonDown);
                    a.onButtonDown.add(function(b) {
                        c(a,
                            b)
                    });
                    var d = q(this, this.__onLimeGamepadButtonUp);
                    a.onButtonUp.add(function(b) {
                        d(a, b)
                    });
                    var e = q(this, this.__onLimeGamepadDisconnect);
                    a.onDisconnect.add(function() {
                        e(a)
                    })
                },
                __onLimeGamepadDisconnect: function(a) {
                    try {
                        Xb.__onGamepadDisconnect(a)
                    } catch (b) {
                        vb.lastException = b, b instanceof Z && (b = b.val), this.__handleError(b)
                    }
                },
                __onLimeKeyDown: function(a, b, c) {
                    null != this.window && this.window == a && this.__onKey("keyDown", b, c)
                },
                __onLimeKeyUp: function(a, b, c) {
                    null != this.window && this.window == a && this.__onKey("keyUp", b,
                        c)
                },
                __onLimeModuleExit: function(a) {
                    null != this.window && (a = new Oa("deactivate"), this.__broadcastEvent(a))
                },
                __onLimeMouseDown: function(a, b, c, d) {
                    if (null != this.window && this.window == a) {
                        this.__dispatchPendingMouseEvent();
                        switch (d) {
                            case 1:
                                var e = "middleMouseDown";
                                break;
                            case 2:
                                e = "rightMouseDown";
                                break;
                            default:
                                e = "mouseDown"
                        }
                        this.__onMouse(e, E["int"](b * a.get_scale()), E["int"](c * a.get_scale()), d);
                        this.showDefaultContextMenu || 2 != d || a.onMouseDown.cancel()
                    }
                },
                __onLimeMouseMove: function(a, b, c) {
                    null != this.window && this.window ==
                        a && (this.__pendingMouseEvent = !0, this.__pendingMouseX = E["int"](b * a.get_scale()), this.__pendingMouseY = E["int"](c * a.get_scale()))
                },
                __onLimeMouseMoveRelative: function(a, b, c) {},
                __onLimeMouseUp: function(a, b, c, d) {
                    if (null != this.window && this.window == a) {
                        this.__dispatchPendingMouseEvent();
                        switch (d) {
                            case 1:
                                var e = "middleMouseUp";
                                break;
                            case 2:
                                e = "rightMouseUp";
                                break;
                            default:
                                e = "mouseUp"
                        }
                        this.__onMouse(e, E["int"](b * a.get_scale()), E["int"](c * a.get_scale()), d);
                        this.showDefaultContextMenu || 2 != d || a.onMouseUp.cancel()
                    }
                },
                __onLimeMouseWheel: function(a, b, c, d) {
                    null != this.window && this.window == a && (this.__dispatchPendingMouseEvent(), d == Ld.PIXELS ? this.__onMouseWheel(E["int"](b * a.get_scale()), E["int"](c * a.get_scale()), d) : this.__onMouseWheel(E["int"](b), E["int"](c), d))
                },
                __onLimeRender: function(a) {
                    if (!this.__rendering) {
                        this.__rendering = !0;
                        this.__broadcastEvent(new Oa("enterFrame"));
                        this.__broadcastEvent(new Oa("frameConstructed"));
                        this.__broadcastEvent(new Oa("exitFrame"));
                        this.__renderable = !0;
                        this.__enterFrame(this.__deltaTime);
                        this.__deltaTime = 0;
                        a = null != this.__renderer && (this.__renderDirty || this.__forceRender);
                        if (this.__invalidated && a) {
                            this.__invalidated = !1;
                            var b = new Oa("render");
                            this.__broadcastEvent(b)
                        }
                        this.__update(!1, !0);
                        if (null != this.__renderer) {
                            if (null != this.context3D) {
                                b = 0;
                                for (var c = this.stage3Ds; b < c.get_length();) {
                                    var d = c.get(b);
                                    ++b;
                                    this.context3D.__renderStage3D(d)
                                }
                                this.context3D.__present && (a = !0)
                            }
                            a ? (null == this.context3D && this.__renderer.__clear(), this.__renderer.__render(this)) : null == this.context3D && this.window.onRender.cancel();
                            null != this.context3D && (this.context3D.__present ? (this.__renderer.__cleared || this.__renderer.__clear(), this.context3D.__present = !1, this.context3D.__cleared = !1) : this.window.onRender.cancel());
                            this.__renderer.__cleared = !1
                        }
                        this.__rendering = !1
                    }
                },
                __onLimeRenderContextLost: function() {
                    this.context3D = this.__renderer = null;
                    for (var a = 0, b = this.stage3Ds; a < b.get_length();) {
                        var c = b.get(a);
                        ++a;
                        c.__lostContext()
                    }
                },
                __onLimeRenderContextRestored: function(a) {
                    this.__createRenderer();
                    a = 0;
                    for (var b = this.stage3Ds; a < b.get_length();) {
                        var c =
                            b.get(a);
                        ++a;
                        c.__restoreContext()
                    }
                },
                __onLimeTextEdit: function(a, b, c, d) {},
                __onLimeTextInput: function(a, b) {
                    if (null != this.window && this.window == a) {
                        var c = [];
                        null == this.__focus ? this.__getInteractive(c) : this.__focus.__getInteractive(c);
                        b = new ii("textInput", !0, !0, b);
                        0 < c.length ? (c.reverse(), this.__dispatchStack(b, c)) : this.__dispatchEvent(b);
                        b.isDefaultPrevented() && a.onTextInput.cancel()
                    }
                },
                __onLimeTouchCancel: function(a) {
                    var b = this.__primaryTouch == a;
                    b && (this.__primaryTouch = null);
                    this.__onTouch("touchEnd", a,
                        b)
                },
                __onLimeTouchMove: function(a) {
                    this.__onTouch("touchMove", a, this.__primaryTouch == a)
                },
                __onLimeTouchEnd: function(a) {
                    var b = this.__primaryTouch == a;
                    b && (this.__primaryTouch = null);
                    this.__onTouch("touchEnd", a, b)
                },
                __onLimeTouchStart: function(a) {
                    null == this.__primaryTouch && (this.__primaryTouch = a);
                    this.__onTouch("touchBegin", a, this.__primaryTouch == a)
                },
                __onLimeUpdate: function(a) {
                    this.__deltaTime = a;
                    this.__dispatchPendingMouseEvent()
                },
                __onLimeWindowActivate: function(a) {},
                __onLimeWindowClose: function(a) {
                    this.window ==
                        a && (this.window = null);
                    this.__primaryTouch = null;
                    a = new Oa("deactivate");
                    this.__broadcastEvent(a)
                },
                __onLimeWindowCreate: function(a) {
                    null != this.window && this.window == a && null != a.context && this.__createRenderer()
                },
                __onLimeWindowDeactivate: function(a) {},
                __onLimeWindowDropFile: function(a, b) {},
                __onLimeWindowEnter: function(a) {},
                __onLimeWindowExpose: function(a) {
                    null != this.window && this.window == a && (this.__renderDirty = !0)
                },
                __onLimeWindowFocusIn: function(a) {
                    null != this.window && this.window == a && (this.__renderDirty = !0,
                        a = new Oa("activate"), this.__broadcastEvent(a), this.set_focus(this.__cacheFocus))
                },
                __onLimeWindowFocusOut: function(a) {
                    null != this.window && this.window == a && (this.__primaryTouch = null, a = new Oa("deactivate"), this.__broadcastEvent(a), a = this.get_focus(), this.set_focus(null), this.__cacheFocus = a, sb.__altKey = !1, sb.__commandKey = !1, sb.__ctrlKey = !1, sb.__shiftKey = !1)
                },
                __onLimeWindowFullscreen: function(a) {
                    null != this.window && this.window == a && (this.__resize(), this.__wasFullscreen || (this.__wasFullscreen = !0, 2 == this.__displayState &&
                        (this.__displayState = 1), this.__dispatchEvent(new Sj("fullScreen", !1, !1, !0, !0))))
                },
                __onLimeWindowLeave: function(a) {
                    null == this.window || this.window != a || sb.__buttonDown || (this.__dispatchPendingMouseEvent(), a = new Oa("mouseLeave"), this.__dispatchEvent(a))
                },
                __onLimeWindowMinimize: function(a) {},
                __onLimeWindowMove: function(a, b, c) {},
                __onLimeWindowResize: function(a, b, c) {
                    null != this.window && this.window == a && (this.__resize(), this.__wasFullscreen && !a.get_fullscreen() && (this.__wasFullscreen = !1, this.__displayState =
                        2, this.__dispatchEvent(new Sj("fullScreen", !1, !1, !1, !0))))
                },
                __onLimeWindowRestore: function(a) {
                    null != this.window && this.window == a && this.__wasFullscreen && !a.get_fullscreen() && (this.__wasFullscreen = !1, this.__displayState = 2, this.__dispatchEvent(new Sj("fullScreen", !1, !1, !1, !0)))
                },
                __onMouse: function(a, b, c, d) {
                    if (!(2 < d)) {
                        var e = Ta.__pool.get();
                        e.setTo(b, c);
                        this.__displayMatrix.__transformInversePoint(e);
                        this.__mouseX = e.x;
                        this.__mouseY = e.y;
                        c = [];
                        if (this.__hitTest(this.__mouseX, this.__mouseY, !0, c, !0, this)) var f =
                            c[c.length - 1];
                        else f = this, c = [this];
                        null == f && (f = this);
                        var h = null;
                        switch (a) {
                            case "middleMouseDown":
                                this.__mouseDownMiddle = f;
                                break;
                            case "middleMouseUp":
                                this.__mouseDownMiddle == f && (h = "middleClick");
                                this.__mouseDownMiddle = null;
                                break;
                            case "mouseDown":
                                f.__allowMouseFocus() ? null != this.get_focus() ? (b = new uk("mouseFocusChange", !0, !0, f, !1, 0), this.__dispatchStack(b, c), b.isDefaultPrevented() || this.set_focus(f)) : this.set_focus(f) : this.set_focus(null);
                                this.__mouseDownLeft = f;
                                sb.__buttonDown = !0;
                                break;
                            case "mouseUp":
                                null !=
                                    this.__mouseDownLeft && (sb.__buttonDown = !1, this.__mouseDownLeft == f ? h = "click" : (b = sb.__create("releaseOutside", 1, this.__mouseX, this.__mouseY, new Ta(this.__mouseX, this.__mouseY), this), this.__mouseDownLeft.dispatchEvent(b)), this.__mouseDownLeft = null);
                                break;
                            case "rightMouseDown":
                                this.__mouseDownRight = f;
                                break;
                            case "rightMouseUp":
                                this.__mouseDownRight == f && (h = "rightClick"), this.__mouseDownRight = null
                        }
                        b = Ta.__pool.get();
                        var k = sb.__create(a, d, this.__mouseX, this.__mouseY, f.__globalToLocal(e, b), f);
                        this.__dispatchStack(k,
                            c);
                        null != h && (k = sb.__create(h, d, this.__mouseX, this.__mouseY, f.__globalToLocal(e, b), f), this.__dispatchStack(k, c), "mouseUp" == a && aa.__cast(f, ra).doubleClickEnabled && (a = ia.getTimer(), 500 > a - this.__lastClickTime ? (k = sb.__create("doubleClick", d, this.__mouseX, this.__mouseY, f.__globalToLocal(e, b), f), this.__dispatchStack(k, c), this.__lastClickTime = 0) : this.__lastClickTime = a));
                        if ("auto" == $u.__cursor && !$u.__hidden) {
                            h = null;
                            if (null != this.__mouseDownLeft) h = this.__mouseDownLeft.__getCursor();
                            else
                                for (a = 0; a < c.length;)
                                    if (h =
                                        c[a], ++a, h = h.__getCursor(), null != h) {
                                        this.window.set_cursor(ww.toLimeCursor(h));
                                        break
                                    } null == h && this.window.set_cursor(Sa.ARROW)
                        }
                        f != this.__mouseOverTarget && null != this.__mouseOverTarget && (a = sb.__create("mouseOut", d, this.__mouseX, this.__mouseY, this.__mouseOverTarget.__globalToLocal(e, b), this.__mouseOverTarget), this.__dispatchStack(a, this.__mouseOutStack));
                        for (k = 0; k < this.__rollOutStack.length;) h = this.__rollOutStack[k], -1 == c.indexOf(h) ? (la.remove(this.__rollOutStack, h), a = sb.__create("rollOut", d, this.__mouseX,
                            this.__mouseY, this.__mouseOverTarget.__globalToLocal(e, b), this.__mouseOverTarget), a.bubbles = !1, this.__dispatchTarget(h, a)) : ++k;
                        for (h = 0; h < c.length;) k = c[h], ++h, -1 == this.__rollOutStack.indexOf(k) && null != this.__mouseOverTarget && (k.hasEventListener("rollOver") && (a = sb.__create("rollOver", d, this.__mouseX, this.__mouseY, this.__mouseOverTarget.__globalToLocal(e, b), k), a.bubbles = !1, this.__dispatchTarget(k, a)), (k.hasEventListener("rollOut") || k.hasEventListener("rollOver")) && this.__rollOutStack.push(k));
                        f != this.__mouseOverTarget &&
                            (null != f && (a = sb.__create("mouseOver", d, this.__mouseX, this.__mouseY, f.__globalToLocal(e, b), f), this.__dispatchStack(a, c)), this.__mouseOverTarget = f, this.__mouseOutStack = c);
                        null != this.__dragObject && (this.__drag(e), d = null, this.__mouseOverTarget == this.__dragObject ? (c = this.__dragObject.mouseEnabled, f = this.__dragObject.mouseChildren, this.__dragObject.mouseEnabled = !1, this.__dragObject.mouseChildren = !1, a = [], this.__hitTest(this.__mouseX, this.__mouseY, !0, a, !0, this) && (d = a[a.length - 1]), this.__dragObject.mouseEnabled =
                            c, this.__dragObject.mouseChildren = f) : this.__mouseOverTarget != this && (d = this.__mouseOverTarget), this.__dragObject.dropTarget = d);
                        Ta.__pool.release(e);
                        Ta.__pool.release(b)
                    }
                },
                __onMouseWheel: function(a, b, c) {
                    var d = this.__mouseX,
                        e = this.__mouseY;
                    a = [];
                    if (this.__hitTest(this.__mouseX, this.__mouseY, !0, a, !0, this)) var f = a[a.length - 1];
                    else f = this, a = [this];
                    null == f && (f = this);
                    c = Ta.__pool.get();
                    c.setTo(d, e);
                    this.__displayMatrix.__transformInversePoint(c);
                    b = E["int"](b);
                    b = sb.__create("mouseWheel", 0, this.__mouseX, this.__mouseY,
                        f.__globalToLocal(c, c), f, b);
                    b.cancelable = !0;
                    this.__dispatchStack(b, a);
                    b.isDefaultPrevented() && this.window.onMouseWheel.cancel();
                    Ta.__pool.release(c)
                },
                __onTouch: function(a, b, c) {
                    var d = Ta.__pool.get();
                    d.setTo(Math.round(b.x * this.window.get_width() * this.window.get_scale()), Math.round(b.y * this.window.get_height() * this.window.get_scale()));
                    this.__displayMatrix.__transformInversePoint(d);
                    var e = d.x,
                        f = d.y,
                        h = [];
                    if (this.__hitTest(e, f, !1, h, !0, this)) var k = h[h.length - 1];
                    else k = this, h = [this];
                    null == k && (k = this);
                    var m =
                        b.id;
                    if (this.__touchData.exists(m)) var g = this.__touchData.get(m);
                    else g = tk.__pool.get(), g.reset(), g.touch = b, this.__touchData.set(m, g);
                    var l = null,
                        n = !1;
                    switch (a) {
                        case "touchBegin":
                            g.touchDownTarget = k;
                            break;
                        case "touchEnd":
                            g.touchDownTarget == k && (l = "touchTap"), g.touchDownTarget = null, n = !0
                    }
                    var p = Ta.__pool.get();
                    a = xe.__create(a, null, e, f, k.__globalToLocal(d, p), k);
                    a.touchPointID = m;
                    a.isPrimaryTouchPoint = c;
                    a.pressure = b.pressure;
                    this.__dispatchStack(a, h);
                    null != l && (a = xe.__create(l, null, e, f, k.__globalToLocal(d,
                        p), k), a.touchPointID = m, a.isPrimaryTouchPoint = c, a.pressure = b.pressure, this.__dispatchStack(a, h));
                    l = g.touchOverTarget;
                    k != l && null != l && (a = xe.__create("touchOut", null, e, f, l.__globalToLocal(d, p), l), a.touchPointID = m, a.isPrimaryTouchPoint = c, a.pressure = b.pressure, this.__dispatchTarget(l, a));
                    for (var x = g.rollOutStack, u, z = 0; z < x.length;) u = x[z], -1 == h.indexOf(u) ? (la.remove(x, u), a = xe.__create("touchRollOut", null, e, f, l.__globalToLocal(d, p), l), a.touchPointID = m, a.isPrimaryTouchPoint = c, a.bubbles = !1, a.pressure = b.pressure,
                        this.__dispatchTarget(u, a)) : ++z;
                    for (u = 0; u < h.length;) z = h[u], ++u, -1 == x.indexOf(z) && (z.hasEventListener("touchRollOver") && (a = xe.__create("touchRollOver", null, e, f, l.__globalToLocal(d, p), z), a.touchPointID = m, a.isPrimaryTouchPoint = c, a.bubbles = !1, a.pressure = b.pressure, this.__dispatchTarget(z, a)), z.hasEventListener("touchRollOut") && x.push(z));
                    k != l && (null != k && (a = xe.__create("touchOver", null, e, f, k.__globalToLocal(d, p), k), a.touchPointID = m, a.isPrimaryTouchPoint = c, a.bubbles = !0, a.pressure = b.pressure, this.__dispatchTarget(k,
                        a)), g.touchOverTarget = k);
                    Ta.__pool.release(d);
                    Ta.__pool.release(p);
                    n && (this.__touchData.remove(m), g.reset(), tk.__pool.release(g))
                },
                __registerLimeModule: function(a) {
                    a.onCreateWindow.add(q(this, this.__onLimeCreateWindow));
                    a.onUpdate.add(q(this, this.__onLimeUpdate));
                    a.onExit.add(q(this, this.__onLimeModuleExit), !1, 0);
                    for (a = ee.devices.iterator(); a.hasNext();) {
                        var b = a.next();
                        this.__onLimeGamepadConnect(b)
                    }
                    ee.onConnect.add(q(this, this.__onLimeGamepadConnect));
                    Ge.onStart.add(q(this, this.__onLimeTouchStart));
                    Ge.onMove.add(q(this, this.__onLimeTouchMove));
                    Ge.onEnd.add(q(this, this.__onLimeTouchEnd));
                    Ge.onCancel.add(q(this, this.__onLimeTouchCancel))
                },
                __resize: function() {
                    var a = this.stageWidth,
                        b = this.stageHeight,
                        c = E["int"](this.window.get_width() * this.window.get_scale()),
                        d = E["int"](this.window.get_height() * this.window.get_scale());
                    this.__logicalWidth = c;
                    this.__logicalHeight = d;
                    this.__displayMatrix.identity();
                    if (null != this.get_fullScreenSourceRect() && this.window.get_fullscreen()) {
                        this.stageWidth = E["int"](this.get_fullScreenSourceRect().width);
                        this.stageHeight = E["int"](this.get_fullScreenSourceRect().height);
                        var e = c / this.stageWidth,
                            f = d / this.stageHeight;
                        this.__displayMatrix.translate(-this.get_fullScreenSourceRect().x, -this.get_fullScreenSourceRect().y);
                        this.__displayMatrix.scale(e, f);
                        this.__displayRect.setTo(this.get_fullScreenSourceRect().get_left(), this.get_fullScreenSourceRect().get_right(), this.get_fullScreenSourceRect().get_top(), this.get_fullScreenSourceRect().get_bottom())
                    } else {
                        if (0 == this.__logicalWidth && 0 == this.__logicalHeight) this.stageWidth =
                            c, this.stageHeight = d;
                        else {
                            this.stageWidth = this.__logicalWidth;
                            this.stageHeight = this.__logicalHeight;
                            e = Math.min(c / this.stageWidth, d / this.stageHeight);
                            f = Math.round((c - this.stageWidth * e) / 2);
                            var h = Math.round((d - this.stageHeight * e) / 2);
                            this.__displayMatrix.scale(e, e);
                            this.__displayMatrix.translate(f, h)
                        }
                        this.__displayRect.setTo(0, 0, this.stageWidth, this.stageHeight)
                    }
                    null != this.context3D && this.context3D.configureBackBuffer(c, d, 0, !0, !0, !0);
                    e = 0;
                    for (f = this.stage3Ds; e < f.get_length();) h = f.get(e), ++e, h.__resize(c,
                        d);
                    null != this.__renderer && this.__renderer.__resize(c, d);
                    if (this.stageWidth != a || this.stageHeight != b) this.__renderDirty = !0, this.__setTransformDirty(), a = new Oa("resize"), this.__dispatchEvent(a)
                },
                __setLogicalSize: function(a, b) {
                    this.__logicalWidth = a;
                    this.__logicalHeight = b;
                    this.__resize()
                },
                __update: function(a, b) {
                    a ? this.__transformDirty && (gb.prototype.__update.call(this, !0, b), b && (this.__transformDirty = !1)) : this.__transformDirty || this.__renderDirty ? (gb.prototype.__update.call(this, !1, b), b && R.__supportDOM &&
                        (this.__wasDirty = !0)) : !this.__renderDirty && this.__wasDirty && (gb.prototype.__update.call(this, !1, b), b && (this.__wasDirty = !1))
                },
                set_color: function(a) {
                    null == a ? (this.__transparent = !0, a = 0) : this.__transparent = !1;
                    this.__color != a && (this.__colorSplit[0] = ((a & 16711680) >>> 16) / 255, this.__colorSplit[1] = ((a & 65280) >>> 8) / 255, this.__colorSplit[2] = (a & 255) / 255, this.__colorString = "#" + ka.hex(a & 16777215, 6), this.__renderDirty = !0, this.__color = -16777216 | a & 16777215);
                    return a
                },
                get_focus: function() {
                    return this.__focus
                },
                set_focus: function(a) {
                    if (a !=
                        this.__focus) {
                        var b = this.__focus;
                        this.__cacheFocus = this.__focus = a;
                        if (null != b) {
                            var c = new uk("focusOut", !0, !1, a, !1, 0),
                                d = [];
                            b.__getInteractive(d);
                            d.reverse();
                            this.__dispatchStack(c, d)
                        }
                        null != a && (b = new uk("focusIn", !0, !1, b, !1, 0), c = [], a.__getInteractive(c), c.reverse(), this.__dispatchStack(b, c))
                    }
                    return a
                },
                get_frameRate: function() {
                    return null != this.window ? this.window.get_frameRate() : 0
                },
                get_fullScreenHeight: function() {
                    return Math.ceil(this.window.get_display().currentMode.height * this.window.get_scale())
                },
                get_fullScreenSourceRect: function() {
                    return null == this.__fullScreenSourceRect ? null : this.__fullScreenSourceRect.clone()
                },
                get_fullScreenWidth: function() {
                    return Math.ceil(this.window.get_display().currentMode.width * this.window.get_scale())
                },
                set_height: function(a) {
                    return this.get_height()
                },
                get_mouseX: function() {
                    return this.__mouseX
                },
                get_mouseY: function() {
                    return this.__mouseY
                },
                get_quality: function() {
                    return this.__quality
                },
                set_rotation: function(a) {
                    return 0
                },
                set_scaleMode: function(a) {
                    return this.__scaleMode =
                        a
                },
                set_scaleX: function(a) {
                    return 0
                },
                set_scaleY: function(a) {
                    return 0
                },
                get_tabEnabled: function() {
                    return !1
                },
                get_tabIndex: function() {
                    return -1
                },
                set_transform: function(a) {
                    return this.get_transform()
                },
                set_width: function(a) {
                    return this.get_width()
                },
                set_x: function(a) {
                    return 0
                },
                set_y: function(a) {
                    return 0
                },
                __class__: Ci
            });
            var Br = function(a) {
                bb.call(this);
                this.__stage = a;
                this.__height = 0;
                this.__projectionTransform = new Er;
                this.__renderTransform = new Er;
                this.__y = this.__x = this.__width = 0;
                this.visible = !0;
                0 < a.stageWidth &&
                    0 < a.stageHeight && this.__resize(a.stageWidth, a.stageHeight)
            };
            g["openfl.display.Stage3D"] = Br;
            Br.__name__ = ["openfl", "display", "Stage3D"];
            Br.__super__ = bb;
            Br.prototype = p(bb.prototype, {
                context3D: null,
                visible: null,
                __contextLost: null,
                __contextRequested: null,
                __height: null,
                __indexBuffer: null,
                __projectionTransform: null,
                __renderTransform: null,
                __stage: null,
                __vertexBuffer: null,
                __width: null,
                __x: null,
                __y: null,
                __canvas: null,
                __webgl: null,
                __createContext: function() {
                    var a = this.__stage,
                        b = a.__renderer;
                    if ("cairo" == b.__type ||
                        "canvas" == b.__type) this.__dispatchError();
                    else if ("opengl" == b.__type) this.context3D = new Hb(a, a.context3D.__contextState, this), this.__dispatchCreate();
                    else if ("dom" == b.__type) {
                        this.__canvas = La.get_document().createElement("canvas");
                        this.__canvas.width = a.stageWidth;
                        this.__canvas.height = a.stageHeight;
                        a = b.__context.attributes;
                        b = T.hasField(a, "background") && null == a.background;
                        var c = T.hasField(a, "colorDepth") ? a.colorDepth : 32;
                        a = {
                            alpha: b || 16 < c,
                            antialias: T.hasField(a, "antialiasing") && 0 < a.antialiasing,
                            depth: !0,
                            premultipliedAlpha: !0,
                            stencil: !0,
                            preserveDrawingBuffer: !1
                        };
                        this.__webgl = Xv.getContextWebGL(this.__canvas, a);
                        this.__dispatchError()
                    }
                },
                __dispatchError: function() {
                    this.__contextRequested = !1;
                    this.dispatchEvent(new Ig("error", !1, !1, "Context3D not available"))
                },
                __dispatchCreate: function() {
                    this.__contextRequested && (this.__contextRequested = !1, this.dispatchEvent(new Oa("context3DCreate")))
                },
                __lostContext: function() {
                    this.__contextLost = !0;
                    null != this.context3D && (this.context3D.__dispose(), this.__contextRequested = !0)
                },
                __resize: function(a, b) {
                    if (a != this.__width || b != this.__height) null != this.__canvas && (this.__canvas.width = a, this.__canvas.height = b), this.__projectionTransform.copyRawDataFrom(M.toFloatVector(null, null, null, [2 / (0 < a ? a : 1), 0, 0, 0, 0, -2 / (0 < b ? b : 1), 0, 0, 0, 0, -.001, 0, -1, 1, 0, 1])), this.__renderTransform.identity(), this.__renderTransform.appendTranslation(this.__x, this.__y, 0), this.__renderTransform.append(this.__projectionTransform), this.__width = a, this.__height = b
                },
                __restoreContext: function() {
                    this.__contextLost = !1;
                    this.__createContext()
                },
                get_x: function() {
                    return this.__x
                },
                get_y: function() {
                    return this.__y
                },
                __class__: Br
            });
            var Fo = function() {
                this.__totalFrames = this.__framesLoaded = 1;
                this.__currentLabels = [];
                this.__currentFrame = 1;
                this.__lastFrameUpdate = this.__lastFrameScriptEval = -1
            };
            g["openfl.display.Timeline"] = Fo;
            Fo.__name__ = ["openfl", "display", "Timeline"];
            Fo.prototype = {
                frameRate: null,
                scenes: null,
                scripts: null,
                __currentFrame: null,
                __currentFrameLabel: null,
                __currentLabel: null,
                __currentLabels: null,
                __currentScene: null,
                __frameScripts: null,
                __framesLoaded: null,
                __frameTime: null,
                __isPlaying: null,
                __lastFrameScriptEval: null,
                __lastFrameUpdate: null,
                __scope: null,
                __timeElapsed: null,
                __totalFrames: null,
                attachMovieClip: function(a) {},
                enterFrame: function(a) {},
                __attachMovieClip: function(a) {
                    this.__scope = a;
                    this.__framesLoaded = this.__totalFrames = 0;
                    if (null != this.scenes && 0 < this.scenes.length) {
                        for (var b = 0, c = this.scenes; b < c.length;) {
                            var d = c[b];
                            ++b;
                            this.__totalFrames += d.numFrames;
                            this.__framesLoaded += d.numFrames;
                            null != d.labels && (this.__currentLabels =
                                this.__currentLabels.concat(d.labels))
                        }
                        this.__currentScene = this.scenes[0]
                    }
                    if (null != this.scripts && 0 < this.scripts.length)
                        for (this.__frameScripts = new we, b = 0, c = this.scripts; b < c.length;) d = c[b], ++b, this.__frameScripts.set(d.frame, d.script);
                    this.attachMovieClip(a)
                },
                __enterFrame: function(a) {
                    if (this.__isPlaying) {
                        a = this.__getNextFrame(a);
                        if (this.__lastFrameScriptEval == a) return;
                        if (null != this.__frameScripts) {
                            if (a < this.__currentFrame) {
                                if (!this.__evaluateFrameScripts(this.__totalFrames)) return;
                                this.__currentFrame =
                                    1
                            }
                            if (!this.__evaluateFrameScripts(a)) return
                        } else this.__currentFrame = a
                    }
                    this.__updateSymbol(this.__currentFrame)
                },
                __evaluateFrameScripts: function(a) {
                    if (null == this.__frameScripts) return !0;
                    var b = this.__currentFrame;
                    for (a += 1; b < a;) {
                        var c = b++;
                        if (c != this.__lastFrameScriptEval && (this.__currentFrame = this.__lastFrameScriptEval = c, this.__frameScripts.exists(c) && (this.__updateSymbol(c), this.__frameScripts.get(c)(this.__scope), this.__currentFrame != c) || !this.__isPlaying)) return !1
                    }
                    return !0
                },
                __getNextFrame: function(a) {
                    null !=
                        this.frameRate ? (this.__timeElapsed += a, a = this.__currentFrame + Math.floor(this.__timeElapsed / this.__frameTime), 1 > a && (a = 1), a > this.__totalFrames && (a = Math.floor((a - 1) % this.__totalFrames) + 1), this.__timeElapsed %= this.__frameTime) : (a = this.__currentFrame + 1, a > this.__totalFrames && (a = 1));
                    return a
                },
                __goto: function(a) {
                    1 > a ? a = 1 : a > this.__totalFrames && (a = this.__totalFrames);
                    this.__lastFrameScriptEval = -1;
                    this.__currentFrame = a;
                    this.__updateSymbol(this.__currentFrame);
                    this.__evaluateFrameScripts(this.__currentFrame)
                },
                __gotoAndPlay: function(a, b) {
                    this.__play();
                    this.__goto(this.__resolveFrameReference(a))
                },
                __gotoAndStop: function(a, b) {
                    this.__stop();
                    this.__goto(this.__resolveFrameReference(a))
                },
                __play: function() {
                    this.__isPlaying || 2 > this.__totalFrames || (this.__isPlaying = !0, null != this.frameRate && (this.__frameTime = E["int"](1E3 / this.frameRate), this.__timeElapsed = 0))
                },
                __stop: function() {
                    this.__isPlaying = !1
                },
                __resolveFrameReference: function(a) {
                    if ("number" == typeof a && (a | 0) === a) return a;
                    if ("string" == typeof a) {
                        for (var b = 0, c =
                                this.__currentLabels; b < c.length;) {
                            var d = c[b];
                            ++b;
                            if (d.name == a) return d.frame
                        }
                        throw new Z(new Yl("Error #2109: Frame label " + a + " not found in scene."));
                    }
                    throw new Z("Invalid type for frame " + Q.getClassName(a));
                },
                __updateFrameLabel: function() {
                    this.__currentFrameLabel = this.__currentLabel = null;
                    for (var a = 0, b = this.__currentLabels; a < b.length;) {
                        var c = b[a];
                        ++a;
                        if (c.frame < this.__currentFrame) this.__currentLabel = c.name;
                        else if (c.frame == this.__currentFrame) this.__currentFrameLabel = this.__currentLabel = c.name;
                        else break
                    }
                },
                __updateSymbol: function(a) {
                    this.__currentFrame != this.__lastFrameUpdate && (this.__updateFrameLabel(), this.enterFrame(a), this.__lastFrameUpdate = this.__currentFrame)
                },
                __class__: Fo
            };
            var Bk = function(a, b) {
                uo.call(this, a, b);
                this.stage = new Ci(this, T.hasField(b.context, "background") ? b.context.background : 16777215);
                if (T.hasField(b, "parameters")) try {
                    this.stage.get_loaderInfo().parameters = b.parameters
                } catch (c) {
                    vb.lastException = c
                }
                T.hasField(b, "resizable") && !b.resizable && this.stage.__setLogicalSize(b.width,
                    b.height);
                a.addModule(this.stage)
            };
            g["openfl.display.Window"] = Bk;
            Bk.__name__ = ["openfl", "display", "Window"];
            Bk.__super__ = uo;
            Bk.prototype = p(uo.prototype, {
                __class__: Bk
            });
            var Dk = function() {};
            g["openfl.display._internal.CanvasBitmap"] = Dk;
            Dk.__name__ = ["openfl", "display", "_internal", "CanvasBitmap"];
            Dk.render = function(a, b) {
                if (a.__renderable) {
                    var c = b.__getAlpha(a.__worldAlpha);
                    if (0 < c && null != a.__bitmapData && a.__bitmapData.__isValid && a.__bitmapData.readable) {
                        var d = b.context;
                        b.__setBlendMode(a.__worldBlendMode);
                        b.__pushMaskObject(a, !1);
                        Ua.convertToCanvas(a.__bitmapData.image);
                        d.globalAlpha = c;
                        c = a.__scrollRect;
                        b.setTransform(a.__renderTransform, d);
                        b.__allowSmoothing && a.smoothing || (d.imageSmoothingEnabled = !1);
                        null == c ? d.drawImage(a.__bitmapData.image.get_src(), 0, 0, a.__bitmapData.image.width, a.__bitmapData.image.height) : d.drawImage(a.__bitmapData.image.get_src(), c.x, c.y, c.width, c.height);
                        b.__allowSmoothing && a.smoothing || (d.imageSmoothingEnabled = !0);
                        b.__popMaskObject(a, !1)
                    }
                }
            };
            var Vl = function() {};
            g["openfl.display._internal.CanvasDisplayObject"] =
                Vl;
            Vl.__name__ = ["openfl", "display", "_internal", "CanvasDisplayObject"];
            Vl.render = function(a, b) {
                if (!(null == a.opaqueBackground && null == a.__graphics || !a.__renderable || 0 >= b.__getAlpha(a.__worldAlpha))) {
                    if (null != a.opaqueBackground && !a.__isCacheBitmapRender && 0 < a.get_width() && 0 < a.get_height()) {
                        b.__setBlendMode(a.__worldBlendMode);
                        b.__pushMaskObject(a);
                        var c = b.context;
                        b.setTransform(a.__renderTransform, c);
                        var d = a.opaqueBackground;
                        c.fillStyle = "rgb(" + (d >>> 16 & 255) + "," + (d >>> 8 & 255) + "," + (d & 255) + ")";
                        c.fillRect(0,
                            0, a.get_width(), a.get_height());
                        b.__popMaskObject(a)
                    }
                    null != a.__graphics && av.render(a, b)
                }
            };
            var Ff = function() {
                null == Ff.empty ? (this.types = [], this.b = [], this.i = [], this.f = [], this.o = [], this.ff = [], this.ii = [], this.copyOnWrite = !0) : this.clear()
            };
            g["openfl.display._internal.DrawCommandBuffer"] = Ff;
            Ff.__name__ = ["openfl", "display", "_internal", "DrawCommandBuffer"];
            Ff.prototype = {
                types: null,
                b: null,
                copyOnWrite: null,
                f: null,
                ff: null,
                i: null,
                ii: null,
                o: null,
                append: function(a) {
                    if (0 == this.get_length()) return this.types = a.types,
                        this.b = a.b, this.i = a.i, this.f = a.f, this.o = a.o, this.ff = a.ff, this.ii = a.ii, this.copyOnWrite = a.copyOnWrite = !0, a;
                    for (var b = new Vg(a), c = 0, d = a.types; c < d.length;) {
                        var e = d[c];
                        ++c;
                        switch (Q.enumIndex(e)) {
                            case 0:
                                e = b.readBeginBitmapFill();
                                this.beginBitmapFill(e.obj(0), e.obj(1), e.bool(0), e.bool(1));
                                break;
                            case 1:
                                e = b.readBeginFill();
                                this.beginFill(e["int"](0), e["float"](0));
                                break;
                            case 2:
                                e = b.readBeginGradientFill();
                                this.beginGradientFill(e.obj(0), e.iArr(0), e.fArr(0), e.iArr(1), e.obj(1), e.obj(2), e.obj(3), e["float"](0));
                                break;
                            case 3:
                                e = b.readBeginShaderFill();
                                this.beginShaderFill(e.obj(0));
                                break;
                            case 4:
                                e = b.readCubicCurveTo();
                                this.cubicCurveTo(e["float"](0), e["float"](1), e["float"](2), e["float"](3), e["float"](4), e["float"](5));
                                break;
                            case 5:
                                e = b.readCurveTo();
                                this.curveTo(e["float"](0), e["float"](1), e["float"](2), e["float"](3));
                                break;
                            case 6:
                                e = b.readDrawCircle();
                                this.drawCircle(e["float"](0), e["float"](1), e["float"](2));
                                break;
                            case 7:
                                e = b.readDrawEllipse();
                                this.drawEllipse(e["float"](0), e["float"](1), e["float"](2), e["float"](3));
                                break;
                            case 8:
                                e = b.readDrawQuads();
                                this.drawQuads(e.obj(0), e.obj(1), e.obj(2));
                                break;
                            case 9:
                                e = b.readDrawRect();
                                this.drawRect(e["float"](0), e["float"](1), e["float"](2), e["float"](3));
                                break;
                            case 10:
                                e = b.readDrawRoundRect();
                                this.drawRoundRect(e["float"](0), e["float"](1), e["float"](2), e["float"](3), e["float"](4), e.obj(0));
                                break;
                            case 12:
                                e = b.readDrawTriangles();
                                this.drawTriangles(e.obj(0), e.obj(1), e.obj(2), e.obj(3));
                                break;
                            case 13:
                                b.readEndFill();
                                this.endFill();
                                break;
                            case 14:
                                e = b.readLineBitmapStyle();
                                this.lineBitmapStyle(e.obj(0),
                                    e.obj(1), e.bool(0), e.bool(1));
                                break;
                            case 15:
                                e = b.readLineGradientStyle();
                                this.lineGradientStyle(e.obj(0), e.iArr(0), e.fArr(0), e.iArr(1), e.obj(1), e.obj(2), e.obj(3), e["float"](0));
                                break;
                            case 16:
                                e = b.readLineStyle();
                                this.lineStyle(e.obj(0), e["int"](0), e["float"](0), e.bool(0), e.obj(1), e.obj(2), e.obj(3), e["float"](1));
                                break;
                            case 17:
                                e = b.readLineTo();
                                this.lineTo(e["float"](0), e["float"](1));
                                break;
                            case 18:
                                e = b.readMoveTo();
                                this.moveTo(e["float"](0), e["float"](1));
                                break;
                            case 20:
                                e = b.readOverrideMatrix();
                                this.overrideMatrix(e.obj(0));
                                break;
                            case 21:
                                b.readWindingEvenOdd();
                                this.windingEvenOdd();
                                break;
                            case 22:
                                b.readWindingNonZero(), this.windingNonZero()
                        }
                    }
                    b.destroy();
                    return a
                },
                beginBitmapFill: function(a, b, c, d) {
                    this.prepareWrite();
                    this.types.push(ha.BEGIN_BITMAP_FILL);
                    this.o.push(a);
                    this.o.push(b);
                    this.b.push(c);
                    this.b.push(d)
                },
                beginFill: function(a, b) {
                    this.prepareWrite();
                    this.types.push(ha.BEGIN_FILL);
                    this.i.push(a);
                    this.f.push(b)
                },
                beginGradientFill: function(a, b, c, d, e, f, h, k) {
                    this.prepareWrite();
                    this.types.push(ha.BEGIN_GRADIENT_FILL);
                    this.o.push(a);
                    this.ii.push(b);
                    this.ff.push(c);
                    this.ii.push(d);
                    this.o.push(e);
                    this.o.push(f);
                    this.o.push(h);
                    this.f.push(k)
                },
                beginShaderFill: function(a) {
                    this.prepareWrite();
                    this.types.push(ha.BEGIN_SHADER_FILL);
                    this.o.push(a)
                },
                clear: function() {
                    this.types = Ff.empty.types;
                    this.b = Ff.empty.b;
                    this.i = Ff.empty.i;
                    this.f = Ff.empty.f;
                    this.o = Ff.empty.o;
                    this.ff = Ff.empty.ff;
                    this.ii = Ff.empty.ii;
                    this.copyOnWrite = !0
                },
                copy: function() {
                    var a = new Ff;
                    a.append(this);
                    return a
                },
                cubicCurveTo: function(a, b, c, d, e, f) {
                    this.prepareWrite();
                    this.types.push(ha.CUBIC_CURVE_TO);
                    this.f.push(a);
                    this.f.push(b);
                    this.f.push(c);
                    this.f.push(d);
                    this.f.push(e);
                    this.f.push(f)
                },
                curveTo: function(a, b, c, d) {
                    this.prepareWrite();
                    this.types.push(ha.CURVE_TO);
                    this.f.push(a);
                    this.f.push(b);
                    this.f.push(c);
                    this.f.push(d)
                },
                drawCircle: function(a, b, c) {
                    this.prepareWrite();
                    this.types.push(ha.DRAW_CIRCLE);
                    this.f.push(a);
                    this.f.push(b);
                    this.f.push(c)
                },
                drawEllipse: function(a, b, c, d) {
                    this.prepareWrite();
                    this.types.push(ha.DRAW_ELLIPSE);
                    this.f.push(a);
                    this.f.push(b);
                    this.f.push(c);
                    this.f.push(d)
                },
                drawQuads: function(a, b, c) {
                    this.prepareWrite();
                    this.types.push(ha.DRAW_QUADS);
                    this.o.push(a);
                    this.o.push(b);
                    this.o.push(c)
                },
                drawRect: function(a, b, c, d) {
                    this.prepareWrite();
                    this.types.push(ha.DRAW_RECT);
                    this.f.push(a);
                    this.f.push(b);
                    this.f.push(c);
                    this.f.push(d)
                },
                drawRoundRect: function(a, b, c, d, e, f) {
                    this.prepareWrite();
                    this.types.push(ha.DRAW_ROUND_RECT);
                    this.f.push(a);
                    this.f.push(b);
                    this.f.push(c);
                    this.f.push(d);
                    this.f.push(e);
                    this.o.push(f)
                },
                drawTriangles: function(a, b, c, d) {
                    this.prepareWrite();
                    this.types.push(ha.DRAW_TRIANGLES);
                    this.o.push(a);
                    this.o.push(b);
                    this.o.push(c);
                    this.o.push(d)
                },
                endFill: function() {
                    this.prepareWrite();
                    this.types.push(ha.END_FILL)
                },
                lineBitmapStyle: function(a, b, c, d) {
                    this.prepareWrite();
                    this.types.push(ha.LINE_BITMAP_STYLE);
                    this.o.push(a);
                    this.o.push(b);
                    this.b.push(c);
                    this.b.push(d)
                },
                lineGradientStyle: function(a, b, c, d, e, f, h, k) {
                    this.prepareWrite();
                    this.types.push(ha.LINE_GRADIENT_STYLE);
                    this.o.push(a);
                    this.ii.push(b);
                    this.ff.push(c);
                    this.ii.push(d);
                    this.o.push(e);
                    this.o.push(f);
                    this.o.push(h);
                    this.f.push(k)
                },
                lineStyle: function(a, b, c, d, e, f, h, k) {
                    this.prepareWrite();
                    this.types.push(ha.LINE_STYLE);
                    this.o.push(a);
                    this.i.push(b);
                    this.f.push(c);
                    this.b.push(d);
                    this.o.push(e);
                    this.o.push(f);
                    this.o.push(h);
                    this.f.push(k)
                },
                lineTo: function(a, b) {
                    this.prepareWrite();
                    this.types.push(ha.LINE_TO);
                    this.f.push(a);
                    this.f.push(b)
                },
                moveTo: function(a, b) {
                    this.prepareWrite();
                    this.types.push(ha.MOVE_TO);
                    this.f.push(a);
                    this.f.push(b)
                },
                prepareWrite: function() {
                    this.copyOnWrite && (this.types = this.types.slice(),
                        this.b = this.b.slice(), this.i = this.i.slice(), this.f = this.f.slice(), this.o = this.o.slice(), this.ff = this.ff.slice(), this.ii = this.ii.slice(), this.copyOnWrite = !1)
                },
                overrideMatrix: function(a) {
                    this.prepareWrite();
                    this.types.push(ha.OVERRIDE_MATRIX);
                    this.o.push(a)
                },
                windingEvenOdd: function() {
                    this.prepareWrite();
                    this.types.push(ha.WINDING_EVEN_ODD)
                },
                windingNonZero: function() {
                    this.prepareWrite();
                    this.types.push(ha.WINDING_NON_ZERO)
                },
                get_length: function() {
                    return this.types.length
                },
                __class__: Ff
            };
            var A = function() {};
            g["openfl.display._internal.CanvasGraphics"] = A;
            A.__name__ = ["openfl", "display", "_internal", "CanvasGraphics"];
            A.closePath = function(a) {
                null == a && (a = !1);
                null != A.context.strokeStyle && (a || A.context.closePath(), A.context.stroke(), a && A.context.closePath(), A.context.beginPath())
            };
            A.createBitmapFill = function(a, b, c) {
                Ua.convertToCanvas(a.image);
                A.setSmoothing(c);
                return A.context.createPattern(a.image.get_src(), b ? "repeat" : "no-repeat")
            };
            A.createGradientPattern = function(a, b, c, d, e, f, h, k) {
                k = h = f = null;
                var m = !1;
                null ==
                    e && (e = Ya.__pool.get(), m = !0);
                switch (a) {
                    case 0:
                        h = Ta.__pool.get();
                        h.setTo(-819.2, 0);
                        e.__transformPoint(h);
                        k = Ta.__pool.get();
                        k.setTo(819.2, 0);
                        e.__transformPoint(k);
                        f = A.context.createLinearGradient(h.x, h.y, k.x, k.y);
                        break;
                    case 1:
                        h = Ta.__pool.get(), h.setTo(1638.4, 0), e.__transformPoint(h), f = A.context.createRadialGradient(e.tx, e.ty, 0, e.tx, e.ty, Math.abs((h.x - e.tx) / 2))
                }
                for (var g, l, n, p, x = 0, u = b.length; x < u;) p = x++, g = b[p], a = c[p], l = (g & 16711680) >>> 16, n = (g & 65280) >>> 8, g &= 255, p = d[p] / 255, 0 > p && (p = 0), 1 < p && (p = 1), f.addColorStop(p,
                    "rgba(" + l + ", " + n + ", " + g + ", " + a + ")");
                null != h && Ta.__pool.release(h);
                null != k && Ta.__pool.release(k);
                m && Ya.__pool.release(e);
                return f
            };
            A.createTempPatternCanvas = function(a, b, c, d) {
                var e = La.get_document().createElement("canvas"),
                    f = e.getContext("2d");
                e.width = c;
                e.height = d;
                a = a.image.get_src();
                f.fillStyle = f.createPattern(a, b ? "repeat" : "no-repeat");
                f.beginPath();
                f.moveTo(0, 0);
                f.lineTo(0, d);
                f.lineTo(c, d);
                f.lineTo(c, 0);
                f.lineTo(0, 0);
                f.closePath();
                A.hitTesting || f.fill(A.windingRule);
                return e
            };
            A.drawRoundRect = function(a,
                b, c, d, e, f) {
                null == f && (f = e);
                e *= .5;
                f *= .5;
                e > c / 2 && (e = c / 2);
                f > d / 2 && (f = d / 2);
                c = a + c;
                d = b + d;
                var h = -e + .7071067811865476 * e,
                    k = -e + .41421356237309503 * e,
                    m = -f + .7071067811865476 * f,
                    g = -f + .41421356237309503 * f;
                A.context.moveTo(c, d - f);
                A.context.quadraticCurveTo(c, d + g, c + h, d + m);
                A.context.quadraticCurveTo(c + k, d, c - e, d);
                A.context.lineTo(a + e, d);
                A.context.quadraticCurveTo(a - k, d, a - h, d + m);
                A.context.quadraticCurveTo(a, d + g, a, d - f);
                A.context.lineTo(a, b + f);
                A.context.quadraticCurveTo(a, b - g, a - h, b - m);
                A.context.quadraticCurveTo(a - k, b, a + e,
                    b);
                A.context.lineTo(c - e, b);
                A.context.quadraticCurveTo(c + k, b, c + h, b - m);
                A.context.quadraticCurveTo(c, b - g, c, b + f);
                A.context.lineTo(c, d - f)
            };
            A.endFill = function() {
                A.context.beginPath();
                A.playCommands(A.fillCommands, !1);
                A.fillCommands.clear()
            };
            A.endStroke = function() {
                A.context.beginPath();
                A.playCommands(A.strokeCommands, !0);
                A.context.closePath();
                A.strokeCommands.clear()
            };
            A.hitTest = function(a, b, c) {
                A.bounds = a.__bounds;
                A.graphics = a;
                if (0 == a.__commands.get_length() || null == A.bounds || 0 >= A.bounds.width || 0 >= A.bounds.height) return !1;
                A.hitTesting = !0;
                var d = a.__renderTransform,
                    e = d.__transformX(b, c);
                c = d.__transformY(b, c);
                b = e - d.__transformX(A.bounds.x, A.bounds.y);
                c -= d.__transformY(A.bounds.x, A.bounds.y);
                e = a.__canvas;
                var f = a.__context;
                a.__canvas = A.hitTestCanvas;
                a.__context = A.hitTestContext;
                A.context = a.__context;
                A.context.setTransform(d.a, d.b, d.c, d.d, d.tx, d.ty);
                A.fillCommands.clear();
                A.strokeCommands.clear();
                A.hasFill = !1;
                A.hasStroke = !1;
                A.bitmapFill = null;
                A.bitmapRepeat = !1;
                A.windingRule = "evenodd";
                d = new Vg(a.__commands);
                for (var h = 0, k =
                        a.__commands.types; h < k.length;) {
                    var m = k[h];
                    ++h;
                    switch (Q.enumIndex(m)) {
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                            A.endFill();
                            if (A.hasFill && A.context.isPointInPath(b, c, A.windingRule)) return d.destroy(), a.__canvas = e, a.__context = f, !0;
                            A.endStroke();
                            if (A.hasStroke && A.context.isPointInStroke(b, c)) return d.destroy(), a.__canvas = e, a.__context = f, !0;
                            m == ha.BEGIN_BITMAP_FILL ? (m = d.readBeginBitmapFill(), A.fillCommands.beginBitmapFill(m.obj(0), m.obj(1), m.bool(0), m.bool(1)), A.strokeCommands.beginBitmapFill(m.obj(0), m.obj(1), m.bool(0),
                                m.bool(1))) : m == ha.BEGIN_GRADIENT_FILL ? (m = d.readBeginGradientFill(), A.fillCommands.beginGradientFill(m.obj(0), m.iArr(0), m.fArr(0), m.iArr(1), m.obj(1), m.obj(2), m.obj(3), m["float"](0)), A.strokeCommands.beginGradientFill(m.obj(0), m.iArr(0), m.fArr(0), m.iArr(1), m.obj(1), m.obj(2), m.obj(3), m["float"](0))) : m == ha.BEGIN_SHADER_FILL ? (m = d.readBeginShaderFill(), A.fillCommands.beginShaderFill(m.obj(0)), A.strokeCommands.beginShaderFill(m.obj(0))) : (m = d.readBeginFill(), A.fillCommands.beginFill(m["int"](0), 1), A.strokeCommands.beginFill(m["int"](0),
                                1));
                            break;
                        case 4:
                            m = d.readCubicCurveTo();
                            A.fillCommands.cubicCurveTo(m["float"](0), m["float"](1), m["float"](2), m["float"](3), m["float"](4), m["float"](5));
                            A.strokeCommands.cubicCurveTo(m["float"](0), m["float"](1), m["float"](2), m["float"](3), m["float"](4), m["float"](5));
                            break;
                        case 5:
                            m = d.readCurveTo();
                            A.fillCommands.curveTo(m["float"](0), m["float"](1), m["float"](2), m["float"](3));
                            A.strokeCommands.curveTo(m["float"](0), m["float"](1), m["float"](2), m["float"](3));
                            break;
                        case 6:
                            m = d.readDrawCircle();
                            A.fillCommands.drawCircle(m["float"](0),
                                m["float"](1), m["float"](2));
                            A.strokeCommands.drawCircle(m["float"](0), m["float"](1), m["float"](2));
                            break;
                        case 7:
                            m = d.readDrawEllipse();
                            A.fillCommands.drawEllipse(m["float"](0), m["float"](1), m["float"](2), m["float"](3));
                            A.strokeCommands.drawEllipse(m["float"](0), m["float"](1), m["float"](2), m["float"](3));
                            break;
                        case 9:
                            m = d.readDrawRect();
                            A.fillCommands.drawRect(m["float"](0), m["float"](1), m["float"](2), m["float"](3));
                            A.strokeCommands.drawRect(m["float"](0), m["float"](1), m["float"](2), m["float"](3));
                            break;
                        case 10:
                            m = d.readDrawRoundRect();
                            A.fillCommands.drawRoundRect(m["float"](0), m["float"](1), m["float"](2), m["float"](3), m["float"](4), m.obj(0));
                            A.strokeCommands.drawRoundRect(m["float"](0), m["float"](1), m["float"](2), m["float"](3), m["float"](4), m.obj(0));
                            break;
                        case 13:
                            d.readEndFill();
                            A.endFill();
                            if (A.hasFill && A.context.isPointInPath(b, c, A.windingRule)) return d.destroy(), a.__canvas = e, a.__context = f, !0;
                            A.endStroke();
                            if (A.hasStroke && A.context.isPointInStroke(b, c)) return d.destroy(), a.__canvas = e, a.__context =
                                f, !0;
                            A.hasFill = !1;
                            A.bitmapFill = null;
                            break;
                        case 14:
                            m = d.readLineBitmapStyle();
                            A.strokeCommands.lineBitmapStyle(m.obj(0), m.obj(1), m.bool(0), m.bool(1));
                            break;
                        case 15:
                            m = d.readLineGradientStyle();
                            A.strokeCommands.lineGradientStyle(m.obj(0), m.iArr(0), m.fArr(0), m.iArr(1), m.obj(1), m.obj(2), m.obj(3), m["float"](0));
                            break;
                        case 16:
                            m = d.readLineStyle();
                            A.strokeCommands.lineStyle(m.obj(0), m["int"](0), 1, m.bool(0), m.obj(1), m.obj(2), m.obj(3), m["float"](1));
                            break;
                        case 17:
                            m = d.readLineTo();
                            A.fillCommands.lineTo(m["float"](0),
                                m["float"](1));
                            A.strokeCommands.lineTo(m["float"](0), m["float"](1));
                            break;
                        case 18:
                            m = d.readMoveTo();
                            A.fillCommands.moveTo(m["float"](0), m["float"](1));
                            A.strokeCommands.moveTo(m["float"](0), m["float"](1));
                            break;
                        case 21:
                            A.windingRule = "evenodd";
                            break;
                        case 22:
                            A.windingRule = "nonzero";
                            break;
                        default:
                            d.skip(m)
                    }
                }
                h = !1;
                0 < A.fillCommands.get_length() && A.endFill();
                A.hasFill && A.context.isPointInPath(b, c, A.windingRule) && (h = !0);
                0 < A.strokeCommands.get_length() && A.endStroke();
                A.hasStroke && A.context.isPointInStroke(b,
                    c) && (h = !0);
                d.destroy();
                a.__canvas = e;
                a.__context = f;
                return h
            };
            A.isCCW = function(a, b, c, d, e, f) {
                return 0 > (c - a) * (f - b) - (d - b) * (e - a)
            };
            A.normalizeUVT = function(a, b) {
                null == b && (b = !1);
                for (var c = -Infinity, d, e = a.get_length(), f = 1, h = e + 1; f < h;) d = f++, b && 0 == d % 3 || (d = a.get(d - 1), c < d && (c = d));
                if (!b) return {
                    max: c,
                    uvt: a
                };
                f = M.toFloatVector(null);
                h = 1;
                for (e += 1; h < e;) d = h++, b && 0 == d % 3 || f.push(a.get(d - 1));
                return {
                    max: c,
                    uvt: f
                }
            };
            A.playCommands = function(a, b) {
                null == b && (b = !1);
                A.bounds = A.graphics.__bounds;
                var c = A.bounds.x,
                    d = A.bounds.y,
                    e = 0,
                    f =
                    0,
                    h = !1,
                    k = 0,
                    m = 0,
                    g = !1;
                A.windingRule = "evenodd";
                A.setSmoothing(!0);
                var l = !1,
                    n = new Vg(a),
                    p, x, u, z = null,
                    v = null,
                    w = 0,
                    q = a.types;
                try {
                    for (; w < q.length;) {
                        var y = q[w];
                        ++w;
                        switch (Q.enumIndex(y)) {
                            case 0:
                                var L = n.readBeginBitmapFill();
                                A.bitmapFill = L.obj(0);
                                var D = L.obj(0),
                                    Ka = L.bool(0),
                                    t = L.bool(1);
                                A.context.fillStyle = A.createBitmapFill(D, Ka, t);
                                A.hasFill = !0;
                                null != L.obj(1) ? (A.pendingMatrix = L.obj(1), A.inversePendingMatrix = L.obj(1).clone(), A.inversePendingMatrix.invert()) : (A.pendingMatrix = null, A.inversePendingMatrix = null);
                                break;
                            case 1:
                                var B = n.readBeginFill();
                                if (.005 > B["float"](0)) A.hasFill = !1;
                                else {
                                    if (1 == B["float"](0)) {
                                        var F = ka.hex(B["int"](0) & 16777215, 6);
                                        A.context.fillStyle = "#" + F
                                    } else {
                                        var pa = (B["int"](0) & 16711680) >>> 16;
                                        var H = (B["int"](0) & 65280) >>> 8;
                                        var K = B["int"](0) & 255;
                                        var J = "rgba(" + pa + ", " + H + ", " + K + ", " + B["float"](0);
                                        A.context.fillStyle = J + ")"
                                    }
                                    A.bitmapFill = null;
                                    A.setSmoothing(!0);
                                    A.hasFill = !0
                                }
                                break;
                            case 2:
                                var R = n.readBeginGradientFill(),
                                    Ca = R.obj(0),
                                    X = R.iArr(0),
                                    oa = R.fArr(0),
                                    N = R.iArr(1),
                                    O = R.obj(1),
                                    S = R.obj(2),
                                    C = R.obj(3);
                                A.context.fillStyle = A.createGradientPattern(Ca, X, oa, N, O, S, C, R["float"](0));
                                A.bitmapFill = null;
                                A.setSmoothing(!0);
                                A.hasFill = !0;
                                break;
                            case 3:
                                var G = n.readBeginShaderFill().obj(0);
                                0 < G.inputCount && (A.bitmapFill = G.inputs[0], A.context.fillStyle = A.createBitmapFill(A.bitmapFill, 0 != G.inputWrap[0], 5 != G.inputFilter[0]), A.hasFill = !0, A.pendingMatrix = null, A.inversePendingMatrix = null);
                                break;
                            case 4:
                                var P = n.readCubicCurveTo();
                                l = !0;
                                A.context.bezierCurveTo(P["float"](0) - c, P["float"](1) - d, P["float"](2) - c, P["float"](3) -
                                    d, P["float"](4) - c, P["float"](5) - d);
                                break;
                            case 5:
                                var la = n.readCurveTo();
                                l = !0;
                                A.context.quadraticCurveTo(la["float"](0) - c, la["float"](1) - d, la["float"](2) - c, la["float"](3) - d);
                                break;
                            case 6:
                                var T = n.readDrawCircle();
                                l = !0;
                                A.context.moveTo(T["float"](0) - c + T["float"](2), T["float"](1) - d);
                                A.context.arc(T["float"](0) - c, T["float"](1) - d, T["float"](2), 0, 2 * Math.PI, !0);
                                break;
                            case 7:
                                var V = n.readDrawEllipse();
                                l = !0;
                                var U = V["float"](0);
                                var bb = V["float"](1);
                                var W = V["float"](2);
                                var Y = V["float"](3);
                                U -= c;
                                bb -= d;
                                var Lc = W / 2 *
                                    .5522848;
                                var le = Y / 2 * .5522848;
                                var ba = U + W;
                                var ca = bb + Y;
                                var aa = U + W / 2;
                                var ra = bb + Y / 2;
                                A.context.moveTo(U, ra);
                                A.context.bezierCurveTo(U, ra - le, aa - Lc, bb, aa, bb);
                                A.context.bezierCurveTo(aa + Lc, bb, ba, ra - le, ba, ra);
                                A.context.bezierCurveTo(ba, ra + le, aa + Lc, ca, aa, ca);
                                A.context.bezierCurveTo(aa - Lc, ca, U, ra + le, U, ra);
                                break;
                            case 8:
                                var ea = n.readDrawQuads(),
                                    Z = ea.obj(0),
                                    ha = ea.obj(1),
                                    da = ea.obj(2),
                                    ja = null != ha,
                                    fa = !1,
                                    gb = !1,
                                    bd = ja ? ha.get_length() : Math.floor(Z.get_length() / 4);
                                if (0 == bd) return;
                                null != da && (da.get_length() >= 6 * bd ? gb = fa = !0 : da.get_length() >= 4 * bd ? fa = !0 : da.get_length() >= 2 * bd && (gb = !0));
                                var yc = hb.__pool.get(),
                                    ia = Ya.__pool.get(),
                                    na = A.graphics.__renderTransform;
                                A.context.save();
                                for (var qa = 0, ma = bd; qa < ma;) {
                                    var Aa = qa++;
                                    var Fc = ja ? 4 * ha.get(Aa) : 4 * Aa;
                                    if (!(0 > Fc || (yc.setTo(Z.get(Fc), Z.get(Fc + 1), Z.get(Fc + 2), Z.get(Fc + 3)), 0 >= yc.width || 0 >= yc.height))) {
                                        if (fa && gb) {
                                            var Gc = 6 * Aa;
                                            ia.setTo(da.get(Gc), da.get(Gc + 1), da.get(Gc + 2), da.get(Gc + 3), da.get(Gc + 4), da.get(Gc + 5))
                                        } else fa ? (Gc = 4 * Aa, ia.setTo(da.get(Gc), da.get(Gc + 1), da.get(Gc + 2), da.get(Gc + 3),
                                            yc.x, yc.y)) : gb ? (Gc = 2 * Aa, ia.tx = da.get(Gc), ia.ty = da.get(Gc + 1)) : (ia.tx = yc.x, ia.ty = yc.y);
                                        ia.tx += e - c;
                                        ia.ty += f - d;
                                        ia.concat(na);
                                        A.context.setTransform(ia.a, ia.b, ia.c, ia.d, ia.tx, ia.ty);
                                        null != A.bitmapFill ? A.context.drawImage(A.bitmapFill.image.get_src(), yc.x, yc.y, yc.width, yc.height, 0, 0, yc.width, yc.height) : A.context.fillRect(0, 0, yc.width, yc.height)
                                    }
                                }
                                hb.__pool.release(yc);
                                Ya.__pool.release(ia);
                                A.context.restore();
                                break;
                            case 9:
                                var Ga = n.readDrawRect();
                                var ob = !1;
                                if (null != A.bitmapFill && !A.hitTesting) {
                                    var ua = u = x =
                                        p = 0;
                                    var ya = !0;
                                    null != A.pendingMatrix ? 0 != A.pendingMatrix.b || 0 != A.pendingMatrix.c ? ya = !1 : (null == z && (z = Ta.__pool.get()), null == v && (v = Ta.__pool.get()), z.setTo(Ga["float"](0), Ga["float"](1)), A.inversePendingMatrix.__transformPoint(z), v.setTo(Ga["float"](0) + Ga["float"](2), Ga["float"](1) + Ga["float"](3)), A.inversePendingMatrix.__transformPoint(v), p = z.y, ua = z.x, u = v.y, x = v.x) : (p = Ga["float"](1), ua = Ga["float"](0), u = Ga["float"](1) + Ga["float"](3), x = Ga["float"](0) + Ga["float"](2));
                                    ya && 0 <= p && 0 <= ua && x <= A.bitmapFill.width &&
                                        u <= A.bitmapFill.height && (ob = !0, A.hitTesting || A.context.drawImage(A.bitmapFill.image.get_src(), ua, p, x - ua, u - p, Ga["float"](0) - c, Ga["float"](1) - d, Ga["float"](2), Ga["float"](3)))
                                }
                                ob || (l = !0, A.context.rect(Ga["float"](0) - c, Ga["float"](1) - d, Ga["float"](2), Ga["float"](3)));
                                break;
                            case 10:
                                var wa = n.readDrawRoundRect();
                                l = !0;
                                A.drawRoundRect(wa["float"](0) - c, wa["float"](1) - d, wa["float"](2), wa["float"](3), wa["float"](4), wa.obj(0));
                                break;
                            case 12:
                                var za = n.readDrawTriangles(),
                                    sa = za.obj(0),
                                    xa = za.obj(1),
                                    ta = za.obj(2),
                                    va = null,
                                    Da = null == A.bitmapFill;
                                if (Da && null != ta) throw "__break__";
                                if (!Da) {
                                    if (null == ta) {
                                        ta = M.toFloatVector(null);
                                        for (var Ea = 0, Ha = E["int"](sa.get_length() / 2); Ea < Ha;) {
                                            var Fa = Ea++;
                                            ta.push(sa.get(2 * Fa) - c / A.bitmapFill.width);
                                            ta.push(sa.get(2 * Fa + 1) - d / A.bitmapFill.height)
                                        }
                                    }
                                    var Ia = ta.get_length() != sa.get_length(),
                                        La = A.normalizeUVT(ta, Ia),
                                        Pa = La.max;
                                    ta = La.uvt;
                                    va = 1 < Pa ? A.createTempPatternCanvas(A.bitmapFill, A.bitmapRepeat, E["int"](A.bounds.width), E["int"](A.bounds.height)) : A.createTempPatternCanvas(A.bitmapFill,
                                        A.bitmapRepeat, A.bitmapFill.width, A.bitmapFill.height)
                                }
                                for (var Ja = 0, Na = xa.get_length(), Oa, Qa, ab, $a, Pb, db, Sa, pb, Va, Ra, $b, Za, Xa, Wa, Ua, kb, jb, fb, cb, eb, ib, lb, rb, sb, tb, ub, vb, qb; Ja < Na;) {
                                    Oa = Ja;
                                    Qa = Ja + 1;
                                    ab = Ja + 2;
                                    $a = 2 * xa.get(Oa);
                                    Pb = 2 * xa.get(Oa) + 1;
                                    db = 2 * xa.get(Qa);
                                    Sa = 2 * xa.get(Qa) + 1;
                                    pb = 2 * xa.get(ab);
                                    Va = 2 * xa.get(ab) + 1;
                                    Ra = sa.get($a) - c;
                                    $b = sa.get(Pb) - d;
                                    Za = sa.get(db) - c;
                                    Xa = sa.get(Sa) - d;
                                    Wa = sa.get(pb) - c;
                                    Ua = sa.get(Va) - d;
                                    switch (za.obj(3)) {
                                        case 0:
                                            if (A.isCCW(Ra, $b, Za, Xa, Wa, Ua)) {
                                                Ja += 3;
                                                continue
                                            }
                                            break;
                                        case 2:
                                            if (!A.isCCW(Ra, $b,
                                                    Za, Xa, Wa, Ua)) {
                                                Ja += 3;
                                                continue
                                            }
                                    }
                                    Da ? (A.context.beginPath(), A.context.moveTo(Ra, $b), A.context.lineTo(Za, Xa), A.context.lineTo(Wa, Ua), A.context.closePath(), A.hitTesting || A.context.fill(A.windingRule), Ja += 3) : (kb = ta.get($a) * va.width, fb = ta.get(db) * va.width, eb = ta.get(pb) * va.width, jb = ta.get(Pb) * va.height, cb = ta.get(Sa) * va.height, ib = ta.get(Va) * va.height, lb = kb * (ib - cb) - fb * ib + eb * cb + (fb - eb) * jb, 0 == lb ? (Ja += 3, A.context.restore()) : (A.context.save(), A.context.beginPath(), A.context.moveTo(Ra, $b), A.context.lineTo(Za, Xa),
                                        A.context.lineTo(Wa, Ua), A.context.closePath(), A.context.clip(), rb = -(jb * (Wa - Za) - cb * Wa + ib * Za + (cb - ib) * Ra) / lb, sb = (cb * Ua + jb * (Xa - Ua) - ib * Xa + (ib - cb) * $b) / lb, tb = (kb * (Wa - Za) - fb * Wa + eb * Za + (fb - eb) * Ra) / lb, ub = -(fb * Ua + kb * (Xa - Ua) - eb * Xa + (eb - fb) * $b) / lb, vb = (kb * (ib * Za - cb * Wa) + jb * (fb * Wa - eb * Za) + (eb * cb - fb * ib) * Ra) / lb, qb = (kb * (ib * Xa - cb * Ua) + jb * (fb * Ua - eb * Xa) + (eb * cb - fb * ib) * $b) / lb, A.context.transform(rb, sb, tb, ub, vb, qb), A.context.drawImage(va, 0, 0, va.width, va.height), A.context.restore(), Ja += 3))
                                }
                                break;
                            case 14:
                                var wb = n.readLineBitmapStyle();
                                b && A.hasStroke && A.closePath();
                                A.context.moveTo(e - c, f - d);
                                var xb = wb.obj(0),
                                    yb = wb.bool(0);
                                A.context.strokeStyle = A.createBitmapFill(xb, yb, wb.bool(1));
                                A.hasStroke = !0;
                                break;
                            case 15:
                                var nb = n.readLineGradientStyle();
                                b && A.hasStroke && A.closePath();
                                A.context.moveTo(e - c, f - d);
                                var Rb = nb.obj(0),
                                    nc = nb.iArr(0),
                                    Bb = nb.fArr(0),
                                    Cb = nb.iArr(1),
                                    nd = nb.obj(1),
                                    Db = nb.obj(2),
                                    Qb = nb.obj(3);
                                A.context.strokeStyle = A.createGradientPattern(Rb, nc, Bb, Cb, nd, Db, Qb, nb["float"](0));
                                A.setSmoothing(!0);
                                A.hasStroke = !0;
                                break;
                            case 16:
                                var Ma = n.readLineStyle();
                                b && A.hasStroke && A.closePath(!0);
                                A.context.moveTo(e - c, f - d);
                                if (null == Ma.obj(0)) A.hasStroke = !1;
                                else {
                                    var Fb = 0 < Ma.obj(0) ? Ma.obj(0) : 1;
                                    A.context.lineWidth = Fb;
                                    var Gb = null == Ma.obj(3) ? "round" : vw.toString(Ma.obj(3)).toLowerCase();
                                    A.context.lineJoin = Gb;
                                    var Kb = null == Ma.obj(2) ? "round" : 0 == Ma.obj(2) ? "butt" : uw.toString(Ma.obj(2)).toLowerCase();
                                    A.context.lineCap = Kb;
                                    A.context.miterLimit = Ma["float"](1);
                                    if (1 == Ma["float"](0)) {
                                        var Ib = ka.hex(Ma["int"](0) & 16777215, 6);
                                        A.context.strokeStyle = "#" + Ib
                                    } else {
                                        pa = (Ma["int"](0) & 16711680) >>>
                                            16;
                                        H = (Ma["int"](0) & 65280) >>> 8;
                                        K = Ma["int"](0) & 255;
                                        var Jb = "rgba(" + pa + ", " + H + ", " + K + ", " + Ma["float"](0);
                                        A.context.strokeStyle = Jb + ")"
                                    }
                                    A.setSmoothing(!0);
                                    A.hasStroke = !0
                                }
                                break;
                            case 17:
                                var Nb = n.readLineTo();
                                l = !0;
                                A.context.lineTo(Nb["float"](0) - c, Nb["float"](1) - d);
                                e = Nb["float"](0);
                                f = Nb["float"](1);
                                e == k && f == m && (h = !0);
                                break;
                            case 18:
                                var Ab = n.readMoveTo();
                                A.context.moveTo(Ab["float"](0) - c, Ab["float"](1) - d);
                                e = Ab["float"](0);
                                f = Ab["float"](1);
                                g && Ab["float"](0) != k && Ab["float"](1) != m && (h = !0);
                                k = Ab["float"](0);
                                m = Ab["float"](1);
                                g = !0;
                                break;
                            case 21:
                                A.windingRule = "evenodd";
                                break;
                            case 22:
                                A.windingRule = "nonzero";
                                break;
                            default:
                                n.skip(y)
                        }
                    }
                } catch (Nw) {
                    if ("__break__" != Nw) throw Nw;
                }
                null != z && Ta.__pool.release(z);
                null != v && Ta.__pool.release(v);
                n.destroy();
                l && (b && A.hasStroke && (A.hasFill && h ? (A.context.lineTo(k - c, m - d), A.closePath(!1)) : h && e == k && f == m && A.closePath(!1), A.hitTesting || A.context.stroke()), b || !A.hasFill && null == A.bitmapFill || (A.context.translate(-A.bounds.x, -A.bounds.y), null != A.pendingMatrix ? (A.context.transform(A.pendingMatrix.a,
                    A.pendingMatrix.b, A.pendingMatrix.c, A.pendingMatrix.d, A.pendingMatrix.tx, A.pendingMatrix.ty), A.hitTesting || A.context.fill(A.windingRule), A.context.transform(A.inversePendingMatrix.a, A.inversePendingMatrix.b, A.inversePendingMatrix.c, A.inversePendingMatrix.d, A.inversePendingMatrix.tx, A.inversePendingMatrix.ty)) : A.hitTesting || A.context.fill(A.windingRule), A.context.translate(A.bounds.x, A.bounds.y), A.context.closePath()))
            };
            A.render = function(a, b) {
                a.__update(b.__worldTransform);
                if (a.__softwareDirty) {
                    A.hitTesting = !1;
                    A.graphics = a;
                    A.allowSmoothing = b.__allowSmoothing;
                    A.worldAlpha = b.__getAlpha(a.__owner.__worldAlpha);
                    A.bounds = a.__bounds;
                    var c = a.__width,
                        d = a.__height;
                    if (!a.__visible || 0 == a.__commands.get_length() || null == A.bounds || 1 > c || 1 > d) a.__canvas = null, a.__context = null, a.__bitmap = null;
                    else {
                        null == a.__canvas && (a.__canvas = La.get_document().createElement("canvas"), a.__context = a.__canvas.getContext("2d"));
                        A.context = a.__context;
                        var e = a.__renderTransform,
                            f = a.__canvas,
                            h = b.pixelRatio,
                            k = E["int"](c * h),
                            m = E["int"](d * h);
                        b.__setBlendModeContext(A.context,
                            10);
                        b.__isDOM ? (f.width == k && f.height == m ? A.context.clearRect(0, 0, k, m) : (f.width = k, f.height = m, f.style.width = c + "px", f.style.height = d + "px"), c = a.__renderTransform, A.context.setTransform(c.a * h, c.b * h, c.c * h, c.d * h, c.tx * h, c.ty * h)) : (f.width == k && f.height == m ? (A.context.closePath(), A.context.setTransform(1, 0, 0, 1, 0, 0), A.context.clearRect(0, 0, k, m)) : (f.width = c, f.height = d), A.context.setTransform(e.a, e.b, e.c, e.d, e.tx, e.ty));
                        A.fillCommands.clear();
                        A.strokeCommands.clear();
                        A.hasFill = !1;
                        A.hasStroke = !1;
                        A.bitmapFill = null;
                        h = A.bitmapRepeat = !1;
                        d = c = 0;
                        A.windingRule = "evenodd";
                        e = new Vg(a.__commands);
                        f = 0;
                        for (k = a.__commands.types; f < k.length;) switch (m = k[f], ++f, Q.enumIndex(m)) {
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                                A.endFill();
                                A.endStroke();
                                m == ha.BEGIN_BITMAP_FILL ? (m = e.readBeginBitmapFill(), A.fillCommands.beginBitmapFill(m.obj(0), m.obj(1), m.bool(0), m.bool(1)), A.strokeCommands.beginBitmapFill(m.obj(0), m.obj(1), m.bool(0), m.bool(1))) : m == ha.BEGIN_GRADIENT_FILL ? (m = e.readBeginGradientFill(), A.fillCommands.beginGradientFill(m.obj(0), m.iArr(0),
                                    m.fArr(0), m.iArr(1), m.obj(1), m.obj(2), m.obj(3), m["float"](0)), A.strokeCommands.beginGradientFill(m.obj(0), m.iArr(0), m.fArr(0), m.iArr(1), m.obj(1), m.obj(2), m.obj(3), m["float"](0))) : m == ha.BEGIN_SHADER_FILL ? (m = e.readBeginShaderFill(), A.fillCommands.beginShaderFill(m.obj(0)), A.strokeCommands.beginShaderFill(m.obj(0))) : (m = e.readBeginFill(), A.fillCommands.beginFill(m["int"](0), m["float"](0)), A.strokeCommands.beginFill(m["int"](0), m["float"](0)));
                                break;
                            case 4:
                                m = e.readCubicCurveTo();
                                A.fillCommands.cubicCurveTo(m["float"](0),
                                    m["float"](1), m["float"](2), m["float"](3), m["float"](4), m["float"](5));
                                h ? A.strokeCommands.cubicCurveTo(m["float"](0), m["float"](1), m["float"](2), m["float"](3), m["float"](4), m["float"](5)) : (c = m["float"](4), d = m["float"](5));
                                break;
                            case 5:
                                m = e.readCurveTo();
                                A.fillCommands.curveTo(m["float"](0), m["float"](1), m["float"](2), m["float"](3));
                                h ? A.strokeCommands.curveTo(m["float"](0), m["float"](1), m["float"](2), m["float"](3)) : (c = m["float"](2), d = m["float"](3));
                                break;
                            case 6:
                                m = e.readDrawCircle();
                                A.fillCommands.drawCircle(m["float"](0),
                                    m["float"](1), m["float"](2));
                                h && A.strokeCommands.drawCircle(m["float"](0), m["float"](1), m["float"](2));
                                break;
                            case 7:
                                m = e.readDrawEllipse();
                                A.fillCommands.drawEllipse(m["float"](0), m["float"](1), m["float"](2), m["float"](3));
                                h && A.strokeCommands.drawEllipse(m["float"](0), m["float"](1), m["float"](2), m["float"](3));
                                break;
                            case 8:
                                m = e.readDrawQuads();
                                A.fillCommands.drawQuads(m.obj(0), m.obj(1), m.obj(2));
                                break;
                            case 9:
                                m = e.readDrawRect();
                                A.fillCommands.drawRect(m["float"](0), m["float"](1), m["float"](2), m["float"](3));
                                h && A.strokeCommands.drawRect(m["float"](0), m["float"](1), m["float"](2), m["float"](3));
                                break;
                            case 10:
                                m = e.readDrawRoundRect();
                                A.fillCommands.drawRoundRect(m["float"](0), m["float"](1), m["float"](2), m["float"](3), m["float"](4), m.obj(0));
                                h && A.strokeCommands.drawRoundRect(m["float"](0), m["float"](1), m["float"](2), m["float"](3), m["float"](4), m.obj(0));
                                break;
                            case 12:
                                m = e.readDrawTriangles();
                                A.fillCommands.drawTriangles(m.obj(0), m.obj(1), m.obj(2), m.obj(3));
                                break;
                            case 13:
                                e.readEndFill();
                                A.endFill();
                                A.endStroke();
                                h = A.hasFill = !1;
                                A.bitmapFill = null;
                                d = c = 0;
                                break;
                            case 14:
                                m = e.readLineBitmapStyle();
                                h || 0 == c && 0 == d || (A.strokeCommands.moveTo(c, d), d = c = 0);
                                h = !0;
                                A.strokeCommands.lineBitmapStyle(m.obj(0), m.obj(1), m.bool(0), m.bool(1));
                                break;
                            case 15:
                                m = e.readLineGradientStyle();
                                h || 0 == c && 0 == d || (A.strokeCommands.moveTo(c, d), d = c = 0);
                                h = !0;
                                A.strokeCommands.lineGradientStyle(m.obj(0), m.iArr(0), m.fArr(0), m.iArr(1), m.obj(1), m.obj(2), m.obj(3), m["float"](0));
                                break;
                            case 16:
                                m = e.readLineStyle();
                                h || null == m.obj(0) || 0 == c && 0 == d || (A.strokeCommands.moveTo(c,
                                    d), d = c = 0);
                                h = null != m.obj(0);
                                A.strokeCommands.lineStyle(m.obj(0), m["int"](0), m["float"](0), m.bool(0), m.obj(1), m.obj(2), m.obj(3), m["float"](1));
                                break;
                            case 17:
                                m = e.readLineTo();
                                A.fillCommands.lineTo(m["float"](0), m["float"](1));
                                h ? A.strokeCommands.lineTo(m["float"](0), m["float"](1)) : (c = m["float"](0), d = m["float"](1));
                                break;
                            case 18:
                                m = e.readMoveTo();
                                A.fillCommands.moveTo(m["float"](0), m["float"](1));
                                h ? A.strokeCommands.moveTo(m["float"](0), m["float"](1)) : (c = m["float"](0), d = m["float"](1));
                                break;
                            case 19:
                                m = e.readOverrideBlendMode();
                                b.__setBlendModeContext(A.context, m.obj(0));
                                break;
                            case 21:
                                e.readWindingEvenOdd();
                                A.fillCommands.windingEvenOdd();
                                A.windingRule = "evenodd";
                                break;
                            case 22:
                                e.readWindingNonZero();
                                A.fillCommands.windingNonZero();
                                A.windingRule = "nonzero";
                                break;
                            default:
                                e.skip(m)
                        }
                        0 < A.fillCommands.get_length() && A.endFill();
                        0 < A.strokeCommands.get_length() && A.endStroke();
                        e.destroy();
                        a.__bitmap = Kb.fromCanvas(a.__canvas)
                    }
                    a.__softwareDirty = !1;
                    a.set___dirty(!1)
                }
            };
            A.renderMask = function(a, b) {
                if (0 != a.__commands.get_length()) {
                    A.context =
                        b.context;
                    b = new Vg(a.__commands);
                    var c = 0;
                    for (a = a.__commands.types; c < a.length;) {
                        var d = a[c];
                        ++c;
                        switch (Q.enumIndex(d)) {
                            case 4:
                                d = b.readCubicCurveTo();
                                A.context.bezierCurveTo(d["float"](0) - 0, d["float"](1) - 0, d["float"](2) - 0, d["float"](3) - 0, d["float"](4) - 0, d["float"](5) - 0);
                                d["float"](4);
                                d["float"](5);
                                break;
                            case 5:
                                d = b.readCurveTo();
                                A.context.quadraticCurveTo(d["float"](0) - 0, d["float"](1) - 0, d["float"](2) - 0, d["float"](3) - 0);
                                d["float"](2);
                                d["float"](3);
                                break;
                            case 6:
                                d = b.readDrawCircle();
                                A.context.arc(d["float"](0) -
                                    0, d["float"](1) - 0, d["float"](2), 0, 2 * Math.PI, !0);
                                break;
                            case 7:
                                var e = b.readDrawEllipse();
                                d = e["float"](0);
                                var f = e["float"](1);
                                var h = e["float"](2);
                                var k = e["float"](3);
                                d -= 0;
                                f -= 0;
                                e = h / 2 * .5522848;
                                var m = k / 2 * .5522848;
                                var g = d + h;
                                var l = f + k;
                                h = d + h / 2;
                                k = f + k / 2;
                                A.context.moveTo(d, k);
                                A.context.bezierCurveTo(d, k - m, h - e, f, h, f);
                                A.context.bezierCurveTo(h + e, f, g, k - m, g, k);
                                A.context.bezierCurveTo(g, k + m, h + e, l, h, l);
                                A.context.bezierCurveTo(h - e, l, d, k + m, d, k);
                                break;
                            case 9:
                                d = b.readDrawRect();
                                A.context.beginPath();
                                A.context.rect(d["float"](0) -
                                    0, d["float"](1) - 0, d["float"](2), d["float"](3));
                                A.context.closePath();
                                break;
                            case 10:
                                d = b.readDrawRoundRect();
                                A.drawRoundRect(d["float"](0) - 0, d["float"](1) - 0, d["float"](2), d["float"](3), d["float"](4), d.obj(0));
                                break;
                            case 17:
                                d = b.readLineTo();
                                A.context.lineTo(d["float"](0) - 0, d["float"](1) - 0);
                                d["float"](0);
                                d["float"](1);
                                break;
                            case 18:
                                d = b.readMoveTo();
                                A.context.moveTo(d["float"](0) - 0, d["float"](1) - 0);
                                d["float"](0);
                                d["float"](1);
                                break;
                            default:
                                b.skip(d)
                        }
                    }
                    b.destroy()
                }
            };
            A.setSmoothing = function(a) {
                A.allowSmoothing ||
                    (a = !1);
                A.context.imageSmoothingEnabled != a && (A.context.imageSmoothingEnabled = a)
            };
            var av = function() {};
            g["openfl.display._internal.CanvasShape"] = av;
            av.__name__ = ["openfl", "display", "_internal", "CanvasShape"];
            av.render = function(a, b) {
                if (a.__renderable) {
                    var c = b.__getAlpha(a.__worldAlpha);
                    if (!(0 >= c)) {
                        var d = a.__graphics;
                        if (null != d) {
                            A.render(d, b);
                            var e = d.__width,
                                f = d.__height,
                                h = d.__canvas;
                            if (null != h && d.__visible && 1 <= e && 1 <= f) {
                                var k = d.__worldTransform,
                                    m = b.context,
                                    g = a.__scrollRect,
                                    l = a.__worldScale9Grid;
                                if (null ==
                                    g || 0 < g.width && 0 < g.height) {
                                    b.__setBlendMode(a.__worldBlendMode);
                                    b.__pushMaskObject(a);
                                    m.globalAlpha = c;
                                    if (null != l && 0 == k.b && 0 == k.c) {
                                        m.setTransform(1, 0, 0, 1, k.tx, k.ty);
                                        var n = d.__bounds,
                                            p = d.__renderTransform.a,
                                            x = d.__renderTransform.d,
                                            u = k.a,
                                            z = k.d;
                                        k = Math.max(1, Math.round(l.x * p));
                                        d = Math.round(l.y * x);
                                        c = Math.max(1, Math.round((n.get_right() - l.get_right()) * p));
                                        g = Math.round((n.get_bottom() - l.get_bottom()) * x);
                                        p = Math.round(l.width * p);
                                        x = Math.round(l.height * x);
                                        var v = Math.round(l.x * u),
                                            w = Math.round(l.y * z),
                                            q = Math.round((n.get_right() -
                                                l.get_right()) * u);
                                        l = Math.round((n.get_bottom() - l.get_bottom()) * z);
                                        n = Math.round(e * u) - v - q;
                                        u = Math.round(f * z) - w - l;
                                        b.applySmoothing(m, !1);
                                        0 != p && 0 != x ? (m.drawImage(h, 0, 0, k, d, 0, 0, v, w), m.drawImage(h, k, 0, p, d, v, 0, n, w), m.drawImage(h, k + p, 0, c, d, v + n, 0, q, w), m.drawImage(h, 0, d, k, x, 0, w, v, u), m.drawImage(h, k, d, p, x, v, w, n, u), m.drawImage(h, k + p, d, c, x, v + n, w, q, u), m.drawImage(h, 0, d + x, k, g, 0, w + u, v, l), m.drawImage(h, k, d + x, p, g, v, w + u, n, l), m.drawImage(h, k + p, d + x, c, g, v + n, w + u, q, l)) : 0 == p && 0 != x ? (f = v + n + q, m.drawImage(h, 0, 0, e, d, 0, 0, f, w), m.drawImage(h,
                                            0, d, e, x, 0, w, f, u), m.drawImage(h, 0, d + x, e, g, 0, w + u, f, l)) : 0 == x && 0 != p && (e = w + u + l, m.drawImage(h, 0, 0, k, f, 0, 0, v, e), m.drawImage(h, k, 0, p, f, v, 0, n, e), m.drawImage(h, k + p, 0, c, f, v + n, 0, q, e))
                                    } else b.setTransform(k, m), b.__isDOM && (l = 1 / b.pixelRatio, m.scale(l, l)), m.drawImage(h, 0, 0, e, f);
                                    b.__popMaskObject(a)
                                }
                            }
                        }
                    }
                }
            };
            var lb = function() {};
            g["openfl.display._internal.CanvasTextField"] = lb;
            lb.__name__ = ["openfl", "display", "_internal", "CanvasTextField"];
            lb.render = function(a, b, c) {
                var d = a.__textEngine,
                    e = d.background || d.border ? d.bounds :
                    d.textBounds;
                c = a.__graphics;
                a.__dirty && (a.__updateLayout(), null == c.__bounds && (c.__bounds = new hb), c.__bounds.copyFrom(e));
                c.__update(b.__worldTransform);
                if (a.__dirty || c.__softwareDirty) {
                    var f = c.__width,
                        h = c.__height;
                    if (!(null != d.text && !$a.equals(d.text, "") || d.background || d.border || d.__hasFocus || 1 == d.type && d.selectable) || (0 >= d.width || 0 >= d.height) && 2 != d.autoSize) a.__graphics.__canvas = null, a.__graphics.__context = null, a.__graphics.__bitmap = null, a.__graphics.__softwareDirty = !1, a.__graphics.set___dirty(!1),
                        a.__dirty = !1;
                    else {
                        null == a.__graphics.__canvas && (a.__graphics.__canvas = La.get_document().createElement("canvas"), a.__graphics.__context = a.__graphics.__canvas.getContext("2d"));
                        lb.context = c.__context;
                        var k = c.__renderTransform;
                        if (b.__isDOM) {
                            var m = b.pixelRatio;
                            c.__canvas.width = E["int"](f * m);
                            c.__canvas.height = E["int"](h * m);
                            c.__canvas.style.width = f + "px";
                            c.__canvas.style.height = h + "px";
                            f = Ya.__pool.get();
                            f.copyFrom(k);
                            f.scale(m, m);
                            b.setTransform(f, lb.context);
                            Ya.__pool.release(f)
                        } else c.__canvas.width = f, c.__canvas.height =
                            h, lb.context.setTransform(k.a, k.b, k.c, k.d, k.tx, k.ty);
                        null == lb.clearRect && (lb.clearRect = "undefined" !== typeof navigator && "undefined" !== typeof navigator.isCocoonJS);
                        lb.clearRect && lb.context.clearRect(0, 0, c.__canvas.width, c.__canvas.height);
                        if (null != d.text && "" != d.text || d.__hasFocus) {
                            k = d.text;
                            c.__context.imageSmoothingEnabled = !b.__allowSmoothing || 0 == d.antiAliasType && 400 == d.sharpness ? !1 : !0;
                            if (d.border || d.background) lb.context.rect(.5, .5, e.width - 1, e.height - 1), d.background && (b = ka.hex(d.backgroundColor & 16777215,
                                6), lb.context.fillStyle = "#" + b, lb.context.fill()), d.border && (lb.context.lineWidth = 1, b = ka.hex(d.borderColor & 16777215, 6), lb.context.strokeStyle = "#" + b, lb.context.stroke());
                            lb.context.textBaseline = "alphabetic";
                            lb.context.textAlign = "start";
                            b = -a.get_scrollH();
                            f = m = 0;
                            for (h = a.get_scrollV() - 1; f < h;) {
                                var g = f++;
                                m -= d.lineHeights.get(g)
                            }
                            var l;
                            f = 0;
                            for (h = d.layoutGroups; f < h.get_length();)
                                if (g = h.get(f), ++f, !(g.lineIndex < a.get_scrollV() - 1)) {
                                    if (g.lineIndex > d.get_bottomScrollV() - 1) break;
                                    var n = "#" + ka.hex(g.format.color &
                                        16777215, 6);
                                    lb.context.font = uc.getFont(g.format);
                                    lb.context.fillStyle = n;
                                    lb.context.fillText($a.substring(k, g.startIndex, g.endIndex), g.offsetX + b - e.x, g.offsetY + g.ascent + m - e.y);
                                    if (-1 < a.__caretIndex && d.selectable)
                                        if (a.__selectionIndex == a.__caretIndex) {
                                            if (a.__showCursor && g.startIndex <= a.__caretIndex && g.endIndex >= a.__caretIndex) {
                                                for (var p = l = 0, x = a.__caretIndex - g.startIndex; p < x;) {
                                                    var u = p++;
                                                    if (g.positions.length <= u) break;
                                                    l += g.getAdvance(u)
                                                }
                                                p = 0;
                                                x = a.get_scrollV();
                                                for (u = g.lineIndex + 1; x < u;) {
                                                    var z = x++;
                                                    p += d.lineHeights.get(z -
                                                        1)
                                                }
                                                lb.context.beginPath();
                                                x = ka.hex(g.format.color & 16777215, 6);
                                                lb.context.strokeStyle = "#" + x;
                                                lb.context.moveTo(g.offsetX + l - a.get_scrollH() - e.x, p + 2 - e.y);
                                                lb.context.lineWidth = 1;
                                                lb.context.lineTo(g.offsetX + l - a.get_scrollH() - e.x, p + uc.getFormatHeight(a.get_defaultTextFormat()) - 1 - e.y);
                                                lb.context.stroke();
                                                lb.context.closePath()
                                            }
                                        } else if (g.startIndex <= a.__caretIndex && g.endIndex >= a.__caretIndex || g.startIndex <= a.__selectionIndex && g.endIndex >= a.__selectionIndex || g.startIndex > a.__caretIndex && g.endIndex < a.__selectionIndex ||
                                        g.startIndex > a.__selectionIndex && g.endIndex < a.__caretIndex) l = E["int"](Math.min(a.__selectionIndex, a.__caretIndex)), p = E["int"](Math.max(a.__selectionIndex, a.__caretIndex)), g.startIndex > l && (l = g.startIndex), g.endIndex < p && (p = g.endIndex), x = a.getCharBoundaries(l), p >= g.endIndex ? (u = a.getCharBoundaries(g.endIndex - 1), null != u && (u.x += u.width + 2)) : u = a.getCharBoundaries(p), null != x && null != u && (lb.context.fillStyle = "#000000", lb.context.fillRect(x.x + b, x.y + m, u.x - x.x, g.height), lb.context.fillStyle = "#FFFFFF", lb.context.fillText($a.substring(k,
                                        l, p), b + x.x, g.offsetY + g.ascent + m));
                                    g.format.underline && (lb.context.beginPath(), lb.context.strokeStyle = n, lb.context.lineWidth = 1, n = g.offsetX + b - e.x, l = Math.floor(g.offsetY + m + g.ascent - e.y) + .5, lb.context.moveTo(n, l), lb.context.lineTo(n + g.width, l), lb.context.stroke(), lb.context.closePath())
                                }
                        } else {
                            if (d.border || d.background) d.border ? lb.context.rect(.5, .5, e.width - 1, e.height - 1) : lb.context.rect(0, 0, e.width, e.height), d.background && (e = ka.hex(d.backgroundColor & 16777215, 6), lb.context.fillStyle = "#" + e, lb.context.fill()),
                                d.border && (lb.context.lineWidth = 1, lb.context.lineCap = "square", e = ka.hex(d.borderColor & 16777215, 6), lb.context.strokeStyle = "#" + e, lb.context.stroke());
                            if (-1 < a.__caretIndex && d.selectable && a.__showCursor) {
                                e = -a.get_scrollH();
                                b = k = 0;
                                for (m = a.get_scrollV() - 1; b < m;) f = b++, k += d.lineHeights.get(f);
                                lb.context.beginPath();
                                d = ka.hex(a.get_defaultTextFormat().color & 16777215, 6);
                                lb.context.strokeStyle = "#" + d;
                                lb.context.moveTo(e + 2.5, k + 2.5);
                                lb.context.lineWidth = 1;
                                lb.context.lineTo(e + 2.5, k + uc.getFormatHeight(a.get_defaultTextFormat()) -
                                    1);
                                lb.context.stroke();
                                lb.context.closePath()
                            }
                        }
                        c.__bitmap = Kb.fromCanvas(a.__graphics.__canvas);
                        c.__visible = !0;
                        a.__dirty = !1;
                        c.__softwareDirty = !1;
                        c.set___dirty(!1)
                    }
                }
            };
            var cj = function() {};
            g["openfl.display._internal.Context3DBitmap"] = cj;
            cj.__name__ = ["openfl", "display", "_internal", "Context3DBitmap"];
            cj.render = function(a, b) {
                if (a.__renderable && !(0 >= a.__worldAlpha) && null != a.__bitmapData && a.__bitmapData.__isValid) {
                    var c = b.__context3D;
                    b.__setBlendMode(a.__worldBlendMode);
                    b.__pushMaskObject(a);
                    var d = b.__initDisplayShader(a.__worldShader);
                    b.setShader(d);
                    b.applyBitmapData(a.__bitmapData, b.__allowSmoothing && (a.smoothing || b.__upscaled));
                    b.applyMatrix(b.__getMatrix(a.__renderTransform, a.pixelSnapping));
                    b.applyAlpha(a.__worldAlpha);
                    b.applyColorTransform(a.__worldColorTransform);
                    b.updateShader();
                    var e = a.__bitmapData.getVertexBuffer(c);
                    null != d.__position && c.setVertexBufferAt(d.__position.index, e, 0, 3);
                    null != d.__textureCoord && c.setVertexBufferAt(d.__textureCoord.index, e, 3, 2);
                    d = a.__bitmapData.getIndexBuffer(c);
                    c.drawTriangles(d);
                    b.__clearShader();
                    b.__popMaskObject(a)
                }
            };
            cj.renderMask = function(a, b) {
                if (null != a.__bitmapData && a.__bitmapData.__isValid) {
                    var c = b.__context3D,
                        d = b.__maskShader;
                    b.setShader(d);
                    b.applyBitmapData(Dl.opaqueBitmapData, !0);
                    b.applyMatrix(b.__getMatrix(a.__renderTransform, a.pixelSnapping));
                    b.updateShader();
                    var e = a.__bitmapData.getVertexBuffer(c);
                    null != d.__position && c.setVertexBufferAt(d.__position.index, e, 0, 3);
                    null != d.__textureCoord && c.setVertexBufferAt(d.__textureCoord.index, e, 3, 2);
                    a = a.__bitmapData.getIndexBuffer(c);
                    c.drawTriangles(a);
                    b.__clearShader()
                }
            };
            var Fr = function(a, b, c, d) {
                this.context3D = a;
                this.elementType = b;
                this.dataPerVertex = d;
                this.vertexCount = this.indexCount = 0;
                this.resize(c)
            };
            g["openfl.display._internal.Context3DBuffer"] = Fr;
            Fr.__name__ = ["openfl", "display", "_internal", "Context3DBuffer"];
            Fr.prototype = {
                dataPerVertex: null,
                elementCount: null,
                elementType: null,
                indexCount: null,
                vertexBuffer: null,
                vertexBufferData: null,
                vertexCount: null,
                context3D: null,
                flushVertexBufferData: function() {
                    this.vertexBufferData.length > this.vertexCount &&
                        (this.vertexCount = this.vertexBufferData.length, this.vertexBuffer = this.context3D.createVertexBuffer(this.vertexCount, this.dataPerVertex, 0));
                    this.vertexBuffer.uploadFromTypedArray(rk.toArrayBufferView(this.vertexBufferData))
                },
                resize: function(a, b) {
                    null == b && (b = -1);
                    this.elementCount = a; - 1 == b && (b = this.dataPerVertex);
                    b != this.dataPerVertex && (this.vertexBuffer = null, this.vertexCount = 0, this.dataPerVertex = b);
                    var c = 0;
                    switch (Q.enumIndex(this.elementType)) {
                        case 0:
                            c = 4 * a;
                            break;
                        case 1:
                            c = 3 * a;
                            break;
                        case 2:
                            c = 3 * a
                    }
                    a = c * b;
                    null == this.vertexBufferData ? this.vertexBufferData = null != a ? new jg(a) : null : a > this.vertexBufferData.length && (b = this.vertexBufferData, this.vertexBufferData = null != a ? new jg(a) : null, this.vertexBufferData.set(b))
                },
                __class__: Fr
            };
            var vh = g["openfl.display._internal.Context3DElementType"] = {
                __ename__: ["openfl", "display", "_internal", "Context3DElementType"],
                __constructs__: ["QUADS", "TRIANGLES", "TRIANGLE_INDICES"]
            };
            vh.QUADS = ["QUADS", 0];
            vh.QUADS.toString = l;
            vh.QUADS.__enum__ = vh;
            vh.TRIANGLES = ["TRIANGLES", 1];
            vh.TRIANGLES.toString =
                l;
            vh.TRIANGLES.__enum__ = vh;
            vh.TRIANGLE_INDICES = ["TRIANGLE_INDICES", 2];
            vh.TRIANGLE_INDICES.toString = l;
            vh.TRIANGLE_INDICES.__enum__ = vh;
            var Wl = function() {};
            g["openfl.display._internal.Context3DDisplayObject"] = Wl;
            Wl.__name__ = ["openfl", "display", "_internal", "Context3DDisplayObject"];
            Wl.render = function(a, b) {
                if (!(null == a.opaqueBackground && null == a.__graphics || !a.__renderable || 0 >= a.__worldAlpha)) {
                    if (null != a.opaqueBackground && !a.__isCacheBitmapRender && 0 < a.get_width() && 0 < a.get_height()) {
                        b.__setBlendMode(a.__worldBlendMode);
                        b.__pushMaskObject(a);
                        var c = b.__context3D,
                            d = hb.__pool.get();
                        d.setTo(0, 0, a.get_width(), a.get_height());
                        b.__pushMaskRect(d, a.__renderTransform);
                        var e = a.opaqueBackground;
                        c.clear((e >>> 16 & 255) / 255, (e >>> 8 & 255) / 255, (e & 255) / 255, 1, 0, 0, 1);
                        b.__popMaskRect();
                        b.__popMaskObject(a);
                        hb.__pool.release(d)
                    }
                    null != a.__graphics && Fk.render(a, b)
                }
            };
            var Ya = function(a, b, c, d, e, f) {
                null == f && (f = 0);
                null == e && (e = 0);
                null == d && (d = 1);
                null == c && (c = 0);
                null == b && (b = 0);
                null == a && (a = 1);
                this.a = a;
                this.b = b;
                this.c = c;
                this.d = d;
                this.tx = e;
                this.ty = f
            };
            g["openfl.geom.Matrix"] = Ya;
            Ya.__name__ = ["openfl", "geom", "Matrix"];
            Ya.prototype = {
                a: null,
                b: null,
                c: null,
                d: null,
                tx: null,
                ty: null,
                clone: function() {
                    return new Ya(this.a, this.b, this.c, this.d, this.tx, this.ty)
                },
                concat: function(a) {
                    var b = this.a * a.a + this.b * a.c;
                    this.b = this.a * a.b + this.b * a.d;
                    this.a = b;
                    b = this.c * a.a + this.d * a.c;
                    this.d = this.c * a.b + this.d * a.d;
                    this.c = b;
                    b = this.tx * a.a + this.ty * a.c + a.tx;
                    this.ty = this.tx * a.b + this.ty * a.d + a.ty;
                    this.tx = b
                },
                copyFrom: function(a) {
                    this.a = a.a;
                    this.b = a.b;
                    this.c = a.c;
                    this.d = a.d;
                    this.tx = a.tx;
                    this.ty = a.ty
                },
                equals: function(a) {
                    return null != a && this.tx == a.tx && this.ty == a.ty && this.a == a.a && this.b == a.b && this.c == a.c ? this.d == a.d : !1
                },
                identity: function() {
                    this.a = 1;
                    this.c = this.b = 0;
                    this.d = 1;
                    this.ty = this.tx = 0
                },
                invert: function() {
                    var a = this.a * this.d - this.b * this.c;
                    if (0 == a) this.a = this.b = this.c = this.d = 0, this.tx = -this.tx, this.ty = -this.ty;
                    else {
                        a = 1 / a;
                        var b = this.d * a;
                        this.d = this.a * a;
                        this.a = b;
                        this.b *= -a;
                        this.c *= -a;
                        a = -this.a * this.tx - this.c * this.ty;
                        this.ty = -this.b * this.tx - this.d * this.ty;
                        this.tx = a
                    }
                    return this
                },
                rotate: function(a) {
                    var b =
                        Math.cos(a);
                    a = Math.sin(a);
                    var c = this.a * b - this.b * a;
                    this.b = this.a * a + this.b * b;
                    this.a = c;
                    c = this.c * b - this.d * a;
                    this.d = this.c * a + this.d * b;
                    this.c = c;
                    c = this.tx * b - this.ty * a;
                    this.ty = this.tx * a + this.ty * b;
                    this.tx = c
                },
                scale: function(a, b) {
                    this.a *= a;
                    this.b *= b;
                    this.c *= a;
                    this.d *= b;
                    this.tx *= a;
                    this.ty *= b
                },
                setTo: function(a, b, c, d, e, f) {
                    this.a = a;
                    this.b = b;
                    this.c = c;
                    this.d = d;
                    this.tx = e;
                    this.ty = f
                },
                to3DString: function(a) {
                    null == a && (a = !1);
                    return a ? "matrix3d(" + this.a + ", " + this.b + ", 0, 0, " + this.c + ", " + this.d + ", 0, 0, 0, 0, 1, 0, " + E["int"](this.tx) +
                        ", " + E["int"](this.ty) + ", 0, 1)" : "matrix3d(" + this.a + ", " + this.b + ", 0, 0, " + this.c + ", " + this.d + ", 0, 0, 0, 0, 1, 0, " + this.tx + ", " + this.ty + ", 0, 1)"
                },
                transformPoint: function(a) {
                    return new Ta(this.__transformX(a.x, a.y), this.__transformY(a.x, a.y))
                },
                translate: function(a, b) {
                    this.tx += a;
                    this.ty += b
                },
                __transformInversePoint: function(a) {
                    var b = this.a * this.d - this.b * this.c;
                    if (0 == b) a.x = -this.tx, a.y = -this.ty;
                    else {
                        var c = 1 / b * (this.c * (this.ty - a.y) + this.d * (a.x - this.tx));
                        a.y = 1 / b * (this.a * (a.y - this.ty) + this.b * (this.tx -
                            a.x));
                        a.x = c
                    }
                },
                __transformInverseX: function(a, b) {
                    var c = this.a * this.d - this.b * this.c;
                    return 0 == c ? -this.tx : 1 / c * (this.c * (this.ty - b) + this.d * (a - this.tx))
                },
                __transformInverseY: function(a, b) {
                    var c = this.a * this.d - this.b * this.c;
                    return 0 == c ? -this.ty : 1 / c * (this.a * (b - this.ty) + this.b * (this.tx - a))
                },
                __transformPoint: function(a) {
                    var b = a.x,
                        c = a.y;
                    a.x = this.__transformX(b, c);
                    a.y = this.__transformY(b, c)
                },
                __transformX: function(a, b) {
                    return a * this.a + b * this.c + this.tx
                },
                __transformY: function(a, b) {
                    return a * this.b + b * this.d + this.ty
                },
                __translateTransformed: function(a, b) {
                    this.tx = this.__transformX(a, b);
                    this.ty = this.__transformY(a, b)
                },
                __class__: Ya
            };
            var mc = function(a, b, c, d, e, f, h, k) {
                null == k && (k = 0);
                null == h && (h = 0);
                null == f && (f = 0);
                null == e && (e = 0);
                null == d && (d = 1);
                null == c && (c = 1);
                null == b && (b = 1);
                null == a && (a = 1);
                this.redMultiplier = a;
                this.greenMultiplier = b;
                this.blueMultiplier = c;
                this.alphaMultiplier = d;
                this.redOffset = e;
                this.greenOffset = f;
                this.blueOffset = h;
                this.alphaOffset = k
            };
            g["openfl.geom.ColorTransform"] = mc;
            mc.__name__ = ["openfl", "geom", "ColorTransform"];
            mc.prototype = {
                alphaMultiplier: null,
                alphaOffset: null,
                blueMultiplier: null,
                blueOffset: null,
                greenMultiplier: null,
                greenOffset: null,
                redMultiplier: null,
                redOffset: null,
                __copyFrom: function(a) {
                    this.redMultiplier = a.redMultiplier;
                    this.greenMultiplier = a.greenMultiplier;
                    this.blueMultiplier = a.blueMultiplier;
                    this.alphaMultiplier = a.alphaMultiplier;
                    this.redOffset = a.redOffset;
                    this.greenOffset = a.greenOffset;
                    this.blueOffset = a.blueOffset;
                    this.alphaOffset = a.alphaOffset
                },
                __combine: function(a) {
                    this.redMultiplier *= a.redMultiplier;
                    this.greenMultiplier *= a.greenMultiplier;
                    this.blueMultiplier *= a.blueMultiplier;
                    this.alphaMultiplier *= a.alphaMultiplier;
                    this.redOffset += a.redOffset;
                    this.greenOffset += a.greenOffset;
                    this.blueOffset += a.blueOffset;
                    this.alphaOffset += a.alphaOffset
                },
                __identity: function() {
                    this.alphaMultiplier = this.blueMultiplier = this.greenMultiplier = this.redMultiplier = 1;
                    this.alphaOffset = this.blueOffset = this.greenOffset = this.redOffset = 0
                },
                __invert: function() {
                    this.redMultiplier = 0 != this.redMultiplier ? 1 / this.redMultiplier : 1;
                    this.greenMultiplier =
                        0 != this.greenMultiplier ? 1 / this.greenMultiplier : 1;
                    this.blueMultiplier = 0 != this.blueMultiplier ? 1 / this.blueMultiplier : 1;
                    this.alphaMultiplier = 0 != this.alphaMultiplier ? 1 / this.alphaMultiplier : 1;
                    this.redOffset = -this.redOffset;
                    this.greenOffset = -this.greenOffset;
                    this.blueOffset = -this.blueOffset;
                    this.alphaOffset = -this.alphaOffset
                },
                __equals: function(a, b) {
                    return null == a || this.redMultiplier != a.redMultiplier || this.greenMultiplier != a.greenMultiplier || this.blueMultiplier != a.blueMultiplier || !b && this.alphaMultiplier !=
                        a.alphaMultiplier || this.redOffset != a.redOffset || this.greenOffset != a.greenOffset || this.blueOffset != a.blueOffset ? !1 : this.alphaOffset == a.alphaOffset
                },
                __isDefault: function(a) {
                    return a ? 1 == this.redMultiplier && 1 == this.greenMultiplier && 1 == this.blueMultiplier && 0 == this.redOffset && 0 == this.greenOffset && 0 == this.blueOffset ? 0 == this.alphaOffset : !1 : 1 == this.redMultiplier && 1 == this.greenMultiplier && 1 == this.blueMultiplier && 1 == this.alphaMultiplier && 0 == this.redOffset && 0 == this.greenOffset && 0 == this.blueOffset ? 0 == this.alphaOffset :
                        !1
                },
                __setArrays: function(a, b) {
                    a[0] = this.redMultiplier;
                    a[1] = this.greenMultiplier;
                    a[2] = this.blueMultiplier;
                    a[3] = this.alphaMultiplier;
                    b[0] = this.redOffset;
                    b[1] = this.greenOffset;
                    b[2] = this.blueOffset;
                    b[3] = this.alphaOffset
                },
                __toLimeColorMatrix: function() {
                    if (null == mc.__limeColorMatrix) {
                        var a = new jg(20);
                        mc.__limeColorMatrix = a
                    }
                    mc.__limeColorMatrix[0] = this.redMultiplier;
                    mc.__limeColorMatrix[4] = this.redOffset / 255;
                    mc.__limeColorMatrix[6] = this.greenMultiplier;
                    mc.__limeColorMatrix[9] = this.greenOffset / 255;
                    mc.__limeColorMatrix[12] =
                        this.blueMultiplier;
                    mc.__limeColorMatrix[14] = this.blueOffset / 255;
                    mc.__limeColorMatrix[18] = this.alphaMultiplier;
                    mc.__limeColorMatrix[19] = this.alphaOffset / 255;
                    return mc.__limeColorMatrix
                },
                __class__: mc
            };
            var vc = function() {};
            g["openfl.display._internal.Context3DGraphics"] = vc;
            vc.__name__ = ["openfl", "display", "_internal", "Context3DGraphics"];
            vc.buildBuffer = function(a, b) {
                var c = 0,
                    d = 0,
                    e = 0,
                    f = new Vg(a.__commands);
                b = b.__context3D;
                for (var h = hb.__pool.get(), k = Ya.__pool.get(), m = null, g = 0, l = a.__commands.types; g < l.length;) {
                    var n =
                        l[g];
                    ++g;
                    switch (Q.enumIndex(n)) {
                        case 0:
                            m = f.readBeginBitmapFill().obj(0);
                            break;
                        case 1:
                            m = null;
                            f.skip(n);
                            break;
                        case 3:
                            n = f.readBeginShaderFill().obj(0);
                            m = null;
                            if (null != n)
                                for (var p = 0, x = n.inputCount; p < x;) {
                                    var u = p++;
                                    if ("bitmap" == n.inputRefs[u].name) {
                                        m = n.inputs[u];
                                        break
                                    }
                                }
                            break;
                        case 8:
                            if (null != m) {
                                x = f.readDrawQuads();
                                n = x.obj(0);
                                p = x.obj(1);
                                x = x.obj(2);
                                u = null != p;
                                var z = !1,
                                    v = !1,
                                    w = u ? p.get_length() : Math.floor(n.get_length() / 4);
                                if (0 == w) return;
                                null != x && (x.get_length() >= 6 * w ? v = z = !0 : x.get_length() >= 4 * w ? z = !0 : x.get_length() >=
                                    2 * w && (v = !0));
                                null == a.__quadBuffer ? a.__quadBuffer = new Fr(b, vh.QUADS, w, 4) : a.__quadBuffer.resize(c + w, 4);
                                var q = a.__quadBuffer.vertexBufferData;
                                var y = m.width;
                                var L = m.height;
                                for (var A = 0, D = w; A < D;) {
                                    var Ka = A++;
                                    var t = 16 * (c + Ka);
                                    var B = u ? 4 * p.get(Ka) : 4 * Ka;
                                    if (!(0 > B)) {
                                        h.setTo(n.get(B), n.get(B + 1), n.get(B + 2), n.get(B + 3));
                                        B = h.width;
                                        var E = h.height;
                                        if (!(0 >= B || 0 >= E)) {
                                            z && v ? (Ka *= 6, k.setTo(x.get(Ka), x.get(Ka + 1), x.get(Ka + 2), x.get(Ka + 3), x.get(Ka + 4), x.get(Ka + 5))) : z ? (Ka *= 4, k.setTo(x.get(Ka), x.get(Ka + 1), x.get(Ka + 2), x.get(Ka + 3),
                                                h.x, h.y)) : v ? (Ka *= 2, k.tx = x.get(Ka), k.ty = x.get(Ka + 1)) : (k.tx = h.x, k.ty = h.y);
                                            Ka = h.x / y;
                                            var F = h.y / L;
                                            var pa = h.get_right() / y;
                                            var H = h.get_bottom() / L;
                                            var K = k.__transformX(0, 0);
                                            var J = k.__transformY(0, 0);
                                            var R = k.__transformX(B, 0);
                                            var Ca = k.__transformY(B, 0);
                                            var X = k.__transformX(0, E);
                                            var oa = k.__transformY(0, E);
                                            var N = k.__transformX(B, E);
                                            B = k.__transformY(B, E);
                                            q[t] = K;
                                            q[t + 1] = J;
                                            q[t + 2] = Ka;
                                            q[t + 3] = F;
                                            q[t + 4] = R;
                                            q[t + 4 + 1] = Ca;
                                            q[t + 4 + 2] = pa;
                                            q[t + 4 + 3] = F;
                                            q[t + 8] = X;
                                            q[t + 8 + 1] = oa;
                                            q[t + 8 + 2] = Ka;
                                            q[t + 8 + 3] = H;
                                            q[t + 12] = N;
                                            q[t + 12 + 1] = B;
                                            q[t + 12 + 2] = pa;
                                            q[t + 12 + 3] = H
                                        }
                                    }
                                }
                                c += w
                            }
                            break;
                        case 12:
                            u = f.readDrawTriangles();
                            n = u.obj(0);
                            p = u.obj(1);
                            x = u.obj(2);
                            u.obj(3);
                            u = null != p;
                            w = Math.floor(n.get_length() / 2);
                            z = u ? p.get_length() : w;
                            t = (w = (v = null != x) && x.get_length() >= 3 * w) ? 4 : 2;
                            y = w ? 3 : 2;
                            L = t + 2;
                            q = w ? e : d;
                            vc.resizeVertexBuffer(a, w, q + z * L);
                            A = w ? a.__vertexBufferDataUVT : a.__vertexBufferData;
                            E = 0;
                            for (Ka = z; E < Ka;) F = E++, D = q + F * L, B = u ? 2 * p.get(F) : 2 * F, F = u ? p.get(F) * y : F * y, w ? (pa = x.get(F + 2), A[D] = n.get(B) / pa, A[D + 1] = n.get(B + 1) / pa, A[D + 2] = 0, A[D + 3] = 1 / pa) : (A[D] = n.get(B), A[D + 1] = n.get(B + 1)), A[D + t] = v ? x.get(F) :
                                0, A[D + t + 1] = v ? x.get(F + 1) : 0;
                            w ? e += z * L : d += z * L;
                            break;
                        case 13:
                            m = null;
                            break;
                        default:
                            f.skip(n)
                    }
                }
                0 < c && a.__quadBuffer.flushVertexBufferData();
                if (0 < d) {
                    c = a.__vertexBuffer;
                    if (null == c || d > a.__vertexBufferCount) c = b.createVertexBuffer(d, 4, 0), a.__vertexBuffer = c, a.__vertexBufferCount = d;
                    c.uploadFromTypedArray(rk.toArrayBufferView(a.__vertexBufferData))
                }
                if (0 < e) {
                    d = a.__vertexBufferUVT;
                    if (null == d || e > a.__vertexBufferCountUVT) d = b.createVertexBuffer(e, 6, 0), a.__vertexBufferUVT = d, a.__vertexBufferCountUVT = e;
                    d.uploadFromTypedArray(rk.toArrayBufferView(a.__vertexBufferDataUVT))
                }
                hb.__pool.release(h);
                Ya.__pool.release(k)
            };
            vc.isCompatible = function(a) {
                if (null != a.__owner.__worldScale9Grid) return !1;
                var b = new Vg(a.__commands),
                    c = !1,
                    d = !1,
                    e = !1,
                    f = 0;
                for (a = a.__commands.types; f < a.length;) {
                    var h = a[f];
                    ++f;
                    switch (Q.enumIndex(h)) {
                        case 0:
                            d = !0;
                            e = c = !1;
                            b.skip(h);
                            break;
                        case 1:
                            d = !1;
                            c = !0;
                            e = !1;
                            b.skip(h);
                            break;
                        case 3:
                            c = d = !1;
                            e = !0;
                            b.skip(h);
                            break;
                        case 8:
                            if (d || e) b.skip(h);
                            else return b.destroy(), !1;
                            break;
                        case 9:
                            if (c) b.skip(h);
                            else return b.destroy(), !1;
                            break;
                        case 12:
                            if (d || e) b.skip(h);
                            else return b.destroy(), !1;
                            break;
                        case 13:
                            e =
                                c = d = !1;
                            b.skip(h);
                            break;
                        case 18:
                            b.skip(h);
                            break;
                        case 19:
                            b.skip(h);
                            break;
                        default:
                            return b.destroy(), !1
                    }
                }
                b.destroy();
                return !0
            };
            vc.render = function(a, b) {
                if (a.__visible && 0 != a.__commands.get_length())
                    if (null != a.__bitmap && !a.__dirty || !vc.isCompatible(a)) {
                        var c = b.__softwareRenderer.__worldTransform;
                        b.__softwareRenderer.__worldTransform = b.__worldTransform;
                        A.render(a, b.__softwareRenderer);
                        b.__softwareRenderer.__worldTransform = c
                    } else {
                        a.__bitmap = null;
                        a.__update(b.__worldTransform);
                        c = a.__width;
                        var d = a.__height;
                        if (null != a.__bounds && 1 <= c && 1 <= d) {
                            (a.__hardwareDirty || null == a.__quadBuffer && null == a.__vertexBuffer && null == a.__vertexBufferUVT) && vc.buildBuffer(a, b);
                            c = new Vg(a.__commands);
                            d = b.__context3D;
                            for (var e = Ya.__pool.get(), f = null, h = null, k = !1, m = !1, g = null, l = 0, n = 0, p = 0, x = 0, u = 0, z = a.__commands.types; u < z.length;) {
                                var v = z[u];
                                ++u;
                                switch (Q.enumIndex(v)) {
                                    case 0:
                                        m = c.readBeginBitmapFill();
                                        h = m.obj(0);
                                        k = m.bool(0);
                                        m = m.bool(1);
                                        g = f = null;
                                        break;
                                    case 1:
                                        f = c.readBeginFill();
                                        h = E["int"](f["int"](0));
                                        f = E["int"](255 * f["float"](0));
                                        g =
                                            h & 16777215 | f << 24;
                                        h = f = null;
                                        break;
                                    case 3:
                                        f = c.readBeginShaderFill().obj(0);
                                        n = 0;
                                        h = null == f || null == f.shader || null == f.shader.__bitmap ? null : f.shader.__bitmap.input;
                                        g = null;
                                        break;
                                    case 8:
                                        if (null != h) {
                                            v = c.readDrawQuads();
                                            var w = v.obj(0),
                                                q = v.obj(1);
                                            v.obj(2);
                                            v = null != q ? q.get_length() : Math.floor(w.get_length() / 4);
                                            q = b.__getMatrix(a.__owner.__renderTransform, 1);
                                            null == f || vc.maskRender ? (w = vc.maskRender ? b.__maskShader : b.__initGraphicsShader(null), b.setShader(w), b.applyMatrix(q), b.applyBitmapData(h, m, k), b.applyAlpha(a.__owner.__worldAlpha),
                                                b.applyColorTransform(a.__owner.__worldColorTransform), b.updateShader()) : (w = b.__initShaderBuffer(f), b.__setShaderBuffer(f), b.applyMatrix(q), b.applyBitmapData(h, !1, k), b.applyAlpha(a.__owner.__worldAlpha), b.applyColorTransform(a.__owner.__worldColorTransform));
                                            for (q = l + v; l < q;) {
                                                v = E["int"](Math.min(q - l, d.__quadIndexBufferElements));
                                                if (0 >= v) break;
                                                null == f || vc.maskRender || b.__updateShaderBuffer(n);
                                                null != w.__position && d.setVertexBufferAt(w.__position.index, a.__quadBuffer.vertexBuffer, 16 * l, 2);
                                                null != w.__textureCoord &&
                                                    d.setVertexBufferAt(w.__textureCoord.index, a.__quadBuffer.vertexBuffer, 16 * l + 2, 2);
                                                d.drawTriangles(d.__quadIndexBuffer, 0, 2 * v);
                                                n += 4 * v;
                                                l += v
                                            }
                                            b.__clearShader()
                                        }
                                        break;
                                    case 9:
                                        if (null != g) {
                                            var y = c.readDrawRect();
                                            v = y["float"](0);
                                            w = y["float"](1);
                                            q = y["float"](2);
                                            var L = y["float"](3);
                                            y = g;
                                            vc.tempColorTransform.redOffset = y >>> 16 & 255;
                                            vc.tempColorTransform.greenOffset = y >>> 8 & 255;
                                            vc.tempColorTransform.blueOffset = y & 255;
                                            vc.tempColorTransform.__combine(a.__owner.__worldColorTransform);
                                            e.identity();
                                            e.scale(q, L);
                                            e.tx = v;
                                            e.ty =
                                                w;
                                            e.concat(a.__owner.__renderTransform);
                                            v = vc.maskRender ? b.__maskShader : b.__initGraphicsShader(null);
                                            b.setShader(v);
                                            b.applyMatrix(b.__getMatrix(e, 1));
                                            b.applyBitmapData(vc.blankBitmapData, !0, k);
                                            b.applyAlpha((y >>> 24 & 255) / 255 * a.__owner.__worldAlpha);
                                            b.applyColorTransform(vc.tempColorTransform);
                                            b.updateShader();
                                            w = vc.blankBitmapData.getVertexBuffer(d);
                                            null != v.__position && d.setVertexBufferAt(v.__position.index, w, 0, 3);
                                            null != v.__textureCoord && d.setVertexBufferAt(v.__textureCoord.index, w, 3, 2);
                                            v = vc.blankBitmapData.getIndexBuffer(d);
                                            d.drawTriangles(v);
                                            n += 4;
                                            b.__clearShader()
                                        }
                                        break;
                                    case 12:
                                        v = c.readDrawTriangles();
                                        y = v.obj(0);
                                        w = v.obj(1);
                                        q = v.obj(2);
                                        v = v.obj(3);
                                        L = null != w;
                                        y = Math.floor(y.get_length() / 2);
                                        w = L ? w.get_length() : y;
                                        y = (q = null != q && q.get_length() >= 3 * y) ? 4 : 2;
                                        L = y + 2;
                                        var D = q ? a.__vertexBufferUVT : a.__vertexBuffer,
                                            Ka = q ? x : p,
                                            t = b.__getMatrix(a.__owner.__renderTransform, 1);
                                        if (null == f || vc.maskRender) {
                                            var B = vc.maskRender ? b.__maskShader : b.__initGraphicsShader(null);
                                            b.setShader(B);
                                            b.applyMatrix(t);
                                            b.applyBitmapData(h, m, k);
                                            b.applyAlpha(a.__owner.__worldAlpha);
                                            b.applyColorTransform(a.__owner.__worldColorTransform);
                                            b.updateShader()
                                        } else B = b.__initShaderBuffer(f), b.__setShaderBuffer(f), b.applyMatrix(t), b.applyBitmapData(h, !1, k), b.applyAlpha(1), b.applyColorTransform(null), b.__updateShaderBuffer(n);
                                        null != B.__position && d.setVertexBufferAt(B.__position.index, D, Ka, q ? 4 : 2);
                                        null != B.__textureCoord && d.setVertexBufferAt(B.__textureCoord.index, D, Ka + y, 2);
                                        switch (v) {
                                            case 0:
                                                d.setCulling(0);
                                                break;
                                            case 1:
                                                d.setCulling(3);
                                                break;
                                            case 2:
                                                d.setCulling(1)
                                        }
                                        d.__drawTriangles(0, w);
                                        n += w;
                                        q ? x += L * w : p += L * w;
                                        switch (v) {
                                            case 1:
                                            case 2:
                                                d.setCulling(0)
                                        }
                                        b.__clearShader();
                                        break;
                                    case 13:
                                        f = g = h = null;
                                        c.skip(v);
                                        break;
                                    case 18:
                                        v = c.readMoveTo();
                                        v["float"](0);
                                        v["float"](1);
                                        break;
                                    case 19:
                                        v = c.readOverrideBlendMode();
                                        b.__setBlendMode(v.obj(0));
                                        break;
                                    default:
                                        c.skip(v)
                                }
                            }
                            Ya.__pool.release(e)
                        }
                        a.__hardwareDirty = !1;
                        a.set___dirty(!1)
                    }
            };
            vc.renderMask = function(a, b) {
                vc.maskRender = !0;
                vc.render(a, b);
                vc.maskRender = !1
            };
            vc.resizeVertexBuffer = function(a, b, c) {
                var d = b ? a.__vertexBufferDataUVT : a.__vertexBufferData,
                    e = null;
                null == d ? e = null != c ? new jg(c) : null : c > d.length && (e = null != c ? new jg(c) : null, e.set(d));
                null != e && (b ? a.__vertexBufferDataUVT = e : a.__vertexBufferData = e)
            };
            var Dl = function() {
                null == this.__glFragmentSource && (this.__glFragmentSource = "varying vec2 openfl_TextureCoordv;\n\n\t\tuniform sampler2D openfl_Texture;\n\n\t\tvoid main(void) {\n\n\t\t\tvec4 color = texture2D (openfl_Texture, openfl_TextureCoordv);\n\n\t\t\tif (color.a == 0.0) {\n\n\t\t\t\tdiscard;\n\n\t\t\t} else {\n\n\t\t\t\tgl_FragColor = color;\n\n\t\t\t}\n\n\t\t}");
                null == this.__glVertexSource && (this.__glVertexSource = "attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}");
                Uf.call(this);
                this.__isGenerated = !0;
                this.__initGL()
            };
            g["openfl.display._internal.Context3DMaskShader"] = Dl;
            Dl.__name__ = ["openfl", "display", "_internal", "Context3DMaskShader"];
            Dl.__super__ = Uf;
            Dl.prototype = p(Uf.prototype, {
                openfl_Position: null,
                openfl_TextureCoord: null,
                openfl_Matrix: null,
                openfl_Texture: null,
                __class__: Dl
            });
            var Fk = function() {};
            g["openfl.display._internal.Context3DShape"] = Fk;
            Fk.__name__ = ["openfl", "display", "_internal", "Context3DShape"];
            Fk.render = function(a, b) {
                if (a.__renderable && !(0 >= a.__worldAlpha)) {
                    var c = a.__graphics;
                    if (null != c) {
                        b.__setBlendMode(a.__worldBlendMode);
                        b.__pushMaskObject(a);
                        vc.render(c, b);
                        if (null != c.__bitmap && c.__visible) {
                            var d = b.__context3D,
                                e =
                                b.__initDisplayShader(a.__worldShader);
                            b.setShader(e);
                            b.applyBitmapData(c.__bitmap, !0);
                            b.applyMatrix(b.__getMatrix(c.__worldTransform, 1));
                            b.applyAlpha(a.__worldAlpha);
                            b.applyColorTransform(a.__worldColorTransform);
                            b.updateShader();
                            var f = c.__bitmap.getVertexBuffer(d);
                            null != e.__position && d.setVertexBufferAt(e.__position.index, f, 0, 3);
                            null != e.__textureCoord && d.setVertexBufferAt(e.__textureCoord.index, f, 3, 2);
                            c = c.__bitmap.getIndexBuffer(d);
                            d.drawTriangles(c);
                            b.__clearShader()
                        }
                        b.__popMaskObject(a)
                    }
                }
            };
            Fk.renderMask =
                function(a, b) {
                    var c = a.__graphics;
                    if (null != c && (vc.renderMask(c, b), null != c.__bitmap)) {
                        a = b.__context3D;
                        var d = b.__maskShader;
                        b.setShader(d);
                        b.applyBitmapData(c.__bitmap, !0);
                        b.applyMatrix(b.__getMatrix(c.__worldTransform, 1));
                        b.updateShader();
                        var e = c.__bitmap.getVertexBuffer(a);
                        null != d.__position && a.setVertexBufferAt(d.__position.index, e, 0, 3);
                        null != d.__textureCoord && a.setVertexBufferAt(d.__textureCoord.index, e, 3, 2);
                        c = c.__bitmap.getIndexBuffer(a);
                        a.drawTriangles(c);
                        b.__clearShader()
                    }
                };
            var Go = function() {};
            g["openfl.display._internal.Context3DTextField"] = Go;
            Go.__name__ = ["openfl", "display", "_internal", "Context3DTextField"];
            Go.render = function(a, b) {
                lb.render(a, b.__softwareRenderer, a.__worldTransform);
                a.__graphics.__hardwareDirty = !1
            };
            Go.renderMask = function(a, b) {
                lb.render(a, b.__softwareRenderer, a.__worldTransform);
                a.__graphics.__hardwareDirty = !1
            };
            var Hf = function() {};
            g["openfl.display._internal.DOMBitmap"] = Hf;
            Hf.__name__ = ["openfl", "display", "_internal", "DOMBitmap"];
            Hf.clear = function(a, b) {
                null != a.__image &&
                    (b.element.removeChild(a.__image), a.__image = null, a.__style = null);
                null != a.__canvas && (b.element.removeChild(a.__canvas), a.__canvas = null, a.__style = null)
            };
            Hf.render = function(a, b) {
                null != a.stage && a.__worldVisible && a.__renderable && null != a.__bitmapData && a.__bitmapData.__isValid && a.__bitmapData.readable ? (b.__pushMaskObject(a), null != a.__bitmapData.image.buffer.__srcImage ? Hf.renderImage(a, b) : Hf.renderCanvas(a, b), b.__popMaskObject(a)) : Hf.clear(a, b)
            };
            Hf.renderCanvas = function(a, b) {
                null != a.__image && (b.element.removeChild(a.__image),
                    a.__image = null);
                null == a.__canvas && (a.__canvas = La.get_document().createElement("canvas"), a.__context = a.__canvas.getContext("2d"), a.__imageVersion = -1, b.__allowSmoothing && a.smoothing || (a.__context.imageSmoothingEnabled = !1), b.__initializeElement(a, a.__canvas));
                a.__imageVersion != a.__bitmapData.image.version && (Ua.convertToCanvas(a.__bitmapData.image), a.__canvas.width = a.__bitmapData.width + 1, a.__canvas.width = a.__bitmapData.width, a.__canvas.height = a.__bitmapData.height, a.__context.drawImage(a.__bitmapData.image.buffer.__srcCanvas,
                    0, 0), a.__imageVersion = a.__bitmapData.image.version);
                b.__updateClip(a);
                b.__applyStyle(a, !0, !0, !0)
            };
            Hf.renderImage = function(a, b) {
                null != a.__canvas && (b.element.removeChild(a.__canvas), a.__canvas = null);
                null == a.__image && (a.__image = La.get_document().createElement("img"), a.__image.crossOrigin = "Anonymous", a.__image.src = a.__bitmapData.image.buffer.__srcImage.src, b.__initializeElement(a, a.__image));
                b.__updateClip(a);
                b.__applyStyle(a, !0, !0, !0)
            };
            var Ek = function() {};
            g["openfl.display._internal.DOMDisplayObject"] =
                Ek;
            Ek.__name__ = ["openfl", "display", "_internal", "DOMDisplayObject"];
            Ek.clear = function(a, b) {
                null != a.__cacheBitmap && Hf.clear(a.__cacheBitmap, b);
                vk.clear(a, b)
            };
            Ek.render = function(a, b) {
                null != a.opaqueBackground && !a.__isCacheBitmapRender && 0 < a.get_width() && a.get_height();
                vk.render(a, b)
            };
            var vk = function() {};
            g["openfl.display._internal.DOMShape"] = vk;
            vk.__name__ = ["openfl", "display", "_internal", "DOMShape"];
            vk.clear = function(a, b) {
                null != a.__canvas && (b.element.removeChild(a.__canvas), a.__canvas = null, a.__style = null)
            };
            vk.render = function(a, b) {
                var c = a.__graphics;
                if (null != a.stage && a.__worldVisible && a.__renderable && null != c) {
                    A.render(c, b.__canvasRenderer);
                    if (c.__softwareDirty || a.__worldAlphaChanged || a.__canvas != c.__canvas) null != c.__canvas ? a.__canvas != c.__canvas && (null != a.__canvas && b.element.removeChild(a.__canvas), a.__canvas = c.__canvas, a.__context = c.__context, b.__initializeElement(a, a.__canvas)) : vk.clear(a, b);
                    if (null != a.__canvas) {
                        b.__pushMaskObject(a);
                        var d = a.__renderTransform;
                        a.__renderTransform = c.__worldTransform;
                        c.__transformDirty && (c.__transformDirty = !1, a.__renderTransformChanged = !0);
                        b.__updateClip(a);
                        b.__applyStyle(a, !0, !0, !0);
                        a.__renderTransform = d;
                        b.__popMaskObject(a)
                    }
                } else vk.clear(a, b)
            };
            var Xc = function() {};
            g["openfl.display._internal.DOMTextField"] = Xc;
            Xc.__name__ = ["openfl", "display", "_internal", "DOMTextField"];
            Xc.clear = function(a, b) {
                null != a.__div && (b.element.removeChild(a.__div), a.__div = null, a.__style = null)
            };
            Xc.render = function(a, b) {
                var c = a.__textEngine;
                if (null != a.stage && a.__worldVisible && a.__renderable) {
                    if (a.__dirty ||
                        a.__renderTransformChanged || null == a.__div)
                        if ("" != c.text || c.background || c.border || 1 == c.type) {
                            null == a.__div && (a.__div = La.get_document().createElement("div"), b.__initializeElement(a, a.__div), a.__style.setProperty("outline", "none", null), a.__div.addEventListener("input", function(b) {
                                b.preventDefault();
                                a.get_htmlText() != a.__div.innerHTML && (a.set_htmlText(a.__div.innerHTML), a.__dirty = !1, b = a.get_htmlText(), a.dispatchEvent(new ii("textInput", !1, !1, b)))
                            }, !0));
                            c.wordWrap ? a.__style.setProperty("word-wrap", "break-word",
                                null) : a.__style.setProperty("white-space", "nowrap", null);
                            a.__style.setProperty("overflow", "hidden", null);
                            c.selectable ? (a.__style.setProperty("cursor", "text", null), a.__style.setProperty("-webkit-user-select", "text", null), a.__style.setProperty("-moz-user-select", "text", null), a.__style.setProperty("-ms-user-select", "text", null), a.__style.setProperty("-o-user-select", "text", null)) : a.__style.setProperty("cursor", "inherit", null);
                            a.__div.contentEditable = 1 == c.type;
                            var d = a.__style;
                            c.background ? d.setProperty("background-color",
                                "#" + ka.hex(c.backgroundColor & 16777215, 6), null) : d.removeProperty("background-color");
                            var e = c.width,
                                f = c.height,
                                h = 1,
                                k = a.__textFormat.size,
                                m = k,
                                g = a.__renderTransform;
                            if (1 != g.a || 1 != g.d) g.a == g.d ? (h = g.a, g.a = g.d = 1) : g.a > g.d ? (h = g.a, g.d /= g.a, g.a = 1) : (h = g.d, g.a /= g.d, g.d = 1), m *= h, e = Math.ceil(e * h), f = Math.ceil(f * h);
                            a.__textFormat.size = m;
                            g = c.text;
                            var l = 0;
                            if (a.__isHTML) {
                                for (var n = g; Xc.__regexFont.match(n);) {
                                    n = Xc.__regexFont.matched(0);
                                    var p = "";
                                    Xc.__regexFace.match(n) && (p += "font-family:'" + Xc.__getAttributeMatch(Xc.__regexFace) +
                                        "';");
                                    Xc.__regexColor.match(n) && (p += "color:#" + Xc.__getAttributeMatch(Xc.__regexColor) + ";");
                                    if (Xc.__regexSize.match(n)) {
                                        l = Xc.__getAttributeMatch(Xc.__regexSize);
                                        var x = la.cca(l, 0);
                                        l = E.parseFloat(l) * h;
                                        p += "font-size:" + (43 == x || 45 == x ? m + l : l) + "px;"
                                    }
                                    g = ka.replace(g, n, "<span style='" + p + "'>");
                                    n = Xc.__regexFont.matchedRight()
                                }
                                g = Xc.__regexCloseFont.replace(g, "</span>")
                            } else g = ka.htmlEscape(g);
                            g = ka.replace(g, "<p ", "<p style='margin-top:0; margin-bottom:0;' ");
                            h = a.__textFormat.leading;
                            a.__textFormat.leading += E["int"](l);
                            a.__div.innerHTML = (new Ga("\r\n", "g")).replace(g, "<br>");
                            a.__div.innerHTML = (new Ga("\n", "g")).replace(a.__div.innerHTML, "<br>");
                            a.__div.innerHTML = (new Ga("\r", "g")).replace(a.__div.innerHTML, "<br>");
                            d.setProperty("font", uc.getFont(a.__textFormat), null);
                            a.__textFormat.size = k;
                            a.__textFormat.leading = h;
                            d.setProperty("top", "3px", null);
                            c.border ? (d.setProperty("border", "solid 1px #" + ka.hex(c.borderColor & 16777215, 6), null), a.__renderTransform.translate(-1, -1), a.__renderTransformChanged = !0, a.__transformDirty = !0) : "" != d.border && (d.removeProperty("border"), a.__renderTransformChanged = !0);
                            d.setProperty("color", "#" + ka.hex(a.__textFormat.color & 16777215, 6), null);
                            d.setProperty("width", e + "px", null);
                            d.setProperty("height", f + "px", null);
                            switch (a.__textFormat.align) {
                                case 0:
                                    d.setProperty("text-align", "center", null);
                                    break;
                                case 4:
                                    d.setProperty("text-align", "right", null);
                                    break;
                                default:
                                    d.setProperty("text-align", "left", null)
                            }
                            a.__dirty = !1
                        } else null != a.__div && (b.element.removeChild(a.__div), a.__div = null);
                    null != a.__div && (c =
                        b.__roundPixels, b.__roundPixels = !0, b.__updateClip(a), b.__applyStyle(a, !0, !0, !0), b.__roundPixels = c)
                } else Xc.clear(a, b)
            };
            Xc.__getAttributeMatch = function(a) {
                return null != a.matched(2) ? a.matched(2) : a.matched(3)
            };
            var Vg = function(a) {
                this.buffer = a;
                this.bPos = this.iPos = this.fPos = this.oPos = this.ffPos = this.iiPos = this.tsPos = 0;
                this.prev = ha.UNKNOWN
            };
            g["openfl.display._internal.DrawCommandReader"] = Vg;
            Vg.__name__ = ["openfl", "display", "_internal", "DrawCommandReader"];
            Vg.prototype = {
                buffer: null,
                bPos: null,
                iiPos: null,
                iPos: null,
                ffPos: null,
                fPos: null,
                oPos: null,
                prev: null,
                tsPos: null,
                advance: function() {
                    switch (Q.enumIndex(this.prev)) {
                        case 0:
                            this.oPos += 2;
                            this.bPos += 2;
                            break;
                        case 1:
                            this.iPos += 1;
                            this.fPos += 1;
                            break;
                        case 2:
                            this.oPos += 4;
                            this.iiPos += 2;
                            this.ffPos += 1;
                            this.fPos += 1;
                            break;
                        case 3:
                            this.oPos += 1;
                            break;
                        case 4:
                            this.fPos += 6;
                            break;
                        case 5:
                            this.fPos += 4;
                            break;
                        case 6:
                            this.fPos += 3;
                            break;
                        case 7:
                            this.fPos += 4;
                            break;
                        case 8:
                            this.oPos += 3;
                            break;
                        case 9:
                            this.fPos += 4;
                            break;
                        case 10:
                            this.fPos += 5;
                            this.oPos += 1;
                            break;
                        case 12:
                            this.oPos += 4;
                            break;
                        case 14:
                            this.oPos +=
                                2;
                            this.bPos += 2;
                            break;
                        case 15:
                            this.oPos += 4;
                            this.iiPos += 2;
                            this.ffPos += 1;
                            this.fPos += 1;
                            break;
                        case 16:
                            this.oPos += 4;
                            this.iPos += 1;
                            this.fPos += 2;
                            this.bPos += 1;
                            break;
                        case 17:
                            this.fPos += 2;
                            break;
                        case 18:
                            this.fPos += 2;
                            break;
                        case 19:
                            this.oPos += 1;
                            break;
                        case 20:
                            this.oPos += 1
                    }
                },
                bool: function(a) {
                    return this.buffer.b[this.bPos + a]
                },
                destroy: function() {
                    this.buffer = null;
                    this.reset()
                },
                fArr: function(a) {
                    return this.buffer.ff[this.ffPos + a]
                },
                "float": function(a) {
                    return this.buffer.f[this.fPos + a]
                },
                iArr: function(a) {
                    return this.buffer.ii[this.iiPos +
                        a]
                },
                "int": function(a) {
                    return this.buffer.i[this.iPos + a]
                },
                obj: function(a) {
                    return this.buffer.o[this.oPos + a]
                },
                readBeginBitmapFill: function() {
                    this.advance();
                    this.prev = ha.BEGIN_BITMAP_FILL;
                    return this
                },
                readBeginFill: function() {
                    this.advance();
                    this.prev = ha.BEGIN_FILL;
                    return this
                },
                readBeginGradientFill: function() {
                    this.advance();
                    this.prev = ha.BEGIN_GRADIENT_FILL;
                    return this
                },
                readBeginShaderFill: function() {
                    this.advance();
                    this.prev = ha.BEGIN_SHADER_FILL;
                    return this
                },
                readCubicCurveTo: function() {
                    this.advance();
                    this.prev = ha.CUBIC_CURVE_TO;
                    return this
                },
                readCurveTo: function() {
                    this.advance();
                    this.prev = ha.CURVE_TO;
                    return this
                },
                readDrawCircle: function() {
                    this.advance();
                    this.prev = ha.DRAW_CIRCLE;
                    return this
                },
                readDrawEllipse: function() {
                    this.advance();
                    this.prev = ha.DRAW_ELLIPSE;
                    return this
                },
                readDrawQuads: function() {
                    this.advance();
                    this.prev = ha.DRAW_QUADS;
                    return this
                },
                readDrawRect: function() {
                    this.advance();
                    this.prev = ha.DRAW_RECT;
                    return this
                },
                readDrawRoundRect: function() {
                    this.advance();
                    this.prev = ha.DRAW_ROUND_RECT;
                    return this
                },
                readDrawTriangles: function() {
                    this.advance();
                    this.prev = ha.DRAW_TRIANGLES;
                    return this
                },
                readEndFill: function() {
                    this.advance();
                    this.prev = ha.END_FILL;
                    return this
                },
                readLineBitmapStyle: function() {
                    this.advance();
                    this.prev = ha.LINE_BITMAP_STYLE;
                    return this
                },
                readLineGradientStyle: function() {
                    this.advance();
                    this.prev = ha.LINE_GRADIENT_STYLE;
                    return this
                },
                readLineStyle: function() {
                    this.advance();
                    this.prev = ha.LINE_STYLE;
                    return this
                },
                readLineTo: function() {
                    this.advance();
                    this.prev = ha.LINE_TO;
                    return this
                },
                readMoveTo: function() {
                    this.advance();
                    this.prev = ha.MOVE_TO;
                    return this
                },
                readOverrideBlendMode: function() {
                    this.advance();
                    this.prev = ha.OVERRIDE_BLEND_MODE;
                    return this
                },
                readOverrideMatrix: function() {
                    this.advance();
                    this.prev = ha.OVERRIDE_MATRIX;
                    return this
                },
                readWindingEvenOdd: function() {
                    this.advance();
                    this.prev = ha.WINDING_EVEN_ODD;
                    return this
                },
                readWindingNonZero: function() {
                    this.advance();
                    this.prev = ha.WINDING_NON_ZERO;
                    return this
                },
                reset: function() {
                    this.bPos = this.iPos = this.fPos = this.oPos = this.ffPos = this.iiPos = this.tsPos = 0
                },
                skip: function(a) {
                    this.advance();
                    this.prev = a
                },
                __class__: Vg
            };
            var ha = g["openfl.display._internal.DrawCommandType"] = {
                __ename__: ["openfl", "display", "_internal", "DrawCommandType"],
                __constructs__: "BEGIN_BITMAP_FILL BEGIN_FILL BEGIN_GRADIENT_FILL BEGIN_SHADER_FILL CUBIC_CURVE_TO CURVE_TO DRAW_CIRCLE DRAW_ELLIPSE DRAW_QUADS DRAW_RECT DRAW_ROUND_RECT DRAW_TILES DRAW_TRIANGLES END_FILL LINE_BITMAP_STYLE LINE_GRADIENT_STYLE LINE_STYLE LINE_TO MOVE_TO OVERRIDE_BLEND_MODE OVERRIDE_MATRIX WINDING_EVEN_ODD WINDING_NON_ZERO UNKNOWN".split(" ")
            };
            ha.BEGIN_BITMAP_FILL = ["BEGIN_BITMAP_FILL", 0];
            ha.BEGIN_BITMAP_FILL.toString = l;
            ha.BEGIN_BITMAP_FILL.__enum__ = ha;
            ha.BEGIN_FILL = ["BEGIN_FILL", 1];
            ha.BEGIN_FILL.toString = l;
            ha.BEGIN_FILL.__enum__ = ha;
            ha.BEGIN_GRADIENT_FILL = ["BEGIN_GRADIENT_FILL", 2];
            ha.BEGIN_GRADIENT_FILL.toString = l;
            ha.BEGIN_GRADIENT_FILL.__enum__ = ha;
            ha.BEGIN_SHADER_FILL = ["BEGIN_SHADER_FILL", 3];
            ha.BEGIN_SHADER_FILL.toString = l;
            ha.BEGIN_SHADER_FILL.__enum__ = ha;
            ha.CUBIC_CURVE_TO = ["CUBIC_CURVE_TO", 4];
            ha.CUBIC_CURVE_TO.toString = l;
            ha.CUBIC_CURVE_TO.__enum__ =
                ha;
            ha.CURVE_TO = ["CURVE_TO", 5];
            ha.CURVE_TO.toString = l;
            ha.CURVE_TO.__enum__ = ha;
            ha.DRAW_CIRCLE = ["DRAW_CIRCLE", 6];
            ha.DRAW_CIRCLE.toString = l;
            ha.DRAW_CIRCLE.__enum__ = ha;
            ha.DRAW_ELLIPSE = ["DRAW_ELLIPSE", 7];
            ha.DRAW_ELLIPSE.toString = l;
            ha.DRAW_ELLIPSE.__enum__ = ha;
            ha.DRAW_QUADS = ["DRAW_QUADS", 8];
            ha.DRAW_QUADS.toString = l;
            ha.DRAW_QUADS.__enum__ = ha;
            ha.DRAW_RECT = ["DRAW_RECT", 9];
            ha.DRAW_RECT.toString = l;
            ha.DRAW_RECT.__enum__ = ha;
            ha.DRAW_ROUND_RECT = ["DRAW_ROUND_RECT", 10];
            ha.DRAW_ROUND_RECT.toString = l;
            ha.DRAW_ROUND_RECT.__enum__ =
                ha;
            ha.DRAW_TILES = ["DRAW_TILES", 11];
            ha.DRAW_TILES.toString = l;
            ha.DRAW_TILES.__enum__ = ha;
            ha.DRAW_TRIANGLES = ["DRAW_TRIANGLES", 12];
            ha.DRAW_TRIANGLES.toString = l;
            ha.DRAW_TRIANGLES.__enum__ = ha;
            ha.END_FILL = ["END_FILL", 13];
            ha.END_FILL.toString = l;
            ha.END_FILL.__enum__ = ha;
            ha.LINE_BITMAP_STYLE = ["LINE_BITMAP_STYLE", 14];
            ha.LINE_BITMAP_STYLE.toString = l;
            ha.LINE_BITMAP_STYLE.__enum__ = ha;
            ha.LINE_GRADIENT_STYLE = ["LINE_GRADIENT_STYLE", 15];
            ha.LINE_GRADIENT_STYLE.toString = l;
            ha.LINE_GRADIENT_STYLE.__enum__ = ha;
            ha.LINE_STYLE = ["LINE_STYLE", 16];
            ha.LINE_STYLE.toString = l;
            ha.LINE_STYLE.__enum__ = ha;
            ha.LINE_TO = ["LINE_TO", 17];
            ha.LINE_TO.toString = l;
            ha.LINE_TO.__enum__ = ha;
            ha.MOVE_TO = ["MOVE_TO", 18];
            ha.MOVE_TO.toString = l;
            ha.MOVE_TO.__enum__ = ha;
            ha.OVERRIDE_BLEND_MODE = ["OVERRIDE_BLEND_MODE", 19];
            ha.OVERRIDE_BLEND_MODE.toString = l;
            ha.OVERRIDE_BLEND_MODE.__enum__ = ha;
            ha.OVERRIDE_MATRIX = ["OVERRIDE_MATRIX", 20];
            ha.OVERRIDE_MATRIX.toString = l;
            ha.OVERRIDE_MATRIX.__enum__ = ha;
            ha.WINDING_EVEN_ODD = ["WINDING_EVEN_ODD", 21];
            ha.WINDING_EVEN_ODD.toString =
                l;
            ha.WINDING_EVEN_ODD.__enum__ = ha;
            ha.WINDING_NON_ZERO = ["WINDING_NON_ZERO", 22];
            ha.WINDING_NON_ZERO.toString = l;
            ha.WINDING_NON_ZERO.__enum__ = ha;
            ha.UNKNOWN = ["UNKNOWN", 23];
            ha.UNKNOWN.toString = l;
            ha.UNKNOWN.__enum__ = ha;
            var wk = function(a, b, c, d, e, f, h) {
                null == h && (h = !1);
                null == f && (f = !1);
                null == e && (e = !1);
                null == d && (d = 0);
                null == c && (c = 2);
                null == b && (b = 5);
                null == a && (a = 0);
                this.wrap = a;
                this.filter = b;
                this.mipfilter = c;
                this.lodBias = d;
                this.ignoreSampler = e;
                this.centroid = f;
                this.textureAlpha = h
            };
            g["openfl.display._internal.SamplerState"] =
                wk;
            wk.__name__ = ["openfl", "display", "_internal", "SamplerState"];
            wk.prototype = {
                centroid: null,
                filter: null,
                ignoreSampler: null,
                lodBias: null,
                mipfilter: null,
                mipmapGenerated: null,
                textureAlpha: null,
                wrap: null,
                clone: function() {
                    var a = new wk(this.wrap, this.filter, this.mipfilter, this.lodBias, this.ignoreSampler, this.centroid, this.textureAlpha);
                    a.mipmapGenerated = this.mipmapGenerated;
                    return a
                },
                copyFrom: function(a) {
                    null == a || a.ignoreSampler || (this.wrap = a.wrap, this.filter = a.filter, this.mipfilter = a.mipfilter, this.lodBias =
                        a.lodBias, this.centroid = a.centroid, this.textureAlpha = a.textureAlpha)
                },
                equals: function(a) {
                    return null == a ? !1 : this.wrap == a.wrap && this.filter == a.filter && this.mipfilter == a.mipfilter && this.lodBias == a.lodBias ? this.textureAlpha == a.textureAlpha : !1
                },
                __class__: wk
            };
            var ur = function() {
                this.inputRefs = [];
                this.inputFilter = [];
                this.inputMipFilter = [];
                this.inputs = [];
                this.inputWrap = [];
                this.overrideIntNames = [];
                this.overrideIntValues = [];
                this.overrideFloatNames = [];
                this.overrideFloatValues = [];
                this.overrideBoolNames = [];
                this.overrideBoolValues = [];
                this.paramLengths = [];
                this.paramPositions = [];
                this.paramRefs_Bool = [];
                this.paramRefs_Float = [];
                this.paramRefs_Int = [];
                this.paramTypes = []
            };
            g["openfl.display._internal.ShaderBuffer"] = ur;
            ur.__name__ = ["openfl", "display", "_internal", "ShaderBuffer"];
            ur.prototype = {
                inputCount: null,
                inputRefs: null,
                inputFilter: null,
                inputMipFilter: null,
                inputs: null,
                inputWrap: null,
                overrideBoolCount: null,
                overrideBoolNames: null,
                overrideBoolValues: null,
                overrideFloatCount: null,
                overrideFloatNames: null,
                overrideFloatValues: null,
                overrideIntCount: null,
                overrideIntNames: null,
                overrideIntValues: null,
                paramBoolCount: null,
                paramCount: null,
                paramData: null,
                paramDataBuffer: null,
                paramDataLength: null,
                paramFloatCount: null,
                paramLengths: null,
                paramPositions: null,
                paramRefs_Bool: null,
                paramRefs_Float: null,
                paramRefs_Int: null,
                paramTypes: null,
                shader: null,
                addBoolOverride: function(a, b) {
                    this.overrideBoolNames[this.overrideBoolCount] = a;
                    this.overrideBoolValues[this.overrideBoolCount] = b;
                    this.overrideBoolCount++
                },
                addFloatOverride: function(a, b) {
                    this.overrideFloatNames[this.overrideFloatCount] =
                        a;
                    this.overrideFloatValues[this.overrideFloatCount] = b;
                    this.overrideFloatCount++
                },
                clearOverride: function() {
                    this.overrideBoolCount = this.overrideFloatCount = this.overrideIntCount = 0
                },
                __class__: ur
            };
            var Hb = function(a, b, c) {
                this.driverInfo = "OpenGL (Direct blitting)";
                this.backBufferHeight = this.backBufferWidth = 0;
                bb.call(this);
                this.__stage = a;
                this.__contextState = b;
                this.__stage3D = c;
                this.__context = a.window.context;
                this.gl = this.__context.webgl;
                null == this.__contextState && (this.__contextState = new Ho);
                this.__state =
                    new Ho;
                this.__vertexConstants = new jg(512);
                this.__fragmentConstants = new jg(512);
                a = [1, 1, 1, 1];
                this.__positionScale = null != a ? new jg(a) : null;
                this.__programs = new fb; - 1 == Hb.__glMaxViewportDims && (Hb.__glMaxViewportDims = this.gl.getParameter(this.gl.MAX_VIEWPORT_DIMS));
                this.maxBackBufferHeight = this.maxBackBufferWidth = Hb.__glMaxViewportDims; - 1 == Hb.__glMaxTextureMaxAnisotropy && (a = this.gl.getExtension("EXT_texture_filter_anisotropic"), null != a && T.hasField(a, "MAX_TEXTURE_MAX_ANISOTROPY_EXT") || (a = this.gl.getExtension("MOZ_EXT_texture_filter_anisotropic")),
                    null != a && T.hasField(a, "MAX_TEXTURE_MAX_ANISOTROPY_EXT") || (a = this.gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic")), null != a ? (Hb.__glTextureMaxAnisotropy = a.TEXTURE_MAX_ANISOTROPY_EXT, Hb.__glMaxTextureMaxAnisotropy = this.gl.getParameter(a.MAX_TEXTURE_MAX_ANISOTROPY_EXT)) : (Hb.__glTextureMaxAnisotropy = 0, Hb.__glMaxTextureMaxAnisotropy = 0)); - 1 == Hb.__glDepthStencil && (Hb.__glDepthStencil = this.gl.DEPTH_STENCIL); - 1 == Hb.__glMemoryTotalAvailable && (a = this.gl.getExtension("NVX_gpu_memory_info"), null != a && (Hb.__glMemoryTotalAvailable =
                    a.GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX, Hb.__glMemoryCurrentAvailable = a.GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX));
                if (null == Hb.__driverInfo) {
                    a = this.gl.getParameter(this.gl.VENDOR);
                    b = this.gl.getParameter(this.gl.VERSION);
                    c = this.gl.getParameter(this.gl.RENDERER);
                    var d = this.gl.getParameter(this.gl.SHADING_LANGUAGE_VERSION);
                    Hb.__driverInfo = "OpenGL Vendor=" + a + " Version=" + b + " Renderer=" + c + " GLSL=" + d
                }
                this.driverInfo = Hb.__driverInfo;
                this.__quadIndexBufferElements = 16383;
                a = this.__quadIndexBufferCount = 6 *
                    this.__quadIndexBufferElements;
                a = null != a ? new Uint16Array(a) : null;
                d = c = b = 0;
                for (var e = this.__quadIndexBufferElements; d < e;) d++, a[b] = c, a[b + 1] = c + 1, a[b + 2] = c + 2, a[b + 3] = c + 2, a[b + 4] = c + 1, a[b + 5] = c + 3, b += 6, c += 4;
                this.__quadIndexBuffer = this.createIndexBuffer(this.__quadIndexBufferCount);
                this.__quadIndexBuffer.uploadFromTypedArray(a)
            };
            g["openfl.display3D.Context3D"] = Hb;
            Hb.__name__ = ["openfl", "display3D", "Context3D"];
            Hb.__super__ = bb;
            Hb.prototype = p(bb.prototype, {
                backBufferHeight: null,
                backBufferWidth: null,
                driverInfo: null,
                maxBackBufferHeight: null,
                maxBackBufferWidth: null,
                gl: null,
                __backBufferAntiAlias: null,
                __backBufferTexture: null,
                __backBufferWantsBestResolution: null,
                __backBufferWantsBestResolutionOnBrowserZoom: null,
                __cleared: null,
                __context: null,
                __contextState: null,
                __renderStage3DProgram: null,
                __enableErrorChecking: null,
                __fragmentConstants: null,
                __frontBufferTexture: null,
                __positionScale: null,
                __present: null,
                __programs: null,
                __quadIndexBuffer: null,
                __quadIndexBufferCount: null,
                __quadIndexBufferElements: null,
                __stage: null,
                __stage3D: null,
                __state: null,
                __vertexConstants: null,
                clear: function(a, b, c, d, e, f, h) {
                    null == h && (h = 7);
                    null == f && (f = 0);
                    null == e && (e = 1);
                    null == d && (d = 1);
                    null == c && (c = 0);
                    null == b && (b = 0);
                    null == a && (a = 0);
                    this.__flushGLFramebuffer();
                    this.__flushGLViewport();
                    var k = 0;
                    if (0 != (h & 1)) {
                        null == this.__state.renderToTexture && (this.__stage.context3D != this || this.__stage.__renderer.__cleared || (this.__stage.__renderer.__cleared = !0), this.__cleared = !0);
                        k |= this.gl.COLOR_BUFFER_BIT;
                        if (1 != this.__contextState.colorMaskRed || 1 != this.__contextState.colorMaskGreen ||
                            1 != this.__contextState.colorMaskBlue || 1 != this.__contextState.colorMaskAlpha) this.gl.colorMask(!0, !0, !0, !0), this.__contextState.colorMaskRed = !0, this.__contextState.colorMaskGreen = !0, this.__contextState.colorMaskBlue = !0, this.__contextState.colorMaskAlpha = !0;
                        this.gl.clearColor(a, b, c, d)
                    }
                    0 != (h & 2) && (k |= this.gl.DEPTH_BUFFER_BIT, 1 != this.__contextState.depthMask && (this.gl.depthMask(!0), this.__contextState.depthMask = !0), this.gl.clearDepth(e));
                    0 != (h & 4) && (k |= this.gl.STENCIL_BUFFER_BIT, 255 != this.__contextState.stencilWriteMask &&
                        (this.gl.stencilMask(255), this.__contextState.stencilWriteMask = 255), this.gl.clearStencil(f), this.__contextState.stencilWriteMask = 255);
                    0 != k && (this.__setGLScissorTest(!1), this.gl.clear(k))
                },
                configureBackBuffer: function(a, b, c, d, e, f) {
                    null == f && (f = !1);
                    null == e && (e = !1);
                    null == d && (d = !0);
                    if (null == this.__stage3D) this.backBufferWidth = a, this.backBufferHeight = b, this.__backBufferAntiAlias = c, this.__state.backBufferEnableDepthAndStencil = d, this.__backBufferWantsBestResolution = e, this.__backBufferWantsBestResolutionOnBrowserZoom =
                        f;
                    else {
                        if (null == this.__backBufferTexture || this.backBufferWidth != a || this.backBufferHeight != b) {
                            null != this.__backBufferTexture && this.__backBufferTexture.dispose();
                            null != this.__frontBufferTexture && this.__frontBufferTexture.dispose();
                            this.__backBufferTexture = this.createRectangleTexture(a, b, 1, !0);
                            this.__frontBufferTexture = this.createRectangleTexture(a, b, 1, !0);
                            null == this.__stage3D.__vertexBuffer && (this.__stage3D.__vertexBuffer = this.createVertexBuffer(4, 5));
                            var h = M.toFloatVector(null, null, null, [a, b, 0, 1, 1,
                                0, b, 0, 0, 1, a, 0, 0, 1, 0, 0, 0, 0, 0, 0
                            ]);
                            this.__stage3D.__vertexBuffer.uploadFromVector(h, 0, 20);
                            null == this.__stage3D.__indexBuffer && (this.__stage3D.__indexBuffer = this.createIndexBuffer(6), h = M.toIntVector(null, null, null, [0, 1, 2, 2, 1, 3]), this.__stage3D.__indexBuffer.uploadFromVector(h, 0, 6))
                        }
                        this.backBufferWidth = a;
                        this.backBufferHeight = b;
                        this.__backBufferAntiAlias = c;
                        this.__state.backBufferEnableDepthAndStencil = d;
                        this.__backBufferWantsBestResolution = e;
                        this.__backBufferWantsBestResolutionOnBrowserZoom = f;
                        this.__state.__primaryGLFramebuffer =
                            this.__backBufferTexture.__getGLFramebuffer(d, c, 0);
                        this.__frontBufferTexture.__getGLFramebuffer(d, c, 0)
                    }
                },
                createIndexBuffer: function(a, b) {
                    null == b && (b = 1);
                    return new bv(this, a, b)
                },
                createProgram: function(a) {
                    null == a && (a = 0);
                    return new cv(this, a)
                },
                createRectangleTexture: function(a, b, c, d) {
                    return new Io(this, a, b, xw.toString(c), d)
                },
                createVertexBuffer: function(a, b, c) {
                    null == c && (c = 1);
                    return new dv(this, a, b, Gr.toString(c))
                },
                drawTriangles: function(a, b, c) {
                    null == c && (c = -1);
                    null == b && (b = 0);
                    null == this.__state.renderToTexture &&
                        (this.__stage.context3D != this || this.__stage.__renderer.__cleared ? this.__cleared || this.clear(0, 0, 0, 0, 1, 0, 1) : this.__stage.__renderer.__clear());
                    this.__flushGL();
                    null != this.__state.program && this.__state.program.__flush();
                    c = -1 == c ? a.__numIndices : 3 * c;
                    this.__bindGLElementArrayBuffer(a.__id);
                    this.gl.drawElements(this.gl.TRIANGLES, c, this.gl.UNSIGNED_SHORT, 2 * b)
                },
                present: function() {
                    this.setRenderToBackBuffer();
                    if (null != this.__stage3D && null != this.__backBufferTexture) {
                        this.__cleared || this.clear(0, 0, 0, 0, 1, 0, 1);
                        var a = this.__backBufferTexture;
                        this.__backBufferTexture = this.__frontBufferTexture;
                        this.__frontBufferTexture = a;
                        this.__state.__primaryGLFramebuffer = this.__backBufferTexture.__getGLFramebuffer(this.__state.backBufferEnableDepthAndStencil, this.__backBufferAntiAlias, 0);
                        this.__cleared = !1
                    }
                    this.__present = !0
                },
                setBlendFactors: function(a, b) {
                    this.setBlendFactorsSeparate(a, b, a, b)
                },
                setBlendFactorsSeparate: function(a, b, c, d) {
                    this.__state.blendSourceRGBFactor = a;
                    this.__state.blendDestinationRGBFactor = b;
                    this.__state.blendSourceAlphaFactor =
                        c;
                    this.__state.blendDestinationAlphaFactor = d;
                    this.__setGLBlendEquation(this.gl.FUNC_ADD)
                },
                setColorMask: function(a, b, c, d) {
                    this.__state.colorMaskRed = a;
                    this.__state.colorMaskGreen = b;
                    this.__state.colorMaskBlue = c;
                    this.__state.colorMaskAlpha = d
                },
                setCulling: function(a) {
                    this.__state.culling = a
                },
                setDepthTest: function(a, b) {
                    this.__state.depthMask = a;
                    this.__state.depthCompareMode = b
                },
                setProgram: function(a) {
                    this.__state.program = a;
                    this.__state.shader = null;
                    if (null != a)
                        for (var b = 0, c = a.__samplerStates.length; b < c;) {
                            var d =
                                b++;
                            null == this.__state.samplerStates[d] ? this.__state.samplerStates[d] = a.__samplerStates[d].clone() : this.__state.samplerStates[d].copyFrom(a.__samplerStates[d])
                        }
                },
                setProgramConstantsFromMatrix: function(a, b, c, d) {
                    null == d && (d = !1);
                    if (null != this.__state.program && 1 == this.__state.program.__format) {
                        this.__flushGLProgram();
                        a = new jg(16);
                        for (var e = 0; 16 > e;) {
                            var f = e++;
                            a[f] = c.rawData.get(f)
                        }
                        Td.uniformMatrix4fv(this.gl, b, d, a)
                    } else e = (a = 1 == a) ? this.__vertexConstants : this.__fragmentConstants, c = c.rawData, f = 4 * b, d ? (e[f++] =
                            c.get(0), e[f++] = c.get(4), e[f++] = c.get(8), e[f++] = c.get(12), e[f++] = c.get(1), e[f++] = c.get(5), e[f++] = c.get(9), e[f++] = c.get(13), e[f++] = c.get(2), e[f++] = c.get(6), e[f++] = c.get(10), e[f++] = c.get(14), e[f++] = c.get(3), e[f++] = c.get(7), e[f++] = c.get(11)) : (e[f++] = c.get(0), e[f++] = c.get(1), e[f++] = c.get(2), e[f++] = c.get(3), e[f++] = c.get(4), e[f++] = c.get(5), e[f++] = c.get(6), e[f++] = c.get(7), e[f++] = c.get(8), e[f++] = c.get(9), e[f++] = c.get(10), e[f++] = c.get(11), e[f++] = c.get(12), e[f++] = c.get(13), e[f++] = c.get(14)), e[f++] = c.get(15),
                        null != this.__state.program && this.__state.program.__markDirty(a, b, 4)
                },
                setRenderToBackBuffer: function() {
                    this.__state.renderToTexture = null
                },
                setRenderToTexture: function(a, b, c, d) {
                    null == d && (d = 0);
                    null == c && (c = 0);
                    null == b && (b = !1);
                    this.__state.renderToTexture = a;
                    this.__state.renderToTextureDepthStencil = b;
                    this.__state.renderToTextureAntiAlias = c;
                    this.__state.renderToTextureSurfaceSelector = d
                },
                setSamplerStateAt: function(a, b, c, d) {
                    null == this.__state.samplerStates[a] && (this.__state.samplerStates[a] = new wk);
                    a = this.__state.samplerStates[a];
                    a.wrap = b;
                    a.filter = c;
                    a.mipfilter = d
                },
                setScissorRectangle: function(a) {
                    null != a ? (this.__state.scissorEnabled = !0, this.__state.scissorRectangle.copyFrom(a)) : this.__state.scissorEnabled = !1
                },
                setStencilActions: function(a, b, c, d, e) {
                    null == e && (e = 5);
                    null == d && (d = 5);
                    null == c && (c = 5);
                    null == b && (b = 0);
                    null == a && (a = 2);
                    this.__state.stencilTriangleFace = a;
                    this.__state.stencilCompareMode = b;
                    this.__state.stencilPass = c;
                    this.__state.stencilDepthFail = d;
                    this.__state.stencilFail = e
                },
                setStencilReferenceValue: function(a, b, c) {
                    null == c &&
                        (c = 255);
                    null == b && (b = 255);
                    this.__state.stencilReferenceValue = a;
                    this.__state.stencilReadMask = b;
                    this.__state.stencilWriteMask = c
                },
                setTextureAt: function(a, b) {
                    this.__state.textures[a] = b
                },
                setVertexBufferAt: function(a, b, c, d) {
                    null == d && (d = 4);
                    null == c && (c = 0);
                    if (null == b) this.gl.disableVertexAttribArray(a), this.__bindGLArrayBuffer(null);
                    else switch (this.__bindGLArrayBuffer(b.__id), this.gl.enableVertexAttribArray(a), c *= 4, d) {
                        case 0:
                            this.gl.vertexAttribPointer(a, 4, this.gl.UNSIGNED_BYTE, !0, b.__stride, c);
                            break;
                        case 1:
                            this.gl.vertexAttribPointer(a,
                                1, this.gl.FLOAT, !1, b.__stride, c);
                            break;
                        case 2:
                            this.gl.vertexAttribPointer(a, 2, this.gl.FLOAT, !1, b.__stride, c);
                            break;
                        case 3:
                            this.gl.vertexAttribPointer(a, 3, this.gl.FLOAT, !1, b.__stride, c);
                            break;
                        case 4:
                            this.gl.vertexAttribPointer(a, 4, this.gl.FLOAT, !1, b.__stride, c);
                            break;
                        default:
                            throw new Z(new ue);
                    }
                },
                __bindGLArrayBuffer: function(a) {
                    this.__contextState.__currentGLArrayBuffer != a && (this.gl.bindBuffer(this.gl.ARRAY_BUFFER, a), this.__contextState.__currentGLArrayBuffer = a)
                },
                __bindGLElementArrayBuffer: function(a) {
                    this.__contextState.__currentGLElementArrayBuffer !=
                        a && (this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, a), this.__contextState.__currentGLElementArrayBuffer = a)
                },
                __bindGLFramebuffer: function(a) {
                    this.__contextState.__currentGLFramebuffer != a && (this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, a), this.__contextState.__currentGLFramebuffer = a)
                },
                __bindGLTexture2D: function(a) {
                    this.gl.bindTexture(this.gl.TEXTURE_2D, a);
                    this.__contextState.__currentGLTexture2D = a
                },
                __bindGLTextureCubeMap: function(a) {
                    this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, a);
                    this.__contextState.__currentGLTextureCubeMap =
                        a
                },
                __dispose: function() {
                    this.driverInfo += " (Disposed)";
                    null != this.__stage3D && (this.__stage3D.__indexBuffer = null, this.__stage3D.__vertexBuffer = null, this.__stage3D = this.__stage3D.context3D = null);
                    this.__positionScale = this.__frontBufferTexture = this.__fragmentConstants = this.__renderStage3DProgram = this.__context = this.__backBufferTexture = null;
                    this.__present = !1;
                    this.__vertexConstants = this.__stage = this.__quadIndexBuffer = null
                },
                __drawTriangles: function(a, b) {
                    null == a && (a = 0);
                    null == this.__state.renderToTexture &&
                        (this.__stage.context3D != this || this.__stage.__renderer.__cleared ? this.__cleared || this.clear(0, 0, 0, 0, 1, 0, 1) : this.__stage.__renderer.__clear());
                    this.__flushGL();
                    null != this.__state.program && this.__state.program.__flush();
                    this.gl.drawArrays(this.gl.TRIANGLES, a, b)
                },
                __flushGL: function() {
                    this.__flushGLProgram();
                    this.__flushGLFramebuffer();
                    this.__flushGLViewport();
                    this.__flushGLBlend();
                    this.__flushGLColor();
                    this.__flushGLCulling();
                    this.__flushGLDepth();
                    this.__flushGLScissor();
                    this.__flushGLStencil();
                    this.__flushGLTextures()
                },
                __flushGLBlend: function() {
                    if (this.__contextState.blendDestinationRGBFactor != this.__state.blendDestinationRGBFactor || this.__contextState.blendSourceRGBFactor != this.__state.blendSourceRGBFactor || this.__contextState.blendDestinationAlphaFactor != this.__state.blendDestinationAlphaFactor || this.__contextState.blendSourceAlphaFactor != this.__state.blendSourceAlphaFactor) this.__setGLBlend(!0), this.__state.blendDestinationRGBFactor == this.__state.blendDestinationAlphaFactor && this.__state.blendSourceRGBFactor ==
                        this.__state.blendSourceAlphaFactor ? this.gl.blendFunc(this.__getGLBlend(this.__state.blendSourceRGBFactor), this.__getGLBlend(this.__state.blendDestinationRGBFactor)) : this.gl.blendFuncSeparate(this.__getGLBlend(this.__state.blendSourceRGBFactor), this.__getGLBlend(this.__state.blendDestinationRGBFactor), this.__getGLBlend(this.__state.blendSourceAlphaFactor), this.__getGLBlend(this.__state.blendDestinationAlphaFactor)), this.__contextState.blendDestinationRGBFactor = this.__state.blendDestinationRGBFactor,
                        this.__contextState.blendSourceRGBFactor = this.__state.blendSourceRGBFactor, this.__contextState.blendDestinationAlphaFactor = this.__state.blendDestinationAlphaFactor, this.__contextState.blendSourceAlphaFactor = this.__state.blendSourceAlphaFactor
                },
                __flushGLColor: function() {
                    if (this.__contextState.colorMaskRed != this.__state.colorMaskRed || this.__contextState.colorMaskGreen != this.__state.colorMaskGreen || this.__contextState.colorMaskBlue != this.__state.colorMaskBlue || this.__contextState.colorMaskAlpha != this.__state.colorMaskAlpha) this.gl.colorMask(this.__state.colorMaskRed,
                        this.__state.colorMaskGreen, this.__state.colorMaskBlue, this.__state.colorMaskAlpha), this.__contextState.colorMaskRed = this.__state.colorMaskRed, this.__contextState.colorMaskGreen = this.__state.colorMaskGreen, this.__contextState.colorMaskBlue = this.__state.colorMaskBlue, this.__contextState.colorMaskAlpha = this.__state.colorMaskAlpha
                },
                __flushGLCulling: function() {
                    if (this.__contextState.culling != this.__state.culling) {
                        if (3 == this.__state.culling) this.__setGLCullFace(!1);
                        else switch (this.__setGLCullFace(!0),
                            this.__state.culling) {
                            case 0:
                                this.gl.cullFace(this.gl.BACK);
                                break;
                            case 1:
                                this.gl.cullFace(this.gl.FRONT);
                                break;
                            case 2:
                                this.gl.cullFace(this.gl.FRONT_AND_BACK);
                                break;
                            case 3:
                                break;
                            default:
                                throw new Z(new ue);
                        }
                        this.__contextState.culling = this.__state.culling
                    }
                },
                __flushGLDepth: function() {
                    var a = this.__state.depthMask && (null != this.__state.renderToTexture ? this.__state.renderToTextureDepthStencil : this.__state.backBufferEnableDepthAndStencil);
                    this.__contextState.depthMask != a && (this.gl.depthMask(a), this.__contextState.depthMask =
                        a);
                    if (this.__contextState.depthCompareMode != this.__state.depthCompareMode) {
                        switch (this.__state.depthCompareMode) {
                            case 0:
                                this.gl.depthFunc(this.gl.ALWAYS);
                                break;
                            case 1:
                                this.gl.depthFunc(this.gl.EQUAL);
                                break;
                            case 2:
                                this.gl.depthFunc(this.gl.GREATER);
                                break;
                            case 3:
                                this.gl.depthFunc(this.gl.GEQUAL);
                                break;
                            case 4:
                                this.gl.depthFunc(this.gl.LESS);
                                break;
                            case 5:
                                this.gl.depthFunc(this.gl.LEQUAL);
                                break;
                            case 6:
                                this.gl.depthFunc(this.gl.NEVER);
                                break;
                            case 7:
                                this.gl.depthFunc(this.gl.NOTEQUAL);
                                break;
                            default:
                                throw new Z(new ue);
                        }
                        this.__contextState.depthCompareMode = this.__state.depthCompareMode
                    }
                },
                __flushGLFramebuffer: function() {
                    if (null != this.__state.renderToTexture) {
                        if (this.__contextState.renderToTexture != this.__state.renderToTexture || this.__contextState.renderToTextureSurfaceSelector != this.__state.renderToTextureSurfaceSelector) {
                            var a = this.__state.renderToTexture.__getGLFramebuffer(this.__state.renderToTextureDepthStencil, this.__state.renderToTextureAntiAlias, this.__state.renderToTextureSurfaceSelector);
                            this.__bindGLFramebuffer(a);
                            this.__contextState.renderToTexture = this.__state.renderToTexture;
                            this.__contextState.renderToTextureAntiAlias = this.__state.renderToTextureAntiAlias;
                            this.__contextState.renderToTextureDepthStencil = this.__state.renderToTextureDepthStencil;
                            this.__contextState.renderToTextureSurfaceSelector = this.__state.renderToTextureSurfaceSelector
                        }
                        this.__setGLDepthTest(this.__state.renderToTextureDepthStencil);
                        this.__setGLStencilTest(this.__state.renderToTextureDepthStencil);
                        this.__setGLFrontFace(!0)
                    } else {
                        if (null ==
                            this.__stage && 0 == this.backBufferWidth && 0 == this.backBufferHeight) throw new Z(new Bd("Context3D backbuffer has not been configured"));
                        if (null != this.__contextState.renderToTexture || this.__contextState.__currentGLFramebuffer != this.__state.__primaryGLFramebuffer || this.__contextState.backBufferEnableDepthAndStencil != this.__state.backBufferEnableDepthAndStencil) this.__bindGLFramebuffer(this.__state.__primaryGLFramebuffer), this.__contextState.renderToTexture = null, this.__contextState.backBufferEnableDepthAndStencil =
                            this.__state.backBufferEnableDepthAndStencil;
                        this.__setGLDepthTest(this.__state.backBufferEnableDepthAndStencil);
                        this.__setGLStencilTest(this.__state.backBufferEnableDepthAndStencil);
                        this.__setGLFrontFace(this.__stage.context3D != this)
                    }
                },
                __flushGLProgram: function() {
                    var a = this.__state.shader,
                        b = this.__state.program;
                    this.__contextState.shader != a && (null != this.__contextState.shader && this.__contextState.shader.__disable(), null != a && a.__enable(), this.__contextState.shader = a);
                    this.__contextState.program != b &&
                        (null != this.__contextState.program && this.__contextState.program.__disable(), null != b && b.__enable(), this.__contextState.program = b);
                    null != b && 0 == b.__format && (this.__positionScale[1] = this.__stage.context3D == this && null == this.__state.renderToTexture ? 1 : -1, b.__setPositionScale(this.__positionScale))
                },
                __flushGLScissor: function() {
                    if (this.__state.scissorEnabled) {
                        this.__setGLScissorTest(!0);
                        this.__contextState.scissorEnabled = !0;
                        var a = E["int"](this.__state.scissorRectangle.x),
                            b = E["int"](this.__state.scissorRectangle.y),
                            c = E["int"](this.__state.scissorRectangle.width),
                            d = E["int"](this.__state.scissorRectangle.height);
                        null == this.__state.renderToTexture && null == this.__stage3D && (b = E["int"](this.__stage.window.get_height() * this.__stage.window.get_scale()) - E["int"](this.__state.scissorRectangle.height) - b);
                        if (this.__contextState.scissorRectangle.x != a || this.__contextState.scissorRectangle.y != b || this.__contextState.scissorRectangle.width != c || this.__contextState.scissorRectangle.height != d) this.gl.scissor(a, b, c, d), this.__contextState.scissorRectangle.setTo(a,
                            b, c, d)
                    } else this.__contextState.scissorEnabled != this.__state.scissorEnabled && (this.__setGLScissorTest(!1), this.__contextState.scissorEnabled = !1)
                },
                __flushGLStencil: function() {
                    if (this.__contextState.stencilTriangleFace != this.__state.stencilTriangleFace || this.__contextState.stencilPass != this.__state.stencilPass || this.__contextState.stencilDepthFail != this.__state.stencilDepthFail || this.__contextState.stencilFail != this.__state.stencilFail) this.gl.stencilOpSeparate(this.__getGLTriangleFace(this.__state.stencilTriangleFace),
                        this.__getGLStencilAction(this.__state.stencilFail), this.__getGLStencilAction(this.__state.stencilDepthFail), this.__getGLStencilAction(this.__state.stencilPass)), this.__contextState.stencilTriangleFace = this.__state.stencilTriangleFace, this.__contextState.stencilPass = this.__state.stencilPass, this.__contextState.stencilDepthFail = this.__state.stencilDepthFail, this.__contextState.stencilFail = this.__state.stencilFail;
                    this.__contextState.stencilWriteMask != this.__state.stencilWriteMask && (this.gl.stencilMask(this.__state.stencilWriteMask),
                        this.__contextState.stencilWriteMask = this.__state.stencilWriteMask);
                    if (this.__contextState.stencilCompareMode != this.__state.stencilCompareMode || this.__contextState.stencilReferenceValue != this.__state.stencilReferenceValue || this.__contextState.stencilReadMask != this.__state.stencilReadMask) this.gl.stencilFunc(this.__getGLCompareMode(this.__state.stencilCompareMode), this.__state.stencilReferenceValue, this.__state.stencilReadMask), this.__contextState.stencilCompareMode = this.__state.stencilCompareMode,
                        this.__contextState.stencilReferenceValue = this.__state.stencilReferenceValue, this.__contextState.stencilReadMask = this.__state.stencilReadMask
                },
                __flushGLTextures: function() {
                    for (var a = 0, b, c, d = 0, e = this.__state.textures.length; d < e;) {
                        var f = d++;
                        b = this.__state.textures[f];
                        c = this.__state.samplerStates[f];
                        null == c && (this.__state.samplerStates[f] = new wk, c = this.__state.samplerStates[f]);
                        this.gl.activeTexture(this.gl.TEXTURE0 + a);
                        null != b ? (b.__textureTarget == this.gl.TEXTURE_2D ? this.__bindGLTexture2D(b.__getTexture()) :
                            this.__bindGLTextureCubeMap(b.__getTexture()), this.__contextState.textures[f] = b, b.__setSamplerState(c)) : this.__bindGLTexture2D(null);
                        null != this.__state.program && 0 == this.__state.program.__format && c.textureAlpha && (this.gl.activeTexture(this.gl.TEXTURE0 + a + 4), null != b && null != b.__alphaTexture ? (b.__alphaTexture.__textureTarget == this.gl.TEXTURE_2D ? this.__bindGLTexture2D(b.__alphaTexture.__getTexture()) : this.__bindGLTextureCubeMap(b.__alphaTexture.__getTexture()), b.__alphaTexture.__setSamplerState(c), this.gl.uniform1i(this.__state.program.__agalAlphaSamplerEnabled[a].location,
                            1)) : (this.__bindGLTexture2D(null), null != this.__state.program.__agalAlphaSamplerEnabled[a] && this.gl.uniform1i(this.__state.program.__agalAlphaSamplerEnabled[a].location, 0)));
                        ++a
                    }
                },
                __flushGLViewport: function() {
                    if (null == this.__state.renderToTexture)
                        if (this.__stage.context3D == this) {
                            var a = null == this.__stage3D ? 0 : E["int"](this.__stage3D.get_x()),
                                b = E["int"](this.__stage.window.get_height() * this.__stage.window.get_scale() - this.backBufferHeight - (null == this.__stage3D ? 0 : this.__stage3D.get_y()));
                            this.gl.viewport(a,
                                b, this.backBufferWidth, this.backBufferHeight)
                        } else this.gl.viewport(0, 0, this.backBufferWidth, this.backBufferHeight);
                    else b = a = 0, E.is(this.__state.renderToTexture, Jo) ? (b = this.__state.renderToTexture, a = b.__width, b = b.__height) : E.is(this.__state.renderToTexture, Io) ? (b = this.__state.renderToTexture, a = b.__width, b = b.__height) : E.is(this.__state.renderToTexture, Hr) && (b = this.__state.renderToTexture, b = a = b.__size), this.gl.viewport(0, 0, a, b)
                },
                __getGLBlend: function(a) {
                    switch (a) {
                        case 0:
                            return this.gl.DST_ALPHA;
                        case 1:
                            return this.gl.DST_COLOR;
                        case 2:
                            return this.gl.ONE;
                        case 3:
                            return this.gl.ONE_MINUS_DST_ALPHA;
                        case 4:
                            return this.gl.ONE_MINUS_DST_COLOR;
                        case 5:
                            return this.gl.ONE_MINUS_SRC_ALPHA;
                        case 6:
                            return this.gl.ONE_MINUS_SRC_COLOR;
                        case 7:
                            return this.gl.SRC_ALPHA;
                        case 8:
                            return this.gl.SRC_COLOR;
                        case 9:
                            return this.gl.ZERO;
                        default:
                            throw new Z(new ue);
                    }
                },
                __getGLCompareMode: function(a) {
                    switch (a) {
                        case 0:
                            return this.gl.ALWAYS;
                        case 1:
                            return this.gl.EQUAL;
                        case 2:
                            return this.gl.GREATER;
                        case 3:
                            return this.gl.GEQUAL;
                        case 4:
                            return this.gl.LESS;
                        case 5:
                            return this.gl.LEQUAL;
                        case 6:
                            return this.gl.NEVER;
                        case 7:
                            return this.gl.NOTEQUAL;
                        default:
                            return this.gl.EQUAL
                    }
                },
                __getGLStencilAction: function(a) {
                    switch (a) {
                        case 0:
                            return this.gl.DECR;
                        case 1:
                            return this.gl.DECR_WRAP;
                        case 2:
                            return this.gl.INCR;
                        case 3:
                            return this.gl.INCR_WRAP;
                        case 4:
                            return this.gl.INVERT;
                        case 5:
                            return this.gl.KEEP;
                        case 6:
                            return this.gl.REPLACE;
                        case 7:
                            return this.gl.ZERO;
                        default:
                            return this.gl.KEEP
                    }
                },
                __getGLTriangleFace: function(a) {
                    switch (a) {
                        case 0:
                            return this.gl.BACK;
                        case 1:
                            return this.gl.FRONT;
                        case 2:
                            return this.gl.FRONT_AND_BACK;
                        case 3:
                            return this.gl.NONE;
                        default:
                            return this.gl.FRONT_AND_BACK
                    }
                },
                __renderStage3D: function(a) {
                    var b = a.context3D;
                    if (null != b && b != this && null != b.__frontBufferTexture && a.visible && 0 < this.backBufferHeight && 0 < this.backBufferWidth) {
                        if (null == this.__renderStage3DProgram) {
                            var c = new wa;
                            c.assemble(ev.toString(1), "m44 op, va0, vc0\nmov v0, va1");
                            var d = new wa;
                            d.assemble(ev.toString(0), "tex ft1, v0, fs0 <2d,nearest,nomip>\nmov oc, ft1");
                            this.__renderStage3DProgram = this.createProgram();
                            this.__renderStage3DProgram.upload(c.agalcode,
                                d.agalcode)
                        }
                        this.setProgram(this.__renderStage3DProgram);
                        this.setBlendFactors(2, 9);
                        this.setColorMask(!0, !0, !0, !0);
                        this.setCulling(3);
                        this.setDepthTest(!1, 0);
                        this.setStencilActions();
                        this.setStencilReferenceValue(0, 0, 0);
                        this.setScissorRectangle(null);
                        this.setTextureAt(0, b.__frontBufferTexture);
                        this.setVertexBufferAt(0, a.__vertexBuffer, 0, 3);
                        this.setVertexBufferAt(1, a.__vertexBuffer, 3, 2);
                        this.setProgramConstantsFromMatrix(1, 0, a.__renderTransform, !0);
                        this.drawTriangles(a.__indexBuffer);
                        this.__present = !0
                    }
                },
                __setGLBlend: function(a) {
                    this.__contextState.__enableGLBlend != a && (a ? this.gl.enable(this.gl.BLEND) : this.gl.disable(this.gl.BLEND), this.__contextState.__enableGLBlend = a)
                },
                __setGLBlendEquation: function(a) {
                    this.__contextState.__glBlendEquation != a && (this.gl.blendEquation(a), this.__contextState.__glBlendEquation = a)
                },
                __setGLCullFace: function(a) {
                    this.__contextState.__enableGLCullFace != a && (a ? this.gl.enable(this.gl.CULL_FACE) : this.gl.disable(this.gl.CULL_FACE), this.__contextState.__enableGLCullFace = a)
                },
                __setGLDepthTest: function(a) {
                    this.__contextState.__enableGLDepthTest != a && (a ? this.gl.enable(this.gl.DEPTH_TEST) : this.gl.disable(this.gl.DEPTH_TEST), this.__contextState.__enableGLDepthTest = a)
                },
                __setGLFrontFace: function(a) {
                    this.__contextState.__frontFaceGLCCW != a && (this.gl.frontFace(a ? this.gl.CCW : this.gl.CW), this.__contextState.__frontFaceGLCCW = a)
                },
                __setGLScissorTest: function(a) {
                    this.__contextState.__enableGLScissorTest != a && (a ? this.gl.enable(this.gl.SCISSOR_TEST) : this.gl.disable(this.gl.SCISSOR_TEST),
                        this.__contextState.__enableGLScissorTest = a)
                },
                __setGLStencilTest: function(a) {
                    this.__contextState.__enableGLStencilTest != a && (a ? this.gl.enable(this.gl.STENCIL_TEST) : this.gl.disable(this.gl.STENCIL_TEST), this.__contextState.__enableGLStencilTest = a)
                },
                __class__: Hb
            });
            var Gr = {};
            g["openfl.display3D._Context3DBufferUsage.Context3DBufferUsage_Impl_"] = Gr;
            Gr.__name__ = ["openfl", "display3D", "_Context3DBufferUsage", "Context3DBufferUsage_Impl_"];
            Gr.fromString = function(a) {
                switch (a) {
                    case "dynamicDraw":
                        return 0;
                    case "staticDraw":
                        return 1;
                    default:
                        return null
                }
            };
            Gr.toString = function(a) {
                switch (a) {
                    case 0:
                        return "dynamicDraw";
                    case 1:
                        return "staticDraw";
                    default:
                        return null
                }
            };
            var ev = {};
            g["openfl.display3D._Context3DProgramType.Context3DProgramType_Impl_"] = ev;
            ev.__name__ = ["openfl", "display3D", "_Context3DProgramType", "Context3DProgramType_Impl_"];
            ev.toString = function(a) {
                switch (a) {
                    case 0:
                        return "fragment";
                    case 1:
                        return "vertex";
                    default:
                        return null
                }
            };
            var xw = {};
            g["openfl.display3D._Context3DTextureFormat.Context3DTextureFormat_Impl_"] = xw;
            xw.__name__ = ["openfl", "display3D", "_Context3DTextureFormat", "Context3DTextureFormat_Impl_"];
            xw.toString = function(a) {
                switch (a) {
                    case 0:
                        return "bgrPacked565";
                    case 1:
                        return "bgra";
                    case 2:
                        return "bgraPacked4444";
                    case 3:
                        return "compressed";
                    case 4:
                        return "compressedAlpha";
                    case 5:
                        return "rgbaHalfFloat";
                    default:
                        return null
                }
            };
            var bv = function(a, b, c) {
                this.__context = a;
                this.__numIndices = b;
                a = this.__context.gl;
                this.__id = a.createBuffer();
                this.__usage = 0 == c ? a.DYNAMIC_DRAW : a.STATIC_DRAW
            };
            g["openfl.display3D.IndexBuffer3D"] = bv;
            bv.__name__ = ["openfl", "display3D", "IndexBuffer3D"];
            bv.prototype = {
                __context: null,
                __id: null,
                __numIndices: null,
                __tempUInt16Array: null,
                __usage: null,
                uploadFromTypedArray: function(a, b) {
                    null != a && (b = this.__context.gl, this.__context.__bindGLElementArrayBuffer(this.__id), Td.bufferData(b, b.ELEMENT_ARRAY_BUFFER, a, this.__usage))
                },
                uploadFromVector: function(a, b, c) {
                    if (null != a) {
                        var d = b + c,
                            e = this.__tempUInt16Array;
                        if (null == this.__tempUInt16Array || this.__tempUInt16Array.length < c) this.__tempUInt16Array = null != c ? new Uint16Array(c) :
                            null, null != e && this.__tempUInt16Array.set(e);
                        for (c = b; c < d;) e = c++, this.__tempUInt16Array[e - b] = a.get(e);
                        this.uploadFromTypedArray(this.__tempUInt16Array)
                    }
                },
                __class__: bv
            };
            var cv = function(a, b) {
                this.__context = a;
                this.__format = b;
                0 == this.__format ? (this.__agalSamplerUsageMask = 0, this.__agalUniforms = new Qb, this.__agalSamplerUniforms = new Qb, this.__agalAlphaSamplerUniforms = new Qb, this.__agalAlphaSamplerEnabled = []) : (this.__glslAttribNames = [], this.__glslAttribTypes = [], this.__glslSamplerNames = [], this.__glslUniformLocations = [], this.__glslUniformNames = [], this.__glslUniformTypes = []);
                this.__samplerStates = []
            };
            g["openfl.display3D.Program3D"] = cv;
            cv.__name__ = ["openfl", "display3D", "Program3D"];
            cv.prototype = {
                __agalAlphaSamplerEnabled: null,
                __agalAlphaSamplerUniforms: null,
                __agalFragmentUniformMap: null,
                __agalPositionScale: null,
                __agalSamplerUniforms: null,
                __agalSamplerUsageMask: null,
                __agalUniforms: null,
                __agalVertexUniformMap: null,
                __context: null,
                __format: null,
                __glFragmentShader: null,
                __glFragmentSource: null,
                __glProgram: null,
                __glslAttribNames: null,
                __glslAttribTypes: null,
                __glslSamplerNames: null,
                __glslUniformLocations: null,
                __glslUniformNames: null,
                __glslUniformTypes: null,
                __glVertexShader: null,
                __glVertexSource: null,
                __samplerStates: null,
                upload: function(a, b) {
                    if (0 == this.__format) {
                        var c = [];
                        a = af.convertToGLSL(a, null);
                        b = af.convertToGLSL(b, c);
                        5 == Za.level && (Za.info(a, {
                            fileName: "Program3D.hx",
                            lineNumber: 399,
                            className: "openfl.display3D.Program3D",
                            methodName: "upload"
                        }), Za.info(b, {
                            fileName: "Program3D.hx",
                            lineNumber: 400,
                            className: "openfl.display3D.Program3D",
                            methodName: "upload"
                        }));
                        this.__deleteShaders();
                        this.__uploadFromGLSL(a, b);
                        this.__buildAGALUniformList();
                        b = 0;
                        for (a = c.length; b < a;) {
                            var d = b++;
                            this.__samplerStates[d] = c[d]
                        }
                    }
                },
                __buildAGALUniformList: function() {
                    if (1 != this.__format) {
                        var a = this.__context.gl;
                        this.__agalUniforms.clear();
                        this.__agalSamplerUniforms.clear();
                        this.__agalAlphaSamplerUniforms.clear();
                        this.__agalAlphaSamplerEnabled = [];
                        this.__agalSamplerUsageMask = 0;
                        var b = a.getProgramParameter(this.__glProgram, a.ACTIVE_UNIFORMS);
                        for (var c = new Qb, d = new Qb,
                                e = 0; e < b;) {
                            var f = e++,
                                h = a.getActiveUniform(this.__glProgram, f),
                                k = h.name,
                                m = h.size,
                                g = h.type;
                            h = new Ir(this.__context);
                            h.name = k;
                            h.size = m;
                            h.type = g;
                            h.location = a.getUniformLocation(this.__glProgram, h.name);
                            k = h.name.indexOf("[");
                            0 <= k && (h.name = h.name.substring(0, k));
                            switch (h.type) {
                                case 35674:
                                    h.regCount = 2;
                                    break;
                                case 35675:
                                    h.regCount = 3;
                                    break;
                                case 35676:
                                    h.regCount = 4;
                                    break;
                                default:
                                    h.regCount = 1
                            }
                            h.regCount *= h.size;
                            this.__agalUniforms.add(h);
                            if ("vcPositionScale" == h.name) this.__agalPositionScale = h;
                            else if (ka.startsWith(h.name,
                                    "vc")) h.regIndex = E.parseInt(h.name.substring(2)), h.regData = this.__context.__vertexConstants, c.add(h);
                            else if (ka.startsWith(h.name, "fc")) h.regIndex = E.parseInt(h.name.substring(2)), h.regData = this.__context.__fragmentConstants, d.add(h);
                            else if (ka.startsWith(h.name, "sampler") && -1 == h.name.indexOf("alpha"))
                                for (h.regIndex = E.parseInt(h.name.substring(7)), this.__agalSamplerUniforms.add(h), k = 0, m = h.regCount; k < m;) g = k++, this.__agalSamplerUsageMask |= 1 << h.regIndex + g;
                            else ka.startsWith(h.name, "sampler") && ka.endsWith(h.name,
                                "_alpha") ? (k = h.name.indexOf("_") - 7, h.regIndex = E.parseInt(h.name.substring(7, 7 + k)) + 4, this.__agalAlphaSamplerUniforms.add(h)) : ka.startsWith(h.name, "sampler") && ka.endsWith(h.name, "_alphaEnabled") && (h.regIndex = E.parseInt(h.name.substring(7)), this.__agalAlphaSamplerEnabled[h.regIndex] = h);
                            5 == Za.level && Za.verbose("" + f + " name:" + h.name + " type:" + h.type + " size:" + h.size + " location:" + E.string(h.location), {
                                fileName: "Program3D.hx",
                                lineNumber: 577,
                                className: "openfl.display3D.Program3D",
                                methodName: "__buildAGALUniformList"
                            })
                        }
                        this.__agalVertexUniformMap =
                            new Ko(hg.array(c));
                        this.__agalFragmentUniformMap = new Ko(hg.array(d))
                    }
                },
                __deleteShaders: function() {
                    var a = this.__context.gl;
                    null != this.__glProgram && (this.__glProgram = null);
                    null != this.__glVertexShader && (a.deleteShader(this.__glVertexShader), this.__glVertexShader = null);
                    null != this.__glFragmentShader && (a.deleteShader(this.__glFragmentShader), this.__glFragmentShader = null)
                },
                __disable: function() {},
                __enable: function() {
                    var a = this.__context.gl;
                    a.useProgram(this.__glProgram);
                    if (0 == this.__format) {
                        this.__agalVertexUniformMap.markAllDirty();
                        this.__agalFragmentUniformMap.markAllDirty();
                        for (var b = this.__agalSamplerUniforms.iterator(); b.hasNext();) {
                            var c = b.next();
                            if (1 == c.regCount) a.uniform1i(c.location, c.regIndex);
                            else throw new Z(new ue("!!! TODO: uniform location on webgl"));
                        }
                        for (b = this.__agalAlphaSamplerUniforms.iterator(); b.hasNext();)
                            if (c = b.next(), 1 == c.regCount) a.uniform1i(c.location, c.regIndex);
                            else throw new Z(new ue("!!! TODO: uniform location on webgl"));
                    }
                },
                __flush: function() {
                    0 == this.__format && (this.__agalVertexUniformMap.flush(),
                        this.__agalFragmentUniformMap.flush())
                },
                __markDirty: function(a, b, c) {
                    1 != this.__format && (a ? this.__agalVertexUniformMap.markDirty(b, c) : this.__agalFragmentUniformMap.markDirty(b, c))
                },
                __setPositionScale: function(a) {
                    1 != this.__format && null != this.__agalPositionScale && this.__context.gl.uniform4fv(this.__agalPositionScale.location, a)
                },
                __uploadFromGLSL: function(a, b) {
                    var c = this.__context.gl;
                    this.__glVertexSource = a;
                    this.__glFragmentSource = b;
                    this.__glVertexShader = c.createShader(c.VERTEX_SHADER);
                    c.shaderSource(this.__glVertexShader,
                        a);
                    c.compileShader(this.__glVertexShader);
                    if (0 == c.getShaderParameter(this.__glVertexShader, c.COMPILE_STATUS)) {
                        var d = "Error compiling vertex shader\n" + c.getShaderInfoLog(this.__glVertexShader);
                        Za.error(d + ("\n" + a), {
                            fileName: "Program3D.hx",
                            lineNumber: 869,
                            className: "openfl.display3D.Program3D",
                            methodName: "__uploadFromGLSL"
                        })
                    }
                    this.__glFragmentShader = c.createShader(c.FRAGMENT_SHADER);
                    c.shaderSource(this.__glFragmentShader, b);
                    c.compileShader(this.__glFragmentShader);
                    0 == c.getShaderParameter(this.__glFragmentShader,
                        c.COMPILE_STATUS) && (d = "Error compiling fragment shader\n" + c.getShaderInfoLog(this.__glFragmentShader), Za.error(d + ("\n" + b), {
                        fileName: "Program3D.hx",
                        lineNumber: 881,
                        className: "openfl.display3D.Program3D",
                        methodName: "__uploadFromGLSL"
                    }));
                    this.__glProgram = c.createProgram();
                    if (0 == this.__format)
                        for (b = 0; 16 > b;) {
                            d = b++;
                            var e = "va" + d; - 1 != a.indexOf(" " + e) && c.bindAttribLocation(this.__glProgram, d, e)
                        } else
                            for (a = 0, b = this.__glslAttribNames; a < b.length;)
                                if (d = b[a], ++a, -1 < d.indexOf("Position") && ka.startsWith(d, "openfl_")) {
                                    c.bindAttribLocation(this.__glProgram,
                                        0, d);
                                    break
                                } c.attachShader(this.__glProgram, this.__glVertexShader);
                    c.attachShader(this.__glProgram, this.__glFragmentShader);
                    c.linkProgram(this.__glProgram);
                    0 == c.getProgramParameter(this.__glProgram, c.LINK_STATUS) && (c = "Unable to initialize the shader program\n" + c.getProgramInfoLog(this.__glProgram), Za.error(c, {
                        fileName: "Program3D.hx",
                        lineNumber: 922,
                        className: "openfl.display3D.Program3D",
                        methodName: "__uploadFromGLSL"
                    }))
                },
                __class__: cv
            };
            var Ir = function(a) {
                this.context = a;
                this.isDirty = !0;
                this.regDataPointer =
                    new Fu(null, 0)
            };
            g["openfl.display3D.Uniform"] = Ir;
            Ir.__name__ = ["openfl", "display3D", "Uniform"];
            Ir.prototype = {
                name: null,
                location: null,
                type: null,
                size: null,
                regData: null,
                regIndex: null,
                regCount: null,
                isDirty: null,
                context: null,
                regDataPointer: null,
                flush: function() {
                    var a = this.context.gl,
                        b = 4 * this.regIndex;
                    switch (this.type) {
                        case 35664:
                            bw.uniform2fv(a, this.location, this.__getUniformRegisters(b, 2 * this.regCount));
                            break;
                        case 35665:
                            var c = this.location;
                            b = this.__getUniformRegisters(b, 3 * this.regCount);
                            a.uniform3fv(c,
                                b);
                            break;
                        case 35666:
                            c = this.location;
                            b = this.__getUniformRegisters(b, 4 * this.regCount);
                            a.uniform4fv(c, b);
                            break;
                        case 35674:
                            Td.uniformMatrix2fv(a, this.location, !1, this.__getUniformRegisters(b, 4 * this.size));
                            break;
                        case 35675:
                            Td.uniformMatrix3fv(a, this.location, !1, this.__getUniformRegisters(b, 9 * this.size));
                            break;
                        case 35676:
                            Td.uniformMatrix4fv(a, this.location, !1, this.__getUniformRegisters(b, 16 * this.size));
                            break;
                        default:
                            c = this.location, b = this.__getUniformRegisters(b, 4 * this.regCount), a.uniform4fv(c, b)
                    }
                },
                __getUniformRegisters: function(a,
                    b) {
                    return this.regData.subarray(a, a + b)
                },
                __class__: Ir
            };
            var Ko = function(a) {
                this.__uniforms = a;
                this.__uniforms.sort(function(a, b) {
                    return T.compare(a.regIndex, b.regIndex)
                });
                for (var b = a = 0, c = this.__uniforms; b < c.length;) {
                    var d = c[b];
                    ++b;
                    d.regIndex + d.regCount > a && (a = d.regIndex + d.regCount)
                }
                this.__registerLookup = M.toObjectVector(null, a);
                a = 0;
                for (b = this.__uniforms; a < b.length;) {
                    c = b[a];
                    ++a;
                    d = 0;
                    for (var e = c.regCount; d < e;) {
                        var f = d++;
                        this.__registerLookup.set(c.regIndex + f, c)
                    }
                }
                this.__anyDirty = this.__allDirty = !0
            };
            g["openfl.display3D.UniformMap"] =
                Ko;
            Ko.__name__ = ["openfl", "display3D", "UniformMap"];
            Ko.prototype = {
                __allDirty: null,
                __anyDirty: null,
                __registerLookup: null,
                __uniforms: null,
                flush: function() {
                    if (this.__anyDirty) {
                        for (var a = 0, b = this.__uniforms; a < b.length;) {
                            var c = b[a];
                            ++a;
                            if (this.__allDirty || c.isDirty) c.flush(), c.isDirty = !1
                        }
                        this.__anyDirty = this.__allDirty = !1
                    }
                },
                markAllDirty: function() {
                    this.__anyDirty = this.__allDirty = !0
                },
                markDirty: function(a, b) {
                    if (!this.__allDirty)
                        for (b = a + b, b > this.__registerLookup.get_length() && (b = this.__registerLookup.get_length()); a <
                            b;) {
                            var c = this.__registerLookup.get(a);
                            null != c ? (this.__anyDirty = c.isDirty = !0, a = c.regIndex + c.regCount) : ++a
                        }
                },
                __class__: Ko
            };
            var dv = function(a, b, c, d) {
                this.__context = a;
                this.__numVertices = b;
                this.__vertexSize = c;
                a = this.__context.gl;
                this.__id = a.createBuffer();
                this.__stride = 4 * this.__vertexSize;
                this.__usage = 0 == Gr.fromString(d) ? a.DYNAMIC_DRAW : a.STATIC_DRAW
            };
            g["openfl.display3D.VertexBuffer3D"] = dv;
            dv.__name__ = ["openfl", "display3D", "VertexBuffer3D"];
            dv.prototype = {
                __context: null,
                __id: null,
                __numVertices: null,
                __stride: null,
                __tempFloat32Array: null,
                __usage: null,
                __vertexSize: null,
                uploadFromTypedArray: function(a, b) {
                    null != a && (b = this.__context.gl, this.__context.__bindGLArrayBuffer(this.__id), Td.bufferData(b, b.ARRAY_BUFFER, a, this.__usage))
                },
                uploadFromVector: function(a, b, c) {
                    if (null != a) {
                        b *= this.__vertexSize;
                        var d = c * this.__vertexSize;
                        c = b + d;
                        var e = this.__tempFloat32Array;
                        if (null == this.__tempFloat32Array || this.__tempFloat32Array.length < d) this.__tempFloat32Array = null != d ? new jg(d) : null, null != e && this.__tempFloat32Array.set(e);
                        for (d =
                            b; d < c;) e = d++, this.__tempFloat32Array[e - b] = a.get(e);
                        this.uploadFromTypedArray(rk.toArrayBufferView(this.__tempFloat32Array))
                    }
                },
                __class__: dv
            };
            var Ho = function() {
                this.backBufferEnableDepthAndStencil = !1;
                this.blendDestinationAlphaFactor = 9;
                this.blendSourceAlphaFactor = 2;
                this.blendDestinationRGBFactor = 9;
                this.blendSourceRGBFactor = 2;
                this.colorMaskAlpha = this.colorMaskBlue = this.colorMaskGreen = this.colorMaskRed = !0;
                this.culling = 3;
                this.depthCompareMode = 4;
                this.depthMask = !0;
                this.samplerStates = [];
                this.scissorRectangle =
                    new hb;
                this.stencilCompareMode = 0;
                this.stencilPass = this.stencilFail = this.stencilDepthFail = 5;
                this.stencilReadMask = 255;
                this.stencilReferenceValue = 0;
                this.stencilTriangleFace = 2;
                this.stencilWriteMask = 255;
                this.textures = [];
                this.__frontFaceGLCCW = !0;
                this.__glBlendEquation = 32774
            };
            g["openfl.display3D._internal.Context3DState"] = Ho;
            Ho.__name__ = ["openfl", "display3D", "_internal", "Context3DState"];
            Ho.prototype = {
                backBufferEnableDepthAndStencil: null,
                blendDestinationAlphaFactor: null,
                blendSourceAlphaFactor: null,
                blendDestinationRGBFactor: null,
                blendSourceRGBFactor: null,
                colorMaskRed: null,
                colorMaskGreen: null,
                colorMaskBlue: null,
                colorMaskAlpha: null,
                culling: null,
                depthCompareMode: null,
                depthMask: null,
                program: null,
                renderToTexture: null,
                renderToTextureAntiAlias: null,
                renderToTextureDepthStencil: null,
                renderToTextureSurfaceSelector: null,
                samplerStates: null,
                scissorEnabled: null,
                scissorRectangle: null,
                stencilCompareMode: null,
                stencilDepthFail: null,
                stencilFail: null,
                stencilPass: null,
                stencilReadMask: null,
                stencilReferenceValue: null,
                stencilTriangleFace: null,
                stencilWriteMask: null,
                textures: null,
                shader: null,
                __currentGLArrayBuffer: null,
                __currentGLElementArrayBuffer: null,
                __currentGLFramebuffer: null,
                __currentGLTexture2D: null,
                __currentGLTextureCubeMap: null,
                __enableGLBlend: null,
                __enableGLCullFace: null,
                __enableGLDepthTest: null,
                __enableGLScissorTest: null,
                __enableGLStencilTest: null,
                __frontFaceGLCCW: null,
                __glBlendEquation: null,
                __primaryGLFramebuffer: null,
                __class__: Ho
            };
            var af = function() {};
            g["openfl.display3D._internal.agal.AGALConverter"] = af;
            af.__name__ = ["openfl", "display3D", "_internal",
                "agal", "AGALConverter"
            ];
            af.prefixFromType = function(a, b) {
                switch (a) {
                    case 0:
                        return "va";
                    case 1:
                        return b == bg.VERTEX ? "vc" : "fc";
                    case 2:
                        return b == bg.VERTEX ? "vt" : "ft";
                    case 3:
                        return "output_";
                    case 4:
                        return "v";
                    case 5:
                        return "sampler";
                    default:
                        throw new Z(new ue("Invalid data!"));
                }
            };
            af.readUInt64 = function(a) {
                var b = a.readInt();
                a = a.readInt();
                return new Db(a, b)
            };
            af.convertToGLSL = function(a, b) {
                a.position = 0;
                a.set_endian(1);
                var c = a.readByte() & 255;
                if (176 == c) return a.readUTF();
                if (160 != c) throw new Z(new ue("Magic value must be 0xA0, may not be AGAL"));
                if (1 != a.readInt()) throw new Z(new ue("Version must be 1"));
                if (161 != (a.readByte() & 255)) throw new Z(new ue("Shader type ID must be 0xA1"));
                c = 0 == (a.readByte() & 255) ? bg.VERTEX : bg.FRAGMENT;
                for (var d = new Jr, e = new bj;;) {
                    var f = a.position;
                    if (!Qd.gt(Ve.get_length(a), f)) break;
                    var h = a.readInt();
                    f = a.readUnsignedInt();
                    var k = af.readUInt64(a),
                        m = af.readUInt64(a);
                    f = Fl.parse(f, c);
                    k = xk.parse(k, c, f.mask);
                    var g = xk.parse(m, c, f.mask);
                    e.add("\t");
                    switch (h) {
                        case 0:
                            e.add(f.toGLSL() + " = " + k.toGLSL() + "; // mov");
                            d.addDR(f, ba.VECTOR_4);
                            d.addSR(k, ba.VECTOR_4);
                            break;
                        case 1:
                            e.add(f.toGLSL() + " = " + k.toGLSL() + " + " + g.toGLSL() + "; // add");
                            d.addDR(f, ba.VECTOR_4);
                            d.addSR(k, ba.VECTOR_4);
                            d.addSR(g, ba.VECTOR_4);
                            break;
                        case 2:
                            e.add(f.toGLSL() + " = " + k.toGLSL() + " - " + g.toGLSL() + "; // sub");
                            d.addDR(f, ba.VECTOR_4);
                            d.addSR(k, ba.VECTOR_4);
                            d.addSR(g, ba.VECTOR_4);
                            break;
                        case 3:
                            e.add(f.toGLSL() + " = " + k.toGLSL() + " * " + g.toGLSL() + "; // mul");
                            d.addDR(f, ba.VECTOR_4);
                            d.addSR(k, ba.VECTOR_4);
                            d.addSR(g, ba.VECTOR_4);
                            break;
                        case 4:
                            e.add(f.toGLSL() + " = " + k.toGLSL() +
                                " / " + g.toGLSL() + "; // div");
                            d.addDR(f, ba.VECTOR_4);
                            d.addSR(k, ba.VECTOR_4);
                            d.addSR(g, ba.VECTOR_4);
                            break;
                        case 5:
                            -1 < k.toGLSL().indexOf(".") ? e.add(f.toGLSL() + " = 1.0 / " + k.toGLSL() + "; // rcp") : e.add(f.toGLSL() + " = vec4(1) / " + k.toGLSL() + "; // rcp");
                            d.addDR(f, ba.VECTOR_4);
                            d.addSR(k, ba.VECTOR_4);
                            break;
                        case 6:
                            e.add(f.toGLSL() + " = min(" + k.toGLSL() + ", " + g.toGLSL() + "); // min");
                            d.addDR(f, ba.VECTOR_4);
                            d.addSR(k, ba.VECTOR_4);
                            d.addSR(g, ba.VECTOR_4);
                            break;
                        case 7:
                            e.add(f.toGLSL() + " = max(" + k.toGLSL() + ", " + g.toGLSL() +
                                "); // max");
                            d.addDR(f, ba.VECTOR_4);
                            d.addSR(k, ba.VECTOR_4);
                            d.addSR(g, ba.VECTOR_4);
                            break;
                        case 8:
                            e.add(f.toGLSL() + " = fract(" + k.toGLSL() + "); // frc");
                            d.addDR(f, ba.VECTOR_4);
                            d.addSR(k, ba.VECTOR_4);
                            break;
                        case 9:
                            e.add(f.toGLSL() + " = sqrt(" + k.toGLSL() + "); // sqrt");
                            d.addDR(f, ba.VECTOR_4);
                            d.addSR(k, ba.VECTOR_4);
                            break;
                        case 10:
                            e.add(f.toGLSL() + " = inversesqrt(" + k.toGLSL() + "); // rsq");
                            d.addDR(f, ba.VECTOR_4);
                            d.addSR(k, ba.VECTOR_4);
                            break;
                        case 11:
                            e.add(f.toGLSL() + " = pow(" + k.toGLSL() + ", " + g.toGLSL() + "); // pow");
                            d.addDR(f, ba.VECTOR_4);
                            d.addSR(k, ba.VECTOR_4);
                            d.addSR(g, ba.VECTOR_4);
                            break;
                        case 12:
                            e.add(f.toGLSL() + " = log2(" + k.toGLSL() + "); // log");
                            d.addDR(f, ba.VECTOR_4);
                            d.addSR(k, ba.VECTOR_4);
                            break;
                        case 13:
                            e.add(f.toGLSL() + " = exp2(" + k.toGLSL() + "); // exp");
                            d.addDR(f, ba.VECTOR_4);
                            d.addSR(k, ba.VECTOR_4);
                            break;
                        case 14:
                            e.add(f.toGLSL() + " = normalize(" + k.toGLSL() + "); // normalize");
                            d.addDR(f, ba.VECTOR_4);
                            d.addSR(k, ba.VECTOR_4);
                            break;
                        case 15:
                            e.add(f.toGLSL() + " = sin(" + k.toGLSL() + "); // sin");
                            d.addDR(f, ba.VECTOR_4);
                            d.addSR(k, ba.VECTOR_4);
                            break;
                        case 16:
                            e.add(f.toGLSL() + " = cos(" + k.toGLSL() + "); // cos");
                            d.addDR(f, ba.VECTOR_4);
                            d.addSR(k, ba.VECTOR_4);
                            break;
                        case 17:
                            k.sourceMask = g.sourceMask = 7;
                            e.add(f.toGLSL() + " = cross(vec3(" + k.toGLSL() + "), vec3(" + g.toGLSL() + ")); // crs");
                            d.addDR(f, ba.VECTOR_4);
                            d.addSR(k, ba.VECTOR_4);
                            d.addSR(g, ba.VECTOR_4);
                            break;
                        case 18:
                            k.sourceMask = g.sourceMask = 7;
                            e.add(f.toGLSL() + " = vec4(dot(vec3(" + k.toGLSL() + "), vec3(" + g.toGLSL() + ")))" + f.getWriteMask() + "; // dp3");
                            d.addDR(f, ba.VECTOR_4);
                            d.addSR(k,
                                ba.VECTOR_4);
                            d.addSR(g, ba.VECTOR_4);
                            break;
                        case 19:
                            k.sourceMask = g.sourceMask = 15;
                            e.add(f.toGLSL() + " = vec4(dot(vec4(" + k.toGLSL() + "), vec4(" + g.toGLSL() + ")))" + f.getWriteMask() + "; // dp4");
                            d.addDR(f, ba.VECTOR_4);
                            d.addSR(k, ba.VECTOR_4);
                            d.addSR(g, ba.VECTOR_4);
                            break;
                        case 20:
                            e.add(f.toGLSL() + " = abs(" + k.toGLSL() + "); // abs");
                            d.addDR(f, ba.VECTOR_4);
                            d.addSR(k, ba.VECTOR_4);
                            break;
                        case 21:
                            e.add(f.toGLSL() + " = -" + k.toGLSL() + "; // neg");
                            d.addDR(f, ba.VECTOR_4);
                            d.addSR(k, ba.VECTOR_4);
                            break;
                        case 22:
                            e.add(f.toGLSL() +
                                " = clamp(" + k.toGLSL() + ", 0.0, 1.0); // saturate");
                            d.addDR(f, ba.VECTOR_4);
                            d.addSR(k, ba.VECTOR_4);
                            break;
                        case 23:
                            h = d.getRegisterUsage(g);
                            h != ba.VECTOR_4 && h != ba.VECTOR_4_ARRAY ? (e.add(f.toGLSL() + " = " + k.toGLSL() + " * mat3(" + g.toGLSL(!1) + "); // m33"), d.addDR(f, ba.VECTOR_4), d.addSR(k, ba.VECTOR_4), d.addSR(g, ba.MATRIX_4_4)) : (k.sourceMask = g.sourceMask = 7, e.add(f.toGLSL() + " = vec3(dot(" + k.toGLSL(!0) + "," + g.toGLSL(!0, 0) + "), dot(" + k.toGLSL(!0) + "," + g.toGLSL(!0, 1) + "),dot(" + k.toGLSL(!0) + "," + g.toGLSL(!0, 2) + ")); // m33"),
                                d.addDR(f, ba.VECTOR_4), d.addSR(k, ba.VECTOR_4), d.addSR(g, ba.VECTOR_4, 0), d.addSR(g, ba.VECTOR_4, 1), d.addSR(g, ba.VECTOR_4, 2));
                            break;
                        case 24:
                            h = d.getRegisterUsage(g);
                            h != ba.VECTOR_4 && h != ba.VECTOR_4_ARRAY ? (e.add(f.toGLSL() + " = " + k.toGLSL() + " * " + g.toGLSL(!1) + "; // m44"), d.addDR(f, ba.VECTOR_4), d.addSR(k, ba.VECTOR_4), d.addSR(g, ba.MATRIX_4_4)) : (k.sourceMask = g.sourceMask = 15, e.add(f.toGLSL() + " = vec4(dot(" + k.toGLSL(!0) + "," + g.toGLSL(!0, 0) + "), dot(" + k.toGLSL(!0) + "," + g.toGLSL(!0, 1) + "), dot(" + k.toGLSL(!0) + "," + g.toGLSL(!0,
                                2) + "), dot(" + k.toGLSL(!0) + "," + g.toGLSL(!0, 3) + ")); // m44"), d.addDR(f, ba.VECTOR_4), d.addSR(k, ba.VECTOR_4), d.addSR(g, ba.VECTOR_4, 0), d.addSR(g, ba.VECTOR_4, 1), d.addSR(g, ba.VECTOR_4, 2), d.addSR(g, ba.VECTOR_4, 3));
                            break;
                        case 25:
                            f.mask &= 7;
                            h = d.getRegisterUsage(g);
                            h != ba.VECTOR_4 && h != ba.VECTOR_4_ARRAY ? (e.add(f.toGLSL() + " = " + k.toGLSL() + " * " + g.toGLSL(!1) + "; // m34"), d.addDR(f, ba.VECTOR_4), d.addSR(k, ba.VECTOR_4), d.addSR(g, ba.MATRIX_4_4)) : (k.sourceMask = g.sourceMask = 15, e.add(f.toGLSL() + " = vec3(dot(" + k.toGLSL(!0) +
                                "," + g.toGLSL(!0, 0) + "), dot(" + k.toGLSL(!0) + "," + g.toGLSL(!0, 1) + "),dot(" + k.toGLSL(!0) + "," + g.toGLSL(!0, 2) + ")); // m34"), d.addDR(f, ba.VECTOR_4), d.addSR(k, ba.VECTOR_4), d.addSR(g, ba.VECTOR_4, 0), d.addSR(g, ba.VECTOR_4, 1), d.addSR(g, ba.VECTOR_4, 2));
                            break;
                        case 39:
                            k.sourceMask = 15;
                            e.add("if (any(lessThan(" + k.toGLSL() + ", vec4(0)))) discard;");
                            d.addSR(k, ba.VECTOR_4);
                            break;
                        case 40:
                            g = Gl.parse(m, c);
                            switch (g.d) {
                                case 0:
                                    2 == g.t ? (k.sourceMask = 3, d.addSaR(g, ba.SAMPLER_2D_ALPHA), e.add("if (" + g.toGLSL() + "_alphaEnabled) {\n"),
                                        e.add("\t\t" + f.toGLSL() + " = vec4(texture2D(" + g.toGLSL() + ", " + k.toGLSL() + ").xyz, texture2D(" + g.toGLSL() + "_alpha, " + k.toGLSL() + ").x); // tex + alpha\n"), e.add("\t} else {\n"), e.add("\t\t" + f.toGLSL() + " = texture2D(" + g.toGLSL() + ", " + k.toGLSL() + "); // tex\n"), e.add("\t}")) : (k.sourceMask = 3, d.addSaR(g, ba.SAMPLER_2D), e.add(f.toGLSL() + " = texture2D(" + g.toGLSL() + ", " + k.toGLSL() + "); // tex"));
                                    break;
                                case 1:
                                    2 == g.t ? (k.sourceMask = 7, d.addSaR(g, ba.SAMPLER_CUBE_ALPHA), e.add("if (" + g.toGLSL() + "_alphaEnabled) {\n"),
                                        e.add("\t\t" + f.toGLSL() + " = vec4(textureCube(" + g.toGLSL() + ", " + k.toGLSL() + ").xyz, textureCube(" + g.toGLSL() + "_alpha, " + k.toGLSL() + ").x); // tex + alpha\n"), e.add("\t} else {\n"), e.add("\t\t" + f.toGLSL() + " = textureCube(" + g.toGLSL() + ", " + k.toGLSL() + "); // tex"), e.add("\t}")) : (k.sourceMask = 7, e.add(f.toGLSL() + " = textureCube(" + g.toGLSL() + ", " + k.toGLSL() + "); // tex"), d.addSaR(g, ba.SAMPLER_CUBE))
                            }
                            d.addDR(f, ba.VECTOR_4);
                            d.addSR(k, ba.VECTOR_4);
                            null != b && (b[g.n] = g.toSamplerState());
                            break;
                        case 41:
                            k.sourceMask =
                                g.sourceMask = 15;
                            e.add(f.toGLSL() + " = vec4(greaterThanEqual(" + k.toGLSL() + ", " + g.toGLSL() + "))" + f.getWriteMask() + "; // ste");
                            d.addDR(f, ba.VECTOR_4);
                            d.addSR(k, ba.VECTOR_4);
                            d.addSR(g, ba.VECTOR_4);
                            break;
                        case 42:
                            k.sourceMask = g.sourceMask = 15;
                            e.add(f.toGLSL() + " = vec4(lessThan(" + k.toGLSL() + ", " + g.toGLSL() + "))" + f.getWriteMask() + "; // slt");
                            d.addDR(f, ba.VECTOR_4);
                            d.addSR(k, ba.VECTOR_4);
                            d.addSR(g, ba.VECTOR_4);
                            break;
                        case 44:
                            k.sourceMask = g.sourceMask = 15;
                            e.add(f.toGLSL() + " = vec4(equal(" + k.toGLSL() + ", " + g.toGLSL() +
                                "))" + f.getWriteMask() + "; // seq");
                            d.addDR(f, ba.VECTOR_4);
                            d.addSR(k, ba.VECTOR_4);
                            d.addSR(g, ba.VECTOR_4);
                            break;
                        case 45:
                            k.sourceMask = g.sourceMask = 15;
                            e.add(f.toGLSL() + " = vec4(notEqual(" + k.toGLSL() + ", " + g.toGLSL() + "))" + f.getWriteMask() + "; // sne");
                            d.addDR(f, ba.VECTOR_4);
                            d.addSR(k, ba.VECTOR_4);
                            d.addSR(g, ba.VECTOR_4);
                            break;
                        default:
                            throw new Z(new ue("Opcode " + h));
                    }
                    e.add("\n")
                }
                null == af.limitedProfile && (a = nk.getParameter(7938), af.limitedProfile = -1 < a.indexOf("OpenGL ES") || -1 < a.indexOf("WebGL"));
                a = new bj;
                a.add("// AGAL " +
                    (c == bg.VERTEX ? "vertex" : "fragment") + " shader\n");
                af.limitedProfile ? (a.add("#version 100\n"), a.add("#ifdef GL_FRAGMENT_PRECISION_HIGH\n"), a.add("precision highp float;\n"), a.add("#else\n"), a.add("precision mediump float;\n"), a.add("#endif\n")) : a.add("#version 120\n");
                a.add(d.toGLSL(!1));
                c == bg.VERTEX && a.add("uniform vec4 vcPositionScale;\n");
                a.add("void main() {\n");
                a.add(d.toGLSL(!0));
                a.add(e.toString());
                c == bg.VERTEX && a.add("\tgl_Position *= vcPositionScale;\n");
                a.add("}\n");
                return a.toString()
            };
            var Fl =
                function() {};
            g["openfl.display3D._internal.agal._AGALConverter.DestRegister"] = Fl;
            Fl.__name__ = "openfl display3D _internal agal _AGALConverter DestRegister".split(" ");
            Fl.parse = function(a, b) {
                var c = new Fl;
                c.programType = b;
                c.type = a >>> 24 & 15;
                c.mask = a >>> 16 & 15;
                c.n = a & 65535;
                return c
            };
            Fl.prototype = {
                mask: null,
                n: null,
                programType: null,
                type: null,
                getWriteMask: function() {
                    var a = ".";
                    0 != (this.mask & 1) && (a += "x");
                    0 != (this.mask & 2) && (a += "y");
                    0 != (this.mask & 4) && (a += "z");
                    0 != (this.mask & 8) && (a += "w");
                    return a
                },
                toGLSL: function(a) {
                    null ==
                        a && (a = !0);
                    var b = 3 == this.type ? this.programType == bg.VERTEX ? "gl_Position" : "gl_FragColor" : af.prefixFromType(this.type, this.programType) + this.n;
                    a && 15 != this.mask && (b += this.getWriteMask());
                    return b
                },
                __class__: Fl
            };
            var bg = g["openfl.display3D._internal.agal._AGALConverter.ProgramType"] = {
                __ename__: "openfl display3D _internal agal _AGALConverter ProgramType".split(" "),
                __constructs__: ["VERTEX", "FRAGMENT"]
            };
            bg.VERTEX = ["VERTEX", 0];
            bg.VERTEX.toString = l;
            bg.VERTEX.__enum__ = bg;
            bg.FRAGMENT = ["FRAGMENT", 1];
            bg.FRAGMENT.toString =
                l;
            bg.FRAGMENT.__enum__ = bg;
            var Jr = function() {
                this.mEntries = []
            };
            g["openfl.display3D._internal.agal.RegisterMap"] = Jr;
            Jr.__name__ = ["openfl", "display3D", "_internal", "agal", "RegisterMap"];
            Jr.prototype = {
                mEntries: null,
                add: function(a, b, c, d) {
                    for (var e = 0, f = this.mEntries; e < f.length;) {
                        var h = f[e];
                        ++e;
                        if (h.type == a && h.name == b && h.number == c) {
                            if (h.usage != d) throw new Z(new ue("Cannot use register in multiple ways yet (mat4/vec4)"));
                            return
                        }
                    }
                    e = new fv;
                    e.type = a;
                    e.name = b;
                    e.number = c;
                    e.usage = d;
                    this.mEntries.push(e)
                },
                addDR: function(a,
                    b) {
                    this.add(a.type, a.toGLSL(!1), a.n, b)
                },
                addSaR: function(a, b) {
                    this.add(a.type, a.toGLSL(), a.n, b)
                },
                addSR: function(a, b, c) {
                    null == c && (c = 0);
                    0 != a.d ? (this.add(a.itype, af.prefixFromType(a.itype, a.programType) + a.n, a.n, ba.VECTOR_4), this.add(a.type, af.prefixFromType(a.type, a.programType) + a.o, a.o, ba.VECTOR_4_ARRAY)) : this.add(a.type, a.toGLSL(!1, c), a.n + c, b)
                },
                getRegisterUsage: function(a) {
                    return 0 != a.d ? ba.VECTOR_4_ARRAY : this.getUsage(a.type, a.toGLSL(!1), a.n)
                },
                getUsage: function(a, b, c) {
                    for (var d = 0, e = this.mEntries; d <
                        e.length;) {
                        var f = e[d];
                        ++d;
                        if (f.type == a && f.name == b && f.number == c) return f.usage
                    }
                    return ba.UNUSED
                },
                toGLSL: function(a) {
                    this.mEntries.sort(function(a, b) {
                        return a.number - b.number
                    });
                    this.mEntries.sort(function(a, b) {
                        return aa.__cast(a.type, Lv) - aa.__cast(b.type, Lv)
                    });
                    for (var b = new bj, c = 0, d = this.mEntries.length; c < d;) {
                        var e = c++;
                        e = this.mEntries[e];
                        if (!(a && 2 != e.type || !a && 2 == e.type) && 3 != e.type) {
                            switch (e.type) {
                                case 0:
                                    b.add("attribute ");
                                    break;
                                case 1:
                                    b.add("uniform ");
                                    break;
                                case 2:
                                    b.add("\t");
                                    break;
                                case 3:
                                    break;
                                case 4:
                                    b.add("varying ");
                                    break;
                                case 5:
                                    b.add("uniform ");
                                    break;
                                default:
                                    throw new Z(new ue);
                            }
                            switch (Q.enumIndex(e.usage)) {
                                case 0:
                                    Za.info("Missing switch patten: RegisterUsage.UNUSED", {
                                        fileName: "AGALConverter.hx",
                                        lineNumber: 750,
                                        className: "openfl.display3D._internal.agal.RegisterMap",
                                        methodName: "toGLSL"
                                    });
                                    break;
                                case 1:
                                    b.add("vec4 ");
                                    break;
                                case 2:
                                    b.add("mat4 ");
                                    break;
                                case 3:
                                    b.add("sampler2D ");
                                    break;
                                case 5:
                                    b.add("samplerCube ");
                                    break;
                                case 7:
                                    b.add("vec4 ")
                            }
                            e.usage == ba.SAMPLER_2D_ALPHA ? (b.add("sampler2D "),
                                b.add(e.name), b.add(";\n"), b.add("uniform "), b.add("sampler2D "), b.add(e.name + "_alpha"), b.add(";\n"), b.add("uniform "), b.add("bool "), b.add(e.name + "_alphaEnabled")) : e.usage == ba.SAMPLER_CUBE_ALPHA ? (b.add("samplerCube "), b.add(e.name), b.add(";\n"), b.add("uniform "), b.add("samplerCube "), b.add(e.name + "_alpha"), b.add(";\n"), b.add("uniform "), b.add("bool "), b.add(e.name + "_alphaEnabled")) : e.usage == ba.VECTOR_4_ARRAY ? b.add(e.name + "[128]") : b.add(e.name);
                            b.add(";\n")
                        }
                    }
                    return b.toString()
                },
                __class__: Jr
            };
            var fv =
                function() {};
            g["openfl.display3D._internal.agal._AGALConverter.RegisterMapEntry"] = fv;
            fv.__name__ = "openfl display3D _internal agal _AGALConverter RegisterMapEntry".split(" ");
            fv.prototype = {
                name: null,
                number: null,
                type: null,
                usage: null,
                __class__: fv
            };
            var ba = g["openfl.display3D._internal.agal._AGALConverter.RegisterUsage"] = {
                __ename__: "openfl display3D _internal agal _AGALConverter RegisterUsage".split(" "),
                __constructs__: "UNUSED VECTOR_4 MATRIX_4_4 SAMPLER_2D SAMPLER_2D_ALPHA SAMPLER_CUBE SAMPLER_CUBE_ALPHA VECTOR_4_ARRAY".split(" ")
            };
            ba.UNUSED = ["UNUSED", 0];
            ba.UNUSED.toString = l;
            ba.UNUSED.__enum__ = ba;
            ba.VECTOR_4 = ["VECTOR_4", 1];
            ba.VECTOR_4.toString = l;
            ba.VECTOR_4.__enum__ = ba;
            ba.MATRIX_4_4 = ["MATRIX_4_4", 2];
            ba.MATRIX_4_4.toString = l;
            ba.MATRIX_4_4.__enum__ = ba;
            ba.SAMPLER_2D = ["SAMPLER_2D", 3];
            ba.SAMPLER_2D.toString = l;
            ba.SAMPLER_2D.__enum__ = ba;
            ba.SAMPLER_2D_ALPHA = ["SAMPLER_2D_ALPHA", 4];
            ba.SAMPLER_2D_ALPHA.toString = l;
            ba.SAMPLER_2D_ALPHA.__enum__ = ba;
            ba.SAMPLER_CUBE = ["SAMPLER_CUBE", 5];
            ba.SAMPLER_CUBE.toString = l;
            ba.SAMPLER_CUBE.__enum__ = ba;
            ba.SAMPLER_CUBE_ALPHA = ["SAMPLER_CUBE_ALPHA", 6];
            ba.SAMPLER_CUBE_ALPHA.toString = l;
            ba.SAMPLER_CUBE_ALPHA.__enum__ = ba;
            ba.VECTOR_4_ARRAY = ["VECTOR_4_ARRAY", 7];
            ba.VECTOR_4_ARRAY.toString = l;
            ba.VECTOR_4_ARRAY.__enum__ = ba;
            var Gl = function() {};
            g["openfl.display3D._internal.agal._AGALConverter.SamplerRegister"] = Gl;
            Gl.__name__ = "openfl display3D _internal agal _AGALConverter SamplerRegister".split(" ");
            Gl.parse = function(a, b) {
                var c = new Gl;
                c.programType = b;
                b = new Db(a.high >> 31, a.high >> 28);
                var d = new Db(0, 15);
                b = new Db(b.high & d.high, b.low &
                    d.low);
                c.f = b.low;
                b = new Db(a.high >> 31, a.high >> 24);
                d = new Db(0, 15);
                b = new Db(b.high & d.high, b.low & d.low);
                c.m = b.low;
                b = new Db(a.high >> 31, a.high >> 20);
                d = new Db(0, 15);
                b = new Db(b.high & d.high, b.low & d.low);
                c.w = b.low;
                b = new Db(a.high >> 31, a.high >> 16);
                d = new Db(0, 15);
                b = new Db(b.high & d.high, b.low & d.low);
                c.s = b.low;
                b = new Db(a.high >> 31, a.high >> 12);
                d = new Db(0, 15);
                b = new Db(b.high & d.high, b.low & d.low);
                c.d = b.low;
                b = new Db(a.high >> 31, a.high >> 8);
                d = new Db(0, 15);
                b = new Db(b.high & d.high, b.low & d.low);
                c.t = b.low;
                b = new Db(a.high >> 31,
                    a.high >> 0);
                d = new Db(0, 15);
                b = new Db(b.high & d.high, b.low & d.low);
                c.type = b.low;
                b = new Db(a.high >> 16, a.high << 16 | a.low >>> 16);
                d = new Db(0, 255);
                b = new Db(b.high & d.high, b.low & d.low);
                c.b = b.low;
                b = new Db(0, 65535);
                a = new Db(a.high & b.high, a.low & b.low);
                c.n = a.low;
                return c
            };
            Gl.prototype = {
                b: null,
                d: null,
                f: null,
                m: null,
                n: null,
                programType: null,
                s: null,
                t: null,
                type: null,
                w: null,
                toGLSL: function() {
                    return af.prefixFromType(this.type, this.programType) + this.n
                },
                toSamplerState: function() {
                    switch (this.f) {
                        case 0:
                            var a = 5;
                            break;
                        case 1:
                            a =
                                4;
                            break;
                        default:
                            throw new Z(new ue);
                    }
                    switch (this.m) {
                        case 0:
                            var b = 2;
                            break;
                        case 1:
                            b = 1;
                            break;
                        case 2:
                            b = 0;
                            break;
                        default:
                            throw new Z(new ue);
                    }
                    switch (this.w) {
                        case 0:
                            var c = 0;
                            break;
                        case 1:
                            c = 2;
                            break;
                        default:
                            throw new Z(new ue);
                    }
                    return new wk(c, a, b, (this.b << 24 >> 24) / 8, 4 == (this.s & 4), 1 == (this.s & 1), 2 == this.t)
                },
                __class__: Gl
            };
            var xk = function() {};
            g["openfl.display3D._internal.agal._AGALConverter.SourceRegister"] = xk;
            xk.__name__ = "openfl display3D _internal agal _AGALConverter SourceRegister".split(" ");
            xk.parse = function(a,
                b, c) {
                var d = new xk;
                d.programType = b;
                b = new Db(a.high >> 31, a.high >> 31);
                var e = new Db(0, 1);
                b = new Db(b.high & e.high, b.low & e.low);
                d.d = b.low;
                b = new Db(a.high >> 31, a.high >> 16);
                e = new Db(0, 3);
                b = new Db(b.high & e.high, b.low & e.low);
                d.q = b.low;
                b = new Db(a.high >> 31, a.high >> 8);
                e = new Db(0, 15);
                b = new Db(b.high & e.high, b.low & e.low);
                d.itype = b.low;
                b = new Db(a.high >> 31, a.high >> 0);
                e = new Db(0, 15);
                b = new Db(b.high & e.high, b.low & e.low);
                d.type = b.low;
                b = new Db(a.high >> 24, a.high << 8 | a.low >>> 24);
                e = new Db(0, 255);
                b = new Db(b.high & e.high, b.low & e.low);
                d.s = b.low;
                b = new Db(a.high >> 16, a.high << 16 | a.low >>> 16);
                e = new Db(0, 255);
                b = new Db(b.high & e.high, b.low & e.low);
                d.o = b.low;
                b = new Db(0, 65535);
                a = new Db(a.high & b.high, a.low & b.low);
                d.n = a.low;
                d.sourceMask = c;
                return d
            };
            xk.prototype = {
                d: null,
                itype: null,
                n: null,
                o: null,
                programType: null,
                q: null,
                s: null,
                sourceMask: null,
                type: null,
                toGLSL: function(a, b) {
                    null == b && (b = 0);
                    null == a && (a = !0);
                    if (3 == this.type) return this.programType == bg.VERTEX ? "gl_Position" : "gl_FragColor";
                    var c = 228 == this.s && 15 == this.sourceMask,
                        d = "";
                    if (5 != this.type && !c)
                        for (c =
                            0; 4 > c;) {
                            var e = c++;
                            if (0 != (this.sourceMask & 1 << e)) switch (this.s >> 2 * e & 3) {
                                case 0:
                                    d += "x";
                                    break;
                                case 1:
                                    d += "y";
                                    break;
                                case 2:
                                    d += "z";
                                    break;
                                case 3:
                                    d += "w"
                            }
                        }
                    c = af.prefixFromType(this.type, this.programType);
                    if (0 == this.d) c += this.n + b;
                    else {
                        c += this.o;
                        e = "";
                        switch (this.q) {
                            case 0:
                                e = "x";
                                break;
                            case 1:
                                e = "y";
                                break;
                            case 2:
                                e = "z";
                                break;
                            case 3:
                                e = "w"
                        }
                        e = af.prefixFromType(this.itype, this.programType) + this.n + "." + e;
                        c += "[ int(" + e + ") +" + b + "]"
                    }
                    a && "" != d && (c += "." + d);
                    return c
                },
                __class__: xk
            };
            var Kc = function(a) {
                bb.call(this);
                this.__context =
                    a;
                var b = this.__context.gl;
                this.__textureID = b.createTexture();
                this.__textureContext = this.__context.__context;
                if (null == Kc.__supportsBGRA) {
                    Kc.__textureInternalFormat = b.RGBA;
                    Kc.__supportsBGRA = !1;
                    Kc.__textureFormat = b.RGBA;
                    Kc.__compressedFormats = new we;
                    Kc.__compressedFormatsAlpha = new we;
                    a = b.getExtension("WEBGL_compressed_texture_s3tc");
                    var c = b.getExtension("WEBGL_compressed_texture_etc1");
                    b = b.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                    null != a && (Kc.__compressedFormats.set(0, a.COMPRESSED_RGBA_S3TC_DXT1_EXT),
                        Kc.__compressedFormatsAlpha.set(0, a.COMPRESSED_RGBA_S3TC_DXT5_EXT));
                    null != c && (Kc.__compressedFormats.set(2, c.COMPRESSED_RGB_ETC1_WEBGL), Kc.__compressedFormatsAlpha.set(2, c.COMPRESSED_RGB_ETC1_WEBGL));
                    null != b && (Kc.__compressedFormats.set(1, b.COMPRESSED_RGB_PVRTC_4BPPV1_IMG), Kc.__compressedFormatsAlpha.set(1, b.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG))
                }
                this.__internalFormat = Kc.__textureInternalFormat;
                this.__format = Kc.__textureFormat
            };
            g["openfl.display3D.textures.TextureBase"] = Kc;
            Kc.__name__ = ["openfl", "display3D",
                "textures", "TextureBase"
            ];
            Kc.__super__ = bb;
            Kc.prototype = p(bb.prototype, {
                __alphaTexture: null,
                __context: null,
                __format: null,
                __glDepthRenderbuffer: null,
                __glFramebuffer: null,
                __glStencilRenderbuffer: null,
                __height: null,
                __internalFormat: null,
                __optimizeForRenderToTexture: null,
                __samplerState: null,
                __textureContext: null,
                __textureID: null,
                __textureTarget: null,
                __width: null,
                dispose: function() {
                    var a = this.__context.gl;
                    null != this.__alphaTexture && (this.__alphaTexture.dispose(), this.__alphaTexture = null);
                    null != this.__textureID &&
                        (a.deleteTexture(this.__textureID), this.__textureID = null);
                    null != this.__glFramebuffer && (a.deleteFramebuffer(this.__glFramebuffer), this.__glFramebuffer = null);
                    null != this.__glDepthRenderbuffer && (a.deleteRenderbuffer(this.__glDepthRenderbuffer), this.__glDepthRenderbuffer = null);
                    null != this.__glStencilRenderbuffer && (a.deleteRenderbuffer(this.__glStencilRenderbuffer), this.__glStencilRenderbuffer = null)
                },
                __getGLFramebuffer: function(a, b, c) {
                    b = this.__context.gl;
                    null == this.__glFramebuffer && (this.__glFramebuffer =
                        b.createFramebuffer(), this.__context.__bindGLFramebuffer(this.__glFramebuffer), b.framebufferTexture2D(b.FRAMEBUFFER, b.COLOR_ATTACHMENT0, b.TEXTURE_2D, this.__textureID, 0), this.__context.__enableErrorChecking && (c = b.checkFramebufferStatus(b.FRAMEBUFFER), c != b.FRAMEBUFFER_COMPLETE && Za.warn("Error: Context3D.setRenderToTexture status:" + c + " width:" + this.__width + " height:" + this.__height, {
                            fileName: "TextureBase.hx",
                            lineNumber: 201,
                            className: "openfl.display3D.textures.TextureBase",
                            methodName: "__getGLFramebuffer"
                        })));
                    a && null == this.__glDepthRenderbuffer && (this.__context.__bindGLFramebuffer(this.__glFramebuffer), 0 != Hb.__glDepthStencil ? (this.__glStencilRenderbuffer = this.__glDepthRenderbuffer = b.createRenderbuffer(), b.bindRenderbuffer(b.RENDERBUFFER, this.__glDepthRenderbuffer), b.renderbufferStorage(b.RENDERBUFFER, Hb.__glDepthStencil, this.__width, this.__height), b.framebufferRenderbuffer(b.FRAMEBUFFER, b.DEPTH_STENCIL_ATTACHMENT, b.RENDERBUFFER, this.__glDepthRenderbuffer)) : (this.__glDepthRenderbuffer = b.createRenderbuffer(),
                        this.__glStencilRenderbuffer = b.createRenderbuffer(), b.bindRenderbuffer(b.RENDERBUFFER, this.__glDepthRenderbuffer), b.renderbufferStorage(b.RENDERBUFFER, b.DEPTH_COMPONENT16, this.__width, this.__height), b.bindRenderbuffer(b.RENDERBUFFER, this.__glStencilRenderbuffer), b.renderbufferStorage(b.RENDERBUFFER, b.STENCIL_INDEX8, this.__width, this.__height), b.framebufferRenderbuffer(b.FRAMEBUFFER, b.DEPTH_ATTACHMENT, b.RENDERBUFFER, this.__glDepthRenderbuffer), b.framebufferRenderbuffer(b.FRAMEBUFFER, b.STENCIL_ATTACHMENT,
                            b.RENDERBUFFER, this.__glStencilRenderbuffer)), this.__context.__enableErrorChecking && (a = b.checkFramebufferStatus(b.FRAMEBUFFER), a != b.FRAMEBUFFER_COMPLETE && Za.warn("Error: Context3D.setRenderToTexture status:" + a + " width:" + this.__width + " height:" + this.__height, {
                        fileName: "TextureBase.hx",
                        lineNumber: 239,
                        className: "openfl.display3D.textures.TextureBase",
                        methodName: "__getGLFramebuffer"
                    })), b.bindRenderbuffer(b.RENDERBUFFER, null));
                    return this.__glFramebuffer
                },
                __getTexture: function() {
                    return this.__textureID
                },
                __setSamplerState: function(a) {
                    if (!a.equals(this.__samplerState)) {
                        var b = this.__context.gl;
                        this.__textureTarget == this.__context.gl.TEXTURE_CUBE_MAP ? this.__context.__bindGLTextureCubeMap(this.__textureID) : this.__context.__bindGLTexture2D(this.__textureID);
                        var c;
                        switch (a.wrap) {
                            case 0:
                                var d = c = b.CLAMP_TO_EDGE;
                                break;
                            case 1:
                                c = b.CLAMP_TO_EDGE;
                                d = b.REPEAT;
                                break;
                            case 2:
                                d = c = b.REPEAT;
                                break;
                            case 3:
                                c = b.REPEAT;
                                d = b.CLAMP_TO_EDGE;
                                break;
                            default:
                                throw new Z(new Bd("wrap bad enum"));
                        }
                        var e = 5 == a.filter ? b.NEAREST : b.LINEAR;
                        switch (a.mipfilter) {
                            case 0:
                                var f = 5 == a.filter ? b.NEAREST_MIPMAP_LINEAR : b.LINEAR_MIPMAP_LINEAR;
                                break;
                            case 1:
                                f = 5 == a.filter ? b.NEAREST_MIPMAP_NEAREST : b.LINEAR_MIPMAP_NEAREST;
                                break;
                            case 2:
                                f = 5 == a.filter ? b.NEAREST : b.LINEAR;
                                break;
                            default:
                                throw new Z(new Bd("mipfiter bad enum"));
                        }
                        b.texParameteri(this.__textureTarget, b.TEXTURE_MIN_FILTER, f);
                        b.texParameteri(this.__textureTarget, b.TEXTURE_MAG_FILTER, e);
                        b.texParameteri(this.__textureTarget, b.TEXTURE_WRAP_S, c);
                        b.texParameteri(this.__textureTarget, b.TEXTURE_WRAP_T,
                            d);
                        null == this.__samplerState && (this.__samplerState = a.clone());
                        this.__samplerState.copyFrom(a);
                        return !0
                    }
                    return !1
                },
                __uploadFromImage: function(a) {
                    var b = this.__context.gl,
                        c;
                    if (this.__textureTarget == b.TEXTURE_2D) {
                        if (1 == a.buffer.bitsPerPixel) var d = c = b.ALPHA;
                        else c = Kc.__textureInternalFormat, d = Kc.__textureFormat;
                        this.__context.__bindGLTexture2D(this.__textureID);
                        a.type == Gd.DATA || a.get_premultiplied() ? !a.get_premultiplied() && a.get_transparent() && b.pixelStorei(b.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1) : b.pixelStorei(b.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
                            1);
                        a.type == Gd.DATA ? Td.texImage2D(b, b.TEXTURE_2D, 0, c, a.buffer.width, a.buffer.height, 0, d, b.UNSIGNED_BYTE, a.get_data()) : Td.texImage2D(b, b.TEXTURE_2D, 0, c, d, b.UNSIGNED_BYTE, a.get_src());
                        this.__context.__bindGLTexture2D(null)
                    }
                },
                __class__: Kc
            });
            var Hr = function() {};
            g["openfl.display3D.textures.CubeTexture"] = Hr;
            Hr.__name__ = ["openfl", "display3D", "textures", "CubeTexture"];
            Hr.__super__ = Kc;
            Hr.prototype = p(Kc.prototype, {
                __framebufferSurface: null,
                __size: null,
                __getGLFramebuffer: function(a, b, c) {
                    var d = this.__context.gl;
                    null == this.__glFramebuffer && (this.__glFramebuffer = d.createFramebuffer(), this.__framebufferSurface = -1);
                    if (this.__framebufferSurface != c && (this.__framebufferSurface = c, this.__context.__bindGLFramebuffer(this.__glFramebuffer), d.framebufferTexture2D(d.FRAMEBUFFER, d.COLOR_ATTACHMENT0, d.TEXTURE_CUBE_MAP_POSITIVE_X + c, this.__textureID, 0), this.__context.__enableErrorChecking)) {
                        var e = d.checkFramebufferStatus(d.FRAMEBUFFER);
                        e != d.FRAMEBUFFER_COMPLETE && Za.error("Error: Context3D.setRenderToTexture status:" + e + " width:" +
                            this.__width + " height:" + this.__height, {
                                fileName: "CubeTexture.hx",
                                lineNumber: 278,
                                className: "openfl.display3D.textures.CubeTexture",
                                methodName: "__getGLFramebuffer"
                            })
                    }
                    return Kc.prototype.__getGLFramebuffer.call(this, a, b, c)
                },
                __setSamplerState: function(a) {
                    if (Kc.prototype.__setSamplerState.call(this, a)) {
                        var b = this.__context.gl;
                        2 == a.mipfilter || this.__samplerState.mipmapGenerated || (b.generateMipmap(b.TEXTURE_CUBE_MAP), this.__samplerState.mipmapGenerated = !0);
                        if (0 != Hb.__glMaxTextureMaxAnisotropy) {
                            switch (a.filter) {
                                case 0:
                                    a =
                                        16;
                                    break;
                                case 1:
                                    a = 2;
                                    break;
                                case 2:
                                    a = 4;
                                    break;
                                case 3:
                                    a = 8;
                                    break;
                                default:
                                    a = 1
                            }
                            a > Hb.__glMaxTextureMaxAnisotropy && (a = Hb.__glMaxTextureMaxAnisotropy);
                            b.texParameterf(b.TEXTURE_CUBE_MAP, Hb.__glTextureMaxAnisotropy, a)
                        }
                        return !0
                    }
                    return !1
                },
                __class__: Hr
            });
            var Io = function(a, b, c, d, e) {
                Kc.call(this, a);
                this.__width = b;
                this.__height = c;
                this.__optimizeForRenderToTexture = e;
                this.__textureTarget = this.__context.gl.TEXTURE_2D;
                this.uploadFromTypedArray(null);
                e && this.__getGLFramebuffer(!0, 0, 0)
            };
            g["openfl.display3D.textures.RectangleTexture"] =
                Io;
            Io.__name__ = ["openfl", "display3D", "textures", "RectangleTexture"];
            Io.__super__ = Kc;
            Io.prototype = p(Kc.prototype, {
                uploadFromTypedArray: function(a) {
                    var b = this.__context.gl;
                    this.__context.__bindGLTexture2D(this.__textureID);
                    Td.texImage2D(b, this.__textureTarget, 0, this.__internalFormat, this.__width, this.__height, 0, this.__format, b.UNSIGNED_BYTE, a);
                    this.__context.__bindGLTexture2D(null)
                },
                __setSamplerState: function(a) {
                    if (Kc.prototype.__setSamplerState.call(this, a)) {
                        var b = this.__context.gl;
                        if (0 != Hb.__glMaxTextureMaxAnisotropy) {
                            switch (a.filter) {
                                case 0:
                                    a =
                                        16;
                                    break;
                                case 1:
                                    a = 2;
                                    break;
                                case 2:
                                    a = 4;
                                    break;
                                case 3:
                                    a = 8;
                                    break;
                                default:
                                    a = 1
                            }
                            a > Hb.__glMaxTextureMaxAnisotropy && (a = Hb.__glMaxTextureMaxAnisotropy);
                            b.texParameterf(b.TEXTURE_2D, Hb.__glTextureMaxAnisotropy, a)
                        }
                        return !0
                    }
                    return !1
                },
                __class__: Io
            });
            var Jo = function() {};
            g["openfl.display3D.textures.Texture"] = Jo;
            Jo.__name__ = ["openfl", "display3D", "textures", "Texture"];
            Jo.__super__ = Kc;
            Jo.prototype = p(Kc.prototype, {
                __setSamplerState: function(a) {
                    if (Kc.prototype.__setSamplerState.call(this, a)) {
                        var b = this.__context.gl;
                        2 ==
                            a.mipfilter || this.__samplerState.mipmapGenerated || (b.generateMipmap(b.TEXTURE_2D), this.__samplerState.mipmapGenerated = !0);
                        if (0 != Hb.__glMaxTextureMaxAnisotropy) {
                            switch (a.filter) {
                                case 0:
                                    a = 16;
                                    break;
                                case 1:
                                    a = 2;
                                    break;
                                case 2:
                                    a = 4;
                                    break;
                                case 3:
                                    a = 8;
                                    break;
                                default:
                                    a = 1
                            }
                            a > Hb.__glMaxTextureMaxAnisotropy && (a = Hb.__glMaxTextureMaxAnisotropy);
                            b.texParameterf(b.TEXTURE_2D, Hb.__glTextureMaxAnisotropy, a)
                        }
                        return !0
                    }
                    return !1
                },
                __class__: Jo
            });
            var Bd = function(a, b) {
                null == b && (b = 0);
                null == a && (a = "");
                this.message = a;
                this.errorID =
                    b;
                this.name = "Error"
            };
            g["openfl.errors.Error"] = Bd;
            Bd.__name__ = ["openfl", "errors", "Error"];
            Bd.prototype = {
                errorID: null,
                message: null,
                name: null,
                toString: function() {
                    return null != this.message ? this.message : "Error"
                },
                __class__: Bd
            };
            var Yl = function(a) {
                null == a && (a = "");
                Bd.call(this, a);
                this.name = "ArgumentError"
            };
            g["openfl.errors.ArgumentError"] = Yl;
            Yl.__name__ = ["openfl", "errors", "ArgumentError"];
            Yl.__super__ = Bd;
            Yl.prototype = p(Bd.prototype, {
                __class__: Yl
            });
            var Hl = function(a) {
                null == a && (a = "");
                Bd.call(this, a);
                this.name =
                    "IOError"
            };
            g["openfl.errors.IOError"] = Hl;
            Hl.__name__ = ["openfl", "errors", "IOError"];
            Hl.__super__ = Bd;
            Hl.prototype = p(Bd.prototype, {
                __class__: Hl
            });
            var Lo = function(a, b) {
                Hl.call(this, "End of file was encountered");
                this.name = "EOFError";
                this.errorID = 2030
            };
            g["openfl.errors.EOFError"] = Lo;
            Lo.__name__ = ["openfl", "errors", "EOFError"];
            Lo.__super__ = Hl;
            Lo.prototype = p(Hl.prototype, {
                __class__: Lo
            });
            var ue = function(a) {
                null == a && (a = "");
                Bd.call(this, a, 0);
                this.name = "IllegalOperationError"
            };
            g["openfl.errors.IllegalOperationError"] =
                ue;
            ue.__name__ = ["openfl", "errors", "IllegalOperationError"];
            ue.__super__ = Bd;
            ue.prototype = p(Bd.prototype, {
                __class__: ue
            });
            var Wo = function(a) {
                null == a && (a = "");
                Bd.call(this, a, 0);
                this.name = "RangeError"
            };
            g["openfl.errors.RangeError"] = Wo;
            Wo.__name__ = ["openfl", "errors", "RangeError"];
            Wo.__super__ = Bd;
            Wo.prototype = p(Bd.prototype, {
                __class__: Wo
            });
            var Xl = function(a) {
                null == a && (a = "");
                Bd.call(this, a, 0);
                this.name = "TypeError"
            };
            g["openfl.errors.TypeError"] = Xl;
            Xl.__name__ = ["openfl", "errors", "TypeError"];
            Xl.__super__ = Bd;
            Xl.prototype = p(Bd.prototype, {
                __class__: Xl
            });
            var Oa = function(a, b, c) {
                null == c && (c = !1);
                null == b && (b = !1);
                this.type = a;
                this.bubbles = b;
                this.cancelable = c;
                this.eventPhase = 2
            };
            g["openfl.events.Event"] = Oa;
            Oa.__name__ = ["openfl", "events", "Event"];
            Oa.prototype = {
                bubbles: null,
                cancelable: null,
                currentTarget: null,
                eventPhase: null,
                target: null,
                type: null,
                __isCanceled: null,
                __isCanceledNow: null,
                __preventDefault: null,
                isDefaultPrevented: function() {
                    return this.__preventDefault
                },
                preventDefault: function() {
                    this.cancelable && (this.__preventDefault = !0)
                },
                __formatToString: function(a, b) {
                    a = "[" + a;
                    for (var c, d = 0; d < b.length;) {
                        var e = b[d];
                        ++d;
                        c = T.field(this, e);
                        a = "string" == typeof c ? a + (" " + e + '="' + E.string(c) + '"') : a + (" " + e + "=" + E.string(c))
                    }
                    return a + "]"
                },
                __class__: Oa
            };
            var Il = function(a, b, c, d) {
                null == d && (d = !1);
                null == c && (c = !1);
                null == b && (b = !1);
                Oa.call(this, a, b, c);
                this.activating = d
            };
            g["openfl.events.ActivityEvent"] = Il;
            Il.__name__ = ["openfl", "events", "ActivityEvent"];
            Il.__super__ = Oa;
            Il.prototype = p(Oa.prototype, {
                activating: null,
                __class__: Il
            });
            var ii = function(a, b,
                c, d) {
                null == d && (d = "");
                null == c && (c = !1);
                null == b && (b = !1);
                Oa.call(this, a, b, c);
                this.text = d
            };
            g["openfl.events.TextEvent"] = ii;
            ii.__name__ = ["openfl", "events", "TextEvent"];
            ii.__super__ = Oa;
            ii.prototype = p(Oa.prototype, {
                text: null,
                __class__: ii
            });
            var Ig = function(a, b, c, d, e) {
                null == e && (e = 0);
                null == d && (d = "");
                null == c && (c = !1);
                null == b && (b = !1);
                ii.call(this, a, b, c, d);
                this.errorID = e
            };
            g["openfl.events.ErrorEvent"] = Ig;
            Ig.__name__ = ["openfl", "events", "ErrorEvent"];
            Ig.__super__ = ii;
            Ig.prototype = p(ii.prototype, {
                errorID: null,
                __class__: Ig
            });
            var Tl = function(a) {
                this.active = !1;
                this.reset(a)
            };
            g["openfl.events._EventDispatcher.DispatchIterator"] = Tl;
            Tl.__name__ = ["openfl", "events", "_EventDispatcher", "DispatchIterator"];
            Tl.prototype = {
                active: null,
                index: null,
                isCopy: null,
                list: null,
                copy: function() {
                    this.isCopy || (this.list = this.list.slice(), this.isCopy = !0)
                },
                hasNext: function() {
                    return this.index < this.list.length
                },
                next: function() {
                    return this.list[this.index++]
                },
                remove: function(a, b) {
                    if (this.active)
                        if (this.isCopy) {
                            b = this.index;
                            for (var c = this.list.length; b <
                                c;) {
                                var d = b++;
                                if (this.list[d] == a) {
                                    this.list.splice(d, 1);
                                    break
                                }
                            }
                        } else b < this.index && this.index--
                },
                reset: function(a) {
                    this.list = a;
                    this.isCopy = !1;
                    this.index = 0
                },
                start: function() {
                    this.active = !0
                },
                stop: function() {
                    this.active = !1
                },
                __class__: Tl
            };
            var Sl = function(a, b, c) {
                this.callback = a;
                this.useCapture = b;
                this.priority = c
            };
            g["openfl.events._EventDispatcher.Listener"] = Sl;
            Sl.__name__ = ["openfl", "events", "_EventDispatcher", "Listener"];
            Sl.prototype = {
                callback: null,
                priority: null,
                useCapture: null,
                match: function(a, b) {
                    return T.compareMethods(this.callback,
                        a) ? this.useCapture == b : !1
                },
                __class__: Sl
            };
            var uk = function(a, b, c, d, e, f) {
                null == f && (f = 0);
                null == e && (e = !1);
                null == c && (c = !1);
                null == b && (b = !1);
                Oa.call(this, a, b, c);
                this.keyCode = f;
                this.shiftKey = e;
                this.relatedObject = d
            };
            g["openfl.events.FocusEvent"] = uk;
            uk.__name__ = ["openfl", "events", "FocusEvent"];
            uk.__super__ = Oa;
            uk.prototype = p(Oa.prototype, {
                keyCode: null,
                relatedObject: null,
                shiftKey: null,
                __class__: uk
            });
            var Sj = function(a, b, c, d, e) {
                null == e && (e = !1);
                null == d && (d = !1);
                null == c && (c = !1);
                null == b && (b = !1);
                Il.call(this, a, b, c);
                this.fullScreen =
                    d;
                this.interactive = e
            };
            g["openfl.events.FullScreenEvent"] = Sj;
            Sj.__name__ = ["openfl", "events", "FullScreenEvent"];
            Sj.__super__ = Il;
            Sj.prototype = p(Il.prototype, {
                fullScreen: null,
                interactive: null,
                __class__: Sj
            });
            var Jl = function(a, b, c, d) {
                null == c && (c = !1);
                null == b && (b = !0);
                Oa.call(this, a, b, c);
                this.device = d
            };
            g["openfl.events.GameInputEvent"] = Jl;
            Jl.__name__ = ["openfl", "events", "GameInputEvent"];
            Jl.__super__ = Oa;
            Jl.prototype = p(Oa.prototype, {
                device: null,
                __class__: Jl
            });
            var Kr = function(a, b, c, d, e) {
                null == e && (e = !1);
                null ==
                    d && (d = 0);
                null == c && (c = !1);
                null == b && (b = !1);
                this.status = d;
                this.redirected = e;
                Oa.call(this, a, b, c)
            };
            g["openfl.events.HTTPStatusEvent"] = Kr;
            Kr.__name__ = ["openfl", "events", "HTTPStatusEvent"];
            Kr.__super__ = Oa;
            Kr.prototype = p(Oa.prototype, {
                redirected: null,
                responseHeaders: null,
                responseURL: null,
                status: null,
                __class__: Kr
            });
            var Mo = function(a, b, c, d, e) {
                null == e && (e = 0);
                null == d && (d = "");
                null == c && (c = !1);
                null == b && (b = !0);
                Ig.call(this, a, b, c, d, e)
            };
            g["openfl.events.IOErrorEvent"] = Mo;
            Mo.__name__ = ["openfl", "events", "IOErrorEvent"];
            Mo.__super__ = Ig;
            Mo.prototype = p(Ig.prototype, {
                toString: function() {
                    return this.__formatToString("IOErrorEvent", ["type", "bubbles", "cancelable", "text", "errorID"])
                },
                __class__: Mo
            });
            var Dr = function(a, b, c, d, e, f, h, k, m, g, l) {
                null == l && (l = !1);
                null == g && (g = !1);
                null == m && (m = !1);
                null == k && (k = !1);
                null == h && (h = !1);
                null == e && (e = 0);
                null == d && (d = 0);
                null == c && (c = !1);
                null == b && (b = !1);
                Oa.call(this, a, b, c);
                this.charCode = d;
                this.keyCode = e;
                this.keyLocation = null != f ? f : 0;
                this.ctrlKey = h;
                this.altKey = k;
                this.shiftKey = m;
                this.controlKey = g;
                this.commandKey =
                    l
            };
            g["openfl.events.KeyboardEvent"] = Dr;
            Dr.__name__ = ["openfl", "events", "KeyboardEvent"];
            Dr.__super__ = Oa;
            Dr.prototype = p(Oa.prototype, {
                altKey: null,
                charCode: null,
                commandKey: null,
                controlKey: null,
                ctrlKey: null,
                keyCode: null,
                keyLocation: null,
                shiftKey: null,
                __class__: Dr
            });
            var sb = function(a, b, c, d, e, f, h, k, m, g, l, n, p) {
                null == p && (p = 0);
                null == n && (n = !1);
                null == l && (l = 0);
                null == g && (g = !1);
                null == m && (m = !1);
                null == k && (k = !1);
                null == h && (h = !1);
                null == e && (e = 0);
                null == d && (d = 0);
                null == c && (c = !1);
                null == b && (b = !0);
                Oa.call(this, a, b, c);
                this.shiftKey =
                    m;
                this.altKey = k;
                this.ctrlKey = h;
                this.bubbles = b;
                this.relatedObject = f;
                this.delta = l;
                this.localX = d;
                this.localY = e;
                this.buttonDown = g;
                this.commandKey = n;
                this.clickCount = p;
                this.isRelatedObjectInaccessible = !1;
                this.stageY = this.stageX = NaN
            };
            g["openfl.events.MouseEvent"] = sb;
            sb.__name__ = ["openfl", "events", "MouseEvent"];
            sb.__create = function(a, b, c, d, e, f, h) {
                null == h && (h = 0);
                a = new sb(a, !0, !1, e.x, e.y, null, sb.__ctrlKey, sb.__altKey, sb.__shiftKey, sb.__buttonDown, h, sb.__commandKey);
                a.stageX = c;
                a.stageY = d;
                a.target = f;
                return a
            };
            sb.__super__ = Oa;
            sb.prototype = p(Oa.prototype, {
                altKey: null,
                buttonDown: null,
                commandKey: null,
                clickCount: null,
                ctrlKey: null,
                delta: null,
                isRelatedObjectInaccessible: null,
                localX: null,
                localY: null,
                relatedObject: null,
                shiftKey: null,
                stageX: null,
                stageY: null,
                __class__: sb
            });
            var Cl = function(a, b, c, d, e) {
                null == e && (e = 0);
                null == d && (d = 0);
                null == c && (c = !1);
                null == b && (b = !1);
                Oa.call(this, a, b, c);
                this.bytesLoaded = d;
                this.bytesTotal = e
            };
            g["openfl.events.ProgressEvent"] = Cl;
            Cl.__name__ = ["openfl", "events", "ProgressEvent"];
            Cl.__super__ =
                Oa;
            Cl.prototype = p(Oa.prototype, {
                bytesLoaded: null,
                bytesTotal: null,
                __class__: Cl
            });
            var Uo = function(a, b, c, d, e, f) {
                null == f && (f = !0);
                null == c && (c = !1);
                null == b && (b = !1);
                Oa.call(this, a, b, c);
                this.objectMatrix = d;
                this.objectColorTransform = e;
                this.allowSmoothing = f
            };
            g["openfl.events.RenderEvent"] = Uo;
            Uo.__name__ = ["openfl", "events", "RenderEvent"];
            Uo.__super__ = Oa;
            Uo.prototype = p(Oa.prototype, {
                allowSmoothing: null,
                objectColorTransform: null,
                objectMatrix: null,
                renderer: null,
                __class__: Uo
            });
            var Lr = function(a, b, c, d, e) {
                null == e &&
                    (e = 0);
                null == d && (d = "");
                null == c && (c = !1);
                null == b && (b = !1);
                Ig.call(this, a, b, c, d, e)
            };
            g["openfl.events.SecurityErrorEvent"] = Lr;
            Lr.__name__ = ["openfl", "events", "SecurityErrorEvent"];
            Lr.__super__ = Ig;
            Lr.prototype = p(Ig.prototype, {
                toString: function() {
                    return this.__formatToString("SecurityErrorEvent", ["type", "bubbles", "cancelable", "text", "errorID"])
                },
                __class__: Lr
            });
            var xe = function(a, b, c, d, e, f, h, k, m, g, l, n, p, x, u, v, z, w, q, y) {
                null == v && (v = !1);
                null == u && (u = !1);
                null == x && (x = !1);
                null == p && (p = !1);
                null == n && (n = !1);
                null == g && (g =
                    0);
                null == m && (m = 0);
                null == k && (k = 0);
                null == h && (h = 0);
                null == f && (f = 0);
                null == e && (e = !1);
                null == d && (d = 0);
                null == c && (c = !1);
                null == b && (b = !0);
                Oa.call(this, a, b, c);
                this.touchPointID = d;
                this.isPrimaryTouchPoint = e;
                this.localX = f;
                this.localY = h;
                this.sizeX = k;
                this.sizeY = m;
                this.pressure = g;
                this.relatedObject = l;
                this.ctrlKey = n;
                this.altKey = p;
                this.shiftKey = x;
                this.commandKey = u;
                this.controlKey = v;
                this.stageY = this.stageX = NaN
            };
            g["openfl.events.TouchEvent"] = xe;
            xe.__name__ = ["openfl", "events", "TouchEvent"];
            xe.__create = function(a, b, c, d,
                e, f) {
                a = new xe(a, !0, !1, 0, !0, e.x, e.y, 1, 1, 1);
                a.stageX = c;
                a.stageY = d;
                a.target = f;
                return a
            };
            xe.__super__ = Oa;
            xe.prototype = p(Oa.prototype, {
                altKey: null,
                commandKey: null,
                controlKey: null,
                ctrlKey: null,
                isPrimaryTouchPoint: null,
                localX: null,
                localY: null,
                pressure: null,
                relatedObject: null,
                shiftKey: null,
                sizeX: null,
                sizeY: null,
                stageX: null,
                stageY: null,
                touchPointID: null,
                __class__: xe
            });
            var Cr = function(a, b, c, d) {
                null == c && (c = !0);
                null == b && (b = !0);
                Ig.call(this, a, b, c);
                this.error = d
            };
            g["openfl.events.UncaughtErrorEvent"] = Cr;
            Cr.__name__ = ["openfl", "events", "UncaughtErrorEvent"];
            Cr.__super__ = Ig;
            Cr.prototype = p(Ig.prototype, {
                error: null,
                __class__: Cr
            });
            var Ar = function() {
                bb.call(this)
            };
            g["openfl.events.UncaughtErrorEvents"] = Ar;
            Ar.__name__ = ["openfl", "events", "UncaughtErrorEvents"];
            Ar.__super__ = bb;
            Ar.prototype = p(bb.prototype, {
                __class__: Ar
            });
            var dl = function() {};
            g["openfl.external.ExternalInterface"] = dl;
            dl.__name__ = ["openfl", "external", "ExternalInterface"];
            dl.call = function(a, b, c, d, e, f) {
                if (!(new Ga("^\\(.+\\)$", "")).match(a)) {
                    var h = a.split(".").slice(0,
                        -1).join(".");
                    0 < h.length && (a += ".bind(" + h + ")")
                }
                try {
                    var k = Xo.eval(a)
                } catch (m) {
                    return vb.lastException = m, null
                }
                return Q["typeof"](k) != Yb.TFunction ? null : null == b ? k() : null == c ? k(b) : null == d ? k(b, c) : null == e ? k(b, c, d) : null == f ? k(b, c, d, e) : k(b, c, d, e, f)
            };
            var Mr = function() {
                null == this.__glFragmentSource && (this.__glFragmentSource = "uniform sampler2D openfl_Texture;\n\n\t\tvarying vec2 vBlurCoords[7];\n\n\t\tvoid main(void) {\n\n\t\t\tvec4 sum = vec4(0.0);\n\t\t\tsum += texture2D(openfl_Texture, vBlurCoords[0]) * 0.00443;\n\t\t\tsum += texture2D(openfl_Texture, vBlurCoords[1]) * 0.05399;\n\t\t\tsum += texture2D(openfl_Texture, vBlurCoords[2]) * 0.24197;\n\t\t\tsum += texture2D(openfl_Texture, vBlurCoords[3]) * 0.39894;\n\t\t\tsum += texture2D(openfl_Texture, vBlurCoords[4]) * 0.24197;\n\t\t\tsum += texture2D(openfl_Texture, vBlurCoords[5]) * 0.05399;\n\t\t\tsum += texture2D(openfl_Texture, vBlurCoords[6]) * 0.00443;\n\n\t\t\tgl_FragColor = sum;\n\n\t\t}");
                null == this.__glVertexSource && (this.__glVertexSource = "attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tuniform mat4 openfl_Matrix;\n\n\t\tuniform vec2 uRadius;\n\t\tvarying vec2 vBlurCoords[7];\n\t\tuniform vec2 uTextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t\tvec2 r = uRadius / uTextureSize;\n\t\t\tvBlurCoords[0] = openfl_TextureCoord - r;\n\t\t\tvBlurCoords[1] = openfl_TextureCoord - r * 0.75;\n\t\t\tvBlurCoords[2] = openfl_TextureCoord - r * 0.5;\n\t\t\tvBlurCoords[3] = openfl_TextureCoord;\n\t\t\tvBlurCoords[4] = openfl_TextureCoord + r * 0.5;\n\t\t\tvBlurCoords[5] = openfl_TextureCoord + r * 0.75;\n\t\t\tvBlurCoords[6] = openfl_TextureCoord + r;\n\n\t\t}");
                Dc.call(this);
                this.uRadius.value = [0, 0];
                this.__isGenerated = !0;
                this.__initGL()
            };
            g["openfl.filters._BlurFilter.BlurShader"] = Mr;
            Mr.__name__ = ["openfl", "filters", "_BlurFilter", "BlurShader"];
            Mr.__super__ = Dc;
            Mr.prototype = p(Dc.prototype, {
                __update: function() {
                    this.uTextureSize.value = [this.__texture.input.width, this.__texture.input.height];
                    Dc.prototype.__update.call(this)
                },
                uRadius: null,
                uTextureSize: null,
                __class__: Mr
            });
            var lh = function(a, b, c) {
                null == c && (c = 1);
                null == b && (b = 4);
                null == a && (a = 4);
                ig.call(this);
                this.set_blurX(a);
                this.set_blurY(b);
                this.set_quality(c);
                this.__needSecondBitmapData = !0;
                this.__preserveObject = !1;
                this.__renderDirty = !0
            };
            g["openfl.filters.BlurFilter"] = lh;
            lh.__name__ = ["openfl", "filters", "BlurFilter"];
            lh.__super__ = ig;
            lh.prototype = p(ig.prototype, {
                __blurX: null,
                __blurY: null,
                __horizontalPasses: null,
                __quality: null,
                __verticalPasses: null,
                __applyFilter: function(a, b, c, d) {
                    Mh.stamp();
                    c = Jd.gaussianBlur(a.image, b.image, c.__toLimeRectangle(), d.__toLimeVector2(), this.__blurX, this.__blurY, this.__quality);
                    Mh.stamp();
                    return c == a.image ? a : b
                },
                __initShader: function(a, b, c) {
                    b < this.__horizontalPasses ? (a = Math.pow(.5, b >> 1), lh.__blurShader.uRadius.value[0] = this.get_blurX() * a, lh.__blurShader.uRadius.value[1] = 0) : (a = Math.pow(.5, b - this.__horizontalPasses >> 1), lh.__blurShader.uRadius.value[0] = 0, lh.__blurShader.uRadius.value[1] = this.get_blurY() * a);
                    return lh.__blurShader
                },
                get_blurX: function() {
                    return this.__blurX
                },
                set_blurX: function(a) {
                    a != this.__blurX && (this.__blurX = a, this.__renderDirty = !0, this.__rightExtension = this.__leftExtension =
                        0 < a ? Math.ceil(a) : 0);
                    return a
                },
                get_blurY: function() {
                    return this.__blurY
                },
                set_blurY: function(a) {
                    a != this.__blurY && (this.__blurY = a, this.__renderDirty = !0, this.__bottomExtension = this.__topExtension = 0 < a ? Math.ceil(a) : 0);
                    return a
                },
                set_quality: function(a) {
                    this.__horizontalPasses = 0 >= this.__blurX ? 0 : Math.round(a / 4 * this.__blurX) + 1;
                    this.__verticalPasses = 0 >= this.__blurY ? 0 : Math.round(a / 4 * this.__blurY) + 1;
                    this.__numShaderPasses = this.__horizontalPasses + this.__verticalPasses;
                    a != this.__quality && (this.__renderDirty = !0);
                    return this.__quality = a
                },
                __class__: lh
            });
            var No = function() {
                null == this.__glFragmentSource && (this.__glFragmentSource = "varying vec2 openfl_TextureCoordv;\n\t\tuniform sampler2D openfl_Texture;\n\n\t\tuniform mat4 uMultipliers;\n\t\tuniform vec4 uOffsets;\n\n\t\tvoid main(void) {\n\n\t\t\tvec4 color = texture2D (openfl_Texture, openfl_TextureCoordv);\n\n\t\t\tif (color.a == 0.0) {\n\n\t\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t\t} else {\n\n\t\t\t\tcolor = vec4 (color.rgb / color.a, color.a);\n\t\t\t\tcolor = uOffsets + color * uMultipliers;\n\n\t\t\t\tgl_FragColor = vec4 (color.rgb * color.a, color.a);\n\n\t\t\t}\n\n\t\t}");
                null == this.__glVertexSource && (this.__glVertexSource = "attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\n\t\t}");
                Dc.call(this);
                this.uMultipliers.value = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
                this.uOffsets.value = [0, 0, 0, 0];
                this.__isGenerated = !0;
                this.__initGL()
            };
            g["openfl.filters._ColorMatrixFilter.ColorMatrixShader"] = No;
            No.__name__ = ["openfl", "filters", "_ColorMatrixFilter", "ColorMatrixShader"];
            No.__super__ = Dc;
            No.prototype = p(Dc.prototype, {
                init: function(a) {
                    var b = this.uMultipliers.value,
                        c = this.uOffsets.value;
                    b[0] = a[0];
                    b[1] = a[1];
                    b[2] = a[2];
                    b[3] = a[3];
                    b[4] = a[5];
                    b[5] = a[6];
                    b[6] = a[7];
                    b[7] = a[8];
                    b[8] = a[10];
                    b[9] = a[11];
                    b[10] = a[12];
                    b[11] = a[13];
                    b[12] = a[15];
                    b[13] = a[16];
                    b[14] = a[17];
                    b[15] = a[18];
                    c[0] = a[4] / 255;
                    c[1] = a[9] / 255;
                    c[2] = a[14] / 255;
                    c[3] = a[19] / 255
                },
                uMultipliers: null,
                uOffsets: null,
                __class__: No
            });
            var Eh = function(a) {
                ig.call(this);
                this.set_matrix(a);
                this.__numShaderPasses = 1;
                this.__needSecondBitmapData = !1
            };
            g["openfl.filters.ColorMatrixFilter"] = Eh;
            Eh.__name__ = ["openfl", "filters", "ColorMatrixFilter"];
            Eh.__super__ = ig;
            Eh.prototype = p(ig.prototype, {
                __matrix: null,
                __applyFilter: function(a, b, c, d) {
                    var e = b.image,
                        f = a.image;
                    Ua.convertToData(e);
                    Ua.convertToData(f);
                    var h = e.get_data(),
                        k = f.get_data(),
                        m = E["int"](d.x - c.x);
                    d = E["int"](d.y - c.y);
                    b = 4 * b.width;
                    var g = 4 * a.width,
                        l = e.buffer.format,
                        n = f.buffer.format;
                    e = e.buffer.premultiplied;
                    f = f.buffer.premultiplied;
                    for (var p, x = 0, u, v, z = E["int"](c.y), w = E["int"](c.height); z < w;)
                        for (var q = z++, y = E["int"](c.x), L = E["int"](c.width); y < L;) {
                            v = y++;
                            u = q * b + 4 * v;
                            v = (q + m) * g + 4 * (v + d);
                            switch (l) {
                                case 0:
                                    p = (h[u] & 255) << 24 | (h[u + 1] & 255) << 16 | (h[u + 2] & 255) << 8 | h[u + 3] & 255;
                                    break;
                                case 1:
                                    p = (h[u + 1] & 255) << 24 | (h[u + 2] & 255) << 16 | (h[u + 3] & 255) << 8 | h[u] & 255;
                                    break;
                                case 2:
                                    p = (h[u + 2] & 255) << 24 | (h[u + 1] & 255) << 16 | (h[u] & 255) << 8 | h[u + 3] & 255
                            }
                            e && 0 != (p & 255) && 255 != (p & 255) && (ea.unmult =
                                255 / (p & 255), p = (ea.__clamp[Math.round((p >>> 24 & 255) * ea.unmult)] & 255) << 24 | (ea.__clamp[Math.round((p >>> 16 & 255) * ea.unmult)] & 255) << 16 | (ea.__clamp[Math.round((p >>> 8 & 255) * ea.unmult)] & 255) << 8 | p & 255);
                            0 == (p & 255) ? x = 0 : (x = (E["int"](Math.max(0, Math.min(this.__matrix[0] * (p >>> 24 & 255) + this.__matrix[1] * (p >>> 16 & 255) + this.__matrix[2] * (p >>> 8 & 255) + this.__matrix[3] * (p & 255) + this.__matrix[4], 255))) & 255) << 24 | (x >>> 16 & 255) << 16 | (x >>> 8 & 255) << 8 | x & 255, u = E["int"](Math.max(0, Math.min(this.__matrix[5] * (p >>> 24 & 255) + this.__matrix[6] *
                                (p >>> 16 & 255) + this.__matrix[7] * (p >>> 8 & 255) + this.__matrix[8] * (p & 255) + this.__matrix[9], 255))), x = (x >>> 24 & 255) << 24 | (u & 255) << 16 | (x >>> 8 & 255) << 8 | x & 255, u = E["int"](Math.max(0, Math.min(this.__matrix[10] * (p >>> 24 & 255) + this.__matrix[11] * (p >>> 16 & 255) + this.__matrix[12] * (p >>> 8 & 255) + this.__matrix[13] * (p & 255) + this.__matrix[14], 255))), x = (x >>> 24 & 255) << 24 | (x >>> 16 & 255) << 16 | (u & 255) << 8 | x & 255, u = E["int"](Math.max(0, Math.min(this.__matrix[15] * (p >>> 24 & 255) + this.__matrix[16] * (p >>> 16 & 255) + this.__matrix[17] * (p >>> 8 & 255) + this.__matrix[18] *
                                (p & 255) + this.__matrix[19], 255))), x = (x >>> 24 & 255) << 24 | (x >>> 16 & 255) << 16 | (x >>> 8 & 255) << 8 | u & 255);
                            f && (0 == (x & 255) ? 0 != x && (x = 0) : 255 != (x & 255) && (ea.a16 = ea.__alpha16[x & 255], x = ((x >>> 24 & 255) * ea.a16 >> 16 & 255) << 24 | ((x >>> 16 & 255) * ea.a16 >> 16 & 255) << 16 | ((x >>> 8 & 255) * ea.a16 >> 16 & 255) << 8 | x & 255));
                            switch (n) {
                                case 0:
                                    k[v] = x >>> 24 & 255;
                                    k[v + 1] = x >>> 16 & 255;
                                    k[v + 2] = x >>> 8 & 255;
                                    k[v + 3] = x & 255;
                                    break;
                                case 1:
                                    k[v] = x & 255;
                                    k[v + 1] = x >>> 24 & 255;
                                    k[v + 2] = x >>> 16 & 255;
                                    k[v + 3] = x >>> 8 & 255;
                                    break;
                                case 2:
                                    k[v] = x >>> 8 & 255, k[v + 1] = x >>> 16 & 255, k[v + 2] = x >>> 24 & 255, k[v + 3] = x &
                                        255
                            }
                        }
                    a.image.dirty = !0;
                    return a
                },
                __initShader: function(a, b, c) {
                    Eh.__colorMatrixShader.init(this.get_matrix());
                    return Eh.__colorMatrixShader
                },
                get_matrix: function() {
                    return this.__matrix
                },
                set_matrix: function(a) {
                    null == a && (a = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0]);
                    return this.__matrix = a
                },
                __class__: Eh
            });
            var gv = function() {};
            g["openfl.filters._ConvolutionFilter.ConvolutionShader"] = gv;
            gv.__name__ = ["openfl", "filters", "_ConvolutionFilter", "ConvolutionShader"];
            gv.__super__ = Dc;
            gv.prototype = p(Dc.prototype, {
                uBias: null,
                uConvoMatrix: null,
                uDivisor: null,
                uPreserveAlpha: null,
                __class__: gv
            });
            var hv = function() {};
            g["openfl.filters._DisplacementMapFilter.DisplacementMapShader"] = hv;
            hv.__name__ = ["openfl", "filters", "_DisplacementMapFilter", "DisplacementMapShader"];
            hv.__super__ = Dc;
            hv.prototype = p(Dc.prototype, {
                mapTextureCoordsOffset: null,
                mapTexture: null,
                uOffsets: null,
                uDisplacements: null,
                __class__: hv
            });
            var Nr = function() {
                null == this.__glFragmentSource && (this.__glFragmentSource = "\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform sampler2D sourceBitmap;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tgl_FragColor = texture2D(openfl_Texture, textureCoords.zw);\n\t\t}\n\t");
                null == this.__glVertexSource && (this.__glVertexSource = "attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform vec2 offset;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\ttextureCoords = vec4(openfl_TextureCoord, openfl_TextureCoord - offset / openfl_TextureSize);\n\t\t}\n\t");
                Dc.call(this);
                this.offset.value = [0, 0];
                this.__isGenerated = !0;
                this.__initGL()
            };
            g["openfl.filters._DropShadowFilter.HideShader"] = Nr;
            Nr.__name__ = ["openfl", "filters", "_DropShadowFilter", "HideShader"];
            Nr.__super__ = Dc;
            Nr.prototype = p(Dc.prototype, {
                offset: null,
                sourceBitmap: null,
                __class__: Nr
            });
            var Kl = function(a, b, c, d, e, f, h, k, m, g, l) {
                null == l && (l = !1);
                null == g && (g = !1);
                null == m && (m = !1);
                null == k && (k = 1);
                null == h && (h = 1);
                null == f && (f = 4);
                null == e && (e = 4);
                null == d && (d = 1);
                null == c && (c = 0);
                null == b && (b = 45);
                null == a && (a = 4);
                ig.call(this);
                this.__offsetY = this.__offsetX = 0;
                this.__distance = a;
                this.__angle =
                    b;
                this.__color = c;
                this.__alpha = d;
                this.__blurX = e;
                this.__blurY = f;
                this.__strength = h;
                this.__quality = k;
                this.__inner = m;
                this.__knockout = g;
                this.__hideObject = l;
                this.__updateSize();
                this.__renderDirty = this.__preserveObject = this.__needSecondBitmapData = !0
            };
            g["openfl.filters.DropShadowFilter"] = Kl;
            Kl.__name__ = ["openfl", "filters", "DropShadowFilter"];
            Kl.__super__ = ig;
            Kl.prototype = p(ig.prototype, {
                __alpha: null,
                __angle: null,
                __blurX: null,
                __blurY: null,
                __color: null,
                __distance: null,
                __hideObject: null,
                __horizontalPasses: null,
                __inner: null,
                __knockout: null,
                __offsetX: null,
                __offsetY: null,
                __quality: null,
                __strength: null,
                __verticalPasses: null,
                __applyFilter: function(a, b, c, d) {
                    var e = this.__color >> 16 & 255,
                        f = this.__color >> 8 & 255,
                        h = this.__color & 255;
                    d = new Ta(d.x + this.__offsetX, d.y + this.__offsetY);
                    c = Jd.gaussianBlur(a.image, b.image, c.__toLimeRectangle(), d.__toLimeVector2(), this.__blurX, this.__blurY, this.__quality, this.__strength);
                    c.colorTransform(c.get_rect(), (new mc(0, 0, 0, this.__alpha, e, f, h, 0)).__toLimeColorMatrix());
                    return c == a.image ?
                        a : b
                },
                __initShader: function(a, b, c) {
                    if (this.__inner && 0 == b) return Qc.__invertAlphaShader;
                    a = b - (this.__inner ? 1 : 0);
                    b = this.__horizontalPasses + this.__verticalPasses;
                    if (a < b) {
                        c = Qc.__blurAlphaShader;
                        if (a < this.__horizontalPasses) {
                            var d = .5 * Math.pow(.5, a >> 1);
                            c.uRadius.value[0] = this.get_blurX() * d;
                            c.uRadius.value[1] = 0
                        } else d = .5 * Math.pow(.5, a - this.__horizontalPasses >> 1), c.uRadius.value[0] = 0, c.uRadius.value[1] = this.get_blurY() * d;
                        c.uColor.value[0] = (this.get_color() >> 16 & 255) / 255;
                        c.uColor.value[1] = (this.get_color() >>
                            8 & 255) / 255;
                        c.uColor.value[2] = (this.get_color() & 255) / 255;
                        c.uColor.value[3] = this.get_alpha();
                        c.uStrength.value[0] = a == b - 1 ? this.__strength : 1;
                        return c
                    }
                    if (this.__inner) {
                        if (this.__knockout || this.__hideObject) return a = Qc.__innerCombineKnockoutShader, a.sourceBitmap.input = c, a.offset.value[0] = this.__offsetX, a.offset.value[1] = this.__offsetY, a;
                        a = Qc.__innerCombineShader;
                        a.sourceBitmap.input = c;
                        a.offset.value[0] = this.__offsetX;
                        a.offset.value[1] = this.__offsetY;
                        return a
                    }
                    if (this.__knockout) return a = Qc.__combineKnockoutShader,
                        a.sourceBitmap.input = c, a.offset.value[0] = this.__offsetX, a.offset.value[1] = this.__offsetY, a;
                    if (this.__hideObject) return a = Kl.__hideShader, a.sourceBitmap.input = c, a.offset.value[0] = this.__offsetX, a.offset.value[1] = this.__offsetY, a;
                    a = Qc.__combineShader;
                    a.sourceBitmap.input = c;
                    a.offset.value[0] = this.__offsetX;
                    a.offset.value[1] = this.__offsetY;
                    return a
                },
                __updateSize: function() {
                    this.__offsetX = E["int"](this.__distance * Math.cos(this.__angle * Math.PI / 180));
                    this.__offsetY = E["int"](this.__distance * Math.sin(this.__angle *
                        Math.PI / 180));
                    this.__topExtension = Math.ceil((0 > this.__offsetY ? -this.__offsetY : 0) + this.__blurY);
                    this.__bottomExtension = Math.ceil((0 < this.__offsetY ? this.__offsetY : 0) + this.__blurY);
                    this.__leftExtension = Math.ceil((0 > this.__offsetX ? -this.__offsetX : 0) + this.__blurX);
                    this.__rightExtension = Math.ceil((0 < this.__offsetX ? this.__offsetX : 0) + this.__blurX);
                    this.__calculateNumShaderPasses()
                },
                __calculateNumShaderPasses: function() {
                    this.__horizontalPasses = 0 >= this.__blurX ? 0 : Math.round(this.__quality / 4 * this.__blurX) + 1;
                    this.__verticalPasses = 0 >= this.__blurY ? 0 : Math.round(this.__quality / 4 * this.__blurY) + 1;
                    this.__numShaderPasses = this.__horizontalPasses + this.__verticalPasses + (this.__inner ? 2 : 1)
                },
                get_alpha: function() {
                    return this.__alpha
                },
                get_blurX: function() {
                    return this.__blurX
                },
                get_blurY: function() {
                    return this.__blurY
                },
                get_color: function() {
                    return this.__color
                },
                __class__: Kl
            });
            var Er = function(a) {
                null != a && 16 == a.get_length() ? this.rawData = a.concat(null) : this.rawData = M.toFloatVector(null, null, null, [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0,
                    0, 0, 1
                ])
            };
            g["openfl.geom.Matrix3D"] = Er;
            Er.__name__ = ["openfl", "geom", "Matrix3D"];
            Er.prototype = {
                rawData: null,
                append: function(a) {
                    var b = this.rawData.get(0),
                        c = this.rawData.get(4),
                        d = this.rawData.get(8),
                        e = this.rawData.get(12),
                        f = this.rawData.get(1),
                        h = this.rawData.get(5),
                        k = this.rawData.get(9),
                        m = this.rawData.get(13),
                        g = this.rawData.get(2),
                        l = this.rawData.get(6),
                        n = this.rawData.get(10),
                        p = this.rawData.get(14),
                        x = this.rawData.get(3),
                        u = this.rawData.get(7),
                        v = this.rawData.get(11),
                        z = this.rawData.get(15),
                        w = a.rawData.get(0),
                        q = a.rawData.get(4),
                        y = a.rawData.get(8),
                        L = a.rawData.get(12),
                        A = a.rawData.get(1),
                        D = a.rawData.get(5),
                        Ka = a.rawData.get(9),
                        t = a.rawData.get(13),
                        B = a.rawData.get(2),
                        E = a.rawData.get(6),
                        F = a.rawData.get(10),
                        pa = a.rawData.get(14),
                        H = a.rawData.get(3),
                        K = a.rawData.get(7),
                        J = a.rawData.get(11);
                    a = a.rawData.get(15);
                    this.rawData.set(0, b * w + f * q + g * y + x * L);
                    this.rawData.set(1, b * A + f * D + g * Ka + x * t);
                    this.rawData.set(2, b * B + f * E + g * F + x * pa);
                    this.rawData.set(3, b * H + f * K + g * J + x * a);
                    this.rawData.set(4, c * w + h * q + l * y + u * L);
                    this.rawData.set(5, c * A + h * D +
                        l * Ka + u * t);
                    this.rawData.set(6, c * B + h * E + l * F + u * pa);
                    this.rawData.set(7, c * H + h * K + l * J + u * a);
                    this.rawData.set(8, d * w + k * q + n * y + v * L);
                    this.rawData.set(9, d * A + k * D + n * Ka + v * t);
                    this.rawData.set(10, d * B + k * E + n * F + v * pa);
                    this.rawData.set(11, d * H + k * K + n * J + v * a);
                    this.rawData.set(12, e * w + m * q + p * y + z * L);
                    this.rawData.set(13, e * A + m * D + p * Ka + z * t);
                    this.rawData.set(14, e * B + m * E + p * F + z * pa);
                    this.rawData.set(15, e * H + m * K + p * J + z * a)
                },
                appendTranslation: function(a, b, c) {
                    var d = this.rawData;
                    d.set(12, d.get(12) + a);
                    a = this.rawData;
                    a.set(13, a.get(13) + b);
                    b = this.rawData;
                    b.set(14, b.get(14) + c)
                },
                copyRawDataFrom: function(a, b, c) {
                    null == c && (c = !1);
                    null == b && (b = 0);
                    c && this.transpose();
                    for (var d = 0, e = a.get_length() - b; d < e;) {
                        var f = d++;
                        this.rawData.set(f, a.get(f + b))
                    }
                    c && this.transpose()
                },
                identity: function() {
                    this.rawData = M.toFloatVector(null, null, null, [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1])
                },
                transpose: function() {
                    var a = this.rawData.copy();
                    this.rawData.set(1, a.get(4));
                    this.rawData.set(2, a.get(8));
                    this.rawData.set(3, a.get(12));
                    this.rawData.set(4, a.get(1));
                    this.rawData.set(6, a.get(9));
                    this.rawData.set(7,
                        a.get(13));
                    this.rawData.set(8, a.get(2));
                    this.rawData.set(9, a.get(6));
                    this.rawData.set(11, a.get(14));
                    this.rawData.set(12, a.get(3));
                    this.rawData.set(13, a.get(7));
                    this.rawData.set(14, a.get(11))
                },
                __class__: Er
            };
            var Ta = function(a, b) {
                null == b && (b = 0);
                null == a && (a = 0);
                this.x = a;
                this.y = b
            };
            g["openfl.geom.Point"] = Ta;
            Ta.__name__ = ["openfl", "geom", "Point"];
            Ta.distance = function(a, b) {
                var c = a.x - b.x;
                a = a.y - b.y;
                return Math.sqrt(c * c + a * a)
            };
            Ta.interpolate = function(a, b, c) {
                return new Ta(b.x + c * (a.x - b.x), b.y + c * (a.y - b.y))
            };
            Ta.polar =
                function(a, b) {
                    return new Ta(a * Math.cos(b), a * Math.sin(b))
                };
            Ta.prototype = {
                x: null,
                y: null,
                clone: function() {
                    return new Ta(this.x, this.y)
                },
                copyFrom: function(a) {
                    this.x = a.x;
                    this.y = a.y
                },
                setTo: function(a, b) {
                    this.x = a;
                    this.y = b
                },
                __toLimeVector2: function() {
                    null == Ta.__limeVector2 && (Ta.__limeVector2 = new ok);
                    Ta.__limeVector2.setTo(this.x, this.y);
                    return Ta.__limeVector2
                },
                __class__: Ta
            };
            var Vo = function(a) {
                this.__colorTransform = new mc;
                this.concatenatedColorTransform = new mc;
                this.pixelBounds = new hb;
                this.__displayObject =
                    a;
                this.__hasMatrix = !0
            };
            g["openfl.geom.Transform"] = Vo;
            Vo.__name__ = ["openfl", "geom", "Transform"];
            Vo.prototype = {
                concatenatedColorTransform: null,
                pixelBounds: null,
                __colorTransform: null,
                __displayObject: null,
                __hasMatrix: null,
                __hasMatrix3D: null,
                get_colorTransform: function() {
                    return this.__colorTransform
                },
                set_colorTransform: function(a) {
                    this.__colorTransform.__equals(a, !1) || (this.__colorTransform.__copyFrom(a), null != a && this.__displayObject.set_alpha(a.alphaMultiplier), this.__displayObject.__setRenderDirty());
                    return this.__colorTransform
                },
                get_matrix: function() {
                    return this.__hasMatrix ? this.__displayObject.__transform.clone() : null
                },
                set_matrix: function(a) {
                    if (null == a) return this.__hasMatrix = !1, null;
                    this.__hasMatrix = !0;
                    this.__hasMatrix3D = !1;
                    null != this.__displayObject && this.__setTransform(a.a, a.b, a.c, a.d, a.tx, a.ty);
                    return a
                },
                __setTransform: function(a, b, c, d, e, f) {
                    if (null != this.__displayObject) {
                        var h = this.__displayObject.__transform;
                        if (h.a != a || h.b != b || h.c != c || h.d != d || h.tx != e || h.ty != f) {
                            var k = 0 == b ? a : Math.sqrt(a *
                                a + b * b);
                            var m = 0 == c ? d : Math.sqrt(c * c + d * d);
                            this.__displayObject.__scaleX = k;
                            this.__displayObject.__scaleY = m;
                            k = 180 / Math.PI * Math.atan2(d, c) - 90;
                            k != this.__displayObject.__rotation && (this.__displayObject.__rotation = k, k *= Math.PI / 180, this.__displayObject.__rotationSine = Math.sin(k), this.__displayObject.__rotationCosine = Math.cos(k));
                            h.a = a;
                            h.b = b;
                            h.c = c;
                            h.d = d;
                            h.tx = e;
                            h.ty = f;
                            this.__displayObject.__setTransformDirty()
                        }
                    }
                },
                __class__: Vo
            };
            var yw = function() {};
            g["openfl.geom.Vector3D"] = yw;
            yw.__name__ = ["openfl", "geom", "Vector3D"];
            yw.prototype = {
                __class__: yw
            };
            var Sw = function() {};
            g["openfl.media.ID3Info"] = Sw;
            Sw.__name__ = ["openfl", "media", "ID3Info"];
            var yk = function(a, b) {
                bb.call(this, this);
                this.bytesTotal = this.bytesLoaded = 0;
                this.isBuffering = !1;
                this.url = null;
                null != a && this.load(a, b)
            };
            g["openfl.media.Sound"] = yk;
            yk.__name__ = ["openfl", "media", "Sound"];
            yk.fromAudioBuffer = function(a) {
                var b = new yk;
                b.__buffer = a;
                return b
            };
            yk.__super__ = bb;
            yk.prototype = p(bb.prototype, {
                bytesLoaded: null,
                bytesTotal: null,
                isBuffering: null,
                url: null,
                __buffer: null,
                load: function(a, b) {
                    var c = this;
                    this.url = a.url;
                    a = Da.getLibrary("default");
                    if (null != a && a.cachedAudioBuffers.exists(this.url)) this.AudioBuffer_onURLLoad(a.cachedAudioBuffers.get(this.url));
                    else ed.loadFromFile(this.url).onComplete(q(this, this.AudioBuffer_onURLLoad)).onError(function(a) {
                        c.AudioBuffer_onURLLoad(null)
                    })
                },
                play: function(a, b, c) {
                    null == b && (b = 0);
                    null == a && (a = 0);
                    if (null == this.__buffer || 32 <= Pf.__soundChannels.length) return null;
                    c = null == c ? new Mi : c.clone();
                    var d = Pf.__soundTransform.pan + c.pan;
                    1 < d &&
                        (d = 1); - 1 > d && (d = -1);
                    var e = Pf.__soundTransform.volume * c.volume,
                        f = new zu(this.__buffer);
                    f.offset = E["int"](a);
                    1 < b && f.set_loops(b - 1);
                    f.set_gain(e);
                    a = f.get_position();
                    a.x = d;
                    a.z = -1 * Math.sqrt(1 - Math.pow(d, 2));
                    f.set_position(a);
                    return new Or(f, c)
                },
                AudioBuffer_onURLLoad: function(a) {
                    null == a ? this.dispatchEvent(new Mo("ioError")) : (this.__buffer = a, this.dispatchEvent(new Oa("complete")))
                },
                __class__: yk
            });
            var Or = function(a, b) {
                bb.call(this, this);
                this.rightPeak = this.leftPeak = 1;
                this.__soundTransform = null != b ? b : new Mi;
                null != a && (this.__source = a, this.__source.onComplete.add(q(this, this.source_onComplete)), this.__isValid = !0, this.__source.play());
                Pf.__registerSoundChannel(this)
            };
            g["openfl.media.SoundChannel"] = Or;
            Or.__name__ = ["openfl", "media", "SoundChannel"];
            Or.__super__ = bb;
            Or.prototype = p(bb.prototype, {
                leftPeak: null,
                rightPeak: null,
                __isValid: null,
                __soundTransform: null,
                __source: null,
                stop: function() {
                    Pf.__unregisterSoundChannel(this);
                    this.__isValid && (this.__source.stop(), this.__dispose())
                },
                __dispose: function() {
                    this.__isValid &&
                        (this.__source.onComplete.remove(q(this, this.source_onComplete)), this.__source.dispose(), this.__source = null, this.__isValid = !1)
                },
                __updateTransform: function() {
                    this.set_soundTransform(this.get_soundTransform())
                },
                get_position: function() {
                    return this.__isValid ? this.__source.get_currentTime() + this.__source.offset : 0
                },
                set_position: function(a) {
                    if (!this.__isValid) return 0;
                    this.__source.set_currentTime(E["int"](a) - this.__source.offset);
                    return a
                },
                get_soundTransform: function() {
                    return this.__soundTransform.clone()
                },
                set_soundTransform: function(a) {
                    if (null != a) {
                        this.__soundTransform.pan = a.pan;
                        this.__soundTransform.volume = a.volume;
                        var b = Pf.__soundTransform.pan + this.__soundTransform.pan; - 1 > b && (b = -1);
                        1 < b && (b = 1);
                        var c = Pf.__soundTransform.volume * this.__soundTransform.volume;
                        this.__isValid && (this.__source.set_gain(c), c = this.__source.get_position(), c.x = b, c.z = -1 * Math.sqrt(1 - Math.pow(b, 2)), this.__source.set_position(c))
                    }
                    return a
                },
                source_onComplete: function() {
                    Pf.__unregisterSoundChannel(this);
                    this.__dispose();
                    this.dispatchEvent(new Oa("soundComplete"))
                },
                __class__: Or
            });
            var Tw = function() {};
            g["openfl.media.SoundLoaderContext"] = Tw;
            Tw.__name__ = ["openfl", "media", "SoundLoaderContext"];
            var Mi = function(a, b) {
                null == b && (b = 0);
                null == a && (a = 1);
                this.volume = a;
                this.pan = b;
                this.rightToRight = this.rightToLeft = this.leftToRight = this.leftToLeft = 0
            };
            g["openfl.media.SoundTransform"] = Mi;
            Mi.__name__ = ["openfl", "media", "SoundTransform"];
            Mi.prototype = {
                leftToLeft: null,
                leftToRight: null,
                pan: null,
                rightToLeft: null,
                rightToRight: null,
                volume: null,
                clone: function() {
                    return new Mi(this.volume,
                        this.pan)
                },
                __class__: Mi
            };
            var Pf = function() {};
            g["openfl.media.SoundMixer"] = Pf;
            Pf.__name__ = ["openfl", "media", "SoundMixer"];
            Pf.__registerSoundChannel = function(a) {
                Pf.__soundChannels.push(a)
            };
            Pf.__unregisterSoundChannel = function(a) {
                la.remove(Pf.__soundChannels, a)
            };
            var Un = function(a, b, c) {
                this.description = a;
                this.extension = b;
                this.macType = c
            };
            g["openfl.net.FileFilter"] = Un;
            Un.__name__ = ["openfl", "net", "FileFilter"];
            Un.prototype = {
                description: null,
                extension: null,
                macType: null,
                __class__: Un
            };
            var mq = function() {
                bb.call(this);
                this.__inputControl = La.get_document().createElement("input");
                this.__inputControl.setAttribute("type", "file");
                this.__inputControl.onclick = function(a) {
                    a.cancelBubble = !0;
                    a.stopPropagation()
                }
            };
            g["openfl.net.FileReference"] = mq;
            mq.__name__ = ["openfl", "net", "FileReference"];
            mq.__super__ = bb;
            mq.prototype = p(bb.prototype, {
                creationDate: null,
                data: null,
                modificationDate: null,
                name: null,
                size: null,
                type: null,
                __data: null,
                __path: null,
                __urlLoader: null,
                __inputControl: null,
                browse: function(a) {
                    var b = this,
                        c = this.__path = this.__data =
                        null;
                    if (null != a) {
                        c = [];
                        for (var d = 0; d < a.length;) {
                            var e = a[d];
                            ++d;
                            c.push(ka.replace(ka.replace(e.extension, "*.", "."), ";", ","))
                        }
                        c = c.join(",")
                    }
                    null != c && this.__inputControl.setAttribute("accept", c);
                    this.__inputControl.onchange = function() {
                        var a = b.__inputControl.files[0];
                        b.modificationDate = new Date(a.lastModified);
                        b.creationDate = b.modificationDate;
                        b.size = a.size;
                        var c = Df.extension(a.name);
                        b.type = "." + c;
                        b.name = Df.withoutDirectory(a.name);
                        b.__path = a.name;
                        b.dispatchEvent(new Oa("select"))
                    };
                    this.__inputControl.click();
                    return !0
                },
                cancel: function() {
                    null != this.__urlLoader && this.__urlLoader.close()
                },
                load: function() {
                    var a = this,
                        b = this.__inputControl.files[0],
                        c = new FileReader;
                    c.onload = function(b) {
                        a.data = Ve.fromArrayBuffer(b.target.result);
                        a.openFileDialog_onComplete()
                    };
                    c.readAsArrayBuffer(b)
                },
                save: function(a, b) {
                    this.__path = this.__data = null;
                    null != a && (E.is(a, Ae) ? this.__data = a : (this.__data = new Ae(0), this.__data.writeUTFBytes(E.string(a))), a = new Du, a.onCancel.add(q(this, this.saveFileDialog_onCancel)), a.onSave.add(q(this, this.saveFileDialog_onSave)),
                        a.save(Ve.toBytes(this.__data), null != b ? Df.extension(b) : null, b))
                },
                openFileDialog_onComplete: function() {
                    this.dispatchEvent(new Oa("complete"))
                },
                saveFileDialog_onCancel: function() {
                    this.dispatchEvent(new Oa("cancel"))
                },
                saveFileDialog_onSave: function(a) {
                    var b = this;
                    Mh.delay(function() {
                        b.dispatchEvent(new Oa("complete"))
                    }, 1)
                },
                __class__: mq
            });
            var me = function() {
                bb.call(this);
                this.client = this;
                this.objectEncoding = me.defaultObjectEncoding
            };
            g["openfl.net.SharedObject"] = me;
            me.__name__ = ["openfl", "net", "SharedObject"];
            me.getLocal = function(a, b, c) {
                c = " ~%&\\;:\"',<>?#".split("");
                var d = !0;
                if (null == a || "" == a) d = !1;
                else
                    for (var e = 0; e < c.length;) {
                        var f = c[e];
                        ++e;
                        if (-1 < a.indexOf(f)) {
                            d = !1;
                            break
                        }
                    }
                if (!d) throw new Z(new Bd("Error #2134: Cannot create SharedObject."));
                null == me.__sharedObjects && (me.__sharedObjects = new fb, null != oa.current && oa.current.onExit.add(me.application_onExit));
                c = b + "/" + a;
                if (!me.__sharedObjects.exists(c)) {
                    d = null;
                    try {
                        var h = La.getLocalStorage();
                        null == b && (null != h && (d = h.getItem(La.get_window().location.href + ":" +
                            a), h.removeItem(La.get_window().location.href + ":" + a)), b = La.get_window().location.pathname);
                        null != h && null == d && (d = h.getItem(b + ":" + a))
                    } catch (m) {
                        vb.lastException = m
                    }
                    h = new me;
                    h.data = {};
                    h.__localPath = b;
                    h.__name = a;
                    if (null != d && "" != d) try {
                        var k = new tf(d);
                        k.setResolver({
                            resolveEnum: Q.resolveEnum,
                            resolveClass: me.__resolveClass
                        });
                        h.data = k.unserialize()
                    } catch (m) {
                        vb.lastException = m
                    }
                    me.__sharedObjects.set(c, h)
                }
                return me.__sharedObjects.get(c)
            };
            me.__resolveClass = function(a) {
                return null != a ? (ka.startsWith(a, "neash.") &&
                    (a = ka.replace(a, "neash.", "openfl.")), ka.startsWith(a, "native.") && (a = ka.replace(a, "native.", "openfl.")), ka.startsWith(a, "flash.") && (a = ka.replace(a, "flash.", "openfl.")), ka.startsWith(a, "openfl._v2.") && (a = ka.replace(a, "openfl._v2.", "openfl.")), ka.startsWith(a, "openfl._legacy.") && (a = ka.replace(a, "openfl._legacy.", "openfl.")), Q.resolveClass(a)) : null
            };
            me.application_onExit = function(a) {
                for (a = me.__sharedObjects.iterator(); a.hasNext();) a.next().flush()
            };
            me.__super__ = bb;
            me.prototype = p(bb.prototype, {
                client: null,
                data: null,
                objectEncoding: null,
                __localPath: null,
                __name: null,
                flush: function(a) {
                    if (0 == T.fields(this.data).length) return 0;
                    a = Se.run(this.data);
                    try {
                        var b = La.getLocalStorage();
                        null != b && (b.removeItem(this.__localPath + ":" + this.__name), b.setItem(this.__localPath + ":" + this.__name, a))
                    } catch (c) {
                        return vb.lastException = c, 1
                    }
                    return 0
                },
                __class__: me
            });
            var iv = function() {};
            g["openfl.utils.IDataOutput"] = iv;
            iv.__name__ = ["openfl", "utils", "IDataOutput"];
            iv.prototype = {
                __class__: iv
            };
            var jv = function() {};
            g["openfl.utils.IDataInput"] =
                jv;
            jv.__name__ = ["openfl", "utils", "IDataInput"];
            jv.prototype = {
                __class__: jv
            };
            var Vn = function(a) {
                bb.call(this);
                this.bytesTotal = this.bytesLoaded = 0;
                this.dataFormat = 1;
                null != a && this.load(a)
            };
            g["openfl.net.URLLoader"] = Vn;
            Vn.__name__ = ["openfl", "net", "URLLoader"];
            Vn.__super__ = bb;
            Vn.prototype = p(bb.prototype, {
                bytesLoaded: null,
                bytesTotal: null,
                data: null,
                dataFormat: null,
                __httpRequest: null,
                close: function() {
                    null != this.__httpRequest && this.__httpRequest.cancel()
                },
                load: function(a) {
                    var b = this;
                    if (0 == this.dataFormat) {
                        var c =
                            new dr;
                        this.__prepareRequest(c, a);
                        c.load().onProgress(q(this, this.httpRequest_onProgress)).onError(q(this, this.httpRequest_onError)).onComplete(function(a) {
                            b.__dispatchStatus();
                            b.data = a;
                            a = new Oa("complete");
                            b.dispatchEvent(a)
                        })
                    } else c = new to, this.__prepareRequest(c, a), c.load().onProgress(q(this, this.httpRequest_onProgress)).onError(q(this, this.httpRequest_onError)).onComplete(function(a) {
                        b.__dispatchStatus();
                        b.data = a;
                        a = new Oa("complete");
                        b.dispatchEvent(a)
                    })
                },
                __dispatchStatus: function() {
                    var a = new Kr("httpStatus",
                        !1, !1, this.__httpRequest.responseStatus);
                    a.responseURL = this.__httpRequest.uri;
                    var b = [];
                    if (this.__httpRequest.enableResponseHeaders && null != this.__httpRequest.responseHeaders)
                        for (var c = 0, d = this.__httpRequest.responseHeaders; c < d.length;) {
                            var e = d[c];
                            ++c;
                            b.push(new kv(e.name, e.value))
                        }
                    a.responseHeaders = b;
                    this.dispatchEvent(a)
                },
                __prepareRequest: function(a, b) {
                    this.__httpRequest = a;
                    this.__httpRequest.uri = b.url;
                    this.__httpRequest.method = b.method;
                    if (null != b.data)
                        if (Q["typeof"](b.data) == Yb.TObject) {
                            a = T.fields(b.data);
                            for (var c = 0; c < a.length;) {
                                var d = a[c];
                                ++c;
                                this.__httpRequest.formData.set(d, T.field(b.data, d))
                            }
                        } else E.is(b.data, ub) ? this.__httpRequest.data = b.data : this.__httpRequest.data = ub.ofString(E.string(b.data));
                    this.__httpRequest.contentType = b.contentType;
                    if (null != b.requestHeaders)
                        for (a = 0, c = b.requestHeaders; a < c.length;) d = c[a], ++a, this.__httpRequest.headers.push(new Vq(d.name, d.value));
                    this.__httpRequest.followRedirects = b.followRedirects;
                    this.__httpRequest.timeout = E["int"](b.idleTimeout);
                    this.__httpRequest.withCredentials =
                        b.manageCookies;
                    this.__httpRequest.userAgent = b.userAgent;
                    this.__httpRequest.enableResponseHeaders = !0
                },
                httpRequest_onError: function(a) {
                    this.__dispatchStatus();
                    if (403 == a) {
                        var b = new Lr("securityError");
                        b.text = E.string(a);
                        this.dispatchEvent(b)
                    } else b = new Mo("ioError"), b.text = E.string(a), this.dispatchEvent(b)
                },
                httpRequest_onProgress: function(a, b) {
                    var c = new Cl("progress");
                    c.bytesLoaded = a;
                    c.bytesTotal = b;
                    this.dispatchEvent(c)
                },
                __class__: Vn
            });
            var Fi = function(a) {
                null != a && (this.url = a);
                this.contentType = null;
                this.followRedirects = Ej.followRedirects;
                this.idleTimeout = 0 < Ej.idleTimeout ? Ej.idleTimeout : 3E4;
                this.manageCookies = Ej.manageCookies;
                this.method = "GET";
                this.requestHeaders = [];
                this.userAgent = Ej.userAgent
            };
            g["openfl.net.URLRequest"] = Fi;
            Fi.__name__ = ["openfl", "net", "URLRequest"];
            Fi.prototype = {
                contentType: null,
                data: null,
                followRedirects: null,
                idleTimeout: null,
                manageCookies: null,
                method: null,
                requestHeaders: null,
                url: null,
                userAgent: null,
                __class__: Fi
            };
            var Ej = function() {};
            g["openfl.net.URLRequestDefaults"] = Ej;
            Ej.__name__ = ["openfl", "net", "URLRequestDefaults"];
            var kv = function(a, b) {
                null == b && (b = "");
                null == a && (a = "");
                this.name = a;
                this.value = b
            };
            g["openfl.net.URLRequestHeader"] = kv;
            kv.__name__ = ["openfl", "net", "URLRequestHeader"];
            kv.prototype = {
                name: null,
                value: null,
                __class__: kv
            };
            var Bl = function(a) {
                this.parentDomain = null != a ? a : Bl.currentDomain
            };
            g["openfl.system.ApplicationDomain"] = Bl;
            Bl.__name__ = ["openfl", "system", "ApplicationDomain"];
            Bl.prototype = {
                parentDomain: null,
                __class__: Bl
            };
            var hk = function() {};
            g["openfl.system.Capabilities"] =
                hk;
            hk.__name__ = ["openfl", "system", "Capabilities"];
            hk.get_screenDPI = function() {
                var a = null != fc.application ? fc.application.get_window() : null,
                    b = 72;
                null != a && (b *= a.get_scale());
                return b
            };
            hk.get_screenResolutionX = function() {
                var a = fc.current.stage,
                    b = 0;
                if (null == a) return 0;
                if (null != a.window) {
                    var c = a.window.get_display();
                    null != c && (b = Math.ceil(c.currentMode.width * a.window.get_scale()))
                }
                return 0 < b ? b : a.stageWidth
            };
            hk.get_screenResolutionY = function() {
                var a = fc.current.stage,
                    b = 0;
                if (null == a) return 0;
                if (null != a.window) {
                    var c =
                        a.window.get_display();
                    null != c && (b = Math.ceil(c.currentMode.height * a.window.get_scale()))
                }
                return 0 < b ? b : a.stageHeight
            };
            var fq = function() {};
            g["openfl.system.System"] = fq;
            fq.__name__ = ["openfl", "system", "System"];
            fq.exit = function(a) {
                je.exit(a)
            };
            fq.get_totalMemory = function() {
                return window.performance && window.performance.memory ? window.performance.memory.usedJSHeapSize : 0
            };
            var Oo = function() {
                R.call(this);
                this.__graphics = new jf(this)
            };
            g["openfl.text.StaticText"] = Oo;
            Oo.__name__ = ["openfl", "text", "StaticText"];
            Oo.__super__ = R;
            Oo.prototype = p(R.prototype, {
                text: null,
                __class__: Oo
            });
            var hd = function() {
                this.__renderedOnCanvasWhileOnDOM = this.__forceCachedBitmapUpdate = !1;
                ra.call(this);
                this.__caretIndex = -1;
                this.__displayAsPassword = !1;
                this.__graphics = new jf(this);
                this.__textEngine = new uc(this);
                this.__layoutDirty = !0;
                this.__offsetY = this.__offsetX = 0;
                this.__mouseWheelEnabled = !0;
                this.__text = "";
                this.doubleClickEnabled = !0;
                null == hd.__defaultTextFormat && (hd.__defaultTextFormat = new kf("Times New Roman", 12, 0, !1, !1, !1, "", "", 3,
                    0, 0, 0, 0), hd.__defaultTextFormat.blockIndent = 0, hd.__defaultTextFormat.bullet = !1, hd.__defaultTextFormat.letterSpacing = 0, hd.__defaultTextFormat.kerning = !1);
                this.__textFormat = hd.__defaultTextFormat.clone();
                this.__textEngine.textFormatRanges.push(new Xi(this.__textFormat, 0, 0));
                this.addEventListener("mouseDown", q(this, this.this_onMouseDown));
                this.addEventListener("focusIn", q(this, this.this_onFocusIn));
                this.addEventListener("focusOut", q(this, this.this_onFocusOut));
                this.addEventListener("keyDown", q(this,
                    this.this_onKeyDown));
                this.addEventListener("mouseWheel", q(this, this.this_onMouseWheel));
                this.addEventListener("doubleClick", q(this, this.this_onDoubleClick))
            };
            g["openfl.text.TextField"] = hd;
            hd.__name__ = ["openfl", "text", "TextField"];
            hd.__super__ = ra;
            hd.prototype = p(ra.prototype, {
                __caretIndex: null,
                __cursorTimer: null,
                __dirty: null,
                __displayAsPassword: null,
                __domRender: null,
                __inputEnabled: null,
                __isHTML: null,
                __layoutDirty: null,
                __mouseWheelEnabled: null,
                __offsetX: null,
                __offsetY: null,
                __selectionIndex: null,
                __showCursor: null,
                __text: null,
                __textEngine: null,
                __textFormat: null,
                __div: null,
                __renderedOnCanvasWhileOnDOM: null,
                __rawHtmlText: null,
                __forceCachedBitmapUpdate: null,
                getCharBoundaries: function(a) {
                    if (0 > a || a > $a.get_length(this.__text) - 1) return null;
                    var b = new hb;
                    return this.__getCharBoundaries(a, b) ? b : null
                },
                getLineIndexOfChar: function(a) {
                    if (0 > a || a > $a.get_length(this.__text)) return -1;
                    this.__updateLayout();
                    for (var b = 0, c = this.__textEngine.layoutGroups; b < c.get_length();) {
                        var d = c.get(b);
                        ++b;
                        if (d.startIndex <= a && d.endIndex >= a) return d.lineIndex
                    }
                    return -1
                },
                getLineOffset: function(a) {
                    this.__updateLayout();
                    if (0 > a || a > this.__textEngine.numLines - 1) return -1;
                    for (var b = 0, c = this.__textEngine.layoutGroups; b < c.get_length();) {
                        var d = c.get(b);
                        ++b;
                        if (d.lineIndex == a) return d.startIndex
                    }
                    return 0
                },
                replaceSelectedText: function(a) {
                    this.__replaceSelectedText(a, !1)
                },
                replaceText: function(a, b, c) {
                    this.__replaceText(a, b, c, !1)
                },
                setSelection: function(a, b) {
                    this.__selectionIndex = a;
                    this.__caretIndex = b;
                    this.__updateScrollV();
                    this.__stopCursorTimer();
                    this.__startCursorTimer()
                },
                setTextFormat: function(a,
                    b, c) {
                    null == c && (c = 0);
                    null == b && (b = 0);
                    var d = $a.get_length(this.get_text());
                    0 > b && (b = 0);
                    0 > c && (c = 0);
                    0 == c && (c = 0 == b ? d : b + 1);
                    if (!(c < b)) {
                        if (0 == b && c >= d)
                            for (this.__textFormat.__merge(a), b = 0, c = this.__textEngine.textFormatRanges.get_length(); b < c;) d = b++, d = this.__textEngine.textFormatRanges.get(d), d.format.__merge(a);
                        else
                            for (var e = 0, f; e < this.__textEngine.textFormatRanges.get_length();) {
                                d = this.__textEngine.textFormatRanges.get(e);
                                if (d.start == b && d.end == c) {
                                    d.format.__merge(a);
                                    break
                                } else d.start >= b && d.end <= c ? d.format.__merge(a) :
                                    d.start >= b && d.start < c && d.end > b ? (f = new Xi(d.format.clone(), d.start, c), f.format.__merge(a), this.__textEngine.textFormatRanges.insertAt(e, f), d.start = c, ++e) : d.start < b && d.end > b && d.end >= c && (f = new Xi(d.format.clone(), b, d.end), f.format.__merge(a), this.__textEngine.textFormatRanges.insertAt(e + 1, f), d.end = b, ++e);
                                ++e
                            }
                        this.__layoutDirty = this.__dirty = !0;
                        this.__setRenderDirty()
                    }
                },
                __allowMouseFocus: function() {
                    return 1 == this.__textEngine.type || this.get_tabEnabled() ? !0 : this.get_selectable()
                },
                __caretBeginningOfLine: function() {
                    this.__selectionIndex ==
                        this.__caretIndex || this.__caretIndex < this.__selectionIndex ? this.__caretIndex = this.getLineOffset(this.getLineIndexOfChar(this.__caretIndex)) : this.__selectionIndex = this.getLineOffset(this.getLineIndexOfChar(this.__selectionIndex))
                },
                __caretEndOfLine: function() {
                    var a = this.__selectionIndex == this.__caretIndex ? this.getLineIndexOfChar(this.__caretIndex) : this.getLineIndexOfChar(E["int"](Math.max(this.__caretIndex, this.__selectionIndex)));
                    this.__caretIndex = a < this.__textEngine.numLines - 1 ? this.getLineOffset(a +
                        1) - 1 : $a.get_length(this.__text)
                },
                __caretNextCharacter: function() {
                    this.__caretIndex < $a.get_length(this.__text) && this.__caretIndex++
                },
                __caretNextLine: function(a, b) {
                    null == a && (a = this.getLineIndexOfChar(this.__caretIndex));
                    a < this.__textEngine.numLines - 1 ? (null == b && (b = this.__caretIndex), this.__caretIndex = this.__getCharIndexOnDifferentLine(b, a + 1)) : this.__caretIndex = $a.get_length(this.__text)
                },
                __caretPreviousCharacter: function() {
                    0 < this.__caretIndex && this.__caretIndex--
                },
                __caretPreviousLine: function(a, b) {
                    null ==
                        a && (a = this.getLineIndexOfChar(this.__caretIndex));
                    0 < a ? (null == b && (b = this.__caretIndex), this.__caretIndex = this.__getCharIndexOnDifferentLine(b, a - 1)) : this.__caretIndex = 0
                },
                __disableInput: function() {
                    this.__inputEnabled && null != this.stage && (this.stage.window.set_textInputEnabled(!1), this.stage.window.onTextInput.remove(q(this, this.window_onTextInput)), this.stage.window.onKeyDown.remove(q(this, this.window_onKeyDown)), this.__inputEnabled = !1, this.__stopCursorTimer())
                },
                __dispatch: function(a) {
                    if (2 == a.eventPhase &&
                        "mouseUp" == a.type) {
                        var b = this.__getGroup(this.get_mouseX(), this.get_mouseY(), !0);
                        null != b && (b = b.format.url, null != b && "" != b && (ka.startsWith(b, "event:") ? this.dispatchEvent(new ii("link", !1, !1, la.substr(b, 6, null))) : ia.getURL(new Fi(b))))
                    }
                    return ra.prototype.__dispatch.call(this, a)
                },
                __enableInput: function() {
                    null != this.stage && (this.stage.window.set_textInputEnabled(!0), this.__inputEnabled || (this.stage.window.set_textInputEnabled(!0), this.stage.window.onTextInput.has(q(this, this.window_onTextInput)) || (this.stage.window.onTextInput.add(q(this,
                        this.window_onTextInput)), this.stage.window.onKeyDown.add(q(this, this.window_onKeyDown))), this.__inputEnabled = !0, this.__startCursorTimer()))
                },
                __getBounds: function(a, b) {
                    this.__updateLayout();
                    var c = hb.__pool.get();
                    c.copyFrom(this.__textEngine.bounds);
                    b.tx += this.__offsetX;
                    b.ty += this.__offsetY;
                    c.__transform(c, b);
                    a.__expand(c.x, c.y, c.width, c.height);
                    hb.__pool.release(c)
                },
                __getCharBoundaries: function(a, b) {
                    if (0 > a || a > $a.get_length(this.__text) - 1) return !1;
                    this.__updateLayout();
                    for (var c = 0, d = this.__textEngine.layoutGroups; c <
                        d.get_length();) {
                        var e = d.get(c);
                        ++c;
                        if (a >= e.startIndex && a < e.endIndex) try {
                            for (var f = e.offsetX, h = 0, k = a - e.startIndex; h < k;) {
                                var m = h++;
                                f += e.getAdvance(m)
                            }
                            var g = e.getAdvance(a - e.startIndex);
                            b.setTo(f, e.offsetY, g, e.ascent + e.descent);
                            return !0
                        } catch (I) {
                            vb.lastException = I
                        }
                    }
                    return !1
                },
                __getCharIndexOnDifferentLine: function(a, b) {
                    if (0 > a || a > $a.get_length(this.__text) || 0 > b || b > this.__textEngine.numLines - 1) return -1;
                    for (var c = null, d = null, e = 0, f = this.__textEngine.layoutGroups; e < f.get_length();) {
                        var h = f.get(e);
                        ++e;
                        if (a >=
                            h.startIndex && a <= h.endIndex) {
                            c = h.offsetX;
                            for (var k = 0, m = a - h.startIndex; k < m;) {
                                var g = k++;
                                c += h.getAdvance(g)
                            }
                            if (null != d) return this.__getPosition(c, d)
                        }
                        if (h.lineIndex == b) {
                            d = h.offsetY + h.height / 2;
                            h = 0;
                            for (k = this.get_scrollV() - 1; h < k;) m = h++, d -= this.__textEngine.lineHeights.get(m);
                            if (null != c) return this.__getPosition(c, d)
                        }
                    }
                    return -1
                },
                __getCursor: function() {
                    var a = this.__getGroup(this.get_mouseX(), this.get_mouseY(), !0);
                    return null != a && "" != a.format.url ? "button" : this.__textEngine.selectable ? "ibeam" : null
                },
                __getGroup: function(a,
                    b, c) {
                    null == c && (c = !1);
                    this.__updateLayout();
                    a += this.get_scrollH();
                    for (var d = 0, e = this.get_scrollV() - 1; d < e;) {
                        var f = d++;
                        b += this.__textEngine.lineHeights.get(f)
                    }!c && b > this.__textEngine.textHeight && (b = this.__textEngine.textHeight);
                    d = !0;
                    f = 0;
                    for (var h = this.__textEngine.layoutGroups.get_length(); f < h;) {
                        var k = f++;
                        e = this.__textEngine.layoutGroups.get(k);
                        k = k < this.__textEngine.layoutGroups.get_length() - 1 ? this.__textEngine.layoutGroups.get(k + 1) : null;
                        d && (b < e.offsetY && (b = e.offsetY), a < e.offsetX && (a = e.offsetX), d = !1);
                        if (b >= e.offsetY && b <= e.offsetY + e.height || !c && null == k)
                            if (a >= e.offsetX && a <= e.offsetX + e.width || !c && (null == k || k.lineIndex != e.lineIndex)) return e
                    }
                    return null
                },
                __getPosition: function(a, b) {
                    b = this.__getGroup(a, b);
                    if (null == b) return $a.get_length(this.__text);
                    for (var c = 0, d = 0, e = b.positions.length; d < e;) {
                        var f = d++;
                        c += b.getAdvance(f);
                        if (a <= b.offsetX + c) {
                            if (a <= b.offsetX + (c - b.getAdvance(f)) + b.getAdvance(f) / 2) return b.startIndex + f;
                            if (b.startIndex + f < b.endIndex) return b.startIndex + f + 1;
                            break
                        }
                    }
                    return b.endIndex
                },
                __hitTest: function(a,
                    b, c, d, e, f) {
                    if (!f.get_visible() || this.__isMask || e && !this.mouseEnabled || null != this.get_mask() && !this.get_mask().__hitTestMask(a, b)) return !1;
                    this.__getRenderTransform();
                    this.__updateLayout();
                    c = this.__renderTransform.__transformInverseX(a, b);
                    a = this.__renderTransform.__transformInverseY(a, b);
                    return this.__textEngine.bounds.contains(c, a) ? (null != d && d.push(f), !0) : !1
                },
                __hitTestMask: function(a, b) {
                    this.__getRenderTransform();
                    this.__updateLayout();
                    var c = this.__renderTransform.__transformInverseX(a, b);
                    a = this.__renderTransform.__transformInverseY(a,
                        b);
                    return this.__textEngine.bounds.contains(c, a) ? !0 : !1
                },
                __renderCanvas: function(a) {
                    a.__isDOM && !this.__renderedOnCanvasWhileOnDOM && (this.__renderedOnCanvasWhileOnDOM = !0, 1 == this.get_type() && this.replaceText(0, $a.get_length(this.__text), this.__text), this.__isHTML && this.__updateText(eb.parse(this.__text, this.__textFormat, this.__textEngine.textFormatRanges)), this.__layoutDirty = this.__dirty = !0, this.__setRenderDirty());
                    if (null == this.get_mask() || 0 < this.get_mask().get_width() && 0 < this.get_mask().get_height())
                        if (this.__updateCacheBitmap(a,
                                this.__dirty), null == this.__cacheBitmap || this.__isCacheBitmapRender) {
                            lb.render(this, a, this.__worldTransform);
                            var b = !1;
                            0 == this.__textEngine.antiAliasType && 1 == this.__textEngine.gridFitType && (b = a.context.imageSmoothingEnabled) && (a.context.imageSmoothingEnabled = !1);
                            Vl.render(this, a);
                            b && (a.context.imageSmoothingEnabled = !0)
                        } else Dk.render(this.__cacheBitmap, a)
                },
                __renderDOM: function(a) {
                    this.__domRender = !0;
                    this.__updateCacheBitmap(a, this.__forceCachedBitmapUpdate);
                    this.__domRender = this.__forceCachedBitmapUpdate = !1;
                    null == this.__cacheBitmap || this.__isCacheBitmapRender ? (this.__renderedOnCanvasWhileOnDOM && (this.__renderedOnCanvasWhileOnDOM = !1, this.__isHTML && null != this.__rawHtmlText && (this.__updateText(this.__rawHtmlText), this.__layoutDirty = this.__dirty = !0, this.__setRenderDirty())), Xc.render(this, a)) : (this.__renderDOMClear(a), this.__cacheBitmap.stage = this.stage, Hf.render(this.__cacheBitmap, a));
                    this.__renderEvent(a)
                },
                __renderDOMClear: function(a) {
                    Xc.clear(this, a)
                },
                __renderGL: function(a) {
                    this.__updateCacheBitmap(a,
                        !1);
                    null == this.__cacheBitmap || this.__isCacheBitmapRender ? (Go.render(this, a), Wl.render(this, a)) : cj.render(this.__cacheBitmap, a);
                    this.__renderEvent(a)
                },
                __renderGLMask: function(a) {
                    Go.renderMask(this, a);
                    ra.prototype.__renderGLMask.call(this, a)
                },
                __replaceSelectedText: function(a, b) {
                    null == b && (b = !0);
                    null == a && (a = "");
                    if ("" != a || this.__selectionIndex != this.__caretIndex) {
                        var c = this.__caretIndex < this.__selectionIndex ? this.__caretIndex : this.__selectionIndex,
                            d = this.__caretIndex > this.__selectionIndex ? this.__caretIndex :
                            this.__selectionIndex;
                        if (!(c == d && 0 < this.__textEngine.maxChars && $a.get_length(this.__text) == this.__textEngine.maxChars)) {
                            c > $a.get_length(this.__text) && (c = $a.get_length(this.__text));
                            d > $a.get_length(this.__text) && (d = $a.get_length(this.__text));
                            if (d < c) {
                                var e = d;
                                d = c;
                                c = e
                            }
                            0 > c && (c = 0);
                            this.__replaceText(c, d, a, b);
                            a = c + $a.get_length(aa.__cast(a, String));
                            a > $a.get_length(this.__text) && (a = $a.get_length(this.__text));
                            this.setSelection(a, a);
                            this.__updateScrollH()
                        }
                    }
                },
                __replaceText: function(a, b, c, d) {
                    if (!(b < a || 0 > a ||
                            b > $a.get_length(this.__text) || null == c)) {
                        d && (c = this.__textEngine.restrictText(c), 0 < this.__textEngine.maxChars && (d = b - a, d = this.__textEngine.maxChars - $a.get_length(this.__text) + d, 0 >= d ? c = "" : d < c.length && (c = la.substr(c, 0, d))));
                        this.__updateText($a.substring(this.__text, 0, a) + c + $a.substring(this.__text, b));
                        b > $a.get_length(this.__text) && (b = $a.get_length(this.__text));
                        d = c.length - (b - a);
                        for (var e = 0, f; e < this.__textEngine.textFormatRanges.get_length();) f = this.__textEngine.textFormatRanges.get(e), f.start <= a && f.end >=
                            b ? (f.end += d, ++e) : f.start >= a && f.end <= b ? (0 < e ? this.__textEngine.textFormatRanges.splice(e, 1) : (f.start = 0, f.end = a + c.length, ++e), d -= f.end - f.start) : (f.start > a && f.start <= b && (f.start += d), ++e);
                        this.__updateScrollV();
                        this.__updateScrollH();
                        this.__layoutDirty = this.__dirty = !0;
                        this.__setRenderDirty()
                    }
                },
                __shouldCacheHardware: function(a) {
                    return 1 == a ? !0 : !1
                },
                __startCursorTimer: function() {
                    this.__cursorTimer = Mh.delay(q(this, this.__startCursorTimer), 600);
                    this.__showCursor = !this.__showCursor;
                    this.__dirty = !0;
                    this.__setRenderDirty()
                },
                __startTextInput: function() {
                    0 > this.__caretIndex && (this.__selectionIndex = this.__caretIndex = $a.get_length(this.__text));
                    (R.__supportDOM ? this.__renderedOnCanvasWhileOnDOM : 1) && this.__enableInput()
                },
                __stopCursorTimer: function() {
                    null != this.__cursorTimer && (this.__cursorTimer.stop(), this.__cursorTimer = null);
                    this.__showCursor && (this.__showCursor = !1, this.__dirty = !0, this.__setRenderDirty())
                },
                __stopTextInput: function() {
                    (R.__supportDOM ? this.__renderedOnCanvasWhileOnDOM : 1) && this.__disableInput()
                },
                __updateCacheBitmap: function(a,
                    b) {
                    if (null == this.__filters && "opengl" == a.__type && null == this.__cacheBitmap && !this.__domRender) return !1;
                    b && (this.__renderDirty = !0);
                    return ra.prototype.__updateCacheBitmap.call(this, a, b || this.__dirty) ? (null != this.__cacheBitmap && (this.__cacheBitmap.__renderTransform.tx -= this.__offsetX, this.__cacheBitmap.__renderTransform.ty -= this.__offsetY), !0) : !1
                },
                __updateLayout: function() {
                    if (this.__layoutDirty) {
                        var a = this.__textEngine.width;
                        this.__textEngine.update();
                        if (2 != this.__textEngine.autoSize) {
                            if (this.__textEngine.width !=
                                a) switch (this.__textEngine.autoSize) {
                                case 0:
                                    this.set_x(this.get_x() + (a - this.__textEngine.width) / 2);
                                    break;
                                case 3:
                                    this.set_x(this.get_x() + (a - this.__textEngine.width))
                            }
                            this.__textEngine.getBounds()
                        }
                        this.__layoutDirty = !1
                    }
                },
                __updateScrollH: function() {
                    if (!this.get_multiline() && 1 == this.get_type()) {
                        this.__layoutDirty = !0;
                        this.__updateLayout();
                        var a = this.__textEngine.textWidth - this.__textEngine.width + 4;
                        0 < a ? this.__caretIndex >= $a.get_length(this.get_text()) ? this.set_scrollH(Math.ceil(a)) : (a = hb.__pool.get(), this.__getCharBoundaries(this.__caretIndex,
                            a), a.x < this.get_scrollH() ? this.set_scrollH(Math.floor(a.x - 2)) : a.x > this.get_scrollH() + this.__textEngine.width && this.set_scrollH(Math.ceil(a.x - this.__textEngine.width - 2)), hb.__pool.release(a)) : this.set_scrollH(0)
                    }
                },
                __updateScrollV: function() {
                    this.__layoutDirty = !0;
                    this.__updateLayout();
                    var a = this.getLineIndexOfChar(this.__caretIndex); - 1 == a && 0 < this.__caretIndex && (a = this.getLineIndexOfChar(this.__caretIndex - 1) + 1);
                    if (a + 1 < this.get_scrollV()) this.set_scrollV(a + 1);
                    else if (a + 1 > this.get_bottomScrollV()) {
                        for (var b =
                                0; 0 <= a;)
                            if (b + this.__textEngine.lineHeights.get(a) <= this.get_height() - 4) b += this.__textEngine.lineHeights.get(a), --a;
                            else break;
                        this.set_scrollV(a + 2)
                    } else this.set_scrollV(this.get_scrollV())
                },
                __updateText: function(a) {
                    R.__supportDOM && this.__renderedOnCanvasWhileOnDOM && (this.__forceCachedBitmapUpdate = this.__text != a);
                    this.__textEngine.set_text(a);
                    this.__text = this.__textEngine.text;
                    $a.get_length(this.__text) < this.__caretIndex && (this.__selectionIndex = this.__caretIndex = $a.get_length(this.__text));
                    if (!this.__displayAsPassword ||
                        R.__supportDOM && !this.__renderedOnCanvasWhileOnDOM) this.__textEngine.set_text(this.__text);
                    else {
                        a = "";
                        for (var b = 0, c = $a.get_length(this.get_text()); b < c;) b++, a += "*";
                        this.__textEngine.set_text(a)
                    }
                },
                __updateTransforms: function(a) {
                    ra.prototype.__updateTransforms.call(this, a);
                    this.__renderTransform.__translateTransformed(this.__offsetX, this.__offsetY)
                },
                set_antiAliasType: function(a) {
                    return this.__textEngine.antiAliasType = a
                },
                set_autoSize: function(a) {
                    a != this.__textEngine.autoSize && (this.__layoutDirty = this.__dirty = !0, this.__setRenderDirty());
                    return this.__textEngine.autoSize = a
                },
                set_background: function(a) {
                    a != this.__textEngine.background && (this.__dirty = !0, this.__setRenderDirty());
                    return this.__textEngine.background = a
                },
                set_backgroundColor: function(a) {
                    a != this.__textEngine.backgroundColor && (this.__dirty = !0, this.__setRenderDirty());
                    return this.__textEngine.backgroundColor = a
                },
                set_border: function(a) {
                    a != this.__textEngine.border && (this.__dirty = !0, this.__setRenderDirty());
                    return this.__textEngine.border = a
                },
                get_bottomScrollV: function() {
                    this.__updateLayout();
                    return this.__textEngine.get_bottomScrollV()
                },
                get_defaultTextFormat: function() {
                    return this.__textFormat.clone()
                },
                set_defaultTextFormat: function(a) {
                    this.__textFormat.__merge(a);
                    this.__dirty = this.__layoutDirty = !0;
                    this.__setRenderDirty();
                    return a
                },
                set_displayAsPassword: function(a) {
                    a != this.__displayAsPassword && (this.__layoutDirty = this.__dirty = !0, this.__setRenderDirty(), this.__displayAsPassword = a, this.__updateText(this.__text));
                    return a
                },
                set_embedFonts: function(a) {
                    return this.__textEngine.embedFonts = a
                },
                set_gridFitType: function(a) {
                    return this.__textEngine.gridFitType = a
                },
                get_height: function() {
                    this.__updateLayout();
                    return this.__textEngine.height * Math.abs(this.get_scaleY())
                },
                set_height: function(a) {
                    a != this.__textEngine.height && (this.__setTransformDirty(), this.__layoutDirty = this.__dirty = !0, this.__setRenderDirty(), this.__textEngine.height = a);
                    return this.__textEngine.height * Math.abs(this.get_scaleY())
                },
                get_htmlText: function() {
                    return this.__isHTML ? this.__rawHtmlText : this.__text
                },
                set_htmlText: function(a) {
                    this.__isHTML &&
                        this.__text == a || (this.__layoutDirty = this.__dirty = !0, this.__setRenderDirty());
                    this.__isHTML = !0;
                    this.__rawHtmlText = a;
                    a = eb.parse(a, this.__textFormat, this.__textEngine.textFormatRanges);
                    if (R.__supportDOM) {
                        1 < this.__textEngine.textFormatRanges.get_length() && this.__textEngine.textFormatRanges.splice(1, this.__textEngine.textFormatRanges.get_length() - 1);
                        var b = this.__textEngine.textFormatRanges.get(0);
                        b.format = this.__textFormat;
                        b.start = 0;
                        this.__renderedOnCanvasWhileOnDOM ? (b.end = a.length, this.__updateText(a)) :
                            (b.end = this.__rawHtmlText.length, this.__updateText(this.__rawHtmlText))
                    } else this.__updateText(a);
                    this.__updateScrollV();
                    return a
                },
                get_length: function() {
                    return null != this.__text ? $a.get_length(this.__text) : 0
                },
                set_maxChars: function(a) {
                    a != this.__textEngine.maxChars && (this.__textEngine.maxChars = a, this.__layoutDirty = this.__dirty = !0, this.__setRenderDirty());
                    return a
                },
                get_mouseWheelEnabled: function() {
                    return this.__mouseWheelEnabled
                },
                get_multiline: function() {
                    return this.__textEngine.multiline
                },
                set_multiline: function(a) {
                    a !=
                        this.__textEngine.multiline && (this.__layoutDirty = this.__dirty = !0, this.__updateText(this.__text), this.__updateScrollH(), this.__setRenderDirty());
                    return this.__textEngine.multiline = a
                },
                get_scrollH: function() {
                    return this.__textEngine.scrollH
                },
                set_scrollH: function(a) {
                    this.__updateLayout();
                    a > this.__textEngine.maxScrollH && (a = this.__textEngine.maxScrollH);
                    0 > a && (a = 0);
                    a != this.__textEngine.scrollH && (this.__dirty = !0, this.__setRenderDirty(), this.__textEngine.scrollH = a, this.dispatchEvent(new Oa("scroll")));
                    return this.__textEngine.scrollH
                },
                get_scrollV: function() {
                    return this.__textEngine.get_scrollV()
                },
                set_scrollV: function(a) {
                    this.__updateLayout();
                    0 < a && a != this.__textEngine.get_scrollV() && (this.__dirty = !0, this.__setRenderDirty(), this.__textEngine.set_scrollV(a), this.dispatchEvent(new Oa("scroll")));
                    return this.__textEngine.get_scrollV()
                },
                get_selectable: function() {
                    return this.__textEngine.selectable
                },
                set_selectable: function(a) {
                    a != this.__textEngine.selectable && 1 == this.get_type() && (null != this.stage && this.stage.get_focus() == this ? this.__startTextInput() :
                        a || this.__stopTextInput());
                    return this.__textEngine.selectable = a
                },
                get_tabEnabled: function() {
                    return null == this.__tabEnabled ? 1 == this.__textEngine.type : this.__tabEnabled
                },
                get_text: function() {
                    return this.__text
                },
                set_text: function(a) {
                    if (this.__isHTML || this.__text != a) this.__layoutDirty = this.__dirty = !0, this.__setRenderDirty();
                    else return a;
                    1 < this.__textEngine.textFormatRanges.get_length() && this.__textEngine.textFormatRanges.splice(1, this.__textEngine.textFormatRanges.get_length() - 1);
                    var b = this.__textEngine.textFormatRanges.get(0);
                    b.format = this.__textFormat;
                    b.start = 0;
                    b.end = $a.get_length(a);
                    this.__isHTML = !1;
                    this.__updateText(a);
                    this.__updateScrollV();
                    return a
                },
                get_textWidth: function() {
                    this.__updateLayout();
                    return this.__textEngine.textWidth
                },
                get_textHeight: function() {
                    this.__updateLayout();
                    return this.__textEngine.textHeight
                },
                get_type: function() {
                    return this.__textEngine.type
                },
                set_type: function(a) {
                    a != this.__textEngine.type && (1 == a ? (this.addEventListener("addedToStage", q(this, this.this_onAddedToStage)), this.this_onFocusIn(null),
                        this.__textEngine.__useIntAdvances = !0) : (this.removeEventListener("addedToStage", q(this, this.this_onAddedToStage)), this.__stopTextInput(), this.__textEngine.__useIntAdvances = null), this.__layoutDirty = this.__dirty = !0, this.__setRenderDirty());
                    return this.__textEngine.type = a
                },
                get_width: function() {
                    this.__updateLayout();
                    return this.__textEngine.width * Math.abs(this.__scaleX)
                },
                set_width: function(a) {
                    a != this.__textEngine.width && (this.__setTransformDirty(), this.__layoutDirty = this.__dirty = !0, this.__setRenderDirty(),
                        this.__textEngine.width = a);
                    return this.__textEngine.width * Math.abs(this.__scaleX)
                },
                set_wordWrap: function(a) {
                    a != this.__textEngine.wordWrap && (this.__layoutDirty = this.__dirty = !0, this.__setRenderDirty());
                    return this.__textEngine.wordWrap = a
                },
                get_x: function() {
                    return this.__transform.tx + this.__offsetX
                },
                set_x: function(a) {
                    a != this.__transform.tx + this.__offsetX && this.__setTransformDirty();
                    return this.__transform.tx = a - this.__offsetX
                },
                get_y: function() {
                    return this.__transform.ty + this.__offsetY
                },
                set_y: function(a) {
                    a !=
                        this.__transform.ty + this.__offsetY && this.__setTransformDirty();
                    return this.__transform.ty = a - this.__offsetY
                },
                stage_onMouseMove: function(a) {
                    null != this.stage && this.get_selectable() && 0 <= this.__selectionIndex && (this.__updateLayout(), a = this.__getPosition(this.get_mouseX() + this.get_scrollH(), this.get_mouseY()), a != this.__caretIndex && (this.__caretIndex = a, a = !0, R.__supportDOM && (this.__renderedOnCanvasWhileOnDOM && (this.__forceCachedBitmapUpdate = !0), a = !1), a && (this.__dirty = !0, this.__setRenderDirty())))
                },
                stage_onMouseUp: function(a) {
                    if (null !=
                        this.stage && (this.stage.removeEventListener("mouseMove", q(this, this.stage_onMouseMove)), this.stage.removeEventListener("mouseUp", q(this, this.stage_onMouseUp)), this.stage.get_focus() == this)) {
                        this.__getWorldTransform();
                        this.__updateLayout();
                        var b = this.__getPosition(this.get_mouseX() + this.get_scrollH(), this.get_mouseY());
                        a = E["int"](Math.min(this.__selectionIndex, b));
                        b = E["int"](Math.max(this.__selectionIndex, b));
                        this.__selectionIndex = a;
                        this.__caretIndex = b;
                        this.__inputEnabled && (this.this_onFocusIn(null),
                            this.__stopCursorTimer(), this.__startCursorTimer(), R.__supportDOM && this.__renderedOnCanvasWhileOnDOM && (this.__forceCachedBitmapUpdate = !0))
                    }
                },
                this_onAddedToStage: function(a) {
                    this.this_onFocusIn(null)
                },
                this_onFocusIn: function(a) {
                    1 == this.get_type() && null != this.stage && this.stage.get_focus() == this && this.__startTextInput()
                },
                this_onFocusOut: function(a) {
                    this.__stopCursorTimer();
                    null != a.relatedObject && E.is(a.relatedObject, hd) ? (null != this.stage && (this.stage.window.onTextInput.remove(q(this, this.window_onTextInput)),
                        this.stage.window.onKeyDown.remove(q(this, this.window_onKeyDown))), this.__inputEnabled = !1) : this.__stopTextInput();
                    this.__selectionIndex != this.__caretIndex && (this.__selectionIndex = this.__caretIndex, this.__dirty = !0, this.__setRenderDirty())
                },
                this_onKeyDown: function(a) {
                    this.get_selectable() && 1 != this.get_type() && 67 == a.keyCode && (a.commandKey || a.ctrlKey) && this.__caretIndex != this.__selectionIndex && Kd.set_text($a.substring(this.__text, this.__caretIndex, this.__selectionIndex))
                },
                this_onMouseDown: function(a) {
                    if (this.get_selectable() ||
                        1 == this.get_type()) this.__updateLayout(), this.__selectionIndex = this.__caretIndex = this.__getPosition(this.get_mouseX() + this.get_scrollH(), this.get_mouseY()), R.__supportDOM || (this.__dirty = !0, this.__setRenderDirty()), this.stage.addEventListener("mouseMove", q(this, this.stage_onMouseMove)), this.stage.addEventListener("mouseUp", q(this, this.stage_onMouseUp))
                },
                this_onMouseWheel: function(a) {
                    this.get_mouseWheelEnabled() && this.set_scrollV(this.get_scrollV() - a.delta)
                },
                this_onDoubleClick: function(a) {
                    if (this.get_selectable()) {
                        this.__updateLayout();
                        a = "\n.!?, ;:()-_/".split("");
                        var b = this.__text,
                            c = -1,
                            d = b.length,
                            e = E["int"](Math.max(this.__caretIndex, 1));
                        if (0 < b.length && 0 <= this.__caretIndex && d >= this.__caretIndex) {
                            for (var f = 0; f < a.length;) {
                                var h = a[f];
                                ++f;
                                var k = b.lastIndexOf(h, e - 1);
                                k > c && (c = k + 1);
                                k = b.indexOf(h, e);
                                k < d && -1 != k && (d = k)
                            }
                            c != d && (this.setSelection(c, d), a = !0, R.__supportDOM && (this.__renderedOnCanvasWhileOnDOM && (this.__forceCachedBitmapUpdate = !0), a = !1), a && (this.__dirty = !0, this.__setRenderDirty()))
                        }
                    }
                },
                window_onKeyDown: function(a, b) {
                    switch (a) {
                        case 8:
                            this.__selectionIndex ==
                                this.__caretIndex && 0 < this.__caretIndex && (this.__selectionIndex = this.__caretIndex - 1);
                            this.__selectionIndex != this.__caretIndex && (this.replaceSelectedText(""), this.__selectionIndex = this.__caretIndex, this.dispatchEvent(new Oa("change", !0)));
                            break;
                        case 97:
                            this.get_selectable() && (Jc.get_metaKey(b) || Jc.get_ctrlKey(b)) && (this.__caretIndex = $a.get_length(this.__text), this.__selectionIndex = 0);
                            break;
                        case 99:
                            (Jc.get_metaKey(b) || Jc.get_ctrlKey(b)) && this.__caretIndex != this.__selectionIndex && Kd.set_text($a.substring(this.__text,
                                this.__caretIndex, this.__selectionIndex));
                            break;
                        case 120:
                            (Jc.get_metaKey(b) || Jc.get_ctrlKey(b)) && this.__caretIndex != this.__selectionIndex && (Kd.set_text($a.substring(this.__text, this.__caretIndex, this.__selectionIndex)), this.replaceSelectedText(""), this.dispatchEvent(new Oa("change", !0)));
                            break;
                        case 127:
                            this.__selectionIndex == this.__caretIndex && this.__caretIndex < $a.get_length(this.__text) && (this.__selectionIndex = this.__caretIndex + 1);
                            this.__selectionIndex != this.__caretIndex && (this.replaceSelectedText(""),
                                this.__selectionIndex = this.__caretIndex, this.dispatchEvent(new Oa("change", !0)));
                            break;
                        case 1073741898:
                            this.get_selectable() && (this.__caretBeginningOfLine(), this.__stopCursorTimer(), this.__startCursorTimer());
                            break;
                        case 1073741901:
                            this.get_selectable() && (this.__caretEndOfLine(), this.__stopCursorTimer(), this.__startCursorTimer());
                            break;
                        case 1073741903:
                            this.get_selectable() && (Jc.get_metaKey(b) ? (this.__caretEndOfLine(), Jc.get_shiftKey(b) || (this.__selectionIndex = this.__caretIndex)) : Jc.get_shiftKey(b) ?
                                this.__caretNextCharacter() : (this.__selectionIndex == this.__caretIndex ? this.__caretNextCharacter() : this.__caretIndex = E["int"](Math.max(this.__caretIndex, this.__selectionIndex)), this.__selectionIndex = this.__caretIndex), this.__updateScrollH(), this.__updateScrollV(), this.__stopCursorTimer(), this.__startCursorTimer());
                            break;
                        case 1073741904:
                            this.get_selectable() && (Jc.get_metaKey(b) ? (this.__caretBeginningOfLine(), Jc.get_shiftKey(b) || (this.__selectionIndex = this.__caretIndex)) : Jc.get_shiftKey(b) ? this.__caretPreviousCharacter() :
                                (this.__selectionIndex == this.__caretIndex ? this.__caretPreviousCharacter() : this.__caretIndex = E["int"](Math.min(this.__caretIndex, this.__selectionIndex)), this.__selectionIndex = this.__caretIndex), this.__updateScrollH(), this.__updateScrollV(), this.__stopCursorTimer(), this.__startCursorTimer());
                            break;
                        case 1073741905:
                            this.get_selectable() && this.__textEngine.multiline && (Jc.get_shiftKey(b) ? this.__caretNextLine() : (this.__selectionIndex == this.__caretIndex ? this.__caretNextLine() : (a = this.getLineIndexOfChar(E["int"](Math.max(this.__caretIndex,
                                this.__selectionIndex))), this.__caretNextLine(a, E["int"](Math.min(this.__caretIndex, this.__selectionIndex)))), this.__selectionIndex = this.__caretIndex), this.__updateScrollV(), this.__stopCursorTimer(), this.__startCursorTimer());
                            break;
                        case 1073741906:
                            this.get_selectable() && this.__textEngine.multiline && (Jc.get_shiftKey(b) ? this.__caretPreviousLine() : (this.__selectionIndex == this.__caretIndex ? this.__caretPreviousLine() : (a = this.getLineIndexOfChar(E["int"](Math.min(this.__caretIndex, this.__selectionIndex))),
                                this.__caretPreviousLine(a, E["int"](Math.min(this.__caretIndex, this.__selectionIndex)))), this.__selectionIndex = this.__caretIndex), this.__updateScrollV(), this.__stopCursorTimer(), this.__startCursorTimer());
                            break;
                        case 13:
                        case 1073741912:
                            this.__textEngine.multiline && (a = new ii("textInput", !0, !0, "\n"), this.dispatchEvent(a), a.isDefaultPrevented() || (this.__replaceSelectedText("\n", !0), this.dispatchEvent(new Oa("change", !0))))
                    }
                },
                window_onTextInput: function(a) {
                    this.__replaceSelectedText(a, !0);
                    this.dispatchEvent(new Oa("change",
                        !0))
                },
                __class__: hd
            });
            var kf = function(a, b, c, d, e, f, h, k, m, g, l, n, p) {
                this.font = a;
                this.size = b;
                this.color = c;
                this.bold = d;
                this.italic = e;
                this.underline = f;
                this.url = h;
                this.target = k;
                this.align = m;
                this.leftMargin = g;
                this.rightMargin = l;
                this.indent = n;
                this.leading = p
            };
            g["openfl.text.TextFormat"] = kf;
            kf.__name__ = ["openfl", "text", "TextFormat"];
            kf.prototype = {
                align: null,
                blockIndent: null,
                bold: null,
                bullet: null,
                color: null,
                font: null,
                indent: null,
                italic: null,
                kerning: null,
                leading: null,
                leftMargin: null,
                letterSpacing: null,
                rightMargin: null,
                size: null,
                tabStops: null,
                target: null,
                underline: null,
                url: null,
                __ascent: null,
                __descent: null,
                clone: function() {
                    var a = new kf(this.font, this.size, this.color, this.bold, this.italic, this.underline, this.url, this.target);
                    a.align = this.align;
                    a.leftMargin = this.leftMargin;
                    a.rightMargin = this.rightMargin;
                    a.indent = this.indent;
                    a.leading = this.leading;
                    a.blockIndent = this.blockIndent;
                    a.bullet = this.bullet;
                    a.kerning = this.kerning;
                    a.letterSpacing = this.letterSpacing;
                    a.tabStops = this.tabStops;
                    a.__ascent = this.__ascent;
                    a.__descent =
                        this.__descent;
                    return a
                },
                __merge: function(a) {
                    null != a.font && (this.font = a.font);
                    null != a.size && (this.size = a.size);
                    null != a.color && (this.color = a.color);
                    null != a.bold && (this.bold = a.bold);
                    null != a.italic && (this.italic = a.italic);
                    null != a.underline && (this.underline = a.underline);
                    null != a.url && (this.url = a.url);
                    null != a.target && (this.target = a.target);
                    null != a.align && (this.align = a.align);
                    null != a.leftMargin && (this.leftMargin = a.leftMargin);
                    null != a.rightMargin && (this.rightMargin = a.rightMargin);
                    null != a.indent && (this.indent =
                        a.indent);
                    null != a.leading && (this.leading = a.leading);
                    null != a.blockIndent && (this.blockIndent = a.blockIndent);
                    null != a.bullet && (this.bullet = a.bullet);
                    null != a.kerning && (this.kerning = a.kerning);
                    null != a.letterSpacing && (this.letterSpacing = a.letterSpacing);
                    null != a.tabStops && (this.tabStops = a.tabStops);
                    null != a.__ascent && (this.__ascent = a.__ascent);
                    null != a.__descent && (this.__descent = a.__descent)
                },
                __class__: kf
            };
            var tw = {};
            g["openfl.text._TextFormatAlign.TextFormatAlign_Impl_"] = tw;
            tw.__name__ = ["openfl", "text", "_TextFormatAlign",
                "TextFormatAlign_Impl_"
            ];
            tw.fromString = function(a) {
                switch (a) {
                    case "center":
                        return 0;
                    case "end":
                        return 1;
                    case "justify":
                        return 2;
                    case "left":
                        return 3;
                    case "right":
                        return 4;
                    case "start":
                        return 5;
                    default:
                        return null
                }
            };
            var uc = function(a) {
                this.textField = a;
                this.height = this.width = 100;
                this.set_text("");
                this.bounds = new hb(0, 0, 0, 0);
                this.textBounds = new hb(0, 0, 0, 0);
                this.type = 0;
                this.autoSize = 2;
                this.embedFonts = !1;
                this.selectable = !0;
                this.borderColor = 0;
                this.border = !1;
                this.backgroundColor = 16777215;
                this.background = !1;
                this.gridFitType = 1;
                this.maxChars = 0;
                this.multiline = !1;
                this.numLines = 1;
                this.scrollH = this.sharpness = 0;
                this.set_scrollV(1);
                this.wordWrap = !1;
                this.lineAscents = M.toFloatVector(null);
                this.lineBreaks = M.toIntVector(null);
                this.lineDescents = M.toFloatVector(null);
                this.lineLeadings = M.toFloatVector(null);
                this.lineHeights = M.toFloatVector(null);
                this.lineWidths = M.toFloatVector(null);
                this.layoutGroups = M.toObjectVector(null);
                this.textFormatRanges = M.toObjectVector(null);
                null == uc.__context && (uc.__context = La.get_document().createElement("canvas").getContext("2d"))
            };
            g["openfl.text._internal.TextEngine"] = uc;
            uc.__name__ = ["openfl", "text", "_internal", "TextEngine"];
            uc.findFont = function(a) {
                return ud.__fontByName.get(a)
            };
            uc.findFontVariant = function(a) {
                var b = a.font,
                    c = a.bold;
                a = a.italic;
                null == b && (b = "_serif");
                var d = ka.replace(ka.replace(b, " Normal", ""), " Regular", "");
                return c && a && ud.__fontByName.exists(d + " Bold Italic") ? uc.findFont(d + " Bold Italic") : c && ud.__fontByName.exists(d + " Bold") ? uc.findFont(d + " Bold") : a && ud.__fontByName.exists(d + " Italic") ? uc.findFont(d + " Italic") :
                    uc.findFont(b)
            };
            uc.getFormatHeight = function(a) {
                uc.__context.font = uc.getFont(a);
                var b = uc.getFontInstance(a);
                if (null != a.__ascent) {
                    var c = a.size * a.__ascent;
                    b = a.size * a.__descent
                } else null != b && 0 != b.unitsPerEM ? (c = b.ascender / b.unitsPerEM * a.size, b = Math.abs(b.descender / b.unitsPerEM * a.size)) : (c = a.size, b = .185 * a.size);
                return c + b + a.leading
            };
            uc.getFont = function(a) {
                var b = a.font,
                    c = a.bold,
                    d = a.italic;
                null == b && (b = "_serif");
                var e = ka.replace(ka.replace(b, " Normal", ""), " Regular", "");
                c && d && ud.__fontByName.exists(e + " Bold Italic") ?
                    (b = e + " Bold Italic", d = c = !1) : c && ud.__fontByName.exists(e + " Bold") ? (b = e + " Bold", c = !1) : d && ud.__fontByName.exists(e + " Italic") ? (b = e + " Italic", d = !1) : (c && (-1 < b.indexOf(" Bold ") || ka.endsWith(b, " Bold")) && (c = !1), d && (-1 < b.indexOf(" Italic ") || ka.endsWith(b, " Italic")) && (d = !1));
                c = (d ? "italic " : "normal ") + "normal " + (c ? "bold " : "normal ");
                c += a.size + "px";
                c += "/" + (a.leading + a.size + 3) + "px ";
                switch (b) {
                    case "_sans":
                        a = "sans-serif";
                        break;
                    case "_serif":
                        a = "serif";
                        break;
                    case "_typewriter":
                        a = "monospace";
                        break;
                    default:
                        a = "'" +
                            (new Ga("^[\\s'\"]+(.*)[\\s'\"]+$", "")).replace(b, "$1") + "'"
                }
                return c += "" + a
            };
            uc.getFontInstance = function(a) {
                return uc.findFontVariant(a)
            };
            uc.prototype = {
                antiAliasType: null,
                autoSize: null,
                background: null,
                backgroundColor: null,
                border: null,
                borderColor: null,
                bottomScrollV: null,
                bounds: null,
                embedFonts: null,
                gridFitType: null,
                height: null,
                layoutGroups: null,
                lineAscents: null,
                lineBreaks: null,
                lineDescents: null,
                lineLeadings: null,
                lineHeights: null,
                lineWidths: null,
                maxChars: null,
                maxScrollH: null,
                maxScrollV: null,
                multiline: null,
                numLines: null,
                scrollH: null,
                scrollV: null,
                selectable: null,
                sharpness: null,
                text: null,
                textBounds: null,
                textHeight: null,
                textFormatRanges: null,
                textWidth: null,
                type: null,
                width: null,
                wordWrap: null,
                textField: null,
                __hasFocus: null,
                __restrictRegexp: null,
                __useIntAdvances: null,
                getBounds: function() {
                    var a = this.border ? 1 : 0;
                    this.bounds.width = this.width + a;
                    this.bounds.height = this.height + a;
                    for (var b = a = this.width, c = 0, d = this.layoutGroups; c < d.get_length();) {
                        var e = d.get(c);
                        ++c;
                        e.offsetX < a && (a = e.offsetX);
                        e.offsetY < b && (b = e.offsetY)
                    }
                    a >=
                        this.width && (a = 2);
                    b >= this.height && (b = 2);
                    this.textBounds.setTo(Math.max(a - 2, 0), Math.max(b - 2, 0), Math.min(this.textWidth + 4, this.bounds.width + 4), Math.min(1.185 * this.textHeight + 4, this.bounds.height + 4))
                },
                getLineBreakIndex: function(a) {
                    null == a && (a = 0);
                    var b = $a.indexOf(this.text, "\n", a);
                    a = $a.indexOf(this.text, "\r", a);
                    return -1 == b ? a : -1 == a ? b : b < a ? b : a
                },
                getLineMeasurements: function() {
                    this.lineAscents.set_length(0);
                    this.lineDescents.set_length(0);
                    this.lineLeadings.set_length(0);
                    this.lineHeights.set_length(0);
                    this.lineWidths.set_length(0);
                    var a = 0,
                        b = 0,
                        c = null,
                        d = 0,
                        e = 0;
                    this.textHeight = this.textWidth = 0;
                    this.numLines = 1;
                    for (var f = this.maxScrollH = 0, h = this.layoutGroups; f < h.get_length();) {
                        var k = h.get(f);
                        for (++f; k.lineIndex > this.numLines - 1;) this.lineAscents.push(a), this.lineDescents.push(b), this.lineLeadings.push(null != c ? c : 0), this.lineHeights.push(d), this.lineWidths.push(e), b = a = 0, c = null, e = d = 0, this.numLines++;
                        a = Math.max(a, k.ascent);
                        b = Math.max(b, k.descent);
                        c = null == c ? k.leading : E["int"](Math.max(c, k.leading));
                        d = Math.max(d, k.height);
                        e = k.offsetX - 2 +
                            k.width;
                        e > this.textWidth && (this.textWidth = e);
                        k = k.offsetY - 2 + k.ascent + k.descent;
                        k > this.textHeight && (this.textHeight = k)
                    }
                    0 == this.textHeight && null != this.textField && 1 == this.textField.get_type() && (a = this.textField.__textFormat, b = uc.getFontInstance(a), null != a.__ascent ? (f = a.size * a.__ascent, h = a.size * a.__descent) : null != b && 0 != b.unitsPerEM ? (f = b.ascender / b.unitsPerEM * a.size, h = Math.abs(b.descender / b.unitsPerEM * a.size)) : (f = a.size, h = .185 * a.size), c = a.leading, a = f, b = h, this.textHeight = f + h);
                    this.lineAscents.push(a);
                    this.lineDescents.push(b);
                    this.lineLeadings.push(null != c ? c : 0);
                    this.lineHeights.push(d);
                    this.lineWidths.push(e);
                    1 == this.numLines && 0 < c && (this.textHeight += c);
                    0 < this.layoutGroups.get_length() && (e = this.layoutGroups.get(this.layoutGroups.get_length() - 1), null != e && e.startIndex == e.endIndex && (this.textHeight -= d));
                    if (2 != this.autoSize) switch (this.autoSize) {
                        case 0:
                        case 1:
                        case 3:
                            this.wordWrap || (this.width = this.textWidth + 4), this.height = this.textHeight + 4, this.bottomScrollV = this.numLines
                    }
                    this.maxScrollH = this.textWidth > this.width - 4 ? E["int"](this.textWidth -
                        this.width + 4) : 0;
                    this.scrollH > this.maxScrollH && (this.scrollH = this.maxScrollH)
                },
                getLayoutGroups: function() {
                    var a = this;
                    this.layoutGroups.set_length(0);
                    if (null != this.text && !$a.equals(this.text, "")) {
                        var b = -1,
                            c = null,
                            d = null,
                            e = hd.__defaultTextFormat.clone(),
                            f = 0,
                            h = 0,
                            k = 0,
                            m = 0,
                            g = 3,
                            l = null,
                            n = null,
                            p = 0,
                            x = 0,
                            u = 0,
                            v = -2,
                            z = -1,
                            w = $a.indexOf(this.text, " "),
                            q = this.getLineBreakIndex(),
                            y = 2,
                            L = 2,
                            A = 0,
                            D = 0,
                            Ka = function(b, c, d) {
                                var e = [];
                                if (null == a.__useIntAdvances) {
                                    var f = new Ga("Trident/7.0", "");
                                    a.__useIntAdvances = f.match(La.get_navigator().userAgent)
                                }
                                if (a.__useIntAdvances) {
                                    f =
                                        0;
                                    for (var h, k = c; k < d;) h = k++, h = uc.__context.measureText($a.substring(b, c, h + 1)).width, e.push(h - f), f = h
                                } else
                                    for (; c < d;) f = c++, f < $a.get_length(b) - 1 ? (k = uc.__context.measureText($a.charAt(b, f + 1)).width, f = uc.__context.measureText($a.substr(b, f, 2)).width - k) : f = uc.__context.measureText($a.charAt(b, f)).width, e.push(f);
                                return e
                            },
                            t = function(a) {
                                for (var b = 0, c = 0; c < a.length;) {
                                    var d = a[c];
                                    ++c;
                                    b += d
                                }
                                return b
                            },
                            B = function(b, d) {
                                null == l || l.startIndex != l.endIndex ? (l = new Pr(c.format, b, d), a.layoutGroups.push(l)) : (l.format = c.format,
                                    l.startIndex = b, l.endIndex = d)
                            },
                            E = function() {
                                null != e.__ascent ? (h = e.size * e.__ascent, m = e.size * e.__descent) : null != d && 0 != d.unitsPerEM ? (h = d.ascender / d.unitsPerEM * e.size, m = Math.abs(d.descender / d.unitsPerEM * e.size)) : (h = e.size, m = .185 * e.size);
                                f = e.leading;
                                x = Math.ceil(h + m + f);
                                x > u && (u = x);
                                h > k && (k = h)
                            },
                            F = function() {
                                var f = a.textFormatRanges.get_length() - 1;
                                return b < f ? (b += 1, c = a.textFormatRanges.get(b), e.__merge(c.format), uc.__context.font = uc.getFont(e), d = uc.getFontInstance(e), !0) : !1
                            },
                            pa = function(d, e) {
                                if (e <= c.end) n = Ka(a.text,
                                    d, e), p = t(n);
                                else {
                                    var f = d;
                                    d = c.end;
                                    var h = 0;
                                    n = [];
                                    for (p = 0;;)
                                        if (f != d && (f = Ka(a.text, f, d), n = n.concat(f)), d != e) {
                                            if (!F()) {
                                                Za.warn("You found a bug in OpenFL's text code! Please save a copy of your project and contact Joshua Granick (@singmajesty) so we can fix this.", {
                                                    fileName: "TextEngine.hx",
                                                    lineNumber: 1061,
                                                    className: "openfl.text._internal.TextEngine",
                                                    methodName: "getLayoutGroups"
                                                });
                                                break
                                            }
                                            f = d;
                                            d = e < c.end ? e : c.end;
                                            ++h
                                        } else {
                                            p = t(n);
                                            break
                                        } b -= h + 1;
                                    F()
                                }
                            },
                            H = function(b) {
                                if (b <= c.end) n = Ka(a.text, A, b), p = t(n), B(A, b), l.positions =
                                    n, l.offsetX = y, l.ascent = h, l.descent = m, l.leading = f, l.lineIndex = D, l.offsetY = L, l.width = p, l.height = x, y += p, b == c.end && (l = null, F(), E());
                                else
                                    for (;;) {
                                        var d = b < c.end ? b : c.end;
                                        A != d && (n = Ka(a.text, A, d), p = t(n), B(A, d), l.positions = n, l.offsetX = y, l.ascent = h, l.descent = m, l.leading = f, l.lineIndex = D, l.offsetY = L, l.width = p, l.height = x, y += p, A = d);
                                        d == c.end && (l = null);
                                        if (d == b) break;
                                        if (!F()) {
                                            Za.warn("You found a bug in OpenFL's text code! Please save a copy of your project and contact Joshua Granick (@singmajesty) so we can fix this.", {
                                                fileName: "TextEngine.hx",
                                                lineNumber: 1149,
                                                className: "openfl.text._internal.TextEngine",
                                                methodName: "getLayoutGroups"
                                            });
                                            break
                                        }
                                        E()
                                    }
                                A = b
                            },
                            K = function() {
                                E();
                                for (var b = a.layoutGroups.get_length(); - 1 < --b;) {
                                    var c = a.layoutGroups.get(b);
                                    if (c.lineIndex < D) break;
                                    c.lineIndex > D || (c.ascent = k, c.height = u)
                                }
                                L += u;
                                u = k = 0;
                                D += 1;
                                y = 2
                            },
                            J = function(b) {
                                if (4 <= a.width && a.wordWrap) {
                                    var c = n,
                                        d, e, f;
                                    for (d = t(c); y + d > a.width - 2;) {
                                        for (f = d = e = 0; y + f < a.width - 2;) {
                                            var h = c[d];
                                            0 == h ? (++d, ++e) : (f += h, ++d)
                                        }
                                        if (0 == f) break;
                                        else if (2 > d && f + y > a.width - 2) {
                                            if (A +
                                                d - e == b) break
                                        } else
                                            for (; y + f > a.width - 2;) --d, 0 < d - e ? (pa(A, A + d - e), f = p) : (d = 1, e = 0, pa(A, A + 1), f = 0);
                                        c = A + d - e;
                                        H(c);
                                        K();
                                        pa(c, b);
                                        c = n;
                                        d = p
                                    }
                                }
                                H(b)
                            };
                        F();
                        null != e.align && (g = e.align);
                        E();
                        for (var R, Ca = $a.get_length(this.text) + 1; A < Ca;)
                            if (-1 < q && (-1 == w || q < w)) A <= q ? (pa(A, q), J(q), l = null) : null != l && l.startIndex != l.endIndex && (l.endIndex == w && (l.width -= l.getAdvance(l.positions.length - 1)), l = null), c.end == q && (F(), E()), K(), A = q + 1, z = q, q = this.getLineBreakIndex(A), null != e.align && (g = e.align);
                            else if (-1 < w)
                            for (null != l && l.startIndex != l.endIndex &&
                                (l = null), R = !1;;) {
                                var X = $a.get_length(this.text);
                                if (A >= X) break;
                                X = -1; - 1 == w ? X = q : (X = w + 1, -1 < q && q < X && (X = q)); - 1 == X && (X = $a.get_length(this.text));
                                pa(A, X);
                                if (2 == g) {
                                    if (0 < n.length && A == v) {
                                        A += 1;
                                        var oa = n.shift();
                                        p -= oa;
                                        y += oa
                                    }
                                    0 < n.length && X == w + 1 && (--X, oa = n.pop(), p -= oa)
                                }
                                this.wordWrap && y + p > this.width - 2 && (R = !0, 0 < n.length && X == w + 1 && y + p - n[n.length - 1] <= this.width - 2 && (R = !1));
                                if (R) {
                                    2 != g && (null != l || 0 < this.layoutGroups.get_length()) && (R = l, null == R && (R = this.layoutGroups.get(this.layoutGroups.get_length() - 1)), R.width -= R.getAdvance(R.positions.length -
                                        1), R.endIndex--);
                                    R = this.layoutGroups.get_length() - 1;
                                    for (oa = 0;;) {
                                        l = this.layoutGroups.get(R);
                                        if (0 < R && l.startIndex > v) ++oa;
                                        else break;
                                        --R
                                    }
                                    A == v + 1 && K();
                                    y = 2;
                                    if (0 < oa) {
                                        R = this.layoutGroups.get(this.layoutGroups.get_length() - oa).offsetX;
                                        oa = this.layoutGroups.get_length() - oa;
                                        for (var N = this.layoutGroups.get_length(); oa < N;) {
                                            var O = oa++;
                                            l = this.layoutGroups.get(O);
                                            l.offsetX -= R;
                                            l.offsetY = L;
                                            l.lineIndex = D;
                                            y += l.width
                                        }
                                    }
                                    J(X);
                                    R = !1
                                } else null != l && A == w ? (2 != g && (l.endIndex = w, l.positions = l.positions.concat(n), l.width += p), y += p,
                                    A = X) : null == l || 2 == g ? J(X) : (oa = X < c.end ? X : c.end, oa < X && (n = Ka(this.text, A, oa), p = t(n)), l.endIndex = oa, l.positions = l.positions.concat(n), l.width += p, y += p, oa == c.end && (l = null, F(), E(), A = oa, oa != X && H(X)), q == X && ++X, A = X);
                                X = $a.indexOf(this.text, " ", A);
                                q == v && (l.endIndex = q, 0 > q - l.startIndex - l.positions.length && l.positions.push(0), A = q + 1);
                                v = w;
                                w = X; - 1 < q && q <= A && (w > q || -1 == w) ? X = !0 : (X = $a.get_length(this.text), X = A > X);
                                if (X) break
                            } else X = $a.get_length(this.text), A < X && (X = $a.get_length(this.text), pa(A, X), J($a.get_length(this.text)),
                                K()), A += 1;
                        z == A - 2 && -1 < z && (B(A, A), l.positions = [], l.ascent = h, l.descent = m, l.leading = f, l.lineIndex = D, l.offsetX = 2, l.offsetY = L, l.width = 0, l.height = x)
                    }
                },
                restrictText: function(a) {
                    if (null == a) return a;
                    null != this.__restrictRegexp && (a = this.__restrictRegexp.split(a).join(""));
                    return a
                },
                setTextAlignment: function() {
                    for (var a = -1, b = 0, c, d, e = !1, f = 0, h = this.layoutGroups.get_length(); f < h;) {
                        var k = f++;
                        c = this.layoutGroups.get(k);
                        if (c.lineIndex != a) switch (a = c.lineIndex, b = this.width - 4 - c.format.rightMargin, c.format.align) {
                            case 0:
                                b =
                                    this.lineWidths.get(a) < b ? Math.round((b - this.lineWidths.get(a)) / 2) : 0;
                                break;
                            case 2:
                                if (this.lineWidths.get(a) < b) {
                                    d = 1;
                                    for (var m = k + 1, g = this.layoutGroups.get_length(); m < g;) {
                                        var l = m++;
                                        if (this.layoutGroups.get(l).lineIndex == a) 0 != l && 32 != $a.charCodeAt(this.text, this.layoutGroups.get(l).startIndex - 1) || ++d;
                                        else break
                                    }
                                    if (1 < d && (c = this.layoutGroups.get(k + d - 1), m = $a.charCodeAt(this.text, c.endIndex), c.endIndex < $a.get_length(this.text) && 10 != m && 13 != m))
                                        for (b = (b - this.lineWidths.get(a)) / (d - 1), e = !0, m = 1; this.layoutGroups.get(k +
                                                m).offsetX += b * m, ++m < d;);
                                }
                                b = 0;
                                break;
                            case 4:
                                b = this.lineWidths.get(a) < b ? Math.round(b - this.lineWidths.get(a)) : 0;
                                break;
                            default:
                                b = 0
                        }
                        0 < b && (c.offsetX += b)
                    }
                    e && this.getLineMeasurements()
                },
                update: function() {
                    null == this.text || 0 == this.textFormatRanges.get_length() ? (this.lineAscents.set_length(0), this.lineBreaks.set_length(0), this.lineDescents.set_length(0), this.lineLeadings.set_length(0), this.lineHeights.set_length(0), this.lineWidths.set_length(0), this.layoutGroups.set_length(0), this.textHeight = this.textWidth = 0,
                        this.numLines = 1, this.maxScrollH = 0, this.bottomScrollV = this.maxScrollV = 1) : (this.getLayoutGroups(), this.getLineMeasurements(), this.setTextAlignment());
                    this.getBounds()
                },
                get_bottomScrollV: function() {
                    if (1 == this.numLines || null == this.lineHeights) return 1;
                    for (var a = 0, b = this.lineHeights.get_length(), c = b - 1, d = this.lineHeights.get_length(); c < d;) {
                        var e = c++;
                        if (a + this.lineHeights.get(e) <= this.height - 4) a += this.lineHeights.get(e);
                        else {
                            b = e;
                            break
                        }
                    }
                    return 1 > b ? 1 : b
                },
                get_maxScrollV: function() {
                    if (1 == this.numLines || null ==
                        this.lineHeights) return 1;
                    var a = this.numLines - 1,
                        b = 0;
                    10 == $a.charCodeAt(this.text, $a.get_length(this.text) - 1) && --a;
                    for (var c = a; 0 <= a;)
                        if (b + this.lineHeights.get(a) <= this.height - 4) b += this.lineHeights.get(a), --a;
                        else break;
                    a = a == c ? this.numLines : a + 2;
                    return 1 > a ? 1 : a
                },
                get_scrollV: function() {
                    if (1 == this.numLines || null == this.lineHeights) return 1;
                    var a = this.get_maxScrollV();
                    return this.scrollV > a ? a : this.scrollV
                },
                set_scrollV: function(a) {
                    1 > a && (a = 1);
                    return this.scrollV = a
                },
                set_text: function(a) {
                    return this.text = a
                },
                __class__: uc
            };
            var Xi = function(a, b, c) {
                this.format = a;
                this.start = b;
                this.end = c
            };
            g["openfl.text._internal.TextFormatRange"] = Xi;
            Xi.__name__ = ["openfl", "text", "_internal", "TextFormatRange"];
            Xi.prototype = {
                end: null,
                format: null,
                start: null,
                __class__: Xi
            };
            var Pr = function(a, b, c) {
                this.format = a;
                this.startIndex = b;
                this.endIndex = c
            };
            g["openfl.text._internal.TextLayoutGroup"] = Pr;
            Pr.__name__ = ["openfl", "text", "_internal", "TextLayoutGroup"];
            Pr.prototype = {
                ascent: null,
                descent: null,
                endIndex: null,
                format: null,
                height: null,
                leading: null,
                lineIndex: null,
                offsetX: null,
                offsetY: null,
                positions: null,
                startIndex: null,
                width: null,
                getAdvance: function(a) {
                    return this.positions[a]
                },
                __class__: Pr
            };
            var Xb = function() {};
            g["openfl.ui.GameInput"] = Xb;
            Xb.__name__ = ["openfl", "ui", "GameInput"];
            Xb.__getDevice = function(a) {
                if (null == a) return null;
                if (!Xb.__devices.exists(a)) {
                    var b = new lv(a.get_guid(), a.get_name());
                    Xb.__deviceList.push(b);
                    Xb.__devices.set(a, b);
                    Xb.numDevices = Xb.__deviceList.length
                }
                return Xb.__devices.get(a)
            };
            Xb.__onGamepadAxisMove = function(a, b, c) {
                a = Xb.__getDevice(a);
                if (null != a && a.enabled) {
                    if (!a.__axis.exists(b)) {
                        switch (b) {
                            case 0:
                                var d = "LEFT_X";
                                break;
                            case 1:
                                d = "LEFT_Y";
                                break;
                            case 2:
                                d = "RIGHT_X";
                                break;
                            case 3:
                                d = "RIGHT_Y";
                                break;
                            case 4:
                                d = "TRIGGER_LEFT";
                                break;
                            case 5:
                                d = "TRIGGER_RIGHT";
                                break;
                            default:
                                d = "UNKNOWN (" + b + ")"
                        }
                        d = new Fj(a, "AXIS_" + d, -1, 1);
                        a.__axis.set(b, d);
                        a.__controls.push(d)
                    }
                    b = a.__axis.get(b);
                    b.value = c;
                    b.dispatchEvent(new Oa("change"))
                }
            };
            Xb.__onGamepadButtonDown = function(a, b) {
                a = Xb.__getDevice(a);
                if (null != a && a.enabled) {
                    if (!a.__button.exists(b)) {
                        switch (b) {
                            case 0:
                                var c =
                                    "A";
                                break;
                            case 1:
                                c = "B";
                                break;
                            case 2:
                                c = "X";
                                break;
                            case 3:
                                c = "Y";
                                break;
                            case 4:
                                c = "BACK";
                                break;
                            case 5:
                                c = "GUIDE";
                                break;
                            case 6:
                                c = "START";
                                break;
                            case 7:
                                c = "LEFT_STICK";
                                break;
                            case 8:
                                c = "RIGHT_STICK";
                                break;
                            case 9:
                                c = "LEFT_SHOULDER";
                                break;
                            case 10:
                                c = "RIGHT_SHOULDER";
                                break;
                            case 11:
                                c = "DPAD_UP";
                                break;
                            case 12:
                                c = "DPAD_DOWN";
                                break;
                            case 13:
                                c = "DPAD_LEFT";
                                break;
                            case 14:
                                c = "DPAD_RIGHT";
                                break;
                            default:
                                c = "UNKNOWN (" + b + ")"
                        }
                        c = new Fj(a, "BUTTON_" + c, 0, 1);
                        a.__button.set(b, c);
                        a.__controls.push(c)
                    }
                    b = a.__button.get(b);
                    b.value = 1;
                    b.dispatchEvent(new Oa("change"))
                }
            };
            Xb.__onGamepadButtonUp = function(a, b) {
                a = Xb.__getDevice(a);
                if (null != a && a.enabled) {
                    if (!a.__button.exists(b)) {
                        switch (b) {
                            case 0:
                                var c = "A";
                                break;
                            case 1:
                                c = "B";
                                break;
                            case 2:
                                c = "X";
                                break;
                            case 3:
                                c = "Y";
                                break;
                            case 4:
                                c = "BACK";
                                break;
                            case 5:
                                c = "GUIDE";
                                break;
                            case 6:
                                c = "START";
                                break;
                            case 7:
                                c = "LEFT_STICK";
                                break;
                            case 8:
                                c = "RIGHT_STICK";
                                break;
                            case 9:
                                c = "LEFT_SHOULDER";
                                break;
                            case 10:
                                c = "RIGHT_SHOULDER";
                                break;
                            case 11:
                                c = "DPAD_UP";
                                break;
                            case 12:
                                c = "DPAD_DOWN";
                                break;
                            case 13:
                                c = "DPAD_LEFT";
                                break;
                            case 14:
                                c = "DPAD_RIGHT";
                                break;
                            default:
                                c =
                                    "UNKNOWN (" + b + ")"
                        }
                        c = new Fj(a, "BUTTON_" + c, 0, 1);
                        a.__button.set(b, c);
                        a.__controls.push(c)
                    }
                    b = a.__button.get(b);
                    b.value = 0;
                    b.dispatchEvent(new Oa("change"))
                }
            };
            Xb.__onGamepadConnect = function(a) {
                a = Xb.__getDevice(a);
                if (null != a)
                    for (var b = 0, c = Xb.__instances; b < c.length;) {
                        var d = c[b];
                        ++b;
                        d.dispatchEvent(new Jl("deviceAdded", !0, !1, a))
                    }
            };
            Xb.__onGamepadDisconnect = function(a) {
                var b = Xb.__devices.get(a);
                if (null != b) {
                    Xb.__devices.exists(a) && (la.remove(Xb.__deviceList, Xb.__devices.get(a)), Xb.__devices.remove(a));
                    Xb.numDevices =
                        Xb.__deviceList.length;
                    a = 0;
                    for (var c = Xb.__instances; a < c.length;) {
                        var d = c[a];
                        ++a;
                        d.dispatchEvent(new Jl("deviceRemoved", !0, !1, b))
                    }
                }
            };
            Xb.__super__ = bb;
            Xb.prototype = p(bb.prototype, {
                addEventListener: function(a, b, c, d, e) {
                    null == e && (e = !1);
                    null == d && (d = 0);
                    null == c && (c = !1);
                    bb.prototype.addEventListener.call(this, a, b, c, d, e);
                    if ("deviceAdded" == a)
                        for (a = 0, b = Xb.__deviceList; a < b.length;) c = b[a], ++a, this.dispatchEvent(new Jl("deviceAdded", !0, !1, c))
                },
                __class__: Xb
            });
            var Fj = function(a, b, c, d, e) {
                null == e && (e = 0);
                bb.call(this);
                this.device = a;
                this.id = b;
                this.minValue = c;
                this.maxValue = d;
                this.value = e
            };
            g["openfl.ui.GameInputControl"] = Fj;
            Fj.__name__ = ["openfl", "ui", "GameInputControl"];
            Fj.__super__ = bb;
            Fj.prototype = p(bb.prototype, {
                device: null,
                id: null,
                maxValue: null,
                minValue: null,
                value: null,
                __class__: Fj
            });
            var lv = function(a, b) {
                this.__controls = [];
                this.__button = new we;
                this.__axis = new we;
                this.id = a;
                this.name = b;
                for (b = 0; 6 > b;) {
                    var c = b++;
                    a = new Fj(this, "AXIS_" + c, -1, 1);
                    this.__axis.set(c, a);
                    this.__controls.push(a)
                }
                for (b = 0; 15 > b;) c = b++, a = new Fj(this,
                    "BUTTON_" + c, 0, 1), this.__button.set(c, a), this.__controls.push(a)
            };
            g["openfl.ui.GameInputDevice"] = lv;
            lv.__name__ = ["openfl", "ui", "GameInputDevice"];
            lv.prototype = {
                enabled: null,
                id: null,
                name: null,
                __axis: null,
                __button: null,
                __controls: null,
                __class__: lv
            };
            var El = function() {};
            g["openfl.ui.Keyboard"] = El;
            El.__name__ = ["openfl", "ui", "Keyboard"];
            El.__convertKeyCode = function(a) {
                switch (a) {
                    case 8:
                        return 8;
                    case 9:
                        return 9;
                    case 13:
                        return 13;
                    case 27:
                        return 27;
                    case 32:
                        return 32;
                    case 33:
                        return 49;
                    case 34:
                        return 222;
                    case 35:
                        return 51;
                    case 36:
                        return 52;
                    case 37:
                        return 53;
                    case 38:
                        return 55;
                    case 39:
                        return 222;
                    case 40:
                        return 57;
                    case 41:
                        return 48;
                    case 42:
                        return 56;
                    case 44:
                        return 188;
                    case 45:
                        return 189;
                    case 46:
                        return 190;
                    case 47:
                        return 191;
                    case 48:
                        return 48;
                    case 49:
                        return 49;
                    case 50:
                        return 50;
                    case 51:
                        return 51;
                    case 52:
                        return 52;
                    case 53:
                        return 53;
                    case 54:
                        return 54;
                    case 55:
                        return 55;
                    case 56:
                        return 56;
                    case 57:
                        return 57;
                    case 58:
                        return 186;
                    case 59:
                        return 186;
                    case 60:
                        return 60;
                    case 61:
                        return 187;
                    case 62:
                        return 190;
                    case 63:
                        return 191;
                    case 64:
                        return 50;
                    case 91:
                        return 219;
                    case 92:
                        return 220;
                    case 93:
                        return 221;
                    case 94:
                        return 54;
                    case 95:
                        return 189;
                    case 96:
                        return 192;
                    case 97:
                        return 65;
                    case 98:
                        return 66;
                    case 99:
                        return 67;
                    case 100:
                        return 68;
                    case 101:
                        return 69;
                    case 102:
                        return 70;
                    case 103:
                        return 71;
                    case 104:
                        return 72;
                    case 105:
                        return 73;
                    case 106:
                        return 74;
                    case 107:
                        return 75;
                    case 108:
                        return 76;
                    case 109:
                        return 77;
                    case 110:
                        return 78;
                    case 111:
                        return 79;
                    case 112:
                        return 80;
                    case 113:
                        return 81;
                    case 114:
                        return 82;
                    case 115:
                        return 83;
                    case 116:
                        return 84;
                    case 117:
                        return 85;
                    case 118:
                        return 86;
                    case 119:
                        return 87;
                    case 120:
                        return 88;
                    case 121:
                        return 89;
                    case 122:
                        return 90;
                    case 127:
                        return 46;
                    case 1073741881:
                        return 20;
                    case 1073741882:
                        return 112;
                    case 1073741883:
                        return 113;
                    case 1073741884:
                        return 114;
                    case 1073741885:
                        return 115;
                    case 1073741886:
                        return 116;
                    case 1073741887:
                        return 117;
                    case 1073741888:
                        return 118;
                    case 1073741889:
                        return 119;
                    case 1073741890:
                        return 120;
                    case 1073741891:
                        return 121;
                    case 1073741892:
                        return 122;
                    case 1073741893:
                        return 123;
                    case 1073741894:
                        return 301;
                    case 1073741895:
                        return 145;
                    case 1073741896:
                        return 19;
                    case 1073741897:
                        return 45;
                    case 1073741898:
                        return 36;
                    case 1073741899:
                        return 33;
                    case 1073741901:
                        return 35;
                    case 1073741902:
                        return 34;
                    case 1073741903:
                        return 39;
                    case 1073741904:
                        return 37;
                    case 1073741905:
                        return 40;
                    case 1073741906:
                        return 38;
                    case 1073741907:
                        return 144;
                    case 1073741908:
                        return 111;
                    case 1073741909:
                        return 106;
                    case 1073741910:
                        return 109;
                    case 1073741911:
                        return 107;
                    case 1073741912:
                        return 13;
                    case 1073741913:
                        return 97;
                    case 1073741914:
                        return 98;
                    case 1073741915:
                        return 99;
                    case 1073741916:
                        return 100;
                    case 1073741917:
                        return 101;
                    case 1073741918:
                        return 102;
                    case 1073741919:
                        return 103;
                    case 1073741920:
                        return 104;
                    case 1073741921:
                        return 105;
                    case 1073741922:
                        return 96;
                    case 1073741923:
                        return 110;
                    case 1073741925:
                        return 302;
                    case 1073741928:
                        return 124;
                    case 1073741929:
                        return 125;
                    case 1073741930:
                        return 126;
                    case 1073741982:
                        return 13;
                    case 1073742044:
                        return 110;
                    case 1073742048:
                        return 17;
                    case 1073742049:
                        return 16;
                    case 1073742050:
                        return 18;
                    case 1073742051:
                        return 15;
                    case 1073742052:
                        return 17;
                    case 1073742053:
                        return 16;
                    case 1073742054:
                        return 18;
                    case 1073742055:
                        return 15;
                    default:
                        return a
                }
            };
            El.__getCharCode = function(a, b) {
                null == b && (b = !1);
                if (b) {
                    switch (a) {
                        case 48:
                            return 41;
                        case 49:
                            return 33;
                        case 50:
                            return 64;
                        case 51:
                            return 35;
                        case 52:
                            return 36;
                        case 53:
                            return 37;
                        case 54:
                            return 94;
                        case 55:
                            return 38;
                        case 56:
                            return 42;
                        case 57:
                            return 40;
                        case 186:
                            return 58;
                        case 187:
                            return 43;
                        case 188:
                            return 60;
                        case 189:
                            return 95;
                        case 190:
                            return 62;
                        case 191:
                            return 63;
                        case 192:
                            return 126;
                        case 219:
                            return 123;
                        case 220:
                            return 124;
                        case 221:
                            return 125;
                        case 222:
                            return 34
                    }
                    if (65 <= a && 90 >= a) return a - 65 + 65
                } else {
                    switch (a) {
                        case 8:
                            return 8;
                        case 9:
                            return 9;
                        case 13:
                            return 13;
                        case 27:
                            return 27;
                        case 32:
                            return 32;
                        case 186:
                            return 59;
                        case 187:
                            return 61;
                        case 188:
                            return 44;
                        case 189:
                            return 45;
                        case 190:
                            return 46;
                        case 191:
                            return 47;
                        case 192:
                            return 96;
                        case 219:
                            return 91;
                        case 220:
                            return 92;
                        case 221:
                            return 93;
                        case 222:
                            return 39
                    }
                    if (48 <= a && 57 >= a) return a - 48 + 48;
                    if (65 <= a && 90 >= a) return a - 65 + 97
                }
                if (96 <= a && 105 >= a) return a - 96 + 48;
                switch (a) {
                    case 8:
                        return 8;
                    case 13:
                        return 13;
                    case 46:
                        return 127;
                    case 106:
                        return 42;
                    case 107:
                        return 43;
                    case 108:
                        return 44;
                    case 110:
                        return 45;
                    case 111:
                        return 46
                }
                return 0
            };
            El.__getKeyLocation = function(a) {
                switch (a) {
                    case 1073741908:
                    case 1073741909:
                    case 1073741910:
                    case 1073741911:
                    case 1073741912:
                    case 1073741913:
                    case 1073741914:
                    case 1073741915:
                    case 1073741916:
                    case 1073741917:
                    case 1073741918:
                    case 1073741919:
                    case 1073741920:
                    case 1073741921:
                    case 1073741922:
                    case 1073741923:
                    case 1073742044:
                        return 3;
                    case 1073742048:
                    case 1073742049:
                    case 1073742050:
                    case 1073742051:
                        return 1;
                    case 1073742052:
                    case 1073742053:
                    case 1073742054:
                    case 1073742055:
                        return 2;
                    default:
                        return 0
                }
            };
            var $u = function() {};
            g["openfl.ui.Mouse"] = $u;
            $u.__name__ = ["openfl", "ui", "Mouse"];
            var ww = {};
            g["openfl.ui._MouseCursor.MouseCursor_Impl_"] = ww;
            ww.__name__ = ["openfl", "ui", "_MouseCursor", "MouseCursor_Impl_"];
            ww.toLimeCursor = function(a) {
                switch (a) {
                    case "arrow":
                        return Sa.ARROW;
                    case "auto":
                        return Sa.DEFAULT;
                    case "button":
                        return Sa.POINTER;
                    case "crosshair":
                        return Sa.CROSSHAIR;
                    case "custom":
                        return Sa.CUSTOM;
                    case "hand":
                        return Sa.MOVE;
                    case "ibeam":
                        return Sa.TEXT;
                    case "resize_nesw":
                        return Sa.RESIZE_NESW;
                    case "resize_ns":
                        return Sa.RESIZE_NS;
                    case "resize_nwse":
                        return Sa.RESIZE_NWSE;
                    case "resize_we":
                        return Sa.RESIZE_WE;
                    case "wait":
                        return Sa.WAIT;
                    case "waitarrow":
                        return Sa.WAIT_ARROW;
                    default:
                        return Sa.DEFAULT
                }
            };
            var Zl = function() {};
            g["openfl.ui.Multitouch"] = Zl;
            Zl.__name__ = ["openfl", "ui", "Multitouch"];
            var wa = function(a) {
                null == a && (a = !1);
                this.debugEnabled = a;
                wa.initialized || wa.init()
            };
            g["openfl.utils.AGALMiniAssembler"] = wa;
            wa.__name__ = ["openfl",
                "utils", "AGALMiniAssembler"
            ];
            wa.init = function() {
                wa.initialized = !0;
                var a = wa.OPMAP,
                    b = new jc("mov", 2, 0, 0);
                a.set("mov", b);
                var c = wa.OPMAP,
                    d = new jc("add", 3, 1, 0);
                c.set("add", d);
                var e = wa.OPMAP,
                    f = new jc("sub", 3, 2, 0);
                e.set("sub", f);
                var h = wa.OPMAP,
                    k = new jc("mul", 3, 3, 0);
                h.set("mul", k);
                var m = wa.OPMAP,
                    g = new jc("div", 3, 4, 0);
                m.set("div", g);
                var l = wa.OPMAP,
                    n = new jc("rcp", 2, 5, 0);
                l.set("rcp", n);
                var p = wa.OPMAP,
                    x = new jc("min", 3, 6, 0);
                p.set("min", x);
                var u = wa.OPMAP,
                    v = new jc("max", 3, 7, 0);
                u.set("max", v);
                var z = wa.OPMAP,
                    w = new jc("frc",
                        2, 8, 0);
                z.set("frc", w);
                var q = wa.OPMAP,
                    y = new jc("sqt", 2, 9, 0);
                q.set("sqt", y);
                var A = wa.OPMAP,
                    L = new jc("rsq", 2, 10, 0);
                A.set("rsq", L);
                var D = wa.OPMAP,
                    Ka = new jc("pow", 3, 11, 0);
                D.set("pow", Ka);
                var t = wa.OPMAP,
                    B = new jc("log", 2, 12, 0);
                t.set("log", B);
                var E = wa.OPMAP,
                    F = new jc("exp", 2, 13, 0);
                E.set("exp", F);
                var pa = wa.OPMAP,
                    H = new jc("nrm", 2, 14, 0);
                pa.set("nrm", H);
                var K = wa.OPMAP,
                    J = new jc("sin", 2, 15, 0);
                K.set("sin", J);
                var R = wa.OPMAP,
                    X = new jc("cos", 2, 16, 0);
                R.set("cos", X);
                var Ca = wa.OPMAP,
                    oa = new jc("crs", 3, 17, 0);
                Ca.set("crs",
                    oa);
                var N = wa.OPMAP,
                    O = new jc("dp3", 3, 18, 0);
                N.set("dp3", O);
                var S = wa.OPMAP,
                    C = new jc("dp4", 3, 19, 0);
                S.set("dp4", C);
                var G = wa.OPMAP,
                    P = new jc("abs", 2, 20, 0);
                G.set("abs", P);
                var Q = wa.OPMAP,
                    la = new jc("neg", 2, 21, 0);
                Q.set("neg", la);
                var T = wa.OPMAP,
                    U = new jc("sat", 2, 22, 0);
                T.set("sat", U);
                var V = wa.OPMAP,
                    bb = new jc("m33", 3, 23, 16);
                V.set("m33", bb);
                var W = wa.OPMAP,
                    Y = new jc("m44", 3, 24, 16);
                W.set("m44", Y);
                var Lc = wa.OPMAP,
                    le = new jc("m34", 3, 25, 16);
                Lc.set("m34", le);
                var ba = wa.OPMAP,
                    aa = new jc("ddx", 2, 26, 288);
                ba.set("ddx", aa);
                var ca =
                    wa.OPMAP,
                    ra = new jc("ddy", 2, 27, 288);
                ca.set("ddy", ra);
                var M = wa.OPMAP,
                    da = new jc("ife", 2, 28, 897);
                M.set("ife", da);
                var ea = wa.OPMAP,
                    Z = new jc("ine", 2, 29, 897);
                ea.set("ine", Z);
                var ia = wa.OPMAP,
                    yc = new jc("ifg", 2, 30, 897);
                ia.set("ifg", yc);
                var ha = wa.OPMAP,
                    ja = new jc("ifl", 2, 31, 897);
                ha.set("ifl", ja);
                var fa = wa.OPMAP,
                    gb = new jc("els", 0, 32, 1921);
                fa.set("els", gb);
                var ka = wa.OPMAP,
                    bd = new jc("eif", 0, 33, 1409);
                ka.set("eif", bd);
                var Gc = wa.OPMAP,
                    Ga = new jc("kil", 1, 39, 160);
                Gc.set("kil", Ga);
                var na = wa.OPMAP,
                    Aa = new jc("tex", 3, 40, 40);
                na.set("tex", Aa);
                var qa = wa.OPMAP,
                    Fc = new jc("sge", 3, 41, 0);
                qa.set("sge", Fc);
                var ma = wa.OPMAP,
                    ta = new jc("slt", 3, 42, 0);
                ma.set("slt", ta);
                var ua = wa.OPMAP,
                    sa = new jc("sgn", 2, 43, 0);
                ua.set("sgn", sa);
                var ob = wa.OPMAP,
                    va = new jc("seq", 3, 44, 0);
                ob.set("seq", va);
                var xa = wa.OPMAP,
                    za = new jc("sne", 3, 45, 0);
                xa.set("sne", za);
                var ya = wa.SAMPLEMAP,
                    Da = new md("rgba", 8, 0);
                ya.set("rgba", Da);
                var Ea = wa.SAMPLEMAP,
                    Fa = new md("compressed", 8, 1);
                Ea.set("compressed", Fa);
                var Ha = wa.SAMPLEMAP,
                    Ja = new md("compressedalpha", 8, 2);
                Ha.set("compressedalpha",
                    Ja);
                var Ia = wa.SAMPLEMAP,
                    La = new md("dxt1", 8, 1);
                Ia.set("dxt1", La);
                var Pa = wa.SAMPLEMAP,
                    Oa = new md("dxt5", 8, 2);
                Pa.set("dxt5", Oa);
                var Na = wa.SAMPLEMAP,
                    Qa = new md("video", 8, 3);
                Na.set("video", Qa);
                var Ta = wa.SAMPLEMAP,
                    Za = new md("2d", 12, 0);
                Ta.set("2d", Za);
                var Xa = wa.SAMPLEMAP,
                    ab = new md("3d", 12, 2);
                Xa.set("3d", ab);
                var Wa = wa.SAMPLEMAP,
                    Ua = new md("cube", 12, 1);
                Wa.set("cube", Ua);
                var $a = wa.SAMPLEMAP,
                    Ra = new md("mipnearest", 24, 1);
                $a.set("mipnearest", Ra);
                var $b = wa.SAMPLEMAP,
                    Pb = new md("miplinear", 24, 2);
                $b.set("miplinear",
                    Pb);
                var db = wa.SAMPLEMAP,
                    Sa = new md("mipnone", 24, 0);
                db.set("mipnone", Sa);
                var pb = wa.SAMPLEMAP,
                    Va = new md("nomip", 24, 0);
                pb.set("nomip", Va);
                var fb = wa.SAMPLEMAP,
                    cb = new md("nearest", 28, 0);
                fb.set("nearest", cb);
                var kb = wa.SAMPLEMAP,
                    eb = new md("linear", 28, 1);
                kb.set("linear", eb);
                var hb = wa.SAMPLEMAP,
                    jb = new md("anisotropic2x", 28, 2);
                hb.set("anisotropic2x", jb);
                var ib = wa.SAMPLEMAP,
                    Ya = new md("anisotropic4x", 28, 3);
                ib.set("anisotropic4x", Ya);
                var lb = wa.SAMPLEMAP,
                    nb = new md("anisotropic8x", 28, 4);
                lb.set("anisotropic8x", nb);
                var rb = wa.SAMPLEMAP,
                    sb = new md("anisotropic16x", 28, 5);
                rb.set("anisotropic16x", sb);
                var tb = wa.SAMPLEMAP,
                    ub = new md("centroid", 16, 1);
                tb.set("centroid", ub);
                var vb = wa.SAMPLEMAP,
                    wb = new md("single", 16, 2);
                vb.set("single", wb);
                var qb = wa.SAMPLEMAP,
                    xb = new md("ignoresampler", 16, 4);
                qb.set("ignoresampler", xb);
                var yb = wa.SAMPLEMAP,
                    Ma = new md("repeat", 20, 1);
                yb.set("repeat", Ma);
                var Rb = wa.SAMPLEMAP,
                    nc = new md("wrap", 20, 1);
                Rb.set("wrap", nc);
                var Ab = wa.SAMPLEMAP,
                    Bb = new md("clamp", 20, 0);
                Ab.set("clamp", Bb);
                var Cb = wa.SAMPLEMAP,
                    nd = new md("clamp_u_repeat_v", 20, 2);
                Cb.set("clamp_u_repeat_v", nd);
                var Db = wa.SAMPLEMAP,
                    Qb = new md("repeat_u_clamp_v", 20, 3);
                Db.set("repeat_u_clamp_v", Qb)
            };
            wa.prototype = {
                agalcode: null,
                error: null,
                verbose: null,
                debugEnabled: null,
                assemble: function(a, b, c, d) {
                    null == d && (d = !1);
                    null == c && (c = 1);
                    var e = ia.getTimer();
                    this.agalcode = new Ae(0);
                    this.error = "";
                    var f = !1;
                    "fragment" == a ? f = !0 : "vertex" != a && (this.error = 'ERROR: mode needs to be "fragment" or "vertex" but is "' + a + '".');
                    this.agalcode.set_endian(1);
                    this.agalcode.writeByte(160);
                    this.agalcode.writeUnsignedInt(c);
                    this.agalcode.writeByte(161);
                    this.agalcode.writeByte(f ? 1 : 0);
                    this.initregmap(c, d);
                    a = ka.replace(b, "\r", "\n").split("\n");
                    b = 0;
                    d = a.length;
                    for (var h = new Ga("<.*>", "g"), k = new Ga("([\\w\\.\\-\\+]+)", "gi"), m = new Ga("^\\w{3}", "ig"), g = new Ga("vc\\[([vofi][acostdip]?[d]?)(\\d*)?(\\.[xyzw](\\+\\d{1,3})?)?\\](\\.[xyzw]{1,4})?|([vofi][acostdip]?[d]?)(\\d*)?(\\.[xyzw]{1,4})?", "gi"), l = new Ga("\\[.*\\]", "ig"), n = new Ga("^\\b[A-Za-z]{1,3}", "ig"), p = new Ga("\\d+", ""), x = new Ga("(\\.[xyzw]{1,4})",
                            ""), u = new Ga("[A-Za-z]{1,3}", "ig"), v = new Ga("(\\.[xyzw]{1,1})", ""), z = new Ga("\\+\\d{1,3}", "ig"), w = 0; w < d && "" == this.error;) {
                        var q = ka.trim(a[w]),
                            y = q.indexOf("//"); - 1 != y && (q = la.substr(q, 0, y));
                        var A = h.match(q) ? h.matchedPos().pos : -1;
                        y = null; - 1 != A && (y = this.match(la.substr(q, A, null), k), q = la.substr(q, 0, A));
                        A = null;
                        m.match(q) && (A = m.matched(0), A = wa.OPMAP.get(A));
                        if (null == A) 3 <= q.length && Za.warn("warning: bad line " + w + ": " + a[w], {
                            fileName: "AGALMiniAssembler.hx",
                            lineNumber: 262,
                            className: "openfl.utils.AGALMiniAssembler",
                            methodName: "assemble"
                        });
                        else if (this.debugEnabled && Za.info(A, {
                                fileName: "AGALMiniAssembler.hx",
                                lineNumber: 272,
                                className: "openfl.utils.AGALMiniAssembler",
                                methodName: "assemble"
                            }), null == A) 3 <= q.length && Za.warn("warning: bad line " + w + ": " + a[w], {
                            fileName: "AGALMiniAssembler.hx",
                            lineNumber: 279,
                            className: "openfl.utils.AGALMiniAssembler",
                            methodName: "assemble"
                        });
                        else {
                            q = la.substr(q, q.indexOf(A.name) + A.name.length, null);
                            if (0 != (A.flags & 256) && 2 > c) {
                                this.error = "error: opcode requires version 2.";
                                break
                            }
                            if (0 != (A.flags &
                                    64) && f) {
                                this.error = "error: opcode is only allowed in vertex programs.";
                                break
                            }
                            if (0 != (A.flags & 32) && !f) {
                                this.error = "error: opcode is only allowed in fragment programs.";
                                break
                            }
                            this.verbose && Za.info("emit opcode=" + E.string(A), {
                                fileName: "AGALMiniAssembler.hx",
                                lineNumber: 308,
                                className: "openfl.utils.AGALMiniAssembler",
                                methodName: "assemble"
                            });
                            this.agalcode.writeUnsignedInt(A.emitCode);
                            ++b;
                            if (4096 < b) {
                                this.error = "error: too many opcodes. maximum is 4096.";
                                break
                            }
                            var L = this.match(q, g);
                            if (L.length != A.numRegister) {
                                this.error =
                                    "error: wrong number of operands. found " + L.length + " but expected " + A.numRegister + ".";
                                break
                            }
                            q = !1;
                            for (var D = 160, Ka = 0, t = L.length; Ka < t;) {
                                var B = Ka++,
                                    F = !1,
                                    pa = this.match(L[B], l);
                                0 < pa.length && (L[B] = ka.replace(L[B], pa[0], "0"), this.verbose && Za.info("IS REL", {
                                    fileName: "AGALMiniAssembler.hx",
                                    lineNumber: 344,
                                    className: "openfl.utils.AGALMiniAssembler",
                                    methodName: "assemble"
                                }), F = !0);
                                var H = this.match(L[B], n);
                                if (0 == H.length) {
                                    this.error = "error: could not parse operand " + B + " (" + L[B] + ").";
                                    q = !0;
                                    break
                                }
                                var K = wa.REGMAP.get(H[0]);
                                this.debugEnabled && Za.info(K, {
                                    fileName: "AGALMiniAssembler.hx",
                                    lineNumber: 363,
                                    className: "openfl.utils.AGALMiniAssembler",
                                    methodName: "assemble"
                                });
                                if (null == K) {
                                    this.error = "error: could not find register name for operand " + B + " (" + L[B] + ").";
                                    q = !0;
                                    break
                                }
                                if (f) {
                                    if (0 == (K.flags & 32)) {
                                        this.error = "error: register operand " + B + " (" + L[B] + ") only allowed in vertex programs.";
                                        q = !0;
                                        break
                                    }
                                    if (F) {
                                        this.error = "error: register operand " + B + " (" + L[B] + ") relative adressing not allowed in fragment programs.";
                                        q = !0;
                                        break
                                    }
                                } else if (0 ==
                                    (K.flags & 64)) {
                                    this.error = "error: register operand " + B + " (" + L[B] + ") only allowed in fragment programs.";
                                    q = !0;
                                    break
                                }
                                H = L[B].indexOf(K.name) + K.name.length;
                                L[B] = la.substr(L[B], H, null);
                                var J = F ? this.match(pa[0], p) : this.match(L[B], p);
                                H = 0;
                                0 < J.length && (H = E.parseInt(J[0]));
                                if (Qd.gt(H, K.range)) {
                                    this.error = "error: register operand " + B + " (" + L[B] + ") index exceeds limit of " + E.string(Qd.toFloat(K.range + 1)) + ".";
                                    q = !0;
                                    break
                                }
                                var R = this.match(L[B], x),
                                    X = 0 == B && 0 == (A.flags & 128),
                                    Ca = 2 == B && 0 != (A.flags & 8),
                                    oa = 0,
                                    N = 0,
                                    O = 0;
                                if (X &&
                                    F) {
                                    this.error = "error: relative can not be destination";
                                    q = !0;
                                    break
                                }
                                if (0 < R.length) {
                                    for (var S = J = 0, C = R[0].length, G = 1; G < C;) S = la.cca(R[0], G) - 120, Qd.gt(S, 2) && (S = 3), J = X ? J | 1 << S : J | S << (G - 1 << 1), ++G;
                                    if (!X)
                                        for (; 4 >= G;) J |= S << (G - 1 << 1), ++G
                                } else J = X ? 15 : 228;
                                if (F) {
                                    R = this.match(pa[0], u);
                                    oa = wa.REGMAP.get(R[0]);
                                    if (null == oa) {
                                        this.error = "error: bad index register";
                                        q = !0;
                                        break
                                    }
                                    oa = oa.emitCode;
                                    S = this.match(pa[0], v);
                                    if (0 == S.length) {
                                        this.error = "error: bad index register select";
                                        q = !0;
                                        break
                                    }
                                    N = la.cca(S[0], 1) - 120;
                                    Qd.gt(N, 2) && (N = 3);
                                    pa = this.match(pa[0], z);
                                    0 < pa.length && (O = E.parseInt(pa[0]));
                                    if (0 > O || 255 < O) {
                                        this.error = "error: index offset " + O + " out of bounds. [0..255]";
                                        q = !0;
                                        break
                                    }
                                    this.verbose && Za.info("RELATIVE: type=" + oa + "==" + R[0] + " sel=" + E.string(Qd.toFloat(N)) + "==" + S[0] + " idx=" + E.string(Qd.toFloat(H)) + " offset=" + O, {
                                        fileName: "AGALMiniAssembler.hx",
                                        lineNumber: 518,
                                        className: "openfl.utils.AGALMiniAssembler",
                                        methodName: "assemble"
                                    })
                                }
                                this.verbose && Za.info("  emit argcode=" + E.string(K) + "[" + E.string(Qd.toFloat(H)) + "][" + J + "]", {
                                    fileName: "AGALMiniAssembler.hx",
                                    lineNumber: 525,
                                    className: "openfl.utils.AGALMiniAssembler",
                                    methodName: "assemble"
                                });
                                if (X) this.agalcode.writeShort(H), this.agalcode.writeByte(J), this.agalcode.writeByte(K.emitCode), D -= 32;
                                else {
                                    if (Ca) {
                                        this.verbose && Za.info("  emit sampler", {
                                            fileName: "AGALMiniAssembler.hx",
                                            lineNumber: 541,
                                            className: "openfl.utils.AGALMiniAssembler",
                                            methodName: "assemble"
                                        });
                                        B = 5;
                                        pa = F = 0;
                                        for (K = null == y ? 0 : y.length; pa < K;) J = pa++, this.verbose && Za.info("    opt: " + y[J], {
                                            fileName: "AGALMiniAssembler.hx",
                                            lineNumber: 552,
                                            className: "openfl.utils.AGALMiniAssembler",
                                            methodName: "assemble"
                                        }), X = wa.SAMPLEMAP.get(y[J]), null == X ? (F = E.parseFloat(y[J]), this.verbose && Za.info("    bias: " + F, {
                                            fileName: "AGALMiniAssembler.hx",
                                            lineNumber: 565,
                                            className: "openfl.utils.AGALMiniAssembler",
                                            methodName: "assemble"
                                        })) : (16 != X.flag && (B &= ~(15 << X.flag)), B |= X.mask << X.flag);
                                        this.agalcode.writeShort(H);
                                        this.agalcode.writeByte(E["int"](8 * F));
                                        this.agalcode.writeByte(0);
                                        this.agalcode.writeUnsignedInt(B);
                                        this.verbose && Za.info("    bits: " + (B - 5), {
                                            fileName: "AGALMiniAssembler.hx",
                                            lineNumber: 586,
                                            className: "openfl.utils.AGALMiniAssembler",
                                            methodName: "assemble"
                                        })
                                    } else 0 == B && (this.agalcode.writeUnsignedInt(0), D -= 32), this.agalcode.writeShort(H), this.agalcode.writeByte(O), this.agalcode.writeByte(J), this.agalcode.writeByte(K.emitCode), this.agalcode.writeByte(oa), this.agalcode.writeShort(F ? N | 32768 : 0);
                                    D -= 64
                                }
                            }
                            for (y = 0; y < D;) this.agalcode.writeByte(0), y += 8;
                            if (q) break
                        }++w
                    }
                    "" != this.error && (this.error += "\n  at line " + w + " " + a[w], Ve.set_length(this.agalcode, 0), Za.info(this.error, {
                        fileName: "AGALMiniAssembler.hx",
                        lineNumber: 631,
                        className: "openfl.utils.AGALMiniAssembler",
                        methodName: "assemble"
                    }));
                    if (this.debugEnabled) {
                        c = "generated bytecode:";
                        f = 0;
                        for (a = Ve.get_length(this.agalcode); f < a;) b = f++, 0 == b % 16 && (c += "\n"), 0 == b % 4 && (c += " "), b = ka.hex(this.agalcode.get(b), 2), 2 > b.length && (b = "0" + b), c += b;
                        Za.info(c, {
                            fileName: "AGALMiniAssembler.hx",
                            lineNumber: 662,
                            className: "openfl.utils.AGALMiniAssembler",
                            methodName: "assemble"
                        })
                    }
                    this.verbose && Za.info("AGALMiniAssembler.assemble time: " + (ia.getTimer() - e) / 1E3 + "s", {
                        fileName: "AGALMiniAssembler.hx",
                        lineNumber: 667,
                        className: "openfl.utils.AGALMiniAssembler",
                        methodName: "assemble"
                    });
                    return this.agalcode
                },
                initregmap: function(a, b) {
                    var c = wa.REGMAP,
                        d = new ng("va", "vertex attribute", 0, b ? 1024 : 1 == a || 2 == a ? 7 : 15, 66);
                    c.set("va", d);
                    c = wa.REGMAP;
                    d = new ng("vc", "vertex constant", 1, b ? 1024 : 1 == a ? 127 : 249, 66);
                    c.set("vc", d);
                    c = wa.REGMAP;
                    d = new ng("vt", "vertex temporary", 2, b ? 1024 : 1 == a ? 7 : 25, 67);
                    c.set("vt", d);
                    c = wa.REGMAP;
                    d = new ng("vo", "vertex output", 3, b ? 1024 : 0, 65);
                    c.set("vo", d);
                    c = wa.REGMAP;
                    d = new ng("vi", "varying", 4, b ? 1024 : 1 == a ? 7 : 9, 99);
                    c.set("vi", d);
                    c = wa.REGMAP;
                    d = new ng("fc", "fragment constant",
                        1, b ? 1024 : 1 == a ? 27 : 2 == a ? 63 : 199, 34);
                    c.set("fc", d);
                    c = wa.REGMAP;
                    d = new ng("ft", "fragment temporary", 2, b ? 1024 : 1 == a ? 7 : 25, 35);
                    c.set("ft", d);
                    c = wa.REGMAP;
                    d = new ng("fs", "texture sampler", 5, b ? 1024 : 7, 34);
                    c.set("fs", d);
                    c = wa.REGMAP;
                    d = new ng("fo", "fragment output", 3, b ? 1024 : 1 == a ? 0 : 3, 33);
                    c.set("fo", d);
                    c = wa.REGMAP;
                    a = new ng("fd", "fragment depth output", 6, b ? 1024 : 1 == a ? -1 : 0, 33);
                    c.set("fd", a);
                    a = wa.REGMAP;
                    b = new ng("iid", "instance id", 7, b ? 1024 : 0, 66);
                    a.set("iid", b);
                    b = wa.REGMAP;
                    a = wa.REGMAP.get("vo");
                    b.set("op", a);
                    b = wa.REGMAP;
                    a = wa.REGMAP.get("vi");
                    b.set("i", a);
                    b = wa.REGMAP;
                    a = wa.REGMAP.get("vi");
                    b.set("v", a);
                    b = wa.REGMAP;
                    a = wa.REGMAP.get("fo");
                    b.set("oc", a);
                    b = wa.REGMAP;
                    a = wa.REGMAP.get("fd");
                    b.set("od", a);
                    b = wa.REGMAP;
                    a = wa.REGMAP.get("vi");
                    b.set("fi", a)
                },
                match: function(a, b) {
                    for (var c = [], d = 0; b.matchSub(a, d);) d = b.matched(0), c.push(d), d = b.matchedPos().pos + d.length;
                    return c
                },
                __class__: wa
            };
            var jc = function(a, b, c, d) {
                this.name = a;
                this.numRegister = b;
                this.emitCode = c;
                this.flags = d
            };
            g["openfl.utils._AGALMiniAssembler.OpCode"] = jc;
            jc.__name__ = ["openfl", "utils", "_AGALMiniAssembler", "OpCode"];
            jc.prototype = {
                emitCode: null,
                flags: null,
                name: null,
                numRegister: null,
                toString: function() {
                    return '[OpCode name="' + this.name + '", numRegister=' + this.numRegister + ", emitCode=" + this.emitCode + ", flags=" + this.flags + "]"
                },
                __class__: jc
            };
            var ng = function(a, b, c, d, e) {
                this.name = a;
                this.longName = b;
                this.emitCode = c;
                this.range = d;
                this.flags = e
            };
            g["openfl.utils._AGALMiniAssembler.Register"] = ng;
            ng.__name__ = ["openfl", "utils", "_AGALMiniAssembler", "Register"];
            ng.prototype = {
                emitCode: null,
                name: null,
                longName: null,
                flags: null,
                range: null,
                toString: function() {
                    return '[Register name="' + this.name + '", longName="' + this.longName + '", emitCode=' + E.string(Qd.toFloat(this.emitCode)) + ", range=" + E.string(Qd.toFloat(this.range)) + ", flags=" + E.string(Qd.toFloat(this.flags)) + "]"
                },
                __class__: ng
            };
            var md = function(a, b, c) {
                this.name = a;
                this.flag = b;
                this.mask = c
            };
            g["openfl.utils._AGALMiniAssembler.Sampler"] = md;
            md.__name__ = ["openfl", "utils", "_AGALMiniAssembler", "Sampler"];
            md.prototype = {
                flag: null,
                mask: null,
                name: null,
                __class__: md
            };
            var mv = function() {};
            g["openfl.utils.IAssetCache"] = mv;
            mv.__name__ = ["openfl", "utils", "IAssetCache"];
            mv.prototype = {
                get_enabled: null,
                getBitmapData: null,
                getFont: null,
                getSound: null,
                hasBitmapData: null,
                hasFont: null,
                hasSound: null,
                removeBitmapData: null,
                setBitmapData: null,
                setFont: null,
                setSound: null,
                __class__: mv
            };
            var Qr = function() {
                this.__enabled = !0;
                this.bitmapData = new fb;
                this.font = new fb;
                this.sound = new fb
            };
            g["openfl.utils.AssetCache"] = Qr;
            Qr.__name__ = ["openfl", "utils", "AssetCache"];
            Qr.__interfaces__ = [mv];
            Qr.prototype = {
                bitmapData: null,
                font: null,
                sound: null,
                __enabled: null,
                getBitmapData: function(a) {
                    return this.bitmapData.get(a)
                },
                getFont: function(a) {
                    return this.font.get(a)
                },
                getSound: function(a) {
                    return this.sound.get(a)
                },
                hasBitmapData: function(a) {
                    return this.bitmapData.exists(a)
                },
                hasFont: function(a) {
                    return this.font.exists(a)
                },
                hasSound: function(a) {
                    return this.sound.exists(a)
                },
                removeBitmapData: function(a) {
                    Da.cache.image.remove(a);
                    return this.bitmapData.remove(a)
                },
                setBitmapData: function(a, b) {
                    this.bitmapData.set(a,
                        b)
                },
                setFont: function(a, b) {
                    this.font.set(a, b)
                },
                setSound: function(a, b) {
                    this.sound.set(a, b)
                },
                get_enabled: function() {
                    return this.__enabled
                },
                __class__: Qr
            };
            var Nd = function() {
                Oc.call(this)
            };
            g["openfl.utils.AssetLibrary"] = Nd;
            Nd.__name__ = ["openfl", "utils", "AssetLibrary"];
            Nd.fromBytes = function(a, b) {
                return Nd.fromManifest(gd.fromBytes(Ve.toBytes(a), b))
            };
            Nd.fromFile = function(a, b) {
                return Nd.fromManifest(gd.fromFile(a, b))
            };
            Nd.fromManifest = function(a) {
                a = Oc.fromManifest(a);
                if (null != a) {
                    if (E.is(a, Nd)) return a;
                    var b =
                        new Nd;
                    b.__proxy = a;
                    return b
                }
                return null
            };
            Nd.loadFromBytes = function(a, b) {
                return gd.loadFromBytes(Ve.toBytes(a), b).then(function(a) {
                    return Nd.loadFromManifest(a)
                })
            };
            Nd.loadFromFile = function(a, b) {
                return gd.loadFromFile(a, b).then(function(a) {
                    return Nd.loadFromManifest(a)
                })
            };
            Nd.loadFromManifest = function(a) {
                a = Nd.fromManifest(a);
                return null != a ? a.load().then(function(a) {
                    return oc.withValue(a)
                }) : oc.withError("Could not load asset manifest")
            };
            Nd.__super__ = Oc;
            Nd.prototype = p(Oc.prototype, {
                __proxy: null,
                exists: function(a,
                    b) {
                    return null != this.__proxy ? this.__proxy.exists(a, b) : Oc.prototype.exists.call(this, a, b)
                },
                getAsset: function(a, b) {
                    return null != this.__proxy ? this.__proxy.getAsset(a, b) : Oc.prototype.getAsset.call(this, a, b)
                },
                getAudioBuffer: function(a) {
                    return null != this.__proxy ? this.__proxy.getAudioBuffer(a) : Oc.prototype.getAudioBuffer.call(this, a)
                },
                getBytes: function(a) {
                    return null != this.__proxy ? this.__proxy.getBytes(a) : Oc.prototype.getBytes.call(this, a)
                },
                getFont: function(a) {
                    return null != this.__proxy ? this.__proxy.getFont(a) :
                        Oc.prototype.getFont.call(this, a)
                },
                getImage: function(a) {
                    return null != this.__proxy ? this.__proxy.getImage(a) : Oc.prototype.getImage.call(this, a)
                },
                getText: function(a) {
                    return null != this.__proxy ? this.__proxy.getText(a) : Oc.prototype.getText.call(this, a)
                },
                isLocal: function(a, b) {
                    return null != this.__proxy ? this.__proxy.isLocal(a, b) : Oc.prototype.isLocal.call(this, a, b)
                },
                loadAsset: function(a, b) {
                    return null != this.__proxy ? this.__proxy.loadAsset(a, b) : Oc.prototype.loadAsset.call(this, a, b)
                },
                load: function() {
                    return null !=
                        this.__proxy ? this.__proxy.load() : Oc.prototype.load.call(this)
                },
                loadAudioBuffer: function(a) {
                    return null != this.__proxy ? this.__proxy.loadAudioBuffer(a) : Oc.prototype.loadAudioBuffer.call(this, a)
                },
                loadBytes: function(a) {
                    return null != this.__proxy ? this.__proxy.loadBytes(a) : Oc.prototype.loadBytes.call(this, a)
                },
                loadFont: function(a) {
                    return null != this.__proxy ? this.__proxy.loadFont(a) : Oc.prototype.loadFont.call(this, a)
                },
                loadImage: function(a) {
                    return null != this.__proxy ? this.__proxy.loadImage(a) : Oc.prototype.loadImage.call(this,
                        a)
                },
                loadText: function(a) {
                    return null != this.__proxy ? this.__proxy.loadText(a) : Oc.prototype.loadText.call(this, a)
                },
                unload: function() {
                    null != this.__proxy ? this.__proxy.unload() : Oc.prototype.unload.call(this)
                },
                __class__: Nd
            });
            var Tb = function() {};
            g["openfl.utils.Assets"] = Tb;
            Tb.__name__ = ["openfl", "utils", "Assets"];
            Tb.exists = function(a, b) {
                return Da.exists(a, b)
            };
            Tb.getBitmapData = function(a, b) {
                null == b && (b = !0);
                if (b && Tb.cache.get_enabled() && Tb.cache.hasBitmapData(a)) {
                    var c = Tb.cache.getBitmapData(a);
                    if (Tb.isValidBitmapData(c)) return c
                }
                c =
                    Da.getImage(a, !1);
                return null != c ? (c = Kb.fromImage(c), b && Tb.cache.get_enabled() && Tb.cache.setBitmapData(a, c), c) : null
            };
            Tb.getFont = function(a, b) {
                null == b && (b = !0);
                if (b && Tb.cache.get_enabled() && Tb.cache.hasFont(a)) return Tb.cache.getFont(a);
                var c = Da.getFont(a, !1);
                if (null != c) {
                    var d = new ud;
                    d.__fromLimeFont(c);
                    b && Tb.cache.get_enabled() && Tb.cache.setFont(a, d);
                    return d
                }
                return new ud
            };
            Tb.getSound = function(a, b) {
                null == b && (b = !0);
                if (b && Tb.cache.get_enabled() && Tb.cache.hasSound(a)) {
                    var c = Tb.cache.getSound(a);
                    if (Tb.isValidSound(c)) return c
                }
                c =
                    Da.getAudioBuffer(a, !1);
                return null != c ? (c = yk.fromAudioBuffer(c), b && Tb.cache.get_enabled() && Tb.cache.setSound(a, c), c) : null
            };
            Tb.getText = function(a) {
                return Da.getText(a)
            };
            Tb.isValidBitmapData = function(a) {
                return null != a && null != a.image
            };
            Tb.isValidSound = function(a) {
                return !0
            };
            Tb.loadSound = function(a, b) {
                null == b && (b = !0);
                null == b && (b = !0);
                var c = new Le;
                Da.loadAudioBuffer(a, b).onComplete(function(d) {
                    null != d ? (d = yk.fromAudioBuffer(d), b && Tb.cache.get_enabled() && Tb.cache.setSound(a, d), c.complete(d)) : c.error('[Assets] Could not load Sound "' +
                        a + '"')
                }).onError(q(c, c.error)).onProgress(q(c, c.progress));
                return c.future
            };
            var Ve = {};
            g["openfl.utils._ByteArray.ByteArray_Impl_"] = Ve;
            Ve.__name__ = ["openfl", "utils", "_ByteArray", "ByteArray_Impl_"];
            Ve.fromArrayBuffer = function(a) {
                return null == a ? null : Ae.fromBytes(ub.ofData(a))
            };
            Ve.fromBytes = function(a) {
                return null == a ? null : E.is(a, Ae) ? a : Ae.fromBytes(a)
            };
            Ve.toBytes = function(a) {
                return a
            };
            Ve.get_length = function(a) {
                return null == a ? 0 : a.length
            };
            Ve.set_length = function(a, b) {
                0 < b && (a.__resize(b), b < a.position && (a.position =
                    b));
                return a.length = b
            };
            var Ae = function(a) {
                null == a && (a = 0);
                var b = ub.alloc(a);
                ub.call(this, b.b.buffer);
                this.__length = a;
                this.set_endian(Ae.get_defaultEndian());
                this.objectEncoding = Ae.defaultObjectEncoding;
                this.position = 0
            };
            g["openfl.utils.ByteArrayData"] = Ae;
            Ae.__name__ = ["openfl", "utils", "ByteArrayData"];
            Ae.__interfaces__ = [iv, jv];
            Ae.fromBytes = function(a) {
                var b = new Ae;
                b.__fromBytes(a);
                return b
            };
            Ae.get_defaultEndian = function() {
                null == Ae.__defaultEndian && (je.get_endianness() == Ri.LITTLE_ENDIAN ? Ae.__defaultEndian =
                    1 : Ae.__defaultEndian = 0);
                return Ae.__defaultEndian
            };
            Ae.set_defaultEndian = function(a) {
                return Ae.__defaultEndian = a
            };
            Ae.__super__ = ub;
            Ae.prototype = p(ub.prototype, {
                objectEncoding: null,
                position: null,
                __endian: null,
                __length: null,
                readByte: function() {
                    var a = this.readUnsignedByte();
                    return 0 != (a & 128) ? a - 256 : a
                },
                readInt: function() {
                    var a = this.readUnsignedByte(),
                        b = this.readUnsignedByte(),
                        c = this.readUnsignedByte(),
                        d = this.readUnsignedByte();
                    return 1 == this.get_endian() ? d << 24 | c << 16 | b << 8 | a : a << 24 | b << 16 | c << 8 | d
                },
                readUnsignedByte: function() {
                    if (this.position <
                        this.length) return this.get(this.position++);
                    throw new Z(new Lo);
                },
                readUnsignedInt: function() {
                    var a = this.readUnsignedByte(),
                        b = this.readUnsignedByte(),
                        c = this.readUnsignedByte(),
                        d = this.readUnsignedByte();
                    return 1 == this.get_endian() ? d << 24 | c << 16 | b << 8 | a : a << 24 | b << 16 | c << 8 | d
                },
                readUnsignedShort: function() {
                    var a = this.readUnsignedByte(),
                        b = this.readUnsignedByte();
                    return 1 == this.get_endian() ? (b << 8) + a : a << 8 | b
                },
                readUTF: function() {
                    var a = this.readUnsignedShort();
                    return this.readUTFBytes(a)
                },
                readUTFBytes: function(a) {
                    if (this.position +
                        a > this.length) throw new Z(new Lo);
                    this.position += a;
                    return this.getString(this.position - a, a)
                },
                writeByte: function(a) {
                    this.__resize(this.position + 1);
                    this.set(this.position++, a & 255)
                },
                writeBytes: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = 0);
                    0 != Ve.get_length(a) && (0 == c && (c = Ve.get_length(a) - b), this.__resize(this.position + c), this.blit(this.position, a, b, c), this.position += c)
                },
                writeInt: function(a) {
                    this.__resize(this.position + 4);
                    1 == this.get_endian() ? (this.set(this.position++, a & 255), this.set(this.position++, a >>
                        8 & 255), this.set(this.position++, a >> 16 & 255), this.set(this.position++, a >> 24 & 255)) : (this.set(this.position++, a >> 24 & 255), this.set(this.position++, a >> 16 & 255), this.set(this.position++, a >> 8 & 255), this.set(this.position++, a & 255))
                },
                writeShort: function(a) {
                    this.__resize(this.position + 2);
                    1 == this.get_endian() ? (this.set(this.position++, a), this.set(this.position++, a >> 8)) : (this.set(this.position++, a >> 8), this.set(this.position++, a))
                },
                writeUnsignedInt: function(a) {
                    this.writeInt(a)
                },
                writeUTFBytes: function(a) {
                    a = ub.ofString(a);
                    this.writeBytes(Ve.fromBytes(a))
                },
                __fromBytes: function(a) {
                    this.__setData(a);
                    this.length = a.length
                },
                __resize: function(a) {
                    if (a > this.__length) {
                        var b = ub.alloc(3 * (a + 1) >> 1);
                        if (0 < this.__length) {
                            var c = this.length;
                            this.length = this.__length;
                            b.blit(0, this, 0, this.__length);
                            this.length = c
                        }
                        this.__setData(b)
                    }
                    this.length < a && (this.length = a)
                },
                __setData: function(a) {
                    this.b = a.b;
                    this.__length = a.length;
                    this.data = a.data
                },
                get_endian: function() {
                    return this.__endian
                },
                set_endian: function(a) {
                    return this.__endian = a
                },
                __class__: Ae
            });
            var nv = function() {};
            g["haxe.lang.Iterator"] = nv;
            nv.__name__ = ["haxe", "lang", "Iterator"];
            nv.prototype = {
                hasNext: null,
                next: null,
                __class__: nv
            };
            var ov = function() {};
            g["haxe.lang.Iterable"] = ov;
            ov.__name__ = ["haxe", "lang", "Iterable"];
            ov.prototype = {
                iterator: null,
                __class__: ov
            };
            var Te = function() {};
            g["swf.exporters.animate.AnimateSymbol"] = Te;
            Te.__name__ = ["swf", "exporters", "animate", "AnimateSymbol"];
            Te.prototype = {
                className: null,
                id: null,
                __createObject: function(a) {
                    return null
                },
                __initObject: function(a, b) {},
                __class__: Te
            };
            var Rr = function() {};
            g["swf.exporters.animate.AnimateBitmapSymbol"] = Rr;
            Rr.__name__ = ["swf", "exporters", "animate", "AnimateBitmapSymbol"];
            Rr.__super__ = Te;
            Rr.prototype = p(Te.prototype, {
                alpha: null,
                path: null,
                smooth: null,
                __createObject: function(a) {
                    return new If(Kb.fromImage(a.getImage(this.path)), 1, 0 != this.smooth)
                },
                __class__: Rr
            });
            var Sr = function() {};
            g["swf.exporters.animate.AnimateButtonSymbol"] = Sr;
            Sr.__name__ = ["swf", "exporters", "animate", "AnimateButtonSymbol"];
            Sr.__super__ = Te;
            Sr.prototype = p(Te.prototype, {
                downState: null,
                hitState: null,
                overState: null,
                upState: null,
                library: null,
                __constructor: function(a) {
                    null != this.downState && a.set_downState(this.downState.__createObject(this.library));
                    null != this.hitState && a.set_hitTestState(this.hitState.__createObject(this.library));
                    null != this.overState && a.set_overState(this.overState.__createObject(this.library));
                    null != this.upState && a.set_upState(this.upState.__createObject(this.library))
                },
                __createObject: function(a) {
                    var b = null;
                    Dj.__constructor = q(this, this.__constructor);
                    this.library = a;
                    null != this.className && (a = Q.resolveClass(this.className), null != a && (b = Q.createInstance(a, [])));
                    null == b && (b = new Dj);
                    return b
                },
                __initObject: function(a, b) {
                    this.library = a;
                    this.__constructor(b)
                },
                __class__: Sr
            });
            var Tr = function() {};
            g["swf.exporters.animate.AnimateDynamicTextSymbol"] = Tr;
            Tr.__name__ = ["swf", "exporters", "animate", "AnimateDynamicTextSymbol"];
            Tr.__super__ = Te;
            Tr.prototype = p(Te.prototype, {
                align: null,
                border: null,
                color: null,
                fontHeight: null,
                fontID: null,
                fontName: null,
                height: null,
                html: null,
                indent: null,
                input: null,
                leading: null,
                leftMargin: null,
                multiline: null,
                password: null,
                rightMargin: null,
                selectable: null,
                text: null,
                width: null,
                wordWrap: null,
                x: null,
                y: null,
                __createObject: function(a) {
                    var b = new hd;
                    b.set_width(this.width);
                    b.set_height(this.height);
                    b.__offsetX = this.x;
                    b.__offsetY = this.y;
                    b.set_multiline(this.multiline);
                    b.set_wordWrap(this.wordWrap);
                    b.set_displayAsPassword(this.password);
                    this.border && (b.set_border(!0), b.set_background(!0));
                    b.set_selectable(this.selectable);
                    this.input && b.set_type(1);
                    var c = new kf;
                    null != this.color && (c.color = this.color & 16777215);
                    c.size = Math.round(this.fontHeight / 20);
                    a = a.symbols.get(this.fontID);
                    null != a && (c.__ascent = a.ascent / 20 / 1024, c.__descent = a.descent / 20 / 1024);
                    c.font = this.fontName;
                    a = !1;
                    var d = c.font;
                    if (null == d) a = !0;
                    else switch (d) {
                        case "":
                        case "_sans":
                        case "_serif":
                        case "_typewriter":
                            a = !0;
                            break;
                        default:
                            d = 0;
                            for (var e = ud.enumerateFonts(); d < e.length;) {
                                var f = e[d];
                                ++d;
                                if (f.get_fontName() == c.font) {
                                    a = !0;
                                    break
                                }
                            }
                    }
                    if (!a)
                        for (d = new Ga("[^a-zA-Z]+", "g"), e = 0, f = ud.enumerateFonts(); e <
                            f.length;) {
                            var h = f[e];
                            ++e;
                            if (la.substr(d.replace(h.get_fontName(), ""), 0, this.fontName.length) == this.fontName) {
                                c.font = h.get_fontName();
                                a = !0;
                                break
                            }
                        }
                    a ? b.set_embedFonts(!0) : hd.__missingFontWarning.exists(c.font) || (hd.__missingFontWarning.set(c.font, !0), Za.warn('Could not find required font "' + c.font + '", it has not been embedded', {
                        fileName: "AnimateDynamicTextSymbol.hx",
                        lineNumber: 143,
                        className: "swf.exporters.animate.AnimateDynamicTextSymbol",
                        methodName: "__createObject"
                    }));
                    null != this.align && ("center" ==
                        this.align ? c.align = 0 : "right" == this.align ? c.align = 4 : "justify" == this.align && (c.align = 2), c.leftMargin = E["int"](this.leftMargin / 20), c.rightMargin = E["int"](this.rightMargin / 20), c.indent = E["int"](this.indent / 20), c.leading = E["int"](this.leading / 20));
                    b.set_defaultTextFormat(c);
                    null != this.text && (this.html ? b.set_htmlText(this.text) : b.set_text(this.text));
                    return b
                },
                __class__: Tr
            });
            var Ur = function() {};
            g["swf.exporters.animate.AnimateFontSymbol"] = Ur;
            Ur.__name__ = ["swf", "exporters", "animate", "AnimateFontSymbol"];
            Ur.__super__ = Te;
            Ur.prototype = p(Te.prototype, {
                advances: null,
                ascent: null,
                bold: null,
                codes: null,
                descent: null,
                glyphs: null,
                italic: null,
                leading: null,
                name: null,
                __class__: Ur
            });
            var pv = function() {};
            g["swf.exporters.animate.AnimateFrame"] = pv;
            pv.__name__ = ["swf", "exporters", "animate", "AnimateFrame"];
            pv.prototype = {
                label: null,
                objects: null,
                script: null,
                scriptSource: null,
                __class__: pv
            };
            var qv = function() {};
            g["swf.exporters.animate.AnimateFrameObject"] = qv;
            qv.__name__ = ["swf", "exporters", "animate", "AnimateFrameObject"];
            qv.prototype = {
                blendMode: null,
                cacheAsBitmap: null,
                clipDepth: null,
                colorTransform: null,
                depth: null,
                filters: null,
                id: null,
                matrix: null,
                name: null,
                symbol: null,
                type: null,
                visible: null,
                __class__: qv
            };
            var U = function(a, b) {
                Oc.call(this);
                this.id = a;
                this.instanceID = null != b ? b : a;
                this.alphaCheck = new fb;
                this.bitmapClassNames = new fb;
                this.rootPath = "";
                null == U.instances && (U.instances = new fb);
                U.instances.set(b, this)
            };
            g["swf.exporters.animate.AnimateLibrary"] = U;
            U.__name__ = ["swf", "exporters", "animate", "AnimateLibrary"];
            U.get = function(a) {
                return null ==
                    U.instances ? null : U.instances.get(a)
            };
            U.__super__ = Nd;
            U.prototype = p(Nd.prototype, {
                alphaCheck: null,
                bitmapClassNames: null,
                bitmapSymbols: null,
                frameRate: null,
                id: null,
                instanceID: null,
                preloading: null,
                root: null,
                rootPath: null,
                symbols: null,
                symbolsByClassName: null,
                uuid: null,
                exists: function(a, b) {
                    if (null != this.symbols) {
                        if ("" == a && "MOVIE_CLIP" == b) return !0;
                        if ("IMAGE" == b || "MOVIE_CLIP" == b) return null != this.symbolsByClassName ? this.symbolsByClassName.exists(a) : !1
                    }
                    return Nd.prototype.exists.call(this, a, b)
                },
                getImage: function(a) {
                    this.bitmapClassNames.exists(a) &&
                        (a = this.bitmapClassNames.get(a));
                    if (!this.alphaCheck.exists(a)) {
                        for (var b = 0, c = this.bitmapSymbols; b < c.length;) {
                            var d = c[b];
                            ++b;
                            if (d.path == a && null != d.alpha) return b = Nd.prototype.getImage.call(this, a), c = Nd.prototype.getImage.call(this, d.alpha), this.__copyChannel(b, c), this.cachedImages.set(a, b), this.cachedImages.remove(d.alpha), this.alphaCheck.set(a, !0), b
                        }
                        this.alphaCheck.set(a, !0)
                    }
                    return Nd.prototype.getImage.call(this, a)
                },
                getMovieClip: function(a) {
                    if (null == this.symbols) return null;
                    if ("" == a) return this.root.__createObject(this);
                    a = this.symbolsByClassName.get(a);
                    return null != a && E.is(a, Ll) ? aa.__cast(a, Ll).__createObject(this) : null
                },
                isLocal: function(a, b) {
                    return !0
                },
                load: function() {
                    var a = this;
                    null != this.id && this.preload.set(this.id, !0);
                    var b = new Le;
                    this.preloading = !0;
                    var c = function(c) {
                        a.cachedText.set(a.id, c);
                        var d = JSON.parse(c);
                        a.frameRate = d.frameRate;
                        c = d.root;
                        d = d.symbols;
                        var e = null;
                        a.symbols = new we;
                        a.symbolsByClassName = new fb;
                        a.bitmapSymbols = [];
                        for (var f = 0, h = d.length; f < h;) {
                            var g = f++;
                            var l = d[g];
                            if (null != l) {
                                var n = l.type;
                                switch (n) {
                                    case 0:
                                        g =
                                            a.__parseBitmap(l);
                                        a.bitmapSymbols.push(g);
                                        null != g.className && a.bitmapClassNames.set(g.className, g.path);
                                        e = g;
                                        break;
                                    case 1:
                                        e = a.__parseButton(l);
                                        break;
                                    case 2:
                                        e = a.__parseDynamicText(l);
                                        break;
                                    case 3:
                                        e = a.__parseFont(l);
                                        break;
                                    case 4:
                                        e = a.__parseShape(l);
                                        break;
                                    case 5:
                                        l = a.__parseSprite(l);
                                        g == c && (a.root = l);
                                        e = l;
                                        break;
                                    case 6:
                                        e = a.__parseStaticText(l)
                                }
                                null != e && (a.symbols.set(e.id, e), null != e.className && a.symbolsByClassName.set(e.className, e))
                            }
                        }
                        a.__load().onProgress(q(b, b.progress)).onError(q(b, b.error)).onComplete(function(c) {
                            a.preloading = !1;
                            b.complete(a)
                        })
                    };
                    if (this.exists(this.id, "TEXT") || this.exists(this.id, "BINARY")) {
                        for (var d = this.paths.keys(); d.hasNext();) {
                            var e = d.next();
                            this.preload.set(e, !0)
                        }
                        for (d = this.types.keys(); d.hasNext();) e = d.next(), "IMAGE" == this.types.get(e) && this.preload.set(e, !0);
                        this.loadText(this.id).onError(q(b, b.error)).onComplete(c)
                    } else {
                        for (d = this.paths.keys(); d.hasNext();) e = d.next(), this.preload.set(e, !0);
                        d = null;
                        d = this.paths.exists(this.id) ? this.paths.get(this.id) : null != this.rootPath && "" != this.rootPath ? this.rootPath +
                            "/" + this.id : this.id;
                        var f = new Vn;
                        f.addEventListener("complete", function(a) {
                            c(f.data)
                        });
                        f.addEventListener("ioError", function(a) {
                            b.error(a)
                        });
                        f.load(new Fi(d))
                    }
                    return b.future
                },
                loadImage: function(a) {
                    var b = this;
                    this.bitmapClassNames.exists(a) && (a = this.bitmapClassNames.get(a));
                    if (!this.preloading && !this.alphaCheck.exists(a))
                        for (var c = 0, d = this.bitmapSymbols; c < d.length;) {
                            var e = [d[c]];
                            ++c;
                            if (e[0].path == a && null != e[0].alpha) return c = [new Le], this.__loadImage(a).onError((Jf = c[0], q(Jf, Jf.error))).onComplete(function(c,
                                d) {
                                return function(e) {
                                    b.__loadImage(d[0].alpha).onError((Jf = c[0], q(Jf, Jf.error))).onComplete(function(c, d) {
                                        return function(f) {
                                            b.__copyChannel(e, f);
                                            b.cachedImages.set(a, e);
                                            b.cachedImages.remove(d[0].alpha);
                                            b.alphaCheck.set(a, !0);
                                            c[0].complete(e)
                                        }
                                    }(c, d))
                                }
                            }(c, e)), c[0].future;
                            this.alphaCheck.set(a, !0)
                        }
                    return Nd.prototype.loadImage.call(this, a)
                },
                unload: function() {
                    U.instances.remove(this.uuid);
                    if (null != this.symbols)
                        for (var a = 0, b = this.bitmapSymbols; a < b.length;) {
                            var c = b[a];
                            ++a;
                            Tb.cache.removeBitmapData(c.path)
                        }
                },
                __copyChannel: function(a, b) {
                    null != b && (a.get_transparent() || a.set_transparent(!0), a.copyChannel(b, b.get_rect(), new ok, Md.RED, Md.ALPHA));
                    a.buffer.premultiplied = !0;
                    a.set_premultiplied(!1)
                },
                __fromManifest: function(a) {
                    this.rootPath = a.rootPath;
                    Nd.prototype.__fromManifest.call(this, a);
                    this.bytesTotal = 0;
                    for (a = this.paths.keys(); a.hasNext();) {
                        var b = a.next();
                        this.bytesTotal += this.sizes.get(b)
                    }
                },
                __load: function() {
                    return Nd.prototype.load.call(this)
                },
                __loadImage: function(a) {
                    return Nd.prototype.loadImage.call(this,
                        a)
                },
                __parseBitmap: function(a) {
                    var b = new Rr;
                    b.id = a.id;
                    b.className = a.className;
                    b.alpha = a.alpha;
                    b.path = a.path;
                    b.smooth = a.smooth;
                    return b
                },
                __parseButton: function(a) {
                    var b = new Sr;
                    b.id = a.id;
                    b.className = a.className;
                    b.downState = this.__parseSprite(a.downState);
                    b.hitState = this.__parseSprite(a.hitState);
                    b.overState = this.__parseSprite(a.overState);
                    b.upState = this.__parseSprite(a.upState);
                    return b
                },
                __parseDynamicText: function(a) {
                    var b = new Tr;
                    b.id = a.id;
                    b.align = a.align;
                    b.border = a.border;
                    b.color = a.color;
                    b.fontHeight =
                        a.fontHeight;
                    b.fontID = a.fontID;
                    b.fontName = a.fontName;
                    b.html = a.html;
                    b.indent = a.indent;
                    b.input = a.input;
                    b.leading = a.leading;
                    b.leftMargin = a.leftMargin;
                    b.multiline = a.multiline;
                    b.password = a.password;
                    b.rightMargin = a.rightMargin;
                    b.selectable = a.selectable;
                    b.text = a.text;
                    b.wordWrap = a.wordWrap;
                    b.x = this.__pixel(a.rect[0]);
                    b.y = this.__pixel(a.rect[1]);
                    b.width = this.__pixel(a.rect[2]);
                    b.height = this.__pixel(a.rect[3]);
                    return b
                },
                __parseFilters: function(a) {
                    if (null == a) return null;
                    for (var b = [], c = 0; c < a.length;) {
                        var d = a[c];
                        ++c;
                        if (null != d && 0 != d.length) switch (d[0]) {
                            case 0:
                                b.push(ji.BlurFilter(d[1], d[2], d[3]));
                                break;
                            case 1:
                                b.push(ji.ColorMatrixFilter(d[1]));
                                break;
                            case 2:
                                b.push(ji.DropShadowFilter(d[1], d[2], d[3], d[4], d[5], d[6], d[7], d[8], d[9], d[10], d[11]));
                                break;
                            case 3:
                                b.push(ji.GlowFilter(d[1], d[2], d[3], d[4], d[5], d[6], d[7], d[8]))
                        }
                    }
                    return b
                },
                __parseFont: function(a) {
                    var b = new Ur;
                    b.id = a.id;
                    b.advances = a.advances;
                    b.ascent = a.ascent;
                    b.bold = a.bold;
                    b.codes = a.codes;
                    b.descent = a.descent;
                    b.italic = a.italic;
                    b.leading = a.leading;
                    b.name =
                        a.name;
                    if (T.hasField(a, "glyphs")) {
                        b.glyphs = [];
                        a = a.glyphs;
                        for (var c = 0, d = a.length; c < d;) {
                            var e = c++,
                                f = a[e];
                            if (null != f) {
                                var h = [];
                                b.glyphs[e] = h;
                                for (e = 0; e < f.length;) switch (f[e]) {
                                    case 0:
                                        h.push(lc.BeginBitmapFill(f[e + 1], this.__parseMatrix(f[e + 2]), f[e + 3], f[e + 4]));
                                        e += 5;
                                        break;
                                    case 1:
                                        h.push(lc.BeginFill(f[e + 1], f[e + 2]));
                                        e += 3;
                                        break;
                                    case 2:
                                        h.push(lc.BeginGradientFill(f[e + 1], f[e + 2], f[e + 3], f[e + 4], this.__parseMatrix(f[e + 5]), f[e + 6], f[e + 7], f[e + 8]));
                                        e += 9;
                                        break;
                                    case 3:
                                        h.push(lc.LineStyle(null, null, null, null, null, null, null,
                                            null));
                                        ++e;
                                        break;
                                    case 4:
                                        h.push(lc.CurveTo(this.__pixel(f[e + 1]), this.__pixel(f[e + 2]), this.__pixel(f[e + 3]), this.__pixel(f[e + 4])));
                                        e += 5;
                                        break;
                                    case 5:
                                        h.push(lc.EndFill);
                                        ++e;
                                        break;
                                    case 6:
                                        h.push(lc.LineStyle(f[e + 1], f[e + 2], f[e + 3], f[e + 4], f[e + 5], f[e + 6], f[e + 7], f[e + 8]));
                                        e += 9;
                                        break;
                                    case 7:
                                        h.push(lc.LineTo(this.__pixel(f[e + 1]), this.__pixel(f[e + 2])));
                                        e += 3;
                                        break;
                                    case 8:
                                        h.push(lc.MoveTo(this.__pixel(f[e + 1]), this.__pixel(f[e + 2])));
                                        e += 3;
                                        break;
                                    default:
                                        ++e
                                }
                            }
                        }
                    }
                    return b
                },
                __parseMatrix: function(a) {
                    return null != a ? new Ya(a[0],
                        a[1], a[2], a[3], this.__pixel(a[4]), this.__pixel(a[5])) : null
                },
                __parseShape: function(a) {
                    var b = new Vr;
                    b.id = a.id;
                    b.commands = [];
                    a = a.commands;
                    for (var c = b.commands, d = 0; d < a.length;) switch (a[d]) {
                        case 0:
                            c.push(lc.BeginBitmapFill(a[d + 1], this.__parseMatrix(a[d + 2]), a[d + 3], a[d + 4]));
                            d += 5;
                            break;
                        case 1:
                            c.push(lc.BeginFill(a[d + 1], a[d + 2]));
                            d += 3;
                            break;
                        case 2:
                            c.push(lc.BeginGradientFill(a[d + 1], a[d + 2], a[d + 3], a[d + 4], this.__parseMatrix(a[d + 5]), a[d + 6], a[d + 7], a[d + 8]));
                            d += 9;
                            break;
                        case 3:
                            c.push(lc.LineStyle(null, null, null, null,
                                null, null, null, null));
                            ++d;
                            break;
                        case 4:
                            c.push(lc.CurveTo(this.__pixel(a[d + 1]), this.__pixel(a[d + 2]), this.__pixel(a[d + 3]), this.__pixel(a[d + 4])));
                            d += 5;
                            break;
                        case 5:
                            c.push(lc.EndFill);
                            ++d;
                            break;
                        case 6:
                            c.push(lc.LineStyle(a[d + 1], a[d + 2], a[d + 3], a[d + 4], a[d + 5], a[d + 6], a[d + 7], a[d + 8]));
                            d += 9;
                            break;
                        case 7:
                            c.push(lc.LineTo(this.__pixel(a[d + 1]), this.__pixel(a[d + 2])));
                            d += 3;
                            break;
                        case 8:
                            c.push(lc.MoveTo(this.__pixel(a[d + 1]), this.__pixel(a[d + 2])));
                            d += 3;
                            break;
                        default:
                            ++d
                    }
                    return b
                },
                __parseSprite: function(a) {
                    if (null ==
                        a) return null;
                    var b = new Ll;
                    b.id = a.id;
                    b.className = a.className;
                    b.baseClassName = a.baseClassName;
                    b.scale9Grid = null != a.scale9Grid ? new hb(this.__pixel(a.scale9Grid[0]), this.__pixel(a.scale9Grid[1]), this.__pixel(a.scale9Grid[2]), this.__pixel(a.scale9Grid[3])) : null;
                    a = a.frames;
                    for (var c, d, e, f = 0; f < a.length;) {
                        d = a[f];
                        ++f;
                        c = new pv;
                        c.label = d.label;
                        T.hasField(d, "scriptSource") && (c.scriptSource = d.scriptSource);
                        d = d.objects;
                        if (null != d && 0 < d.length) {
                            c.objects = [];
                            for (var h = 0; h < d.length;) {
                                var k = d[h];
                                ++h;
                                e = new qv;
                                e.blendMode =
                                    k.blendMode;
                                e.cacheAsBitmap = k.cacheAsBitmap;
                                e.clipDepth = k.clipDepth;
                                e.colorTransform = null != k.colorTransform ? new mc(this.__pixel(k.colorTransform[0]), this.__pixel(k.colorTransform[1]), this.__pixel(k.colorTransform[2]), this.__pixel(k.colorTransform[3]), this.__pixel(k.colorTransform[4]), this.__pixel(k.colorTransform[5]), this.__pixel(k.colorTransform[6]), this.__pixel(k.colorTransform[7])) : null;
                                e.depth = k.depth;
                                e.filters = this.__parseFilters(k.filters);
                                e.id = k.id;
                                e.matrix = this.__parseMatrix(k.matrix);
                                e.name =
                                    k.name;
                                e.symbol = k.symbol;
                                e.type = k.type;
                                e.visible = k.visible;
                                c.objects.push(e)
                            }
                        }
                        b.frames.push(c)
                    }
                    return b
                },
                __parseStaticText: function(a) {
                    var b = new Wr;
                    b.id = a.id;
                    b.matrix = this.__parseMatrix(a.matrix);
                    b.records = a.records;
                    return b
                },
                __pixel: function(a) {
                    return a / 20
                },
                __class__: U
            });
            var lc = g["swf.exporters.animate.AnimateShapeCommand"] = {
                __ename__: ["swf", "exporters", "animate", "AnimateShapeCommand"],
                __constructs__: "BeginBitmapFill BeginFill BeginGradientFill CurveTo EndFill LineStyle LineTo MoveTo".split(" ")
            };
            lc.BeginBitmapFill = function(a, b, c, d) {
                a = ["BeginBitmapFill", 0, a, b, c, d];
                a.__enum__ = lc;
                a.toString = l;
                return a
            };
            lc.BeginFill = function(a, b) {
                a = ["BeginFill", 1, a, b];
                a.__enum__ = lc;
                a.toString = l;
                return a
            };
            lc.BeginGradientFill = function(a, b, c, d, e, f, h, k) {
                a = ["BeginGradientFill", 2, a, b, c, d, e, f, h, k];
                a.__enum__ = lc;
                a.toString = l;
                return a
            };
            lc.CurveTo = function(a, b, c, d) {
                a = ["CurveTo", 3, a, b, c, d];
                a.__enum__ = lc;
                a.toString = l;
                return a
            };
            lc.EndFill = ["EndFill", 4];
            lc.EndFill.toString = l;
            lc.EndFill.__enum__ = lc;
            lc.LineStyle = function(a,
                b, c, d, e, f, h, k) {
                a = ["LineStyle", 5, a, b, c, d, e, f, h, k];
                a.__enum__ = lc;
                a.toString = l;
                return a
            };
            lc.LineTo = function(a, b) {
                a = ["LineTo", 6, a, b];
                a.__enum__ = lc;
                a.toString = l;
                return a
            };
            lc.MoveTo = function(a, b) {
                a = ["MoveTo", 7, a, b];
                a.__enum__ = lc;
                a.toString = l;
                return a
            };
            var Vr = function() {};
            g["swf.exporters.animate.AnimateShapeSymbol"] = Vr;
            Vr.__name__ = ["swf", "exporters", "animate", "AnimateShapeSymbol"];
            Vr.__super__ = Te;
            Vr.prototype = p(Te.prototype, {
                commands: null,
                rendered: null,
                __createObject: function(a) {
                    var b = new Ke,
                        c = b.get_graphics();
                    if (null != this.rendered) return c.copyFrom(this.rendered.get_graphics()), b;
                    for (var d = 0, e = this.commands; d < e.length;) {
                        var f = e[d];
                        ++d;
                        switch (Q.enumIndex(f)) {
                            case 0:
                                var h = f[5],
                                    k = f[4],
                                    m = f[3];
                                f = a.symbols.get(f[2]);
                                f = a.getImage(f.path);
                                null != f && c.beginBitmapFill(Kb.fromImage(f), m, k, h);
                                break;
                            case 1:
                                c.beginFill(f[2], f[3]);
                                break;
                            case 2:
                                c.beginGradientFill(f[2], f[3], f[4], f[5], f[6], f[7], f[8], f[9]);
                                break;
                            case 3:
                                c.curveTo(f[2], f[3], f[4], f[5]);
                                break;
                            case 4:
                                c.endFill();
                                break;
                            case 5:
                                h = f[9];
                                k = f[8];
                                m = f[7];
                                var g = f[6],
                                    l = f[5],
                                    n = f[4],
                                    p = f[3];
                                f = f[2];
                                null != f ? c.lineStyle(f, p, n, l, g, m, k, h) : c.lineStyle();
                                break;
                            case 6:
                                c.lineTo(f[2], f[3]);
                                break;
                            case 7:
                                c.moveTo(f[2], f[3])
                        }
                    }
                    this.commands = null;
                    this.rendered = new Ke;
                    this.rendered.get_graphics().copyFrom(b.get_graphics());
                    return b
                },
                __class__: Vr
            });
            var Ll = function() {
                this.frames = []
            };
            g["swf.exporters.animate.AnimateSpriteSymbol"] = Ll;
            Ll.__name__ = ["swf", "exporters", "animate", "AnimateSpriteSymbol"];
            Ll.__super__ = Te;
            Ll.prototype = p(Te.prototype, {
                baseClassName: null,
                frames: null,
                scale9Grid: null,
                library: null,
                __constructor: function(a) {
                    var b = new Xr(this.library, this);
                    a.set_scale9Grid(this.scale9Grid);
                    a.attachTimeline(b)
                },
                __createObject: function(a) {
                    n.__constructor = q(this, this.__constructor);
                    this.library = a;
                    a = null;
                    null != this.className && (a = Q.resolveClass(this.className));
                    null == a && null != this.baseClassName && (a = Q.resolveClass(this.baseClassName));
                    return null != a ? Q.createInstance(a, []) : new n
                },
                __initObject: function(a, b) {
                    this.library = a;
                    this.__constructor(b)
                },
                __class__: Ll
            });
            var Wr = function() {};
            g["swf.exporters.animate.AnimateStaticTextSymbol"] =
                Wr;
            Wr.__name__ = ["swf", "exporters", "animate", "AnimateStaticTextSymbol"];
            Wr.__super__ = Te;
            Wr.prototype = p(Te.prototype, {
                matrix: null,
                records: null,
                rendered: null,
                __createObject: function(a) {
                    var b = new Oo,
                        c = b.__graphics;
                    if (null != this.rendered) return b.text = this.rendered.text, c.copyFrom(this.rendered.__graphics), b;
                    var d = "";
                    if (null != this.records)
                        for (var e = null, f = 16777215, h = this.matrix.tx, k = this.matrix.ty, m, g, l = 0, n = this.records; l < n.length;) {
                            var p = n[l];
                            ++l;
                            null != p.fontID && (e = a.symbols.get(p.fontID));
                            null != p.offset &&
                                (h = this.matrix.tx + .05 * p.offset[0], k = this.matrix.ty + .05 * p.offset[1]);
                            null != p.color && (f = p.color);
                            if (null != e) {
                                m = p.fontHeight / 1024 * .05;
                                for (var x = 0, u = p.glyphs.length; x < u;) {
                                    var v = x++;
                                    g = p.glyphs[v];
                                    d += String.fromCharCode(e.codes[g]);
                                    var z = 0;
                                    for (g = e.glyphs[g]; z < g.length;) {
                                        var q = g[z];
                                        ++z;
                                        switch (Q.enumIndex(q)) {
                                            case 1:
                                                c.beginFill(f & 16777215, (f >> 24 & 255) / 255);
                                                break;
                                            case 3:
                                                c.curveTo(q[2] * m + h, q[3] * m + k, q[4] * m + h, q[5] * m + k);
                                                break;
                                            case 4:
                                                c.endFill();
                                                break;
                                            case 5:
                                                var w = q[9],
                                                    y = q[8],
                                                    A = q[7],
                                                    L = q[6],
                                                    D = q[5],
                                                    B = q[4],
                                                    Ka = q[3];
                                                q = q[2];
                                                null != q ? c.lineStyle(q, Ka, B, D, L, A, y, w) : c.lineStyle();
                                                break;
                                            case 6:
                                                c.lineTo(q[2] * m + h, q[3] * m + k);
                                                break;
                                            case 7:
                                                c.moveTo(q[2] * m + h, q[3] * m + k)
                                        }
                                    }
                                    h += .05 * p.advances[v]
                                }
                            }
                        }
                    b.text = d;
                    this.records = null;
                    this.rendered = new Oo;
                    this.rendered.text = d;
                    this.rendered.__graphics.copyFrom(b.__graphics);
                    return b
                },
                __class__: Wr
            });
            var Xr = function(a, b) {
                Fo.call(this);
                this.__library = a;
                this.__symbol = b;
                this.frameRate = a.frameRate;
                a = [];
                this.scripts = [];
                for (var c, d = 0, e = this.__symbol.frames.length; d < e;)
                    if (c = d++, b = c + 1, c = this.__symbol.frames[c],
                        null != c.label && a.push(new sr(c.label, b)), null != c.script) this.scripts.push(new tr(c.script, b));
                    else if (null != c.scriptSource) try {
                    var f = function(a) {
                        return function(b) {
                            try {
                                a[0].call(b)
                            } catch (m) {
                                vb.lastException = m, m instanceof Z && (m = m.val), Za.info("Error evaluating frame script\n " + E.string(m) + "\n" + vb.exceptionStack().map(function() {
                                    return function(a) {
                                        return a[2]
                                    }
                                }()).join("\n") + "\n" + E.string(m.stack) + "\n" + a[0].toString(), {
                                    fileName: "AnimateTimeline.hx",
                                    lineNumber: 116,
                                    className: "swf.exporters.animate.AnimateTimeline",
                                    methodName: "new"
                                })
                            }
                        }
                    }([eval("(function(){" + c.scriptSource + "})")]);
                    this.scripts.push(new tr(f, b))
                } catch (h) {
                    vb.lastException = h, null != this.__symbol.className ? Za.warn('Unable to evaluate frame script source for symbol "' + this.__symbol.className + '" frame ' + b + "\n" + c.scriptSource, {
                        fileName: "AnimateTimeline.hx",
                        lineNumber: 137,
                        className: "swf.exporters.animate.AnimateTimeline",
                        methodName: "new"
                    }) : Za.warn("Unable to evaluate frame script source:\n" + c.scriptSource, {
                        fileName: "AnimateTimeline.hx",
                        lineNumber: 142,
                        className: "swf.exporters.animate.AnimateTimeline",
                        methodName: "new"
                    })
                }
                this.scenes = [new Zu("", a, this.__symbol.frames.length)]
            };
            g["swf.exporters.animate.AnimateTimeline"] = Xr;
            Xr.__name__ = ["swf", "exporters", "animate", "AnimateTimeline"];
            Xr.__super__ = Fo;
            Xr.prototype = p(Fo.prototype, {
                __activeInstances: null,
                __activeInstancesByFrameObjectID: null,
                __currentInstancesByFrameObjectID: null,
                __instanceFields: null,
                __library: null,
                __movieClip: null,
                __previousFrame: null,
                __symbol: null,
                attachMovieClip: function(a) {
                    this.__movieClip =
                        a;
                    if (null == this.__activeInstances) {
                        this.__instanceFields = [];
                        this.__previousFrame = -1;
                        this.__activeInstances = [];
                        this.__activeInstancesByFrameObjectID = new we;
                        this.__currentInstancesByFrameObjectID = new we;
                        for (var b, c, d, e = 0, f = this.scenes[0].numFrames; e < f;) {
                            var h = e++;
                            a = h + 1;
                            b = this.__symbol.frames[h];
                            if (null != b.objects) {
                                h = 0;
                                for (var k = b.objects; h < k.length;) {
                                    var m = k[h];
                                    ++h;
                                    if (0 == m.type && !this.__activeInstancesByFrameObjectID.exists(m.id)) {
                                        b = null;
                                        c = !1;
                                        d = 0;
                                        for (var g = this.__activeInstances; d < g.length;) {
                                            var l =
                                                g[d];
                                            ++d;
                                            if (null != l.displayObject && l.characterID == m.symbol && l.depth == m.depth) {
                                                b = l;
                                                c = !0;
                                                break
                                            }
                                        }
                                        null == b && (d = this.__library.symbols.get(m.symbol), null != d && (d = d.__createObject(this.__library), null != d && (b = new rv(a, m.id, m.symbol, m.depth, d, m.clipDepth))));
                                        null != b && (this.__activeInstancesByFrameObjectID.set(m.id, b), c || (this.__activeInstances.push(b), this.__updateDisplayObject(b.displayObject, m)))
                                    }
                                }
                            }
                        }
                        this.__instanceFields = Q.getInstanceFields(Q.getClass(this.__movieClip));
                        this.enterFrame(1)
                    }
                },
                enterFrame: function(a) {
                    if (null !=
                        this.__symbol && a != this.__previousFrame) {
                        var b = this.__previousFrame < a ? -1 == this.__previousFrame ? 0 : this.__previousFrame : 0;
                        0 >= b && (this.__currentInstancesByFrameObjectID = new we);
                        for (; b < a;) {
                            var c = b++;
                            var d = this.__symbol.frames[c];
                            if (null != d.objects)
                                for (c = 0, d = d.objects; c < d.length;) {
                                    var e = d[c];
                                    ++c;
                                    switch (e.type) {
                                        case 0:
                                            var f = this.__activeInstancesByFrameObjectID.get(e.id);
                                            null != f && (this.__currentInstancesByFrameObjectID.set(e.id, f), this.__updateDisplayObject(f.displayObject, e, !0));
                                            break;
                                        case 1:
                                            f = this.__currentInstancesByFrameObjectID.get(e.id);
                                            null != f && null != f.displayObject && this.__updateDisplayObject(f.displayObject, e);
                                            break;
                                        case 2:
                                            this.__currentInstancesByFrameObjectID.remove(e.id)
                                    }
                                }
                        }
                        b = [];
                        c = [];
                        for (d = this.__currentInstancesByFrameObjectID.iterator(); d.hasNext();) e = d.next(), -1 == b.indexOf(e) && (b.push(e), 0 < e.clipDepth && c.push(e));
                        b.sort(q(this, this.__sortDepths));
                        e = 0;
                        for (var h = b.length; e < h;) {
                            var k = e++;
                            var m = k < this.__movieClip.get_numChildren() ? this.__movieClip.getChildAt(k) : null;
                            f = b[k];
                            d = f.depth;
                            f = f.displayObject;
                            m != f && this.__movieClip.addChildAt(f,
                                k);
                            m = !1;
                            for (k = 0; k < c.length;) {
                                var g = c[k];
                                ++k;
                                if (d > g.depth && d <= g.clipDepth) {
                                    f.set_mask(g.displayObject);
                                    m = !0;
                                    break
                                }
                            }
                            0 < c.length && !m && null != f.get_mask() && f.set_mask(null)
                        }
                        if (null != this.__movieClip.get_scale9Grid()) this.__movieClip.get_graphics().clear(), 0 < b.length && (b = b[0].displayObject, this.__movieClip.get_graphics().copyFrom(b.get_graphics()));
                        else
                            for (c = b.length, d = this.__movieClip.get_numChildren(); c < d;) {
                                b = this.__movieClip.getChildAt(c);
                                e = 0;
                                for (h = this.__activeInstances; e < h.length;) f = h[e], ++e, f.displayObject ==
                                    b && (E.is(b, n) && b.gotoAndPlay(1), this.__movieClip.removeChild(b), --c, --d);
                                ++c
                            }
                        this.__updateInstanceFields();
                        this.__previousFrame = a
                    }
                },
                __sortDepths: function(a, b) {
                    return a.depth - b.depth
                },
                __updateDisplayObject: function(a, b, c) {
                    null == c && (c = !1);
                    if (null != a) {
                        null != b.name && a.set_name(b.name);
                        null != b.matrix && a.get_transform().set_matrix(b.matrix);
                        null != b.colorTransform ? a.get_transform().set_colorTransform(b.colorTransform) : c && !a.get_transform().get_colorTransform().__isDefault(!1) && a.get_transform().set_colorTransform(new mc);
                        a.set_transform(a.get_transform());
                        if (null != b.filters) {
                            c = [];
                            for (var d = 0, e = b.filters; d < e.length;) {
                                var f = e[d];
                                ++d;
                                switch (Q.enumIndex(f)) {
                                    case 0:
                                        c.push(new lh(f[2], f[3], f[4]));
                                        break;
                                    case 1:
                                        c.push(new Eh(f[2]));
                                        break;
                                    case 2:
                                        c.push(new Kl(f[2], f[3], f[4], f[5], f[6], f[7], f[8], f[9], f[10], f[11], f[12]));
                                        break;
                                    case 3:
                                        c.push(new Qc(f[2], f[3], f[4], f[5], f[6], f[7], f[8], f[9]))
                                }
                            }
                            a.set_filters(c)
                        } else a.set_filters(null);
                        null != b.visible && a.set_visible(b.visible);
                        null != b.blendMode && a.set_blendMode(b.blendMode);
                        null !=
                            b.cacheAsBitmap && a.set_cacheAsBitmap(b.cacheAsBitmap)
                    }
                },
                __updateInstanceFields: function() {
                    for (var a = 0, b = this.__instanceFields; a < b.length;) {
                        var c = b[a];
                        ++a;
                        for (var d = 0, e = this.__movieClip.get_numChildren(); d < e;) {
                            var f = d++;
                            f = this.__movieClip.getChildAt(f);
                            if (f.get_name() == c) {
                                T.setField(this.__movieClip, c, f);
                                break
                            }
                        }
                    }
                },
                __class__: Xr
            });
            var rv = function(a, b, c, d, e, f) {
                this.initFrame = a;
                this.initFrameObjectID = b;
                this.characterID = c;
                this.depth = d;
                this.displayObject = e;
                this.clipDepth = f
            };
            g["swf.exporters.animate._AnimateTimeline.FrameSymbolInstance"] =
                rv;
            rv.__name__ = ["swf", "exporters", "animate", "_AnimateTimeline", "FrameSymbolInstance"];
            rv.prototype = {
                characterID: null,
                clipDepth: null,
                depth: null,
                displayObject: null,
                initFrame: null,
                initFrameObjectID: null,
                __class__: rv
            };
            var ji = g["swf.exporters.core.FilterType"] = {
                __ename__: ["swf", "exporters", "core", "FilterType"],
                __constructs__: ["BlurFilter", "ColorMatrixFilter", "DropShadowFilter", "GlowFilter"]
            };
            ji.BlurFilter = function(a, b, c) {
                a = ["BlurFilter", 0, a, b, c];
                a.__enum__ = ji;
                a.toString = l;
                return a
            };
            ji.ColorMatrixFilter =
                function(a) {
                    a = ["ColorMatrixFilter", 1, a];
                    a.__enum__ = ji;
                    a.toString = l;
                    return a
                };
            ji.DropShadowFilter = function(a, b, c, d, e, f, h, k, m, g, n) {
                a = ["DropShadowFilter", 2, a, b, c, d, e, f, h, k, m, g, n];
                a.__enum__ = ji;
                a.toString = l;
                return a
            };
            ji.GlowFilter = function(a, b, c, d, e, f, h, k) {
                a = ["GlowFilter", 3, a, b, c, d, e, f, h, k];
                a.__enum__ = ji;
                a.toString = l;
                return a
            };
            var Nb = function() {};
            g["zpp_nape.ZPP_Const"] = Nb;
            Nb.__name__ = ["zpp_nape", "ZPP_Const"];
            Nb.POSINF = function() {
                return Infinity
            };
            Nb.NEGINF = function() {
                return -Infinity
            };
            var Od = function() {};
            g["zpp_nape.ZPP_ID"] = Od;
            Od.__name__ = ["zpp_nape", "ZPP_ID"];
            Od.Interactor = function() {
                return Od._Interactor++
            };
            Od.ZPP_SimpleVert = function() {
                return Od._ZPP_SimpleVert++
            };
            Od.ZPP_SimpleSeg = function() {
                return Od._ZPP_SimpleSeg++
            };
            Od.Constraint = function() {
                return Od._Constraint++
            };
            Od.CbType = function() {
                return Od._CbType++
            };
            Od.CbSet = function() {
                return Od._CbSet++
            };
            var ki = function() {
                this.body = this.constraint = null;
                this.pre_swapped = !1;
                this.int1 = this.int2 = this.set = this.wrap_arbiters = this.pre_arbiter = null;
                this.length =
                    0;
                this.listener = this.next = this.prev = null;
                this.event = 0;
                this.outer_body = this.outer_con = this.outer_int = null;
                this.length = 0
            };
            g["zpp_nape.callbacks.ZPP_Callback"] = ki;
            ki.__name__ = ["zpp_nape", "callbacks", "ZPP_Callback"];
            ki.prototype = {
                outer_body: null,
                outer_con: null,
                outer_int: null,
                wrapper_body: function() {
                    null == this.outer_body && (this.outer_body = new er, this.outer_body.zpp_inner = this);
                    return this.outer_body
                },
                wrapper_con: function() {
                    null == this.outer_con && (this.outer_con = new fr, this.outer_con.zpp_inner = this);
                    return this.outer_con
                },
                wrapper_int: function() {
                    null == this.outer_int && (this.outer_int = new gr, this.outer_int.zpp_inner = this);
                    this.genarbs();
                    return this.outer_int
                },
                event: null,
                listener: null,
                next: null,
                prev: null,
                length: null,
                push: function(a) {
                    null != this.prev ? this.prev.next = a : this.next = a;
                    a.prev = this.prev;
                    a.next = null;
                    this.prev = a;
                    this.length++
                },
                pop: function() {
                    var a = this.next;
                    this.next = a.next;
                    null == this.next ? this.prev = null : this.next.prev = null;
                    this.length--;
                    return a
                },
                empty: function() {
                    return null == this.next
                },
                free: function() {
                    this.listener =
                        this.constraint = this.body = this.int1 = this.int2 = null;
                    null != this.wrap_arbiters && (this.wrap_arbiters.zpp_inner.inner = null);
                    this.set = null
                },
                alloc: function() {},
                int1: null,
                int2: null,
                set: null,
                wrap_arbiters: null,
                pre_arbiter: null,
                pre_swapped: null,
                genarbs: function() {
                    null == this.wrap_arbiters ? this.wrap_arbiters = Ui.get(this.set.arbiters, !0) : this.wrap_arbiters.zpp_inner.inner = this.set.arbiters;
                    this.wrap_arbiters.zpp_inner.zip_length = !0;
                    this.wrap_arbiters.zpp_inner.at_ite = null
                },
                body: null,
                constraint: null,
                __class__: ki
            };
            var Ob = function() {
                this.interactors = this.constraints = null;
                this.zip_conlisteners = !1;
                this.conlisteners = null;
                this.zip_bodylisteners = !1;
                this.bodylisteners = null;
                this.zip_listeners = !1;
                this.manager = this.cbpairs = this.listeners = null;
                this.id = 0;
                this.next = null;
                this.count = 0;
                this.cbTypes = null;
                this.cbTypes = new Zi;
                this.listeners = new Ml;
                this.zip_listeners = !0;
                this.bodylisteners = new Yr;
                this.zip_bodylisteners = !0;
                this.conlisteners = new Zr;
                this.zip_conlisteners = !0;
                this.constraints = new Gj;
                this.interactors = new $i;
                this.id =
                    Od.CbSet();
                this.cbpairs = new sv
            };
            g["zpp_nape.callbacks.ZPP_CbSet"] = Ob;
            Ob.__name__ = ["zpp_nape", "callbacks", "ZPP_CbSet"];
            Ob.setlt = function(a, b) {
                a = a.cbTypes.begin();
                for (b = b.cbTypes.begin(); null != a && null != b;) {
                    var c = a.elem(),
                        d = b.elem();
                    if (ld.setlt(c, d)) return !0;
                    if (ld.setlt(d, c)) return !1;
                    a = a.next;
                    b = b.next
                }
                return null != b ? null == a : !1
            };
            Ob.get = function(a) {
                if (null == Ob.zpp_pool) var b = new Ob;
                else b = Ob.zpp_pool, Ob.zpp_pool = b.next, b.next = null;
                b.alloc();
                var c = null;
                for (a = a.begin(); null != a;) {
                    var d = a.elem();
                    c = b.cbTypes.insert(c,
                        d);
                    d.cbsets.add(b);
                    a = a.next
                }
                return b
            };
            Ob.empty_intersection = function(a, b) {
                return a.manager.pair(a, b).empty_intersection()
            };
            Ob.single_intersection = function(a, b, c) {
                return a.manager.pair(a, b).single_intersection(c)
            };
            Ob.find_all = function(a, b, c, d) {
                a.manager.pair(a, b).forall(c, d)
            };
            Ob.prototype = {
                cbTypes: null,
                count: null,
                next: null,
                id: null,
                manager: null,
                cbpairs: null,
                increment: function() {
                    this.count++
                },
                decrement: function() {
                    return 0 == --this.count
                },
                invalidate_pairs: function() {
                    for (var a = this.cbpairs.begin(); null !=
                        a;) a.elem().invalidate(), a = a.next
                },
                listeners: null,
                zip_listeners: null,
                invalidate_listeners: function() {
                    this.zip_listeners = !0;
                    this.invalidate_pairs()
                },
                validate_listeners: function() {
                    this.zip_listeners && (this.zip_listeners = !1, this.realvalidate_listeners())
                },
                realvalidate_listeners: function() {
                    this.listeners.clear();
                    for (var a = this.cbTypes.begin(); null != a;) {
                        var b = a.elem(),
                            c = null,
                            d = this.listeners.begin();
                        for (b = b.listeners.begin(); null != b;) {
                            var e = b.elem();
                            null != d && d.elem() == e ? (b = b.next, c = d, d = d.next) : null == d ||
                                bf.setlt(e, d.elem()) ? (this.manager.valid_listener(e) && (c = this.listeners.inlined_insert(c, e)), b = b.next) : (c = d, d = d.next)
                        }
                        a = a.next
                    }
                },
                bodylisteners: null,
                zip_bodylisteners: null,
                invalidate_bodylisteners: function() {
                    this.zip_bodylisteners = !0
                },
                validate_bodylisteners: function() {
                    this.zip_bodylisteners && (this.zip_bodylisteners = !1, this.realvalidate_bodylisteners())
                },
                realvalidate_bodylisteners: function() {
                    this.bodylisteners.clear();
                    for (var a = this.cbTypes.begin(); null != a;) {
                        var b = a.elem(),
                            c = null,
                            d = this.bodylisteners.begin();
                        for (b = b.bodylisteners.begin(); null != b;) {
                            var e = b.elem();
                            null != d && d.elem() == e ? (b = b.next, c = d, d = d.next) : null == d || bf.setlt(e, d.elem()) ? (!e.options.excluded(this.cbTypes) && this.manager.valid_listener(e) && (c = this.bodylisteners.inlined_insert(c, e)), b = b.next) : (c = d, d = d.next)
                        }
                        a = a.next
                    }
                },
                conlisteners: null,
                zip_conlisteners: null,
                invalidate_conlisteners: function() {
                    this.zip_conlisteners = !0
                },
                validate_conlisteners: function() {
                    this.zip_conlisteners && (this.zip_conlisteners = !1, this.realvalidate_conlisteners())
                },
                realvalidate_conlisteners: function() {
                    this.conlisteners.clear();
                    for (var a = this.cbTypes.begin(); null != a;) {
                        var b = a.elem(),
                            c = null,
                            d = this.conlisteners.begin();
                        for (b = b.conlisteners.begin(); null != b;) {
                            var e = b.elem();
                            null != d && d.elem() == e ? (b = b.next, c = d, d = d.next) : null == d || bf.setlt(e, d.elem()) ? (!e.options.excluded(this.cbTypes) && this.manager.valid_listener(e) && (c = this.conlisteners.inlined_insert(c, e)), b = b.next) : (c = d, d = d.next)
                        }
                        a = a.next
                    }
                },
                validate: function() {
                    this.validate_listeners();
                    this.validate_bodylisteners();
                    this.validate_conlisteners()
                },
                interactors: null,
                constraints: null,
                addConstraint: function(a) {
                    this.constraints.add(a)
                },
                addInteractor: function(a) {
                    this.interactors.add(a)
                },
                remConstraint: function(a) {
                    this.constraints.remove(a)
                },
                remInteractor: function(a) {
                    this.interactors.remove(a)
                },
                free: function() {
                    this.listeners.clear();
                    this.zip_listeners = !0;
                    this.bodylisteners.clear();
                    this.zip_bodylisteners = !0;
                    this.conlisteners.clear();
                    for (this.zip_conlisteners = !0; !this.cbTypes.empty();) this.cbTypes.pop_unsafe().cbsets.remove(this)
                },
                alloc: function() {},
                __class__: Ob
            };
            var og = function() {
                this.listeners =
                    null;
                this.zip_listeners = !1;
                this.a = this.b = this.next = null;
                this.listeners = new Ml
            };
            g["zpp_nape.callbacks.ZPP_CbSetPair"] = og;
            og.__name__ = ["zpp_nape", "callbacks", "ZPP_CbSetPair"];
            og.get = function(a, b) {
                if (null == og.zpp_pool) var c = new og;
                else c = og.zpp_pool, og.zpp_pool = c.next, c.next = null;
                c.alloc();
                Ob.setlt(a, b) ? (c.a = a, c.b = b) : (c.a = b, c.b = a);
                return c
            };
            og.setlt = function(a, b) {
                return Ob.setlt(a.a, b.a) ? !0 : a.a == b.a ? Ob.setlt(a.b, b.b) : !1
            };
            og.prototype = {
                a: null,
                b: null,
                next: null,
                free: function() {
                    this.a = this.b = null;
                    this.listeners.clear()
                },
                alloc: function() {
                    this.zip_listeners = !0
                },
                compatible: function(a) {
                    return a.options1.compatible(this.a.cbTypes) && a.options2.compatible(this.b.cbTypes) ? !0 : a.options2.compatible(this.a.cbTypes) ? a.options1.compatible(this.b.cbTypes) : !1
                },
                zip_listeners: null,
                listeners: null,
                invalidate: function() {
                    this.zip_listeners = !0
                },
                validate: function() {
                    this.zip_listeners && (this.zip_listeners = !1, this.__validate())
                },
                __validate: function() {
                    this.listeners.clear();
                    for (var a = this.a.listeners.begin(), b = this.b.listeners.begin(); null !=
                        a && null != b;) {
                        var c = a.elem(),
                            d = b.elem();
                        c == d ? (this.compatible(c) && this.listeners.add(c), a = a.next, b = b.next) : bf.setlt(c, d) ? a = a.next : b = b.next
                    }
                },
                empty_intersection: function() {
                    return this.listeners.empty()
                },
                single_intersection: function(a) {
                    var b = this.listeners.begin();
                    return null != b && b.elem() == a ? null == b.next : !1
                },
                forall: function(a, b) {
                    for (var c = this.listeners.begin(); null != c;) {
                        var d = c.elem();
                        d.event == a && b(d);
                        c = c.next
                    }
                },
                __class__: og
            };
            var Ml = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_InteractionListener"] = Ml;
            Ml.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_InteractionListener"];
            Ml.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                add: function(a) {
                    return this.inlined_add(a)
                },
                inlined_add: function(a) {
                    if (null == Qf.zpp_pool) var b = new Qf;
                    else b = Qf.zpp_pool, Qf.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.elt = a;
                    b.next = this.begin();
                    this.head = b;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                inlined_insert: function(a, b) {
                    if (null == Qf.zpp_pool) var c =
                        new Qf;
                    else c = Qf.zpp_pool, Qf.zpp_pool = c.next, c.next = null;
                    c.alloc();
                    c.elt = b;
                    b = c;
                    null == a ? (b.next = this.begin(), this.head = b) : (b.next = a.next, a.next = b);
                    this.pushmod = this.modified = !0;
                    this.length++;
                    return b
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.head = a.next;
                    a.free();
                    a.next = Qf.zpp_pool;
                    Qf.zpp_pool = a;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                remove: function(a) {
                    this.inlined_try_remove(a)
                },
                inlined_try_remove: function(a) {
                    for (var b = null, c = this.begin(), d = !1; null != c;) {
                        if (c.elem() ==
                            a) {
                            this.inlined_erase(b);
                            d = !0;
                            break
                        }
                        b = c;
                        c = c.next
                    }
                    return d
                },
                inlined_erase: function(a) {
                    var b;
                    if (null == a) {
                        var c = this.begin();
                        this.head = b = c.next;
                        this.empty() && (this.pushmod = !0)
                    } else c = a.next, b = c.next, a.next = b, null == b && (this.pushmod = !0);
                    a = c;
                    a.free();
                    a.next = Qf.zpp_pool;
                    Qf.zpp_pool = a;
                    this.modified = !0;
                    this.length--;
                    this.pushmod = !0;
                    return b
                },
                clear: function() {
                    this.inlined_clear()
                },
                inlined_clear: function() {
                    for (; !this.empty();) this.inlined_pop();
                    this.pushmod = !0
                },
                empty: function() {
                    return null == this.begin()
                },
                __class__: Ml
            };
            var Yr = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_BodyListener"] = Yr;
            Yr.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_BodyListener"];
            Yr.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                inlined_insert: function(a, b) {
                    if (null == li.zpp_pool) var c = new li;
                    else c = li.zpp_pool, li.zpp_pool = c.next, c.next = null;
                    c.alloc();
                    c.elt = b;
                    b = c;
                    null == a ? (b.next = this.begin(), this.head = b) : (b.next = a.next, a.next = b);
                    this.pushmod = this.modified = !0;
                    this.length++;
                    return b
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.head = a.next;
                    a.free();
                    a.next = li.zpp_pool;
                    li.zpp_pool = a;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                remove: function(a) {
                    this.inlined_try_remove(a)
                },
                inlined_try_remove: function(a) {
                    for (var b = null, c = this.begin(), d = !1; null != c;) {
                        if (c.elem() == a) {
                            this.inlined_erase(b);
                            d = !0;
                            break
                        }
                        b = c;
                        c = c.next
                    }
                    return d
                },
                inlined_erase: function(a) {
                    var b;
                    if (null == a) {
                        var c = this.begin();
                        this.head = b = c.next;
                        this.empty() && (this.pushmod = !0)
                    } else c =
                        a.next, b = c.next, a.next = b, null == b && (this.pushmod = !0);
                    a = c;
                    a.free();
                    a.next = li.zpp_pool;
                    li.zpp_pool = a;
                    this.modified = !0;
                    this.length--;
                    this.pushmod = !0;
                    return b
                },
                clear: function() {
                    this.inlined_clear()
                },
                inlined_clear: function() {
                    for (; !this.empty();) this.inlined_pop();
                    this.pushmod = !0
                },
                empty: function() {
                    return null == this.begin()
                },
                __class__: Yr
            };
            var Zr = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_ConstraintListener"] = Zr;
            Zr.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_ConstraintListener"];
            Zr.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                inlined_insert: function(a, b) {
                    if (null == mi.zpp_pool) var c = new mi;
                    else c = mi.zpp_pool, mi.zpp_pool = c.next, c.next = null;
                    c.alloc();
                    c.elt = b;
                    b = c;
                    null == a ? (b.next = this.begin(), this.head = b) : (b.next = a.next, a.next = b);
                    this.pushmod = this.modified = !0;
                    this.length++;
                    return b
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.head = a.next;
                    a.free();
                    a.next = mi.zpp_pool;
                    mi.zpp_pool = a;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                remove: function(a) {
                    this.inlined_try_remove(a)
                },
                inlined_try_remove: function(a) {
                    for (var b = null, c = this.begin(), d = !1; null != c;) {
                        if (c.elem() == a) {
                            this.inlined_erase(b);
                            d = !0;
                            break
                        }
                        b = c;
                        c = c.next
                    }
                    return d
                },
                inlined_erase: function(a) {
                    var b;
                    if (null == a) {
                        var c = this.begin();
                        this.head = b = c.next;
                        this.empty() && (this.pushmod = !0)
                    } else c = a.next, b = c.next, a.next = b, null == b && (this.pushmod = !0);
                    a = c;
                    a.free();
                    a.next = mi.zpp_pool;
                    mi.zpp_pool = a;
                    this.modified = !0;
                    this.length--;
                    this.pushmod = !0;
                    return b
                },
                clear: function() {
                    this.inlined_clear()
                },
                inlined_clear: function() {
                    for (; !this.empty();) this.inlined_pop();
                    this.pushmod = !0
                },
                empty: function() {
                    return null == this.begin()
                },
                __class__: Zr
            };
            var Gj = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_Constraint"] = Gj;
            Gj.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_Constraint"];
            Gj.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                add: function(a) {
                    return this.inlined_add(a)
                },
                inlined_add: function(a) {
                    if (null == cg.zpp_pool) var b =
                        new cg;
                    else b = cg.zpp_pool, cg.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.elt = a;
                    b.next = this.begin();
                    this.head = b;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                insert: function(a, b) {
                    return this.inlined_insert(a, b)
                },
                inlined_insert: function(a, b) {
                    if (null == cg.zpp_pool) var c = new cg;
                    else c = cg.zpp_pool, cg.zpp_pool = c.next, c.next = null;
                    c.alloc();
                    c.elt = b;
                    b = c;
                    null == a ? (b.next = this.begin(), this.head = b) : (b.next = a.next, a.next = b);
                    this.pushmod = this.modified = !0;
                    this.length++;
                    return b
                },
                pop: function() {
                    this.inlined_pop()
                },
                inlined_pop: function() {
                    var a =
                        this.begin();
                    this.head = a.next;
                    a.free();
                    a.next = cg.zpp_pool;
                    cg.zpp_pool = a;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                pop_unsafe: function() {
                    return this.inlined_pop_unsafe()
                },
                inlined_pop_unsafe: function() {
                    var a = this.front();
                    this.pop();
                    return a
                },
                remove: function(a) {
                    this.inlined_try_remove(a)
                },
                inlined_try_remove: function(a) {
                    for (var b = null, c = this.begin(), d = !1; null != c;) {
                        if (c.elem() == a) {
                            this.inlined_erase(b);
                            d = !0;
                            break
                        }
                        b = c;
                        c = c.next
                    }
                    return d
                },
                erase: function(a) {
                    return this.inlined_erase(a)
                },
                inlined_erase: function(a) {
                    var b;
                    if (null == a) {
                        var c = this.begin();
                        this.head = b = c.next;
                        this.empty() && (this.pushmod = !0)
                    } else c = a.next, b = c.next, a.next = b, null == b && (this.pushmod = !0);
                    a = c;
                    a.free();
                    a.next = cg.zpp_pool;
                    cg.zpp_pool = a;
                    this.modified = !0;
                    this.length--;
                    this.pushmod = !0;
                    return b
                },
                clear: function() {
                    this.inlined_clear()
                },
                inlined_clear: function() {
                    for (; !this.empty();) this.inlined_pop();
                    this.pushmod = !0
                },
                empty: function() {
                    return null == this.begin()
                },
                front: function() {
                    return this.begin().elem()
                },
                iterator_at: function(a) {
                    for (var b =
                            this.begin(); 0 < a-- && null != b;) b = b.next;
                    return b
                },
                __class__: Gj
            };
            var $i = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_Interactor"] = $i;
            $i.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_Interactor"];
            $i.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                add: function(a) {
                    return this.inlined_add(a)
                },
                inlined_add: function(a) {
                    if (null == ni.zpp_pool) var b = new ni;
                    else b = ni.zpp_pool, ni.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.elt = a;
                    b.next = this.begin();
                    this.head = b;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                pop: function() {
                    this.inlined_pop()
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.head = a.next;
                    a.free();
                    a.next = ni.zpp_pool;
                    ni.zpp_pool = a;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                pop_unsafe: function() {
                    return this.inlined_pop_unsafe()
                },
                inlined_pop_unsafe: function() {
                    var a = this.front();
                    this.pop();
                    return a
                },
                remove: function(a) {
                    this.inlined_try_remove(a)
                },
                inlined_try_remove: function(a) {
                    for (var b = null, c =
                            this.begin(), d = !1; null != c;) {
                        if (c.elem() == a) {
                            this.inlined_erase(b);
                            d = !0;
                            break
                        }
                        b = c;
                        c = c.next
                    }
                    return d
                },
                inlined_erase: function(a) {
                    var b;
                    if (null == a) {
                        var c = this.begin();
                        this.head = b = c.next;
                        this.empty() && (this.pushmod = !0)
                    } else c = a.next, b = c.next, a.next = b, null == b && (this.pushmod = !0);
                    a = c;
                    a.free();
                    a.next = ni.zpp_pool;
                    ni.zpp_pool = a;
                    this.modified = !0;
                    this.length--;
                    this.pushmod = !0;
                    return b
                },
                clear: function() {
                    this.inlined_clear()
                },
                inlined_clear: function() {
                    for (; !this.empty();) this.inlined_pop();
                    this.pushmod = !0
                },
                empty: function() {
                    return null ==
                        this.begin()
                },
                front: function() {
                    return this.begin().elem()
                },
                iterator_at: function(a) {
                    for (var b = this.begin(); 0 < a-- && null != b;) b = b.next;
                    return b
                },
                __class__: $i
            };
            var Nl = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_CbSet"] = Nl;
            Nl.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_CbSet"];
            Nl.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                add: function(a) {
                    return this.inlined_add(a)
                },
                inlined_add: function(a) {
                    if (null == oi.zpp_pool) var b =
                        new oi;
                    else b = oi.zpp_pool, oi.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.elt = a;
                    b.next = this.begin();
                    this.head = b;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                pop: function() {
                    this.inlined_pop()
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.head = a.next;
                    a.free();
                    a.next = oi.zpp_pool;
                    oi.zpp_pool = a;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                pop_unsafe: function() {
                    return this.inlined_pop_unsafe()
                },
                inlined_pop_unsafe: function() {
                    var a = this.front();
                    this.pop();
                    return a
                },
                remove: function(a) {
                    this.inlined_try_remove(a)
                },
                inlined_try_remove: function(a) {
                    for (var b = null, c = this.begin(), d = !1; null != c;) {
                        if (c.elem() == a) {
                            this.inlined_erase(b);
                            d = !0;
                            break
                        }
                        b = c;
                        c = c.next
                    }
                    return d
                },
                inlined_erase: function(a) {
                    var b;
                    if (null == a) {
                        var c = this.begin();
                        this.head = b = c.next;
                        this.empty() && (this.pushmod = !0)
                    } else c = a.next, b = c.next, a.next = b, null == b && (this.pushmod = !0);
                    a = c;
                    a.free();
                    a.next = oi.zpp_pool;
                    oi.zpp_pool = a;
                    this.modified = !0;
                    this.length--;
                    this.pushmod = !0;
                    return b
                },
                empty: function() {
                    return null == this.begin()
                },
                front: function() {
                    return this.begin().elem()
                },
                __class__: Nl
            };
            var ld = function() {
                this.cbsets = this.listeners = this.bodylisteners = this.conlisteners = null;
                this.id = 0;
                this.outer = null;
                this.id = Od.CbType();
                this.listeners = new Ml;
                this.bodylisteners = new Yr;
                this.conlisteners = new Zr;
                this.constraints = new Gj;
                this.interactors = new $i;
                this.cbsets = new Nl
            };
            g["zpp_nape.callbacks.ZPP_CbType"] = ld;
            ld.__name__ = ["zpp_nape", "callbacks", "ZPP_CbType"];
            ld.setlt = function(a, b) {
                return a.id < b.id
            };
            ld.prototype = {
                outer: null,
                id: null,
                cbsets: null,
                interactors: null,
                constraints: null,
                addConstraint: function(a) {
                    this.constraints.add(a)
                },
                addInteractor: function(a) {
                    this.interactors.add(a)
                },
                remConstraint: function(a) {
                    this.constraints.remove(a)
                },
                remInteractor: function(a) {
                    this.interactors.remove(a)
                },
                listeners: null,
                addint: function(a) {
                    for (var b = null, c = this.listeners.begin(); null != c;) {
                        var d = c.elem();
                        if (bf.setlt(a, d)) break;
                        b = c;
                        c = c.next
                    }
                    this.listeners.inlined_insert(b, a);
                    this.invalidateint()
                },
                removeint: function(a) {
                    this.listeners.remove(a);
                    this.invalidateint()
                },
                invalidateint: function() {
                    for (var a = this.cbsets.begin(); null != a;) a.elem().invalidate_listeners(),
                        a = a.next
                },
                bodylisteners: null,
                addbody: function(a) {
                    for (var b = null, c = this.bodylisteners.begin(); null != c;) {
                        var d = c.elem();
                        if (bf.setlt(a, d)) break;
                        b = c;
                        c = c.next
                    }
                    this.bodylisteners.inlined_insert(b, a);
                    this.invalidatebody()
                },
                removebody: function(a) {
                    this.bodylisteners.remove(a);
                    this.invalidatebody()
                },
                invalidatebody: function() {
                    for (var a = this.cbsets.begin(); null != a;) a.elem().invalidate_bodylisteners(), a = a.next
                },
                conlisteners: null,
                addconstraint: function(a) {
                    for (var b = null, c = this.conlisteners.begin(); null != c;) {
                        var d =
                            c.elem();
                        if (bf.setlt(a, d)) break;
                        b = c;
                        c = c.next
                    }
                    this.conlisteners.inlined_insert(b, a);
                    this.invalidateconstraint()
                },
                removeconstraint: function(a) {
                    this.conlisteners.remove(a);
                    this.invalidateconstraint()
                },
                invalidateconstraint: function() {
                    for (var a = this.cbsets.begin(); null != a;) a.elem().invalidate_conlisteners(), a = a.next
                },
                __class__: ld
            };
            var N = function() {};
            g["zpp_nape.util.ZPP_Flags"] = N;
            N.__name__ = ["zpp_nape", "util", "ZPP_Flags"];
            var bf = function() {
                this.body = this.constraint = this.interaction = this.space = null;
                this.id =
                    this.type = this.event = this.precedence = 0;
                this.outer = null
            };
            g["zpp_nape.callbacks.ZPP_Listener"] = bf;
            bf.__name__ = ["zpp_nape", "callbacks", "ZPP_Listener"];
            bf.setlt = function(a, b) {
                return a.precedence <= b.precedence ? a.precedence == b.precedence ? a.id > b.id : !1 : !0
            };
            bf.prototype = {
                outer: null,
                id: null,
                type: null,
                event: null,
                precedence: null,
                body: null,
                constraint: null,
                interaction: null,
                space: null,
                addedToSpace: function() {},
                removedFromSpace: function() {},
                __class__: bf
            };
            var tv = function() {
                this.outer_zn = this.options = this.handler =
                    null
            };
            g["zpp_nape.callbacks.ZPP_BodyListener"] = tv;
            tv.__name__ = ["zpp_nape", "callbacks", "ZPP_BodyListener"];
            tv.__super__ = bf;
            tv.prototype = p(bf.prototype, {
                outer_zn: null,
                options: null,
                handler: null,
                addedToSpace: function() {
                    this.options.handler = q(this, this.cbtype_change);
                    for (var a = this.options.includes.begin(); null != a;) a.elem().addbody(this), a = a.next
                },
                removedFromSpace: function() {
                    for (var a = this.options.includes.begin(); null != a;) a.elem().removebody(this), a = a.next;
                    this.options.handler = null
                },
                cbtype_change: function(a,
                    b, c) {
                    this.removedFromSpace();
                    this.options.effect_change(a, b, c);
                    this.addedToSpace()
                },
                __class__: tv
            });
            var uv = function() {
                this.outer_zn = this.options = this.handler = null
            };
            g["zpp_nape.callbacks.ZPP_ConstraintListener"] = uv;
            uv.__name__ = ["zpp_nape", "callbacks", "ZPP_ConstraintListener"];
            uv.__super__ = bf;
            uv.prototype = p(bf.prototype, {
                outer_zn: null,
                options: null,
                handler: null,
                addedToSpace: function() {
                    this.options.handler = q(this, this.cbtype_change);
                    for (var a = this.options.includes.begin(); null != a;) a.elem().addconstraint(this),
                        a = a.next
                },
                removedFromSpace: function() {
                    for (var a = this.options.includes.begin(); null != a;) a.elem().removeconstraint(this), a = a.next;
                    this.options.handler = null
                },
                cbtype_change: function(a, b, c) {
                    this.removedFromSpace();
                    this.options.effect_change(a, b, c);
                    this.addedToSpace()
                },
                __class__: uv
            });
            var Zi = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_CbType"] = Zi;
            Zi.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_CbType"];
            Zi.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                add: function(a) {
                    return this.inlined_add(a)
                },
                inlined_add: function(a) {
                    if (null == dg.zpp_pool) var b = new dg;
                    else b = dg.zpp_pool, dg.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.elt = a;
                    b.next = this.begin();
                    this.head = b;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                insert: function(a, b) {
                    return this.inlined_insert(a, b)
                },
                inlined_insert: function(a, b) {
                    if (null == dg.zpp_pool) var c = new dg;
                    else c = dg.zpp_pool, dg.zpp_pool = c.next, c.next = null;
                    c.alloc();
                    c.elt = b;
                    b = c;
                    null == a ? (b.next = this.begin(), this.head =
                        b) : (b.next = a.next, a.next = b);
                    this.pushmod = this.modified = !0;
                    this.length++;
                    return b
                },
                pop: function() {
                    this.inlined_pop()
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.head = a.next;
                    a.free();
                    a.next = dg.zpp_pool;
                    dg.zpp_pool = a;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                pop_unsafe: function() {
                    return this.inlined_pop_unsafe()
                },
                inlined_pop_unsafe: function() {
                    var a = this.front();
                    this.pop();
                    return a
                },
                remove: function(a) {
                    this.inlined_try_remove(a)
                },
                inlined_try_remove: function(a) {
                    for (var b = null,
                            c = this.begin(), d = !1; null != c;) {
                        if (c.elem() == a) {
                            this.inlined_erase(b);
                            d = !0;
                            break
                        }
                        b = c;
                        c = c.next
                    }
                    return d
                },
                inlined_erase: function(a) {
                    var b;
                    if (null == a) {
                        var c = this.begin();
                        this.head = b = c.next;
                        this.empty() && (this.pushmod = !0)
                    } else c = a.next, b = c.next, a.next = b, null == b && (this.pushmod = !0);
                    a = c;
                    a.free();
                    a.next = dg.zpp_pool;
                    dg.zpp_pool = a;
                    this.modified = !0;
                    this.length--;
                    this.pushmod = !0;
                    return b
                },
                clear: function() {
                    this.inlined_clear()
                },
                inlined_clear: function() {
                    for (; !this.empty();) this.inlined_pop();
                    this.pushmod = !0
                },
                empty: function() {
                    return null ==
                        this.begin()
                },
                has: function(a) {
                    return this.inlined_has(a)
                },
                inlined_has: function(a) {
                    var b = !1;
                    for (var c = this.begin(); null != c;) {
                        if (c.elem() == a) {
                            b = !0;
                            break
                        }
                        c = c.next
                    }
                    return b
                },
                front: function() {
                    return this.begin().elem()
                },
                iterator_at: function(a) {
                    for (var b = this.begin(); 0 < a-- && null != b;) b = b.next;
                    return b
                },
                __class__: Zi
            };
            var cf = function() {
                this.handlerp = null;
                this.allowSleepingCallbacks = this.pure = !1;
                this.options1 = this.options2 = this.handleri = null;
                this.itype = 0;
                this.outer_zni = this.outer_znp = null
            };
            g["zpp_nape.callbacks.ZPP_InteractionListener"] =
                cf;
            cf.__name__ = ["zpp_nape", "callbacks", "ZPP_InteractionListener"];
            cf.__super__ = bf;
            cf.prototype = p(bf.prototype, {
                outer_zni: null,
                outer_znp: null,
                itype: null,
                options1: null,
                options2: null,
                handleri: null,
                allowSleepingCallbacks: null,
                pure: null,
                handlerp: null,
                CbSetset: function(a, b, c) {
                    var d = cf.UCbSet,
                        e = cf.VCbSet,
                        f = cf.WCbSet;
                    a = a.begin();
                    for (var h = b.begin(); null != a && null != h;) {
                        var k = a.elem(),
                            m = h.elem();
                        k == m ? (f.inlined_add(k), a = a.next, h = h.next) : Ob.setlt(k, m) ? (d.inlined_add(k), a = a.next) : (e.inlined_add(m), h = h.next)
                    }
                    for (; null !=
                        a;) d.inlined_add(a.elem()), a = a.next;
                    for (; null != h;) e.inlined_add(h.elem()), h = h.next;
                    for (; !d.empty();)
                        for (a = d.pop_unsafe(), h = b.begin(); null != h;) k = h.elem(), c(a, k), h = h.next;
                    for (; !e.empty();)
                        for (b = e.pop_unsafe(), d = f.begin(); null != d;) a = d.elem(), c(b, a), d = d.next;
                    for (; !f.empty();)
                        for (e = f.pop_unsafe(), c(e, e), b = f.begin(); null != b;) d = b.elem(), c(e, d), b = b.next
                },
                CbTypeset: function(a, b, c) {
                    var d = cf.UCbType,
                        e = cf.VCbType,
                        f = cf.WCbType;
                    a = a.begin();
                    for (var h = b.begin(); null != a && null != h;) {
                        var k = a.elem(),
                            m = h.elem();
                        k == m ? (f.inlined_add(k),
                            a = a.next, h = h.next) : ld.setlt(k, m) ? (d.inlined_add(k), a = a.next) : (e.inlined_add(m), h = h.next)
                    }
                    for (; null != a;) d.inlined_add(a.elem()), a = a.next;
                    for (; null != h;) e.inlined_add(h.elem()), h = h.next;
                    for (; !d.empty();)
                        for (a = d.pop_unsafe(), h = b.begin(); null != h;) k = h.elem(), c(a, k), h = h.next;
                    for (; !e.empty();)
                        for (b = e.pop_unsafe(), d = f.begin(); null != d;) a = d.elem(), c(b, a), d = d.next;
                    for (; !f.empty();)
                        for (e = f.pop_unsafe(), c(e, e), b = f.begin(); null != b;) d = b.elem(), c(e, d), b = b.next
                },
                with_uniquesets: function(a) {
                    var b = this;
                    if (null == ie.zpp_pool) var c =
                        new ie;
                    else c = ie.zpp_pool, ie.zpp_pool = c.next, c.next = null;
                    c.alloc();
                    c.lt = og.setlt;
                    this.CbTypeset(this.options1.includes, this.options2.includes, function(a, d) {
                        b.CbSetset(a.cbsets, d.cbsets, function(a, d) {
                            a.validate();
                            d.validate();
                            Ob.single_intersection(a, d, b) && (a = og.get(a, d), c.try_insert(a))
                        })
                    });
                    c.clear_with(function(c) {
                        a ? b.space.freshListenerType(c.a, c.b) : b.space.nullListenerType(c.a, c.b);
                        c.free();
                        c.next = og.zpp_pool;
                        og.zpp_pool = c
                    });
                    var d = c;
                    d.free();
                    d.next = ie.zpp_pool;
                    ie.zpp_pool = d
                },
                with_union: function(a) {
                    for (var b =
                            this.options1.includes.begin(), c = this.options2.includes.begin(); null != b && null != c;) {
                        var d = b.elem(),
                            e = c.elem();
                        d == e ? (a(d), b = b.next, c = c.next) : ld.setlt(d, e) ? (a(d), b = b.next) : (a(e), c = c.next)
                    }
                    for (; null != b;) a(b.elem()), b = b.next;
                    for (; null != c;) a(c.elem()), c = c.next
                },
                addedToSpace: function() {
                    var a = this,
                        b = 3 == this.type;
                    this.with_union(function(c) {
                        c.addint(a);
                        if (b)
                            for (c = c.interactors.begin(); null != c;) c.elem().wake(), c = c.next
                    });
                    this.options1.handler = q(this, this.cbtype_change1);
                    this.options2.handler = q(this, this.cbtype_change2);
                    this.with_uniquesets(!0)
                },
                removedFromSpace: function() {
                    var a = this;
                    this.with_uniquesets(!1);
                    var b = 3 == this.type;
                    this.with_union(function(c) {
                        c.removeint(a);
                        if (b)
                            for (c = c.interactors.begin(); null != c;) c.elem().wake(), c = c.next
                    });
                    this.options1.handler = null;
                    this.options2.handler = null
                },
                cbtype_change1: function(a, b, c) {
                    this.cbtype_change(this.options1, a, b, c)
                },
                cbtype_change2: function(a, b, c) {
                    this.cbtype_change(this.options2, a, b, c)
                },
                cbtype_change: function(a, b, c, d) {
                    this.space.revoke_listener(this);
                    this.removedFromSpace();
                    a.effect_change(b, c, d);
                    this.addedToSpace();
                    this.space.unrevoke_listener(this)
                },
                __class__: cf
            });
            var zw = function() {
                this.outer = this.handler = this.includes = this.excludes = this.wrap_includes = this.wrap_excludes = null
            };
            g["zpp_nape.callbacks.ZPP_OptionType"] = zw;
            zw.__name__ = ["zpp_nape", "callbacks", "ZPP_OptionType"];
            zw.prototype = {
                outer: null,
                handler: null,
                includes: null,
                excludes: null,
                wrap_includes: null,
                wrap_excludes: null,
                setup_includes: function() {
                    this.wrap_includes = Si.get(this.includes, !0)
                },
                setup_excludes: function() {
                    this.wrap_excludes =
                        Si.get(this.excludes, !0)
                },
                excluded: function(a) {
                    return this.nonemptyintersection(a, this.excludes)
                },
                included: function(a) {
                    return this.nonemptyintersection(a, this.includes)
                },
                compatible: function(a) {
                    return this.included(a) ? !this.excluded(a) : !1
                },
                nonemptyintersection: function(a, b) {
                    var c = !1;
                    a = a.begin();
                    for (b = b.begin(); null != b && null != a;) {
                        var d = b.elem(),
                            e = a.elem();
                        if (d == e) {
                            c = !0;
                            break
                        } else ld.setlt(d, e) ? b = b.next : a = a.next
                    }
                    return c
                },
                effect_change: function(a, b, c) {
                    if (b)
                        if (c) {
                            b = null;
                            for (c = this.includes.begin(); null !=
                                c;) {
                                var d = c.elem();
                                if (ld.setlt(a, d)) break;
                                b = c;
                                c = c.next
                            }
                            this.includes.inlined_insert(b, a)
                        } else this.includes.remove(a);
                    else if (c) {
                        b = null;
                        for (c = this.excludes.begin(); null != c;) {
                            d = c.elem();
                            if (ld.setlt(a, d)) break;
                            b = c;
                            c = c.next
                        }
                        this.excludes.inlined_insert(b, a)
                    } else this.excludes.remove(a)
                },
                __class__: zw
            };
            var wh = function() {
                this.pre_dt = 0;
                this.cbTypes = this.cbSet = null;
                this.ignore = this.__velocity = !1;
                this.component = null;
                this.breakUnderForce = this.breakUnderError = this.removeOnBreak = !1;
                this.frequency = this.damping =
                    this.maxForce = this.maxError = 0;
                this.active = this.stiff = !1;
                this.compound = this.space = null;
                this.id = 0;
                this.outer = null;
                this.__velocity = !1;
                this.id = Od.Constraint();
                this.active = this.stiff = !0;
                this.ignore = !1;
                this.frequency = 10;
                this.damping = 1;
                this.maxForce = Nb.POSINF();
                this.maxError = Nb.POSINF();
                this.breakUnderForce = !1;
                this.removeOnBreak = !0;
                this.pre_dt = -1;
                this.cbTypes = new Zi
            };
            g["zpp_nape.constraint.ZPP_Constraint"] = wh;
            wh.__name__ = ["zpp_nape", "constraint", "ZPP_Constraint"];
            wh.prototype = {
                outer: null,
                id: null,
                compound: null,
                space: null,
                active: null,
                stiff: null,
                frequency: null,
                damping: null,
                maxForce: null,
                maxError: null,
                breakUnderForce: null,
                breakUnderError: null,
                removeOnBreak: null,
                component: null,
                ignore: null,
                __velocity: null,
                immutable_midstep: function(a) {},
                cbTypes: null,
                cbSet: null,
                insert_cbtype: function(a) {
                    if (!this.cbTypes.has(a)) {
                        null != this.space && (this.dealloc_cbSet(), a.addConstraint(this));
                        for (var b = null, c = this.cbTypes.begin(); null != c;) {
                            var d = c.elem();
                            if (ld.setlt(a, d)) break;
                            b = c;
                            c = c.next
                        }
                        this.cbTypes.inlined_insert(b, a);
                        null !=
                            this.space && (this.alloc_cbSet(), this.wake())
                    }
                },
                alloc_cbSet: function() {
                    null != (this.cbSet = this.space.cbsets.get(this.cbTypes)) && (this.cbSet.increment(), this.cbSet.addConstraint(this))
                },
                dealloc_cbSet: function() {
                    if (null != this.cbSet) {
                        this.cbSet.remConstraint(this);
                        if (this.cbSet.decrement()) {
                            this.space.cbsets.remove(this.cbSet);
                            var a = this.cbSet;
                            a.free();
                            a.next = Ob.zpp_pool;
                            Ob.zpp_pool = a
                        }
                        this.cbSet = null
                    }
                },
                activate: function() {
                    null != this.space && this.activeInSpace()
                },
                deactivate: function() {
                    null != this.space &&
                        this.inactiveOrOutSpace()
                },
                addedToSpace: function() {
                    this.active && this.activeInSpace();
                    this.activeBodies();
                    for (var a = this.cbTypes.begin(); null != a;) a.elem().addConstraint(this), a = a.next
                },
                removedFromSpace: function() {
                    this.active && this.inactiveOrOutSpace();
                    this.inactiveBodies();
                    for (var a = this.cbTypes.begin(); null != a;) a.elem().remConstraint(this), a = a.next
                },
                activeInSpace: function() {
                    this.alloc_cbSet();
                    null == pg.zpp_pool ? this.component = new pg : (this.component = pg.zpp_pool, pg.zpp_pool = this.component.next, this.component.next =
                        null);
                    this.component.alloc();
                    this.component.isBody = !1;
                    this.component.constraint = this
                },
                inactiveOrOutSpace: function() {
                    this.dealloc_cbSet();
                    var a = this.component;
                    a.free();
                    a.next = pg.zpp_pool;
                    pg.zpp_pool = a;
                    this.component = null
                },
                activeBodies: function() {},
                inactiveBodies: function() {},
                clearcache: function() {},
                wake_connected: function() {},
                forest: function() {},
                pair_exists: function(a, b) {
                    return !1
                },
                broken: function() {},
                warmStart: function() {},
                pre_dt: null,
                preStep: function(a) {
                    return !1
                },
                applyImpulseVel: function() {
                    return !1
                },
                applyImpulsePos: function() {
                    return !1
                },
                wake: function() {
                    null != this.space && this.space.wake_constraint(this)
                },
                __class__: wh
            };
            var ir = function() {
                this.stepped = !1;
                this.kMass = this.jAcc = this.jMax = this.gamma = this.bias = 0;
                this.b1 = this.b2 = null;
                this.scale = 0;
                this.slack = this.equal = !1;
                this.ratio = this.jointMin = this.jointMax = 0;
                this.outer_zn = null;
                wh.call(this);
                this.ratio = 1;
                this.jAcc = 0;
                this.slack = !1;
                this.jMax = Nb.POSINF();
                this.stepped = !1
            };
            g["zpp_nape.constraint.ZPP_AngleJoint"] = ir;
            ir.__name__ = ["zpp_nape", "constraint", "ZPP_AngleJoint"];
            ir.__super__ = wh;
            ir.prototype = p(wh.prototype, {
                outer_zn: null,
                ratio: null,
                jointMin: null,
                jointMax: null,
                slack: null,
                equal: null,
                scale: null,
                activeBodies: function() {
                    null != this.b1 && this.b1.constraints.add(this);
                    this.b2 != this.b1 && null != this.b2 && this.b2.constraints.add(this)
                },
                inactiveBodies: function() {
                    null != this.b1 && this.b1.constraints.remove(this);
                    this.b2 != this.b1 && null != this.b2 && this.b2.constraints.remove(this)
                },
                b1: null,
                b2: null,
                kMass: null,
                jAcc: null,
                jMax: null,
                gamma: null,
                bias: null,
                stepped: null,
                wake_connected: function() {
                    null !=
                        this.b1 && this.b1.isDynamic() && this.b1.wake();
                    null != this.b2 && this.b2.isDynamic() && this.b2.wake()
                },
                forest: function() {
                    if (this.b1.isDynamic()) {
                        if (this.b1.component == this.b1.component.parent) var a = this.b1.component;
                        else {
                            a = this.b1.component;
                            for (var b = null; a != a.parent;) {
                                var c = a.parent;
                                a.parent = b;
                                b = a;
                                a = c
                            }
                            for (; null != b;) c = b.parent, b.parent = a, b = c
                        }
                        if (this.component == this.component.parent) b = this.component;
                        else {
                            b = this.component;
                            for (c = null; b != b.parent;) {
                                var d = b.parent;
                                b.parent = c;
                                c = b;
                                b = d
                            }
                            for (; null != c;) d = c.parent,
                                c.parent = b, c = d
                        }
                        a != b && (a.rank < b.rank ? a.parent = b : a.rank > b.rank ? b.parent = a : (b.parent = a, a.rank++))
                    }
                    if (this.b2.isDynamic()) {
                        if (this.b2.component == this.b2.component.parent) a = this.b2.component;
                        else {
                            a = this.b2.component;
                            for (b = null; a != a.parent;) c = a.parent, a.parent = b, b = a, a = c;
                            for (; null != b;) c = b.parent, b.parent = a, b = c
                        }
                        if (this.component == this.component.parent) b = this.component;
                        else {
                            b = this.component;
                            for (c = null; b != b.parent;) d = b.parent, b.parent = c, c = b, b = d;
                            for (; null != c;) d = c.parent, c.parent = b, c = d
                        }
                        a != b && (a.rank < b.rank ? a.parent =
                            b : a.rank > b.rank ? b.parent = a : (b.parent = a, a.rank++))
                    }
                },
                pair_exists: function(a, b) {
                    return this.b1.id != a || this.b2.id != b ? this.b1.id == b ? this.b2.id == a : !1 : !0
                },
                clearcache: function() {
                    this.jAcc = 0;
                    this.pre_dt = -1;
                    this.slack = !1
                },
                preStep: function(a) {
                    -1 == this.pre_dt && (this.pre_dt = a);
                    var b = a / this.pre_dt;
                    this.pre_dt = a;
                    this.stepped = !0;
                    this.equal = this.jointMin == this.jointMax;
                    var c = this.ratio * this.b2.rot - this.b1.rot;
                    this.equal ? (c -= this.jointMax, this.slack = !1, this.scale = 1) : c < this.jointMin ? (c = this.jointMin - c, this.scale = -1,
                        this.slack = !1) : c > this.jointMax ? (c -= this.jointMax, this.scale = 1, this.slack = !1) : (c = this.scale = 0, this.slack = !0);
                    if (!this.slack) {
                        this.kMass = this.b1.sinertia + this.ratio * this.ratio * this.b2.sinertia;
                        0 != this.kMass ? this.kMass = 1 / this.kMass : this.jAcc = 0;
                        if (this.stiff) this.gamma = this.bias = 0;
                        else {
                            if (this.breakUnderError && c * c > this.maxError * this.maxError) return !0;
                            var d = 2 * Math.PI * this.frequency;
                            this.gamma = 1 / (a * d * (2 * this.damping + d * a));
                            var e = 1 / (1 + this.gamma);
                            d = a * d * d * this.gamma;
                            this.gamma *= e;
                            this.kMass *= e;
                            this.bias = -c *
                                d;
                            this.bias < -this.maxError ? this.bias = -this.maxError : this.bias > this.maxError && (this.bias = this.maxError)
                        }
                        this.jAcc *= b;
                        this.jMax = this.maxForce * a
                    }
                    return !1
                },
                warmStart: function() {
                    this.slack || (this.b1.angvel -= this.scale * this.b1.iinertia * this.jAcc, this.b2.angvel += this.ratio * this.scale * this.b2.iinertia * this.jAcc)
                },
                applyImpulseVel: function() {
                    if (this.slack) return !1;
                    var a = this.kMass * (this.bias - this.scale * (this.ratio * (this.b2.angvel + this.b2.kinangvel) - this.b1.angvel - this.b1.kinangvel)) - this.jAcc * this.gamma,
                        b =
                        this.jAcc;
                    this.jAcc += a;
                    !this.equal && 0 < this.jAcc && (this.jAcc = 0);
                    if (this.breakUnderForce && (this.jAcc > this.jMax || this.jAcc < -this.jMax)) return !0;
                    this.stiff || (this.jAcc > this.jMax ? this.jAcc = this.jMax : this.jAcc < -this.jMax && (this.jAcc = -this.jMax));
                    a = this.jAcc - b;
                    this.b1.angvel -= this.scale * this.b1.iinertia * a;
                    this.b2.angvel += this.ratio * this.scale * this.b2.iinertia * a;
                    return !1
                },
                applyImpulsePos: function() {
                    var a = this.ratio * this.b2.rot - this.b1.rot;
                    if (this.equal) {
                        a -= this.jointMax;
                        var b = !1;
                        this.scale = 1
                    } else a < this.jointMin ?
                        (a = this.jointMin - a, this.scale = -1, b = !1) : a > this.jointMax ? (a -= this.jointMax, this.scale = 1, b = !1) : (a = this.scale = 0, b = !0);
                    if (!b) {
                        if (this.breakUnderError && a * a > this.maxError * this.maxError) return !0;
                        b = -(.5 * a) * this.kMass;
                        if (this.equal || 0 > b) this.b1.delta_rot(-this.scale * b * this.b1.iinertia), this.b2.delta_rot(this.ratio * this.scale * b * this.b2.iinertia)
                    }
                    return !1
                },
                __class__: ir
            });
            var jr = function() {
                this.kMassa = this.kMassb = this.kMassc = this.jAccx = this.jAccy = this.biasx = this.biasy = 0;
                this.wrap_n = null;
                this.nlocalx = this.nlocaly =
                    this.nrelx = this.nrely = 0;
                this.wrap_a2 = null;
                this.a2localx = this.a2localy = this.a2relx = this.a2rely = 0;
                this.wrap_a1 = null;
                this.dot1 = this.dot2 = this.cx1 = this.cx2 = this.a1localx = this.a1localy = this.a1relx = this.a1rely = 0;
                this.equal = !1;
                this.scale = this.jointMin = this.jointMax = 0;
                this.outer_zn = null;
                wh.call(this);
                this.jAccy = this.jAccx = this.nrely = this.nrelx = this.nlocaly = this.nlocalx = this.a2rely = this.a2relx = this.a2localy = this.a2localx = this.a1rely = this.a1relx = this.a1localy = this.a1localx = 0;
                this.jMax = Nb.POSINF();
                this.jointMin =
                    Nb.NEGINF();
                this.jointMax = Nb.POSINF();
                this.stepped = !1
            };
            g["zpp_nape.constraint.ZPP_LineJoint"] = jr;
            jr.__name__ = ["zpp_nape", "constraint", "ZPP_LineJoint"];
            jr.__super__ = wh;
            jr.prototype = p(wh.prototype, {
                outer_zn: null,
                scale: null,
                jointMin: null,
                jointMax: null,
                equal: null,
                dot1: null,
                dot2: null,
                cx1: null,
                cx2: null,
                activeBodies: function() {
                    null != this.b1 && this.b1.constraints.add(this);
                    this.b2 != this.b1 && null != this.b2 && this.b2.constraints.add(this)
                },
                inactiveBodies: function() {
                    null != this.b1 && this.b1.constraints.remove(this);
                    this.b2 != this.b1 && null != this.b2 && this.b2.constraints.remove(this)
                },
                b1: null,
                a1localx: null,
                a1localy: null,
                a1relx: null,
                a1rely: null,
                validate_a1: function() {
                    this.wrap_a1.zpp_inner.x = this.a1localx;
                    this.wrap_a1.zpp_inner.y = this.a1localy
                },
                invalidate_a1: function(a) {
                    this.immutable_midstep("Constraint::a1");
                    this.a1localx = a.x;
                    this.a1localy = a.y;
                    this.wake()
                },
                setup_a1: function() {
                    this.wrap_a1 = Wa.get(this.a1localx, this.a1localy);
                    this.wrap_a1.zpp_inner._inuse = !0;
                    this.wrap_a1.zpp_inner._validate = q(this, this.validate_a1);
                    this.wrap_a1.zpp_inner._invalidate = q(this, this.invalidate_a1)
                },
                wrap_a1: null,
                b2: null,
                a2localx: null,
                a2localy: null,
                a2relx: null,
                a2rely: null,
                validate_a2: function() {
                    this.wrap_a2.zpp_inner.x = this.a2localx;
                    this.wrap_a2.zpp_inner.y = this.a2localy
                },
                invalidate_a2: function(a) {
                    this.immutable_midstep("Constraint::a2");
                    this.a2localx = a.x;
                    this.a2localy = a.y;
                    this.wake()
                },
                setup_a2: function() {
                    this.wrap_a2 = Wa.get(this.a2localx, this.a2localy);
                    this.wrap_a2.zpp_inner._inuse = !0;
                    this.wrap_a2.zpp_inner._validate = q(this, this.validate_a2);
                    this.wrap_a2.zpp_inner._invalidate = q(this, this.invalidate_a2)
                },
                wrap_a2: null,
                zip_n: null,
                nlocalx: null,
                nlocaly: null,
                nrelx: null,
                nrely: null,
                validate_n: function() {
                    this.wrap_n.zpp_inner.x = this.nlocalx;
                    this.wrap_n.zpp_inner.y = this.nlocaly
                },
                invalidate_n: function(a) {
                    this.immutable_midstep("Constraint::n");
                    this.nlocalx = a.x;
                    this.nlocaly = a.y;
                    this.zip_n = !0;
                    this.wake()
                },
                setup_n: function() {
                    this.wrap_n = Wa.get(this.nlocalx, this.nlocaly);
                    this.wrap_n.zpp_inner._inuse = !0;
                    this.wrap_n.zpp_inner._validate = q(this, this.validate_n);
                    this.wrap_n.zpp_inner._invalidate = q(this, this.invalidate_n)
                },
                wrap_n: null,
                validate_norm: function() {
                    if (this.zip_n) {
                        this.zip_n = !1;
                        var a = 1 / Math.sqrt(this.nlocalx * this.nlocalx + this.nlocaly * this.nlocaly);
                        this.nlocalx *= a;
                        this.nlocaly *= a
                    }
                },
                kMassa: null,
                kMassb: null,
                kMassc: null,
                jAccx: null,
                jAccy: null,
                jMax: null,
                gamma: null,
                biasx: null,
                biasy: null,
                stepped: null,
                wake_connected: function() {
                    null != this.b1 && this.b1.isDynamic() && this.b1.wake();
                    null != this.b2 && this.b2.isDynamic() && this.b2.wake()
                },
                forest: function() {
                    if (this.b1.isDynamic()) {
                        if (this.b1.component ==
                            this.b1.component.parent) var a = this.b1.component;
                        else {
                            a = this.b1.component;
                            for (var b = null; a != a.parent;) {
                                var c = a.parent;
                                a.parent = b;
                                b = a;
                                a = c
                            }
                            for (; null != b;) c = b.parent, b.parent = a, b = c
                        }
                        if (this.component == this.component.parent) b = this.component;
                        else {
                            b = this.component;
                            for (c = null; b != b.parent;) {
                                var d = b.parent;
                                b.parent = c;
                                c = b;
                                b = d
                            }
                            for (; null != c;) d = c.parent, c.parent = b, c = d
                        }
                        a != b && (a.rank < b.rank ? a.parent = b : a.rank > b.rank ? b.parent = a : (b.parent = a, a.rank++))
                    }
                    if (this.b2.isDynamic()) {
                        if (this.b2.component == this.b2.component.parent) a =
                            this.b2.component;
                        else {
                            a = this.b2.component;
                            for (b = null; a != a.parent;) c = a.parent, a.parent = b, b = a, a = c;
                            for (; null != b;) c = b.parent, b.parent = a, b = c
                        }
                        if (this.component == this.component.parent) b = this.component;
                        else {
                            b = this.component;
                            for (c = null; b != b.parent;) d = b.parent, b.parent = c, c = b, b = d;
                            for (; null != c;) d = c.parent, c.parent = b, c = d
                        }
                        a != b && (a.rank < b.rank ? a.parent = b : a.rank > b.rank ? b.parent = a : (b.parent = a, a.rank++))
                    }
                },
                pair_exists: function(a, b) {
                    return this.b1.id != a || this.b2.id != b ? this.b1.id == b ? this.b2.id == a : !1 : !0
                },
                clearcache: function() {
                    this.jAccy =
                        this.jAccx = 0;
                    this.pre_dt = -1
                },
                preStep: function(a) {
                    -1 == this.pre_dt && (this.pre_dt = a);
                    var b = a / this.pre_dt;
                    this.pre_dt = a;
                    this.equal = this.jointMin == this.jointMax;
                    this.stepped = !0;
                    this.validate_norm();
                    this.a1relx = this.b1.axisy * this.a1localx - this.b1.axisx * this.a1localy;
                    this.a1rely = this.a1localx * this.b1.axisx + this.a1localy * this.b1.axisy;
                    this.nrelx = this.b1.axisy * this.nlocalx - this.b1.axisx * this.nlocaly;
                    this.nrely = this.nlocalx * this.b1.axisx + this.nlocaly * this.b1.axisy;
                    this.a2relx = this.b2.axisy * this.a2localx - this.b2.axisx *
                        this.a2localy;
                    this.a2rely = this.a2localx * this.b2.axisx + this.a2localy * this.b2.axisy;
                    var c = this.b2.posx + this.a2relx - this.b1.posx - this.a1relx;
                    var d = this.b2.posy + this.a2rely - this.b1.posy - this.a1rely;
                    var e = d * this.nrelx - c * this.nrely;
                    var f = this.nrelx * c + this.nrely * d;
                    this.equal ? (f -= this.jointMin, this.scale = 1) : f > this.jointMax ? (f -= this.jointMax, this.scale = 1) : f < this.jointMin ? (f = this.jointMin - f, this.scale = -1) : this.scale = f = 0;
                    c += this.a1relx;
                    d += this.a1rely;
                    this.dot1 = this.nrelx * c + this.nrely * d;
                    this.cx1 = d * this.nrelx -
                        c * this.nrely;
                    this.dot2 = this.nrelx * this.a2relx + this.nrely * this.a2rely;
                    this.cx2 = this.a2rely * this.nrelx - this.a2relx * this.nrely;
                    this.kMassa = this.b1.smass + this.b2.smass + this.dot1 * this.dot1 * this.b1.sinertia + this.dot2 * this.dot2 * this.b2.sinertia;
                    this.kMassb = -this.scale * (this.dot1 * this.cx1 * this.b1.sinertia + this.dot2 * this.cx2 * this.b2.sinertia);
                    this.kMassc = this.scale * this.scale * (this.b1.smass + this.b2.smass + this.cx1 * this.cx1 * this.b1.sinertia + this.cx2 * this.cx2 * this.b2.sinertia);
                    d = this.kMassa * this.kMassc - this.kMassb *
                        this.kMassb;
                    d != d ? (this.kMassa = this.kMassb = this.kMassc = 0, d = 3) : 0 == d ? (d = 0, 0 != this.kMassa ? this.kMassa = 1 / this.kMassa : (this.kMassa = 0, d |= 1), 0 != this.kMassc ? this.kMassc = 1 / this.kMassc : (this.kMassc = 0, d |= 2), this.kMassb = 0) : (d = 1 / d, c = this.kMassc * d, this.kMassc = this.kMassa * d, this.kMassa = c, this.kMassb *= -d, d = 0);
                    0 != (d & 1) && (this.jAccx = 0);
                    0 != (d & 2) && (this.jAccy = 0);
                    if (this.stiff) this.biasy = this.biasx = this.gamma = 0;
                    else {
                        if (this.breakUnderError && e * e + f * f > this.maxError * this.maxError) return !0;
                        c = 2 * Math.PI * this.frequency;
                        this.gamma =
                            1 / (a * c * (2 * this.damping + c * a));
                        d = 1 / (1 + this.gamma);
                        c = a * c * c * this.gamma;
                        this.gamma *= d;
                        this.kMassa *= d;
                        this.kMassb *= d;
                        this.kMassc *= d;
                        this.biasx = e;
                        this.biasy = f;
                        e = -c;
                        this.biasx *= e;
                        this.biasy *= e;
                        e = this.maxError;
                        f = this.biasx * this.biasx + this.biasy * this.biasy;
                        f > e * e && (e *= Xd.invsqrt(f), this.biasx *= e, this.biasy *= e)
                    }
                    this.jAccx *= b;
                    this.jAccy *= b;
                    this.jMax = this.maxForce * a;
                    return !1
                },
                warmStart: function() {
                    var a = this.scale * this.nrelx * this.jAccy - this.nrely * this.jAccx,
                        b = this.nrelx * this.jAccx + this.scale * this.nrely * this.jAccy,
                        c = this.b1.imass;
                    this.b1.velx -= a * c;
                    this.b1.vely -= b * c;
                    c = this.b2.imass;
                    this.b2.velx += a * c;
                    this.b2.vely += b * c;
                    this.b1.angvel += (this.scale * this.cx1 * this.jAccy - this.dot1 * this.jAccx) * this.b1.iinertia;
                    this.b2.angvel += (this.dot2 * this.jAccx - this.scale * this.cx2 * this.jAccy) * this.b2.iinertia
                },
                applyImpulseVel: function() {
                    var a = this.b2.velx - this.b1.velx;
                    var b = this.b2.vely - this.b1.vely;
                    a += this.b2.kinvelx - this.b1.kinvelx;
                    b += this.b2.kinvely - this.b1.kinvely;
                    var c = b * this.nrelx - a * this.nrely + (this.b2.angvel + this.b2.kinangvel) *
                        this.dot2 - (this.b1.angvel + this.b1.kinangvel) * this.dot1;
                    a = this.scale * (this.nrelx * a + this.nrely * b - (this.b2.angvel + this.b2.kinangvel) * this.cx2 + (this.b1.angvel + this.b1.kinangvel) * this.cx1);
                    c = this.biasx - c;
                    a = this.biasy - a;
                    b = this.kMassa * c + this.kMassb * a;
                    a = this.kMassb * c + this.kMassc * a;
                    var d = this.gamma;
                    c = b - this.jAccx * d;
                    a -= this.jAccy * d;
                    b = this.jAccx;
                    d = this.jAccy;
                    this.jAccx += 1 * c;
                    this.jAccy += 1 * a;
                    0 < this.jAccy && (this.jAccy = 0);
                    if (this.breakUnderForce) {
                        if (this.jAccx * this.jAccx + this.jAccy * this.jAccy > this.jMax * this.jMax) return !0
                    } else this.stiff ||
                        (c = this.jMax, a = this.jAccx * this.jAccx + this.jAccy * this.jAccy, a > c * c && (c *= Xd.invsqrt(a), this.jAccx *= c, this.jAccy *= c));
                    c = this.jAccx - b;
                    a = this.jAccy - d;
                    b = this.scale * this.nrelx * a - this.nrely * c;
                    d = this.nrelx * c + this.scale * this.nrely * a;
                    var e = this.b1.imass;
                    this.b1.velx -= b * e;
                    this.b1.vely -= d * e;
                    e = this.b2.imass;
                    this.b2.velx += b * e;
                    this.b2.vely += d * e;
                    this.b1.angvel += (this.scale * this.cx1 * a - this.dot1 * c) * this.b1.iinertia;
                    this.b2.angvel += (this.dot2 * c - this.scale * this.cx2 * a) * this.b2.iinertia;
                    return !1
                },
                applyImpulsePos: function() {
                    var a =
                        this.b1.axisy * this.nlocalx - this.b1.axisx * this.nlocaly;
                    var b = this.nlocalx * this.b1.axisx + this.nlocaly * this.b1.axisy;
                    var c = this.b1.axisy * this.a1localx - this.b1.axisx * this.a1localy;
                    var d = this.a1localx * this.b1.axisx + this.a1localy * this.b1.axisy;
                    var e = this.b2.axisy * this.a2localx - this.b2.axisx * this.a2localy;
                    var f = this.a2localx * this.b2.axisx + this.a2localy * this.b2.axisy;
                    var h = this.b2.posx + e - this.b1.posx - c;
                    var k = this.b2.posy + f - this.b1.posy - d;
                    var m = k * a - h * b;
                    var g = a * h + b * k;
                    if (this.equal) {
                        g -= this.jointMin;
                        var l = 1
                    } else g >
                        this.jointMax ? (g -= this.jointMax, l = 1) : g < this.jointMin ? (g = this.jointMin - g, l = -1) : l = g = 0;
                    if (this.breakUnderError && m * m + g * g > this.maxError * this.maxError) return !0;
                    if (m * m + g * g < K.constraintLinearSlop * K.constraintLinearSlop) return !1;
                    m *= .5;
                    g *= .5;
                    if (6 < m * m + g * g) {
                        var n = this.b1.smass + this.b2.smass;
                        n > K.epsilon && (n = .8 / n, g = n * (b * m - l * a * g), l = n * (a * m * l - b * m), m = this.b1.imass, this.b1.posx -= g * m, this.b1.posy -= l * m, m = this.b2.imass, this.b2.posx += g * m, this.b2.posy += l * m, h = this.b2.posx + e - this.b1.posx - c, k = this.b2.posy + f - this.b1.posy - d,
                            g = a * h + b * k, this.equal ? (g -= this.jointMin, l = 1) : g > this.jointMax ? (g -= this.jointMax, l = 1) : g < this.jointMin ? (g = this.jointMin - g, l = -1) : l = g = 0, m = .5 * (k * a - h * b), g *= .5)
                    }
                    c = h + c;
                    k += d;
                    d = a * c + b * k;
                    k = k * a - c * b;
                    c = a * e + b * f;
                    e = f * a - e * b;
                    f = this.b1.smass + this.b2.smass + d * d * this.b1.sinertia + c * c * this.b2.sinertia;
                    n = -l * (d * k * this.b1.sinertia + c * e * this.b2.sinertia);
                    h = l * l * (this.b1.smass + this.b2.smass + k * k * this.b1.sinertia + e * e * this.b2.sinertia);
                    m = -m;
                    g = -g;
                    var p = f * h - n * n;
                    p != p ? m = g = 0 : 0 == p ? (m = 0 != f ? m / f : 0, g = 0 != h ? g / h : 0) : (p = 1 / p, h = p * (h * m - n * g), g = p * (f * g - n *
                        m), m = h);
                    0 < g && (g = 0);
                    f = l * a * g - b * m;
                    a = a * m + l * b * g;
                    b = this.b1.imass;
                    this.b1.posx -= f * b;
                    this.b1.posy -= a * b;
                    b = this.b2.imass;
                    this.b2.posx += f * b;
                    this.b2.posy += a * b;
                    this.b1.delta_rot((l * k * g - d * m) * this.b1.iinertia);
                    this.b2.delta_rot((c * m - l * e * g) * this.b2.iinertia);
                    return !1
                },
                __class__: jr
            });
            var kr = function() {
                this.stepped = !1;
                this.kMassa = this.kMassb = this.kMassc = this.jAccx = this.jAccy = this.jMax = this.gamma = this.biasx = this.biasy = 0;
                this.wrap_a2 = null;
                this.a2localx = this.a2localy = this.a2relx = this.a2rely = 0;
                this.wrap_a1 = this.b2 = null;
                this.a1localx = this.a1localy = this.a1relx = this.a1rely = 0;
                this.outer_zn = this.b1 = null;
                wh.call(this);
                this.stepped = !1;
                this.jAccy = this.jAccx = 0;
                this.jMax = Nb.POSINF();
                this.a2rely = this.a2relx = this.a2localy = this.a2localx = this.a1rely = this.a1relx = this.a1localy = this.a1localx = 0
            };
            g["zpp_nape.constraint.ZPP_PivotJoint"] = kr;
            kr.__name__ = ["zpp_nape", "constraint", "ZPP_PivotJoint"];
            kr.__super__ = wh;
            kr.prototype = p(wh.prototype, {
                outer_zn: null,
                activeBodies: function() {
                    null != this.b1 && this.b1.constraints.add(this);
                    this.b2 != this.b1 &&
                        null != this.b2 && this.b2.constraints.add(this)
                },
                inactiveBodies: function() {
                    null != this.b1 && this.b1.constraints.remove(this);
                    this.b2 != this.b1 && null != this.b2 && this.b2.constraints.remove(this)
                },
                b1: null,
                a1localx: null,
                a1localy: null,
                a1relx: null,
                a1rely: null,
                validate_a1: function() {
                    this.wrap_a1.zpp_inner.x = this.a1localx;
                    this.wrap_a1.zpp_inner.y = this.a1localy
                },
                invalidate_a1: function(a) {
                    this.immutable_midstep("Constraint::a1");
                    this.a1localx = a.x;
                    this.a1localy = a.y;
                    this.wake()
                },
                setup_a1: function() {
                    this.wrap_a1 = Wa.get(this.a1localx,
                        this.a1localy);
                    this.wrap_a1.zpp_inner._inuse = !0;
                    this.wrap_a1.zpp_inner._validate = q(this, this.validate_a1);
                    this.wrap_a1.zpp_inner._invalidate = q(this, this.invalidate_a1)
                },
                wrap_a1: null,
                b2: null,
                a2localx: null,
                a2localy: null,
                a2relx: null,
                a2rely: null,
                validate_a2: function() {
                    this.wrap_a2.zpp_inner.x = this.a2localx;
                    this.wrap_a2.zpp_inner.y = this.a2localy
                },
                invalidate_a2: function(a) {
                    this.immutable_midstep("Constraint::a2");
                    this.a2localx = a.x;
                    this.a2localy = a.y;
                    this.wake()
                },
                setup_a2: function() {
                    this.wrap_a2 = Wa.get(this.a2localx,
                        this.a2localy);
                    this.wrap_a2.zpp_inner._inuse = !0;
                    this.wrap_a2.zpp_inner._validate = q(this, this.validate_a2);
                    this.wrap_a2.zpp_inner._invalidate = q(this, this.invalidate_a2)
                },
                wrap_a2: null,
                kMassa: null,
                kMassb: null,
                kMassc: null,
                jAccx: null,
                jAccy: null,
                jMax: null,
                gamma: null,
                biasx: null,
                biasy: null,
                stepped: null,
                wake_connected: function() {
                    null != this.b1 && this.b1.isDynamic() && this.b1.wake();
                    null != this.b2 && this.b2.isDynamic() && this.b2.wake()
                },
                forest: function() {
                    if (this.b1.isDynamic()) {
                        if (this.b1.component == this.b1.component.parent) var a =
                            this.b1.component;
                        else {
                            a = this.b1.component;
                            for (var b = null; a != a.parent;) {
                                var c = a.parent;
                                a.parent = b;
                                b = a;
                                a = c
                            }
                            for (; null != b;) c = b.parent, b.parent = a, b = c
                        }
                        if (this.component == this.component.parent) b = this.component;
                        else {
                            b = this.component;
                            for (c = null; b != b.parent;) {
                                var d = b.parent;
                                b.parent = c;
                                c = b;
                                b = d
                            }
                            for (; null != c;) d = c.parent, c.parent = b, c = d
                        }
                        a != b && (a.rank < b.rank ? a.parent = b : a.rank > b.rank ? b.parent = a : (b.parent = a, a.rank++))
                    }
                    if (this.b2.isDynamic()) {
                        if (this.b2.component == this.b2.component.parent) a = this.b2.component;
                        else {
                            a =
                                this.b2.component;
                            for (b = null; a != a.parent;) c = a.parent, a.parent = b, b = a, a = c;
                            for (; null != b;) c = b.parent, b.parent = a, b = c
                        }
                        if (this.component == this.component.parent) b = this.component;
                        else {
                            b = this.component;
                            for (c = null; b != b.parent;) d = b.parent, b.parent = c, c = b, b = d;
                            for (; null != c;) d = c.parent, c.parent = b, c = d
                        }
                        a != b && (a.rank < b.rank ? a.parent = b : a.rank > b.rank ? b.parent = a : (b.parent = a, a.rank++))
                    }
                },
                pair_exists: function(a, b) {
                    return this.b1.id != a || this.b2.id != b ? this.b1.id == b ? this.b2.id == a : !1 : !0
                },
                clearcache: function() {
                    this.jAccy = this.jAccx =
                        0;
                    this.pre_dt = -1
                },
                preStep: function(a) {
                    -1 == this.pre_dt && (this.pre_dt = a);
                    var b = a / this.pre_dt;
                    this.pre_dt = a;
                    this.stepped = !0;
                    this.a1relx = this.b1.axisy * this.a1localx - this.b1.axisx * this.a1localy;
                    this.a1rely = this.a1localx * this.b1.axisx + this.a1localy * this.b1.axisy;
                    this.a2relx = this.b2.axisy * this.a2localx - this.b2.axisx * this.a2localy;
                    this.a2rely = this.a2localx * this.b2.axisx + this.a2localy * this.b2.axisy;
                    var c = this.b1.smass + this.b2.smass;
                    this.kMassa = c;
                    this.kMassb = 0;
                    this.kMassc = c;
                    if (0 != this.b1.sinertia) {
                        c = this.a1relx *
                            this.b1.sinertia;
                        var d = this.a1rely * this.b1.sinertia;
                        this.kMassa += d * this.a1rely;
                        this.kMassb += -d * this.a1relx;
                        this.kMassc += c * this.a1relx
                    }
                    0 != this.b2.sinertia && (c = this.a2relx * this.b2.sinertia, d = this.a2rely * this.b2.sinertia, this.kMassa += d * this.a2rely, this.kMassb += -d * this.a2relx, this.kMassc += c * this.a2relx);
                    c = this.kMassa * this.kMassc - this.kMassb * this.kMassb;
                    c != c ? (this.kMassa = this.kMassb = this.kMassc = 0, c = 3) : 0 == c ? (c = 0, 0 != this.kMassa ? this.kMassa = 1 / this.kMassa : (this.kMassa = 0, c |= 1), 0 != this.kMassc ? this.kMassc = 1 /
                        this.kMassc : (this.kMassc = 0, c |= 2), this.kMassb = 0) : (c = 1 / c, d = this.kMassc * c, this.kMassc = this.kMassa * c, this.kMassa = d, this.kMassb *= -c, c = 0);
                    0 != (c & 1) && (this.jAccx = 0);
                    0 != (c & 2) && (this.jAccy = 0);
                    if (this.stiff) this.gamma = this.biasy = this.biasx = 0;
                    else {
                        d = 2 * Math.PI * this.frequency;
                        this.gamma = 1 / (a * d * (2 * this.damping + d * a));
                        c = 1 / (1 + this.gamma);
                        d = a * d * d * this.gamma;
                        this.gamma *= c;
                        this.kMassa *= c;
                        this.kMassb *= c;
                        this.kMassc *= c;
                        this.biasx = this.b2.posx + this.a2relx - (this.b1.posx + this.a1relx);
                        this.biasy = this.b2.posy + this.a2rely - (this.b1.posy +
                            this.a1rely);
                        if (this.breakUnderError && this.biasx * this.biasx + this.biasy * this.biasy > this.maxError * this.maxError) return !0;
                        c = -d;
                        this.biasx *= c;
                        this.biasy *= c;
                        c = this.maxError;
                        d = this.biasx * this.biasx + this.biasy * this.biasy;
                        d > c * c && (c *= Xd.invsqrt(d), this.biasx *= c, this.biasy *= c)
                    }
                    this.jAccx *= b;
                    this.jAccy *= b;
                    this.jMax = this.maxForce * a;
                    return !1
                },
                warmStart: function() {
                    var a = this.b1.imass;
                    this.b1.velx -= this.jAccx * a;
                    this.b1.vely -= this.jAccy * a;
                    a = this.b2.imass;
                    this.b2.velx += this.jAccx * a;
                    this.b2.vely += this.jAccy * a;
                    this.b1.angvel -=
                        (this.jAccy * this.a1relx - this.jAccx * this.a1rely) * this.b1.iinertia;
                    this.b2.angvel += (this.jAccy * this.a2relx - this.jAccx * this.a2rely) * this.b2.iinertia
                },
                applyImpulseVel: function() {
                    var a = this.b2.velx + this.b2.kinvelx - this.a2rely * (this.b2.angvel + this.b2.kinangvel) - (this.b1.velx + this.b1.kinvelx - this.a1rely * (this.b1.angvel + this.b1.kinangvel));
                    var b = this.b2.vely + this.b2.kinvely + this.a2relx * (this.b2.angvel + this.b2.kinangvel) - (this.b1.vely + this.b1.kinvely + this.a1relx * (this.b1.angvel + this.b1.kinangvel));
                    a = this.biasx -
                        a;
                    b = this.biasy - b;
                    var c = this.kMassa * a + this.kMassb * b;
                    b = this.kMassb * a + this.kMassc * b;
                    var d = this.gamma;
                    a = c - this.jAccx * d;
                    b -= this.jAccy * d;
                    c = this.jAccx;
                    d = this.jAccy;
                    this.jAccx += 1 * a;
                    this.jAccy += 1 * b;
                    if (this.breakUnderForce) {
                        if (this.jAccx * this.jAccx + this.jAccy * this.jAccy > this.jMax * this.jMax) return !0
                    } else this.stiff || (a = this.jMax, b = this.jAccx * this.jAccx + this.jAccy * this.jAccy, b > a * a && (a *= Xd.invsqrt(b), this.jAccx *= a, this.jAccy *= a));
                    a = this.jAccx - c;
                    b = this.jAccy - d;
                    c = this.b1.imass;
                    this.b1.velx -= a * c;
                    this.b1.vely -= b *
                        c;
                    c = this.b2.imass;
                    this.b2.velx += a * c;
                    this.b2.vely += b * c;
                    this.b1.angvel -= (b * this.a1relx - a * this.a1rely) * this.b1.iinertia;
                    this.b2.angvel += (b * this.a2relx - a * this.a2rely) * this.b2.iinertia;
                    return !1
                },
                applyImpulsePos: function() {
                    var a = this.b1.axisy * this.a1localx - this.b1.axisx * this.a1localy;
                    var b = this.a1localx * this.b1.axisx + this.a1localy * this.b1.axisy;
                    var c = this.b2.axisy * this.a2localx - this.b2.axisx * this.a2localy;
                    var d = this.a2localx * this.b2.axisx + this.a2localy * this.b2.axisy;
                    var e = this.b2.posx + c - (this.b1.posx + a);
                    var f = this.b2.posy + d - (this.b1.posy + b);
                    if (this.breakUnderError && e * e + f * f > this.maxError * this.maxError) return !0;
                    if (e * e + f * f < K.constraintLinearSlop * K.constraintLinearSlop) return !1;
                    e *= .5;
                    f *= .5;
                    if (6 < e * e + f * f) {
                        var h = this.b1.smass + this.b2.smass;
                        h > K.epsilon && (h = .75 / h, e = -e * h, f = -f * h, h = e * e + f * f, 400 < h && (h = 20 * Xd.invsqrt(h), e *= h, f *= h), h = this.b1.imass, this.b1.posx -= e * h, this.b1.posy -= f * h, h = this.b2.imass, this.b2.posx += e * h, this.b2.posy += f * h, e = this.b2.posx + c - (this.b1.posx + a), f = this.b2.posy + d - (this.b1.posy + b), e *= .5, f *= .5)
                    }
                    var k;
                    h = k = this.b1.smass + this.b2.smass;
                    var m = 0;
                    if (0 != this.b1.sinertia) {
                        var g = a * this.b1.sinertia,
                            l = b * this.b1.sinertia;
                        h += l * b;
                        m += -l * a;
                        k += g * a
                    }
                    0 != this.b2.sinertia && (g = c * this.b2.sinertia, l = d * this.b2.sinertia, h += l * d, m += -l * c, k += g * c);
                    e = -e;
                    f = -f;
                    g = e * e + f * f;
                    36 < g && (g = 6 * Xd.invsqrt(g), e *= g, f *= g);
                    g = h * k - m * m;
                    g != g ? e = f = 0 : 0 == g ? (e = 0 != h ? e / h : 0, f = 0 != k ? f / k : 0) : (g = 1 / g, k = g * (k * e - m * f), f = g * (h * f - m * e), e = k);
                    h = this.b1.imass;
                    this.b1.posx -= e * h;
                    this.b1.posy -= f * h;
                    h = this.b2.imass;
                    this.b2.posx += e * h;
                    this.b2.posy += f * h;
                    this.b1.delta_rot(-(f * a - e * b) *
                        this.b1.iinertia);
                    this.b2.delta_rot((f * c - e * d) * this.b2.iinertia);
                    return !1
                },
                __class__: kr
            });
            var Wb = function() {
                this.colarb = this.fluidarb = this.sensorarb = null;
                this.type = 0;
                this.b1 = this.b2 = this.ws1 = this.ws2 = this.pair = null;
                this.invalidated = !1;
                this.immState = 0;
                this.intchange = this.presentable = this.continuous = this.fresh = !1;
                this.present = 0;
                this.active = this.cleared = this.sleeping = !1;
                this.id = this.di = this.stamp = this.up_stamp = this.sleep_stamp = this.endGenerated = 0;
                this.outer = null
            };
            g["zpp_nape.dynamics.ZPP_Arbiter"] = Wb;
            Wb.__name__ = ["zpp_nape", "dynamics", "ZPP_Arbiter"];
            Wb.prototype = {
                outer: null,
                wrapper: function() {
                    null == this.outer && (Wb.internal = !0, this.type == Wb.COL ? (this.colarb.outer_zn = new lr, this.outer = this.colarb.outer_zn) : this.type == Wb.FLUID ? (this.fluidarb.outer_zn = new mr, this.outer = this.fluidarb.outer_zn) : this.outer = new sk, this.outer.zpp_inner = this, Wb.internal = !1);
                    return this.outer
                },
                id: null,
                di: null,
                stamp: null,
                up_stamp: null,
                sleep_stamp: null,
                endGenerated: null,
                active: null,
                cleared: null,
                sleeping: null,
                present: null,
                intchange: null,
                presentable: null,
                continuous: null,
                fresh: null,
                immState: null,
                acting: function() {
                    return this.active ? 0 != (this.immState & 1) : !1
                },
                invalidated: null,
                b1: null,
                b2: null,
                ws1: null,
                ws2: null,
                pair: null,
                type: null,
                colarb: null,
                fluidarb: null,
                sensorarb: null,
                lazyRetire: function(a, b) {
                    this.cleared = !0;
                    null != b && this.b2 != b || this.b1.arbiters.inlined_remove(this);
                    null != b && this.b1 != b || this.b2.arbiters.inlined_remove(this);
                    null != this.pair && (this.pair = this.pair.arb = null);
                    this.active = !1;
                    a.f_arbiters.modified = !0
                },
                sup_assign: function(a,
                    b, c, d) {
                    this.b1 = a.body;
                    this.ws1 = a;
                    this.b2 = b.body;
                    this.ws2 = b;
                    this.id = c;
                    this.di = d;
                    this.b1.arbiters.inlined_add(this);
                    this.b2.arbiters.inlined_add(this);
                    this.active = !0;
                    this.present = 0;
                    this.presentable = this.fresh = this.sleeping = this.cleared = !1
                },
                sup_retire: function() {
                    this.cleared || (this.b1.arbiters.inlined_remove(this), this.b2.arbiters.inlined_remove(this), null != this.pair && (this.pair = this.pair.arb = null));
                    this.b1 = this.b2 = null;
                    this.intchange = this.active = !1
                },
                __class__: Wb
            };
            var df = function() {
                this.next = null;
                Wb.call(this);
                this.type = Wb.SENSOR;
                this.sensorarb = this
            };
            g["zpp_nape.dynamics.ZPP_SensorArbiter"] = df;
            df.__name__ = ["zpp_nape", "dynamics", "ZPP_SensorArbiter"];
            df.__super__ = Wb;
            df.prototype = p(Wb.prototype, {
                next: null,
                alloc: function() {},
                free: function() {},
                assign: function(a, b, c, d) {
                    this.sup_assign(a, b, c, d)
                },
                retire: function() {
                    this.sup_retire();
                    this.free();
                    this.next = df.zpp_pool;
                    df.zpp_pool = this
                },
                __class__: df
            });
            var Rf = function() {
                this.wMass = this.adamp = this.agamma = this.vMassa = this.vMassb = this.vMassc = this.dampx = this.dampy = this.lgamma =
                    this.nx = this.ny = this.buoyx = this.buoyy = this.pre_dt = 0;
                this.nodrag = !1;
                this.centroidx = this.centroidy = this.overlap = this.r1x = this.r1y = this.r2x = this.r2y = 0;
                this.outer_zn = this.next = null;
                Wb.call(this);
                this.type = Wb.FLUID;
                this.fluidarb = this;
                this.buoyy = this.buoyx = 0;
                this.pre_dt = -1
            };
            g["zpp_nape.dynamics.ZPP_FluidArbiter"] = Rf;
            Rf.__name__ = ["zpp_nape", "dynamics", "ZPP_FluidArbiter"];
            Rf.__super__ = Wb;
            Rf.prototype = p(Wb.prototype, {
                outer_zn: null,
                next: null,
                alloc: function() {},
                free: function() {},
                centroidx: null,
                centroidy: null,
                overlap: null,
                r1x: null,
                r1y: null,
                r2x: null,
                r2y: null,
                nodrag: null,
                wMass: null,
                adamp: null,
                agamma: null,
                vMassa: null,
                vMassb: null,
                vMassc: null,
                dampx: null,
                dampy: null,
                lgamma: null,
                nx: null,
                ny: null,
                buoyx: null,
                buoyy: null,
                assign: function(a, b, c, d) {
                    this.sup_assign(a, b, c, d);
                    this.nx = 0;
                    this.ny = 1;
                    this.adamp = this.dampy = this.dampx = 0
                },
                retire: function() {
                    this.sup_retire();
                    this.free();
                    this.next = Rf.zpp_pool;
                    Rf.zpp_pool = this;
                    this.pre_dt = -1
                },
                inject: function(a, b, c) {
                    this.overlap = a;
                    this.centroidx = b;
                    this.centroidy = c
                },
                pre_dt: null,
                preStep: function(a,
                    b) {
                    -1 == this.pre_dt && (this.pre_dt = b);
                    var c = b / this.pre_dt;
                    this.pre_dt = b;
                    this.r1x = this.centroidx - this.b1.posx;
                    this.r1y = this.centroidy - this.b1.posy;
                    this.r2x = this.centroidx - this.b2.posx;
                    this.r2y = this.centroidy - this.b2.posy;
                    if (this.ws1.fluidEnabled && null != this.ws1.fluidProperties.wrap_gravity) {
                        var d = this.ws1.fluidProperties.gravityx;
                        var e = this.ws1.fluidProperties.gravityy
                    } else d = a.gravityx, e = a.gravityy;
                    if (this.ws2.fluidEnabled && null != this.ws2.fluidProperties.wrap_gravity) {
                        var f = this.ws2.fluidProperties.gravityx;
                        var h = this.ws2.fluidProperties.gravityy
                    } else f = a.gravityx, h = a.gravityy;
                    var k = a = 0;
                    if (this.ws1.fluidEnabled && this.ws2.fluidEnabled) {
                        var m = this.overlap * this.ws1.fluidProperties.density,
                            g = this.overlap * this.ws2.fluidProperties.density;
                        m > g ? (f = m + g, a -= d * f, k -= e * f) : m < g ? (e = m + g, a += f * e, k += h * e) : (d = .5 * (d + f), e = .5 * (e + h), this.ws1.worldCOMx * d + this.ws1.worldCOMy * e > this.ws2.worldCOMx * d + this.ws2.worldCOMy * e ? (f = m + g, a -= d * f, k -= e * f) : (f = m + g, a += d * f, k += e * f))
                    } else this.ws1.fluidEnabled ? (f = this.overlap * this.ws1.fluidProperties.density,
                        a -= d * f, k -= e * f) : this.ws2.fluidEnabled && (e = this.overlap * this.ws2.fluidProperties.density, a += f * e, k += h * e);
                    a *= b;
                    k *= b;
                    this.buoyx = a;
                    this.buoyy = k;
                    this.b1.isDynamic() && (e = this.b1.imass, this.b1.velx -= a * e, this.b1.vely -= k * e, this.b1.angvel -= (k * this.r1x - a * this.r1y) * this.b1.iinertia);
                    this.b2.isDynamic() && (e = this.b2.imass, this.b2.velx += a * e, this.b2.vely += k * e, this.b2.angvel += (k * this.r2x - a * this.r2y) * this.b2.iinertia);
                    if (this.ws1.fluidEnabled && 0 != this.ws1.fluidProperties.viscosity || this.ws2.fluidEnabled && 0 != this.ws2.fluidProperties.viscosity) {
                        this.nodrag = !1;
                        a = 0;
                        this.ws1.fluidEnabled && (this.ws2.validate_angDrag(), a += this.ws1.fluidProperties.viscosity * this.ws2.angDrag * this.overlap / this.ws2.area);
                        this.ws2.fluidEnabled && (this.ws1.validate_angDrag(), a += this.ws2.fluidProperties.viscosity * this.ws1.angDrag * this.overlap / this.ws1.area);
                        0 != a ? (k = this.b1.sinertia + this.b2.sinertia, this.wMass = 0 != k ? 1 / k : 0, a *= 8E-4 * Math.PI, this.agamma = 1 / (b * a * (2 + a * b)), a = 1 / (1 + this.agamma), this.agamma *= a, this.wMass *= a) : this.agamma = this.wMass = 0;
                        a = this.b2.velx + this.b2.kinvelx - this.r2y * (this.b2.angvel +
                            this.b2.kinangvel) - (this.b1.velx + this.b1.kinvelx - this.r1y * (this.b2.angvel + this.b2.kinangvel));
                        k = this.b2.vely + this.b2.kinvely + this.r2x * (this.b2.angvel + this.b2.kinangvel) - (this.b1.vely + this.b1.kinvely + this.r1x * (this.b1.angvel + this.b1.kinangvel));
                        a * a + k * k < K.epsilon * K.epsilon || (e = Xd.invsqrt(a * a + k * k), this.nx = a * e, this.ny = k * e);
                        a = 0;
                        if (this.ws1.fluidEnabled)
                            if (k = -this.ws1.fluidProperties.viscosity * this.overlap / this.ws2.area, 0 == this.ws2.type) a -= k * this.ws2.circle.radius * K.fluidLinearDrag / (2 * this.ws2.circle.radius *
                                Math.PI);
                            else {
                                d = e = 0;
                                for (f = this.ws2.polygon.edges.begin(); null != f;) h = f.elem(), e += h.length, h = k * h.length * (h.gnormx * this.nx + h.gnormy * this.ny), 0 < h && (h *= -K.fluidVacuumDrag), d -= .5 * h * K.fluidLinearDrag, f = f.next;
                                a += d / e
                            } if (this.ws2.fluidEnabled)
                            if (k = -this.ws2.fluidProperties.viscosity * this.overlap / this.ws1.area, 0 == this.ws1.type) a -= k * this.ws1.circle.radius * K.fluidLinearDrag / (2 * this.ws1.circle.radius * Math.PI);
                            else {
                                d = e = 0;
                                for (f = this.ws1.polygon.edges.begin(); null != f;) h = f.elem(), e += h.length, h = k * h.length * (h.gnormx *
                                    this.nx + h.gnormy * this.ny), 0 < h && (h *= -K.fluidVacuumDrag), d -= .5 * h * K.fluidLinearDrag, f = f.next;
                                a += d / e
                            } 0 != a ? (k = d = this.b1.smass + this.b2.smass, e = 0, 0 != this.b1.sinertia && (f = this.r1x * this.b1.sinertia, h = this.r1y * this.b1.sinertia, k += h * this.r1y, e += -h * this.r1x, d += f * this.r1x), 0 != this.b2.sinertia && (f = this.r2x * this.b2.sinertia, h = this.r2y * this.b2.sinertia, k += h * this.r2y, e += -h * this.r2x, d += f * this.r2x), f = k * d - e * e, f != f ? k = e = d = 0 : 0 == f ? (k = 0 != k ? 1 / k : 0, d = 0 != d ? 1 / d : 0, e = 0) : (f = 1 / f, h = d * f, d = k * f, k = h, e *= -f), this.vMassa = k, this.vMassb = e,
                            this.vMassc = d, a *= 2 * Math.PI, this.lgamma = 1 / (b * a * (2 + a * b)), b = 1 / (1 + this.lgamma), this.lgamma *= b, this.vMassa *= b, this.vMassb *= b, this.vMassc *= b) : this.lgamma = this.vMassc = this.vMassb = this.vMassa = 0
                    } else this.nodrag = !0, this.adamp = this.dampy = this.dampx = 0;
                    this.dampx *= c;
                    this.dampy *= c;
                    this.adamp *= c
                },
                warmStart: function() {
                    var a = this.b1.imass;
                    this.b1.velx -= this.dampx * a;
                    this.b1.vely -= this.dampy * a;
                    a = this.b2.imass;
                    this.b2.velx += this.dampx * a;
                    this.b2.vely += this.dampy * a;
                    this.b1.angvel -= this.b1.iinertia * (this.dampy * this.r1x -
                        this.dampx * this.r1y);
                    this.b2.angvel += this.b2.iinertia * (this.dampy * this.r2x - this.dampx * this.r2y);
                    this.b1.angvel -= this.adamp * this.b1.iinertia;
                    this.b2.angvel += this.adamp * this.b2.iinertia
                },
                applyImpulseVel: function() {
                    if (!this.nodrag) {
                        var a = this.b1.angvel + this.b1.kinangvel,
                            b = this.b2.angvel + this.b2.kinangvel,
                            c = this.b1.velx + this.b1.kinvelx - this.r1y * a - (this.b2.velx + this.b2.kinvelx - this.r2y * b),
                            d = this.b1.vely + this.b1.kinvely + this.r1x * a - (this.b2.vely + this.b2.kinvely + this.r2x * b),
                            e = this.vMassa * c + this.vMassb * d;
                        d = this.vMassb * c + this.vMassc * d;
                        var f = this.lgamma;
                        c = e - this.dampx * f;
                        d -= this.dampy * f;
                        this.dampx += 1 * c;
                        this.dampy += 1 * d;
                        e = this.b1.imass;
                        this.b1.velx -= c * e;
                        this.b1.vely -= d * e;
                        e = this.b2.imass;
                        this.b2.velx += c * e;
                        this.b2.vely += d * e;
                        this.b1.angvel -= this.b1.iinertia * (d * this.r1x - c * this.r1y);
                        this.b2.angvel += this.b2.iinertia * (d * this.r2x - c * this.r2y);
                        a = (a - b) * this.wMass - this.adamp * this.agamma;
                        this.adamp += a;
                        this.b1.angvel -= a * this.b1.iinertia;
                        this.b2.angvel += a * this.b2.iinertia
                    }
                },
                __class__: Rf
            });
            var eg = function() {
                this.pre_dt =
                    0;
                this.stat = !1;
                this.next = null;
                this.hc2 = this.hpc2 = !1;
                this.c1 = this.oc1 = this.c2 = this.oc2 = null;
                this.__ref_vertex = 0;
                this.__ref_edge1 = this.__ref_edge2 = null;
                this.biasCoef = 0;
                this.rev = !1;
                this.nx = this.ny = this.kMassa = this.kMassb = this.kMassc = this.Ka = this.Kb = this.Kc = this.rMass = this.jrAcc = this.rn1a = this.rt1a = this.rn1b = this.rt1b = this.rn2a = this.rt2a = this.rn2b = this.rt2b = this.k1x = this.k1y = this.k2x = this.k2y = this.surfacex = this.surfacey = this.lnormx = this.lnormy = this.lproj = this.radius = 0;
                this.s1 = this.s2 = this.contacts = this.innards =
                    null;
                this.userdef_dyn_fric = this.userdef_stat_fric = this.userdef_restitution = this.userdef_rfric = !1;
                this.dyn_fric = this.stat_fric = this.restitution = this.rfric = 0;
                this.outer_zn = null;
                Wb.call(this);
                this.pre_dt = -1;
                this.contacts = new ef;
                this.innards = new $r;
                this.type = Wb.COL;
                this.colarb = this
            };
            g["zpp_nape.dynamics.ZPP_ColArbiter"] = eg;
            eg.__name__ = ["zpp_nape", "dynamics", "ZPP_ColArbiter"];
            eg.__super__ = Wb;
            eg.prototype = p(Wb.prototype, {
                outer_zn: null,
                dyn_fric: null,
                stat_fric: null,
                restitution: null,
                rfric: null,
                userdef_dyn_fric: null,
                userdef_stat_fric: null,
                userdef_restitution: null,
                userdef_rfric: null,
                s1: null,
                s2: null,
                contacts: null,
                innards: null,
                nx: null,
                ny: null,
                kMassa: null,
                kMassb: null,
                kMassc: null,
                Ka: null,
                Kb: null,
                Kc: null,
                rMass: null,
                jrAcc: null,
                rn1a: null,
                rt1a: null,
                rn1b: null,
                rt1b: null,
                rn2a: null,
                rt2a: null,
                rn2b: null,
                rt2b: null,
                k1x: null,
                k1y: null,
                k2x: null,
                k2y: null,
                surfacex: null,
                surfacey: null,
                ptype: null,
                lnormx: null,
                lnormy: null,
                lproj: null,
                radius: null,
                rev: null,
                biasCoef: null,
                __ref_edge1: null,
                __ref_edge2: null,
                __ref_vertex: null,
                c1: null,
                oc1: null,
                c2: null,
                oc2: null,
                hc2: null,
                hpc2: null,
                next: null,
                alloc: function() {},
                free: function() {
                    this.userdef_rfric = this.userdef_restitution = this.userdef_stat_fric = this.userdef_dyn_fric = !1;
                    this.__ref_edge1 = this.__ref_edge2 = null
                },
                stat: null,
                injectContact: function(a, b, c, d, e, f, h) {
                    null == h && (h = !1);
                    for (var k = null, m = this.contacts.begin(); null != m;) {
                        var g = m.elem();
                        if (f == g.hash) {
                            k = g;
                            break
                        }
                        m = m.next
                    }
                    null == k ? (null == ef.zpp_pool ? k = new ef : (k = ef.zpp_pool, ef.zpp_pool = k.next, k.next = null), k.alloc(), m = k.inner, m.jnAcc = m.jtAcc = 0, k.hash =
                        f, k.fresh = !0, k.arbiter = this, this.jrAcc = 0, this.contacts.inlined_add(k), this.innards.add(m)) : k.fresh = !1;
                    k.px = a;
                    k.py = b;
                    this.nx = c;
                    this.ny = d;
                    k.dist = e;
                    k.stamp = this.stamp;
                    k.posOnly = h;
                    return k
                },
                assign: function(a, b, c, d) {
                    this.sup_assign(a, b, c, d);
                    this.s1 = a;
                    this.s2 = b;
                    this.calcProperties()
                },
                calcProperties: function() {
                    this.userdef_restitution || (this.s1.material.elasticity <= Nb.NEGINF() || this.s2.material.elasticity <= Nb.NEGINF() ? this.restitution = 0 : this.s1.material.elasticity >= Nb.POSINF() || this.s2.material.elasticity >=
                        Nb.POSINF() ? this.restitution = 1 : this.restitution = (this.s1.material.elasticity + this.s2.material.elasticity) / 2, 0 > this.restitution && (this.restitution = 0), 1 < this.restitution && (this.restitution = 1));
                    this.userdef_dyn_fric || (this.dyn_fric = Xd.sqrt(this.s1.material.dynamicFriction * this.s2.material.dynamicFriction));
                    this.userdef_stat_fric || (this.stat_fric = Xd.sqrt(this.s1.material.staticFriction * this.s2.material.staticFriction));
                    this.userdef_rfric || (this.rfric = Xd.sqrt(this.s1.material.rollingFriction * this.s2.material.rollingFriction))
                },
                validate_props: function() {
                    this.invalidated && (this.invalidated = !1, this.calcProperties())
                },
                retire: function() {
                    for (this.sup_retire(); !this.contacts.empty();) {
                        var a = this.contacts.inlined_pop_unsafe();
                        a.free();
                        a.next = ef.zpp_pool;
                        ef.zpp_pool = a;
                        this.innards.inlined_pop()
                    }
                    this.free();
                    this.next = eg.zpp_pool;
                    eg.zpp_pool = this;
                    this.pre_dt = -1
                },
                cleanupContacts: function() {
                    var a = !0,
                        b = null,
                        c = null,
                        d = this.innards.begin();
                    this.hc2 = !1;
                    for (var e = this.contacts.begin(); null != e;) {
                        var f = e.elem();
                        f.stamp + K.arbiterExpirationDelay <
                            this.stamp ? (e = this.contacts.inlined_erase(b), d = this.innards.inlined_erase(c), f.free(), f.next = ef.zpp_pool, ef.zpp_pool = f) : (b = f.inner, c = f.active, f.active = f.stamp == this.stamp, f.active && (a ? (a = !1, this.c1 = b, this.oc1 = f) : (this.hc2 = !0, this.c2 = b, this.oc2 = f)), c != f.active && (this.contacts.modified = !0), b = e, c = d, d = d.next, e = e.next)
                    }
                    this.hc2 ? (this.hpc2 = !0, this.oc1.posOnly ? (d = this.c1, this.c1 = this.c2, this.c2 = d, d = this.oc1, this.oc1 = this.oc2, this.oc2 = d, this.hc2 = !1) : this.oc2.posOnly && (this.hc2 = !1), this.oc1.posOnly && (a = !0)) :
                        this.hpc2 = !1;
                    return a
                },
                pre_dt: null,
                preStep: function(a) {
                    this.validate_props(); - 1 == this.pre_dt && (this.pre_dt = a);
                    var b = a / this.pre_dt;
                    this.pre_dt = a;
                    var c = this.b1.smass + this.b2.smass;
                    this.hc2 = !1;
                    a = !0;
                    this.biasCoef = this.b1.isDynamic() && this.b2.isDynamic() ? this.continuous ? K.contactContinuousBiasCoef : K.contactBiasCoef : this.continuous ? K.contactContinuousStaticBiasCoef : K.contactStaticBiasCoef;
                    this.continuous = !1;
                    for (var d = null, e = null, f = this.innards.begin(), h = this.contacts.begin(); null != h;) {
                        var k = h.elem();
                        if (k.stamp +
                            K.arbiterExpirationDelay < this.stamp) h = this.contacts.inlined_erase(d), f = this.innards.inlined_erase(e), k.free(), k.next = ef.zpp_pool, ef.zpp_pool = k;
                        else {
                            d = k.inner;
                            e = k.active;
                            k.active = k.stamp == this.stamp;
                            if (k.active) {
                                a ? (a = !1, this.c1 = d, this.oc1 = k) : (this.hc2 = !0, this.c2 = d, this.oc2 = k);
                                d.r2x = k.px - this.b2.posx;
                                d.r2y = k.py - this.b2.posy;
                                d.r1x = k.px - this.b1.posx;
                                d.r1y = k.py - this.b1.posy;
                                var m = c + this.b2.sinertia * Xd.sqr(d.r2x * this.nx + d.r2y * this.ny);
                                m += this.b1.sinertia * Xd.sqr(d.r1x * this.nx + d.r1y * this.ny);
                                d.tMass = m < K.epsilon *
                                    K.epsilon ? 0 : 1 / m;
                                m = c + this.b2.sinertia * Xd.sqr(this.ny * d.r2x - this.nx * d.r2y);
                                m += this.b1.sinertia * Xd.sqr(this.ny * d.r1x - this.nx * d.r1y);
                                d.nMass = m < K.epsilon * K.epsilon ? 0 : 1 / m;
                                var g = this.b2.angvel + this.b2.kinangvel;
                                m = this.b2.velx + this.b2.kinvelx - d.r2y * g;
                                var l = this.b2.vely + this.b2.kinvely + d.r2x * g;
                                g = this.b1.angvel + this.b1.kinangvel;
                                m -= this.b1.velx + this.b1.kinvelx - d.r1y * g;
                                l -= this.b1.vely + this.b1.kinvely + d.r1x * g;
                                g = this.nx * m + this.ny * l;
                                k.elasticity = this.restitution;
                                d.bounce = g * k.elasticity;
                                d.bounce > -K.elasticThreshold &&
                                    (d.bounce = 0);
                                g = l * this.nx - m * this.ny;
                                m = K.staticFrictionThreshold;
                                d.friction = g * g > m * m ? this.dyn_fric : this.stat_fric;
                                d.jnAcc *= b;
                                d.jtAcc *= b
                            }
                            e != k.active && (this.contacts.modified = !0);
                            d = h;
                            e = f;
                            f = f.next;
                            h = h.next
                        }
                    }
                    this.hc2 ? (this.hpc2 = !0, this.oc1.posOnly ? (f = this.c1, this.c1 = this.c2, this.c2 = f, f = this.oc1, this.oc1 = this.oc2, this.oc2 = f, this.hc2 = !1) : this.oc2.posOnly && (this.hc2 = !1), this.oc1.posOnly && (a = !0)) : this.hpc2 = !1;
                    this.jrAcc *= b;
                    a || (this.rn1a = this.ny * this.c1.r1x - this.nx * this.c1.r1y, this.rt1a = this.c1.r1x * this.nx + this.c1.r1y *
                        this.ny, this.rn1b = this.ny * this.c1.r2x - this.nx * this.c1.r2y, this.rt1b = this.c1.r2x * this.nx + this.c1.r2y * this.ny, this.k1x = this.b2.kinvelx - this.c1.r2y * this.b2.kinangvel - (this.b1.kinvelx - this.c1.r1y * this.b1.kinangvel), this.k1y = this.b2.kinvely + this.c1.r2x * this.b2.kinangvel - (this.b1.kinvely + this.c1.r1x * this.b1.kinangvel));
                    this.hc2 && (this.rn2a = this.ny * this.c2.r1x - this.nx * this.c2.r1y, this.rt2a = this.c2.r1x * this.nx + this.c2.r1y * this.ny, this.rn2b = this.ny * this.c2.r2x - this.nx * this.c2.r2y, this.rt2b = this.c2.r2x * this.nx +
                        this.c2.r2y * this.ny, this.k2x = this.b2.kinvelx - this.c2.r2y * this.b2.kinangvel - (this.b1.kinvelx - this.c2.r1y * this.b1.kinangvel), this.k2y = this.b2.kinvely + this.c2.r2x * this.b2.kinangvel - (this.b1.kinvely + this.c2.r1x * this.b1.kinangvel), this.kMassa = c + this.b1.sinertia * this.rn1a * this.rn1a + this.b2.sinertia * this.rn1b * this.rn1b, this.kMassb = c + this.b1.sinertia * this.rn1a * this.rn2a + this.b2.sinertia * this.rn1b * this.rn2b, this.kMassc = c + this.b1.sinertia * this.rn2a * this.rn2a + this.b2.sinertia * this.rn2b * this.rn2b, this.kMassa *
                        this.kMassa + 2 * this.kMassb * this.kMassb + this.kMassc * this.kMassc < K.illConditionedThreshold * (this.kMassa * this.kMassc - this.kMassb * this.kMassb) ? (this.Ka = this.kMassa, this.Kb = this.kMassb, this.Kc = this.kMassc, b = this.kMassa * this.kMassc - this.kMassb * this.kMassb, b != b ? this.kMassa = this.kMassb = this.kMassc = 0 : 0 == b ? (this.kMassa = 0 != this.kMassa ? 1 / this.kMassa : 0, this.kMassc = 0 != this.kMassc ? 1 / this.kMassc : 0, this.kMassb = 0) : (b = 1 / b, c = this.kMassc * b, this.kMassc = this.kMassa * b, this.kMassa = c, this.kMassb *= -b)) : (this.hc2 = !1, this.oc2.dist <
                            this.oc1.dist && (b = this.c1, this.c1 = this.c2, this.c2 = b), this.oc2.active = !1, this.contacts.modified = !0));
                    this.surfacex = this.b2.svelx;
                    this.surfacey = this.b2.svely;
                    this.surfacex += 1 * this.b1.svelx;
                    this.surfacey += 1 * this.b1.svely;
                    this.surfacex = -this.surfacex;
                    this.surfacey = -this.surfacey;
                    this.rMass = this.b1.sinertia + this.b2.sinertia;
                    0 != this.rMass && (this.rMass = 1 / this.rMass);
                    return a
                },
                warmStart: function() {
                    var a = this.nx * this.c1.jnAcc - this.ny * this.c1.jtAcc,
                        b = this.ny * this.c1.jnAcc + this.nx * this.c1.jtAcc,
                        c = this.b1.imass;
                    this.b1.velx -= a * c;
                    this.b1.vely -= b * c;
                    this.b1.angvel -= this.b1.iinertia * (b * this.c1.r1x - a * this.c1.r1y);
                    c = this.b2.imass;
                    this.b2.velx += a * c;
                    this.b2.vely += b * c;
                    this.b2.angvel += this.b2.iinertia * (b * this.c1.r2x - a * this.c1.r2y);
                    this.hc2 && (a = this.nx * this.c2.jnAcc - this.ny * this.c2.jtAcc, b = this.ny * this.c2.jnAcc + this.nx * this.c2.jtAcc, c = this.b1.imass, this.b1.velx -= a * c, this.b1.vely -= b * c, this.b1.angvel -= this.b1.iinertia * (b * this.c2.r1x - a * this.c2.r1y), c = this.b2.imass, this.b2.velx += a * c, this.b2.vely += b * c, this.b2.angvel += this.b2.iinertia *
                        (b * this.c2.r2x - a * this.c2.r2y));
                    this.b2.angvel += this.jrAcc * this.b2.iinertia;
                    this.b1.angvel -= this.jrAcc * this.b1.iinertia
                },
                applyImpulseVel: function() {
                    var a = this.k1x + this.b2.velx - this.c1.r2y * this.b2.angvel - (this.b1.velx - this.c1.r1y * this.b1.angvel);
                    var b = this.k1y + this.b2.vely + this.c1.r2x * this.b2.angvel - (this.b1.vely + this.c1.r1x * this.b1.angvel);
                    var c = (b * this.nx - a * this.ny + this.surfacex) * this.c1.tMass;
                    a = this.c1.friction * this.c1.jnAcc;
                    var d = this.c1.jtAcc;
                    var e = d - c;
                    e > a ? e = a : e < -a && (e = -a);
                    c = e - d;
                    this.c1.jtAcc =
                        e;
                    d = -this.ny * c;
                    var f = this.nx * c;
                    this.b2.velx += d * this.b2.imass;
                    this.b2.vely += f * this.b2.imass;
                    this.b1.velx -= d * this.b1.imass;
                    this.b1.vely -= f * this.b1.imass;
                    this.b2.angvel += this.rt1b * c * this.b2.iinertia;
                    this.b1.angvel -= this.rt1a * c * this.b1.iinertia;
                    this.hc2 ? (e = this.k2x + this.b2.velx - this.c2.r2y * this.b2.angvel - (this.b1.velx - this.c2.r1y * this.b1.angvel), f = this.k2y + this.b2.vely + this.c2.r2x * this.b2.angvel - (this.b1.vely + this.c2.r1x * this.b1.angvel), c = (f * this.nx - e * this.ny + this.surfacex) * this.c2.tMass, a = this.c2.friction *
                        this.c2.jnAcc, d = this.c2.jtAcc, e = d - c, e > a ? e = a : e < -a && (e = -a), c = e - d, this.c2.jtAcc = e, d = -this.ny * c, f = this.nx * c, this.b2.velx += d * this.b2.imass, this.b2.vely += f * this.b2.imass, this.b1.velx -= d * this.b1.imass, this.b1.vely -= f * this.b1.imass, this.b2.angvel += this.rt2b * c * this.b2.iinertia, this.b1.angvel -= this.rt2a * c * this.b1.iinertia, a = this.k1x + this.b2.velx - this.c1.r2y * this.b2.angvel - (this.b1.velx - this.c1.r1y * this.b1.angvel), b = this.k1y + this.b2.vely + this.c1.r2x * this.b2.angvel - (this.b1.vely + this.c1.r1x * this.b1.angvel), e =
                        this.k2x + this.b2.velx - this.c2.r2y * this.b2.angvel - (this.b1.velx - this.c2.r1y * this.b1.angvel), f = this.k2y + this.b2.vely + this.c2.r2x * this.b2.angvel - (this.b1.vely + this.c2.r1x * this.b1.angvel), c = this.c1.jnAcc, d = this.c2.jnAcc, a = a * this.nx + b * this.ny + this.surfacey + this.c1.bounce - (this.Ka * c + this.Kb * d), e = e * this.nx + f * this.ny + this.surfacey + this.c2.bounce - (this.Kb * c + this.Kc * d), f = -(this.kMassa * a + this.kMassb * e), b = -(this.kMassb * a + this.kMassc * e), 0 <= f && 0 <= b ? (a = f - c, e = b - d, this.c1.jnAcc = f, this.c2.jnAcc = b) : (f = -this.c1.nMass *
                            a, 0 <= f && 0 <= this.Kb * f + e ? (a = f - c, e = -d, this.c1.jnAcc = f, this.c2.jnAcc = 0) : (b = -this.c2.nMass * e, 0 <= b && 0 <= this.Kb * b + a ? (a = -c, e = b - d, this.c1.jnAcc = 0, this.c2.jnAcc = b) : 0 <= a && 0 <= e ? (a = -c, e = -d, this.c1.jnAcc = this.c2.jnAcc = 0) : e = a = 0)), c = a + e, d = this.nx * c, f = this.ny * c, this.b2.velx += d * this.b2.imass, this.b2.vely += f * this.b2.imass, this.b1.velx -= d * this.b1.imass, this.b1.vely -= f * this.b1.imass, this.b2.angvel += (this.rn1b * a + this.rn2b * e) * this.b2.iinertia, this.b1.angvel -= (this.rn1a * a + this.rn2a * e) * this.b1.iinertia) : (0 != this.radius &&
                        (c = (this.b2.angvel - this.b1.angvel) * this.rMass, a = this.rfric * this.c1.jnAcc, d = this.jrAcc, this.jrAcc -= c, this.jrAcc > a ? this.jrAcc = a : this.jrAcc < -a && (this.jrAcc = -a), c = this.jrAcc - d, this.b2.angvel += c * this.b2.iinertia, this.b1.angvel -= c * this.b1.iinertia), a = this.k1x + this.b2.velx - this.c1.r2y * this.b2.angvel - (this.b1.velx - this.c1.r1y * this.b1.angvel), b = this.k1y + this.b2.vely + this.c1.r2x * this.b2.angvel - (this.b1.vely + this.c1.r1x * this.b1.angvel), c = (this.c1.bounce + (this.nx * a + this.ny * b) + this.surfacey) * this.c1.nMass, d = this.c1.jnAcc,
                        e = d - c, 0 > e && (e = 0), c = e - d, this.c1.jnAcc = e, d = this.nx * c, f = this.ny * c, this.b2.velx += d * this.b2.imass, this.b2.vely += f * this.b2.imass, this.b1.velx -= d * this.b1.imass, this.b1.vely -= f * this.b1.imass, this.b2.angvel += this.rn1b * c * this.b2.iinertia, this.b1.angvel -= this.rn1a * c * this.b1.iinertia)
                },
                applyImpulsePos: function() {
                    if (2 == this.ptype) {
                        var a = this.c1;
                        var b = this.b2.axisy * a.lr2x - this.b2.axisx * a.lr2y;
                        var c = a.lr2x * this.b2.axisx + a.lr2y * this.b2.axisy;
                        b += 1 * this.b2.posx;
                        c += 1 * this.b2.posy;
                        var d = this.b1.axisy * a.lr1x - this.b1.axisx *
                            a.lr1y;
                        var e = a.lr1x * this.b1.axisx + a.lr1y * this.b1.axisy;
                        d += 1 * this.b1.posx;
                        e += 1 * this.b1.posy;
                        var f = b - d;
                        a = c - e;
                        var h = Xd.sqrt(f * f + a * a),
                            k = this.radius - K.collisionSlop,
                            m = h - k;
                        0 > f * this.nx + a * this.ny && (f = -f, a = -a, m -= this.radius);
                        0 > m && (h < K.epsilon ? 0 != this.b1.smass ? this.b1.posx += 10 * K.epsilon : this.b2.posx += 10 * K.epsilon : (m = 1 / h, f *= m, a *= m, b = .5 * (d + b), c = .5 * (e + c), d = b - this.b1.posx, e = c - this.b1.posy, b -= this.b2.posx, c -= this.b2.posy, d = a * d - f * e, b = a * b - f * c, c = this.b2.smass + b * b * this.b2.sinertia + this.b1.smass + d * d * this.b1.sinertia,
                            0 != c && (h = -this.biasCoef * (h - k) / c, f *= h, a *= h, k = this.b1.imass, this.b1.posx -= f * k, this.b1.posy -= a * k, this.b1.delta_rot(-d * this.b1.iinertia * h), k = this.b2.imass, this.b2.posx += f * k, this.b2.posy += a * k, this.b2.delta_rot(b * this.b2.iinertia * h))))
                    } else {
                        var g = 0;
                        k = 0;
                        0 == this.ptype ? (f = this.b1.axisy * this.lnormx - this.b1.axisx * this.lnormy, a = this.lnormx * this.b1.axisx + this.lnormy * this.b1.axisy, d = this.lproj + (f * this.b1.posx + a * this.b1.posy), h = this.b2.axisy * this.c1.lr1x - this.b2.axisx * this.c1.lr1y, m = this.c1.lr1x * this.b2.axisx + this.c1.lr1y *
                            this.b2.axisy, h += 1 * this.b2.posx, m += 1 * this.b2.posy, this.hpc2 && (g = this.b2.axisy * this.c2.lr1x - this.b2.axisx * this.c2.lr1y, k = this.c2.lr1x * this.b2.axisx + this.c2.lr1y * this.b2.axisy, g += 1 * this.b2.posx, k += 1 * this.b2.posy)) : (f = this.b2.axisy * this.lnormx - this.b2.axisx * this.lnormy, a = this.lnormx * this.b2.axisx + this.lnormy * this.b2.axisy, d = this.lproj + (f * this.b2.posx + a * this.b2.posy), h = this.b1.axisy * this.c1.lr1x - this.b1.axisx * this.c1.lr1y, m = this.c1.lr1x * this.b1.axisx + this.c1.lr1y * this.b1.axisy, h += 1 * this.b1.posx, m += 1 *
                            this.b1.posy, this.hpc2 && (g = this.b1.axisy * this.c2.lr1x - this.b1.axisx * this.c2.lr1y, k = this.c2.lr1x * this.b1.axisx + this.c2.lr1y * this.b1.axisy, g += 1 * this.b1.posx, k += 1 * this.b1.posy));
                        b = h * f + m * a - d - this.radius;
                        b += K.collisionSlop;
                        c = 0;
                        this.hpc2 && (c = g * f + k * a - d - this.radius, c += K.collisionSlop);
                        if (0 > b || 0 > c)
                            if (this.rev && (f = -f, a = -a), d = h - this.b1.posx, e = m - this.b1.posy, h -= this.b2.posx, m -= this.b2.posy, this.hpc2) {
                                var l = g - this.b1.posx;
                                var n = k - this.b1.posy;
                                g -= this.b2.posx;
                                var p = k - this.b2.posy;
                                k = a * d - f * e;
                                h = a * h - f * m;
                                e = a * l - f * n;
                                d = a * g - f * p;
                                m = this.b1.smass + this.b2.smass;
                                this.kMassa = m + this.b1.sinertia * k * k + this.b2.sinertia * h * h;
                                this.kMassb = m + this.b1.sinertia * k * e + this.b2.sinertia * h * d;
                                this.kMassc = m + this.b1.sinertia * e * e + this.b2.sinertia * d * d;
                                n = this.kMassa;
                                m = this.kMassb;
                                l = this.kMassc;
                                g = b * this.biasCoef;
                                for (p = c * this.biasCoef;;) {
                                    b = g;
                                    c = p;
                                    b = -b;
                                    c = -c;
                                    var x = this.kMassa * this.kMassc - this.kMassb * this.kMassb;
                                    if (x != x) b = c = 0;
                                    else if (0 == x) b = 0 != this.kMassa ? b / this.kMassa : 0, c = 0 != this.kMassc ? c / this.kMassc : 0;
                                    else {
                                        x = 1 / x;
                                        var u = x * (this.kMassc * b - this.kMassb *
                                            c);
                                        c = x * (this.kMassa * c - this.kMassb * b);
                                        b = u
                                    }
                                    if (0 <= b && 0 <= c) {
                                        m = (b + c) * this.b1.imass;
                                        this.b1.posx -= f * m;
                                        this.b1.posy -= a * m;
                                        this.b1.delta_rot(-this.b1.iinertia * (k * b + e * c));
                                        k = (b + c) * this.b2.imass;
                                        this.b2.posx += f * k;
                                        this.b2.posy += a * k;
                                        this.b2.delta_rot(this.b2.iinertia * (h * b + d * c));
                                        break
                                    }
                                    b = -g / n;
                                    c = 0;
                                    n = m * b + p;
                                    if (0 <= b && 0 <= n) {
                                        m = (b + c) * this.b1.imass;
                                        this.b1.posx -= f * m;
                                        this.b1.posy -= a * m;
                                        this.b1.delta_rot(-this.b1.iinertia * (k * b + e * c));
                                        k = (b + c) * this.b2.imass;
                                        this.b2.posx += f * k;
                                        this.b2.posy += a * k;
                                        this.b2.delta_rot(this.b2.iinertia *
                                            (h * b + d * c));
                                        break
                                    }
                                    b = 0;
                                    c = -p / l;
                                    m = m * c + g;
                                    if (0 <= c && 0 <= m) {
                                        m = (b + c) * this.b1.imass;
                                        this.b1.posx -= f * m;
                                        this.b1.posy -= a * m;
                                        this.b1.delta_rot(-this.b1.iinertia * (k * b + e * c));
                                        k = (b + c) * this.b2.imass;
                                        this.b2.posx += f * k;
                                        this.b2.posy += a * k;
                                        this.b2.delta_rot(this.b2.iinertia * (h * b + d * c));
                                        break
                                    }
                                    break
                                }
                            } else k = a * d - f * e, h = a * h - f * m, c = this.b2.smass + h * h * this.b2.sinertia + this.b1.smass + k * k * this.b1.sinertia, 0 != c && (b = -this.biasCoef * b / c, f *= b, a *= b, c = this.b1.imass, this.b1.posx -= f * c, this.b1.posy -= a * c, this.b1.delta_rot(-k * this.b1.iinertia * b),
                                k = this.b2.imass, this.b2.posx += f * k, this.b2.posy += a * k, this.b2.delta_rot(h * this.b2.iinertia * b))
                    }
                },
                __class__: eg
            });
            var ef = function() {
                this.length = 0;
                this._inuse = this.modified = this.pushmod = !1;
                this.next = null;
                this.dist = this.elasticity = 0;
                this.fresh = !1;
                this.stamp = this.hash = 0;
                this.active = this.posOnly = !1;
                this.arbiter = this.inner = null;
                this.px = this.py = 0;
                this.outer = null;
                this.inner = new $r
            };
            g["zpp_nape.dynamics.ZPP_Contact"] = ef;
            ef.__name__ = ["zpp_nape", "dynamics", "ZPP_Contact"];
            ef.prototype = {
                outer: null,
                wrapper: function() {
                    null ==
                        this.outer && (ef.internal = !0, this.outer = new Nu, ef.internal = !1, this.outer.zpp_inner = this);
                    return this.outer
                },
                px: null,
                py: null,
                arbiter: null,
                inner: null,
                active: null,
                posOnly: null,
                stamp: null,
                hash: null,
                fresh: null,
                dist: null,
                elasticity: null,
                free: function() {
                    this.arbiter = null
                },
                alloc: function() {},
                next: null,
                elem: function() {
                    return this
                },
                begin: function() {
                    return this.next
                },
                _inuse: null,
                modified: null,
                pushmod: null,
                length: null,
                inlined_add: function(a) {
                    a._inuse = !0;
                    a.next = this.begin();
                    this.next = a;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                pop: function() {
                    this.inlined_pop()
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.next = a.next;
                    a.elem()._inuse = !1;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                inlined_pop_unsafe: function() {
                    var a = this.front();
                    this.pop();
                    return a
                },
                inlined_erase: function(a) {
                    var b;
                    if (null == a) {
                        var c = this.begin();
                        this.next = b = c.next;
                        this.empty() && (this.pushmod = !0)
                    } else c = a.next, b = c.next, a.next = b, null == b && (this.pushmod = !0);
                    c.elem()._inuse = !1;
                    this.modified = !0;
                    this.length--;
                    this.pushmod = !0;
                    return b
                },
                empty: function() {
                    return null == this.begin()
                },
                front: function() {
                    return this.begin().elem()
                },
                __class__: ef
            };
            var $r = function() {
                this.length = 0;
                this._inuse = this.modified = this.pushmod = !1;
                this.next = null;
                this.r1x = this.r1y = this.r2x = this.r2y = this.nMass = this.tMass = this.bounce = this.friction = this.jnAcc = this.jtAcc = this.lr1x = this.lr1y = this.lr2x = this.lr2y = 0
            };
            g["zpp_nape.dynamics.ZPP_IContact"] = $r;
            $r.__name__ = ["zpp_nape", "dynamics", "ZPP_IContact"];
            $r.prototype = {
                r1x: null,
                r1y: null,
                r2x: null,
                r2y: null,
                nMass: null,
                tMass: null,
                bounce: null,
                friction: null,
                jnAcc: null,
                jtAcc: null,
                lr1x: null,
                lr1y: null,
                lr2x: null,
                lr2y: null,
                next: null,
                elem: function() {
                    return this
                },
                begin: function() {
                    return this.next
                },
                _inuse: null,
                modified: null,
                pushmod: null,
                length: null,
                add: function(a) {
                    return this.inlined_add(a)
                },
                inlined_add: function(a) {
                    a._inuse = !0;
                    a.next = this.begin();
                    this.next = a;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.next = a.next;
                    a.elem()._inuse = !1;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                inlined_erase: function(a) {
                    var b;
                    if (null == a) {
                        var c = this.begin();
                        this.next = b = c.next;
                        this.empty() && (this.pushmod = !0)
                    } else c = a.next, b = c.next, a.next = b, null == b && (this.pushmod = !0);
                    c.elem()._inuse = !1;
                    this.modified = !0;
                    this.length--;
                    this.pushmod = !0;
                    return b
                },
                empty: function() {
                    return null == this.begin()
                },
                __class__: $r
            };
            var Ou = function() {
                this.depth = 0;
                this.group = this.groups = this.interactors = null;
                this.ignore = !1;
                this.outer = null;
                this.depth = 0;
                this.groups = new vv;
                this.interactors = new $i
            };
            g["zpp_nape.dynamics.ZPP_InteractionGroup"] =
                Ou;
            Ou.__name__ = ["zpp_nape", "dynamics", "ZPP_InteractionGroup"];
            Ou.prototype = {
                outer: null,
                ignore: null,
                group: null,
                setGroup: function(a) {
                    this.group != a && (null != this.group && (this.group.remGroup(this), this.group.invalidate(!0)), this.group = a, null != a ? (a.addGroup(this), a.invalidate(!0)) : this.invalidate(!0))
                },
                groups: null,
                interactors: null,
                depth: null,
                invalidate: function(a) {
                    null == a && (a = !1);
                    if (a || this.ignore) {
                        for (var b = this.interactors.begin(); null != b;) {
                            var c = b.elem();
                            c.isBody() ? c.ibody.wake() : c.isShape() ? c.ishape.body.wake() :
                                c.icompound.wake();
                            b = b.next
                        }
                        for (b = this.groups.begin(); null != b;) b.elem().invalidate(a), b = b.next
                    }
                },
                addGroup: function(a) {
                    this.groups.add(a);
                    a.depth = this.depth + 1
                },
                remGroup: function(a) {
                    this.groups.remove(a);
                    a.depth = 0
                },
                addInteractor: function(a) {
                    this.interactors.add(a)
                },
                remInteractor: function(a, b) {
                    this.interactors.remove(a)
                },
                __class__: Ou
            };
            var de = function() {
                this.wrap_max = null;
                this.maxx = this.maxy = 0;
                this.wrap_min = null;
                this.minx = this.miny = 0;
                this.outer = this.next = null;
                this._immutable = !1;
                this._invalidate = this._validate =
                    null
            };
            g["zpp_nape.geom.ZPP_AABB"] = de;
            de.__name__ = ["zpp_nape", "geom", "ZPP_AABB"];
            de.get = function(a, b, c, d) {
                if (null == de.zpp_pool) var e = new de;
                else e = de.zpp_pool, de.zpp_pool = e.next, e.next = null;
                e.alloc();
                e.minx = a;
                e.miny = b;
                e.maxx = c;
                e.maxy = d;
                return e
            };
            de.prototype = {
                _invalidate: null,
                _validate: null,
                _immutable: null,
                validate: function() {
                    null != this._validate && this._validate()
                },
                outer: null,
                next: null,
                alloc: function() {},
                free: function() {
                    null != this.outer && (this.outer = this.outer.zpp_inner = null);
                    this._validate = this._invalidate =
                        this.wrap_min = this.wrap_max = null
                },
                width: function() {
                    return this.maxx - this.minx
                },
                height: function() {
                    return this.maxy - this.miny
                },
                perimeter: function() {
                    return 2 * (this.width() + this.height())
                },
                minx: null,
                miny: null,
                wrap_min: null,
                maxx: null,
                maxy: null,
                wrap_max: null,
                intersectY: function(a) {
                    return !(a.miny > this.maxy || this.miny > a.maxy)
                },
                intersect: function(a) {
                    return a.miny <= this.maxy && this.miny <= a.maxy && a.minx <= this.maxx ? this.minx <= a.maxx : !1
                },
                combine: function(a) {
                    a.minx < this.minx && (this.minx = a.minx);
                    a.maxx > this.maxx &&
                        (this.maxx = a.maxx);
                    a.miny < this.miny && (this.miny = a.miny);
                    a.maxy > this.maxy && (this.maxy = a.maxy)
                },
                contains: function(a) {
                    return a.minx >= this.minx && a.miny >= this.miny && a.maxx <= this.maxx ? a.maxy <= this.maxy : !1
                },
                setCombine: function(a, b) {
                    this.minx = a.minx < b.minx ? a.minx : b.minx;
                    this.miny = a.miny < b.miny ? a.miny : b.miny;
                    this.maxx = a.maxx > b.maxx ? a.maxx : b.maxx;
                    this.maxy = a.maxy > b.maxy ? a.maxy : b.maxy
                },
                setExpand: function(a, b) {
                    this.minx = a.minx - b;
                    this.miny = a.miny - b;
                    this.maxx = a.maxx + b;
                    this.maxy = a.maxy + b
                },
                toString: function() {
                    return "{ x: " +
                        this.minx + " y: " + this.miny + " w: " + this.width() + " h: " + this.height() + " }"
                },
                __class__: de
            };
            var Po = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_Vec2"] = Po;
            Po.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_Vec2"];
            Po.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                add: function(a) {
                    return this.inlined_add(a)
                },
                inlined_add: function(a) {
                    if (null == fg.zpp_pool) var b = new fg;
                    else b = fg.zpp_pool, fg.zpp_pool = b.next, b.next =
                        null;
                    b.alloc();
                    b.elt = a;
                    b.next = this.begin();
                    this.head = b;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                insert: function(a, b) {
                    return this.inlined_insert(a, b)
                },
                inlined_insert: function(a, b) {
                    if (null == fg.zpp_pool) var c = new fg;
                    else c = fg.zpp_pool, fg.zpp_pool = c.next, c.next = null;
                    c.alloc();
                    c.elt = b;
                    b = c;
                    null == a ? (b.next = this.begin(), this.head = b) : (b.next = a.next, a.next = b);
                    this.pushmod = this.modified = !0;
                    this.length++;
                    return b
                },
                pop: function() {
                    this.inlined_pop()
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.head = a.next;
                    a.free();
                    a.next = fg.zpp_pool;
                    fg.zpp_pool = a;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                pop_unsafe: function() {
                    return this.inlined_pop_unsafe()
                },
                inlined_pop_unsafe: function() {
                    var a = this.front();
                    this.pop();
                    return a
                },
                erase: function(a) {
                    return this.inlined_erase(a)
                },
                inlined_erase: function(a) {
                    var b;
                    if (null == a) {
                        var c = this.begin();
                        this.head = b = c.next;
                        this.empty() && (this.pushmod = !0)
                    } else c = a.next, b = c.next, a.next = b, null == b && (this.pushmod = !0);
                    a = c;
                    a.free();
                    a.next = fg.zpp_pool;
                    fg.zpp_pool = a;
                    this.modified = !0;
                    this.length--;
                    this.pushmod = !0;
                    return b
                },
                clear: function() {
                    this.inlined_clear()
                },
                inlined_clear: function() {
                    for (; !this.empty();) this.inlined_pop();
                    this.pushmod = !0
                },
                empty: function() {
                    return null == this.begin()
                },
                front: function() {
                    return this.begin().elem()
                },
                iterator_at: function(a) {
                    for (var b = this.begin(); 0 < a-- && null != b;) b = b.next;
                    return b
                },
                __class__: Po
            };
            var Pa = function() {};
            g["zpp_nape.geom.ZPP_Collide"] = Pa;
            Pa.__name__ = ["zpp_nape", "geom", "ZPP_Collide"];
            Pa.containTest = function(a, b) {
                if (a.aabb.contains(b.aabb)) {
                    if (a.isCircle()) {
                        if (b.isCircle()) {
                            var c =
                                a.circle.radius + -b.circle.radius;
                            var d = b.circle.worldCOMx - a.circle.worldCOMx;
                            b = b.circle.worldCOMy - a.circle.worldCOMy;
                            return d * d + b * b <= c * c
                        }
                        c = !0;
                        for (b = b.polygon.gverts.begin(); null != b;) {
                            var e = b.elem();
                            d = a.circle.radius;
                            var f = e.x - a.circle.worldCOMx;
                            e = e.y - a.circle.worldCOMy;
                            if (f * f + e * e <= d * d) b = b.next;
                            else {
                                c = !1;
                                break
                            }
                        }
                        return c
                    }
                    if (b.isCircle()) {
                        c = !0;
                        for (a = a.polygon.edges.begin(); null != a;)
                            if (d = a.elem(), d.gnormx * b.circle.worldCOMx + d.gnormy * b.circle.worldCOMy + b.circle.radius <= d.gprojection) a = a.next;
                            else {
                                c = !1;
                                break
                            } return c
                    }
                    c = !0;
                    for (a = a.polygon.edges.begin(); null != a;) {
                        d = a.elem();
                        f = -Nb.FMAX;
                        for (e = b.polygon.gverts.begin(); null != e;) {
                            var h = e.elem();
                            h = d.gnormx * h.x + d.gnormy * h.y;
                            h > f && (f = h);
                            e = e.next
                        }
                        if (f <= d.gprojection) a = a.next;
                        else {
                            c = !1;
                            break
                        }
                    }
                    return c
                }
                return !1
            };
            Pa.contactCollide = function(a, b, c, d) {
                if (b.isPolygon())
                    if (a.isPolygon()) {
                        for (var e = !0, f = -Nb.FMAX, h = -1, k = null, m = null, g = a.polygon.edges.begin(); null != g;) {
                            for (var l = g.elem(), n = Nb.FMAX, p = b.polygon.gverts.begin(); null != p;) {
                                var x = p.elem();
                                x = l.gnormx * x.x + l.gnormy *
                                    x.y;
                                x < n && (n = x);
                                if (n - l.gprojection <= f) break;
                                p = p.next
                            }
                            n -= l.gprojection;
                            if (0 <= n) {
                                e = !1;
                                break
                            }
                            n > f && (f = n, k = l, h = 1);
                            g = g.next
                        }
                        if (e) {
                            for (g = b.polygon.edges.begin(); null != g;) {
                                l = g.elem();
                                n = Nb.FMAX;
                                for (p = a.polygon.gverts.begin(); null != p;) {
                                    x = p.elem();
                                    x = l.gnormx * x.x + l.gnormy * x.y;
                                    x < n && (n = x);
                                    if (n - l.gprojection <= f) break;
                                    p = p.next
                                }
                                n -= l.gprojection;
                                if (0 <= n) {
                                    e = !1;
                                    break
                                }
                                n > f && (f = n, m = l, h = 2);
                                g = g.next
                            }
                            if (e) {
                                1 == h ? (a = b.polygon, b = k, m = 1) : (a = a.polygon, b = m, m = -1);
                                k = null;
                                e = Nb.FMAX;
                                for (f = a.edges.begin(); null != f;) g = f.elem(), l = b.gnormx *
                                    g.gnormx + b.gnormy * g.gnormy, l < e && (e = l, k = g), f = f.next;
                                e = k.gp0.x;
                                f = k.gp0.y;
                                g = k.gp1.x;
                                l = k.gp1.y;
                                n = g - e;
                                p = l - f;
                                var u = b.gnormy * e - b.gnormx * f;
                                x = b.gnormy * g - b.gnormx * l;
                                var v = 1 / (x - u);
                                u = (-b.tp1 - u) * v;
                                u > K.epsilon && (e += n * u, f += p * u);
                                x = (-b.tp0 - x) * v;
                                x < -K.epsilon && (g += n * x, l += p * x);
                                p = m;
                                n = b.gnormx * p;
                                p *= b.gnormy;
                                c.lnormx = b.lnormx;
                                c.lnormy = b.lnormy;
                                c.lproj = b.lprojection;
                                c.radius = 0;
                                c.rev = d != (-1 == m);
                                c.ptype = c.rev ? 1 : 0;
                                x = e * b.gnormx + f * b.gnormy - b.gprojection;
                                m = g * b.gnormx + l * b.gnormy - b.gprojection;
                                if (0 < x && 0 < m) return !1;
                                d && (n = -n, p = -p);
                                d = c.injectContact(e - b.gnormx * x * .5, f - b.gnormy * x * .5, n, p, x, c.rev ? 1 : 0, 0 < x);
                                e -= 1 * a.body.posx;
                                f -= 1 * a.body.posy;
                                d.inner.lr1x = e * a.body.axisy + f * a.body.axisx;
                                d.inner.lr1y = f * a.body.axisy - e * a.body.axisx;
                                d = c.injectContact(g - b.gnormx * m * .5, l - b.gnormy * m * .5, n, p, m, c.rev ? 0 : 1, 0 < m);
                                g -= 1 * a.body.posx;
                                l -= 1 * a.body.posy;
                                d.inner.lr1x = g * a.body.axisy + l * a.body.axisx;
                                d.inner.lr1y = l * a.body.axisy - g * a.body.axisx;
                                1 == h ? (c.__ref_edge1 = b, c.__ref_edge2 = k) : (c.__ref_edge2 = b, c.__ref_edge1 = k);
                                return !0
                            }
                        }
                    } else {
                        k = -Nb.FMAX;
                        m = !0;
                        e = h = null;
                        f = b.polygon.gverts.begin();
                        for (g = b.polygon.edges.begin(); null != g;) {
                            l = g.elem();
                            n = l.gnormx * a.circle.worldCOMx + l.gnormy * a.circle.worldCOMy - l.gprojection - a.circle.radius;
                            if (0 < n) {
                                m = !1;
                                break
                            }
                            n > k && (k = n, h = l, e = f);
                            f = f.next;
                            g = g.next
                        }
                        if (m) {
                            m = e.elem();
                            e = null == e.next ? b.polygon.gverts.front() : e.next.elem();
                            f = a.circle.worldCOMy * h.gnormx - a.circle.worldCOMx * h.gnormy;
                            if (f <= m.y * h.gnormx - m.x * h.gnormy) return k = a.circle.radius, e = m.x - a.circle.worldCOMx, f = m.y - a.circle.worldCOMy, g = e * e + f * f, g > k * k ? k = null : g < K.epsilon * K.epsilon ? k = c.injectContact(a.circle.worldCOMx,
                                a.circle.worldCOMy, 1, 0, -k, 0) : (g = Xd.invsqrt(g), l = g < K.epsilon ? Nb.FMAX : 1 / g, n = .5 + (a.circle.radius - .5 * k) * g, k = d ? c.injectContact(a.circle.worldCOMx + e * n, a.circle.worldCOMy + f * n, -e * g, -f * g, l - k, 0) : c.injectContact(a.circle.worldCOMx + e * n, a.circle.worldCOMy + f * n, e * g, f * g, l - k, 0)), null != k && (e = k.inner, c.ptype = 2, f = m.x - b.polygon.body.posx, m = m.y - b.polygon.body.posy, c.__ref_edge1 = h, c.__ref_vertex = -1, d ? (e.lr1x = f * b.polygon.body.axisy + m * b.polygon.body.axisx, e.lr1y = m * b.polygon.body.axisy - f * b.polygon.body.axisx, e.lr2x = a.circle.localCOMx,
                                e.lr2y = a.circle.localCOMy) : (e.lr2x = f * b.polygon.body.axisy + m * b.polygon.body.axisx, e.lr2y = m * b.polygon.body.axisy - f * b.polygon.body.axisx, e.lr1x = a.circle.localCOMx, e.lr1y = a.circle.localCOMy), c.radius = a.circle.radius), null != k;
                            if (f >= e.y * h.gnormx - e.x * h.gnormy) return k = a.circle.radius, m = e.x - a.circle.worldCOMx, f = e.y - a.circle.worldCOMy, g = m * m + f * f, g > k * k ? k = null : g < K.epsilon * K.epsilon ? k = c.injectContact(a.circle.worldCOMx, a.circle.worldCOMy, 1, 0, -k, 0) : (g = Xd.invsqrt(g), l = g < K.epsilon ? Nb.FMAX : 1 / g, n = .5 + (a.circle.radius -
                                .5 * k) * g, k = d ? c.injectContact(a.circle.worldCOMx + m * n, a.circle.worldCOMy + f * n, -m * g, -f * g, l - k, 0) : c.injectContact(a.circle.worldCOMx + m * n, a.circle.worldCOMy + f * n, m * g, f * g, l - k, 0)), null != k && (m = k.inner, c.ptype = 2, f = e.x - b.polygon.body.posx, e = e.y - b.polygon.body.posy, c.__ref_edge1 = h, c.__ref_vertex = 1, d ? (m.lr1x = f * b.polygon.body.axisy + e * b.polygon.body.axisx, m.lr1y = e * b.polygon.body.axisy - f * b.polygon.body.axisx, m.lr2x = a.circle.localCOMx, m.lr2y = a.circle.localCOMy) : (m.lr2x = f * b.polygon.body.axisy + e * b.polygon.body.axisx, m.lr2y =
                                e * b.polygon.body.axisy - f * b.polygon.body.axisx, m.lr1x = a.circle.localCOMx, m.lr1y = a.circle.localCOMy), c.radius = a.circle.radius), null != k;
                            m = a.circle.radius + .5 * k;
                            b = h.gnormx * m;
                            m *= h.gnormy;
                            b = a.circle.worldCOMx - b;
                            m = a.circle.worldCOMy - m;
                            b = d ? c.injectContact(b, m, h.gnormx, h.gnormy, k, 0) : c.injectContact(b, m, -h.gnormx, -h.gnormy, k, 0);
                            c.ptype = d ? 0 : 1;
                            c.lnormx = h.lnormx;
                            c.lnormy = h.lnormy;
                            c.rev = !d;
                            c.lproj = h.lprojection;
                            c.radius = a.circle.radius;
                            b.inner.lr1x = a.circle.localCOMx;
                            b.inner.lr1y = a.circle.localCOMy;
                            c.__ref_edge1 =
                                h;
                            c.__ref_vertex = 0;
                            return !0
                        }
                    }
                else if (h = a.circle.radius + b.circle.radius, k = b.circle.worldCOMx - a.circle.worldCOMx, m = b.circle.worldCOMy - a.circle.worldCOMy, e = k * k + m * m, e > h * h ? h = null : e < K.epsilon * K.epsilon ? h = c.injectContact(a.circle.worldCOMx, a.circle.worldCOMy, 1, 0, -h, 0) : (e = Xd.invsqrt(e), f = e < K.epsilon ? Nb.FMAX : 1 / e, g = .5 + (a.circle.radius - .5 * h) * e, h = d ? c.injectContact(a.circle.worldCOMx + k * g, a.circle.worldCOMy + m * g, -k * e, -m * e, f - h, 0) : c.injectContact(a.circle.worldCOMx + k * g, a.circle.worldCOMy + m * g, k * e, m * e, f - h, 0)), null !=
                    h) return h = h.inner, d ? (h.lr1x = b.circle.localCOMx, h.lr1y = b.circle.localCOMy, h.lr2x = a.circle.localCOMx, h.lr2y = a.circle.localCOMy) : (h.lr1x = a.circle.localCOMx, h.lr1y = a.circle.localCOMy, h.lr2x = b.circle.localCOMx, h.lr2y = b.circle.localCOMy), c.radius = a.circle.radius + b.circle.radius, c.ptype = 2, !0;
                return !1
            };
            Pa.testCollide_safe = function(a, b) {
                if (b.isCircle()) {
                    var c = a;
                    a = b;
                    b = c
                }
                return Pa.testCollide(a, b)
            };
            Pa.testCollide = function(a, b) {
                if (b.isPolygon()) {
                    if (a.isPolygon()) {
                        for (var c = !0, d = a.polygon.edges.begin(); null !=
                            d;) {
                            for (var e = d.elem(), f = Nb.FMAX, h = b.polygon.gverts.begin(); null != h;) {
                                var k = h.elem();
                                k = e.gnormx * k.x + e.gnormy * k.y;
                                k < f && (f = k);
                                h = h.next
                            }
                            f -= e.gprojection;
                            if (0 < f) {
                                c = !1;
                                break
                            }
                            d = d.next
                        }
                        if (c) {
                            for (b = b.polygon.edges.begin(); null != b;) {
                                d = b.elem();
                                e = Nb.FMAX;
                                for (f = a.polygon.gverts.begin(); null != f;) h = f.elem(), h = d.gnormx * h.x + d.gnormy * h.y, h < e && (e = h), f = f.next;
                                e -= d.gprojection;
                                if (0 < e) {
                                    c = !1;
                                    break
                                }
                                b = b.next
                            }
                            return c
                        }
                    } else {
                        d = c = null;
                        e = !0;
                        f = -Nb.FMAX;
                        h = b.polygon.gverts.begin();
                        for (k = b.polygon.edges.begin(); null != k;) {
                            var m =
                                k.elem(),
                                g = m.gnormx * a.circle.worldCOMx + m.gnormy * a.circle.worldCOMy - m.gprojection - a.circle.radius;
                            if (0 < g) {
                                e = !1;
                                break
                            }
                            g > f && (f = g, c = m, d = h);
                            h = h.next;
                            k = k.next
                        }
                        if (e) return e = d.elem(), b = null == d.next ? b.polygon.gverts.front() : d.next.elem(), d = a.circle.worldCOMy * c.gnormx - a.circle.worldCOMx * c.gnormy, d <= e.y * c.gnormx - e.x * c.gnormy ? (b = a.circle.radius, c = e.x - a.circle.worldCOMx, a = e.y - a.circle.worldCOMy, c * c + a * a <= b * b) : d >= b.y * c.gnormx - b.x * c.gnormy ? (c = a.circle.radius, d = b.x - a.circle.worldCOMx, a = b.y - a.circle.worldCOMy, d * d +
                            a * a <= c * c) : !0
                    }
                    return !1
                }
                c = a.circle.radius + b.circle.radius;
                d = b.circle.worldCOMx - a.circle.worldCOMx;
                a = b.circle.worldCOMy - a.circle.worldCOMy;
                return d * d + a * a <= c * c
            };
            Pa.flowCollide = function(a, b, c) {
                if (b.isPolygon()) {
                    if (a.isPolygon()) {
                        for (var d = [], e = [], f = !0, h = !0, k = a.polygon.edges.begin(); null != k;) {
                            for (var m = k.elem(), g = Nb.FMAX, l = 0, n = b.polygon.gverts.begin(); null != n;) {
                                var p = n.elem(),
                                    x = m.gnormx * p.x + m.gnormy * p.y;
                                x < g && (g = x);
                                x >= m.gprojection + K.epsilon && (e[l] = !0, h = !1);
                                ++l;
                                n = n.next
                            }
                            g -= m.gprojection;
                            if (0 < g) {
                                f = !1;
                                break
                            }
                            k =
                                k.next
                        }
                        if (h) return b.polygon.validate_worldCOM(), c.inject(b.polygon.area, b.polygon.worldCOMx, b.polygon.worldCOMy), !0;
                        if (f) {
                            h = !0;
                            for (var u = b.polygon.edges.begin(); null != u;) {
                                for (var v = u.elem(), q = Nb.FMAX, z = 0, w = a.polygon.gverts.begin(); null != w;) {
                                    var y = w.elem(),
                                        A = v.gnormx * y.x + v.gnormy * y.y;
                                    A < q && (q = A);
                                    A >= v.gprojection + K.epsilon && (d[z] = !0, h = !1);
                                    ++z;
                                    w = w.next
                                }
                                q -= v.gprojection;
                                if (0 < q) {
                                    f = !1;
                                    break
                                }
                                u = u.next
                            }
                            if (h) return a.polygon.validate_worldCOM(), c.inject(a.polygon.area, a.polygon.worldCOMx, a.polygon.worldCOMy),
                                !0;
                            if (f) {
                                for (; !Pa.flowpoly.empty();) {
                                    var L = Pa.flowpoly.pop_unsafe();
                                    if (!L._inuse) {
                                        var D = L;
                                        D.free();
                                        D.next = kb.zpp_pool;
                                        kb.zpp_pool = D
                                    }
                                }
                                for (var B = null, Ka = !1, t = a.polygon.gverts.begin(), E = 0, F = b.polygon.gverts.begin(), pa = 0, H = 0, J = b.polygon.edgeCnt; H < J;) {
                                    var R = H++;
                                    if (e[R]) F = F.next;
                                    else {
                                        pa = R;
                                        break
                                    }
                                }
                                if (null == F) {
                                    F = b.polygon.gverts.begin();
                                    Ka = !0;
                                    for (var X = 0, Ca = a.polygon.edgeCnt; X < Ca;) {
                                        var oa = X++;
                                        if (d[oa]) t = t.next;
                                        else {
                                            E = oa;
                                            break
                                        }
                                    }
                                    null == t ? t = a.polygon.gverts.begin() : (Pa.flowpoly.add(t.elem()), B = Pa.flowpoly.front())
                                } else Pa.flowpoly.add(F.elem()),
                                    B = Pa.flowpoly.front();
                                var N = 1;
                                if (Pa.flowpoly.empty()) {
                                    for (var O = !0, S = a.polygon.gverts.begin(), C = S.elem(), G = S.next; null != G;) {
                                        for (var P = G.elem(), Q = 2, la = b.polygon.gverts.begin(), T = la.elem(), U = la.next; null != U;) {
                                            var V = U.elem(),
                                                bb = 0,
                                                W = 0,
                                                Y = 0;
                                            W = C.x - T.x;
                                            Y = C.y - T.y;
                                            var Lc = 0,
                                                le = 0;
                                            Lc = P.x - C.x;
                                            le = P.y - C.y;
                                            var ba = 0,
                                                aa = 0;
                                            ba = V.x - T.x;
                                            aa = V.y - T.y;
                                            var ca = le * ba - Lc * aa;
                                            if (ca * ca > K.epsilon * K.epsilon) {
                                                ca = 1 / ca;
                                                var ra = (aa * W - ba * Y) * ca;
                                                if (ra > K.epsilon && ra < 1 - K.epsilon) {
                                                    var M = (le * W - Lc * Y) * ca;
                                                    if (M > K.epsilon && M < 1 - K.epsilon) {
                                                        bb = ra;
                                                        var da = !0
                                                    } else da = !1
                                                } else da = !1
                                            } else da = !1;
                                            da && bb < Q && (Q = bb, F = la);
                                            la = U;
                                            T = V;
                                            U = U.next
                                        }
                                        for (;;) {
                                            U = b.polygon.gverts.begin();
                                            var ea = U.elem(),
                                                Z = 0,
                                                ia = 0,
                                                yc = 0;
                                            ia = C.x - T.x;
                                            yc = C.y - T.y;
                                            var ha = 0,
                                                ja = 0;
                                            ha = P.x - C.x;
                                            ja = P.y - C.y;
                                            var fa = 0,
                                                gb = 0;
                                            fa = ea.x - T.x;
                                            gb = ea.y - T.y;
                                            var ka = ja * fa - ha * gb;
                                            if (ka * ka > K.epsilon * K.epsilon) {
                                                ka = 1 / ka;
                                                var bd = (gb * ia - fa * yc) * ka;
                                                if (bd > K.epsilon && bd < 1 - K.epsilon) {
                                                    var Gc = (ja * ia - ha * yc) * ka;
                                                    if (Gc > K.epsilon && Gc < 1 - K.epsilon) {
                                                        Z = bd;
                                                        var Ga = !0
                                                    } else Ga = !1
                                                } else Ga = !1
                                            } else Ga = !1;
                                            Ga && Z < Q && (Q = Z, F = la);
                                            break
                                        }
                                        if (2 != Q) {
                                            var na = 0,
                                                Aa =
                                                0,
                                                qa = Q;
                                            na = C.x + (P.x - C.x) * qa;
                                            Aa = C.y + (P.y - C.y) * qa;
                                            B = kb.get(na, Aa);
                                            Pa.flowpoly.add(B);
                                            Ka = !0;
                                            t = S;
                                            O = !1;
                                            break
                                        }
                                        S = G;
                                        C = P;
                                        G = G.next
                                    }
                                    if (O)
                                        for (;;) {
                                            G = a.polygon.gverts.begin();
                                            for (var Fc = G.elem(), ma = 2, ta = b.polygon.gverts.begin(), ua = ta.elem(), sa = ta.next; null != sa;) {
                                                var ob = sa.elem(),
                                                    va = 0,
                                                    wa = 0,
                                                    xa = 0;
                                                wa = C.x - ua.x;
                                                xa = C.y - ua.y;
                                                var za = 0,
                                                    ya = 0;
                                                za = Fc.x - C.x;
                                                ya = Fc.y - C.y;
                                                var Da = 0,
                                                    Ea = 0;
                                                Da = ob.x - ua.x;
                                                Ea = ob.y - ua.y;
                                                var Fa = ya * Da - za * Ea;
                                                if (Fa * Fa > K.epsilon * K.epsilon) {
                                                    Fa = 1 / Fa;
                                                    var Ha = (Ea * wa - Da * xa) * Fa;
                                                    if (Ha > K.epsilon && Ha < 1 - K.epsilon) {
                                                        var Ja =
                                                            (ya * wa - za * xa) * Fa;
                                                        if (Ja > K.epsilon && Ja < 1 - K.epsilon) {
                                                            va = Ha;
                                                            var Ia = !0
                                                        } else Ia = !1
                                                    } else Ia = !1
                                                } else Ia = !1;
                                                Ia && va < ma && (ma = va, F = ta);
                                                ta = sa;
                                                ua = ob;
                                                sa = sa.next
                                            }
                                            for (;;) {
                                                sa = b.polygon.gverts.begin();
                                                var La = sa.elem(),
                                                    Oa = 0,
                                                    Na = 0,
                                                    Qa = 0;
                                                Na = C.x - ua.x;
                                                Qa = C.y - ua.y;
                                                var Ta = 0,
                                                    Za = 0;
                                                Ta = Fc.x - C.x;
                                                Za = Fc.y - C.y;
                                                var Xa = 0,
                                                    ab = 0;
                                                Xa = La.x - ua.x;
                                                ab = La.y - ua.y;
                                                var Wa = Za * Xa - Ta * ab;
                                                if (Wa * Wa > K.epsilon * K.epsilon) {
                                                    Wa = 1 / Wa;
                                                    var Ua = (ab * Na - Xa * Qa) * Wa;
                                                    if (Ua > K.epsilon && Ua < 1 - K.epsilon) {
                                                        var $a = (Za * Na - Ta * Qa) * Wa;
                                                        if ($a > K.epsilon && $a < 1 - K.epsilon) {
                                                            Oa = Ua;
                                                            var Ra = !0
                                                        } else Ra = !1
                                                    } else Ra = !1
                                                } else Ra = !1;
                                                Ra && Oa < ma && (ma = Oa, F = ta);
                                                break
                                            }
                                            if (2 != ma) {
                                                var $b = 0,
                                                    Pb = 0,
                                                    db = ma;
                                                $b = C.x + (Fc.x - C.x) * db;
                                                Pb = C.y + (Fc.y - C.y) * db;
                                                B = kb.get($b, Pb);
                                                Pa.flowpoly.add(B);
                                                Ka = !0;
                                                t = S;
                                                break
                                            }
                                            break
                                        }
                                    N = 2
                                }
                                for (;;)
                                    if (Ka)
                                        if (t = t.next, ++E, null == t && (t = a.polygon.gverts.begin(), E = 0), d[E]) {
                                            var Sa = Pa.flowpoly.front(),
                                                pb = t.elem(),
                                                Va = F.elem(),
                                                fb = F.next;
                                            null == fb && (fb = b.polygon.gverts.begin());
                                            for (var cb = -1, eb = null, hb = 0, jb = 0, ib = fb, Ya = fb;;) {
                                                var lb = Ya.elem(),
                                                    nb = 0,
                                                    rb = 0,
                                                    sb = 0;
                                                rb = Va.x - Sa.x;
                                                sb = Va.y - Sa.y;
                                                var tb = 0,
                                                    ub = 0;
                                                tb = lb.x - Va.x;
                                                ub =
                                                    lb.y - Va.y;
                                                var vb = 0,
                                                    wb = 0;
                                                vb = pb.x - Sa.x;
                                                wb = pb.y - Sa.y;
                                                var qb = ub * vb - tb * wb;
                                                if (qb * qb > K.epsilon * K.epsilon) {
                                                    qb = 1 / qb;
                                                    var xb = (wb * rb - vb * sb) * qb;
                                                    if (xb > K.epsilon && xb < 1 - K.epsilon) {
                                                        var yb = (ub * rb - tb * sb) * qb;
                                                        if (yb > K.epsilon && yb < 1 - K.epsilon) {
                                                            nb = xb;
                                                            var Rb = !0
                                                        } else Rb = !1
                                                    } else Rb = !1
                                                } else Rb = !1;
                                                if (Rb && nb >= cb)
                                                    if (eb = F, hb = pa, ++jb == N) {
                                                        cb = nb;
                                                        Ya = ib;
                                                        break
                                                    } else cb = nb;
                                                Va = lb;
                                                F = Ya;
                                                ++pa;
                                                pa >= b.polygon.edgeCnt && (pa = 0);
                                                Ya = Ya.next;
                                                null == Ya && (Ya = b.polygon.gverts.begin());
                                                break
                                            }
                                            for (; Ya != ib;) {
                                                var nc = Ya.elem(),
                                                    Ma = 0,
                                                    Ab = 0,
                                                    Bb = 0;
                                                Ab = Va.x - Sa.x;
                                                Bb =
                                                    Va.y - Sa.y;
                                                var Cb = 0,
                                                    nd = 0;
                                                Cb = nc.x - Va.x;
                                                nd = nc.y - Va.y;
                                                var Db = 0,
                                                    Qb = 0;
                                                Db = pb.x - Sa.x;
                                                Qb = pb.y - Sa.y;
                                                var Fb = nd * Db - Cb * Qb;
                                                if (Fb * Fb > K.epsilon * K.epsilon) {
                                                    Fb = 1 / Fb;
                                                    var Gb = (Qb * Ab - Db * Bb) * Fb;
                                                    if (Gb > K.epsilon && Gb < 1 - K.epsilon) {
                                                        var Kb = (nd * Ab - Cb * Bb) * Fb;
                                                        if (Kb > K.epsilon && Kb < 1 - K.epsilon) {
                                                            Ma = Gb;
                                                            var Ib = !0
                                                        } else Ib = !1
                                                    } else Ib = !1
                                                } else Ib = !1;
                                                if (Ib && Ma >= cb)
                                                    if (eb = F, hb = pa, ++jb == N) {
                                                        cb = Ma;
                                                        Ya = ib;
                                                        break
                                                    } else cb = Ma;
                                                Va = nc;
                                                F = Ya;
                                                ++pa;
                                                pa >= b.polygon.edgeCnt && (pa = 0);
                                                Ya = Ya.next;
                                                null == Ya && (Ya = b.polygon.gverts.begin())
                                            }
                                            if (null == eb) break;
                                            var Jb = eb.elem(),
                                                Tb = eb.next;
                                            null == Tb && (Tb = b.polygon.gverts.begin());
                                            var Yb = Tb.elem(),
                                                Ub = 0,
                                                Vb = 0,
                                                cc = cb;
                                            Ub = Jb.x + (Yb.x - Jb.x) * cc;
                                            Vb = Jb.y + (Yb.y - Jb.y) * cc;
                                            if (null != B && pc.vec_dsq(Ub, Vb, B.x, B.y) < K.epsilon) break;
                                            Pa.flowpoly.add(kb.get(Ub, Vb));
                                            null == B && (B = Pa.flowpoly.front());
                                            F = eb;
                                            pa = hb;
                                            Ka = !Ka;
                                            N = 2
                                        } else {
                                            var Zb = t.elem();
                                            if (null != B && pc.vec_dsq(Zb.x, Zb.y, B.x, B.y) < K.epsilon) break;
                                            Pa.flowpoly.add(Zb);
                                            null == B && (B = Pa.flowpoly.front());
                                            N = 1
                                        }
                                else if (F = F.next, ++pa, null == F && (F = b.polygon.gverts.begin(), pa = 0), e[pa]) {
                                    var Lb = Pa.flowpoly.front(),
                                        Wb = F.elem(),
                                        Hb = t.elem(),
                                        Xb = t.next;
                                    null == Xb && (Xb = a.polygon.gverts.begin());
                                    for (var Ob = -1, od = null, bc = 0, ic = 0, ec = Xb, Eb = Xb;;) {
                                        var gc = Eb.elem(),
                                            dc = 0,
                                            hc = 0,
                                            jc = 0;
                                        hc = Hb.x - Lb.x;
                                        jc = Hb.y - Lb.y;
                                        var Tc = 0,
                                            kc = 0;
                                        Tc = gc.x - Hb.x;
                                        kc = gc.y - Hb.y;
                                        var lc = 0,
                                            Vd = 0;
                                        lc = Wb.x - Lb.x;
                                        Vd = Wb.y - Lb.y;
                                        var ac = kc * lc - Tc * Vd;
                                        if (ac * ac > K.epsilon * K.epsilon) {
                                            ac = 1 / ac;
                                            var oc = (Vd * hc - lc * jc) * ac;
                                            if (oc > K.epsilon && oc < 1 - K.epsilon) {
                                                var rc = (kc * hc - Tc * jc) * ac;
                                                if (rc > K.epsilon && rc < 1 - K.epsilon) {
                                                    dc = oc;
                                                    var mc = !0
                                                } else mc = !1
                                            } else mc = !1
                                        } else mc = !1;
                                        if (mc && dc >= Ob)
                                            if (od = t,
                                                bc = E, ++ic == N) {
                                                Ob = dc;
                                                Eb = ec;
                                                break
                                            } else Ob = dc;
                                        Hb = gc;
                                        t = Eb;
                                        ++E;
                                        E >= a.polygon.edgeCnt && (E = 0);
                                        Eb = Eb.next;
                                        null == Eb && (Eb = a.polygon.gverts.begin());
                                        break
                                    }
                                    for (; Eb != ec;) {
                                        var qc = Eb.elem(),
                                            dd = 0,
                                            vc = 0,
                                            wc = 0;
                                        vc = Hb.x - Lb.x;
                                        wc = Hb.y - Lb.y;
                                        var xc = 0,
                                            Bc = 0;
                                        xc = qc.x - Hb.x;
                                        Bc = qc.y - Hb.y;
                                        var Dc = 0,
                                            Ec = 0;
                                        Dc = Wb.x - Lb.x;
                                        Ec = Wb.y - Lb.y;
                                        var uc = Bc * Dc - xc * Ec;
                                        if (uc * uc > K.epsilon * K.epsilon) {
                                            uc = 1 / uc;
                                            var Nc = (Ec * vc - Dc * wc) * uc;
                                            if (Nc > K.epsilon && Nc < 1 - K.epsilon) {
                                                var Rc = (Bc * vc - xc * wc) * uc;
                                                if (Rc > K.epsilon && Rc < 1 - K.epsilon) {
                                                    dd = Nc;
                                                    var Hc = !0
                                                } else Hc = !1
                                            } else Hc = !1
                                        } else Hc = !1;
                                        if (Hc && dd >= Ob)
                                            if (od = t, bc = E, ++ic == N) {
                                                Ob = dd;
                                                Eb = ec;
                                                break
                                            } else Ob = dd;
                                        Hb = qc;
                                        t = Eb;
                                        ++E;
                                        E >= a.polygon.edgeCnt && (E = 0);
                                        Eb = Eb.next;
                                        null == Eb && (Eb = a.polygon.gverts.begin())
                                    }
                                    if (null == od) break;
                                    var Jc = od.elem(),
                                        Pc = od.next;
                                    null == Pc && (Pc = a.polygon.gverts.begin());
                                    var Wc = Pc.elem(),
                                        Sc = 0,
                                        ug = 0,
                                        Yc = Ob;
                                    Sc = Jc.x + (Wc.x - Jc.x) * Yc;
                                    ug = Jc.y + (Wc.y - Jc.y) * Yc;
                                    if (null != B && pc.vec_dsq(Sc, ug, B.x, B.y) < K.epsilon) break;
                                    Pa.flowpoly.add(kb.get(Sc, ug));
                                    null == B && (B = Pa.flowpoly.front());
                                    t = od;
                                    E = bc;
                                    Ka = !Ka;
                                    N = 2
                                } else {
                                    var Uc = F.elem();
                                    if (null !=
                                        B && pc.vec_dsq(Uc.x, Uc.y, B.x, B.y) < K.epsilon) break;
                                    Pa.flowpoly.add(Uc);
                                    null == B && (B = Pa.flowpoly.front());
                                    N = 1
                                }
                                if (null != Pa.flowpoly.begin() && null != Pa.flowpoly.begin().next && null != Pa.flowpoly.begin().next.next) {
                                    var Cc = 0,
                                        Ic = 0,
                                        Kc = 0;
                                    Cc = Kc = Ic = 0;
                                    var fc = Pa.flowpoly.begin(),
                                        Oc = fc.elem();
                                    fc = fc.next;
                                    var Sb = fc.elem();
                                    for (fc = fc.next; null != fc;) {
                                        var Qc = fc.elem();
                                        Cc += Sb.x * (Qc.y - Oc.y);
                                        var td = Qc.y * Sb.x - Qc.x * Sb.y;
                                        Ic += (Sb.x + Qc.x) * td;
                                        Kc += (Sb.y + Qc.y) * td;
                                        Oc = Sb;
                                        Sb = Qc;
                                        fc = fc.next
                                    }
                                    fc = Pa.flowpoly.begin();
                                    var hg = fc.elem();
                                    Cc += Sb.x *
                                        (hg.y - Oc.y);
                                    var hd = hg.y * Sb.x - hg.x * Sb.y;
                                    Ic += (Sb.x + hg.x) * hd;
                                    Kc += (Sb.y + hg.y) * hd;
                                    Oc = Sb;
                                    Sb = hg;
                                    fc = fc.next;
                                    var ad = fc.elem();
                                    Cc += Sb.x * (ad.y - Oc.y);
                                    var jd = ad.y * Sb.x - ad.x * Sb.y;
                                    Ic += (Sb.x + ad.x) * jd;
                                    Kc += (Sb.y + ad.y) * jd;
                                    Cc *= .5;
                                    var kd = 1 / (6 * Cc);
                                    Ic *= kd;
                                    Kc *= kd;
                                    c.inject(-Cc, Ic, Kc);
                                    return !0
                                }
                            }
                        }
                        return !1
                    }
                    for (var fd = [], md = !0, Zc = null, ed = null, ud = -Nb.FMAX, xd = !0, sd = b.polygon.gverts.begin(), yd = 0, ld = b.polygon.edges.begin(); null != ld;) {
                        var cd = ld.elem(),
                            gd = cd.gnormx * a.circle.worldCOMx + cd.gnormy * a.circle.worldCOMy;
                        if (gd > cd.gprojection +
                            a.circle.radius) {
                            xd = !1;
                            break
                        } else gd + a.circle.radius > cd.gprojection + K.epsilon && (md = !1, fd[yd] = !0);
                        gd -= cd.gprojection + a.circle.radius;
                        gd > ud && (ud = gd, Zc = cd, ed = sd);
                        sd = sd.next;
                        ++yd;
                        ld = ld.next
                    }
                    if (xd) {
                        if (md) return c.inject(a.circle.area, a.circle.worldCOMx, a.circle.worldCOMy), !0;
                        var qd = ed.elem(),
                            rd = null == ed.next ? b.polygon.gverts.front() : ed.next.elem(),
                            Ed = a.circle.worldCOMy * Zc.gnormx - a.circle.worldCOMx * Zc.gnormy;
                        if (Ed <= qd.y * Zc.gnormx - qd.x * Zc.gnormy) {
                            var Gd = a.circle.radius,
                                zd = 0,
                                Ad = 0;
                            zd = qd.x - a.circle.worldCOMx;
                            Ad = qd.y - a.circle.worldCOMy;
                            var Bd = zd * zd + Ad * Ad <= Gd * Gd
                        } else if (Ed >= rd.y * Zc.gnormx - rd.x * Zc.gnormy) {
                            var Id = a.circle.radius,
                                Cd = 0,
                                Dd = 0;
                            Cd = rd.x - a.circle.worldCOMx;
                            Dd = rd.y - a.circle.worldCOMy;
                            Bd = Cd * Cd + Dd * Dd <= Id * Id
                        } else Bd = !0;
                        if (Bd) {
                            for (var wd = [], Fd = 0, Nd = !0, zc = null, $c = 0, vd = b.polygon.gverts.begin(); null != vd;) {
                                var Sd = vd.elem(),
                                    Wd = pc.vec_dsq(Sd.x, Sd.y, a.circle.worldCOMx, a.circle.worldCOMy);
                                (wd[Fd] = Wd <= a.circle.radius * a.circle.radius) ? ($c = Fd, zc = vd) : Nd = !1;
                                ++Fd;
                                vd = vd.next
                            }
                            if (Nd) return b.polygon.validate_worldCOM(),
                                c.inject(b.polygon.area, b.polygon.worldCOMx, b.polygon.worldCOMy), !0;
                            for (; !Pa.flowpoly.empty();) {
                                var Td = Pa.flowpoly.pop_unsafe();
                                if (!Td._inuse) {
                                    var Jd = Td;
                                    Jd.free();
                                    Jd.next = kb.zpp_pool;
                                    kb.zpp_pool = Jd
                                }
                            }
                            Pa.flowsegs.clear();
                            var sc = null,
                                Xc = 1;
                            if (null == zc) zc = b.polygon.gverts.begin(), Xc = 2;
                            else {
                                var Yd = Pa.flowpoly;
                                sc = zc.elem();
                                Yd.add(sc)
                            }
                            for (; 0 != Xc;)
                                if (1 == Xc)
                                    if (zc = zc.next, null == zc && (zc = b.polygon.gverts.begin()), ++$c, $c >= b.polygon.edgeCnt && ($c = 0), wd[$c]) {
                                        if (pc.vec_dsq(sc.x, sc.y, zc.elem().x, zc.elem().y) < K.epsilon) break;
                                        Pa.flowpoly.add(zc.elem())
                                    } else {
                                        var id = Pa.flowpoly.front(),
                                            Kd = zc.elem(),
                                            Ld = 0,
                                            Md = 0;
                                        Ld = Kd.x - id.x;
                                        Md = Kd.y - id.y;
                                        var Od = 0,
                                            Pd = 0;
                                        Od = id.x - a.circle.worldCOMx;
                                        Pd = id.y - a.circle.worldCOMy;
                                        var Hd = Ld * Ld + Md * Md,
                                            Rd = 2 * (Od * Ld + Pd * Md),
                                            be = Math.sqrt(Rd * Rd - 4 * Hd * (Od * Od + Pd * Pd - a.circle.radius * a.circle.radius));
                                        Hd = 1 / (2 * Hd);
                                        var ce = (-Rd - be) * Hd,
                                            Zd = 0,
                                            $d = 0,
                                            ge = ce < K.epsilon ? (-Rd + be) * Hd : ce;
                                        Zd = id.x + (Kd.x - id.x) * ge;
                                        $d = id.y + (Kd.y - id.y) * ge;
                                        if (pc.vec_dsq(sc.x, sc.y, Zd, $d) < K.epsilon) break;
                                        Pa.flowpoly.add(kb.get(Zd, $d));
                                        Xc = 2
                                    }
                            else if (2 == Xc) {
                                var ee =
                                    zc.next;
                                null == ee && (ee = b.polygon.gverts.begin());
                                var Vc = zc.elem();
                                Xc = 0;
                                for (var Qd = ee, Mc = ee;;) {
                                    var pd = Mc.elem(),
                                        he = $c + 1;
                                    he == b.polygon.edgeCnt && (he = 0);
                                    if (fd[$c])
                                        if (wd[he]) {
                                            var ie = 0,
                                                je = 0;
                                            ie = pd.x - Vc.x;
                                            je = pd.y - Vc.y;
                                            var me = 0,
                                                oe = 0;
                                            me = Vc.x - a.circle.worldCOMx;
                                            oe = Vc.y - a.circle.worldCOMy;
                                            var fe = ie * ie + je * je,
                                                qe = 2 * (me * ie + oe * je),
                                                ze = Math.sqrt(qe * qe - 4 * fe * (me * me + oe * oe - a.circle.radius * a.circle.radius));
                                            fe = 1 / (2 * fe);
                                            var Ae = (-qe - ze) * fe,
                                                ve = 0,
                                                we = 0,
                                                Be = Ae < K.epsilon ? (-qe + ze) * fe : Ae;
                                            ve = Vc.x + (pd.x - Vc.x) * Be;
                                            we = Vc.y + (pd.y - Vc.y) *
                                                Be;
                                            if (pc.vec_dsq(sc.x, sc.y, ve, we) < K.epsilon) {
                                                Xc = 0;
                                                Mc = Qd;
                                                break
                                            }
                                            var Ce = kb.get(ve, we);
                                            Pa.flowsegs.add(Pa.flowpoly.front());
                                            Pa.flowsegs.add(Ce);
                                            Pa.flowpoly.add(Ce);
                                            Xc = 1;
                                            Mc = Qd;
                                            break
                                        } else {
                                            var ne = 0,
                                                re = 0,
                                                se = 0,
                                                te = 0;
                                            se = pd.x - Vc.x;
                                            te = pd.y - Vc.y;
                                            var xe = 0,
                                                ye = 0;
                                            xe = Vc.x - a.circle.worldCOMx;
                                            ye = Vc.y - a.circle.worldCOMy;
                                            var pe = se * se + te * te,
                                                ue = 2 * (xe * se + ye * te),
                                                ke = ue * ue - 4 * pe * (xe * xe + ye * ye - a.circle.radius * a.circle.radius);
                                            if (ke * ke < K.epsilon) {
                                                ne = 0 > ke ? 10 : re = -ue / (2 * pe);
                                                var Me = !1
                                            } else ke = Math.sqrt(ke), pe = 1 / (2 * pe), ne = (-ue - ke) * pe,
                                                re = (-ue + ke) * pe, Me = !0;
                                            if (ne < 1 - K.epsilon && re > K.epsilon) {
                                                var Ie = 0,
                                                    Ke = 0,
                                                    Oe = ne;
                                                Ie = Vc.x + (pd.x - Vc.x) * Oe;
                                                Ke = Vc.y + (pd.y - Vc.y) * Oe;
                                                if (null != sc && pc.vec_dsq(sc.x, sc.y, Ie, Ke) < K.epsilon) {
                                                    Xc = 0;
                                                    Mc = Qd;
                                                    break
                                                }
                                                var Pe = kb.get(Ie, Ke);
                                                Pa.flowpoly.empty() || (Pa.flowsegs.add(Pa.flowpoly.front()), Pa.flowsegs.add(Pe));
                                                Pa.flowpoly.add(Pe);
                                                null == sc && (sc = Pa.flowpoly.front());
                                                if (Me) {
                                                    var Qe = 0,
                                                        Re = 0,
                                                        Se = re;
                                                    Qe = Vc.x + (pd.x - Vc.x) * Se;
                                                    Re = Vc.y + (pd.y - Vc.y) * Se;
                                                    Pa.flowpoly.add(kb.get(Qe, Re))
                                                }
                                            }
                                        } Vc = pd;
                                    zc = Mc;
                                    $c = he;
                                    Mc = Mc.next;
                                    null == Mc && (Mc = b.polygon.gverts.begin());
                                    break
                                }
                                for (; Mc != Qd;) {
                                    var Ud = Mc.elem(),
                                        De = $c + 1;
                                    De == b.polygon.edgeCnt && (De = 0);
                                    if (fd[$c])
                                        if (wd[De]) {
                                            var Ee = 0,
                                                Ge = 0;
                                            Ee = Ud.x - Vc.x;
                                            Ge = Ud.y - Vc.y;
                                            var He = 0,
                                                Je = 0;
                                            He = Vc.x - a.circle.worldCOMx;
                                            Je = Vc.y - a.circle.worldCOMy;
                                            var Fe = Ee * Ee + Ge * Ge,
                                                Le = 2 * (He * Ee + Je * Ge),
                                                lf = Math.sqrt(Le * Le - 4 * Fe * (He * He + Je * Je - a.circle.radius * a.circle.radius));
                                            Fe = 1 / (2 * Fe);
                                            var mf = (-Le - lf) * Fe,
                                                Ye = 0,
                                                kf = 0,
                                                qf = mf < K.epsilon ? (-Le + lf) * Fe : mf;
                                            Ye = Vc.x + (Ud.x - Vc.x) * qf;
                                            kf = Vc.y + (Ud.y - Vc.y) * qf;
                                            if (pc.vec_dsq(sc.x, sc.y, Ye, kf) < K.epsilon) {
                                                Xc = 0;
                                                Mc = Qd;
                                                break
                                            }
                                            var vf = kb.get(Ye,
                                                kf);
                                            Pa.flowsegs.add(Pa.flowpoly.front());
                                            Pa.flowsegs.add(vf);
                                            Pa.flowpoly.add(vf);
                                            Xc = 1;
                                            Mc = Qd;
                                            break
                                        } else {
                                            var Ve = 0,
                                                $e = 0,
                                                af = 0,
                                                ff = 0;
                                            af = Ud.x - Vc.x;
                                            ff = Ud.y - Vc.y;
                                            var gf = 0,
                                                hf = 0;
                                            gf = Vc.x - a.circle.worldCOMx;
                                            hf = Vc.y - a.circle.worldCOMy;
                                            var Ue = af * af + ff * ff,
                                                Ze = 2 * (gf * af + hf * ff),
                                                Ne = Ze * Ze - 4 * Ue * (gf * gf + hf * hf - a.circle.radius * a.circle.radius);
                                            if (Ne * Ne < K.epsilon) {
                                                Ve = 0 > Ne ? 10 : $e = -Ze / (2 * Ue);
                                                var Af = !1
                                            } else Ne = Math.sqrt(Ne), Ue = 1 / (2 * Ue), Ve = (-Ze - Ne) * Ue, $e = (-Ze + Ne) * Ue, Af = !0;
                                            if (Ve < 1 - K.epsilon && $e > K.epsilon) {
                                                var tf = 0,
                                                    wf = 0,
                                                    Ef = Ve;
                                                tf = Vc.x +
                                                    (Ud.x - Vc.x) * Ef;
                                                wf = Vc.y + (Ud.y - Vc.y) * Ef;
                                                if (null != sc && pc.vec_dsq(sc.x, sc.y, tf, wf) < K.epsilon) {
                                                    Xc = 0;
                                                    Mc = Qd;
                                                    break
                                                }
                                                var Ff = kb.get(tf, wf);
                                                Pa.flowpoly.empty() || (Pa.flowsegs.add(Pa.flowpoly.front()), Pa.flowsegs.add(Ff));
                                                Pa.flowpoly.add(Ff);
                                                null == sc && (sc = Pa.flowpoly.front());
                                                if (Af) {
                                                    var Jf = 0,
                                                        Kf = 0,
                                                        Lf = $e;
                                                    Jf = Vc.x + (Ud.x - Vc.x) * Lf;
                                                    Kf = Vc.y + (Ud.y - Vc.y) * Lf;
                                                    Pa.flowpoly.add(kb.get(Jf, Kf))
                                                }
                                            }
                                        } Vc = Ud;
                                    zc = Mc;
                                    $c = De;
                                    Mc = Mc.next;
                                    null == Mc && (Mc = b.polygon.gverts.begin())
                                }
                            }
                            if (null == Pa.flowpoly.begin()) return !1;
                            if (null == Pa.flowpoly.begin().next) {
                                for (var Mf = !0, rf = b.polygon.edges.begin(); null != rf;) {
                                    var Bf = rf.elem();
                                    if (Bf.gnormx * a.circle.worldCOMx + Bf.gnormy * a.circle.worldCOMy > Bf.gprojection) {
                                        Mf = !1;
                                        break
                                    }
                                    rf = rf.next
                                }
                                return Mf ? (c.inject(a.circle.area, a.circle.worldCOMx, a.circle.worldCOMy), !0) : !1
                            }
                            var uf = 0,
                                xf = 0,
                                yf = 0;
                            if (null != Pa.flowpoly.begin().next.next) {
                                var Te = 0,
                                    bf = 0,
                                    ef = 0;
                                Te = ef = bf = 0;
                                var de = Pa.flowpoly.begin(),
                                    of = de.elem();
                                de = de.next;
                                var qg = de.elem();
                                for (de = de.next; null != de;) {
                                    var jf = de.elem();
                                    Te += qg.x * (jf.y - of .y);
                                    var Uf = jf.y * qg.x - jf.x * qg.y;
                                    bf += (qg.x + jf.x) *
                                        Uf;
                                    ef += (qg.y + jf.y) * Uf; of = qg;
                                    qg = jf;
                                    de = de.next
                                }
                                de = Pa.flowpoly.begin();
                                var nf = de.elem();
                                Te += qg.x * (nf.y - of .y);
                                var Vf = nf.y * qg.x - nf.x * qg.y;
                                bf += (qg.x + nf.x) * Vf;
                                ef += (qg.y + nf.y) * Vf; of = qg;
                                qg = nf;
                                de = de.next;
                                var sf = de.elem();
                                Te += qg.x * (sf.y - of .y);
                                var Wf = sf.y * qg.x - sf.x * qg.y;
                                bf += (qg.x + sf.x) * Wf;
                                ef += (qg.y + sf.y) * Wf;
                                Te *= .5;
                                var Xf = 1 / (6 * Te);
                                bf *= Xf;
                                ef *= Xf;
                                var Yf = -Te;
                                uf += bf * Yf;
                                xf += ef * Yf;
                                yf -= Te
                            } else Pa.flowsegs.add(Pa.flowpoly.front()), Pa.flowsegs.add(Pa.flowpoly.begin().next.elem());
                            for (; !Pa.flowsegs.empty();) {
                                var Cf = Pa.flowsegs.pop_unsafe(),
                                    Df = Pa.flowsegs.pop_unsafe(),
                                    Zf = 0,
                                    $f = 0;
                                Zf = Df.x - Cf.x;
                                $f = Df.y - Cf.y;
                                var We = 0,
                                    Xe = 0;
                                We = Zf;
                                Xe = $f;
                                var bg = Xd.invsqrt(We * We + Xe * Xe);
                                We *= bg;
                                Xe *= bg;
                                var og = We;
                                We = -Xe;
                                Xe = og;
                                var cf = 0,
                                    df = 0;
                                cf = Cf.x + Df.x;
                                df = Cf.y + Df.y;
                                cf *= .5;
                                df *= .5;
                                cf -= 1 * a.circle.worldCOMx;
                                df -= 1 * a.circle.worldCOMy;
                                var Rf = 0,
                                    eg = 0,
                                    gg = We * cf + Xe * df,
                                    Hf = gg / a.circle.radius,
                                    zf = Math.sqrt(1 - Hf * Hf),
                                    ig = Math.acos(Hf);
                                Rf = a.circle.radius * (a.circle.radius * ig - gg * zf);
                                eg = .6666666666666666 * a.circle.radius * zf * zf * zf / (ig - Hf * zf);
                                cf = a.circle.worldCOMx;
                                df = a.circle.worldCOMy;
                                var jg =
                                    eg;
                                cf += We * jg;
                                df += Xe * jg;
                                var kg = Rf;
                                uf += cf * kg;
                                xf += df * kg;
                                yf += Rf
                            }
                            var lg = 1 / yf;
                            uf *= lg;
                            xf *= lg;
                            c.inject(yf, uf, xf);
                            return !0
                        }
                    }
                    return !1
                }
                var rg = a.circle,
                    xg = b.circle,
                    Nf = 0,
                    Of = 0;
                Nf = xg.worldCOMx - rg.worldCOMx;
                Of = xg.worldCOMy - rg.worldCOMy;
                var mg = rg.radius + xg.radius,
                    ag = Nf * Nf + Of * Of;
                if (ag > mg * mg) return !1;
                if (ag < K.epsilon * K.epsilon) rg.radius < xg.radius ? c.inject(rg.area, rg.worldCOMx, rg.worldCOMy) : c.inject(xg.area, xg.worldCOMx, xg.worldCOMy);
                else {
                    var Pf = Math.sqrt(ag),
                        ng = 1 / Pf,
                        Qf = .5 * (Pf - (xg.radius * xg.radius - rg.radius * rg.radius) *
                            ng);
                    if (Qf <= -rg.radius) c.inject(rg.area, rg.worldCOMx, rg.worldCOMy);
                    else {
                        var cg = Pf - Qf;
                        if (cg <= -xg.radius) c.inject(xg.area, xg.worldCOMx, xg.worldCOMy);
                        else {
                            var dg = 0,
                                pg = 0,
                                fg = 0,
                                sg = 0,
                                Sf = Qf / rg.radius,
                                Gf = Math.sqrt(1 - Sf * Sf),
                                tg = Math.acos(Sf);
                            dg = rg.radius * (rg.radius * tg - Qf * Gf);
                            pg = .6666666666666666 * rg.radius * Gf * Gf * Gf / (tg - Sf * Gf);
                            var Tf = cg / xg.radius,
                                If = Math.sqrt(1 - Tf * Tf),
                                ej = Math.acos(Tf);
                            fg = xg.radius * (xg.radius * ej - cg * If);
                            sg = .6666666666666666 * xg.radius * If * If * If / (ej - Tf * If);
                            var vg = dg + fg,
                                wg = (pg * dg + (Pf - sg) * fg) / vg * ng;
                            c.inject(vg,
                                rg.worldCOMx + Nf * wg, rg.worldCOMy + Of * wg)
                        }
                    }
                }
                return !0
            };
            var Ao = function() {};
            g["zpp_nape.geom.ZPP_Convex"] = Ao;
            Ao.__name__ = ["zpp_nape", "geom", "ZPP_Convex"];
            Ao.isinner = function(a, b, c) {
                var d = a.x - b.x;
                return 0 <= (c.y - b.y) * d - (c.x - b.x) * (a.y - b.y)
            };
            Ao.optimise = function(a) {
                var b = a.vertices,
                    c = a.vertices;
                if (null != b)
                    for (; b.sort(), b = b.next, b != c;);
                a = c = a.vertices;
                if (null != c)
                    for (;;) {
                        b = c;
                        for (var d = b.prev, e = null, f = b.diagonals.begin(); null != f;) {
                            var h = f.elem(),
                                k = null == f.next ? b.next : f.next.elem();
                            if (Ao.isinner(k, b, d)) {
                                var m = !0;
                                k = h;
                                for (var g = k.prev, l = null, n = k.diagonals.begin(); null != n;) {
                                    var p = n.elem();
                                    if (p == b) {
                                        m = null == n.next ? k.next : n.next.elem();
                                        m = Ao.isinner(m, k, g);
                                        break
                                    }
                                    g = p;
                                    l = n;
                                    n = n.next
                                }
                                m ? (f = b.diagonals.erase(e), k.diagonals.erase(l)) : (d = h, e = f, f = f.next)
                            } else e = f, d = h, f = f.next
                        }
                        c = c.next;
                        if (c == a) break
                    }
            };
            var Aw = function() {
                this.toiDistance = 0;
                this.inner = !1;
                this.shape = null
            };
            g["zpp_nape.geom.ZPP_ConvexRayResult"] = Aw;
            Aw.__name__ = ["zpp_nape", "geom", "ZPP_ConvexRayResult"];
            Aw.prototype = {
                shape: null,
                inner: null,
                toiDistance: null,
                __class__: Aw
            };
            var zo = function() {};
            g["zpp_nape.geom.ZPP_Geom"] = zo;
            zo.__name__ = ["zpp_nape", "geom", "ZPP_Geom"];
            zo.validateShape = function(a) {
                a.isPolygon() && a.polygon.validate_gaxi();
                a.validate_aabb();
                a.validate_worldCOM()
            };
            var Ef = function() {
                this.forced = !1;
                this.prev = this.next = this.wrap = null;
                this.x = this.y = 0
            };
            g["zpp_nape.geom.ZPP_GeomVert"] = Ef;
            Ef.__name__ = ["zpp_nape", "geom", "ZPP_GeomVert"];
            Ef.get = function(a, b) {
                if (null == Ef.zpp_pool) var c = new Ef;
                else c = Ef.zpp_pool, Ef.zpp_pool = c.next, c.next = null;
                c.alloc();
                c.x = a;
                c.y = b;
                return c
            };
            Ef.prototype = {
                x: null,
                y: null,
                prev: null,
                next: null,
                wrap: null,
                forced: null,
                free: function() {
                    null != this.wrap && (this.wrap.zpp_inner._inuse = !1, this.wrap.dispose(), this.wrap = null);
                    this.prev = this.next = null
                },
                alloc: function() {
                    this.forced = !1
                },
                wrapper: function() {
                    null == this.wrap && (this.wrap = Wa.get(this.x, this.y), this.wrap.zpp_inner._inuse = !0, this.wrap.zpp_inner._invalidate = q(this, this.modwrap), this.wrap.zpp_inner._validate = q(this, this.getwrap));
                    return this.wrap
                },
                modwrap: function(a) {
                    this.x = a.x;
                    this.y = a.y
                },
                getwrap: function() {
                    this.wrap.zpp_inner.x =
                        this.x;
                    this.wrap.zpp_inner.y = this.y
                },
                __class__: Ef
            };
            var Pu = function(a) {
                this.outer = this.vertices = null;
                this.outer = a
            };
            g["zpp_nape.geom.ZPP_GeomPoly"] = Pu;
            Pu.__name__ = ["zpp_nape", "geom", "ZPP_GeomPoly"];
            Pu.prototype = {
                outer: null,
                vertices: null,
                __class__: Pu
            };
            var $h = function() {
                this.outer = this.next = null;
                this.first = this.forward = !1;
                this.ptr = this.start = null;
                this.outer = new Ru
            };
            g["zpp_nape.geom.ZPP_GeomVertexIterator"] = $h;
            $h.__name__ = ["zpp_nape", "geom", "ZPP_GeomVertexIterator"];
            $h.get = function(a, b) {
                if (null == $h.zpp_pool) var c =
                    new $h;
                else c = $h.zpp_pool, $h.zpp_pool = c.next, c.next = null;
                c.alloc();
                c.outer.zpp_inner = c;
                c.ptr = a;
                c.forward = b;
                c.start = a;
                c.first = null != a;
                return c.outer
            };
            $h.prototype = {
                ptr: null,
                start: null,
                first: null,
                forward: null,
                outer: null,
                next: null,
                free: function() {
                    this.ptr = this.start = this.outer.zpp_inner = null
                },
                alloc: function() {},
                __class__: $h
            };
            var uj = function() {
                this._invalidate = this.next = null;
                this.a = this.b = this.c = this.d = this.tx = this.ty = 0;
                this.outer = null
            };
            g["zpp_nape.geom.ZPP_Mat23"] = uj;
            uj.__name__ = ["zpp_nape", "geom", "ZPP_Mat23"];
            uj.get = function() {
                if (null == uj.zpp_pool) var a = new uj;
                else a = uj.zpp_pool, uj.zpp_pool = a.next, a.next = null;
                a.alloc();
                return a
            };
            uj.prototype = {
                outer: null,
                a: null,
                b: null,
                c: null,
                d: null,
                tx: null,
                ty: null,
                _invalidate: null,
                invalidate: function() {
                    null != this._invalidate && this._invalidate()
                },
                next: null,
                alloc: function() {},
                __class__: uj
            };
            var Bw = function() {
                this.x = null;
                this.m = this.n = 0
            };
            g["zpp_nape.geom.ZPP_MatMN"] = Bw;
            Bw.__name__ = ["zpp_nape", "geom", "ZPP_MatMN"];
            Bw.prototype = {
                m: null,
                n: null,
                x: null,
                __class__: Bw
            };
            var ec = function() {};
            g["zpp_nape.geom.ZPP_Monotone"] = ec;
            ec.__name__ = ["zpp_nape", "geom", "ZPP_Monotone"];
            ec.bisector = function(a) {
                var b = a.prev,
                    c = a.next;
                var d = a.x - b.x;
                b = a.y - b.y;
                var e = c.x - a.x;
                a = c.y - a.y;
                c = kb.get(-b - a, d + e);
                var f = Xd.invsqrt(c.x * c.x + c.y * c.y);
                c.x *= f;
                c.y *= f;
                0 > a * d - e * b && (c.x = -c.x, c.y = -c.y);
                return c
            };
            ec.below = function(a, b) {
                if (a.y < b.y) return !0;
                if (a.y > b.y) return !1;
                if (a.x < b.x) return !0;
                if (a.x > b.x) return !1;
                var c = ec.bisector(a),
                    d = ec.bisector(b);
                c.x += 1 * a.x;
                c.y += 1 * a.y;
                d.x += 1 * b.x;
                d.y += 1 * b.y;
                a = c.x < d.x || c.x == d.x && c.y < d.y;
                c.free();
                c.next = kb.zpp_pool;
                kb.zpp_pool = c;
                d.free();
                d.next = kb.zpp_pool;
                kb.zpp_pool = d;
                return a
            };
            ec.above = function(a, b) {
                return ec.below(b, a)
            };
            ec.left_vertex = function(a) {
                var b = a.prev;
                return b.y > a.y ? !0 : b.y == a.y ? a.next.y < a.y : !1
            };
            ec.getShared = function() {
                null == ec.sharedPPoly && (ec.sharedPPoly = new Ud);
                return ec.sharedPPoly
            };
            ec.decompose = function(a, b) {
                null == b ? b = new Ud(a) : b.init(a);
                if (null == b.vertices) return b;
                null == ec.queue && (ec.queue = new Ol);
                var c = b.vertices;
                a = b.vertices;
                if (null != c)
                    for (;;) {
                        var d = c;
                        ec.queue.add(d);
                        var e =
                            d.next.x - d.x;
                        e = 0 < (d.prev.y - d.y) * e - (d.prev.x - d.x) * (d.next.y - d.y);
                        d.type = ec.below(d.prev, d) ? ec.below(d.next, d) ? e ? 0 : 3 : 4 : ec.below(d, d.next) ? e ? 1 : 2 : 4;
                        c = c.next;
                        if (c == a) break
                    }
                a = ec.queue;
                if (!a.empty() && null != a.begin().next) {
                    c = a.begin();
                    for (var f, h, k = 1, m, g, l;;) {
                        m = 0;
                        e = c;
                        for (d = c = null; null != e;) {
                            ++m;
                            f = e;
                            g = 0;
                            for (l = k; null != f && g < k;) ++g, f = f.next;
                            for (; 0 < g || 0 < l && null != f;) 0 == g ? (h = f, f = f.next, --l) : 0 == l || null == f ? (h = e, e = e.next, --g) : ec.above(e.elem(), f.elem()) ? (h = e, e = e.next, --g) : (h = f, f = f.next, --l), null != d ? d.next = h : c = h, d = h;
                            e = f
                        }
                        d.next = null;
                        k <<= 1;
                        if (!(1 < m)) break
                    }
                    a.setbegin(c)
                }
                null == ec.edges && (null == Wg.zpp_pool ? ec.edges = new Wg : (ec.edges = Wg.zpp_pool, Wg.zpp_pool = ec.edges.next, ec.edges.next = null), ec.edges.alloc(), ec.edges.lt = nb.edge_lt, ec.edges.swapped = nb.edge_swap);
                for (; !ec.queue.empty();) switch (a = ec.queue.pop_unsafe(), a.type) {
                    case 0:
                        a.helper = a;
                        a.node = ec.edges.insert(a);
                        break;
                    case 1:
                        c = a.prev;
                        2 == c.helper.type && b.add_diagonal(a, c.helper);
                        ec.edges.remove_node(c.node);
                        break;
                    case 2:
                        c = a.prev;
                        2 == c.helper.type && b.add_diagonal(a,
                            c.helper);
                        ec.edges.remove_node(c.node);
                        c = null;
                        if (!ec.edges.empty()) {
                            for (d = ec.edges.parent; null != d.prev;) d = d.prev;
                            for (; null != d;) {
                                e = d.data;
                                if (!nb.vert_lt(e, a)) {
                                    c = e;
                                    break
                                }
                                if (null != d.next)
                                    for (d = d.next; null != d.prev;) d = d.prev;
                                else {
                                    for (; null != d.parent && d == d.parent.next;) d = d.parent;
                                    d = d.parent
                                }
                            }
                        }
                        null != c && (2 == c.helper.type && b.add_diagonal(a, c.helper), c.helper = a);
                        break;
                    case 3:
                        c = null;
                        if (!ec.edges.empty()) {
                            for (d = ec.edges.parent; null != d.prev;) d = d.prev;
                            for (; null != d;) {
                                e = d.data;
                                if (!nb.vert_lt(e, a)) {
                                    c = e;
                                    break
                                }
                                if (null !=
                                    d.next)
                                    for (d = d.next; null != d.prev;) d = d.prev;
                                else {
                                    for (; null != d.parent && d == d.parent.next;) d = d.parent;
                                    d = d.parent
                                }
                            }
                        }
                        null != c && (b.add_diagonal(a, c.helper), c.helper = a);
                        a.node = ec.edges.insert(a);
                        a.helper = a;
                        break;
                    case 4:
                        if (c = a.prev, ec.left_vertex(a)) 2 == c.helper.type && b.add_diagonal(a, c.helper), ec.edges.remove_node(c.node), a.node = ec.edges.insert(a), a.helper = a;
                        else {
                            c = null;
                            if (!ec.edges.empty()) {
                                for (d = ec.edges.parent; null != d.prev;) d = d.prev;
                                for (; null != d;) {
                                    e = d.data;
                                    if (!nb.vert_lt(e, a)) {
                                        c = e;
                                        break
                                    }
                                    if (null != d.next)
                                        for (d =
                                            d.next; null != d.prev;) d = d.prev;
                                    else {
                                        for (; null != d.parent && d == d.parent.next;) d = d.parent;
                                        d = d.parent
                                    }
                                }
                            }
                            2 == c.helper.type && b.add_diagonal(a, c.helper);
                            c.helper = a
                        }
                }
                return b
            };
            var nb = function() {
                this.next = this.prev = this.node = null;
                this.rightchain = !1;
                this.helper = null;
                this.type = 0;
                this.diagonals = null;
                this.forced = !1;
                this.id = this.mag = this.x = this.y = 0;
                this.id = nb.nextId++;
                this.diagonals = new Ol
            };
            g["zpp_nape.geom.ZPP_PartitionVertex"] = nb;
            nb.__name__ = ["zpp_nape", "geom", "ZPP_PartitionVertex"];
            nb.get = function(a) {
                if (null ==
                    nb.zpp_pool) var b = new nb;
                else b = nb.zpp_pool, nb.zpp_pool = b.next, b.next = null;
                b.alloc();
                b.x = a.x;
                b.y = a.y;
                return b
            };
            nb.rightdistance = function(a, b) {
                var c = a.next.y > a.y;
                var d = a.next.x - a.x;
                return (c ? -1 : 1) * ((b.y - a.y) * d - (b.x - a.x) * (a.next.y - a.y))
            };
            nb.vert_lt = function(a, b) {
                if (b == a || b == a.next) return !0;
                if (a.y == a.next.y) {
                    var c = a.x;
                    a = a.next.x;
                    return (c < a ? c : a) <= b.x
                }
                return 0 >= nb.rightdistance(a, b)
            };
            nb.edge_swap = function(a, b) {
                var c = a.node;
                a.node = b.node;
                b.node = c
            };
            nb.edge_lt = function(a, b) {
                if (a == b && a.next == b.next) return !1;
                if (a == b.next) return !nb.vert_lt(a, b);
                if (b == a.next) return nb.vert_lt(b, a);
                if (a.y == a.next.y) {
                    if (b.y == b.next.y) {
                        var c = a.x;
                        a = a.next.x;
                        var d = b.x;
                        b = b.next.x;
                        return (c > a ? c : a) > (d > b ? d : b)
                    }
                    return 0 < nb.rightdistance(b, a) ? !0 : 0 < nb.rightdistance(b, a.next)
                }
                c = nb.rightdistance(a, b);
                d = nb.rightdistance(a, b.next);
                if (0 == c && 0 == d) return c = a.x, a = a.next.x, d = b.x, b = b.next.x, (c > a ? c : a) > (d > b ? d : b);
                if (0 <= c * d) return 0 > c ? !0 : 0 > d;
                c = nb.rightdistance(b, a);
                b = nb.rightdistance(b, a.next);
                return 0 <= c * b ? 0 < c ? !0 : 0 < b : !1
            };
            nb.prototype = {
                id: null,
                mag: null,
                x: null,
                y: null,
                forced: null,
                diagonals: null,
                type: null,
                helper: null,
                rightchain: null,
                next: null,
                prev: null,
                alloc: function() {},
                free: function() {
                    this.helper = null
                },
                copy: function() {
                    if (null == nb.zpp_pool) var a = new nb;
                    else a = nb.zpp_pool, nb.zpp_pool = a.next, a.next = null;
                    a.alloc();
                    a.x = this.x;
                    a.y = this.y;
                    a.forced = this.forced;
                    return a
                },
                sort: function() {
                    var a = this.prev.x - this.x;
                    var b = this.prev.y - this.y;
                    var c = this.next.x - this.x;
                    var d = this.next.y - this.y;
                    var e = d * a - c * b;
                    e = 0 < e ? -1 : 0 == e ? 0 : 1;
                    var f = this.diagonals;
                    if (!f.empty() && null !=
                        f.begin().next) {
                        for (var h = f.begin(), k, m, g, l, n = 1, p, x, u;;) {
                            p = 0;
                            m = h;
                            for (k = h = null; null != m;) {
                                ++p;
                                g = m;
                                x = 0;
                                for (u = n; null != g && x < n;) ++x, g = g.next;
                                for (; 0 < x || 0 < u && null != g;) 0 == x ? (l = g, g = g.next, --u) : 0 == u || null == g ? (l = m, m = m.next, --x) : (1 == e ? (a = m.elem().x - this.x, b = m.elem().y - this.y, c = g.elem().x - this.x, d = g.elem().y - this.y, l = d * a - c * b, l = 1 == (0 < l ? -1 : 0 == l ? 0 : 1)) : (a = this.prev.x - this.x, b = this.prev.y - this.y, c = m.elem().x - this.x, d = m.elem().y - this.y, l = d * a - c * b, l = 0 < l ? -1 : 0 == l ? 0 : 1, a = this.prev.x - this.x, b = this.prev.y - this.y, c = g.elem().x -
                                    this.x, d = g.elem().y - this.y, a = d * a - c * b, a = 0 < a ? -1 : 0 == a ? 0 : 1, 1 == l * a || 0 == l * a && (1 == l || 1 == a) ? (a = m.elem().x - this.x, b = m.elem().y - this.y, c = g.elem().x - this.x, d = g.elem().y - this.y, l = d * a - c * b, l = 1 == (0 < l ? -1 : 0 == l ? 0 : 1)) : -1 == l || -1 == a ? l = -1 == a : 0 == l && 0 == a ? (a = this.x - this.prev.x, b = this.y - this.prev.y, c = m.elem().x - this.x, d = m.elem().y - this.y, l = a * c + b * d, c = g.elem().x - this.x, d = g.elem().y - this.y, a = a * c + b * d, l = 0 > l && 0 < a ? !0 : 0 > a && 0 < l ? !1 : !0) : l = !0), l ? (l = m, m = m.next, --x) : (l = g, g = g.next, --u)), null != k ? k.next = l : h = l, k = l;
                                m = g
                            }
                            k.next = null;
                            n <<= 1;
                            if (!(1 <
                                    p)) break
                        }
                        f.setbegin(h)
                    }
                },
                node: null,
                __class__: nb
            };
            var Ud = function(a) {
                this.vertices = this.next = null;
                this.init(a)
            };
            g["zpp_nape.geom.ZPP_PartitionedPoly"] = Ud;
            Ud.__name__ = ["zpp_nape", "geom", "ZPP_PartitionedPoly"];
            Ud.getSharedPP = function() {
                null == Ud.sharedPPList && (Ud.sharedPPList = new as);
                return Ud.sharedPPList
            };
            Ud.getShared = function() {
                null == Ud.sharedGVList && (Ud.sharedGVList = new bs);
                return Ud.sharedGVList
            };
            Ud.prototype = {
                vertices: null,
                eq: function(a, b) {
                    return pc.vec_dsq(a.x, a.y, b.x, b.y) < K.epsilon * K.epsilon
                },
                next: null,
                alloc: function() {},
                free: function() {},
                init: function(a) {
                    if (null != a) {
                        var b = 0;
                        if (null != a)
                            for (var c = a;;) {
                                var d = c;
                                b += d.x * (d.next.y - d.prev.y);
                                c = c.next;
                                if (c == a) break
                            }
                        b = 0 < .5 * b;
                        for (c = a; b ? (d = nb.get(c), null == this.vertices ? this.vertices = d.prev = d.next = d : (d.prev = this.vertices, d.next = this.vertices.next, this.vertices.next.prev = d, this.vertices.next = d)) : (d = nb.get(c), null == this.vertices ? this.vertices = d.prev = d.next = d : (d.next = this.vertices, d.prev = this.vertices.prev, this.vertices.prev.next = d, this.vertices.prev =
                                d)), this.vertices = d, this.vertices.forced = c.forced, c = c.next, c != a;);
                        this.remove_collinear_vertices()
                    }
                },
                remove_collinear_vertices: function() {
                    for (var a = this.vertices, b = !0; b || a != this.vertices;)
                        if (b = !1, this.eq(a, a.next)) {
                            a == this.vertices && (this.vertices = a.next, b = !0);
                            a.forced && (a.next.forced = !0);
                            if (null != a && a.prev == a) a.next = a.prev = null, a.free(), a.next = nb.zpp_pool, nb.zpp_pool = a, a = null;
                            else {
                                var c = a.next;
                                a.prev.next = a.next;
                                a.next.prev = a.prev;
                                a.next = a.prev = null;
                                a.free();
                                a.next = nb.zpp_pool;
                                nb.zpp_pool = a;
                                a = c
                            }
                            if (null ==
                                a) {
                                this.vertices = null;
                                break
                            }
                        } else a = a.next;
                    if (null == this.vertices) return !0;
                    for (;;) {
                        c = !1;
                        a = this.vertices;
                        for (b = !0; b || a != this.vertices;) {
                            b = !1;
                            var d = a.prev;
                            var e = a.x - d.x;
                            d = (a.next.y - a.y) * e - (a.next.x - a.x) * (a.y - d.y);
                            if (d * d >= K.epsilon * K.epsilon) a = a.next;
                            else if (a == this.vertices && (this.vertices = a.next, b = !0), null != a && a.prev == a ? (a.next = a.prev = null, a.free(), a.next = nb.zpp_pool, nb.zpp_pool = a, a = null) : (c = a.next, a.prev.next = a.next, a.next.prev = a.prev, a.next = a.prev = null, a.free(), a.next = nb.zpp_pool, nb.zpp_pool = a, a =
                                    c), c = !0, null == a) {
                                c = !1;
                                this.vertices = null;
                                break
                            }
                        }
                        if (!c) break
                    }
                    return null == this.vertices
                },
                add_diagonal: function(a, b) {
                    a.diagonals.add(b);
                    b.diagonals.add(a);
                    a.forced = b.forced = !0
                },
                extract_partitions: function(a) {
                    null == a && (a = new as);
                    if (null != this.vertices) {
                        var b = this.vertices,
                            c = this.vertices;
                        if (null != b)
                            for (; b.sort(), b = b.next, b != c;);
                        for (this.pull_partitions(this.vertices, a); null != this.vertices;) null != this.vertices && this.vertices.prev == this.vertices ? (this.vertices.next = this.vertices.prev = null, c = this.vertices,
                            c.free(), c.next = nb.zpp_pool, nb.zpp_pool = c, c = this.vertices = null) : (c = this.vertices.next, this.vertices.prev.next = this.vertices.next, this.vertices.next.prev = this.vertices.prev, this.vertices.next = this.vertices.prev = null, b = this.vertices, b.free(), b.next = nb.zpp_pool, nb.zpp_pool = b, this.vertices = null), this.vertices = c;
                        c = null;
                        for (b = a.begin(); null != b;) b.elem().remove_collinear_vertices() ? a.erase(c) : (c = b, b = b.next)
                    }
                    return a
                },
                pull_partitions: function(a, b) {
                    if (null == Ud.zpp_pool) var c = new Ud;
                    else c = Ud.zpp_pool, Ud.zpp_pool =
                        c.next, c.next = null;
                    c.alloc();
                    for (var d = a;;) {
                        var e = d.copy();
                        null == c.vertices ? c.vertices = e.prev = e.next = e : (e.prev = c.vertices, e.next = c.vertices.next, c.vertices.next.prev = e, c.vertices.next = e);
                        c.vertices = e;
                        c.vertices.forced = d.forced;
                        if (d.diagonals.empty()) d = d.next;
                        else if (d.diagonals.inlined_pop_unsafe() == a) break;
                        else d = this.pull_partitions(d, b);
                        if (d == a) break
                    }
                    a = 0;
                    var f = c.vertices;
                    e = c.vertices;
                    if (null != f)
                        for (;;) {
                            var h = f;
                            a += h.x * (h.next.y - h.prev.y);
                            f = f.next;
                            if (f == e) break
                        }
                    0 != .5 * a && b.add(c);
                    return d
                },
                extract: function(a) {
                    null ==
                        a && (a = new bs);
                    if (null != this.vertices) {
                        var b = this.vertices,
                            c = this.vertices;
                        if (null != b)
                            for (; b.sort(), b = b.next, b != c;);
                        for (this.pull(this.vertices, a); null != this.vertices;) null != this.vertices && this.vertices.prev == this.vertices ? (this.vertices.next = this.vertices.prev = null, c = this.vertices, c.free(), c.next = nb.zpp_pool, nb.zpp_pool = c, c = this.vertices = null) : (c = this.vertices.next, this.vertices.prev.next = this.vertices.next, this.vertices.next.prev = this.vertices.prev, this.vertices.next = this.vertices.prev = null, b = this.vertices,
                            b.free(), b.next = nb.zpp_pool, nb.zpp_pool = b, this.vertices = null), this.vertices = c
                    }
                    return a
                },
                pull: function(a, b) {
                    for (var c = null, d = a;;) {
                        var e = Ef.get(d.x, d.y);
                        null == c ? e.prev = e.next = e : (e.prev = c, e.next = c.next, c.next.prev = e, c.next = e);
                        c = e;
                        c.forced = d.forced;
                        if (d.diagonals.empty()) d = d.next;
                        else if (d.diagonals.inlined_pop_unsafe() == a) break;
                        else d = this.pull(d, b);
                        if (d == a) break
                    }
                    a = 0;
                    var f = c;
                    e = c;
                    if (null != f)
                        for (;;) {
                            var h = f;
                            a += h.x * (h.next.y - h.prev.y);
                            f = f.next;
                            if (f == e) break
                        }
                    a *= .5;
                    if (a * a >= K.epsilon * K.epsilon) {
                        a = c;
                        for (e = !0; e || a != c;)
                            if (e = !1, pc.vec_dsq(a.x, a.y, a.next.x, a.next.y) < K.epsilon * K.epsilon) {
                                if (a == c && (c = a.next, e = !0), a.forced && (a.next.forced = !0), null != a && a.prev == a ? a = a.next = a.prev = null : (f = a.next, a.prev.next = a.next, a.next.prev = a.prev, a.next = a.prev = null, a = f), null == a) {
                                    c = null;
                                    break
                                }
                            } else a = a.next;
                        if (null != c)
                            for (;;) {
                                f = !1;
                                a = c;
                                for (e = !0; e || a != c;) {
                                    e = !1;
                                    h = a.prev;
                                    var k = a.x - h.x;
                                    h = (a.next.y - a.y) * k - (a.next.x - a.x) * (a.y - h.y);
                                    if (h * h >= K.epsilon * K.epsilon) a = a.next;
                                    else if (a == c && (c = a.next, e = !0), null != a && a.prev == a ? a = a.next = a.prev =
                                        null : (f = a.next, a.prev.next = a.next, a.next.prev = a.prev, a.next = a.prev = null, a = f), f = !0, null == a) {
                                        f = !1;
                                        c = null;
                                        break
                                    }
                                }
                                if (!f) break
                            }
                        null != c && b.add(c)
                    }
                    return d
                },
                __class__: Ud
            };
            var Xg = function() {
                this.next = this.node = null;
                this.id = 0;
                this.links = null;
                this.x = this.y = 0;
                this.forced = !1;
                this.id = Od.ZPP_SimpleVert();
                null == of .zpp_pool ? this.links = new of : (this.links = of .zpp_pool, of .zpp_pool = this.links.next, this.links.next = null);
                this.links.alloc();
                this.links.lt = Xg.less_xy
            };
            g["zpp_nape.geom.ZPP_SimpleVert"] = Xg;
            Xg.__name__ = ["zpp_nape",
                "geom", "ZPP_SimpleVert"
            ];
            Xg.less_xy = function(a, b) {
                return a.y < b.y ? !0 : a.y == b.y ? a.x < b.x : !1
            };
            Xg.get = function(a, b) {
                if (null == Xg.zpp_pool) var c = new Xg;
                else c = Xg.zpp_pool, Xg.zpp_pool = c.next, c.next = null;
                c.alloc();
                c.x = a;
                c.y = b;
                return c
            };
            Xg.prototype = {
                forced: null,
                x: null,
                y: null,
                links: null,
                id: null,
                next: null,
                node: null,
                free: function() {
                    this.links.clear();
                    this.node = null;
                    this.forced = !1
                },
                alloc: function() {},
                __class__: Xg
            };
            var gg = function() {
                this.next = this.prev = this.node = null;
                this.id = 0;
                this.left = this.right = this.vertices =
                    null;
                this.id = Od.ZPP_SimpleSeg();
                null == of .zpp_pool ? this.vertices = new of : (this.vertices = of .zpp_pool, of .zpp_pool = this.vertices.next, this.vertices.next = null);
                this.vertices.alloc();
                this.vertices.lt = q(this, this.less_xy)
            };
            g["zpp_nape.geom.ZPP_SimpleSeg"] = gg;
            gg.__name__ = ["zpp_nape", "geom", "ZPP_SimpleSeg"];
            gg.get = function(a, b) {
                if (null == gg.zpp_pool) var c = new gg;
                else c = gg.zpp_pool, gg.zpp_pool = c.next, c.next = null;
                c.alloc();
                c.left = a;
                c.right = b;
                c.vertices.insert(a);
                c.vertices.insert(b);
                return c
            };
            gg.prototype = {
                left: null,
                right: null,
                vertices: null,
                id: null,
                next: null,
                free: function() {
                    this.node = this.prev = this.left = this.right = null;
                    this.vertices.clear()
                },
                alloc: function() {},
                prev: null,
                node: null,
                less_xy: function(a, b) {
                    return a.x < b.x ? !0 : a.x == b.x ? a.y < b.y : !1
                },
                __class__: gg
            };
            var De = function() {
                this.vertex = this.segment = this.segment2 = this.node = this.next = null;
                this.type = 0
            };
            g["zpp_nape.geom.ZPP_SimpleEvent"] = De;
            De.__name__ = ["zpp_nape", "geom", "ZPP_SimpleEvent"];
            De.less_xy = function(a, b) {
                return a.vertex.x < b.vertex.x ? !0 : a.vertex.x > b.vertex.x ?
                    !1 : a.vertex.y < b.vertex.y ? !0 : a.vertex.y > b.vertex.y ? !1 : a.type < b.type
            };
            De.get = function(a) {
                if (null == De.zpp_pool) var b = new De;
                else b = De.zpp_pool, De.zpp_pool = b.next, b.next = null;
                b.alloc();
                b.vertex = a;
                return b
            };
            De.prototype = {
                type: null,
                vertex: null,
                segment: null,
                segment2: null,
                node: null,
                next: null,
                free: function() {
                    this.node = this.segment = this.segment2 = this.vertex = null
                },
                alloc: function() {},
                __class__: De
            };
            var wv = function() {
                this.tree = null;
                this.sweepx = 0;
                null == sg.zpp_pool ? this.tree = new sg : (this.tree = sg.zpp_pool, sg.zpp_pool =
                    this.tree.next, this.tree.next = null);
                this.tree.alloc();
                this.tree.lt = q(this, this.edge_lt);
                this.tree.swapped = q(this, this.swap_nodes)
            };
            g["zpp_nape.geom.ZPP_SimpleSweep"] = wv;
            wv.__name__ = ["zpp_nape", "geom", "ZPP_SimpleSweep"];
            wv.prototype = {
                sweepx: null,
                tree: null,
                swap_nodes: function(a, b) {
                    var c = a.node;
                    a.node = b.node;
                    b.node = c
                },
                edge_lt: function(a, b) {
                    if (a.left == b.left && a.right == b.right) return !1;
                    if (a.left == b.right) {
                        if (a.left.x == a.right.x) return a.left.y < a.right.y ? a.left.y > b.left.y : a.right.y > b.left.y;
                        var c = a.right.x <
                            a.left.x;
                        var d = a.right.x - a.left.x;
                        var e = a.right.y - a.left.y;
                        var f = b.left.x - a.left.x;
                        var h = b.left.y - a.left.y;
                        return 0 > (c ? e * f - d * h : h * d - f * e)
                    }
                    if (a.right == b.left) return b.left.x == b.right.x ? a = b.left.y < b.right.y ? b.left.y > a.left.y : b.right.y > a.left.y : (c = b.right.x < b.left.x, d = b.right.x - b.left.x, e = b.right.y - b.left.y, f = a.left.x - b.left.x, h = a.left.y - b.left.y, a = 0 > (c ? e * f - d * h : h * d - f * e)), !a;
                    if (a.left == b.left) {
                        if (a.left.x == a.right.x) return a.left.y < a.right.y ? a.left.y > b.right.y : a.right.y > b.right.y;
                        c = a.right.x < a.left.x;
                        d =
                            a.right.x - a.left.x;
                        e = a.right.y - a.left.y;
                        f = b.right.x - a.left.x;
                        h = b.right.y - a.left.y;
                        return 0 > (c ? e * f - d * h : h * d - f * e)
                    }
                    if (a.right == b.right) {
                        if (a.left.x == a.right.x) return a.left.y < a.right.y ? a.left.y > b.left.y : a.right.y > b.left.y;
                        c = a.right.x < a.left.x;
                        d = a.right.x - a.left.x;
                        e = a.right.y - a.left.y;
                        f = b.left.x - a.left.x;
                        h = b.left.y - a.left.y;
                        return 0 > (c ? e * f - d * h : h * d - f * e)
                    }
                    if (a.left.x == a.right.x) {
                        if (b.left.x == b.right.x) return (a.left.y < a.right.y ? a.right : a.left).y > (b.left.y < b.right.y ? b.right : b.left).y;
                        c = b.right.x < b.left.x;
                        d =
                            b.right.x - b.left.x;
                        e = b.right.y - b.left.y;
                        f = a.left.x - b.left.x;
                        h = a.left.y - b.left.y;
                        var k = c ? e * f - d * h : h * d - f * e;
                        c = b.right.x < b.left.x;
                        d = b.right.x - b.left.x;
                        e = b.right.y - b.left.y;
                        f = a.right.x - b.left.x;
                        h = a.right.y - b.left.y;
                        return 0 <= k * (c ? e * f - d * h : h * d - f * e) ? 0 <= k : this.sweepx >= a.left.x
                    }
                    if (b.left.x == b.right.x) return c = a.right.x < a.left.x, d = a.right.x - a.left.x, e = a.right.y - a.left.y, f = b.left.x - a.left.x, h = b.left.y - a.left.y, k = c ? e * f - d * h : h * d - f * e, c = a.right.x < a.left.x, d = a.right.x - a.left.x, e = a.right.y - a.left.y, f = b.right.x - a.left.x,
                        h = b.right.y - a.left.y, 0 <= k * (c ? e * f - d * h : h * d - f * e) ? 0 > k : this.sweepx < b.left.x;
                    c = a.right.x < a.left.x;
                    d = a.right.x - a.left.x;
                    e = a.right.y - a.left.y;
                    f = b.left.x - a.left.x;
                    h = b.left.y - a.left.y;
                    k = 0 > (c ? e * f - d * h : h * d - f * e);
                    c = a.right.x < a.left.x;
                    d = a.right.x - a.left.x;
                    e = a.right.y - a.left.y;
                    f = b.right.x - a.left.x;
                    h = b.right.y - a.left.y;
                    if (k == 0 > (c ? e * f - d * h : h * d - f * e)) return k;
                    c = b.right.x < b.left.x;
                    d = b.right.x - b.left.x;
                    e = b.right.y - b.left.y;
                    f = a.left.x - b.left.x;
                    h = a.left.y - b.left.y;
                    k = 0 <= (c ? e * f - d * h : h * d - f * e);
                    c = b.right.x < b.left.x;
                    d = b.right.x -
                        b.left.x;
                    e = b.right.y - b.left.y;
                    f = a.right.x - b.left.x;
                    h = a.right.y - b.left.y;
                    return k == 0 <= (c ? e * f - d * h : h * d - f * e) ? k : (this.sweepx - a.left.x) / (a.right.x - a.left.x) * (a.right.y - a.left.y) + a.left.y > (this.sweepx - b.left.x) / (b.right.x - b.left.x) * (b.right.y - b.left.y) + b.left.y
                },
                clear: function() {
                    this.tree.clear()
                },
                add: function(a) {
                    a.node = this.tree.insert(a);
                    var b = this.tree.successor_node(a.node),
                        c = this.tree.predecessor_node(a.node);
                    null != b && (a.next = b.data, b.data.prev = a);
                    null != c && (a.prev = c.data, c.data.next = a);
                    return a
                },
                remove: function(a) {
                    var b =
                        this.tree.successor_node(a.node),
                        c = this.tree.predecessor_node(a.node);
                    null != b && (b.data.prev = a.prev);
                    null != c && (c.data.next = a.next);
                    this.tree.remove_node(a.node);
                    a.node = null
                },
                intersect: function(a, b) {
                    return null == a || null == b || a.left == b.left || a.left == b.right || a.right == b.left || a.right == b.right || 0 < ((b.left.x - a.left.x) * (a.right.y - a.left.y) - (a.right.x - a.left.x) * (b.left.y - a.left.y)) * ((b.right.x - a.left.x) * (a.right.y - a.left.y) - (a.right.x - a.left.x) * (b.right.y - a.left.y)) ? !1 : 0 < ((a.left.x - b.left.x) * (b.right.y - b.left.y) -
                        (b.right.x - b.left.x) * (a.left.y - b.left.y)) * ((a.right.x - b.left.x) * (b.right.y - b.left.y) - (b.right.x - b.left.x) * (a.right.y - b.left.y)) ? !1 : !0
                },
                __class__: wv
            };
            var Xe = function() {};
            g["zpp_nape.geom.ZPP_Simple"] = Xe;
            Xe.__name__ = ["zpp_nape", "geom", "ZPP_Simple"];
            Xe.isSimple = function(a) {
                null == Xe.sweep && (Xe.sweep = new wv, Xe.inthash = new xv);
                var b = Xe.list_vertices;
                null == b && (b = Xe.list_vertices = new yv);
                if (null != a)
                    for (var c = a;;) {
                        var d = c;
                        b.add(Xg.get(d.x, d.y));
                        c = c.next;
                        if (c == a) break
                    }
                a = Xe.list_queue;
                null == a && (a = Xe.list_queue =
                    new zv);
                d = b.begin();
                c = d.elem();
                for (d = d.next; null != d;) {
                    var e = d.elem(),
                        f = a.add(De.get(c)),
                        h = a.add(De.get(e));
                    De.less_xy(f, h) ? (f.type = 1, h.type = 2, c = gg.get(c, e)) : (f.type = 2, h.type = 1, c = gg.get(e, c));
                    f.segment = h.segment = c;
                    c = e;
                    d = d.next
                }
                f = b.front();
                d = a.add(De.get(c));
                e = a.add(De.get(f));
                De.less_xy(d, e) ? (d.type = 1, e.type = 2, c = gg.get(c, f)) : (d.type = 2, e.type = 1, c = gg.get(f, c));
                d.segment = e.segment = c;
                c = a;
                if (!c.empty() && null != c.begin().next) {
                    d = c.begin();
                    for (var k, m = 1, g, l, n;;) {
                        g = 0;
                        f = d;
                        for (e = d = null; null != f;) {
                            ++g;
                            h = f;
                            l = 0;
                            for (n = m; null != h && l < m;) ++l, h = h.next;
                            for (; 0 < l || 0 < n && null != h;) 0 == l ? (k = h, h = h.next, --n) : 0 == n || null == h ? (k = f, f = f.next, --l) : De.less_xy(f.elem(), h.elem()) ? (k = f, f = f.next, --l) : (k = h, h = h.next, --n), null != e ? e.next = k : d = k, e = k;
                            f = h
                        }
                        e.next = null;
                        m <<= 1;
                        if (!(1 < g)) break
                    }
                    c.setbegin(d)
                }
                for (c = !0; !a.empty();) {
                    d = a.pop_unsafe();
                    e = d.segment;
                    if (1 == d.type) {
                        if (Xe.sweep.add(e), Xe.sweep.intersect(e, e.next) || Xe.sweep.intersect(e, e.prev)) {
                            c = !1;
                            break
                        }
                    } else if (2 == d.type) {
                        if (Xe.sweep.intersect(e.prev, e.next)) {
                            c = !1;
                            break
                        }
                        Xe.sweep.remove(e);
                        e.free();
                        e.next = gg.zpp_pool;
                        gg.zpp_pool = e
                    }
                    d.free();
                    d.next = De.zpp_pool;
                    De.zpp_pool = d
                }
                for (; !a.empty();) d = a.pop_unsafe(), 2 == d.type && (e = d.segment, e.free(), e.next = gg.zpp_pool, gg.zpp_pool = e), d.free(), d.next = De.zpp_pool, De.zpp_pool = d;
                for (Xe.sweep.clear(); !b.empty();) a = b.pop_unsafe(), a.free(), a.next = Xg.zpp_pool, Xg.zpp_pool = a;
                return c
            };
            var ff = function() {
                this.slipped = this.failed = this.kinematic = !1;
                this.c1 = this.c2 = this.axis = null;
                this.frozen1 = this.frozen2 = !1;
                this.s1 = this.s2 = this.arbiter = null;
                this.toi = 0;
                this.next =
                    null;
                this.c1 = new kb;
                this.c2 = new kb;
                this.axis = new kb
            };
            g["zpp_nape.geom.ZPP_ToiEvent"] = ff;
            ff.__name__ = ["zpp_nape", "geom", "ZPP_ToiEvent"];
            ff.prototype = {
                next: null,
                alloc: function() {
                    this.failed = !1;
                    this.arbiter = this.s1 = this.s2 = null
                },
                free: function() {},
                toi: null,
                s1: null,
                s2: null,
                arbiter: null,
                frozen1: null,
                frozen2: null,
                c1: null,
                c2: null,
                axis: null,
                slipped: null,
                failed: null,
                kinematic: null,
                __class__: ff
            };
            var We = function() {};
            g["zpp_nape.geom.ZPP_SweepDistance"] = We;
            We.__name__ = ["zpp_nape", "geom", "ZPP_SweepDistance"];
            We.dynamicSweep =
                function(a, b, c, d, e) {
                    null == e && (e = !1);
                    var f = a.s1,
                        h = a.s2,
                        k = f.body,
                        m = h.body;
                    var g = m.velx - k.velx;
                    var l = m.vely - k.vely;
                    var n = k.angvel;
                    0 > n && (n = -n);
                    var p = m.angvel;
                    0 > p && (p = -p);
                    var x = f.sweepCoef * n + h.sweepCoef * p;
                    if (!e && !a.kinematic && g * g + l * l < K.dynamicSweepLinearThreshold * K.dynamicSweepLinearThreshold && x < K.dynamicSweepAngularThreshold) a.toi = -1, a.failed = !0;
                    else {
                        n = a.c1;
                        p = a.c2;
                        for (var u = a.axis, v = 0;;) {
                            k.sweepIntegrate(c * b);
                            k.sweepValidate(f);
                            m.sweepIntegrate(c * b);
                            m.sweepValidate(h);
                            var q = We.distance(f, h, n, p, u) + d,
                                z =
                                g * u.x + l * u.y;
                            if (q < K.distanceThresholdCCD) {
                                if (e) break;
                                var w = n.x - k.posx;
                                w = z - k.sweep_angvel * (u.y * w - u.x * (n.y - k.posy)) + m.sweep_angvel * (u.y * (p.x - m.posx) - u.x * (p.y - m.posy));
                                0 < w && (a.slipped = !0);
                                if (0 >= w || q < .5 * K.distanceThresholdCCD) break
                            }
                            z = (x - z) * b;
                            if (0 >= z) {
                                c = -1;
                                break
                            }
                            z = q / z;
                            1E-6 > z && (z = 1E-6);
                            c += z;
                            if (1 <= c) {
                                c = 1;
                                k.sweepIntegrate(c * b);
                                k.sweepValidate(f);
                                m.sweepIntegrate(c * b);
                                m.sweepValidate(h);
                                b = We.distance(f, h, n, p, u) + d;
                                g = g * u.x + l * u.y;
                                if (b < K.distanceThresholdCCD) {
                                    if (e) break;
                                    e = n.x - k.posx;
                                    k = g - k.sweep_angvel * (u.y * e - u.x *
                                        (n.y - k.posy)) + m.sweep_angvel * (u.y * (p.x - m.posx) - u.x * (p.y - m.posy));
                                    0 < k && (a.slipped = !0);
                                    if (0 >= k || b < .5 * K.distanceThresholdCCD) break
                                }
                                c = -1;
                                break
                            }
                            if (40 <= ++v) {
                                q > d && (a.failed = !0);
                                break
                            }
                        }
                        a.toi = c
                    }
                };
            We.staticSweep = function(a, b, c, d) {
                var e = a.s1,
                    f = a.s2,
                    h = e.body;
                var k = -h.velx;
                var m = -h.vely;
                var g = h.sweep_angvel;
                0 > g && (g = -g);
                var l = e.sweepCoef * g;
                g = a.c1;
                for (var n = a.c2, p = a.axis, x = 0;;) {
                    h.sweepIntegrate(c * b);
                    h.sweepValidate(e);
                    var u = We.distance(e, f, g, n, p) + d,
                        v = k * p.x + m * p.y;
                    if (u < K.distanceThresholdCCD) {
                        var q = v - h.sweep_angvel *
                            (p.y * (g.x - h.posx) - p.x * (g.y - h.posy));
                        0 < q && (a.slipped = !0);
                        if (0 >= q || u < .5 * K.distanceThresholdCCD) break
                    }
                    v = (l - v) * b;
                    if (0 >= v) {
                        c = -1;
                        break
                    }
                    v = u / v;
                    1E-6 > v && (v = 1E-6);
                    c += v;
                    if (1 <= c) {
                        c = 1;
                        h.sweepIntegrate(c * b);
                        h.sweepValidate(e);
                        b = We.distance(e, f, g, n, p) + d;
                        k = k * p.x + m * p.y;
                        if (b < K.distanceThresholdCCD && (h = k - h.sweep_angvel * (p.y * (g.x - h.posx) - p.x * (g.y - h.posy)), 0 < h && (a.slipped = !0), 0 >= h || b < .5 * K.distanceThresholdCCD)) break;
                        c = -1;
                        break
                    }
                    if (40 <= ++x) {
                        u > d && (a.failed = !0);
                        break
                    }
                }
                a.toi = c
            };
            We.distanceBody = function(a, b, c, d) {
                if (null == kb.zpp_pool) var e =
                    new kb;
                else e = kb.zpp_pool, kb.zpp_pool = e.next, e.next = null;
                e.alloc();
                if (null == kb.zpp_pool) var f = new kb;
                else f = kb.zpp_pool, kb.zpp_pool = f.next, f.next = null;
                f.alloc();
                if (null == kb.zpp_pool) var h = new kb;
                else h = kb.zpp_pool, kb.zpp_pool = h.next, h.next = null;
                h.alloc();
                var k = Nb.FMAX;
                for (a = a.shapes.begin(); null != a;) {
                    for (var m = a.elem(), g = b.shapes.begin(); null != g;) {
                        var l = g.elem();
                        l = We.distance(m, l, e, f, h, k);
                        l < k && (k = l, c.x = e.x, c.y = e.y, d.x = f.x, d.y = f.y);
                        g = g.next
                    }
                    a = a.next
                }
                b = e;
                b.free();
                b.next = kb.zpp_pool;
                kb.zpp_pool = b;
                f.free();
                f.next = kb.zpp_pool;
                kb.zpp_pool = f;
                h.free();
                h.next = kb.zpp_pool;
                kb.zpp_pool = h;
                return k
            };
            We.distance = function(a, b, c, d, e, f) {
                null == f && (f = 1E100);
                if (a.isCircle() && b.isCircle()) {
                    var h = a.circle,
                        k = b.circle,
                        m = 0,
                        g = 0;
                    m = k.worldCOMx - h.worldCOMx;
                    g = k.worldCOMy - h.worldCOMy;
                    var l = Xd.sqrt(m * m + g * g);
                    var n = l - (h.radius + k.radius);
                    if (n < f) {
                        if (0 == l) m = 1, g = 0;
                        else {
                            var p = 1 / l;
                            m *= p;
                            g *= p
                        }
                        var x = h.radius;
                        c.x = h.worldCOMx + m * x;
                        c.y = h.worldCOMy + g * x;
                        var u = -k.radius;
                        d.x = k.worldCOMx + m * u;
                        d.y = k.worldCOMy + g * u;
                        e.x = m;
                        e.y = g
                    }
                    return n
                }
                var v = !1;
                if (a.isCircle() &&
                    b.isPolygon()) {
                    var q = a;
                    a = b;
                    b = q;
                    var z = c;
                    c = d;
                    d = z;
                    v = !0
                }
                if (a.isPolygon() && b.isCircle()) {
                    for (var w = b.circle, y = -Nb.FMAX, A = null, L = a.polygon.edges.begin(); null != L;) {
                        var B = L.elem(),
                            D = B.gnormx * w.worldCOMx + B.gnormy * w.worldCOMy - B.gprojection - w.radius;
                        if (D > f) {
                            y = D;
                            break
                        }
                        0 < D ? D > y && (y = D, A = B) : 0 > y && D > y && (y = D, A = B);
                        L = L.next
                    }
                    if (y < f) {
                        var Ka = A.gp0,
                            t = A.gp1,
                            F = w.worldCOMy * A.gnormx - w.worldCOMx * A.gnormy;
                        if (F <= Ka.y * A.gnormx - Ka.x * A.gnormy) {
                            var E = 0,
                                pa = 0;
                            E = w.worldCOMx - Ka.x;
                            pa = w.worldCOMy - Ka.y;
                            var H = Xd.sqrt(E * E + pa * pa);
                            y = H - w.radius;
                            if (y < f) {
                                if (0 == H) E = 1, pa = 0;
                                else {
                                    var J = 1 / H;
                                    E *= J;
                                    pa *= J
                                }
                                c.x = Ka.x + 0 * E;
                                c.y = Ka.y + 0 * pa;
                                var R = -w.radius;
                                d.x = w.worldCOMx + E * R;
                                d.y = w.worldCOMy + pa * R;
                                e.x = E;
                                e.y = pa
                            }
                        } else if (F >= t.y * A.gnormx - t.x * A.gnormy) {
                            var X = 0,
                                Ca = 0;
                            X = w.worldCOMx - t.x;
                            Ca = w.worldCOMy - t.y;
                            var oa = Xd.sqrt(X * X + Ca * Ca);
                            y = oa - w.radius;
                            if (y < f) {
                                if (0 == oa) X = 1, Ca = 0;
                                else {
                                    var N = 1 / oa;
                                    X *= N;
                                    Ca *= N
                                }
                                c.x = t.x + 0 * X;
                                c.y = t.y + 0 * Ca;
                                var C = -w.radius;
                                d.x = w.worldCOMx + X * C;
                                d.y = w.worldCOMy + Ca * C;
                                e.x = X;
                                e.y = Ca
                            }
                        } else {
                            var O = -w.radius;
                            d.x = w.worldCOMx + A.gnormx * O;
                            d.y = w.worldCOMy + A.gnormy * O;
                            var S = -y;
                            c.x = d.x + A.gnormx * S;
                            c.y = d.y + A.gnormy * S;
                            e.x = A.gnormx;
                            e.y = A.gnormy
                        }
                    }
                    v && (e.x = -e.x, e.y = -e.y);
                    return y
                }
                for (var G = a.polygon, P = b.polygon, Q = -Nb.FMAX, T = null, la = null, U = 0, V = G.edges.begin(); null != V;) {
                    for (var bb = V.elem(), W = Nb.FMAX, Y = P.gverts.begin(); null != Y;) {
                        var Lc = Y.elem(),
                            le = bb.gnormx * Lc.x + bb.gnormy * Lc.y;
                        le < W && (W = le);
                        Y = Y.next
                    }
                    W -= bb.gprojection;
                    if (W > f) {
                        Q = W;
                        break
                    }
                    0 < W ? W > Q && (Q = W, T = bb, U = 1) : 0 > Q && W > Q && (Q = W, T = bb, U = 1);
                    V = V.next
                }
                if (Q < f) {
                    for (var ca = P.edges.begin(); null != ca;) {
                        for (var ba = ca.elem(), aa = Nb.FMAX, ra =
                                G.gverts.begin(); null != ra;) {
                            var da = ra.elem(),
                                M = ba.gnormx * da.x + ba.gnormy * da.y;
                            M < aa && (aa = M);
                            ra = ra.next
                        }
                        aa -= ba.gprojection;
                        if (aa > f) {
                            Q = aa;
                            break
                        }
                        0 < aa ? aa > Q && (Q = aa, la = ba, U = 2) : 0 > Q && aa > Q && (Q = aa, la = ba, U = 2);
                        ca = ca.next
                    }
                    if (Q < f) {
                        if (1 == U) {
                            var ea = P;
                            var Z = T
                        } else {
                            ea = G;
                            Z = la;
                            var ia = c;
                            c = d;
                            d = ia;
                            v = !v
                        }
                        for (var yc = null, ha = Nb.FMAX, ja = ea.edges.begin(); null != ja;) {
                            var ka = ja.elem(),
                                fa = Z.gnormx * ka.gnormx + Z.gnormy * ka.gnormy;
                            fa < ha && (ha = fa, yc = ka);
                            ja = ja.next
                        }
                        v ? (e.x = -Z.gnormx, e.y = -Z.gnormy) : (e.x = Z.gnormx, e.y = Z.gnormy);
                        if (0 <= Q) {
                            var gb =
                                Z.gp0,
                                bd = Z.gp1,
                                Ga = yc.gp0,
                                Fc = yc.gp1,
                                Gc = 0,
                                ma = 0,
                                na = 0,
                                Aa = 0;
                            Gc = bd.x - gb.x;
                            ma = bd.y - gb.y;
                            na = Fc.x - Ga.x;
                            Aa = Fc.y - Ga.y;
                            var qa = 1 / (Gc * Gc + ma * ma),
                                ua = 1 / (na * na + Aa * Aa),
                                sa = -(Gc * (gb.x - Ga.x) + ma * (gb.y - Ga.y)) * qa,
                                ta = -(Gc * (gb.x - Fc.x) + ma * (gb.y - Fc.y)) * qa,
                                ob = -(na * (Ga.x - gb.x) + Aa * (Ga.y - gb.y)) * ua,
                                va = -(na * (Ga.x - bd.x) + Aa * (Ga.y - bd.y)) * ua;
                            0 > sa ? sa = 0 : 1 < sa && (sa = 1);
                            0 > ta ? ta = 0 : 1 < ta && (ta = 1);
                            0 > ob ? ob = 0 : 1 < ob && (ob = 1);
                            0 > va ? va = 0 : 1 < va && (va = 1);
                            var wa = 0,
                                xa = 0,
                                za = sa;
                            wa = gb.x + Gc * za;
                            xa = gb.y + ma * za;
                            var ya = 0,
                                Da = 0,
                                Fa = ta;
                            ya = gb.x + Gc * Fa;
                            Da = gb.y + ma * Fa;
                            var Ea = 0,
                                Ha = 0,
                                Ia = ob;
                            Ea = Ga.x + na * Ia;
                            Ha = Ga.y + Aa * Ia;
                            var Ja = 0,
                                La = 0,
                                Oa = va;
                            Ja = Ga.x + na * Oa;
                            La = Ga.y + Aa * Oa;
                            var Na = pc.vec_dsq(wa, xa, Ga.x, Ga.y),
                                Pa = pc.vec_dsq(ya, Da, Fc.x, Fc.y),
                                Qa = pc.vec_dsq(Ea, Ha, gb.x, gb.y),
                                Wa = pc.vec_dsq(Ja, La, bd.x, bd.y),
                                Ta = 0,
                                Va = 0,
                                Sa = null;
                            Na < Pa ? (Ta = wa, Va = xa, Sa = Ga) : (Ta = ya, Va = Da, Sa = Fc, Na = Pa);
                            var Ya = 0,
                                Za = 0,
                                Xa = null;
                            Qa < Wa ? (Ya = Ea, Za = Ha, Xa = gb) : (Ya = Ja, Za = La, Xa = bd, Qa = Wa);
                            Na < Qa ? (c.x = Ta, c.y = Va, d.x = Sa.x, d.y = Sa.y, Q = Math.sqrt(Na)) : (d.x = Ya, d.y = Za, c.x = Xa.x, c.y = Xa.y, Q = Math.sqrt(Qa));
                            if (0 != Q) {
                                e.x = d.x - c.x;
                                e.y = d.y - c.y;
                                var ab =
                                    1 / Q;
                                e.x *= ab;
                                e.y *= ab;
                                v && (e.x = -e.x, e.y = -e.y)
                            }
                            return Q
                        }
                        var Ra = 0,
                            Ua = 0;
                        Ra = yc.gp0.x;
                        Ua = yc.gp0.y;
                        var $a = 0,
                            $b = 0;
                        $a = yc.gp1.x;
                        $b = yc.gp1.y;
                        var Pb = 0,
                            cb = 0;
                        Pb = $a - Ra;
                        cb = $b - Ua;
                        var db = Z.gnormy * Ra - Z.gnormx * Ua,
                            pb = Z.gnormy * $a - Z.gnormx * $b,
                            fb = 1 / (pb - db),
                            eb = (-Z.tp1 - db) * fb;
                        eb > K.epsilon && (Ra += Pb * eb, Ua += cb * eb);
                        var hb = (-Z.tp0 - pb) * fb;
                        hb < -K.epsilon && ($a += Pb * hb, $b += cb * hb);
                        var ib = Ra * Z.gnormx + Ua * Z.gnormy - Z.gprojection,
                            jb = $a * Z.gnormx + $b * Z.gnormy - Z.gprojection;
                        if (ib < jb) {
                            d.x = Ra;
                            d.y = Ua;
                            var kb = -ib;
                            c.x = d.x + Z.gnormx * kb;
                            c.y = d.y + Z.gnormy *
                                kb;
                            return ib
                        }
                        d.x = $a;
                        d.y = $b;
                        var lb = -jb;
                        c.x = d.x + Z.gnormx * lb;
                        c.y = d.y + Z.gnormy * lb;
                        return jb
                    }
                }
                return f
            };
            var Ee = function() {
                this.node = null;
                this.id = this.di = 0;
                this.a = this.b = null;
                this.length = 0;
                this._inuse = this.modified = this.pushmod = !1;
                this.next = null
            };
            g["zpp_nape.geom.ZPP_PartitionPair"] = Ee;
            Ee.__name__ = ["zpp_nape", "geom", "ZPP_PartitionPair"];
            Ee.get = function(a, b) {
                if (null == Ee.zpp_pool) var c = new Ee;
                else c = Ee.zpp_pool, Ee.zpp_pool = c.next, c.next = null;
                c.alloc();
                c.a = a;
                c.b = b;
                a.id < b.id ? (c.id = a.id, c.di = b.id) : (c.id = b.id,
                    c.di = a.id);
                return c
            };
            Ee.edge_swap = function(a, b) {
                var c = a.node;
                a.node = b.node;
                b.node = c
            };
            Ee.edge_lt = function(a, b) {
                return a.id >= b.id ? a.id == b.id ? a.di < b.di : !1 : !0
            };
            Ee.prototype = {
                next: null,
                elem: function() {
                    return this
                },
                begin: function() {
                    return this.next
                },
                _inuse: null,
                modified: null,
                pushmod: null,
                length: null,
                add: function(a) {
                    return this.inlined_add(a)
                },
                inlined_add: function(a) {
                    a._inuse = !0;
                    a.next = this.begin();
                    this.next = a;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                pop: function() {
                    this.inlined_pop()
                },
                inlined_pop: function() {
                    var a =
                        this.begin();
                    this.next = a.next;
                    a.elem()._inuse = !1;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                pop_unsafe: function() {
                    return this.inlined_pop_unsafe()
                },
                inlined_pop_unsafe: function() {
                    var a = this.front();
                    this.pop();
                    return a
                },
                empty: function() {
                    return null == this.begin()
                },
                front: function() {
                    return this.begin().elem()
                },
                free: function() {
                    this.node = this.a = this.b = null
                },
                alloc: function() {},
                a: null,
                b: null,
                id: null,
                di: null,
                node: null,
                __class__: Ee
            };
            var Gb = function() {};
            g["zpp_nape.geom.ZPP_Triangular"] =
                Gb;
            Gb.__name__ = ["zpp_nape", "geom", "ZPP_Triangular"];
            Gb.lt = function(a, b) {
                return a.y < b.y ? !0 : a.y == b.y ? a.x < b.x : !1
            };
            Gb.right_turn = function(a, b, c) {
                var d = c.x - b.x;
                return (b.y - a.y) * d - (b.x - a.x) * (c.y - b.y)
            };
            Gb.delaunay = function(a, b, c, d) {
                var e = c.x - b.x;
                var f = c.y - b.y;
                var h = b.x - a.x;
                var k = b.y - a.y;
                0 <= k * e - h * f ? e = !0 : (e = d.x - c.x, f = d.y - c.y, h = c.x - b.x, k = c.y - b.y, e = 0 <= k * e - h * f);
                e ? e = !0 : (e = a.x - d.x, f = a.y - d.y, h = d.x - c.x, k = d.y - c.y, e = 0 <= k * e - h * f);
                e ? e = !0 : (e = b.x - a.x, f = b.y - a.y, h = a.x - d.x, k = a.y - d.y, e = 0 <= k * e - h * f);
                return e ? !0 : 0 < b.x * (c.y * d.mag -
                    c.mag * d.y) - c.x * (b.y * d.mag - b.mag * d.y) + d.x * (b.y * c.mag - b.mag * c.y) - (a.x * (c.y * d.mag - c.mag * d.y) - c.x * (a.y * d.mag - a.mag * d.y) + d.x * (a.y * c.mag - a.mag * c.y)) + (a.x * (b.y * d.mag - b.mag * d.y) - b.x * (a.y * d.mag - a.mag * d.y) + d.x * (a.y * b.mag - a.mag * b.y)) - (a.x * (b.y * c.mag - b.mag * c.y) - b.x * (a.y * c.mag - a.mag * c.y) + c.x * (a.y * b.mag - a.mag * b.y))
            };
            Gb.optimise = function(a) {
                var b = a.vertices,
                    c = a.vertices;
                if (null != b)
                    for (;;) {
                        var d = b;
                        d.sort();
                        d.mag = d.x * d.x + d.y * d.y;
                        b = b.next;
                        if (b == c) break
                    }
                null == Gb.edgeSet && (null == Yg.zpp_pool ? Gb.edgeSet = new Yg : (Gb.edgeSet =
                    Yg.zpp_pool, Yg.zpp_pool = Gb.edgeSet.next, Gb.edgeSet.next = null), Gb.edgeSet.alloc(), Gb.edgeSet.lt = Ee.edge_lt, Gb.edgeSet.swapped = Ee.edge_swap);
                null == Ee.zpp_pool ? c = new Ee : (c = Ee.zpp_pool, Ee.zpp_pool = c.next, c.next = null);
                c.alloc();
                a = b = a.vertices;
                if (null != b)
                    for (;;) {
                        d = b;
                        var e = d.next;
                        d.diagonals.reverse();
                        for (var f = d.diagonals.begin(); null != f;) {
                            var h = f.elem();
                            if (!(h.id < d.id)) {
                                var k = null == f.next ? d.prev : f.next.elem();
                                Gb.delaunay(d, e, h, k) || (e = Ee.get(d, h), c.add(e), e.node = Gb.edgeSet.insert(e))
                            }
                            e = h;
                            f = f.next
                        }
                        b = b.next;
                        if (b == a) break
                    }
                for (; !c.empty();) {
                    a = c.pop_unsafe();
                    b = a.a;
                    h = a.b;
                    d = b.next;
                    f = null;
                    for (e = b.diagonals.begin(); null != e;) {
                        k = e.elem();
                        if (k == h) {
                            e = e.next;
                            f = null == e ? b.prev : e.elem();
                            break
                        }
                        d = k;
                        e = e.next
                    }
                    b.diagonals.remove(h);
                    h.diagonals.remove(b);
                    if (h == d.next) d.diagonals.add(f);
                    else
                        for (e = d.diagonals.begin(); null != e;) {
                            if (e.elem() == h) {
                                d.diagonals.insert(e, f);
                                break
                            }
                            e = e.next
                        }
                    if (b == f.next) f.diagonals.add(d);
                    else
                        for (h = f.diagonals.begin(); null != h;) {
                            if (h.elem() == b) {
                                f.diagonals.insert(h, d);
                                break
                            }
                            h = h.next
                        }
                    Gb.edgeSet.remove_node(a.node);
                    a.free();
                    a.next = Ee.zpp_pool;
                    Ee.zpp_pool = a
                }
                c.free();
                c.next = Ee.zpp_pool;
                Ee.zpp_pool = c
            };
            Gb.triangulate = function(a) {
                var b = a.vertices,
                    c = a.vertices,
                    d = a.vertices.next,
                    e = a.vertices;
                if (null != d)
                    for (;;) {
                        var f = d;
                        Gb.lt(f, b) && (b = f);
                        Gb.lt(c, f) && (c = f);
                        d = d.next;
                        if (d == e) break
                    }
                null == Gb.queue && (Gb.queue = new Ol);
                e = c.prev;
                d = c.next;
                for (Gb.queue.add(c); e != b || d != b;) e == b || d != b && Gb.lt(e, d) ? (Gb.queue.add(d), d.rightchain = !1, d = d.next) : (Gb.queue.add(e), e.rightchain = !0, e = e.prev);
                Gb.queue.add(b);
                null == Gb.stack && (Gb.stack = new Ol);
                Gb.stack.add(Gb.queue.pop_unsafe());
                e = Gb.queue.pop_unsafe();
                for (Gb.stack.add(e);;) {
                    b = Gb.queue.pop_unsafe();
                    if (Gb.queue.empty()) break;
                    if (b.rightchain != Gb.stack.front().rightchain) {
                        for (;;) {
                            d = Gb.stack.pop_unsafe();
                            if (Gb.stack.empty()) break;
                            a.add_diagonal(d, b)
                        }
                        Gb.stack.add(e)
                    } else {
                        for (e = Gb.stack.pop_unsafe(); !Gb.stack.empty();) {
                            d = Gb.stack.front();
                            f = Gb.right_turn(d, e, b);
                            if (b.rightchain && 0 <= f || !b.rightchain && 0 >= f) break;
                            a.add_diagonal(d, b);
                            e = d;
                            Gb.stack.pop()
                        }
                        Gb.stack.add(e)
                    }
                    Gb.stack.add(b);
                    e = b
                }
                if (!Gb.stack.empty())
                    for (Gb.stack.pop(); !Gb.stack.empty();) {
                        b =
                            Gb.stack.pop_unsafe();
                        if (Gb.stack.empty()) break;
                        a.add_diagonal(c, b)
                    }
                return a
            };
            var kb = function() {
                this.length = this.x = this.y = 0;
                this._inuse = this.modified = this.pushmod = !1;
                this.next = null;
                this.weak = !1;
                this._isimmutable = this.outer = null;
                this._immutable = !1;
                this._invalidate = this._validate = null
            };
            g["zpp_nape.geom.ZPP_Vec2"] = kb;
            kb.__name__ = ["zpp_nape", "geom", "ZPP_Vec2"];
            kb.get = function(a, b, c) {
                null == c && (c = !1);
                if (null == kb.zpp_pool) var d = new kb;
                else d = kb.zpp_pool, kb.zpp_pool = d.next, d.next = null;
                d.alloc();
                d._immutable =
                    c;
                d.x = a;
                d.y = b;
                return d
            };
            kb.prototype = {
                _invalidate: null,
                _validate: null,
                validate: function() {
                    null != this._validate && this._validate()
                },
                invalidate: function() {
                    null != this._invalidate && this._invalidate(this)
                },
                _immutable: null,
                _isimmutable: null,
                immutable: function() {},
                outer: null,
                wrapper: function() {
                    if (null == this.outer) {
                        this.outer = new Wa;
                        var a = this.outer.zpp_inner;
                        a.free();
                        a.next = kb.zpp_pool;
                        kb.zpp_pool = a;
                        this.outer.zpp_inner = this
                    }
                    return this.outer
                },
                weak: null,
                free: function() {
                    null != this.outer && (this.outer = this.outer.zpp_inner =
                        null);
                    this._invalidate = this._validate = this._isimmutable = null
                },
                alloc: function() {
                    this.weak = !1
                },
                next: null,
                elem: function() {
                    return this
                },
                begin: function() {
                    return this.next
                },
                _inuse: null,
                modified: null,
                pushmod: null,
                length: null,
                add: function(a) {
                    return this.inlined_add(a)
                },
                inlined_add: function(a) {
                    a._inuse = !0;
                    a.next = this.begin();
                    this.next = a;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                insert: function(a, b) {
                    return this.inlined_insert(a, b)
                },
                inlined_insert: function(a, b) {
                    b._inuse = !0;
                    null == a ? (b.next = this.begin(), this.next =
                        b) : (b.next = a.next, a.next = b);
                    this.pushmod = this.modified = !0;
                    this.length++;
                    return b
                },
                erase: function(a) {
                    return this.inlined_erase(a)
                },
                inlined_erase: function(a) {
                    var b;
                    if (null == a) {
                        var c = this.begin();
                        this.next = b = c.next;
                        this.empty() && (this.pushmod = !0)
                    } else c = a.next, b = c.next, a.next = b, null == b && (this.pushmod = !0);
                    c.elem()._inuse = !1;
                    this.modified = !0;
                    this.length--;
                    this.pushmod = !0;
                    return b
                },
                reverse: function() {
                    for (var a = this.begin(), b = null; null != a;) {
                        var c = a.next;
                        a.next = b;
                        b = this.next = a;
                        a = c
                    }
                    this.pushmod = this.modified = !0
                },
                empty: function() {
                    return null == this.begin()
                },
                size: function() {
                    return this.length
                },
                front: function() {
                    return this.begin().elem()
                },
                iterator_at: function(a) {
                    for (var b = this.begin(); 0 < a-- && null != b;) b = b.next;
                    return b
                },
                x: null,
                y: null,
                toString: function() {
                    return "{ x: " + this.x + " y: " + this.y + " }"
                },
                __class__: kb
            };
            var Cw = function() {
                this._validate = null;
                this.x = this.y = this.z = 0
            };
            g["zpp_nape.geom.ZPP_Vec3"] = Cw;
            Cw.__name__ = ["zpp_nape", "geom", "ZPP_Vec3"];
            Cw.prototype = {
                x: null,
                y: null,
                z: null,
                _validate: null,
                validate: function() {
                    null !=
                        this._validate && this._validate()
                },
                __class__: Cw
            };
            var pc = function() {};
            g["zpp_nape.geom.ZPP_VecMath"] = pc;
            pc.__name__ = ["zpp_nape", "geom", "ZPP_VecMath"];
            pc.vec_dsq = function(a, b, c, d) {
                a -= c;
                b -= d;
                return a * a + b * b
            };
            var cd = function() {
                this.ishape = this.ibody = this.icompound = this.cbsets = this.group = this.cbTypes = this.cbSet = null;
                this.id = 0;
                this.outer_i = null;
                this.id = Od.Interactor();
                this.cbsets = new Av;
                this.cbTypes = new Zi
            };
            g["zpp_nape.phys.ZPP_Interactor"] = cd;
            cd.__name__ = ["zpp_nape", "phys", "ZPP_Interactor"];
            cd.get = function(a,
                b) {
                var c = a.id < b.id ? a.id : b.id,
                    d = a.id < b.id ? b.id : a.id,
                    e = null;
                for (a = (a.cbsets.length < b.cbsets.length ? a.cbsets : b.cbsets).begin(); null != a;) {
                    b = a.elem();
                    if (b.id == c && b.di == d) {
                        e = b;
                        break
                    }
                    a = a.next
                }
                return e
            };
            cd.int_callback = function(a, b, c) {
                var d = a.int1;
                a = a.int2;
                b.options1.compatible(d.cbTypes) && b.options2.compatible(a.cbTypes) ? (c.int1 = d, c.int2 = a) : (c.int1 = a, c.int2 = d)
            };
            cd.prototype = {
                outer_i: null,
                id: null,
                ishape: null,
                ibody: null,
                icompound: null,
                isShape: function() {
                    return null != this.ishape
                },
                isBody: function() {
                    return null !=
                        this.ibody
                },
                isCompound: function() {
                    return null != this.icompound
                },
                __iaddedToSpace: function() {
                    null != this.group && this.group.addInteractor(this);
                    for (var a = this.cbTypes.begin(); null != a;) a.elem().addInteractor(this), a = a.next;
                    this.alloc_cbSet()
                },
                __iremovedFromSpace: function() {
                    null != this.group && this.group.remInteractor(this);
                    for (var a = this.cbTypes.begin(); null != a;) a.elem().remInteractor(this), a = a.next;
                    this.dealloc_cbSet()
                },
                wake: function() {
                    if (this.isShape()) {
                        var a = this.ishape.body;
                        null != a && null != a.space && a.space.non_inlined_wake(a)
                    } else this.isBody() ?
                        null != this.ibody.space && this.ibody.space.non_inlined_wake(this.ibody) : null != this.icompound.space && this.icompound.space.wakeCompound(this.icompound)
                },
                cbsets: null,
                getSpace: function() {
                    return this.isShape() ? null == this.ishape.body ? null : this.ishape.body.space : this.isBody() ? this.ibody.space : this.icompound.space
                },
                group: null,
                cbTypes: null,
                cbSet: null,
                insert_cbtype: function(a) {
                    if (!this.cbTypes.has(a)) {
                        var b = this.getSpace();
                        null != b && (this.dealloc_cbSet(), a.addInteractor(this));
                        for (var c = null, d = this.cbTypes.begin(); null !=
                            d;) {
                            var e = d.elem();
                            if (ld.setlt(a, e)) break;
                            c = d;
                            d = d.next
                        }
                        this.cbTypes.inlined_insert(c, a);
                        null != b && (this.alloc_cbSet(), this.wake())
                    }
                },
                alloc_cbSet: function() {
                    var a = this.getSpace();
                    null != (this.cbSet = a.cbsets.get(this.cbTypes)) && (this.cbSet.increment(), this.cbSet.addInteractor(this), this.cbSet.validate(), a.freshInteractorType(this))
                },
                dealloc_cbSet: function() {
                    var a = this.getSpace();
                    null != this.cbSet && (this.cbSet.remInteractor(this), a.nullInteractorType(this), this.cbSet.decrement() && (a.cbsets.remove(this.cbSet),
                        a = this.cbSet, a.free(), a.next = Ob.zpp_pool, Ob.zpp_pool = a), this.cbSet = null)
                },
                setGroup: function(a) {
                    if (this.group != a) {
                        var b = null != this.getSpace();
                        b && null != this.group && this.group.remInteractor(this);
                        this.group = a;
                        b && null != a && a.addInteractor(this);
                        b && (this.isShape() ? this.ishape.body.wake() : this.isBody() ? this.ibody.wake() : this.icompound.wake())
                    }
                },
                immutable_midstep: function(a) {
                    this.isBody() ? this.ibody.__immutable_midstep(a) : this.isShape() ? this.ishape.__immutable_midstep(a) : this.icompound.__imutable_midstep(a)
                },
                lookup_group: function() {
                    for (var a = this; null != a && null == a.group;) a = a.isShape() ? a.ishape.body : a.isCompound() ? a.icompound.compound : a.ibody.compound;
                    return null == a ? null : a.group
                },
                __class__: cd
            };
            var wj = function() {
                this.wrap_localCOM = this.wrap_worldCOM = null;
                this.zip_worldCOM = !1;
                this.worldCOMx = this.worldCOMy = 0;
                this.zip_localCOM = !1;
                this.localCOMx = this.localCOMy = 0;
                this.zip_aabb = !1;
                this.aabb = null;
                this.norotate = !1;
                this.cinertia = this.iinertia = this.sinertia = 0;
                this.zip_inertia = !1;
                this.inertiaMode = this.inertia = 0;
                this.zip_gravMassScale = !1;
                this.gravMassMode = this.gravMassScale = 0;
                this.zip_gravMass = !1;
                this.gravMass = 0;
                this.nomove = !1;
                this.massMode = this.imass = this.smass = this.cmass = 0;
                this.zip_mass = !1;
                this.mass = 0;
                this.zip_axis = !1;
                this.forcex = this.forcey = this.kinvelx = this.kinvely = this.svelx = this.svely = this.angvel = this.torque = this.kinangvel = this.pre_rot = this.rot = this.axisx = this.axisy = 0;
                this.wrap_vel = null;
                this.velx = this.vely = 0;
                this.wrap_pos = null;
                this.pre_posx = this.pre_posy = this.posx = this.posy = 0;
                this.bullet = this.bulletEnabled = this.disableCCD = !1;
                this.sweepRadius = 0;
                this.sweepFrozen = !1;
                this.sweepTime = this.sweep_angvel = 0;
                this.compound = this.shapes = this.wrap_shapes = this.space = this.arbiters = this.wrap_arbiters = this.constraints = this.component = null;
                this.type = 0;
                this.world = !1;
                this.outer = null;
                cd.call(this);
                this.ibody = this;
                this.bulletEnabled = this.world = !1;
                this.sweep_angvel = this.sweepTime = 0;
                this.disableCCD = this.norotate = this.nomove = !1;
                this.axisx = this.rot = this.posy = this.posx = 0;
                this.axisy = 1;
                this.torque = this.angvel = this.kinangvel = this.forcey = this.forcex =
                    this.kinvely = this.kinvelx = this.vely = this.velx = this.svely = this.svelx = 0;
                this.pre_posx = Nb.POSINF();
                this.pre_posy = Nb.POSINF();
                this.pre_rot = Nb.POSINF();
                this.worldCOMy = this.worldCOMx = this.localCOMy = this.localCOMx = 0;
                this.zip_aabb = !0;
                this.aabb = de.get(0, 0, 0, 0);
                this.aabb._immutable = !0;
                this.aabb._validate = q(this, this.aabb_validate);
                this.gravMassMode = this.massMode = 0;
                this.gravMassScale = 1;
                this.inertiaMode = 0;
                this.arbiters = new Qo;
                this.constraints = new Gj;
                this.shapes = new rl;
                this.wrap_shapes = Aj.get(this.shapes);
                this.wrap_shapes.zpp_inner.adder =
                    q(this, this.shapes_adder);
                this.wrap_shapes.zpp_inner.subber = q(this, this.shapes_subber);
                this.wrap_shapes.zpp_inner._invalidate = q(this, this.shapes_invalidate);
                this.kinematicDelaySleep = !1
            };
            g["zpp_nape.phys.ZPP_Body"] = wj;
            wj.__name__ = ["zpp_nape", "phys", "ZPP_Body"];
            wj.__static = function() {
                var a = new Ag(Pc.get_STATIC()),
                    b = a.zpp_inner;
                b.world = !0;
                b.wrap_shapes.zpp_inner.immutable = !0;
                b.smass = b.imass = b.cmass = b.mass = b.gravMass = 0;
                b.sinertia = b.iinertia = b.cinertia = b.inertia = 0;
                b.cbTypes.clear();
                return a
            };
            wj.__super__ =
                cd;
            wj.prototype = p(cd.prototype, {
                outer: null,
                world: null,
                type: null,
                isStatic: function() {
                    return 1 == this.type
                },
                isDynamic: function() {
                    return 2 == this.type
                },
                isKinematic: function() {
                    return 3 == this.type
                },
                invalidate_type: function() {
                    this.invalidate_mass();
                    this.invalidate_inertia()
                },
                compound: null,
                shapes: null,
                wrap_shapes: null,
                invalidate_shapes: function() {
                    this.invalidate_aabb();
                    this.invalidate_localCOM();
                    this.invalidate_mass();
                    this.invalidate_inertia()
                },
                space: null,
                arbiters: null,
                wrap_arbiters: null,
                constraints: null,
                component: null,
                atRest: function(a) {
                    if (this.isDynamic()) {
                        var b = K.linearSleepThreshold;
                        b *= b;
                        if (this.velx * this.velx + this.vely * this.vely > b) a = !1;
                        else if (pc.vec_dsq(this.posx, this.posy, this.pre_posx, this.pre_posy) > .25 * b * a * a) a = !1;
                        else {
                            b = this.aabb.maxx - this.aabb.minx;
                            var c = this.aabb.maxy - this.aabb.miny;
                            b = b * b + c * c;
                            c = K.angularSleepThreshold;
                            c *= c;
                            if (4 * this.angvel * this.angvel * b > c) a = !1;
                            else {
                                var d = this.rot - this.pre_rot;
                                a = d * d * b > c * a * a ? !1 : !0
                            }
                        }
                        a || (this.component.waket = this.space.stamp);
                        return this.component.waket + K.sleepDelay <
                            this.space.stamp
                    }
                    return this.component.sleeping
                },
                refreshArbiters: function() {
                    for (var a = this.arbiters.begin(); null != a;) a.elem().invalidated = !0, a = a.next
                },
                sweepTime: null,
                sweep_angvel: null,
                sweepFrozen: null,
                sweepRadius: null,
                bullet: null,
                bulletEnabled: null,
                disableCCD: null,
                sweepIntegrate: function(a) {
                    var b = a - this.sweepTime;
                    0 != b && (this.sweepTime = a, this.posx += this.velx * b, this.posy += this.vely * b, 0 != this.angvel && this.delta_rot(this.sweep_angvel * b))
                },
                sweepValidate: function(a) {
                    if (a.isCircle()) a.worldCOMx = this.posx +
                        (this.axisy * a.localCOMx - this.axisx * a.localCOMy), a.worldCOMy = this.posy + (a.localCOMx * this.axisx + a.localCOMy * this.axisy);
                    else {
                        a = a.polygon;
                        for (var b = a.lverts.begin(), c = a.gverts.begin(); null != c;) {
                            var d = c.elem(),
                                e = b.elem();
                            b = b.next;
                            d.x = this.posx + (this.axisy * e.x - this.axisx * e.y);
                            d.y = this.posy + (e.x * this.axisx + e.y * this.axisy);
                            c = c.next
                        }
                        c = a.edges.begin();
                        d = a.gverts.begin();
                        b = d.elem();
                        for (d = d.next; null != d;) {
                            e = d.elem();
                            var f = c.elem();
                            c = c.next;
                            f.gnormx = this.axisy * f.lnormx - this.axisx * f.lnormy;
                            f.gnormy = f.lnormx * this.axisx +
                                f.lnormy * this.axisy;
                            f.gprojection = this.posx * f.gnormx + this.posy * f.gnormy + f.lprojection;
                            f.tp0 = b.y * f.gnormx - b.x * f.gnormy;
                            f.tp1 = e.y * f.gnormx - e.x * f.gnormy;
                            b = e;
                            d = d.next
                        }
                        a = a.gverts.front();
                        c = c.elem();
                        c.gnormx = this.axisy * c.lnormx - this.axisx * c.lnormy;
                        c.gnormy = c.lnormx * this.axisx + c.lnormy * this.axisy;
                        c.gprojection = this.posx * c.gnormx + this.posy * c.gnormy + c.lprojection;
                        c.tp0 = b.y * c.gnormx - b.x * c.gnormy;
                        c.tp1 = a.y * c.gnormx - a.x * c.gnormy
                    }
                },
                pre_posx: null,
                pre_posy: null,
                posx: null,
                posy: null,
                wrap_pos: null,
                velx: null,
                vely: null,
                wrap_vel: null,
                forcex: null,
                forcey: null,
                kinvelx: null,
                kinvely: null,
                svelx: null,
                svely: null,
                invalidate_pos: function() {
                    for (var a = this.shapes.begin(); null != a;) {
                        var b = a.elem();
                        1 == b.type && (b.polygon.invalidate_gverts(), b.polygon.invalidate_gaxi());
                        b.invalidate_worldCOM();
                        a = a.next
                    }
                    this.invalidate_worldCOM()
                },
                pos_invalidate: function(a) {
                    this.immutable_midstep("Body::position");
                    if (this.posx != a.x || this.posy != a.y) this.posx = a.x, this.posy = a.y, this.invalidate_pos(), this.wake()
                },
                pos_validate: function() {
                    this.wrap_pos.zpp_inner.x =
                        this.posx;
                    this.wrap_pos.zpp_inner.y = this.posy
                },
                vel_invalidate: function(a) {
                    this.velx = a.x;
                    this.vely = a.y;
                    this.invalidate_wake()
                },
                vel_validate: function() {
                    this.wrap_vel.zpp_inner.x = this.velx;
                    this.wrap_vel.zpp_inner.y = this.vely
                },
                setupPosition: function() {
                    this.wrap_pos = Wa.get(this.posx, this.posy);
                    this.wrap_pos.zpp_inner._inuse = !0;
                    this.world ? this.wrap_pos.zpp_inner._immutable = !0 : (this.wrap_pos.zpp_inner._invalidate = q(this, this.pos_invalidate), this.wrap_pos.zpp_inner._validate = q(this, this.pos_validate))
                },
                setupVelocity: function() {
                    this.wrap_vel =
                        Wa.get(this.velx, this.vely);
                    this.wrap_vel.zpp_inner._inuse = !0;
                    this.world ? this.wrap_vel.zpp_inner._immutable = !0 : (this.wrap_vel.zpp_inner._invalidate = q(this, this.vel_invalidate), this.wrap_vel.zpp_inner._validate = q(this, this.vel_validate))
                },
                angvel: null,
                torque: null,
                kinangvel: null,
                pre_rot: null,
                rot: null,
                invalidate_rot: function() {
                    this.zip_axis = !0;
                    for (var a = this.shapes.begin(); null != a;) {
                        var b = a.elem();
                        1 == b.type && (b.polygon.invalidate_gverts(), b.polygon.invalidate_gaxi());
                        b.invalidate_worldCOM();
                        a = a.next
                    }
                    this.invalidate_worldCOM()
                },
                axisx: null,
                axisy: null,
                zip_axis: null,
                validate_axis: function() {
                    this.zip_axis && (this.zip_axis = !1, this.quick_validate_axis())
                },
                quick_validate_axis: function() {
                    this.axisx = Math.sin(this.rot);
                    this.axisy = Math.cos(this.rot)
                },
                delta_rot: function(a) {
                    this.rot += a;
                    if (1E-4 < a * a) this.quick_validate_axis();
                    else {
                        var b = a * a,
                            c = 1 - .5 * b;
                        b = 1 - b * b / 8;
                        var d = (c * this.axisx + a * this.axisy) * b;
                        this.axisy = (c * this.axisy - a * this.axisx) * b;
                        this.axisx = d
                    }
                },
                kinematicDelaySleep: null,
                mass: null,
                zip_mass: null,
                massMode: null,
                imass: null,
                smass: null,
                cmass: null,
                nomove: null,
                invalidate_mass: function() {
                    this.zip_mass = !0;
                    this.invalidate_gravMass()
                },
                validate_mass: function() {
                    if (this.zip_mass) {
                        this.zip_mass = !1;
                        if (0 == this.massMode) {
                            this.cmass = 0;
                            for (var a = this.shapes.begin(); null != a;) {
                                var b = a.elem();
                                b.refmaterial.density = b.material.density;
                                b.validate_area_inertia();
                                this.cmass += b.area * b.material.density;
                                a = a.next
                            }
                        }
                        this.isDynamic() && !this.nomove ? (this.mass = this.cmass, this.imass = this.smass = 1 / this.mass) : (this.mass = Nb.POSINF(), this.imass = this.smass = 0)
                    }
                },
                gravMass: null,
                zip_gravMass: null,
                gravMassMode: null,
                gravMassScale: null,
                zip_gravMassScale: null,
                invalidate_gravMass: function() {
                    1 != this.gravMassMode && (this.zip_gravMass = !0);
                    2 != this.gravMassMode && (this.zip_gravMassScale = !0);
                    this.wake()
                },
                validate_gravMass: function() {
                    this.zip_gravMass && (this.zip_gravMass = !1, this.validate_mass(), 0 == this.gravMassMode ? (this.validate_mass(), this.gravMass = this.cmass) : 2 == this.gravMassMode && (this.validate_mass(), this.gravMass = this.cmass * this.gravMassScale))
                },
                inertiaMode: null,
                inertia: null,
                zip_inertia: null,
                cinertia: null,
                iinertia: null,
                sinertia: null,
                norotate: null,
                invalidate_inertia: function() {
                    this.zip_inertia = !0;
                    this.wake()
                },
                validate_inertia: function() {
                    if (this.zip_inertia) {
                        this.zip_inertia = !1;
                        if (0 == this.inertiaMode) {
                            this.cinertia = 0;
                            for (var a = this.shapes.begin(); null != a;) {
                                var b = a.elem();
                                b.refmaterial.density = b.material.density;
                                b.validate_area_inertia();
                                this.cinertia += b.inertia * b.area * b.material.density;
                                a = a.next
                            }
                        }
                        this.isDynamic() && !this.norotate ? (this.inertia = this.cinertia, this.sinertia = this.iinertia = 1 / this.inertia) :
                            (this.inertia = Nb.POSINF(), this.sinertia = this.iinertia = 0)
                    }
                },
                invalidate_wake: function() {
                    this.wake()
                },
                aabb: null,
                zip_aabb: null,
                validate_aabb: function() {
                    if (this.zip_aabb) {
                        this.zip_aabb = !1;
                        this.aabb.minx = Nb.POSINF();
                        this.aabb.miny = Nb.POSINF();
                        this.aabb.maxx = Nb.NEGINF();
                        this.aabb.maxy = Nb.NEGINF();
                        for (var a = this.shapes.begin(); null != a;) {
                            var b = a.elem();
                            b.validate_aabb();
                            this.aabb.combine(b.aabb);
                            a = a.next
                        }
                    }
                },
                invalidate_aabb: function() {
                    this.zip_aabb = !0
                },
                localCOMx: null,
                localCOMy: null,
                zip_localCOM: null,
                worldCOMx: null,
                worldCOMy: null,
                zip_worldCOM: null,
                wrap_localCOM: null,
                wrap_worldCOM: null,
                invalidate_localCOM: function() {
                    this.zip_localCOM = !0;
                    this.invalidate_worldCOM()
                },
                invalidate_worldCOM: function() {
                    this.zip_worldCOM = !0
                },
                validate_localCOM: function() {
                    if (this.zip_localCOM) {
                        this.zip_localCOM = !1;
                        for (var a = 0, b = 0, c = 0, d = this.shapes.begin(); null != d;) {
                            var e = d.elem();
                            e.validate_localCOM();
                            e.validate_area_inertia();
                            var f = e.area * e.material.density;
                            a += e.localCOMx * f;
                            b += e.localCOMy * f;
                            c += e.area * e.material.density;
                            d = d.next
                        }
                        0 != c &&
                            (d = 1 / c, this.localCOMx = a * d, this.localCOMy = b * d);
                        null != this.wrap_localCOM && (this.wrap_localCOM.zpp_inner.x = this.localCOMx, this.wrap_localCOM.zpp_inner.y = this.localCOMy);
                        this.zip_mass && 0 == this.massMode && (this.zip_mass = !1, this.cmass = c, this.isDynamic() ? (this.mass = this.cmass, this.imass = this.smass = 1 / this.mass) : (this.mass = Nb.POSINF(), this.imass = this.smass = 0))
                    }
                },
                validate_worldCOM: function() {
                    this.zip_worldCOM && (this.zip_worldCOM = !1, this.validate_localCOM(), this.validate_axis(), this.worldCOMx = this.posx + (this.axisy *
                        this.localCOMx - this.axisx * this.localCOMy), this.worldCOMy = this.posy + (this.localCOMx * this.axisx + this.localCOMy * this.axisy), null != this.wrap_worldCOM && (this.wrap_worldCOM.zpp_inner.x = this.worldCOMx, this.wrap_worldCOM.zpp_inner.y = this.worldCOMy))
                },
                __immutable_midstep: function(a) {},
                aabb_validate: function() {
                    this.validate_aabb()
                },
                shapes_adder: function(a) {
                    return a.zpp_inner.body != this ? (null != a.zpp_inner.body && a.zpp_inner.body.wrap_shapes.remove(a), a.zpp_inner.body = this, a.zpp_inner.addedToBody(), null != this.space &&
                        this.space.added_shape(a.zpp_inner), a.zpp_inner.isPolygon() && (a.zpp_inner.polygon.invalidate_gaxi(), a.zpp_inner.polygon.invalidate_gverts()), !0) : !1
                },
                shapes_subber: function(a) {
                    null != this.space && this.space.removed_shape(a.zpp_inner);
                    a.zpp_inner.body = null;
                    a.zpp_inner.removedFromBody()
                },
                shapes_invalidate: function(a) {
                    this.invalidate_shapes()
                },
                addedToSpace: function() {
                    null == pg.zpp_pool ? this.component = new pg : (this.component = pg.zpp_pool, pg.zpp_pool = this.component.next, this.component.next = null);
                    this.component.alloc();
                    this.component.isBody = !0;
                    this.component.body = this;
                    this.__iaddedToSpace()
                },
                removedFromSpace: function() {
                    for (; !this.arbiters.empty();) this.arbiters.pop_unsafe().lazyRetire(this.space, this);
                    var a = this.component;
                    a.free();
                    a.next = pg.zpp_pool;
                    pg.zpp_pool = a;
                    this.component = null;
                    this.__iremovedFromSpace()
                },
                __class__: wj
            });
            var Bv = function() {
                this.compound = this.space = null;
                this.depth = 0;
                this.outer = this.bodies = this.constraints = this.compounds = this.wrap_constraints = null
            };
            g["zpp_nape.phys.ZPP_Compound"] = Bv;
            Bv.__name__ = ["zpp_nape", "phys", "ZPP_Compound"];
            Bv.__super__ = cd;
            Bv.prototype = p(cd.prototype, {
                outer: null,
                bodies: null,
                constraints: null,
                compounds: null,
                wrap_constraints: null,
                depth: null,
                compound: null,
                space: null,
                __imutable_midstep: function(a) {},
                addedToSpace: function() {
                    this.__iaddedToSpace()
                },
                removedFromSpace: function() {
                    this.__iremovedFromSpace()
                },
                __class__: Bv
            });
            var Dw = function() {
                this.wrap_gravity = null;
                this.viscosity = this.density = this.gravityx = this.gravityy = 0;
                this.shapes = null
            };
            g["zpp_nape.phys.ZPP_FluidProperties"] =
                Dw;
            Dw.__name__ = ["zpp_nape", "phys", "ZPP_FluidProperties"];
            Dw.prototype = {
                shapes: null,
                addShape: function(a) {
                    this.shapes.add(a)
                },
                remShape: function(a) {
                    this.shapes.remove(a)
                },
                viscosity: null,
                density: null,
                gravityx: null,
                gravityy: null,
                wrap_gravity: null,
                __class__: Dw
            };
            var aj = function(a) {
                this.zip_aabb = !1;
                this.sweep = this.node = this.pairs = this.aabb = null;
                this.fluidEnabled = this.sensorEnabled = !1;
                this.circle = this.polygon = this.refmaterial = this.material = this.filter = this.fluidProperties = null;
                this.sweepCoef = 0;
                this.zip_sweepRadius = !1;
                this.sweepRadius = 0;
                this.wrap_localCOM = null;
                this.zip_worldCOM = !1;
                this.worldCOMx = this.worldCOMy = 0;
                this.zip_localCOM = !1;
                this.localCOMx = this.localCOMy = 0;
                this.zip_angDrag = !1;
                this.inertia = this.angDrag = 0;
                this.zip_area_inertia = !1;
                this.type = this.area = 0;
                this.outer = this.body = null;
                cd.call(this);
                this.pairs = new Cv;
                this.ishape = this;
                this.type = a;
                this.aabb = de.get(0, 0, 0, 0);
                this.aabb._immutable = !0;
                this.aabb._validate = q(this, this.aabb_validate);
                this.zip_area_inertia = this.zip_angDrag = this.zip_localCOM = this.zip_sweepRadius = !0;
                this.worldCOMy = this.worldCOMx = this.localCOMy = this.localCOMx = 0;
                this.sensorEnabled = this.fluidEnabled = !1;
                this.body = this.fluidProperties = null;
                this.refmaterial = new dc;
                this.sweepRadius = this.sweepCoef = 0
            };
            g["zpp_nape.shape.ZPP_Shape"] = aj;
            aj.__name__ = ["zpp_nape", "shape", "ZPP_Shape"];
            aj.__super__ = cd;
            aj.prototype = p(cd.prototype, {
                outer: null,
                body: null,
                type: null,
                isCircle: function() {
                    return 0 == this.type
                },
                isPolygon: function() {
                    return 1 == this.type
                },
                area: null,
                zip_area_inertia: null,
                inertia: null,
                angDrag: null,
                zip_angDrag: null,
                localCOMx: null,
                localCOMy: null,
                zip_localCOM: null,
                worldCOMx: null,
                worldCOMy: null,
                zip_worldCOM: null,
                wrap_localCOM: null,
                sweepRadius: null,
                zip_sweepRadius: null,
                sweepCoef: null,
                invalidate_sweepRadius: function() {
                    this.zip_sweepRadius = !0
                },
                validate_sweepRadius: function() {
                    this.zip_sweepRadius && (this.zip_sweepRadius = !1, this.isCircle() ? this.circle.__validate_sweepRadius() : this.polygon.__validate_sweepRadius())
                },
                circle: null,
                polygon: null,
                refmaterial: null,
                material: null,
                filter: null,
                fluidProperties: null,
                fluidEnabled: null,
                sensorEnabled: null,
                sweep: null,
                node: null,
                pairs: null,
                aabb: null,
                zip_aabb: null,
                validate_aabb: function() {
                    this.zip_aabb && null != this.body && (this.zip_aabb = !1, this.isCircle() ? this.circle.__validate_aabb() : this.polygon.__validate_aabb())
                },
                force_validate_aabb: function() {
                    this.isCircle() ? this.circle._force_validate_aabb() : this.polygon._force_validate_aabb()
                },
                invalidate_aabb: function() {
                    this.zip_aabb = !0;
                    null != this.body && this.body.invalidate_aabb()
                },
                validate_area_inertia: function() {
                    this.zip_area_inertia && (this.zip_area_inertia = !1, this.isCircle() ? this.circle.__validate_area_inertia() : this.polygon.__validate_area_inertia())
                },
                validate_angDrag: function() {
                    if (this.zip_angDrag || this.refmaterial.dynamicFriction != this.material.dynamicFriction) this.zip_angDrag = !1, this.refmaterial.dynamicFriction = this.material.dynamicFriction, this.isCircle() ? this.circle.__validate_angDrag() : this.polygon.__validate_angDrag()
                },
                validate_localCOM: function() {
                    this.zip_localCOM && (this.zip_localCOM = !1, this.isPolygon() && this.polygon.__validate_localCOM(),
                        null != this.wrap_localCOM && (this.wrap_localCOM.zpp_inner.x = this.localCOMx, this.wrap_localCOM.zpp_inner.y = this.localCOMy))
                },
                validate_worldCOM: function() {
                    this.zip_worldCOM && null != this.body && (this.zip_worldCOM = !1, this.validate_localCOM(), this.body.validate_axis(), this.worldCOMx = this.body.posx + (this.body.axisy * this.localCOMx - this.body.axisx * this.localCOMy), this.worldCOMy = this.body.posy + (this.localCOMx * this.body.axisx + this.localCOMy * this.body.axisy))
                },
                invalidate_area_inertia: function() {
                    this.zip_area_inertia = !0;
                    null != this.body && (this.body.invalidate_localCOM(), this.body.invalidate_mass(), this.body.invalidate_inertia())
                },
                invalidate_angDrag: function() {
                    this.zip_angDrag = !0
                },
                invalidate_localCOM: function() {
                    this.zip_localCOM = !0;
                    this.invalidate_area_inertia();
                    this.isCircle() && this.invalidate_sweepRadius();
                    this.invalidate_angDrag();
                    this.invalidate_worldCOM();
                    null != this.body && this.body.invalidate_localCOM()
                },
                invalidate_worldCOM: function() {
                    this.zip_worldCOM = !0;
                    this.invalidate_aabb()
                },
                invalidate_material: function(a) {
                    0 !=
                        (a & dc.WAKE) && this.wake();
                    0 != (a & dc.ARBITERS) && null != this.body && this.body.refreshArbiters();
                    0 != (a & dc.PROPS) && null != this.body && (this.body.invalidate_localCOM(), this.body.invalidate_mass(), this.body.invalidate_inertia());
                    0 != (a & dc.ANGDRAG) && this.invalidate_angDrag();
                    this.refmaterial.set(this.material)
                },
                invalidate_filter: function() {
                    this.wake()
                },
                aabb_validate: function() {
                    this.validate_aabb()
                },
                setMaterial: function(a) {
                    this.material != a && (null != this.body && null != this.body.space && null != this.material && this.material.remShape(this),
                        this.material = a, null != this.body && null != this.body.space && a.addShape(this), this.wake(), null != this.body && this.body.refreshArbiters())
                },
                setFilter: function(a) {
                    this.filter != a && (null != this.body && null != this.body.space && null != this.filter && this.filter.remShape(this), this.filter = a, null != this.body && null != this.body.space && a.addShape(this), this.wake())
                },
                __immutable_midstep: function(a) {},
                addedToBody: function() {
                    this.invalidate_worldCOM();
                    this.invalidate_aabb()
                },
                removedFromBody: function() {},
                addedToSpace: function() {
                    this.__iaddedToSpace();
                    this.material.addShape(this);
                    this.filter.addShape(this);
                    null != this.fluidProperties && this.fluidProperties.addShape(this)
                },
                removedFromSpace: function() {
                    this.__iremovedFromSpace();
                    this.material.remShape(this);
                    this.filter.remShape(this);
                    null != this.fluidProperties && this.fluidProperties.remShape(this)
                },
                __class__: aj
            });
            var nr = function() {
                this.radius = 0;
                this.outer_zn = null;
                aj.call(this, 0);
                this.circle = this;
                this.zip_localCOM = !1
            };
            g["zpp_nape.shape.ZPP_Circle"] = nr;
            nr.__name__ = ["zpp_nape", "shape", "ZPP_Circle"];
            nr.__super__ =
                aj;
            nr.prototype = p(aj.prototype, {
                outer_zn: null,
                radius: null,
                invalidate_radius: function() {
                    this.invalidate_area_inertia();
                    this.invalidate_angDrag();
                    this.invalidate_aabb();
                    null != this.body && this.body.wake()
                },
                localCOM_validate: function() {
                    this.wrap_localCOM.zpp_inner.x = this.localCOMx;
                    this.wrap_localCOM.zpp_inner.y = this.localCOMy
                },
                localCOM_invalidate: function(a) {
                    this.localCOMx = a.x;
                    this.localCOMy = a.y;
                    this.invalidate_localCOM();
                    null != this.body && this.body.wake()
                },
                setupLocalCOM: function() {
                    this.wrap_localCOM = Wa.get(this.localCOMx,
                        this.localCOMy);
                    this.wrap_localCOM.zpp_inner._inuse = !0;
                    this.wrap_localCOM.zpp_inner._validate = q(this, this.localCOM_validate);
                    this.wrap_localCOM.zpp_inner._invalidate = q(this, this.localCOM_invalidate)
                },
                __validate_aabb: function() {
                    this.validate_worldCOM();
                    var a = this.radius,
                        b = this.radius;
                    this.aabb.minx = this.worldCOMx - a;
                    this.aabb.miny = this.worldCOMy - b;
                    this.aabb.maxx = this.worldCOMx + a;
                    this.aabb.maxy = this.worldCOMy + b
                },
                _force_validate_aabb: function() {
                    this.worldCOMx = this.body.posx + (this.body.axisy * this.localCOMx -
                        this.body.axisx * this.localCOMy);
                    this.worldCOMy = this.body.posy + (this.localCOMx * this.body.axisx + this.localCOMy * this.body.axisy);
                    this.aabb.minx = this.worldCOMx - this.radius;
                    this.aabb.miny = this.worldCOMy - this.radius;
                    this.aabb.maxx = this.worldCOMx + this.radius;
                    this.aabb.maxy = this.worldCOMy + this.radius
                },
                __validate_sweepRadius: function() {
                    this.sweepCoef = Math.sqrt(this.localCOMx * this.localCOMx + this.localCOMy * this.localCOMy);
                    this.sweepRadius = this.sweepCoef + this.radius
                },
                __validate_area_inertia: function() {
                    var a =
                        this.radius * this.radius;
                    this.area = a * Math.PI;
                    this.inertia = .5 * a + (this.localCOMx * this.localCOMx + this.localCOMy * this.localCOMy)
                },
                __validate_angDrag: function() {
                    var a = this.localCOMx * this.localCOMx + this.localCOMy * this.localCOMy,
                        b = this.radius * this.radius;
                    this.angDrag = (a + 2 * b) * this.material.dynamicFriction * K.fluidAngularDragFriction + .5 * K.fluidAngularDrag * (1 + K.fluidVacuumDrag) * a;
                    this.angDrag /= 2 * (a + .5 * b)
                },
                __scale: function(a, b) {
                    var c = ((0 > a ? -a : a) + (0 > b ? -b : b)) / 2;
                    this.radius *= 0 > c ? -c : c;
                    this.invalidate_radius();
                    0 < this.localCOMx *
                        this.localCOMx + this.localCOMy * this.localCOMy && (this.localCOMx *= a, this.localCOMy *= b, this.invalidate_localCOM())
                },
                __translate: function(a, b) {
                    this.localCOMx += 1 * a;
                    this.localCOMy += 1 * b;
                    this.invalidate_localCOM()
                },
                __rotate: function(a, b) {
                    if (0 < this.localCOMx * this.localCOMx + this.localCOMy * this.localCOMy) {
                        var c = b * this.localCOMx - a * this.localCOMy;
                        a = this.localCOMx * a + this.localCOMy * b;
                        this.localCOMx = c;
                        this.localCOMy = a;
                        this.invalidate_localCOM()
                    }
                },
                __transform: function(a) {
                    var b = a.get_a() * a.get_d() - a.get_b() * a.get_c();
                    0 > b && (b = -b);
                    this.radius *= Math.sqrt(b);
                    b = a.get_a() * this.localCOMx + a.get_b() * this.localCOMy + a.get_tx();
                    this.localCOMy = a.get_c() * this.localCOMx + a.get_d() * this.localCOMy + a.get_ty();
                    this.localCOMx = b;
                    this.invalidate_radius();
                    this.invalidate_localCOM()
                },
                __class__: nr
            });
            var ve = function() {
                this.tp0 = this.tp1 = 0;
                this.lp0 = this.gp0 = this.lp1 = this.gp1 = null;
                this.length = this.lprojection = this.gprojection = 0;
                this.wrap_gnorm = null;
                this.gnormx = this.gnormy = 0;
                this.wrap_lnorm = null;
                this.lnormx = this.lnormy = 0;
                this.next = this.polygon =
                    this.outer = null;
                this.gprojection = this.lprojection = this.length = this.gnormy = this.gnormx = this.lnormy = this.lnormx = 0
            };
            g["zpp_nape.shape.ZPP_Edge"] = ve;
            ve.__name__ = ["zpp_nape", "shape", "ZPP_Edge"];
            ve.prototype = {
                next: null,
                free: function() {
                    this.polygon = null
                },
                alloc: function() {},
                polygon: null,
                outer: null,
                wrapper: function() {
                    null == this.outer && (ve.internal = !0, this.outer = new Wu, ve.internal = !1, this.outer.zpp_inner = this);
                    return this.outer
                },
                lnormx: null,
                lnormy: null,
                wrap_lnorm: null,
                gnormx: null,
                gnormy: null,
                wrap_gnorm: null,
                length: null,
                lprojection: null,
                gprojection: null,
                lp0: null,
                gp0: null,
                lp1: null,
                gp1: null,
                tp0: null,
                tp1: null,
                __class__: ve
            };
            var or = function() {
                this.reverse_flag = this.zip_lverts = this.zip_laxi = this.zip_gverts = this.zip_gaxi = this.zip_valid = this.zip_sanitation = !1;
                this.edgeCnt = 0;
                this.outer_zn = this.lverts = this.wrap_lverts = this.gverts = this.wrap_gverts = this.edges = this.wrap_edges = null;
                aj.call(this, 1);
                this.polygon = this;
                this.lverts = new kb;
                this.gverts = new kb;
                this.edges = new Dv;
                this.edgeCnt = 0
            };
            g["zpp_nape.shape.ZPP_Polygon"] =
                or;
            or.__name__ = ["zpp_nape", "shape", "ZPP_Polygon"];
            or.__super__ = aj;
            or.prototype = p(aj.prototype, {
                outer_zn: null,
                lverts: null,
                wrap_lverts: null,
                gverts: null,
                wrap_gverts: null,
                edges: null,
                wrap_edges: null,
                edgeCnt: null,
                reverse_flag: null,
                lverts_pa_invalidate: function(a) {
                    this.invalidate_lverts()
                },
                gverts_pa_validate: function() {
                    this.validate_gverts()
                },
                lverts_post_adder: function(a) {
                    a.zpp_inner._invalidate = q(this, this.lverts_pa_invalidate);
                    for (var b = null, c = null, d = this.lverts.begin(); null != d && d.elem() != a.zpp_inner;) b =
                        null == b ? this.gverts.begin() : b.next, c = null == c ? this.edges.begin() : c.next, d = d.next;
                    a = kb.get(0, 0, !0);
                    this.gverts.insert(b, a);
                    null != this.lverts.begin().next && (null == this.lverts.begin().next.next ? (null == ve.zpp_pool ? c = new ve : (c = ve.zpp_pool, ve.zpp_pool = c.next, c.next = null), c.alloc(), c.polygon = this, this.edges.add(c), null == ve.zpp_pool ? c = new ve : (c = ve.zpp_pool, ve.zpp_pool = c.next, c.next = null), c.alloc(), c.polygon = this, this.edges.add(c), this.edgeCnt += 2) : (null == ve.zpp_pool ? b = new ve : (b = ve.zpp_pool, ve.zpp_pool = b.next,
                        b.next = null), b.alloc(), b.polygon = this, this.edges.insert(c, b), this.edgeCnt++));
                    a._validate = q(this, this.gverts_pa_validate)
                },
                lverts_subber: function(a) {
                    this.cleanup_lvert(a.zpp_inner)
                },
                lverts_invalidate: function(a) {
                    this.invalidate_lverts()
                },
                lverts_validate: function() {
                    this.validate_lverts()
                },
                getlverts: function() {
                    this.wrap_lverts = Pl.get(this.lverts);
                    this.wrap_lverts.zpp_inner.post_adder = q(this, this.lverts_post_adder);
                    this.wrap_lverts.zpp_inner.subber = q(this, this.lverts_subber);
                    this.wrap_lverts.zpp_inner._invalidate =
                        q(this, this.lverts_invalidate);
                    this.wrap_lverts.zpp_inner._validate = q(this, this.lverts_validate);
                    this.wrap_lverts.zpp_inner.reverse_flag = this.reverse_flag
                },
                zip_lverts: null,
                invalidate_lverts: function() {
                    this.invalidate_laxi();
                    this.invalidate_area_inertia();
                    this.invalidate_angDrag();
                    this.invalidate_localCOM();
                    this.invalidate_gverts();
                    this.zip_sanitation = this.zip_valid = this.zip_lverts = !0;
                    null != this.body && this.body.wake()
                },
                zip_laxi: null,
                invalidate_laxi: function() {
                    this.invalidate_gaxi();
                    this.invalidate_sweepRadius();
                    this.zip_laxi = !0
                },
                zip_gverts: null,
                invalidate_gverts: function() {
                    this.invalidate_aabb();
                    this.zip_gverts = !0
                },
                zip_gaxi: null,
                invalidate_gaxi: function() {
                    this.zip_gaxi = !0
                },
                zip_valid: null,
                validate_lverts: function() {
                    this.zip_lverts && (this.zip_lverts = !1, 2 < this.lverts.size() && (this.validate_area_inertia(), 0 > this.area && (this.reverse_vertices(), this.area = -this.area)))
                },
                cleanup_lvert: function(a) {
                    for (var b = null, c = null, d = this.lverts.begin(); null != d && d.elem() != a;) b = null == b ? this.gverts.begin() : b.next, c = null == c ? this.edges.begin() :
                        c.next, d = d.next;
                    a = null == b ? this.gverts.front() : b.next.elem();
                    this.gverts.erase(b);
                    a.free();
                    a.next = kb.zpp_pool;
                    kb.zpp_pool = a;
                    2 == this.edgeCnt ? (c = this.edges.pop_unsafe(), c.free(), c.next = ve.zpp_pool, ve.zpp_pool = c, c = this.edges.pop_unsafe(), c.free(), c.next = ve.zpp_pool, ve.zpp_pool = c, this.edgeCnt = 0) : 0 != this.edgeCnt && (b = null == c ? this.edges.front() : c.next.elem(), this.edges.erase(c), b.free(), b.next = ve.zpp_pool, ve.zpp_pool = b, this.edgeCnt--)
                },
                zip_sanitation: null,
                splice_collinear: function() {
                    this.zip_sanitation &&
                        (this.zip_sanitation = !1, this.splice_collinear_real())
                },
                splice_collinear_real: function() {
                    if (null != this.lverts.begin() && null != this.lverts.begin().next && null != this.lverts.begin().next.next) {
                        for (var a = null, b = this.lverts.begin(); null != b;) {
                            var c = null == b.next ? this.lverts.begin() : b.next,
                                d = b.elem();
                            c = c.elem();
                            pc.vec_dsq(d.x, d.y, c.x, c.y) < K.epsilon * K.epsilon ? (this.cleanup_lvert(b.elem()), b = this.lverts.erase(a)) : (a = b, b = b.next)
                        }
                        if (!this.lverts.empty())
                            for (;;) {
                                a = !1;
                                for (b = this.lverts.begin(); null != b;) {
                                    d = null == b.next ?
                                        this.lverts.begin() : b.next;
                                    var e = null == d.next ? this.lverts.begin() : d.next;
                                    c = b.elem();
                                    var f = d.elem();
                                    e = e.elem();
                                    var h = f.x - c.x;
                                    c = (e.y - f.y) * h - (e.x - f.x) * (f.y - c.y);
                                    c * c >= K.epsilon * K.epsilon || (this.cleanup_lvert(d.elem()), this.lverts.erase(null == b.next ? null : b), a = !0);
                                    b = b.next
                                }
                                if (!a) break
                            }
                    }
                },
                reverse_vertices: function() {
                    this.lverts.reverse();
                    this.gverts.reverse();
                    this.edges.reverse();
                    var a = this.edges.iterator_at(this.edgeCnt - 1),
                        b = this.edges.pop_unsafe();
                    this.edges.insert(a, b);
                    this.reverse_flag = !this.reverse_flag;
                    null != this.wrap_lverts && (this.wrap_lverts.zpp_inner.reverse_flag = this.reverse_flag);
                    null != this.wrap_gverts && (this.wrap_gverts.zpp_inner.reverse_flag = this.reverse_flag);
                    null != this.wrap_edges && (this.wrap_edges.zpp_inner.reverse_flag = this.reverse_flag)
                },
                validate_laxi: function() {
                    if (this.zip_laxi) {
                        this.zip_laxi = !1;
                        this.validate_lverts();
                        var a = this.edges.begin(),
                            b = this.lverts.begin(),
                            c = b.elem();
                        for (b = b.next; null != b;) {
                            var d = b.elem(),
                                e = a.elem();
                            a = a.next;
                            e.lp0 = c;
                            e.lp1 = d;
                            var f = c.x - d.x;
                            var h = c.y - d.y;
                            var k = Math.sqrt(f *
                                f + h * h);
                            e.length = k;
                            k = 1 / k;
                            f *= k;
                            h *= k;
                            k = f;
                            f = -h;
                            h = k;
                            e.lprojection = f * c.x + h * c.y;
                            e.lnormx = f;
                            e.lnormy = h;
                            null != e.wrap_lnorm && (e.wrap_lnorm.zpp_inner.x = f, e.wrap_lnorm.zpp_inner.y = h);
                            c = d;
                            b = b.next
                        }
                        d = this.lverts.front();
                        a = a.elem();
                        a.lp0 = c;
                        a.lp1 = d;
                        b = c.x - d.x;
                        d = c.y - d.y;
                        e = Math.sqrt(b * b + d * d);
                        a.length = e;
                        e = 1 / e;
                        f = b * e;
                        b = -(d * e);
                        d = f;
                        a.lprojection = b * c.x + d * c.y;
                        a.lnormx = b;
                        a.lnormy = d;
                        null != a.wrap_lnorm && (a.wrap_lnorm.zpp_inner.x = b, a.wrap_lnorm.zpp_inner.y = d)
                    }
                },
                validate_gverts: function() {
                    if (this.zip_gverts && null != this.body) {
                        this.zip_gverts = !1;
                        this.validate_lverts();
                        this.body.validate_axis();
                        for (var a = this.lverts.begin(), b = this.gverts.begin(); null != b;) {
                            var c = b.elem(),
                                d = a.elem();
                            a = a.next;
                            c.x = this.body.posx + (this.body.axisy * d.x - this.body.axisx * d.y);
                            c.y = this.body.posy + (d.x * this.body.axisx + d.y * this.body.axisy);
                            b = b.next
                        }
                    }
                },
                validate_gaxi: function() {
                    if (this.zip_gaxi && null != this.body) {
                        this.zip_gaxi = !1;
                        this.validate_laxi();
                        this.body.validate_axis();
                        this.validate_gverts();
                        var a = this.edges.begin(),
                            b = this.gverts.begin(),
                            c = b.elem();
                        for (b = b.next; null !=
                            b;) {
                            var d = b.elem(),
                                e = a.elem();
                            a = a.next;
                            e.gp0 = c;
                            e.gp1 = d;
                            e.gnormx = this.body.axisy * e.lnormx - this.body.axisx * e.lnormy;
                            e.gnormy = e.lnormx * this.body.axisx + e.lnormy * this.body.axisy;
                            e.gprojection = this.body.posx * e.gnormx + this.body.posy * e.gnormy + e.lprojection;
                            null != e.wrap_gnorm && (e.wrap_gnorm.zpp_inner.x = e.gnormx, e.wrap_gnorm.zpp_inner.y = e.gnormy);
                            e.tp0 = e.gp0.y * e.gnormx - e.gp0.x * e.gnormy;
                            e.tp1 = e.gp1.y * e.gnormx - e.gp1.x * e.gnormy;
                            c = d;
                            b = b.next
                        }
                        b = this.gverts.front();
                        a = a.elem();
                        a.gp0 = c;
                        a.gp1 = b;
                        a.gnormx = this.body.axisy *
                            a.lnormx - this.body.axisx * a.lnormy;
                        a.gnormy = a.lnormx * this.body.axisx + a.lnormy * this.body.axisy;
                        a.gprojection = this.body.posx * a.gnormx + this.body.posy * a.gnormy + a.lprojection;
                        null != a.wrap_gnorm && (a.wrap_gnorm.zpp_inner.x = a.gnormx, a.wrap_gnorm.zpp_inner.y = a.gnormy);
                        a.tp0 = a.gp0.y * a.gnormx - a.gp0.x * a.gnormy;
                        a.tp1 = a.gp1.y * a.gnormx - a.gp1.x * a.gnormy
                    }
                },
                __validate_aabb: function() {
                    this.validate_gverts();
                    var a = this.gverts.front();
                    this.aabb.minx = a.x;
                    this.aabb.miny = a.y;
                    this.aabb.maxx = a.x;
                    this.aabb.maxy = a.y;
                    for (a = this.gverts.begin().next; null !=
                        a;) {
                        var b = a.elem();
                        b.x < this.aabb.minx && (this.aabb.minx = b.x);
                        b.x > this.aabb.maxx && (this.aabb.maxx = b.x);
                        b.y < this.aabb.miny && (this.aabb.miny = b.y);
                        b.y > this.aabb.maxy && (this.aabb.maxy = b.y);
                        a = a.next
                    }
                },
                _force_validate_aabb: function() {
                    var a = this.lverts.begin(),
                        b = this.gverts.front(),
                        c = a.elem();
                    a = a.next;
                    b.x = this.body.posx + (this.body.axisy * c.x - this.body.axisx * c.y);
                    b.y = this.body.posy + (c.x * this.body.axisx + c.y * this.body.axisy);
                    this.aabb.minx = b.x;
                    this.aabb.miny = b.y;
                    this.aabb.maxx = b.x;
                    this.aabb.maxy = b.y;
                    for (b = this.gverts.begin().next; null !=
                        b;) {
                        c = b.elem();
                        var d = a.elem();
                        a = a.next;
                        c.x = this.body.posx + (this.body.axisy * d.x - this.body.axisx * d.y);
                        c.y = this.body.posy + (d.x * this.body.axisx + d.y * this.body.axisy);
                        c.x < this.aabb.minx && (this.aabb.minx = c.x);
                        c.x > this.aabb.maxx && (this.aabb.maxx = c.x);
                        c.y < this.aabb.miny && (this.aabb.miny = c.y);
                        c.y > this.aabb.maxy && (this.aabb.maxy = c.y);
                        b = b.next
                    }
                },
                __validate_sweepRadius: function() {
                    var a = 0,
                        b = 0;
                    this.validate_laxi();
                    for (var c = this.lverts.begin(); null != c;) {
                        var d = c.elem();
                        d = d.x * d.x + d.y * d.y;
                        d > a && (a = d);
                        c = c.next
                    }
                    for (c =
                        this.edges.begin(); null != c;) {
                        d = c.elem();
                        if (d.lprojection < b && (b = d.lprojection, 0 > b)) break;
                        c = c.next
                    }
                    0 > b && (b = 0);
                    this.sweepRadius = Math.sqrt(a);
                    this.sweepCoef = this.sweepRadius - b
                },
                __validate_area_inertia: function() {
                    if (null == this.lverts.begin() || null == this.lverts.begin().next || null == this.lverts.begin().next.next) this.inertia = this.area = 0;
                    else {
                        var a = this.area = 0,
                            b = 0,
                            c = this.lverts.begin(),
                            d = c.elem();
                        c = c.next;
                        var e = c.elem();
                        for (c = c.next; null != c;) {
                            var f = c.elem(),
                                h = e.y * d.x - e.x * d.y;
                            a += h * (e.x * e.x + e.y * e.y + (e.x * d.x +
                                e.y * d.y) + (d.x * d.x + d.y * d.y));
                            b += h;
                            this.area += e.x * (f.y - d.y);
                            d = e;
                            e = f;
                            c = c.next
                        }
                        c = this.lverts.begin();
                        f = c.elem();
                        h = e.y * d.x - e.x * d.y;
                        a += h * (e.x * e.x + e.y * e.y + (e.x * d.x + e.y * d.y) + (d.x * d.x + d.y * d.y));
                        b += h;
                        this.area += e.x * (f.y - d.y);
                        d = e;
                        e = f;
                        c = c.next;
                        c = c.elem();
                        f = e.y * d.x - e.x * d.y;
                        h = e.x * e.x + e.y * e.y + (e.x * d.x + e.y * d.y) + (d.x * d.x + d.y * d.y);
                        this.area += e.x * (c.y - d.y);
                        this.inertia = (a + f * h) / (6 * (b + f));
                        this.area *= .5;
                        0 > this.area && (this.area = -this.area, this.reverse_vertices())
                    }
                },
                __validate_angDrag: function() {
                    this.validate_area_inertia();
                    this.validate_laxi();
                    var a = 0,
                        b = this.edges.begin(),
                        c = 0,
                        d = this.lverts.begin(),
                        e = d.elem();
                    for (d = d.next; null != d;) {
                        var f = d.elem(),
                            h = b.elem();
                        b = b.next;
                        c += h.length;
                        var k = f.x - e.x;
                        var m = f.y - e.y;
                        a += h.length * K.fluidAngularDragFriction * this.material.dynamicFriction * h.lprojection * h.lprojection;
                        var g = -(e.y * h.lnormx - e.x * h.lnormy) / (m * h.lnormx - k * h.lnormy);
                        if (0 < g) {
                            var l = 1 < g ? 1 : g;
                            var n = e.x;
                            var p = e.y;
                            var x = l;
                            n += k * x;
                            p += m * x;
                            x = h.lnormy * e.x - h.lnormx * e.y;
                            n = h.lnormy * n - h.lnormx * p;
                            a += (n * n * n - x * x * x) / (3 * (n - x)) * l * h.length * K.fluidAngularDrag
                        }
                        1 >
                            g && (g = 0 > g ? 0 : g, l = e.x, e = e.y, n = g, l += k * n, e += m * n, e = h.lnormy * l - h.lnormx * e, k = h.lnormy * f.x - h.lnormx * f.y, a += (k * k * k - e * e * e) / (3 * (k - e)) * K.fluidVacuumDrag * (1 - g) * h.length * K.fluidAngularDrag);
                        e = f;
                        d = d.next
                    }
                    for (;;) {
                        d = this.lverts.begin();
                        d = d.elem();
                        b = b.elem();
                        c += b.length;
                        f = d.x - e.x;
                        h = d.y - e.y;
                        a += b.length * K.fluidAngularDragFriction * this.material.dynamicFriction * b.lprojection * b.lprojection;
                        k = -(e.y * b.lnormx - e.x * b.lnormy) / (h * b.lnormx - f * b.lnormy);
                        0 < k && (m = 1 < k ? 1 : k, g = e.x, l = e.y, n = m, g += f * n, l += h * n, n = b.lnormy * e.x - b.lnormx * e.y, g =
                            b.lnormy * g - b.lnormx * l, a += (g * g * g - n * n * n) / (3 * (g - n)) * m * b.length * K.fluidAngularDrag);
                        1 > k && (k = 0 > k ? 0 : k, m = e.x, e = e.y, g = k, m += f * g, e += h * g, e = b.lnormy * m - b.lnormx * e, d = b.lnormy * d.x - b.lnormx * d.y, a += (d * d * d - e * e * e) / (3 * (d - e)) * K.fluidVacuumDrag * (1 - k) * b.length * K.fluidAngularDrag);
                        break
                    }
                    this.angDrag = a / (this.inertia * c)
                },
                __validate_localCOM: function() {
                    if (null == this.lverts.begin().next) this.localCOMx = this.lverts.front().x, this.localCOMy = this.lverts.front().y;
                    else if (null == this.lverts.begin().next.next) this.localCOMx = this.lverts.front().x,
                        this.localCOMy = this.lverts.front().y, this.localCOMx += 1 * this.lverts.begin().next.elem().x, this.localCOMy += 1 * this.lverts.begin().next.elem().y, this.localCOMx *= .5, this.localCOMy *= .5;
                    else {
                        var a = this.localCOMy = this.localCOMx = 0,
                            b = this.lverts.begin(),
                            c = b.elem();
                        b = b.next;
                        var d = b.elem();
                        for (b = b.next; null != b;) {
                            var e = b.elem();
                            a += d.x * (e.y - c.y);
                            c = e.y * d.x - e.x * d.y;
                            this.localCOMx += (d.x + e.x) * c;
                            this.localCOMy += (d.y + e.y) * c;
                            c = d;
                            d = e;
                            b = b.next
                        }
                        b = this.lverts.begin();
                        e = b.elem();
                        a += d.x * (e.y - c.y);
                        c = e.y * d.x - e.x * d.y;
                        this.localCOMx +=
                            (d.x + e.x) * c;
                        this.localCOMy += (d.y + e.y) * c;
                        c = d;
                        d = e;
                        b = b.next;
                        b = b.elem();
                        a += d.x * (b.y - c.y);
                        c = b.y * d.x - b.x * d.y;
                        this.localCOMx += (d.x + b.x) * c;
                        this.localCOMy += (d.y + b.y) * c;
                        a = 1 / (3 * a);
                        this.localCOMx *= a;
                        this.localCOMy *= a
                    }
                },
                localCOM_validate: function() {
                    this.validate_localCOM()
                },
                localCOM_invalidate: function(a) {
                    this.validate_localCOM();
                    var b = a.x - this.localCOMx;
                    a = a.y - this.localCOMy;
                    for (var c = this.lverts.begin(); null != c;) {
                        var d = c.elem();
                        d.x += 1 * b;
                        d.y += 1 * a;
                        c = c.next
                    }
                    this.invalidate_lverts()
                },
                setupLocalCOM: function() {
                    this.wrap_localCOM =
                        Wa.get(this.localCOMx, this.localCOMy);
                    this.wrap_localCOM.zpp_inner._inuse = !0;
                    this.wrap_localCOM.zpp_inner._validate = q(this, this.localCOM_validate);
                    this.wrap_localCOM.zpp_inner._invalidate = q(this, this.localCOM_invalidate)
                },
                __translate: function(a, b) {
                    for (var c = this.lverts.begin(); null != c;) {
                        var d = c.elem();
                        d.x += 1 * a;
                        d.y += 1 * b;
                        c = c.next
                    }
                    this.invalidate_lverts()
                },
                __scale: function(a, b) {
                    for (var c = this.lverts.begin(); null != c;) {
                        var d = c.elem();
                        d.x *= a;
                        d.y *= b;
                        c = c.next
                    }
                    this.invalidate_lverts()
                },
                __rotate: function(a,
                    b) {
                    for (var c = this.lverts.begin(); null != c;) {
                        var d = c.elem();
                        var e = b * d.x - a * d.y;
                        var f = d.x * a + d.y * b;
                        d.x = e;
                        d.y = f;
                        c = c.next
                    }
                    this.invalidate_lverts()
                },
                __transform: function(a) {
                    for (var b = this.lverts.begin(); null != b;) {
                        var c = b.elem(),
                            d = a.get_a() * c.x + a.get_b() * c.y + a.get_tx();
                        c.y = a.get_c() * c.x + a.get_d() * c.y + a.get_ty();
                        c.x = d;
                        b = b.next
                    }
                    this.invalidate_lverts()
                },
                __class__: or
            });
            var Hj = function() {
                this.sweep = this.dynab = this.matrix = this.circShape = null;
                this.is_sweep = !1;
                this.space = null
            };
            g["zpp_nape.space.ZPP_Broadphase"] =
                Hj;
            Hj.__name__ = ["zpp_nape", "space", "ZPP_Broadphase"];
            Hj.prototype = {
                space: null,
                is_sweep: null,
                sweep: null,
                dynab: null,
                insert: function(a) {
                    this.is_sweep ? this.sweep.__insert(a) : this.dynab.__insert(a)
                },
                remove: function(a) {
                    this.is_sweep ? this.sweep.__remove(a) : this.dynab.__remove(a)
                },
                sync: function(a) {
                    this.is_sweep ? this.sweep.__sync(a) : this.dynab.__sync(a)
                },
                broadphase: function(a, b) {},
                clear: function() {},
                matrix: null,
                circShape: null,
                updateCircShape: function(a, b, c) {
                    if (null == this.circShape)(new Ag(Pc.get_STATIC())).get_shapes().add(this.circShape =
                        new bk(c, Wa.get(a, b)));
                    else {
                        var d = this.circShape.zpp_inner.circle;
                        c /= d.radius;
                        null == this.matrix && (this.matrix = new Su);
                        this.matrix.set_a(this.matrix.set_d(c));
                        this.matrix.set_b(this.matrix.set_c(0));
                        this.matrix.set_tx(a - c * d.localCOMx);
                        this.matrix.set_ty(b - c * d.localCOMy);
                        this.circShape.transform(this.matrix)
                    }
                    this.circShape.zpp_inner.validate_aabb()
                },
                shapesInCircle: function(a, b, c, d, e, f) {
                    return null
                },
                __class__: Hj
            };
            var gf = function() {
                this.synced = this.first_sync = !1;
                this.snext = null;
                this.moved = !1;
                this.next =
                    this.mnext = null;
                this.height = 0;
                this.parent = this.child1 = this.child2 = null;
                this.dyn = !1;
                this.aabb = this.shape = null;
                this.height = -1
            };
            g["zpp_nape.space.ZPP_AABBNode"] = gf;
            gf.__name__ = ["zpp_nape", "space", "ZPP_AABBNode"];
            gf.prototype = {
                aabb: null,
                shape: null,
                dyn: null,
                parent: null,
                child1: null,
                child2: null,
                height: null,
                next: null,
                alloc: function() {
                    null == de.zpp_pool ? this.aabb = new de : (this.aabb = de.zpp_pool, de.zpp_pool = this.aabb.next, this.aabb.next = null);
                    this.aabb.alloc();
                    this.first_sync = this.synced = this.moved = !1
                },
                free: function() {
                    this.height = -1;
                    var a = this.aabb;
                    a.free();
                    a.next = de.zpp_pool;
                    de.zpp_pool = a;
                    this.mnext = this.snext = this.next = this.child1 = this.child2 = this.parent = null
                },
                mnext: null,
                moved: null,
                snext: null,
                synced: null,
                first_sync: null,
                isLeaf: function() {
                    return null == this.child1
                },
                __class__: gf
            };
            var Yd = function() {
                this.arb = this.next = null;
                this.id = this.di = 0;
                this.first = this.sleeping = !1;
                this.n1 = this.n2 = null
            };
            g["zpp_nape.space.ZPP_AABBPair"] = Yd;
            Yd.__name__ = ["zpp_nape", "space", "ZPP_AABBPair"];
            Yd.prototype = {
                n1: null,
                n2: null,
                first: null,
                sleeping: null,
                id: null,
                di: null,
                arb: null,
                next: null,
                alloc: function() {},
                free: function() {
                    this.n1 = this.n2 = null;
                    this.sleeping = !1
                },
                __class__: Yd
            };
            var Jg = function() {
                this.root = null
            };
            g["zpp_nape.space.ZPP_AABBTree"] = Jg;
            Jg.__name__ = ["zpp_nape", "space", "ZPP_AABBTree"];
            Jg.prototype = {
                root: null,
                clear: function() {
                    if (null != this.root) {
                        var a;
                        this.root.next = null;
                        for (a = this.root; null != a;) {
                            var b = a;
                            a = b.next;
                            b.next = null;
                            b.isLeaf() ? (b.shape.node = null, b.shape.removedFromSpace(), b.shape = null) : (null != b.child1 && (b.child1.next = a, a = b.child1), null !=
                                b.child2 && (b.child2.next = a, a = b.child2));
                            b.free();
                            b.next = gf.zpp_pool;
                            gf.zpp_pool = b
                        }
                        this.root = null
                    }
                },
                inlined_insertLeaf: function(a) {
                    if (null == this.root) this.root = a, this.root.parent = null;
                    else {
                        for (var b = a.aabb, c = this.root; !c.isLeaf();) {
                            var d = c.child1,
                                e = c.child2,
                                f = c.aabb.perimeter();
                            Jg.tmpaabb.setCombine(c.aabb, b);
                            var h = Jg.tmpaabb.perimeter(),
                                k = 2 * h;
                            f = 2 * (h - f);
                            Jg.tmpaabb.setCombine(b, d.aabb);
                            d.isLeaf() ? h = Jg.tmpaabb.perimeter() + f : (h = d.aabb.perimeter(), h = Jg.tmpaabb.perimeter() - h + f);
                            Jg.tmpaabb.setCombine(b,
                                e.aabb);
                            if (e.isLeaf()) f = Jg.tmpaabb.perimeter() + f;
                            else {
                                var m = e.aabb.perimeter();
                                f = Jg.tmpaabb.perimeter() - m + f
                            }
                            if (k < h && k < f) break;
                            else c = h < f ? d : e
                        }
                        d = c.parent;
                        null == gf.zpp_pool ? e = new gf : (e = gf.zpp_pool, gf.zpp_pool = e.next, e.next = null);
                        e.alloc();
                        e.parent = d;
                        e.aabb.setCombine(b, c.aabb);
                        e.height = c.height + 1;
                        null != d ? (d.child1 == c ? d.child1 = e : d.child2 = e, e.child1 = c, e.child2 = a, c.parent = e, a.parent = e) : (e.child1 = c, e.child2 = a, c.parent = e, this.root = a.parent = e);
                        for (c = a.parent; null != c;) c = this.balance(c), a = c.child1, b = c.child2,
                            d = a.height, e = b.height, c.height = 1 + (d > e ? d : e), c.aabb.setCombine(a.aabb, b.aabb), c = c.parent
                    }
                },
                removeLeaf: function(a) {
                    this.inlined_removeLeaf(a)
                },
                inlined_removeLeaf: function(a) {
                    if (a == this.root) this.root = null;
                    else {
                        var b = a.parent,
                            c = b.parent;
                        a = b.child1 == a ? b.child2 : b.child1;
                        if (null != c)
                            for (c.child1 == b ? c.child1 = a : c.child2 = a, a.parent = c, b.free(), b.next = gf.zpp_pool, gf.zpp_pool = b, b = c; null != b;) b = this.balance(b), a = b.child1, c = b.child2, b.aabb.setCombine(a.aabb, c.aabb), a = a.height, c = c.height, b.height = 1 + (a > c ? a : c), b = b.parent;
                        else this.root = a, a.parent = null, b.free(), b.next = gf.zpp_pool, gf.zpp_pool = b
                    }
                },
                balance: function(a) {
                    if (a.isLeaf() || 2 > a.height) return a;
                    var b = a.child1,
                        c = a.child2,
                        d = c.height - b.height;
                    if (1 < d) {
                        d = c.child1;
                        var e = c.child2;
                        c.child1 = a;
                        c.parent = a.parent;
                        a.parent = c;
                        null != c.parent ? c.parent.child1 == a ? c.parent.child1 = c : c.parent.child2 = c : this.root = c;
                        d.height > e.height ? (c.child2 = d, a.child2 = e, e.parent = a, a.aabb.setCombine(b.aabb, e.aabb), c.aabb.setCombine(a.aabb, d.aabb), b = b.height, e = e.height, a.height = 1 + (b > e ? b : e), a = a.height,
                            b = d.height, c.height = 1 + (a > b ? a : b)) : (c.child2 = e, a.child2 = d, d.parent = a, a.aabb.setCombine(b.aabb, d.aabb), c.aabb.setCombine(a.aabb, e.aabb), b = b.height, d = d.height, a.height = 1 + (b > d ? b : d), a = a.height, b = e.height, c.height = 1 + (a > b ? a : b));
                        return c
                    }
                    return -1 > d ? (d = b.child1, e = b.child2, b.child1 = a, b.parent = a.parent, a.parent = b, null != b.parent ? b.parent.child1 == a ? b.parent.child1 = b : b.parent.child2 = b : this.root = b, d.height > e.height ? (b.child2 = d, a.child1 = e, e.parent = a, a.aabb.setCombine(c.aabb, e.aabb), b.aabb.setCombine(a.aabb, d.aabb),
                        c = c.height, e = e.height, a.height = 1 + (c > e ? c : e), a = a.height, c = d.height, b.height = 1 + (a > c ? a : c)) : (b.child2 = e, a.child1 = d, d.parent = a, a.aabb.setCombine(c.aabb, d.aabb), b.aabb.setCombine(a.aabb, e.aabb), c = c.height, d = d.height, a.height = 1 + (c > d ? c : d), a = a.height, c = e.height, b.height = 1 + (a > c ? a : c)), b) : a
                },
                __class__: Jg
            };
            var Ij = function(a) {
                this.stree = this.dtree = this.pairs = this.syncs = this.moves = this.treeStack = null;
                Hj.call(this);
                this.space = a;
                this.is_sweep = !1;
                this.dynab = this;
                this.stree = new Jg;
                this.dtree = new Jg
            };
            g["zpp_nape.space.ZPP_DynAABBPhase"] =
                Ij;
            Ij.__name__ = ["zpp_nape", "space", "ZPP_DynAABBPhase"];
            Ij.__super__ = Hj;
            Ij.prototype = p(Hj.prototype, {
                stree: null,
                dtree: null,
                pairs: null,
                syncs: null,
                moves: null,
                dyn: function(a) {
                    return a.body.isStatic() ? !1 : !a.body.component.sleeping
                },
                __insert: function(a) {
                    if (null == gf.zpp_pool) var b = new gf;
                    else b = gf.zpp_pool, gf.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.shape = a;
                    a.node = b;
                    b.synced = !0;
                    b.first_sync = !0;
                    b.snext = this.syncs;
                    this.syncs = b
                },
                __remove: function(a) {
                    var b = a.node;
                    b.first_sync || (b.dyn ? this.dtree.removeLeaf(b) :
                        this.stree.removeLeaf(b));
                    a.node = null;
                    if (b.synced) {
                        for (var c = null, d = this.syncs; null != d && d != b;) c = d, d = d.snext;
                        null == c ? this.syncs = d.snext : c.snext = d.snext;
                        d.snext = null;
                        b.synced = !1
                    }
                    if (b.moved) {
                        c = null;
                        for (d = this.moves; null != d && d != b;) c = d, d = d.mnext;
                        null == c ? this.moves = d.mnext : c.mnext = d.mnext;
                        d.mnext = null;
                        b.moved = !1
                    }
                    c = null;
                    for (var e = this.pairs; null != e;) d = e.next, e.n1 == b || e.n2 == b ? (null == c ? this.pairs = d : c.next = d, null != e.arb && (e.arb.pair = null), e.arb = null, e.n1.shape.pairs.remove(e), e.n2.shape.pairs.remove(e), e.free(),
                        e.next = Yd.zpp_pool, Yd.zpp_pool = e) : c = e, e = d;
                    for (; !a.pairs.empty();) c = a.pairs.pop_unsafe(), c.n1 == b ? c.n2.shape.pairs.remove(c) : c.n1.shape.pairs.remove(c), null != c.arb && (c.arb.pair = null), c.arb = null, c.free(), c.next = Yd.zpp_pool, Yd.zpp_pool = c;
                    b.free();
                    b.next = gf.zpp_pool;
                    gf.zpp_pool = b
                },
                __sync: function(a) {
                    var b = a.node;
                    b.synced || (this.space.continuous || a.validate_aabb(), b.dyn == this.dyn(a) && b.aabb.contains(a.aabb) || (b.synced = !0, b.snext = this.syncs, this.syncs = b))
                },
                sync_broadphase: function() {
                    this.space.validation();
                    if (null != this.syncs)
                        if (null == this.moves) {
                            for (var a = this.syncs; null != a;) {
                                var b = a.shape;
                                a.first_sync ? a.first_sync = !1 : (a.dyn ? this.dtree : this.stree).inlined_removeLeaf(a);
                                var c = a.aabb;
                                this.space.continuous || b.validate_aabb();
                                c.setExpand(b.aabb, Ij.FATTEN);
                                ((a.dyn = this.dyn(b)) ? this.dtree : this.stree).inlined_insertLeaf(a);
                                a.synced = !1;
                                a.moved = !0;
                                a.mnext = a.snext;
                                a.snext = null;
                                a = a.mnext
                            }
                            a = this.syncs;
                            this.syncs = this.moves;
                            this.moves = a
                        } else
                            for (; null != this.syncs;) a = this.syncs, this.syncs = a.snext, a.snext = null, b =
                                a.shape, a.first_sync ? a.first_sync = !1 : (a.dyn ? this.dtree : this.stree).inlined_removeLeaf(a), c = a.aabb, this.space.continuous || b.validate_aabb(), c.setExpand(b.aabb, Ij.FATTEN), ((a.dyn = this.dyn(b)) ? this.dtree : this.stree).inlined_insertLeaf(a), a.synced = !1, a.moved || (a.moved = !0, a.mnext = this.moves, this.moves = a)
                },
                broadphase: function(a, b) {
                    for (var c = this.syncs; null != c;) {
                        var d = c.shape;
                        c.first_sync ? c.first_sync = !1 : (c.dyn ? this.dtree : this.stree).inlined_removeLeaf(c);
                        var e = c.aabb;
                        a.continuous || d.validate_aabb();
                        e.setExpand(d.aabb,
                            Ij.FATTEN);
                        ((c.dyn = this.dyn(d)) ? this.dtree : this.stree).inlined_insertLeaf(c);
                        c.synced = !1;
                        c = c.snext
                    }
                    for (; null != this.syncs;)
                        if (c = this.syncs, this.syncs = c.snext, c.snext = null, !c.moved && (c.moved = !1, d = c.shape, !d.body.component.sleeping)) {
                            e = c.aabb;
                            var f = null;
                            null != this.dtree.root && (this.dtree.root.next = f, f = this.dtree.root);
                            for (; null != f;) {
                                var h = f;
                                f = h.next;
                                h.next = null;
                                if (h != c)
                                    if (h.isLeaf()) {
                                        var k = h.shape;
                                        if (!(k.body == d.body || k.body.isStatic() && d.body.isStatic()) && e.intersect(h.aabb)) {
                                            if (d.id < k.id) {
                                                var m = d.id;
                                                var g = k.id
                                            } else m = k.id, g = d.id;
                                            for (var l = null, n = (d.pairs.length < k.pairs.length ? d : k).pairs.begin(); null != n;) {
                                                var p = n.elem();
                                                if (p.id == m && p.di == g) {
                                                    l = p;
                                                    break
                                                }
                                                n = n.next
                                            }
                                            null != l ? l.sleeping && (l.sleeping = !1, l.next = this.pairs, this.pairs = l, l.first = !0) : (null == Yd.zpp_pool ? l = new Yd : (l = Yd.zpp_pool, Yd.zpp_pool = l.next, l.next = null), l.alloc(), l.n1 = c, l.n2 = h, l.id = m, l.di = g, l.next = this.pairs, this.pairs = l, l.first = !0, d.pairs.inlined_add(l), k.pairs.inlined_add(l))
                                        }
                                    } else e.intersect(h.aabb) && (null != h.child1 && (h.child1.next =
                                        f, f = h.child1), null != h.child2 && (h.child2.next = f, f = h.child2))
                            }
                            null != this.stree.root && (this.stree.root.next = f, f = this.stree.root);
                            for (; null != f;)
                                if (h = f, f = h.next, h.next = null, h != c)
                                    if (h.isLeaf()) {
                                        if (k = h.shape, !(k.body == d.body || k.body.isStatic() && d.body.isStatic()) && e.intersect(h.aabb)) {
                                            d.id < k.id ? (m = d.id, g = k.id) : (m = k.id, g = d.id);
                                            l = null;
                                            for (n = (d.pairs.length < k.pairs.length ? d : k).pairs.begin(); null != n;) {
                                                p = n.elem();
                                                if (p.id == m && p.di == g) {
                                                    l = p;
                                                    break
                                                }
                                                n = n.next
                                            }
                                            null != l ? l.sleeping && (l.sleeping = !1, l.next = this.pairs, this.pairs =
                                                l, l.first = !0) : (null == Yd.zpp_pool ? l = new Yd : (l = Yd.zpp_pool, Yd.zpp_pool = l.next, l.next = null), l.alloc(), l.n1 = c, l.n2 = h, l.id = m, l.di = g, l.next = this.pairs, this.pairs = l, l.first = !0, d.pairs.inlined_add(l), k.pairs.inlined_add(l))
                                        }
                                    } else e.intersect(h.aabb) && (null != h.child1 && (h.child1.next = f, f = h.child1), null != h.child2 && (h.child2.next = f, f = h.child2))
                        } for (; null != this.moves;)
                        if (c = this.moves, this.moves = c.mnext, c.mnext = null, c.moved = !1, d = c.shape, !d.body.component.sleeping) {
                            e = c.aabb;
                            f = null;
                            null != this.dtree.root && (this.dtree.root.next =
                                f, f = this.dtree.root);
                            for (; null != f;)
                                if (h = f, f = h.next, h.next = null, h != c)
                                    if (h.isLeaf()) {
                                        if (k = h.shape, !(k.body == d.body || k.body.isStatic() && d.body.isStatic()) && e.intersect(h.aabb)) {
                                            d.id < k.id ? (m = d.id, g = k.id) : (m = k.id, g = d.id);
                                            l = null;
                                            for (n = (d.pairs.length < k.pairs.length ? d : k).pairs.begin(); null != n;) {
                                                p = n.elem();
                                                if (p.id == m && p.di == g) {
                                                    l = p;
                                                    break
                                                }
                                                n = n.next
                                            }
                                            null != l ? l.sleeping && (l.sleeping = !1, l.next = this.pairs, this.pairs = l, l.first = !0) : (null == Yd.zpp_pool ? l = new Yd : (l = Yd.zpp_pool, Yd.zpp_pool = l.next, l.next = null), l.alloc(),
                                                l.n1 = c, l.n2 = h, l.id = m, l.di = g, l.next = this.pairs, this.pairs = l, l.first = !0, d.pairs.inlined_add(l), k.pairs.inlined_add(l))
                                        }
                                    } else e.intersect(h.aabb) && (null != h.child1 && (h.child1.next = f, f = h.child1), null != h.child2 && (h.child2.next = f, f = h.child2));
                            null != this.stree.root && (this.stree.root.next = f, f = this.stree.root);
                            for (; null != f;)
                                if (h = f, f = h.next, h.next = null, h != c)
                                    if (h.isLeaf()) {
                                        if (k = h.shape, !(k.body == d.body || k.body.isStatic() && d.body.isStatic()) && e.intersect(h.aabb)) {
                                            d.id < k.id ? (m = d.id, g = k.id) : (m = k.id, g = d.id);
                                            l = null;
                                            for (n = (d.pairs.length < k.pairs.length ? d : k).pairs.begin(); null != n;) {
                                                p = n.elem();
                                                if (p.id == m && p.di == g) {
                                                    l = p;
                                                    break
                                                }
                                                n = n.next
                                            }
                                            null != l ? l.sleeping && (l.sleeping = !1, l.next = this.pairs, this.pairs = l, l.first = !0) : (null == Yd.zpp_pool ? l = new Yd : (l = Yd.zpp_pool, Yd.zpp_pool = l.next, l.next = null), l.alloc(), l.n1 = c, l.n2 = h, l.id = m, l.di = g, l.next = this.pairs, this.pairs = l, l.first = !0, d.pairs.inlined_add(l), k.pairs.inlined_add(l))
                                        }
                                    } else e.intersect(h.aabb) && (null != h.child1 && (h.child1.next = f, f = h.child1), null != h.child2 && (h.child2.next =
                                        f, f = h.child2))
                        } c = null;
                    for (d = this.pairs; null != d;) d.first || d.n1.aabb.intersect(d.n2.aabb) ? (e = d.n1.shape, f = e.body, h = d.n2.shape, k = h.body, d.first || !f.component.sleeping && !f.isStatic() || !k.component.sleeping && !k.isStatic() ? (d.first = !1, e.aabb.intersect(h.aabb) && (c = d.arb, d.arb = b ? a.narrowPhase(e, h, !f.isDynamic() || !k.isDynamic(), d.arb, !1) : a.continuousEvent(e, h, !f.isDynamic() || !k.isDynamic(), d.arb, !1), null == d.arb ? null != c && (c.pair = null) : d.arb.pair = d), c = d) : (d.sleeping = !0, null == c ? this.pairs = d.next : c.next = d.next),
                        d = d.next) : (null == c ? this.pairs = d.next : c.next = d.next, d.n1.shape.pairs.inlined_remove(d), d.n2.shape.pairs.inlined_remove(d), e = d.next, null != d.arb && (d.arb.pair = null), d.arb = null, d.free(), d.next = Yd.zpp_pool, Yd.zpp_pool = d, d = e)
                },
                clear: function() {
                    for (; null != this.syncs;) {
                        var a = this.syncs.snext;
                        this.syncs.snext = null;
                        this.syncs.first_sync && (this.syncs.shape.node = null, this.syncs.shape.removedFromSpace(), this.syncs.shape = null);
                        this.syncs = a
                    }
                    for (; null != this.moves;) a = this.moves.mnext, this.moves.mnext = null, this.moves.first_sync &&
                        (this.moves.shape.node = null, this.moves.shape.removedFromSpace(), this.moves.shape = null), this.moves = a;
                    for (; null != this.pairs;) {
                        a = this.pairs.next;
                        null != this.pairs.arb && (this.pairs.arb.pair = null);
                        this.pairs.arb = null;
                        this.pairs.n1.shape.pairs.inlined_remove(this.pairs);
                        this.pairs.n2.shape.pairs.inlined_remove(this.pairs);
                        var b = this.pairs;
                        b.free();
                        b.next = Yd.zpp_pool;
                        Yd.zpp_pool = b;
                        this.pairs = a
                    }
                    this.dtree.clear();
                    this.stree.clear()
                },
                treeStack: null,
                shapesInCircle: function(a, b, c, d, e, f) {
                    this.sync_broadphase();
                    this.updateCircShape(a, b, c);
                    a = this.circShape.zpp_inner.aabb;
                    f = null == f ? new Eo : f;
                    if (null != this.stree.root)
                        for (null == this.treeStack && (this.treeStack = new cs), this.treeStack.add(this.stree.root); !this.treeStack.empty();)
                            if (b = this.treeStack.pop_unsafe(), b.aabb.intersect(a))
                                if (b.isLeaf()) {
                                    if (null == e || b.shape.filter.shouldCollide(e)) d ? Pa.containTest(this.circShape.zpp_inner, b.shape) && f.push(b.shape.outer) : Pa.testCollide_safe(b.shape, this.circShape.zpp_inner) && f.push(b.shape.outer)
                                } else null != b.child1 && this.treeStack.add(b.child1),
                                    null != b.child2 && this.treeStack.add(b.child2);
                    if (null != this.dtree.root)
                        for (null == this.treeStack && (this.treeStack = new cs), this.treeStack.add(this.dtree.root); !this.treeStack.empty();)
                            if (b = this.treeStack.pop_unsafe(), b.aabb.intersect(a))
                                if (b.isLeaf()) {
                                    if (null == e || b.shape.filter.shouldCollide(e)) d ? Pa.containTest(this.circShape.zpp_inner, b.shape) && f.push(b.shape.outer) : Pa.testCollide_safe(b.shape, this.circShape.zpp_inner) && f.push(b.shape.outer)
                                } else null != b.child1 && this.treeStack.add(b.child1), null != b.child2 &&
                                    this.treeStack.add(b.child2);
                    return f
                },
                __class__: Ij
            });
            var Fe = function() {
                this.waket = 0;
                this.sleep = !1;
                this.comps = null;
                this.length = 0;
                this._inuse = this.modified = this.pushmod = !1;
                this.next = null;
                this.comps = new Ev
            };
            g["zpp_nape.space.ZPP_Island"] = Fe;
            Fe.__name__ = ["zpp_nape", "space", "ZPP_Island"];
            Fe.prototype = {
                next: null,
                elem: function() {
                    return this
                },
                begin: function() {
                    return this.next
                },
                _inuse: null,
                modified: null,
                pushmod: null,
                length: null,
                inlined_add: function(a) {
                    a._inuse = !0;
                    a.next = this.begin();
                    this.next = a;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                pop: function() {
                    this.inlined_pop()
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.next = a.next;
                    a.elem()._inuse = !1;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                inlined_pop_unsafe: function() {
                    var a = this.front();
                    this.pop();
                    return a
                },
                empty: function() {
                    return null == this.begin()
                },
                front: function() {
                    return this.begin().elem()
                },
                comps: null,
                sleep: null,
                waket: null,
                free: function() {},
                alloc: function() {
                    this.waket = 0
                },
                __class__: Fe
            };
            var pg = function() {
                this.woken = !1;
                this.waket =
                    0;
                this.sleeping = !1;
                this.body = this.constraint = this.island = null;
                this.isBody = !1;
                this.rank = 0;
                this.next = this.parent = null;
                this.reset();
                this.woken = !1
            };
            g["zpp_nape.space.ZPP_Component"] = pg;
            pg.__name__ = ["zpp_nape", "space", "ZPP_Component"];
            pg.prototype = {
                next: null,
                parent: null,
                rank: null,
                isBody: null,
                body: null,
                constraint: null,
                island: null,
                sleeping: null,
                waket: null,
                woken: null,
                free: function() {
                    this.constraint = this.body = null
                },
                alloc: function() {},
                reset: function() {
                    this.sleeping = !1;
                    this.island = null;
                    this.parent = this;
                    this.rank =
                        0
                },
                __class__: pg
            };
            var hf = function() {
                this.freed = this.lazydel = !1;
                this.length = 0;
                this._inuse = this.modified = this.pushmod = !1;
                this.int1 = this.int2 = this.next = null;
                this.id = this.di = 0;
                this.arbiters = new Qo
            };
            g["zpp_nape.space.ZPP_CallbackSet"] = hf;
            hf.__name__ = ["zpp_nape", "space", "ZPP_CallbackSet"];
            hf.get = function(a, b) {
                if (null == hf.zpp_pool) var c = new hf;
                else c = hf.zpp_pool, hf.zpp_pool = c.next, c.next = null;
                c.alloc();
                a.id < b.id ? (c.int1 = a, c.int2 = b) : (c.int1 = b, c.int2 = a);
                c.id = c.int1.id;
                c.di = c.int2.id;
                return c
            };
            hf.prototype = {
                id: null,
                di: null,
                int1: null,
                int2: null,
                arbiters: null,
                COLLISIONstate: null,
                COLLISIONstamp: null,
                SENSORstate: null,
                SENSORstamp: null,
                FLUIDstate: null,
                FLUIDstamp: null,
                next: null,
                elem: function() {
                    return this
                },
                begin: function() {
                    return this.next
                },
                _inuse: null,
                modified: null,
                pushmod: null,
                length: null,
                inlined_add: function(a) {
                    a._inuse = !0;
                    a.next = this.begin();
                    this.next = a;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                pop: function() {
                    this.inlined_pop()
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.next = a.next;
                    a.elem()._inuse = !1;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                pop_unsafe: function() {
                    return this.inlined_pop_unsafe()
                },
                inlined_pop_unsafe: function() {
                    var a = this.front();
                    this.pop();
                    return a
                },
                inlined_erase: function(a) {
                    var b;
                    if (null == a) {
                        var c = this.begin();
                        this.next = b = c.next;
                        this.empty() && (this.pushmod = !0)
                    } else c = a.next, b = c.next, a.next = b, null == b && (this.pushmod = !0);
                    c.elem()._inuse = !1;
                    this.modified = !0;
                    this.length--;
                    this.pushmod = !0;
                    return b
                },
                empty: function() {
                    return null == this.begin()
                },
                front: function() {
                    return this.begin().elem()
                },
                freed: null,
                lazydel: null,
                free: function() {
                    this.int1 = this.int2 = null;
                    this.id = this.di = -1;
                    this.freed = !0
                },
                alloc: function() {
                    this.lazydel = this.freed = !1;
                    this.COLLISIONstate = 1;
                    this.COLLISIONstamp = 0;
                    this.SENSORstate = 1;
                    this.SENSORstamp = 0;
                    this.FLUIDstate = 1;
                    this.FLUIDstamp = 0
                },
                add_arb: function(a) {
                    if (this.arbiters.inlined_has(a)) return !1;
                    this.arbiters.inlined_add(a);
                    return !0
                },
                remove_arb: function(a) {
                    this.arbiters.inlined_remove(a)
                },
                empty_arb: function(a) {
                    var b = !0;
                    for (var c = this.arbiters.begin(); null != c;)
                        if (0 == (c.elem().type &
                                a)) c = c.next;
                        else {
                            b = !1;
                            break
                        } return b
                },
                really_empty: function() {
                    return this.arbiters.empty()
                },
                sleeping: function() {
                    var a = !0;
                    for (var b = this.arbiters.begin(); null != b;)
                        if (b.elem().sleeping) b = b.next;
                        else {
                            a = !1;
                            break
                        } return a
                },
                __class__: hf
            };
            var Fv = function(a) {
                this.cbsets = this.space = null;
                null == Zg.zpp_pool ? this.cbsets = new Zg : (this.cbsets = Zg.zpp_pool, Zg.zpp_pool = this.cbsets.next, this.cbsets.next = null);
                this.cbsets.alloc();
                this.cbsets.lt = Ob.setlt;
                this.space = a
            };
            g["zpp_nape.space.ZPP_CbSetManager"] = Fv;
            Fv.__name__ = ["zpp_nape", "space", "ZPP_CbSetManager"];
            Fv.prototype = {
                cbsets: null,
                space: null,
                get: function(a) {
                    if (a.empty()) return null;
                    if (null == Ob.zpp_pool) var b = new Ob;
                    else b = Ob.zpp_pool, Ob.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    var c = b.cbTypes;
                    b.cbTypes = a;
                    var d = this.cbsets.find_weak(b);
                    null != d ? a = d.data : (a = Ob.get(a), this.cbsets.insert(a), a.manager = this);
                    b.cbTypes = c;
                    b.free();
                    b.next = Ob.zpp_pool;
                    Ob.zpp_pool = b;
                    return a
                },
                remove: function(a) {
                    for (this.cbsets.remove(a); !a.cbpairs.empty();) {
                        var b = a.cbpairs.pop_unsafe();
                        b.a !=
                            b.b && (a == b.a ? b.b.cbpairs.remove(b) : b.a.cbpairs.remove(b));
                        b.free();
                        b.next = og.zpp_pool;
                        og.zpp_pool = b
                    }
                    a.manager = null
                },
                clear: function() {},
                validate: function() {
                    if (!this.cbsets.empty()) {
                        for (var a = this.cbsets.parent; null != a.prev;) a = a.prev;
                        for (; null != a;)
                            if (a.data.validate(), null != a.next)
                                for (a = a.next; null != a.prev;) a = a.prev;
                            else {
                                for (; null != a.parent && a == a.parent.next;) a = a.parent;
                                a = a.parent
                            }
                    }
                },
                pair: function(a, b) {
                    for (var c = null, d = (a.cbpairs.length < b.cbpairs.length ? a.cbpairs : b.cbpairs).begin(); null != d;) {
                        var e =
                            d.elem();
                        if (e.a == a && e.b == b || e.a == b && e.b == a) {
                            c = e;
                            break
                        }
                        d = d.next
                    }
                    null == c && (c = og.get(a, b), a.cbpairs.add(c), b != a && b.cbpairs.add(c));
                    c.validate();
                    return c
                },
                valid_listener: function(a) {
                    return a.space == this.space
                },
                __class__: Fv
            };
            var Xu = function(a, b) {
                this.precb = this.prelisteners = null;
                this.continuous = !1;
                this.toiEvents = null;
                this.pre_dt = 0;
                this.c_arbiters_true = this.c_arbiters_false = this.f_arbiters = this.s_arbiters = this.live = this.wrap_live = this.live_constraints = this.wrap_livecon = this.staticsleep = this.islands = this.listeners =
                    this.wrap_listeners = this.callbacks = this.callbackset_list = this.cbsets = null;
                this.sortcontacts = !1;
                this.time = 0;
                this.midstep = !1;
                this.global_lin_drag = this.global_ang_drag = this.stamp = 0;
                this.bodies = this.wrap_bodies = this.compounds = this.wrap_compounds = this.constraints = this.wrap_constraints = this.kinematics = this.bphase = this.__static = null;
                this.gravityx = this.gravityy = 0;
                this.outer = null;
                this.toiEvents = new Gv;
                this.global_ang_drag = this.global_lin_drag = .015;
                this.precb = new hr;
                this.precb.zpp_inner = new ki;
                this.sortcontacts = !0;
                this.pre_dt = 0;
                null == b || b == dh.get_DYNAMIC_AABB_TREE() ? this.bphase = new Ij(this) : b == dh.get_SWEEP_AND_PRUNE() && (this.bphase = new ds(this));
                this.time = 0;
                null != a ? (this.gravityx = a.x, this.gravityy = a.y) : this.gravityy = this.gravityx = 0;
                this.bodies = new zk;
                this.wrap_bodies = Vi.get(this.bodies);
                this.wrap_bodies.zpp_inner.adder = q(this, this.bodies_adder);
                this.wrap_bodies.zpp_inner.subber = q(this, this.bodies_subber);
                this.compounds = new Ro;
                this.wrap_compounds = xj.get(this.compounds);
                this.wrap_compounds.zpp_inner.adder =
                    q(this, this.compounds_adder);
                this.wrap_compounds.zpp_inner.subber = q(this, this.compounds_subber);
                this.kinematics = new zk;
                this.c_arbiters_true = new es;
                this.c_arbiters_false = new es;
                this.f_arbiters = new Hv;
                this.s_arbiters = new Iv;
                this.islands = new Fe;
                this.live = new zk;
                this.wrap_live = Vi.get(this.live, !0);
                this.staticsleep = new zk;
                this.constraints = new Gj;
                this.wrap_constraints = Ti.get(this.constraints);
                this.wrap_constraints.zpp_inner.adder = q(this, this.constraints_adder);
                this.wrap_constraints.zpp_inner.subber = q(this,
                    this.constraints_subber);
                this.live_constraints = new Gj;
                this.wrap_livecon = Ti.get(this.live_constraints, !0);
                this.__static = wj.__static();
                this.__static.zpp_inner.space = this;
                this.callbacks = new ki;
                this.midstep = !1;
                this.listeners = new fs;
                this.wrap_listeners = tj.get(this.listeners);
                this.wrap_listeners.zpp_inner.adder = q(this, this.listeners_adder);
                this.wrap_listeners.zpp_inner.subber = q(this, this.listeners_subber);
                this.callbackset_list = new hf;
                this.mrca1 = new $i;
                this.mrca2 = new $i;
                this.prelisteners = new Ml;
                this.cbsets =
                    new Fv(this)
            };
            g["zpp_nape.space.ZPP_Space"] = Xu;
            Xu.__name__ = ["zpp_nape", "space", "ZPP_Space"];
            Xu.prototype = {
                outer: null,
                gravityx: null,
                gravityy: null,
                bodies: null,
                wrap_bodies: null,
                compounds: null,
                wrap_compounds: null,
                constraints: null,
                wrap_constraints: null,
                kinematics: null,
                bphase: null,
                __static: null,
                global_lin_drag: null,
                global_ang_drag: null,
                stamp: null,
                midstep: null,
                time: null,
                sortcontacts: null,
                c_arbiters_true: null,
                c_arbiters_false: null,
                f_arbiters: null,
                s_arbiters: null,
                live: null,
                wrap_live: null,
                live_constraints: null,
                wrap_livecon: null,
                staticsleep: null,
                islands: null,
                listeners: null,
                wrap_listeners: null,
                callbacks: null,
                callbackset_list: null,
                cbsets: null,
                clear: function() {
                    for (; !this.listeners.empty();) {
                        var a = this.listeners.pop_unsafe();
                        this.remListener(a)
                    }
                    for (; !this.callbackset_list.empty();) a = this.callbackset_list.pop_unsafe(), a.arbiters.clear(), a.free(), a.next = hf.zpp_pool, hf.zpp_pool = a;
                    for (; !this.c_arbiters_true.empty();) this.c_arbiters_true.pop_unsafe().retire();
                    for (; !this.c_arbiters_false.empty();) this.c_arbiters_false.pop_unsafe().retire();
                    for (; !this.s_arbiters.empty();) this.s_arbiters.pop_unsafe().retire();
                    for (; !this.f_arbiters.empty();) this.f_arbiters.pop_unsafe().retire();
                    for (this.bphase.clear(); !this.bodies.empty();) {
                        a = this.bodies.pop_unsafe();
                        if (null != a.component) {
                            var b = a.component.island;
                            if (null != b) {
                                for (; !b.comps.empty();) b.comps.pop_unsafe().reset();
                                b.free();
                                b.next = Fe.zpp_pool;
                                Fe.zpp_pool = b
                            }
                        }
                        a.removedFromSpace();
                        a.space = null
                    }
                    for (; !this.constraints.empty();) {
                        a = this.constraints.pop_unsafe();
                        if (null != a.component && (b = a.component.island,
                                null != b)) {
                            for (; !b.comps.empty();) b.comps.pop_unsafe().reset();
                            b.free();
                            b.next = Fe.zpp_pool;
                            Fe.zpp_pool = b
                        }
                        a.removedFromSpace();
                        a.space = null
                    }
                    this.kinematics.clear();
                    for (a = new Ro; !this.compounds.empty();) b = this.compounds.pop_unsafe(), a.add(b);
                    for (; !a.empty();) {
                        b = a.pop_unsafe();
                        b.removedFromSpace();
                        b.space = null;
                        for (var c = b.bodies.begin(); null != c;) {
                            var d = c.elem();
                            if (null != d.component) {
                                var e = d.component.island;
                                if (null != e) {
                                    for (; !e.comps.empty();) e.comps.pop_unsafe().reset();
                                    e.free();
                                    e.next = Fe.zpp_pool;
                                    Fe.zpp_pool =
                                        e
                                }
                            }
                            d.removedFromSpace();
                            d.space = null;
                            c = c.next
                        }
                        for (c = b.constraints.begin(); null != c;) {
                            d = c.elem();
                            if (null != d.component && (e = d.component.island, null != e)) {
                                for (; !e.comps.empty();) e.comps.pop_unsafe().reset();
                                e.free();
                                e.next = Fe.zpp_pool;
                                Fe.zpp_pool = e
                            }
                            d.removedFromSpace();
                            d.space = null;
                            c = c.next
                        }
                        for (b = b.compounds.begin(); null != b;) c = b.elem(), a.add(c), b = b.next
                    }
                    this.staticsleep.clear();
                    this.live.clear();
                    this.live_constraints.clear();
                    this.time = this.stamp = 0;
                    this.mrca1.clear();
                    this.mrca2.clear();
                    this.prelisteners.clear();
                    this.cbsets.clear()
                },
                bodies_adder: function(a) {
                    return a.zpp_inner.space != this ? (null != a.zpp_inner.space && a.zpp_inner.space.outer.get_bodies().remove(a), this.addBody(a.zpp_inner), !0) : !1
                },
                bodies_subber: function(a) {
                    this.remBody(a.zpp_inner)
                },
                compounds_adder: function(a) {
                    return a.zpp_inner.space != this ? (null != a.zpp_inner.space && a.zpp_inner.space.wrap_compounds.remove(a), this.addCompound(a.zpp_inner), !0) : !1
                },
                compounds_subber: function(a) {
                    this.remCompound(a.zpp_inner)
                },
                constraints_adder: function(a) {
                    return a.zpp_inner.space !=
                        this ? (null != a.zpp_inner.space && a.zpp_inner.space.outer.get_constraints().remove(a), this.addConstraint(a.zpp_inner), !0) : !1
                },
                constraints_subber: function(a) {
                    this.remConstraint(a.zpp_inner)
                },
                listeners_adder: function(a) {
                    return a.zpp_inner.space != this ? (null != a.zpp_inner.space && a.zpp_inner.space.outer.get_listeners().remove(a), this.addListener(a.zpp_inner), !0) : !1
                },
                listeners_subber: function(a) {
                    this.remListener(a.zpp_inner)
                },
                revoke_listener: function(a) {},
                unrevoke_listener: function(a) {},
                addListener: function(a) {
                    a.space =
                        this;
                    a.addedToSpace();
                    null != a.interaction && this.unrevoke_listener(a.interaction)
                },
                remListener: function(a) {
                    null != a.interaction && this.revoke_listener(a.interaction);
                    a.removedFromSpace();
                    a.space = null
                },
                add_callbackset: function(a) {
                    a.int1.cbsets.inlined_add(a);
                    a.int2.cbsets.inlined_add(a);
                    this.callbackset_list.inlined_add(a)
                },
                remove_callbackset: function(a) {
                    a.lazydel = !0;
                    a.int1.cbsets.inlined_remove(a);
                    a.int2.cbsets.inlined_remove(a)
                },
                transmitType: function(a, b) {
                    a.world || (a.component.waket = this.stamp + (this.midstep ?
                        0 : 1), a.isKinematic() && (a.kinematicDelaySleep = !0), a.component.sleeping && this.really_wake(a, !1));
                    2 == a.type ? this.live.remove(a) : 3 == a.type ? (this.kinematics.remove(a), this.staticsleep.remove(a)) : 1 == a.type && this.staticsleep.remove(a);
                    a.type = b;
                    3 == a.type && this.kinematics.add(a);
                    1 == a.type && this.static_validation(a);
                    a.component.sleeping = !0;
                    a.world || (a.component.waket = this.stamp + (this.midstep ? 0 : 1), a.isKinematic() && (a.kinematicDelaySleep = !0), a.component.sleeping && this.really_wake(a, !0))
                },
                added_shape: function(a,
                    b) {
                    null == b && (b = !1);
                    b || (b = a.body, b.world || (b.component.waket = this.stamp + (this.midstep ? 0 : 1), b.isKinematic() && (b.kinematicDelaySleep = !0), b.component.sleeping && this.really_wake(b, !1)));
                    this.bphase.insert(a);
                    a.addedToSpace()
                },
                removed_shape: function(a, b) {
                    null == b && (b = !1);
                    var c = this,
                        d = a.body;
                    b || d.wake();
                    b = null;
                    for (var e = d.arbiters.begin(); null != e;) {
                        var f = [e.elem()];
                        if (f[0].ws1 == a || f[0].ws2 == a) {
                            if (0 != f[0].present)
                                for (this.MRCA_chains(f[0].ws1, f[0].ws2), e = this.mrca1.begin(); null != e;) {
                                    for (var h = e.elem(), k = this.mrca2.begin(); null !=
                                        k;) {
                                        var g = k.elem(),
                                            l = h.cbSet,
                                            n = g.cbSet;
                                        l.validate();
                                        n.validate();
                                        Ob.empty_intersection(l, n) || (g = [cd.get(h, g)], g[0].remove_arb(f[0]), f[0].present--, Ob.find_all(l, n, 1, function(a, b) {
                                            return function(d) {
                                                if (0 != (d.itype & b[0].type) && a[0].empty_arb(d.itype)) {
                                                    var e = c.push_callback(d);
                                                    e.event = 1;
                                                    cd.int_callback(a[0], d, e);
                                                    e.set = a[0]
                                                }
                                            }
                                        }(g, f)), g[0].really_empty() && this.remove_callbackset(g[0]));
                                        k = k.next
                                    }
                                    e = e.next
                                }
                            f[0].b1 != d && f[0].b1.isDynamic() && (e = f[0].b1, e.world || (e.component.waket = this.stamp + (this.midstep ? 0 : 1),
                                e.isKinematic() && (e.kinematicDelaySleep = !0), e.component.sleeping && this.really_wake(e, !1)));
                            f[0].b2 != d && f[0].b2.isDynamic() && (e = f[0].b2, e.world || (e.component.waket = this.stamp + (this.midstep ? 0 : 1), e.isKinematic() && (e.kinematicDelaySleep = !0), e.component.sleeping && this.really_wake(e, !1)));
                            f[0].lazyRetire(this, d);
                            e = d.arbiters.erase(b)
                        } else b = e, e = e.next
                    }
                    this.bphase.remove(a);
                    a.removedFromSpace()
                },
                addConstraint: function(a) {
                    a.space = this;
                    a.addedToSpace();
                    a.active && (a.component.sleeping = !0, this.wake_constraint(a,
                        !0))
                },
                remConstraint: function(a) {
                    a.active && (this.wake_constraint(a, !0), this.live_constraints.remove(a));
                    a.removedFromSpace();
                    a.space = null
                },
                addCompound: function(a) {
                    a.space = this;
                    a.addedToSpace();
                    for (var b = a.bodies.begin(); null != b;) {
                        var c = b.elem();
                        this.addBody(c);
                        b = b.next
                    }
                    for (b = a.constraints.begin(); null != b;) c = b.elem(), this.addConstraint(c), b = b.next;
                    for (a = a.compounds.begin(); null != a;) b = a.elem(), this.addCompound(b), a = a.next
                },
                remCompound: function(a) {
                    for (var b = a.bodies.begin(); null != b;) {
                        var c = b.elem();
                        this.remBody(c);
                        b = b.next
                    }
                    for (b = a.constraints.begin(); null != b;) c = b.elem(), this.remConstraint(c), b = b.next;
                    for (b = a.compounds.begin(); null != b;) c = b.elem(), this.remCompound(c), b = b.next;
                    a.removedFromSpace();
                    a.space = null
                },
                addBody: function(a, b) {
                    null == b && (b = -1);
                    a.space = this;
                    a.addedToSpace();
                    a.component.sleeping = !0;
                    a.world || (a.component.waket = this.stamp + (this.midstep ? 0 : 1), a.isKinematic() && (a.kinematicDelaySleep = !0), a.component.sleeping && this.really_wake(a, !0));
                    for (var c = a.shapes.begin(); null != c;) {
                        var d = c.elem();
                        this.added_shape(d,
                            !0);
                        c = c.next
                    }
                    a.isStatic() ? this.static_validation(a) : a.isDynamic() || 3 != b && this.kinematics.add(a)
                },
                remBody: function(a, b) {
                    null == b && (b = -1);
                    a.isStatic() ? (a.world || (a.component.waket = this.stamp + (this.midstep ? 0 : 1), a.isKinematic() && (a.kinematicDelaySleep = !0), a.component.sleeping && this.really_wake(a, !0)), this.staticsleep.remove(a)) : a.isDynamic() ? (a.world || (a.component.waket = this.stamp + (this.midstep ? 0 : 1), a.isKinematic() && (a.kinematicDelaySleep = !0), a.component.sleeping && this.really_wake(a, !0)), this.live.remove(a)) :
                        (3 != b && this.kinematics.remove(a), a.world || (a.component.waket = this.stamp + (this.midstep ? 0 : 1), a.isKinematic() && (a.kinematicDelaySleep = !0), a.component.sleeping && this.really_wake(a, !0)), this.staticsleep.remove(a));
                    for (b = a.shapes.begin(); null != b;) {
                        var c = b.elem();
                        this.removed_shape(c, !0);
                        b = b.next
                    }
                    a.removedFromSpace();
                    a.space = null
                },
                shapesInCircle: function(a, b, c, d, e) {
                    return this.bphase.shapesInCircle(a.get_x(), a.get_y(), b, c, d, e)
                },
                push_callback: function(a) {
                    if (null == ki.zpp_pool) var b = new ki;
                    else b = ki.zpp_pool,
                        ki.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    this.callbacks.push(b);
                    b.listener = a;
                    return b
                },
                pre_dt: null,
                step: function(a, b, c) {
                    var d = this;
                    this.time += a;
                    this.pre_dt = a;
                    this.midstep = !0;
                    this.stamp++;
                    this.validation();
                    this.bphase.broadphase(this, !0);
                    this.prestep(a);
                    if (this.sortcontacts) {
                        var e = this.c_arbiters_false;
                        if (!e.empty() && null != e.begin().next) {
                            for (var f = e.begin(), h = null, k = null, g = null, l = null, n = 1, p, x, u;;) {
                                p = 0;
                                k = f;
                                for (h = f = null; null != k;) {
                                    ++p;
                                    g = k;
                                    x = 0;
                                    for (u = n; null != g && x < n;) ++x, g = g.next;
                                    for (; 0 < x || 0 < u && null != g;) 0 ==
                                        x ? (l = g, g = g.next, --u) : 0 == u || null == g ? (l = k, k = k.next, --x) : (k.elem().active && g.elem().active ? k.elem().oc1.dist < g.elem().oc1.dist : 1) ? (l = k, k = k.next, --x) : (l = g, g = g.next, --u), null != h ? h.next = l : f = l, h = l;
                                    k = g
                                }
                                h.next = null;
                                n <<= 1;
                                if (!(1 < p)) break
                            }
                            e.setbegin(f)
                        }
                    }
                    this.updateVel(a);
                    this.warmStart();
                    this.iterateVel(b);
                    for (b = this.kinematics.begin(); null != b;) e = b.elem(), e.pre_posx = e.posx, e.pre_posy = e.posy, e.pre_rot = e.rot, b = b.next;
                    for (b = this.live.begin(); null != b;) e = b.elem(), e.pre_posx = e.posx, e.pre_posy = e.posy, e.pre_rot = e.rot,
                        b = b.next;
                    this.updatePos(a);
                    this.continuous = !0;
                    this.continuousCollisions(a);
                    this.continuous = !1;
                    this.iteratePos(c);
                    for (c = this.kinematics.begin(); null != c;) b = c.elem(), e = b.pre_rot != b.rot, b.posx == b.pre_posx && b.posy == b.pre_posy || b.invalidate_pos(), e && b.invalidate_rot(), c = c.next;
                    for (c = this.live.begin(); null != c;) b = c.elem(), e = b.pre_rot != b.rot, b.posx == b.pre_posx && b.posy == b.pre_posy || b.invalidate_pos(), e && b.invalidate_rot(), c = c.next;
                    c = null;
                    for (b = this.staticsleep.begin(); null != b;) e = b.elem(), !e.isKinematic() ||
                        0 == e.velx && 0 == e.vely && 0 == e.angvel ? e.kinematicDelaySleep ? (e.kinematicDelaySleep = !1, b = b.next) : (e.component.sleeping = !0, b = this.staticsleep.inlined_erase(c)) : (c = b, b = b.next);
                    this.doForests(a);
                    this.sleepArbiters();
                    this.midstep = !1;
                    c = null;
                    for (a = this.callbackset_list.begin(); null != a;) b = [a.elem()], b[0].really_empty() ? (a = this.callbackset_list.inlined_erase(c), b = b[0], b.free(), b.next = hf.zpp_pool, hf.zpp_pool = b) : (c = [b[0].sleeping()], Ob.find_all(b[0].int1.cbSet, b[0].int2.cbSet, 6, function(a, b) {
                        return function(c) {
                            if ((!a[0] ||
                                    c.allowSleepingCallbacks) && !b[0].empty_arb(c.itype)) {
                                var e = d.push_callback(c);
                                e.event = 6;
                                cd.int_callback(b[0], c, e);
                                e.set = b[0]
                            }
                        }
                    }(c, b)), c = a, a = a.next);
                    for (; !this.callbacks.empty();) a = this.callbacks.pop(), 0 == a.listener.type ? a.listener.body.handler(a.wrapper_body()) : 1 == a.listener.type ? a.listener.constraint.handler(a.wrapper_con()) : 2 == a.listener.type && a.listener.interaction.handleri(a.wrapper_int()), a.free(), a.next = ki.zpp_pool, ki.zpp_pool = a
                },
                toiEvents: null,
                continuousCollisions: function(a) {
                    var b = 2 * Math.PI /
                        a;
                    this.bphase.broadphase(this, !1);
                    for (var c = 0; 1 > c && !this.toiEvents.empty();) {
                        var d = null;
                        c = 2;
                        for (var e = !1, f = null, h = null, k = this.toiEvents.begin(); null != k;) {
                            var g = k.elem(),
                                l = g.s1.body,
                                n = g.s2.body;
                            if (l.sweepFrozen && n.sweepFrozen)
                                if (0 != g.toi && Pa.testCollide_safe(g.s1, g.s2)) g.toi = 0;
                                else {
                                    k = this.toiEvents.erase(h);
                                    g.free();
                                    g.next = ff.zpp_pool;
                                    ff.zpp_pool = g;
                                    continue
                                } if (g.frozen1 != l.sweepFrozen || g.frozen2 != n.sweepFrozen)
                                if (g.kinematic) {
                                    k = this.toiEvents.erase(h);
                                    g.free();
                                    g.next = ff.zpp_pool;
                                    ff.zpp_pool = g;
                                    continue
                                } else if (g.frozen1 =
                                l.sweepFrozen, g.frozen2 = n.sweepFrozen, g.frozen1 && (l = g.s1, g.s1 = g.s2, g.s2 = l, g.frozen1 = !1, g.frozen2 = !0), We.staticSweep(g, a, 0, K.collisionSlopCCD), 0 > g.toi) {
                                k = this.toiEvents.erase(h);
                                g.free();
                                g.next = ff.zpp_pool;
                                ff.zpp_pool = g;
                                continue
                            }
                            0 <= g.toi && (g.toi < c || !e && g.kinematic) && (d = g, c = g.toi, e = g.kinematic, f = h);
                            h = k;
                            k = k.next
                        }
                        if (null == d) break;
                        this.toiEvents.erase(f);
                        c = d.toi;
                        f = d.s1.body;
                        e = d.s2.body;
                        f.sweepFrozen || (f.sweepIntegrate(c * a), f.sweepValidate(d.s1));
                        e.sweepFrozen || (e.sweepIntegrate(c * a), e.sweepValidate(d.s2));
                        h = this.narrowPhase(d.s1, d.s2, !0, d.arbiter, !0);
                        null == h ? null != d.arbiter && null != d.arbiter.pair && (d.arbiter.pair.arb = null, d.arbiter.pair = null) : !this.presteparb(h, a, !0) && h.type == Wb.COL && h.acting() && (h.colarb.warmStart(), h.colarb.applyImpulseVel(), h.colarb.applyImpulseVel(), h.colarb.applyImpulseVel(), h.colarb.applyImpulseVel(), f.sweep_angvel = f.angvel % b, e.sweep_angvel = e.angvel % b);
                        null != h && h.acting() && h.type == Wb.COL && (f.sweepFrozen || f.isKinematic() || (f.sweepFrozen = !0, d.failed ? f.angvel = f.sweep_angvel = 0 : d.slipped ?
                            (h = f, h.sweep_angvel *= K.angularCCDSlipScale, f.angvel = h.sweep_angvel) : f.angvel = f.sweep_angvel), e.sweepFrozen || e.isKinematic() || (e.sweepFrozen = !0, d.failed ? e.angvel = e.sweep_angvel = 0 : d.slipped ? (f = e, f.sweep_angvel *= K.angularCCDSlipScale, e.angvel = f.sweep_angvel) : e.angvel = e.sweep_angvel));
                        d.free();
                        d.next = ff.zpp_pool;
                        ff.zpp_pool = d
                    }
                    for (; !this.toiEvents.empty();) b = this.toiEvents.pop_unsafe(), b.free(), b.next = ff.zpp_pool, ff.zpp_pool = b;
                    for (b = this.kinematics.begin(); null != b;) d = b.elem(), d.sweepIntegrate(a), d.sweepTime =
                        0, b = b.next;
                    for (b = this.live.begin(); null != b;) d = b.elem(), d.sweepFrozen || d.sweepIntegrate(a), d.sweepTime = 0, b = b.next
                },
                continuousEvent: function(a, b, c, d, e) {
                    if (a.body.sweepFrozen && b.body.sweepFrozen || a.body.disableCCD || b.body.disableCCD || null != d && null == d.colarb || 0 >= this.interactionType(a, b, a.body, b.body)) return d;
                    var f = a.body,
                        h = b.body;
                    if (c || f.bullet || h.bullet) null == ff.zpp_pool ? e = new ff : (e = ff.zpp_pool, ff.zpp_pool = e.next, e.next = null), e.alloc(), f = f.isKinematic() || h.isKinematic(), c && !f ? (a.body.isDynamic() ? (e.s1 =
                        a, e.s2 = b) : (e.s2 = a, e.s1 = b), e.kinematic = !1, We.staticSweep(e, this.pre_dt, 0, K.collisionSlopCCD)) : (e.s1 = a, e.s2 = b, e.kinematic = f, e.s1.body.sweepFrozen || e.s2.body.sweepFrozen ? (e.s1.body.sweepFrozen && (a = e.s1, e.s1 = e.s2, e.s2 = a, e.frozen1 = !1, e.frozen2 = !0), We.staticSweep(e, this.pre_dt, 0, K.collisionSlopCCD)) : We.dynamicSweep(e, this.pre_dt, 0, K.collisionSlopCCD)), c && 0 > e.toi || e.failed ? (c = e, c.free(), c.next = ff.zpp_pool, ff.zpp_pool = c) : (this.toiEvents.add(e), e.frozen1 = e.s1.body.sweepFrozen, e.frozen2 = e.s2.body.sweepFrozen,
                        e.arbiter = null != d ? d.colarb : null);
                    return d
                },
                bodyCbWake: function(a) {
                    if (a.isDynamic() && null != a.cbSet)
                        if (this.midstep)
                            for (var b = a.cbSet.bodylisteners.begin(); null != b;) {
                                var c = b.elem();
                                2 == c.event && (c = this.push_callback(c), c.event = 2, c.body = a);
                                b = b.next
                            } else a.component.woken = !0
                },
                bodyCbSleep: function(a) {
                    if (a.isDynamic() && null != a.cbSet)
                        for (var b = a.cbSet.bodylisteners.begin(); null != b;) {
                            var c = b.elem();
                            3 == c.event && (c = this.push_callback(c), c.event = 3, c.body = a);
                            b = b.next
                        }
                },
                constraintCbWake: function(a) {
                    if (null != a.cbSet)
                        if (this.midstep)
                            for (var b =
                                    a.cbSet.conlisteners.begin(); null != b;) {
                                var c = b.elem();
                                2 == c.event && (c = this.push_callback(c), c.event = 2, c.constraint = a);
                                b = b.next
                            } else a.component.woken = !0
                },
                constraintCbSleep: function(a) {
                    if (null != a.cbSet)
                        for (var b = a.cbSet.conlisteners.begin(); null != b;) {
                            var c = b.elem();
                            3 == c.event && (c = this.push_callback(c), c.event = 3, c.constraint = a);
                            b = b.next
                        }
                },
                constraintCbBreak: function(a) {
                    if (null != a.cbSet)
                        for (var b = a.cbSet.conlisteners.begin(); null != b;) {
                            var c = b.elem();
                            4 == c.event && (c = this.push_callback(c), c.event = 4, c.constraint =
                                a);
                            b = b.next
                        }
                },
                nullListenerType: function(a, b) {
                    for (var c = new $i, d = a.interactors.begin(); null != d;) {
                        var e = d.elem();
                        c.add(e);
                        d = d.next
                    }
                    if (a != b)
                        for (d = b.interactors.begin(); null != d;) e = d.elem(), c.add(e), d = d.next;
                    for (; !c.empty();)
                        if (d = c.pop_unsafe(), d.isCompound()) {
                            d = d.icompound;
                            for (e = d.bodies.begin(); null != e;) {
                                var f = e.elem();
                                c.add(f);
                                e = e.next
                            }
                            for (d = d.compounds.begin(); null != d;) e = d.elem(), c.add(e), d = d.next
                        } else
                            for (e = d.isBody() ? d.ibody : d.ishape.body, d = d.isShape() ? d.ishape : null, e = e.arbiters.begin(); null != e;) {
                                f =
                                    e.elem();
                                if (0 != f.present && (null == d || f.ws1 == d || f.ws2 == d))
                                    for (this.MRCA_chains(f.ws1, f.ws2), f = this.mrca1.begin(); null != f;) {
                                        var h = f.elem();
                                        if (h.cbSet == a || h.cbSet == b)
                                            for (var k = this.mrca2.begin(); null != k;) {
                                                var g = k.elem();
                                                if (!(h.cbSet == a && g.cbSet != b || h.cbSet == b && g.cbSet != a) && (g = cd.get(h, g), null != g)) {
                                                    for (; !g.arbiters.empty();) g.arbiters.pop_unsafe().present--;
                                                    this.remove_callbackset(g)
                                                }
                                                k = k.next
                                            }
                                        f = f.next
                                    }
                                e = e.next
                            }
                },
                nullInteractorType: function(a, b) {
                    null == b && (b = a);
                    if (a.isCompound()) {
                        a = a.icompound;
                        for (var c =
                                a.bodies.begin(); null != c;) {
                            var d = c.elem();
                            this.nullInteractorType(d, b);
                            c = c.next
                        }
                        for (a = a.compounds.begin(); null != a;) c = a.elem(), this.nullInteractorType(c, b), a = a.next
                    } else
                        for (c = a.isBody() ? a.ibody : a.ishape.body, a = a.isShape() ? a.ishape : null, c = c.arbiters.begin(); null != c;) {
                            d = c.elem();
                            if (0 != d.present && (null == a || d.ws1 == a || d.ws2 == a)) {
                                this.MRCA_chains(d.ws1, d.ws2);
                                for (var e = this.mrca1.begin(); null != e;) {
                                    for (var f = e.elem(), h = this.mrca2.begin(); null != h;) {
                                        var k = h.elem();
                                        if (f == b || k == b) k = cd.get(f, k), null != k && (d.present--,
                                            k.remove_arb(d), k.really_empty() && this.remove_callbackset(k));
                                        h = h.next
                                    }
                                    e = e.next
                                }
                            }
                            c = c.next
                        }
                },
                freshListenerType: function(a, b) {
                    for (var c = new $i, d = a.interactors.begin(); null != d;) {
                        var e = d.elem();
                        c.add(e);
                        d = d.next
                    }
                    if (a != b)
                        for (d = b.interactors.begin(); null != d;) e = d.elem(), c.add(e), d = d.next;
                    for (; !c.empty();)
                        if (d = c.pop_unsafe(), d.isCompound()) {
                            d = d.icompound;
                            for (e = d.bodies.begin(); null != e;) {
                                var f = e.elem();
                                c.add(f);
                                e = e.next
                            }
                            for (d = d.compounds.begin(); null != d;) e = d.elem(), c.add(e), d = d.next
                        } else
                            for (e = d.isBody() ?
                                d.ibody : d.ishape.body, d = d.isShape() ? d.ishape : null, e = e.arbiters.begin(); null != e;) {
                                f = e.elem();
                                if (f.presentable && (null == d || f.ws1 == d || f.ws2 == d)) {
                                    this.MRCA_chains(f.ws1, f.ws2);
                                    for (var h = this.mrca1.begin(); null != h;) {
                                        var k = h.elem();
                                        if (k.cbSet == a || k.cbSet == b)
                                            for (var g = this.mrca2.begin(); null != g;) {
                                                var l = g.elem();
                                                if (!(k.cbSet == a && l.cbSet != b || k.cbSet == b && l.cbSet != a)) {
                                                    var n = cd.get(k, l);
                                                    null == n && (n = hf.get(k, l), this.add_callbackset(n));
                                                    n.add_arb(f) && f.present++
                                                }
                                                g = g.next
                                            }
                                        h = h.next
                                    }
                                }
                                e = e.next
                            }
                },
                freshInteractorType: function(a,
                    b) {
                    null == b && (b = a);
                    if (a.isCompound()) {
                        a = a.icompound;
                        for (var c = a.bodies.begin(); null != c;) {
                            var d = c.elem();
                            this.freshInteractorType(d, b);
                            c = c.next
                        }
                        for (a = a.compounds.begin(); null != a;) c = a.elem(), this.freshInteractorType(c, b), a = a.next
                    } else
                        for (c = a.isBody() ? a.ibody : a.ishape.body, a = a.isShape() ? a.ishape : null, c = c.arbiters.begin(); null != c;) {
                            d = c.elem();
                            if (d.presentable && (null == a || d.ws1 == a || d.ws2 == a)) {
                                this.MRCA_chains(d.ws1, d.ws2);
                                for (var e = this.mrca1.begin(); null != e;) {
                                    for (var f = e.elem(), h = this.mrca2.begin(); null !=
                                        h;) {
                                        var k = h.elem();
                                        if (f == b || k == b) {
                                            var g = f.cbSet,
                                                l = k.cbSet;
                                            g.validate();
                                            l.validate();
                                            Ob.empty_intersection(g, l) || (g = cd.get(f, k), null == g && (g = hf.get(f, k), this.add_callbackset(g)), g.add_arb(d) && d.present++)
                                        }
                                        h = h.next
                                    }
                                    e = e.next
                                }
                            }
                            c = c.next
                        }
                },
                wakeCompound: function(a) {
                    for (var b = a.bodies.begin(); null != b;) {
                        var c = b.elem();
                        c.world || (c.component.waket = this.stamp + (this.midstep ? 0 : 1), c.isKinematic() && (c.kinematicDelaySleep = !0), c.component.sleeping && this.really_wake(c, !1));
                        b = b.next
                    }
                    for (b = a.constraints.begin(); null !=
                        b;) c = b.elem(), this.wake_constraint(c), b = b.next;
                    for (a = a.compounds.begin(); null != a;) b = a.elem(), this.wakeCompound(b), a = a.next
                },
                wakeIsland: function(a) {
                    for (; !a.comps.empty();) {
                        var b = a.comps.pop_unsafe();
                        b.waket = this.stamp + (this.midstep ? 0 : 1);
                        if (b.isBody) {
                            var c = b.body;
                            this.live.add(c);
                            for (var d = c.arbiters.begin(); null != d;) {
                                var e = d.elem();
                                e.sleeping && (e.sleeping = !1, e.up_stamp += this.stamp - e.sleep_stamp, e.type == Wb.COL ? (e = e.colarb, e.stat ? this.c_arbiters_true.inlined_add(e) : this.c_arbiters_false.inlined_add(e)) :
                                    e.type == Wb.FLUID ? this.f_arbiters.inlined_add(e.fluidarb) : this.s_arbiters.inlined_add(e.sensorarb));
                                d = d.next
                            }
                            this.bodyCbWake(c);
                            b.reset();
                            if (!c.isStatic())
                                for (b = c.shapes.begin(); null != b;) c = b.elem(), null != c.node && this.bphase.sync(c), b = b.next
                        } else c = b.constraint, this.live_constraints.inlined_add(c), this.constraintCbWake(c), b.reset()
                    }
                    a.free();
                    a.next = Fe.zpp_pool;
                    Fe.zpp_pool = a
                },
                non_inlined_wake: function(a, b) {
                    null == b && (b = !1);
                    a.world || (a.component.waket = this.stamp + (this.midstep ? 0 : 1), a.isKinematic() && (a.kinematicDelaySleep = !0), a.component.sleeping && this.really_wake(a, b))
                },
                really_wake: function(a, b) {
                    null == b && (b = !1);
                    if (null == a.component.island) {
                        a.component.sleeping = !1;
                        a.isKinematic() || a.isStatic() ? this.staticsleep.inlined_add(a) : this.live.inlined_add(a);
                        for (var c = a.constraints.begin(); null != c;) {
                            var d = c.elem();
                            d.space == this && this.wake_constraint(d);
                            c = c.next
                        }
                        for (c = a.arbiters.begin(); null != c;) {
                            d = c.elem();
                            if (d.sleeping)
                                if (d.sleeping = !1, d.up_stamp += this.stamp + (this.midstep ? 0 : 1) - d.sleep_stamp, d.type == Wb.COL) {
                                    var e = d.colarb;
                                    e.stat ? this.c_arbiters_true.inlined_add(e) : this.c_arbiters_false.inlined_add(e)
                                } else d.type == Wb.FLUID ? this.f_arbiters.inlined_add(d.fluidarb) : this.s_arbiters.inlined_add(d.sensorarb);
                            d.type != Wb.SENSOR && !d.cleared && d.up_stamp >= this.stamp && 0 != (d.immState & 1) && (d.b1.isDynamic() && d.b1.component.sleeping && (e = d.b1, e.world || (e.component.waket = this.stamp + (this.midstep ? 0 : 1), e.isKinematic() && (e.kinematicDelaySleep = !0), e.component.sleeping && this.really_wake(e, !1))), d.b2.isDynamic() && d.b2.component.sleeping &&
                                (d = d.b2, d.world || (d.component.waket = this.stamp + (this.midstep ? 0 : 1), d.isKinematic() && (d.kinematicDelaySleep = !0), d.component.sleeping && this.really_wake(d, !1))));
                            c = c.next
                        }!b && a.isDynamic() && this.bodyCbWake(a);
                        if (!b && !this.bphase.is_sweep && !a.isStatic())
                            for (a = a.shapes.begin(); null != a;) b = a.elem(), null != b.node && this.bphase.sync(b), a = a.next
                    } else this.wakeIsland(a.component.island)
                },
                wake_constraint: function(a, b) {
                    null == b && (b = !1);
                    return a.active && (a.component.waket = this.stamp + (this.midstep ? 0 : 1), a.component.sleeping) ?
                        (null == a.component.island ? (a.component.sleeping = !1, this.live_constraints.inlined_add(a), a.wake_connected(), b || this.constraintCbWake(a)) : this.wakeIsland(a.component.island), !0) : !1
                },
                doForests: function(a) {
                    for (var b = this.c_arbiters_false.begin(); null != b;) {
                        var c = b.elem();
                        if (!c.cleared && c.up_stamp == this.stamp && 0 != (c.immState & 1) && c.b1.isDynamic() && c.b2.isDynamic()) {
                            if (c.b1.component == c.b1.component.parent) var d = c.b1.component;
                            else {
                                d = c.b1.component;
                                for (var e = null; d != d.parent;) {
                                    var f = d.parent;
                                    d.parent = e;
                                    e =
                                        d;
                                    d = f
                                }
                                for (; null != e;) f = e.parent, e.parent = d, e = f
                            }
                            if (c.b2.component == c.b2.component.parent) c = c.b2.component;
                            else {
                                c = c.b2.component;
                                for (e = null; c != c.parent;) f = c.parent, c.parent = e, e = c, c = f;
                                for (; null != e;) f = e.parent, e.parent = c, e = f
                            }
                            d != c && (d.rank < c.rank ? d.parent = c : d.rank > c.rank ? c.parent = d : (c.parent = d, d.rank++))
                        }
                        b = b.next
                    }
                    for (b = this.f_arbiters.begin(); null != b;) {
                        c = b.elem();
                        if (!c.cleared && c.up_stamp == this.stamp && 0 != (c.immState & 1) && c.b1.isDynamic() && c.b2.isDynamic()) {
                            if (c.b1.component == c.b1.component.parent) d = c.b1.component;
                            else {
                                d = c.b1.component;
                                for (e = null; d != d.parent;) f = d.parent, d.parent = e, e = d, d = f;
                                for (; null != e;) f = e.parent, e.parent = d, e = f
                            }
                            if (c.b2.component == c.b2.component.parent) c = c.b2.component;
                            else {
                                c = c.b2.component;
                                for (e = null; c != c.parent;) f = c.parent, c.parent = e, e = c, c = f;
                                for (; null != e;) f = e.parent, e.parent = c, e = f
                            }
                            d != c && (d.rank < c.rank ? d.parent = c : d.rank > c.rank ? c.parent = d : (c.parent = d, d.rank++))
                        }
                        b = b.next
                    }
                    for (b = this.live_constraints.begin(); null != b;) b.elem().forest(), b = b.next;
                    for (; !this.live.empty();) {
                        d = this.live.inlined_pop_unsafe();
                        b = d.component;
                        if (b == b.parent) c = b;
                        else {
                            c = b;
                            for (e = null; c != c.parent;) f = c.parent, c.parent = e, e = c, c = f;
                            for (; null != e;) f = e.parent, e.parent = c, e = f
                        }
                        null == c.island && (null == Fe.zpp_pool ? c.island = new Fe : (c.island = Fe.zpp_pool, Fe.zpp_pool = c.island.next, c.island.next = null), c.island.alloc(), this.islands.inlined_add(c.island), c.island.sleep = !0);
                        b.island = c.island;
                        b.island.comps.inlined_add(b);
                        d = d.atRest(a);
                        b.island.sleep = b.island.sleep && d;
                        b.waket > b.island.waket && (b.island.waket = b.waket)
                    }
                    for (; !this.live_constraints.empty();) {
                        a =
                            this.live_constraints.inlined_pop_unsafe().component;
                        if (a == a.parent) b = a;
                        else {
                            b = a;
                            for (d = null; b != b.parent;) c = b.parent, b.parent = d, d = b, b = c;
                            for (; null != d;) c = d.parent, d.parent = b, d = c
                        }
                        a.island = b.island;
                        a.island.comps.inlined_add(a);
                        a.waket > a.island.waket && (a.island.waket = a.waket)
                    }
                    for (; !this.islands.empty();)
                        if (a = this.islands.inlined_pop_unsafe(), a.sleep)
                            for (a = a.comps.begin(); null != a;) {
                                d = a.elem();
                                if (d.isBody) {
                                    b = d.body;
                                    b.velx = 0;
                                    b.vely = 0;
                                    b.angvel = 0;
                                    d.sleeping = !0;
                                    for (d = b.shapes.begin(); null != d;) c = d.elem(), this.bphase.sync(c),
                                        d = d.next;
                                    this.bodyCbSleep(b)
                                } else this.constraintCbSleep(d.constraint), d.sleeping = !0;
                                a = a.next
                            } else {
                                for (; !a.comps.empty();) b = a.comps.inlined_pop_unsafe(), b.waket = a.waket, b.isBody ? this.live.inlined_add(b.body) : this.live_constraints.inlined_add(b.constraint), b.reset();
                                a.free();
                                a.next = Fe.zpp_pool;
                                Fe.zpp_pool = a
                            }
                },
                sleepArbiters: function() {
                    var a = null,
                        b = this.c_arbiters_true,
                        c = b.begin(),
                        d = null != this.c_arbiters_false;
                    d && null == c && (d = !1, c = this.c_arbiters_false.begin(), b = this.c_arbiters_false, a = null);
                    for (; null !=
                        c;) {
                        var e = c.elem();
                        e.b1.component.sleeping && e.b2.component.sleeping ? (e.sleep_stamp = this.stamp, e.sleeping = !0, c = b.inlined_erase(a)) : (a = c, c = c.next);
                        d && null == c && (d = !1, c = this.c_arbiters_false.begin(), b = this.c_arbiters_false, a = null)
                    }
                    a = null;
                    b = this.f_arbiters;
                    c = b.begin();
                    d = !1;
                    for (; null != c;) e = c.elem(), e.b1.component.sleeping && e.b2.component.sleeping ? (e.sleep_stamp = this.stamp, e.sleeping = !0, c = b.inlined_erase(a)) : (a = c, c = c.next), d && null == c && (d = !1, c = null.begin(), a = b = null);
                    a = null;
                    b = this.s_arbiters;
                    c = b.begin();
                    d = !1;
                    for (; null != c;) e = c.elem(), e.b1.component.sleeping && e.b2.component.sleeping ? (e.sleep_stamp = this.stamp, e.sleeping = !0, c = b.inlined_erase(a)) : (a = c, c = c.next), d && null == c && (d = !1, c = null.begin(), a = b = null)
                },
                static_validation: function(a) {
                    a.shapes.empty() || a.validate_aabb();
                    a.validate_mass();
                    a.validate_inertia();
                    for (var b = a.shapes.begin(); null != b;) {
                        var c = b.elem();
                        c.isPolygon() && (c.polygon.splice_collinear(), c.polygon.validate_gaxi());
                        b = b.next
                    }
                    a.sweepFrozen = !0
                },
                validation: function() {
                    this.cbsets.validate();
                    for (var a =
                            this.live.begin(); null != a;) {
                        var b = a.elem();
                        b.sweepRadius = 0;
                        for (var c = b.shapes.begin(); null != c;) {
                            var d = c.elem();
                            d.isPolygon() && (d.polygon.splice_collinear(), d.polygon.validate_gaxi());
                            d.validate_sweepRadius();
                            d.sweepRadius > b.sweepRadius && (b.sweepRadius = d.sweepRadius);
                            c = c.next
                        }
                        b.validate_mass();
                        b.validate_inertia();
                        b.shapes.empty() || (b.validate_aabb(), b.validate_worldCOM());
                        b.validate_gravMass();
                        b.validate_axis();
                        if (b.component.woken && null != b.cbSet)
                            for (c = b.cbSet.bodylisteners.begin(); null != c;) d = c.elem(),
                                2 == d.event && (d = this.push_callback(d), d.event = 2, d.body = b), c = c.next;
                        b.component.woken = !1;
                        for (b = b.shapes.begin(); null != b;) c = b.elem(), this.bphase.sync(c), b = b.next;
                        a = a.next
                    }
                    for (a = this.kinematics.begin(); null != a;) {
                        b = a.elem();
                        b.sweepRadius = 0;
                        for (c = b.shapes.begin(); null != c;) d = c.elem(), d.isPolygon() && (d.polygon.splice_collinear(), d.polygon.validate_gaxi()), d.validate_sweepRadius(), d.sweepRadius > b.sweepRadius && (b.sweepRadius = d.sweepRadius), c = c.next;
                        b.validate_mass();
                        b.validate_inertia();
                        b.shapes.empty() || (b.validate_aabb(),
                            b.validate_worldCOM());
                        b.validate_gravMass();
                        b.validate_axis();
                        for (b = b.shapes.begin(); null != b;) c = b.elem(), this.bphase.sync(c), b = b.next;
                        a = a.next
                    }
                    for (a = this.live_constraints.begin(); null != a;) {
                        b = a.elem();
                        if (b.active) {
                            if (b.component.woken && null != b.cbSet)
                                for (c = b.cbSet.conlisteners.begin(); null != c;) d = c.elem(), 2 == d.event && (d = this.push_callback(d), d.event = 2, d.constraint = b), c = c.next;
                            b.component.woken = !1
                        }
                        a = a.next
                    }
                },
                updateVel: function(a) {
                    for (var b = 1 - a * this.global_lin_drag, c = 1 - a * this.global_ang_drag, d = this.live.begin(); null !=
                        d;) {
                        var e = d.elem();
                        if (0 != e.smass) {
                            var f = a * e.imass;
                            e.velx = b * e.velx + (e.forcex + this.gravityx * e.gravMass) * f;
                            e.vely = b * e.vely + (e.forcey + this.gravityy * e.gravMass) * f
                        }
                        0 != e.sinertia && (e.angvel = c * e.angvel + (e.torque + (this.gravityy * (e.worldCOMx - e.posx) - this.gravityx * (e.worldCOMy - e.posy)) * e.gravMass) * a * e.iinertia);
                        d = d.next
                    }
                },
                updatePos: function(a) {
                    for (var b = 2 * Math.PI / a, c = this.live.begin(); null != c;) {
                        var d = c.elem();
                        d.pre_posx = d.posx;
                        d.pre_posy = d.posy;
                        d.pre_rot = d.rot;
                        d.sweepTime = 0;
                        d.sweep_angvel = d.angvel % b;
                        d.sweepIntegrate(a);
                        if (d.disableCCD) d.sweepFrozen = !0, d.bullet = !1;
                        else {
                            var e = K.staticCCDLinearThreshold * d.sweepRadius,
                                f = K.staticCCDAngularThreshold;
                            if ((d.velx * d.velx + d.vely * d.vely) * a * a > e * e || d.angvel * d.angvel * a * a > f * f || d.isKinematic()) {
                                e = d.sweep_angvel;
                                0 > e && (e = -e);
                                f = 1 / e;
                                for (var h = d.shapes.begin(); null != h;) {
                                    var k = h.elem(),
                                        g = k.aabb,
                                        l = g.minx,
                                        n = g.miny,
                                        p = g.maxx,
                                        x = g.maxy,
                                        u = E["int"](e * a * k.sweepCoef * .008333333333333333);
                                    8 < u && (u = 8);
                                    var v = e * a / u;
                                    d.sweepIntegrate(a);
                                    k.force_validate_aabb();
                                    l < g.minx ? g.minx = l : l = g.minx;
                                    n < g.miny ? g.miny =
                                        n : n = g.miny;
                                    p > g.maxx ? g.maxx = p : p = g.maxx;
                                    x > g.maxy ? g.maxy = x : x = g.maxy;
                                    for (var q = 1; q < u;) {
                                        var w = q++;
                                        d.sweepIntegrate(v * w * f);
                                        k.force_validate_aabb();
                                        l < g.minx ? g.minx = l : l = g.minx;
                                        n < g.miny ? g.miny = n : n = g.miny;
                                        p > g.maxx ? g.maxx = p : p = g.maxx;
                                        x > g.maxy ? g.maxy = x : x = g.maxy
                                    }
                                    this.bphase.sync(k);
                                    h = h.next
                                }
                                d.sweepFrozen = !1;
                                d.isDynamic() && d.bulletEnabled && (e = K.bulletCCDLinearThreshold * d.sweepRadius, f = K.bulletCCDAngularThreshold, (d.velx * d.velx + d.vely * d.vely) * a * a > e * e || d.angvel * d.angvel * a * a > f * f) && (d.bullet = !0)
                            } else d.sweepFrozen = !0, d.bullet = !1
                        }
                        c = c.next
                    }
                    for (c = this.kinematics.begin(); null != c;) {
                        d = c.elem();
                        d.pre_posx = d.posx;
                        d.pre_posy = d.posy;
                        d.pre_rot = d.rot;
                        d.sweepTime = 0;
                        d.sweep_angvel = d.angvel % b;
                        d.sweepIntegrate(a);
                        if (d.disableCCD) d.sweepFrozen = !0, d.bullet = !1;
                        else if (e = K.staticCCDLinearThreshold * d.sweepRadius, f = K.staticCCDAngularThreshold, (d.velx * d.velx + d.vely * d.vely) * a * a > e * e || d.angvel * d.angvel * a * a > f * f || d.isKinematic()) {
                            e = d.sweep_angvel;
                            0 > e && (e = -e);
                            f = 1 / e;
                            for (h = d.shapes.begin(); null != h;) {
                                k = h.elem();
                                g = k.aabb;
                                l = g.minx;
                                n = g.miny;
                                p = g.maxx;
                                x = g.maxy;
                                u = E["int"](e * a * k.sweepCoef * .008333333333333333);
                                8 < u && (u = 8);
                                v = e * a / u;
                                d.sweepIntegrate(a);
                                k.force_validate_aabb();
                                l < g.minx ? g.minx = l : l = g.minx;
                                n < g.miny ? g.miny = n : n = g.miny;
                                p > g.maxx ? g.maxx = p : p = g.maxx;
                                x > g.maxy ? g.maxy = x : x = g.maxy;
                                for (q = 1; q < u;) w = q++, d.sweepIntegrate(v * w * f), k.force_validate_aabb(), l < g.minx ? g.minx = l : l = g.minx, n < g.miny ? g.miny = n : n = g.miny, p > g.maxx ? g.maxx = p : p = g.maxx, x > g.maxy ? g.maxy = x : x = g.maxy;
                                this.bphase.sync(k);
                                h = h.next
                            }
                            d.sweepFrozen = !1;
                            d.isDynamic() && d.bulletEnabled && (e = K.bulletCCDLinearThreshold *
                                d.sweepRadius, f = K.bulletCCDAngularThreshold, (d.velx * d.velx + d.vely * d.vely) * a * a > e * e || d.angvel * d.angvel * a * a > f * f) && (d.bullet = !0)
                        } else d.sweepFrozen = !0, d.bullet = !1;
                        c = c.next
                    }
                },
                continuous: null,
                presteparb: function(a, b, c) {
                    null == c && (c = !1);
                    var d = this;
                    if (!a.cleared && a.b1.component.sleeping && a.b2.component.sleeping) return a.sleep_stamp = this.stamp, a.sleeping = !0;
                    if (!a.cleared || 0 != a.present || a.intchange) {
                        var e = !c && a.up_stamp == this.stamp - 1 && !a.cleared && !a.intchange;
                        c = a.fresh && !a.cleared && !a.intchange;
                        e && (a.endGenerated =
                            this.stamp);
                        if (c || e || a.cleared || a.intchange)
                            for (this.inlined_MRCA_chains(a.ws1, a.ws2), e = this.mrca1.begin(); null != e;) {
                                for (var f = e.elem(), h = this.mrca2.begin(); null != h;) {
                                    var k = h.elem(),
                                        g = f.cbSet,
                                        l = k.cbSet;
                                    if (!Ob.empty_intersection(g, l)) {
                                        var n = [cd.get(f, k)];
                                        c || a.intchange ? (null == n[0] && (k = hf.get(f, k), n[0] = k, this.add_callbackset(n[0])), Ob.find_all(g, l, 0, function(b) {
                                                return function(c) {
                                                    if (0 != (c.itype & a.type) && b[0].empty_arb(c.itype)) {
                                                        var e = d.push_callback(c);
                                                        e.event = 0;
                                                        cd.int_callback(b[0], c, e);
                                                        e.set = b[0]
                                                    }
                                                }
                                            }(n)),
                                            n[0].add_arb(a) && a.present++) : (a.present--, n[0].remove_arb(a), Ob.find_all(g, l, 1, function(b) {
                                            return function(c) {
                                                if (0 != (c.itype & a.type) && b[0].empty_arb(c.itype)) {
                                                    var e = d.push_callback(c);
                                                    e.event = 1;
                                                    cd.int_callback(b[0], c, e);
                                                    e.set = b[0]
                                                }
                                            }
                                        }(n)), n[0].really_empty() && this.remove_callbackset(n[0]))
                                    }
                                    h = h.next
                                }
                                e = e.next
                            }
                        a.fresh = !1;
                        a.intchange = !1
                    }
                    if (a.cleared || a.up_stamp + (a.type == Wb.COL ? K.arbiterExpirationDelay : 0) < this.stamp) return a.type == Wb.SENSOR ? a.sensorarb.retire() : a.type == Wb.FLUID ? a.fluidarb.retire() : a.colarb.retire(),
                        !0;
                    c = a.active;
                    a.active = a.presentable = a.up_stamp == this.stamp;
                    0 != (a.immState & 1) ? a.active && a.type != Wb.SENSOR && (null != a.colarb ? a.colarb.preStep(b) && (a.active = !1) : a.fluidarb.preStep(this, b)) : null != a.colarb && a.colarb.cleanupContacts() && (a.active = !1);
                    c != a.active && (a.b1.arbiters.modified = !0, a.b2.arbiters.modified = !0, this.c_arbiters_true.modified = this.c_arbiters_false.modified = !0, this.s_arbiters.modified = this.f_arbiters.modified = !0);
                    return !1
                },
                prestep: function(a) {
                    for (var b = null, c = this.live_constraints.begin(); null !=
                        c;) {
                        var d = c.elem();
                        d.preStep(a) ? (c = this.live_constraints.erase(b), d.broken(), this.constraintCbBreak(d), d.removeOnBreak ? (d.component.sleeping = !0, this.midstep = !1, null != d.compound ? d.compound.wrap_constraints.remove(d.outer) : this.wrap_constraints.remove(d.outer), this.midstep = !0) : d.active = !1, d.clearcache()) : (b = c, c = c.next)
                    }
                    b = null;
                    c = this.c_arbiters_true;
                    d = c.begin();
                    var e = null != this.c_arbiters_false;
                    e && null == d && (e = !1, d = this.c_arbiters_false.begin(), c = this.c_arbiters_false, b = null);
                    for (; null != d;) {
                        var f = d.elem();
                        this.presteparb(f, a) ? d = c.inlined_erase(b) : (b = d, d = d.next);
                        e && null == d && (e = !1, d = this.c_arbiters_false.begin(), c = this.c_arbiters_false, b = null)
                    }
                    b = null;
                    c = this.f_arbiters;
                    d = c.begin();
                    e = !1;
                    for (; null != d;) f = d.elem(), this.presteparb(f, a) ? d = c.inlined_erase(b) : (b = d, d = d.next), e && null == d && (e = !1, d = null.begin(), b = c = null);
                    b = null;
                    c = this.s_arbiters;
                    d = c.begin();
                    e = !1;
                    for (; null != d;) f = d.elem(), this.presteparb(f, a) ? d = c.inlined_erase(b) : (b = d, d = d.next), e && null == d && (e = !1, d = null.begin(), b = c = null)
                },
                warmStart: function() {
                    for (var a =
                            this.f_arbiters.begin(); null != a;) {
                        var b = a.elem();
                        b.acting() && b.warmStart();
                        a = a.next
                    }
                    a = this.c_arbiters_false.begin();
                    b = !0;
                    null == a && (a = this.c_arbiters_true.begin(), b = !1);
                    for (; null != a;) {
                        var c = a.elem();
                        c.acting() && c.warmStart();
                        a = a.next;
                        b && null == a && (a = this.c_arbiters_true.begin(), b = !1)
                    }
                    for (a = this.live_constraints.begin(); null != a;) a.elem().warmStart(), a = a.next
                },
                iterateVel: function(a) {
                    for (var b = 0; b < a;) {
                        b++;
                        for (var c = this.f_arbiters.begin(); null != c;) {
                            var d = c.elem();
                            d.acting() && d.applyImpulseVel();
                            c = c.next
                        }
                        c =
                            null;
                        for (d = this.live_constraints.begin(); null != d;) {
                            var e = d.elem();
                            e.applyImpulseVel() ? (d = this.live_constraints.erase(c), e.broken(), this.constraintCbBreak(e), e.removeOnBreak ? (e.component.sleeping = !0, this.midstep = !1, null != e.compound ? e.compound.wrap_constraints.remove(e.outer) : this.wrap_constraints.remove(e.outer), this.midstep = !0) : e.active = !1, e.clearcache()) : (c = d, d = d.next)
                        }
                        c = this.c_arbiters_false.begin();
                        d = !0;
                        null == c && (c = this.c_arbiters_true.begin(), d = !1);
                        for (; null != c;) e = c.elem(), e.acting() && e.applyImpulseVel(),
                            c = c.next, d && null == c && (c = this.c_arbiters_true.begin(), d = !1)
                    }
                },
                iteratePos: function(a) {
                    for (var b = 0; b < a;) {
                        b++;
                        for (var c = null, d = this.live_constraints.begin(); null != d;) {
                            var e = d.elem();
                            !e.__velocity && e.stiff && e.applyImpulsePos() ? (d = this.live_constraints.erase(c), e.broken(), this.constraintCbBreak(e), e.removeOnBreak ? (e.component.sleeping = !0, this.midstep = !1, null != e.compound ? e.compound.wrap_constraints.remove(e.outer) : this.wrap_constraints.remove(e.outer), this.midstep = !0) : e.active = !1, e.clearcache()) : (c = d, d =
                                d.next)
                        }
                        c = this.c_arbiters_false.begin();
                        d = !0;
                        null == c && (c = this.c_arbiters_true.begin(), d = !1);
                        for (; null != c;) e = c.elem(), e.acting() && e.applyImpulsePos(), c = c.next, d && null == c && (c = this.c_arbiters_true.begin(), d = !1)
                    }
                },
                group_ignore: function(a, b) {
                    a = a.lookup_group();
                    if (null == a) return !1;
                    b = b.lookup_group();
                    if (null == b) return !1;
                    for (var c = !1; null != a && null != b;) {
                        if (a == b) {
                            c = a.ignore;
                            break
                        }
                        a.depth < b.depth ? b = b.group : a = a.group
                    }
                    return c
                },
                interactionType: function(a, b, c, d) {
                    var e = !1;
                    for (var f = c.constraints.begin(); null != f;) {
                        var h =
                            f.elem();
                        if (h.ignore && h.pair_exists(c.id, d.id)) {
                            e = !0;
                            break
                        }
                        f = f.next
                    }
                    return e || this.group_ignore(a, b) ? -1 : (a.sensorEnabled || b.sensorEnabled) && a.filter.shouldSense(b.filter) ? 2 : !a.fluidEnabled && !b.fluidEnabled || !a.filter.shouldFlow(b.filter) || 0 == c.imass && 0 == d.imass && 0 == c.iinertia && 0 == d.iinertia ? !a.filter.shouldCollide(b.filter) || 0 == c.imass && 0 == d.imass && 0 == c.iinertia && 0 == d.iinertia ? -1 : 1 : 0
                },
                precb: null,
                prelisteners: null,
                narrowPhase: function(a, b, c, d, e) {
                    var f = this,
                        h = null,
                        k = a.body,
                        g = b.body,
                        l = this.interactionType(a,
                            b, k, g);
                    if (-1 != l) {
                        if (a.type > b.type) {
                            h = b;
                            var n = a
                        } else a.type == b.type ? a.id < b.id ? (h = a, n = b) : (n = a, h = b) : (h = a, n = b);
                        var p = h == b;
                        if (0 == l) {
                            if (null == d)
                                for (l = null, k = (k.arbiters.length < g.arbiters.length ? k : g).arbiters.begin(); null != k;) {
                                    c = k.elem();
                                    if (c.id == h.id && c.di == n.id) {
                                        l = c;
                                        break
                                    }
                                    k = k.next
                                } else l = d;
                            k = null == l;
                            c = !1;
                            k ? (null == Rf.zpp_pool ? l = new Rf : (l = Rf.zpp_pool, Rf.zpp_pool = l.next, l.next = null), l.alloc()) : null == l.fluidarb ? (l.lazyRetire(this, null), null == Rf.zpp_pool ? l = new Rf : (l = Rf.zpp_pool, Rf.zpp_pool = l.next, l.next = null),
                                l.alloc(), c = k = l.intchange = !0) : l = l.fluidarb;
                            if (k || l.stamp != this.stamp || e)
                                if (l.stamp = this.stamp, Pa.flowCollide(h, n, l)) {
                                    k ? (l.assign(a, b, h.id, n.id), this.f_arbiters.inlined_add(l), l.fresh = !c) : l.fresh = l.up_stamp < this.stamp - 1 || l.endGenerated == this.stamp && e;
                                    l.up_stamp = l.stamp;
                                    if (l.fresh || 0 == (l.immState & 4)) {
                                        l.immState = 1;
                                        var x = !1;
                                        this.inlined_MRCA_chains(l.ws1.id > l.ws2.id ? l.ws2 : l.ws1, l.ws1.id > l.ws2.id ? l.ws1 : l.ws2);
                                        for (a = this.mrca1.begin(); null != a;) {
                                            b = a.elem();
                                            for (h = this.mrca2.begin(); null != h;) {
                                                k = h.elem();
                                                c =
                                                    b.cbSet;
                                                p = k.cbSet;
                                                if (!Ob.empty_intersection(c, p) && (g = n = null, this.prelisteners.inlined_clear(), Ob.find_all(c, p, 5, function(a) {
                                                        return function(b) {
                                                            if (0 != (b.itype & 4)) {
                                                                var c = f.prelisteners.inlined_insert(a[0], b);
                                                                a[0] = c;
                                                                x = x ? !0 : !b.pure
                                                            }
                                                        }
                                                    }([null])), !this.prelisteners.empty()))
                                                    if (n = cd.get(b, k), null == n && (g = hf.get(b, k), this.add_callbackset(g)), null == n || (n.FLUIDstamp != this.stamp || e) && 0 == (n.FLUIDstate & 4)) {
                                                        null != g && (n = g);
                                                        if (null != n)
                                                            for (k = this.prelisteners.begin(); null != k;) 7 == k.elem().itype && (n.COLLISIONstamp = this.stamp,
                                                                n.SENSORstamp = this.stamp), n.FLUIDstamp = this.stamp, k = k.next;
                                                        k = l.active;
                                                        l.active = !0;
                                                        this.precb.zpp_inner.pre_arbiter = l;
                                                        this.precb.zpp_inner.set = n;
                                                        for (c = this.prelisteners.begin(); null != c;) p = c.elem(), this.precb.zpp_inner.listener = p, cd.int_callback(n, p, this.precb.zpp_inner), this.precb.zpp_inner.pre_swapped = b != this.precb.zpp_inner.int1, p = p.handlerp(this.precb), null != p && (l.immState = p == fd.get_ACCEPT() ? 5 : p == fd.get_ACCEPT_ONCE() ? 1 : p == fd.get_IGNORE() ? 6 : 2), c = c.next;
                                                        l.active = k;
                                                        if (null != n)
                                                            for (k = this.prelisteners.begin(); null !=
                                                                k;) 7 == k.elem().itype && (n.COLLISIONstate = l.immState, n.SENSORstate = l.immState), n.FLUIDstate = l.immState, k = k.next
                                                    } else null == n ? 0 == (l.immState & 4) && (l.immState = 1) : l.immState = n.FLUIDstate;
                                                h = h.next
                                            }
                                            a = a.next
                                        }
                                        x && 0 == (l.immState & 4) && (l.b1.isDynamic() && (e = l.b1, e.world || (e.component.waket = this.stamp + (this.midstep ? 0 : 1), e.isKinematic() && (e.kinematicDelaySleep = !0), e.component.sleeping && this.really_wake(e, !1))), l.b1.isDynamic() && (e = l.b2, e.world || (e.component.waket = this.stamp + (this.midstep ? 0 : 1), e.isKinematic() && (e.kinematicDelaySleep = !0), e.component.sleeping && this.really_wake(e, !1))))
                                    }
                                    0 != (l.immState & 1) && (l.b1.isDynamic() && l.b1.component.sleeping && (e = l.b1, e.world || (e.component.waket = this.stamp + (this.midstep ? 0 : 1), e.isKinematic() && (e.kinematicDelaySleep = !0), e.component.sleeping && this.really_wake(e, !1))), l.b2.isDynamic() && l.b2.component.sleeping && (e = l.b2, e.world || (e.component.waket = this.stamp + (this.midstep ? 0 : 1), e.isKinematic() && (e.kinematicDelaySleep = !0), e.component.sleeping && this.really_wake(e, !1))));
                                    l.sleeping && (l.sleeping = !1, this.f_arbiters.inlined_add(l));
                                    h = l
                                } else k ? (e = l, e.free(), e.next = Rf.zpp_pool, Rf.zpp_pool = e, h = null) : h = l;
                            else h = l
                        } else if (1 == l) {
                            l = c ? this.c_arbiters_true : this.c_arbiters_false;
                            if (null == d) {
                                d = null;
                                for (k = (k.arbiters.length < g.arbiters.length ? k : g).arbiters.begin(); null != k;) {
                                    g = k.elem();
                                    if (g.id == h.id && g.di == n.id) {
                                        d = g;
                                        break
                                    }
                                    k = k.next
                                }
                                k = d
                            } else k = d;
                            g = null == k;
                            d = !1;
                            g ? (null == eg.zpp_pool ? k = new eg : (k = eg.zpp_pool, eg.zpp_pool = k.next, k.next = null), k.alloc(), k.stat = c) : null == k.colarb ? (k.lazyRetire(this, null), null == eg.zpp_pool ? k = new eg : (k = eg.zpp_pool, eg.zpp_pool =
                                k.next, k.next = null), k.alloc(), k.intchange = !0, k.stat = c, d = g = !0) : (k = k.colarb, p = h != k.s1, k.stat != c && (k.stat = c, k.sleeping || ((c ? this.c_arbiters_false : this.c_arbiters_true).remove(k), l.add(k))));
                            if (g || k.stamp != this.stamp || e)
                                if (k.stamp = this.stamp, Pa.contactCollide(h, n, k, p)) {
                                    g ? (k.assign(a, b, h.id, n.id), l.inlined_add(k), k.fresh = !d) : k.fresh = k.up_stamp < this.stamp - 1 || k.endGenerated == this.stamp && e;
                                    k.up_stamp = k.stamp;
                                    if (k.fresh || 0 == (k.immState & 4)) {
                                        k.immState = 1;
                                        var u = !1;
                                        this.inlined_MRCA_chains(k.ws1.id > k.ws2.id ? k.ws2 :
                                            k.ws1, k.ws1.id > k.ws2.id ? k.ws1 : k.ws2);
                                        for (a = this.mrca1.begin(); null != a;) {
                                            b = a.elem();
                                            for (h = this.mrca2.begin(); null != h;) {
                                                c = h.elem();
                                                p = b.cbSet;
                                                g = c.cbSet;
                                                if (!Ob.empty_intersection(p, g) && (d = n = null, this.prelisteners.inlined_clear(), Ob.find_all(p, g, 5, function(a) {
                                                        return function(b) {
                                                            if (0 != (b.itype & 1)) {
                                                                var c = f.prelisteners.inlined_insert(a[0], b);
                                                                a[0] = c;
                                                                u = u ? !0 : !b.pure
                                                            }
                                                        }
                                                    }([null])), !this.prelisteners.empty()))
                                                    if (n = cd.get(b, c), null == n && (d = hf.get(b, c), this.add_callbackset(d)), null == n || (n.COLLISIONstamp != this.stamp ||
                                                            e) && 0 == (n.COLLISIONstate & 4)) {
                                                        null != d && (n = d);
                                                        if (null != n)
                                                            for (c = this.prelisteners.begin(); null != c;) 7 == c.elem().itype ? (n.COLLISIONstamp = this.stamp, n.SENSORstamp = this.stamp, n.FLUIDstamp = this.stamp) : n.COLLISIONstamp = this.stamp, c = c.next;
                                                        c = k.active;
                                                        k.active = !0;
                                                        k.cleanupContacts();
                                                        this.precb.zpp_inner.pre_arbiter = k;
                                                        this.precb.zpp_inner.set = n;
                                                        for (p = this.prelisteners.begin(); null != p;) g = p.elem(), this.precb.zpp_inner.listener = g, cd.int_callback(n, g, this.precb.zpp_inner), this.precb.zpp_inner.pre_swapped = b != this.precb.zpp_inner.int1,
                                                            g = g.handlerp(this.precb), null != g && (k.immState = g == fd.get_ACCEPT() ? 5 : g == fd.get_ACCEPT_ONCE() ? 1 : g == fd.get_IGNORE() ? 6 : 2), p = p.next;
                                                        k.active = c;
                                                        if (null != n)
                                                            for (c = this.prelisteners.begin(); null != c;) 7 == c.elem().itype ? (n.COLLISIONstate = k.immState, n.SENSORstate = k.immState, n.FLUIDstate = k.immState) : n.COLLISIONstate = k.immState, c = c.next
                                                    } else null == n ? 0 == (k.immState & 4) && (k.immState = 1) : k.immState = n.COLLISIONstate;
                                                h = h.next
                                            }
                                            a = a.next
                                        }
                                        u && 0 == (k.immState & 4) && (k.b1.isDynamic() && (e = k.b1, e.world || (e.component.waket = this.stamp +
                                            (this.midstep ? 0 : 1), e.isKinematic() && (e.kinematicDelaySleep = !0), e.component.sleeping && this.really_wake(e, !1))), k.b1.isDynamic() && (e = k.b2, e.world || (e.component.waket = this.stamp + (this.midstep ? 0 : 1), e.isKinematic() && (e.kinematicDelaySleep = !0), e.component.sleeping && this.really_wake(e, !1))))
                                    }
                                    0 != (k.immState & 1) && (k.b1.isDynamic() && k.b1.component.sleeping && (e = k.b1, e.world || (e.component.waket = this.stamp + (this.midstep ? 0 : 1), e.isKinematic() && (e.kinematicDelaySleep = !0), e.component.sleeping && this.really_wake(e, !1))),
                                        k.b2.isDynamic() && k.b2.component.sleeping && (e = k.b2, e.world || (e.component.waket = this.stamp + (this.midstep ? 0 : 1), e.isKinematic() && (e.kinematicDelaySleep = !0), e.component.sleeping && this.really_wake(e, !1))));
                                    k.sleeping && (k.sleeping = !1, l.inlined_add(k));
                                    h = k
                                } else g ? (e = k, e.free(), e.next = eg.zpp_pool, eg.zpp_pool = e, h = null) : h = k;
                            else h = k
                        } else {
                            if (null == d)
                                for (l = null, k = (k.arbiters.length < g.arbiters.length ? k : g).arbiters.begin(); null != k;) {
                                    c = k.elem();
                                    if (c.id == h.id && c.di == n.id) {
                                        l = c;
                                        break
                                    }
                                    k = k.next
                                } else l = d;
                            k = null == l;
                            c = !1;
                            k ? (null == df.zpp_pool ? l = new df : (l = df.zpp_pool, df.zpp_pool = l.next, l.next = null), l.alloc()) : null == l.sensorarb ? (l.lazyRetire(this, null), null == df.zpp_pool ? l = new df : (l = df.zpp_pool, df.zpp_pool = l.next, l.next = null), l.alloc(), c = k = l.intchange = !0) : l = l.sensorarb;
                            if (k || l.stamp != this.stamp || e)
                                if (l.stamp = this.stamp, Pa.testCollide(h, n)) {
                                    k ? (l.assign(a, b, h.id, n.id), this.s_arbiters.inlined_add(l), l.fresh = !c) : l.fresh = l.up_stamp < this.stamp - 1 || l.endGenerated == this.stamp && e;
                                    l.up_stamp = l.stamp;
                                    if (l.fresh || 0 == (l.immState &
                                            4)) {
                                        l.immState = 1;
                                        var v = !1;
                                        this.inlined_MRCA_chains(l.ws1.id > l.ws2.id ? l.ws2 : l.ws1, l.ws1.id > l.ws2.id ? l.ws1 : l.ws2);
                                        for (a = this.mrca1.begin(); null != a;) {
                                            b = a.elem();
                                            for (h = this.mrca2.begin(); null != h;) {
                                                k = h.elem();
                                                c = b.cbSet;
                                                p = k.cbSet;
                                                if (!Ob.empty_intersection(c, p) && (g = n = null, this.prelisteners.inlined_clear(), Ob.find_all(c, p, 5, function(a) {
                                                        return function(b) {
                                                            if (0 != (b.itype & 2)) {
                                                                var c = f.prelisteners.inlined_insert(a[0], b);
                                                                a[0] = c;
                                                                v = v ? !0 : !b.pure
                                                            }
                                                        }
                                                    }([null])), !this.prelisteners.empty()))
                                                    if (n = cd.get(b, k), null == n && (g =
                                                            hf.get(b, k), this.add_callbackset(g)), null == n || (n.SENSORstamp != this.stamp || e) && 0 == (n.SENSORstate & 4)) {
                                                        null != g && (n = g);
                                                        if (null != n)
                                                            for (k = this.prelisteners.begin(); null != k;) 7 == k.elem().itype ? (n.COLLISIONstamp = this.stamp, n.SENSORstamp = this.stamp, n.FLUIDstamp = this.stamp) : n.SENSORstamp = this.stamp, k = k.next;
                                                        k = l.active;
                                                        l.active = !0;
                                                        this.precb.zpp_inner.pre_arbiter = l;
                                                        this.precb.zpp_inner.set = n;
                                                        for (c = this.prelisteners.begin(); null != c;) p = c.elem(), this.precb.zpp_inner.listener = p, cd.int_callback(n, p, this.precb.zpp_inner),
                                                            this.precb.zpp_inner.pre_swapped = b != this.precb.zpp_inner.int1, p = p.handlerp(this.precb), null != p && (l.immState = p == fd.get_ACCEPT() ? 5 : p == fd.get_ACCEPT_ONCE() ? 1 : p == fd.get_IGNORE() ? 6 : 2), c = c.next;
                                                        l.active = k;
                                                        if (null != n)
                                                            for (k = this.prelisteners.begin(); null != k;) 7 == k.elem().itype ? (n.COLLISIONstate = l.immState, n.SENSORstate = l.immState, n.FLUIDstate = l.immState) : n.SENSORstate = l.immState, k = k.next
                                                    } else null == n ? 0 == (l.immState & 4) && (l.immState = 1) : l.immState = n.SENSORstate;
                                                h = h.next
                                            }
                                            a = a.next
                                        }
                                        v && 0 == (l.immState & 4) && (l.b1.isStatic() ||
                                            (e = l.b1, e.world || (e.component.waket = this.stamp + (this.midstep ? 0 : 1), e.isKinematic() && (e.kinematicDelaySleep = !0), e.component.sleeping && this.really_wake(e, !1))), l.b2.isStatic() || (e = l.b2, e.world || (e.component.waket = this.stamp + (this.midstep ? 0 : 1), e.isKinematic() && (e.kinematicDelaySleep = !0), e.component.sleeping && this.really_wake(e, !1))))
                                    }
                                    l.sleeping && (l.sleeping = !1, this.s_arbiters.inlined_add(l));
                                    h = l
                                } else k ? (e = l, e.free(), e.next = df.zpp_pool, df.zpp_pool = e, h = null) : h = l;
                            else h = l
                        }
                    }
                    return h
                },
                mrca1: null,
                mrca2: null,
                MRCA_chains: function(a, b) {
                    this.inlined_MRCA_chains(a, b)
                },
                inlined_MRCA_chains: function(a, b) {
                    this.mrca1.inlined_clear();
                    this.mrca2.inlined_clear();
                    null != a.cbSet && this.mrca1.inlined_add(a);
                    null != a.body.cbSet && this.mrca1.inlined_add(a.body);
                    null != b.cbSet && this.mrca2.inlined_add(b);
                    null != b.body.cbSet && this.mrca2.inlined_add(b.body);
                    a = a.body.compound;
                    for (b = b.body.compound; a != b;)(null == a ? 0 : a.depth) < (null == b ? 0 : b.depth) ? (null != b.cbSet && this.mrca2.inlined_add(b), b = b.compound) : (null != a.cbSet && this.mrca1.inlined_add(a),
                        a = a.compound)
                },
                __class__: Xu
            };
            var Jj = function() {
                this.next = this.prev = this.shape = this.aabb = null
            };
            g["zpp_nape.space.ZPP_SweepData"] = Jj;
            Jj.__name__ = ["zpp_nape", "space", "ZPP_SweepData"];
            Jj.prototype = {
                next: null,
                prev: null,
                shape: null,
                aabb: null,
                free: function() {
                    this.aabb = this.shape = this.prev = null
                },
                alloc: function() {},
                gt: function(a) {
                    return this.aabb.minx > a.aabb.minx
                },
                __class__: Jj
            };
            var ds = function(a) {
                this.list = null;
                Hj.call(this);
                this.space = a;
                this.is_sweep = !0;
                this.sweep = this
            };
            g["zpp_nape.space.ZPP_SweepPhase"] =
                ds;
            ds.__name__ = ["zpp_nape", "space", "ZPP_SweepPhase"];
            ds.__super__ = Hj;
            ds.prototype = p(Hj.prototype, {
                list: null,
                __insert: function(a) {
                    if (null == Jj.zpp_pool) var b = new Jj;
                    else b = Jj.zpp_pool, Jj.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    a.sweep = b;
                    b.shape = a;
                    b.aabb = a.aabb;
                    b.next = this.list;
                    null != this.list && (this.list.prev = b);
                    this.list = b
                },
                __remove: function(a) {
                    var b = a.sweep;
                    null == b.prev ? this.list = b.next : b.prev.next = b.next;
                    null != b.next && (b.next.prev = b.prev);
                    a.sweep = null;
                    b.free();
                    b.next = Jj.zpp_pool;
                    Jj.zpp_pool = b
                },
                __sync: function(a) {
                    this.space.continuous ||
                        a.validate_aabb()
                },
                sync_broadphase: function() {
                    this.space.validation();
                    null != this.list && this.sync_broadphase_fast()
                },
                sync_broadphase_fast: function() {
                    for (var a = this.list.next; null != a;) {
                        var b = a.next,
                            c = a.prev;
                        if (!a.gt(c)) {
                            for (; null != c.prev && c.prev.gt(a);) c = c.prev;
                            var d = a.prev;
                            d.next = a.next;
                            null != a.next && (a.next.prev = d);
                            null == c.prev ? (a.prev = null, this.list = a, a.next = c, c.prev = a) : (a.prev = c.prev, c.prev = a, a.prev.next = a, a.next = c)
                        }
                        a = b
                    }
                },
                broadphase: function(a, b) {
                    if (null != this.list) {
                        this.sync_broadphase_fast();
                        for (var c = this.list; null != c;) {
                            for (var d = c.next, e = c.shape, f = e.body, h = c.aabb.maxx; null != d && !(d.aabb.minx > h);) {
                                var k = d.shape,
                                    g = k.body;
                                g != f && (f.isStatic() && g.isStatic() || f.component.sleeping && g.component.sleeping || e.aabb.intersectY(k.aabb) && (b ? a.narrowPhase(e, k, !f.isDynamic() || !g.isDynamic(), null, !1) : a.continuousEvent(e, k, !f.isDynamic() || !g.isDynamic(), null, !1)));
                                d = d.next
                            }
                            c = c.next
                        }
                    }
                },
                clear: function() {
                    for (; null != this.list;) this.list.shape.removedFromSpace(), this.__remove(this.list.shape)
                },
                shapesInCircle: function(a,
                    b, c, d, e, f) {
                    this.sync_broadphase();
                    this.updateCircShape(a, b, c);
                    a = this.circShape.zpp_inner.aabb;
                    f = null == f ? new Eo : f;
                    for (b = this.list; null != b && b.aabb.maxx < a.minx;) b = b.next;
                    for (; null != b && b.aabb.minx <= a.maxx;) b.aabb.intersect(a) && (c = b.shape, null == e || c.filter.shouldCollide(e)) && (d ? Pa.containTest(this.circShape.zpp_inner, c) && f.push(c.outer) : Pa.testCollide_safe(c, this.circShape.zpp_inner) && f.push(c.outer)), b = b.next;
                    return f
                },
                __class__: ds
            });
            var Uw = function() {};
            g["zpp_nape.util.Hashable2_Boolfalse"] = Uw;
            Uw.__name__ = ["zpp_nape", "util", "Hashable2_Boolfalse"];
            var xv = function() {
                this.cnt = 0;
                this.table = null;
                this.cnt = 0;
                this.table = [];
                for (var a = 0; 1048576 > a;) a++, this.table.push(null)
            };
            g["zpp_nape.util.FastHash2_Hashable2_Boolfalse"] = xv;
            xv.__name__ = ["zpp_nape", "util", "FastHash2_Hashable2_Boolfalse"];
            xv.prototype = {
                table: null,
                cnt: null,
                __class__: xv
            };
            var Ro = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_Compound"] = Ro;
            Ro.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_Compound"];
            Ro.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                add: function(a) {
                    return this.inlined_add(a)
                },
                inlined_add: function(a) {
                    if (null == pi.zpp_pool) var b = new pi;
                    else b = pi.zpp_pool, pi.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.elt = a;
                    b.next = this.begin();
                    this.head = b;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                pop: function() {
                    this.inlined_pop()
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.head = a.next;
                    a.free();
                    a.next = pi.zpp_pool;
                    pi.zpp_pool = a;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                pop_unsafe: function() {
                    return this.inlined_pop_unsafe()
                },
                inlined_pop_unsafe: function() {
                    var a = this.front();
                    this.pop();
                    return a
                },
                remove: function(a) {
                    this.inlined_try_remove(a)
                },
                inlined_try_remove: function(a) {
                    for (var b = null, c = this.begin(), d = !1; null != c;) {
                        if (c.elem() == a) {
                            this.inlined_erase(b);
                            d = !0;
                            break
                        }
                        b = c;
                        c = c.next
                    }
                    return d
                },
                inlined_erase: function(a) {
                    var b;
                    if (null == a) {
                        var c = this.begin();
                        this.head = b = c.next;
                        this.empty() && (this.pushmod = !0)
                    } else c = a.next, b = c.next, a.next =
                        b, null == b && (this.pushmod = !0);
                    a = c;
                    a.free();
                    a.next = pi.zpp_pool;
                    pi.zpp_pool = a;
                    this.modified = !0;
                    this.length--;
                    this.pushmod = !0;
                    return b
                },
                empty: function() {
                    return null == this.begin()
                },
                front: function() {
                    return this.begin().elem()
                },
                iterator_at: function(a) {
                    for (var b = this.begin(); 0 < a-- && null != b;) b = b.next;
                    return b
                },
                __class__: Ro
            };
            var cs = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_AABBNode"] = cs;
            cs.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_AABBNode"];
            cs.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                add: function(a) {
                    return this.inlined_add(a)
                },
                inlined_add: function(a) {
                    if (null == Kj.zpp_pool) var b = new Kj;
                    else b = Kj.zpp_pool, Kj.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.elt = a;
                    b.next = this.begin();
                    this.head = b;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                pop: function() {
                    this.inlined_pop()
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.head = a.next;
                    a.free();
                    a.next = Kj.zpp_pool;
                    Kj.zpp_pool = a;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                pop_unsafe: function() {
                    return this.inlined_pop_unsafe()
                },
                inlined_pop_unsafe: function() {
                    var a = this.front();
                    this.pop();
                    return a
                },
                empty: function() {
                    return null == this.begin()
                },
                front: function() {
                    return this.begin().elem()
                },
                __class__: cs
            };
            var Dv = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_Edge"] = Dv;
            Dv.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_Edge"];
            Dv.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                add: function(a) {
                    return this.inlined_add(a)
                },
                inlined_add: function(a) {
                    if (null == Sf.zpp_pool) var b = new Sf;
                    else b = Sf.zpp_pool, Sf.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.elt = a;
                    b.next = this.begin();
                    this.head = b;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                insert: function(a, b) {
                    return this.inlined_insert(a, b)
                },
                inlined_insert: function(a, b) {
                    if (null == Sf.zpp_pool) var c = new Sf;
                    else c = Sf.zpp_pool, Sf.zpp_pool = c.next, c.next = null;
                    c.alloc();
                    c.elt = b;
                    b = c;
                    null == a ? (b.next = this.begin(), this.head = b) : (b.next = a.next,
                        a.next = b);
                    this.pushmod = this.modified = !0;
                    this.length++;
                    return b
                },
                pop: function() {
                    this.inlined_pop()
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.head = a.next;
                    a.free();
                    a.next = Sf.zpp_pool;
                    Sf.zpp_pool = a;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                pop_unsafe: function() {
                    return this.inlined_pop_unsafe()
                },
                inlined_pop_unsafe: function() {
                    var a = this.front();
                    this.pop();
                    return a
                },
                erase: function(a) {
                    return this.inlined_erase(a)
                },
                inlined_erase: function(a) {
                    var b;
                    if (null == a) {
                        var c = this.begin();
                        this.head = b = c.next;
                        this.empty() && (this.pushmod = !0)
                    } else c = a.next, b = c.next, a.next = b, null == b && (this.pushmod = !0);
                    a = c;
                    a.free();
                    a.next = Sf.zpp_pool;
                    Sf.zpp_pool = a;
                    this.modified = !0;
                    this.length--;
                    this.pushmod = !0;
                    return b
                },
                reverse: function() {
                    for (var a = this.begin(), b = null; null != a;) {
                        var c = a.next;
                        a.next = b;
                        b = this.head = a;
                        a = c
                    }
                    this.pushmod = this.modified = !0
                },
                empty: function() {
                    return null == this.begin()
                },
                front: function() {
                    return this.begin().elem()
                },
                iterator_at: function(a) {
                    for (var b = this.begin(); 0 < a-- && null != b;) b = b.next;
                    return b
                },
                __class__: Dv
            };
            var Cv = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_AABBPair"] = Cv;
            Cv.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_AABBPair"];
            Cv.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                inlined_add: function(a) {
                    if (null == qi.zpp_pool) var b = new qi;
                    else b = qi.zpp_pool, qi.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.elt = a;
                    b.next = this.begin();
                    this.head = b;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                pop: function() {
                    this.inlined_pop()
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.head = a.next;
                    a.free();
                    a.next = qi.zpp_pool;
                    qi.zpp_pool = a;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                pop_unsafe: function() {
                    return this.inlined_pop_unsafe()
                },
                inlined_pop_unsafe: function() {
                    var a = this.front();
                    this.pop();
                    return a
                },
                remove: function(a) {
                    this.inlined_try_remove(a)
                },
                inlined_remove: function(a) {
                    this.inlined_try_remove(a)
                },
                inlined_try_remove: function(a) {
                    for (var b = null, c = this.begin(), d = !1; null != c;) {
                        if (c.elem() == a) {
                            this.inlined_erase(b);
                            d = !0;
                            break
                        }
                        b = c;
                        c = c.next
                    }
                    return d
                },
                inlined_erase: function(a) {
                    var b;
                    if (null == a) {
                        var c = this.begin();
                        this.head = b = c.next;
                        this.empty() && (this.pushmod = !0)
                    } else c = a.next, b = c.next, a.next = b, null == b && (this.pushmod = !0);
                    a = c;
                    a.free();
                    a.next = qi.zpp_pool;
                    qi.zpp_pool = a;
                    this.modified = !0;
                    this.length--;
                    this.pushmod = !0;
                    return b
                },
                empty: function() {
                    return null == this.begin()
                },
                front: function() {
                    return this.begin().elem()
                },
                __class__: Cv
            };
            var rl = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_Shape"] =
                rl;
            rl.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_Shape"];
            rl.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                add: function(a) {
                    return this.inlined_add(a)
                },
                inlined_add: function(a) {
                    if (null == $g.zpp_pool) var b = new $g;
                    else b = $g.zpp_pool, $g.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.elt = a;
                    b.next = this.begin();
                    this.head = b;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                insert: function(a, b) {
                    return this.inlined_insert(a, b)
                },
                inlined_insert: function(a, b) {
                    if (null == $g.zpp_pool) var c =
                        new $g;
                    else c = $g.zpp_pool, $g.zpp_pool = c.next, c.next = null;
                    c.alloc();
                    c.elt = b;
                    b = c;
                    null == a ? (b.next = this.begin(), this.head = b) : (b.next = a.next, a.next = b);
                    this.pushmod = this.modified = !0;
                    this.length++;
                    return b
                },
                remove: function(a) {
                    this.inlined_try_remove(a)
                },
                inlined_try_remove: function(a) {
                    for (var b = null, c = this.begin(), d = !1; null != c;) {
                        if (c.elem() == a) {
                            this.inlined_erase(b);
                            d = !0;
                            break
                        }
                        b = c;
                        c = c.next
                    }
                    return d
                },
                inlined_erase: function(a) {
                    var b;
                    if (null == a) {
                        var c = this.begin();
                        this.head = b = c.next;
                        this.empty() && (this.pushmod = !0)
                    } else c = a.next, b = c.next, a.next = b, null == b && (this.pushmod = !0);
                    a = c;
                    a.free();
                    a.next = $g.zpp_pool;
                    $g.zpp_pool = a;
                    this.modified = !0;
                    this.length--;
                    this.pushmod = !0;
                    return b
                },
                empty: function() {
                    return null == this.begin()
                },
                iterator_at: function(a) {
                    for (var b = this.begin(); 0 < a-- && null != b;) b = b.next;
                    return b
                },
                __class__: rl
            };
            var Qo = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_Arbiter"] = Qo;
            Qo.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_Arbiter"];
            Qo.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                inlined_add: function(a) {
                    if (null == ri.zpp_pool) var b = new ri;
                    else b = ri.zpp_pool, ri.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.elt = a;
                    b.next = this.begin();
                    this.head = b;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                pop: function() {
                    this.inlined_pop()
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.head = a.next;
                    a.free();
                    a.next = ri.zpp_pool;
                    ri.zpp_pool = a;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                pop_unsafe: function() {
                    return this.inlined_pop_unsafe()
                },
                inlined_pop_unsafe: function() {
                    var a = this.front();
                    this.pop();
                    return a
                },
                inlined_remove: function(a) {
                    this.inlined_try_remove(a)
                },
                inlined_try_remove: function(a) {
                    for (var b = null, c = this.begin(), d = !1; null != c;) {
                        if (c.elem() == a) {
                            this.inlined_erase(b);
                            d = !0;
                            break
                        }
                        b = c;
                        c = c.next
                    }
                    return d
                },
                erase: function(a) {
                    return this.inlined_erase(a)
                },
                inlined_erase: function(a) {
                    var b;
                    if (null == a) {
                        var c = this.begin();
                        this.head = b = c.next;
                        this.empty() && (this.pushmod = !0)
                    } else c = a.next, b = c.next, a.next = b, null == b && (this.pushmod = !0);
                    a = c;
                    a.free();
                    a.next = ri.zpp_pool;
                    ri.zpp_pool = a;
                    this.modified = !0;
                    this.length--;
                    this.pushmod = !0;
                    return b
                },
                clear: function() {
                    this.inlined_clear()
                },
                inlined_clear: function() {
                    for (; !this.empty();) this.inlined_pop();
                    this.pushmod = !0
                },
                empty: function() {
                    return null == this.begin()
                },
                inlined_has: function(a) {
                    var b = !1;
                    for (var c = this.begin(); null != c;) {
                        if (c.elem() == a) {
                            b = !0;
                            break
                        }
                        c = c.next
                    }
                    return b
                },
                front: function() {
                    return this.begin().elem()
                },
                __class__: Qo
            };
            var zk = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_Body"] = zk;
            zk.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_Body"];
            zk.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                add: function(a) {
                    return this.inlined_add(a)
                },
                inlined_add: function(a) {
                    if (null == Gf.zpp_pool) var b = new Gf;
                    else b = Gf.zpp_pool, Gf.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.elt = a;
                    b.next = this.begin();
                    this.head = b;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                insert: function(a, b) {
                    return this.inlined_insert(a, b)
                },
                inlined_insert: function(a,
                    b) {
                    if (null == Gf.zpp_pool) var c = new Gf;
                    else c = Gf.zpp_pool, Gf.zpp_pool = c.next, c.next = null;
                    c.alloc();
                    c.elt = b;
                    b = c;
                    null == a ? (b.next = this.begin(), this.head = b) : (b.next = a.next, a.next = b);
                    this.pushmod = this.modified = !0;
                    this.length++;
                    return b
                },
                pop: function() {
                    this.inlined_pop()
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.head = a.next;
                    a.free();
                    a.next = Gf.zpp_pool;
                    Gf.zpp_pool = a;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                pop_unsafe: function() {
                    return this.inlined_pop_unsafe()
                },
                inlined_pop_unsafe: function() {
                    var a =
                        this.front();
                    this.pop();
                    return a
                },
                remove: function(a) {
                    this.inlined_try_remove(a)
                },
                inlined_try_remove: function(a) {
                    for (var b = null, c = this.begin(), d = !1; null != c;) {
                        if (c.elem() == a) {
                            this.inlined_erase(b);
                            d = !0;
                            break
                        }
                        b = c;
                        c = c.next
                    }
                    return d
                },
                inlined_erase: function(a) {
                    var b;
                    if (null == a) {
                        var c = this.begin();
                        this.head = b = c.next;
                        this.empty() && (this.pushmod = !0)
                    } else c = a.next, b = c.next, a.next = b, null == b && (this.pushmod = !0);
                    a = c;
                    a.free();
                    a.next = Gf.zpp_pool;
                    Gf.zpp_pool = a;
                    this.modified = !0;
                    this.length--;
                    this.pushmod = !0;
                    return b
                },
                clear: function() {
                    this.inlined_clear()
                },
                inlined_clear: function() {
                    for (; !this.empty();) this.inlined_pop();
                    this.pushmod = !0
                },
                empty: function() {
                    return null == this.begin()
                },
                front: function() {
                    return this.begin().elem()
                },
                iterator_at: function(a) {
                    for (var b = this.begin(); 0 < a-- && null != b;) b = b.next;
                    return b
                },
                __class__: zk
            };
            var Av = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_CallbackSet"] = Av;
            Av.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_CallbackSet"];
            Av.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                inlined_add: function(a) {
                    if (null == Lj.zpp_pool) var b = new Lj;
                    else b = Lj.zpp_pool, Lj.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.elt = a;
                    b.next = this.begin();
                    this.head = b;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                inlined_remove: function(a) {
                    this.inlined_try_remove(a)
                },
                inlined_try_remove: function(a) {
                    for (var b = null, c = this.begin(), d = !1; null != c;) {
                        if (c.elem() == a) {
                            this.inlined_erase(b);
                            d = !0;
                            break
                        }
                        b = c;
                        c = c.next
                    }
                    return d
                },
                inlined_erase: function(a) {
                    var b;
                    if (null == a) {
                        var c = this.begin();
                        this.head = b = c.next;
                        this.empty() && (this.pushmod = !0)
                    } else c = a.next, b = c.next, a.next = b, null == b && (this.pushmod = !0);
                    a = c;
                    a.free();
                    a.next = Lj.zpp_pool;
                    Lj.zpp_pool = a;
                    this.modified = !0;
                    this.length--;
                    this.pushmod = !0;
                    return b
                },
                empty: function() {
                    return null == this.begin()
                },
                __class__: Av
            };
            var Ev = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_Component"] = Ev;
            Ev.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_Component"];
            Ev.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                inlined_add: function(a) {
                    if (null == Mj.zpp_pool) var b = new Mj;
                    else b = Mj.zpp_pool, Mj.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.elt = a;
                    b.next = this.begin();
                    this.head = b;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                pop: function() {
                    this.inlined_pop()
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.head = a.next;
                    a.free();
                    a.next = Mj.zpp_pool;
                    Mj.zpp_pool = a;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                pop_unsafe: function() {
                    return this.inlined_pop_unsafe()
                },
                inlined_pop_unsafe: function() {
                    var a = this.front();
                    this.pop();
                    return a
                },
                empty: function() {
                    return null == this.begin()
                },
                front: function() {
                    return this.begin().elem()
                },
                __class__: Ev
            };
            var Hv = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_FluidArbiter"] = Hv;
            Hv.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_FluidArbiter"];
            Hv.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                inlined_add: function(a) {
                    if (null == si.zpp_pool) var b =
                        new si;
                    else b = si.zpp_pool, si.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.elt = a;
                    b.next = this.begin();
                    this.head = b;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                pop: function() {
                    this.inlined_pop()
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.head = a.next;
                    a.free();
                    a.next = si.zpp_pool;
                    si.zpp_pool = a;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                pop_unsafe: function() {
                    return this.inlined_pop_unsafe()
                },
                inlined_pop_unsafe: function() {
                    var a = this.front();
                    this.pop();
                    return a
                },
                inlined_erase: function(a) {
                    var b;
                    if (null == a) {
                        var c = this.begin();
                        this.head = b = c.next;
                        this.empty() && (this.pushmod = !0)
                    } else c = a.next, b = c.next, a.next = b, null == b && (this.pushmod = !0);
                    a = c;
                    a.free();
                    a.next = si.zpp_pool;
                    si.zpp_pool = a;
                    this.modified = !0;
                    this.length--;
                    this.pushmod = !0;
                    return b
                },
                empty: function() {
                    return null == this.begin()
                },
                front: function() {
                    return this.begin().elem()
                },
                __class__: Hv
            };
            var Iv = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_SensorArbiter"] = Iv;
            Iv.__name__ = ["zpp_nape", "util",
                "ZNPList_ZPP_SensorArbiter"
            ];
            Iv.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                inlined_add: function(a) {
                    if (null == ti.zpp_pool) var b = new ti;
                    else b = ti.zpp_pool, ti.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.elt = a;
                    b.next = this.begin();
                    this.head = b;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                pop: function() {
                    this.inlined_pop()
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.head = a.next;
                    a.free();
                    a.next = ti.zpp_pool;
                    ti.zpp_pool = a;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                pop_unsafe: function() {
                    return this.inlined_pop_unsafe()
                },
                inlined_pop_unsafe: function() {
                    var a = this.front();
                    this.pop();
                    return a
                },
                inlined_erase: function(a) {
                    var b;
                    if (null == a) {
                        var c = this.begin();
                        this.head = b = c.next;
                        this.empty() && (this.pushmod = !0)
                    } else c = a.next, b = c.next, a.next = b, null == b && (this.pushmod = !0);
                    a = c;
                    a.free();
                    a.next = ti.zpp_pool;
                    ti.zpp_pool = a;
                    this.modified = !0;
                    this.length--;
                    this.pushmod = !0;
                    return b
                },
                empty: function() {
                    return null == this.begin()
                },
                front: function() {
                    return this.begin().elem()
                },
                __class__: Iv
            };
            var fs = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_Listener"] = fs;
            fs.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_Listener"];
            fs.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                pop: function() {
                    this.inlined_pop()
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.head = a.next;
                    a.free();
                    a.next = Ql.zpp_pool;
                    Ql.zpp_pool = a;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                pop_unsafe: function() {
                    return this.inlined_pop_unsafe()
                },
                inlined_pop_unsafe: function() {
                    var a = this.front();
                    this.pop();
                    return a
                },
                remove: function(a) {
                    this.inlined_try_remove(a)
                },
                inlined_try_remove: function(a) {
                    for (var b = null, c = this.begin(), d = !1; null != c;) {
                        if (c.elem() == a) {
                            this.inlined_erase(b);
                            d = !0;
                            break
                        }
                        b = c;
                        c = c.next
                    }
                    return d
                },
                inlined_erase: function(a) {
                    var b;
                    if (null == a) {
                        var c = this.begin();
                        this.head = b = c.next;
                        this.empty() && (this.pushmod = !0)
                    } else c = a.next, b = c.next, a.next = b, null == b && (this.pushmod = !0);
                    a = c;
                    a.free();
                    a.next = Ql.zpp_pool;
                    Ql.zpp_pool = a;
                    this.modified = !0;
                    this.length--;
                    this.pushmod = !0;
                    return b
                },
                empty: function() {
                    return null == this.begin()
                },
                front: function() {
                    return this.begin().elem()
                },
                iterator_at: function(a) {
                    for (var b = this.begin(); 0 < a-- && null != b;) b = b.next;
                    return b
                },
                __class__: fs
            };
            var es = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_ColArbiter"] = es;
            es.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_ColArbiter"];
            es.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                setbegin: function(a) {
                    this.head = a;
                    this.pushmod = this.modified = !0
                },
                add: function(a) {
                    return this.inlined_add(a)
                },
                inlined_add: function(a) {
                    if (null == ui.zpp_pool) var b = new ui;
                    else b = ui.zpp_pool, ui.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.elt = a;
                    b.next = this.begin();
                    this.head = b;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                pop: function() {
                    this.inlined_pop()
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.head = a.next;
                    a.free();
                    a.next = ui.zpp_pool;
                    ui.zpp_pool = a;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                pop_unsafe: function() {
                    return this.inlined_pop_unsafe()
                },
                inlined_pop_unsafe: function() {
                    var a = this.front();
                    this.pop();
                    return a
                },
                remove: function(a) {
                    this.inlined_try_remove(a)
                },
                inlined_try_remove: function(a) {
                    for (var b = null, c = this.begin(), d = !1; null != c;) {
                        if (c.elem() == a) {
                            this.inlined_erase(b);
                            d = !0;
                            break
                        }
                        b = c;
                        c = c.next
                    }
                    return d
                },
                inlined_erase: function(a) {
                    var b;
                    if (null == a) {
                        var c = this.begin();
                        this.head = b = c.next;
                        this.empty() && (this.pushmod = !0)
                    } else c = a.next, b = c.next, a.next = b, null == b && (this.pushmod = !0);
                    a = c;
                    a.free();
                    a.next = ui.zpp_pool;
                    ui.zpp_pool = a;
                    this.modified = !0;
                    this.length--;
                    this.pushmod = !0;
                    return b
                },
                empty: function() {
                    return null == this.begin()
                },
                front: function() {
                    return this.begin().elem()
                },
                __class__: es
            };
            var Gv = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_ToiEvent"] = Gv;
            Gv.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_ToiEvent"];
            Gv.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                add: function(a) {
                    return this.inlined_add(a)
                },
                inlined_add: function(a) {
                    if (null == vi.zpp_pool) var b = new vi;
                    else b = vi.zpp_pool, vi.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.elt = a;
                    b.next = this.begin();
                    this.head = b;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                pop: function() {
                    this.inlined_pop()
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.head = a.next;
                    a.free();
                    a.next = vi.zpp_pool;
                    vi.zpp_pool = a;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                pop_unsafe: function() {
                    return this.inlined_pop_unsafe()
                },
                inlined_pop_unsafe: function() {
                    var a = this.front();
                    this.pop();
                    return a
                },
                erase: function(a) {
                    return this.inlined_erase(a)
                },
                inlined_erase: function(a) {
                    var b;
                    if (null == a) {
                        var c = this.begin();
                        this.head = b = c.next;
                        this.empty() && (this.pushmod = !0)
                    } else c = a.next, b = c.next, a.next = b, null == b && (this.pushmod = !0);
                    a = c;
                    a.free();
                    a.next = vi.zpp_pool;
                    vi.zpp_pool = a;
                    this.modified = !0;
                    this.length--;
                    this.pushmod = !0;
                    return b
                },
                empty: function() {
                    return null == this.begin()
                },
                front: function() {
                    return this.begin().elem()
                },
                __class__: Gv
            };
            var Ol = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_PartitionVertex"] = Ol;
            Ol.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_PartitionVertex"];
            Ol.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                setbegin: function(a) {
                    this.head = a;
                    this.pushmod = this.modified = !0
                },
                add: function(a) {
                    return this.inlined_add(a)
                },
                inlined_add: function(a) {
                    if (null == tg.zpp_pool) var b = new tg;
                    else b = tg.zpp_pool, tg.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.elt = a;
                    b.next = this.begin();
                    this.head = b;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                insert: function(a, b) {
                    return this.inlined_insert(a, b)
                },
                inlined_insert: function(a, b) {
                    if (null == tg.zpp_pool) var c = new tg;
                    else c = tg.zpp_pool, tg.zpp_pool = c.next, c.next = null;
                    c.alloc();
                    c.elt = b;
                    b = c;
                    null == a ? (b.next = this.begin(), this.head = b) : (b.next = a.next, a.next = b);
                    this.pushmod = this.modified = !0;
                    this.length++;
                    return b
                },
                pop: function() {
                    this.inlined_pop()
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.head = a.next;
                    a.free();
                    a.next = tg.zpp_pool;
                    tg.zpp_pool = a;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                pop_unsafe: function() {
                    return this.inlined_pop_unsafe()
                },
                inlined_pop_unsafe: function() {
                    var a = this.front();
                    this.pop();
                    return a
                },
                remove: function(a) {
                    this.inlined_try_remove(a)
                },
                inlined_try_remove: function(a) {
                    for (var b = null, c = this.begin(), d = !1; null != c;) {
                        if (c.elem() == a) {
                            this.inlined_erase(b);
                            d = !0;
                            break
                        }
                        b = c;
                        c = c.next
                    }
                    return d
                },
                erase: function(a) {
                    return this.inlined_erase(a)
                },
                inlined_erase: function(a) {
                    var b;
                    if (null == a) {
                        var c = this.begin();
                        this.head = b = c.next;
                        this.empty() &&
                            (this.pushmod = !0)
                    } else c = a.next, b = c.next, a.next = b, null == b && (this.pushmod = !0);
                    a = c;
                    a.free();
                    a.next = tg.zpp_pool;
                    tg.zpp_pool = a;
                    this.modified = !0;
                    this.length--;
                    this.pushmod = !0;
                    return b
                },
                reverse: function() {
                    for (var a = this.begin(), b = null; null != a;) {
                        var c = a.next;
                        a.next = b;
                        b = this.head = a;
                        a = c
                    }
                    this.pushmod = this.modified = !0
                },
                empty: function() {
                    return null == this.begin()
                },
                front: function() {
                    return this.begin().elem()
                },
                __class__: Ol
            };
            var as = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_PartitionedPoly"] =
                as;
            as.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_PartitionedPoly"];
            as.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                add: function(a) {
                    return this.inlined_add(a)
                },
                inlined_add: function(a) {
                    if (null == wi.zpp_pool) var b = new wi;
                    else b = wi.zpp_pool, wi.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.elt = a;
                    b.next = this.begin();
                    this.head = b;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                pop: function() {
                    this.inlined_pop()
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.head = a.next;
                    a.free();
                    a.next = wi.zpp_pool;
                    wi.zpp_pool = a;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                pop_unsafe: function() {
                    return this.inlined_pop_unsafe()
                },
                inlined_pop_unsafe: function() {
                    var a = this.front();
                    this.pop();
                    return a
                },
                erase: function(a) {
                    return this.inlined_erase(a)
                },
                inlined_erase: function(a) {
                    var b;
                    if (null == a) {
                        var c = this.begin();
                        this.head = b = c.next;
                        this.empty() && (this.pushmod = !0)
                    } else c = a.next, b = c.next, a.next = b, null == b && (this.pushmod = !0);
                    a = c;
                    a.free();
                    a.next = wi.zpp_pool;
                    wi.zpp_pool = a;
                    this.modified = !0;
                    this.length--;
                    this.pushmod = !0;
                    return b
                },
                empty: function() {
                    return null == this.begin()
                },
                front: function() {
                    return this.begin().elem()
                },
                __class__: as
            };
            var bs = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_GeomVert"] = bs;
            bs.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_GeomVert"];
            bs.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                add: function(a) {
                    return this.inlined_add(a)
                },
                inlined_add: function(a) {
                    if (null == Nj.zpp_pool) var b =
                        new Nj;
                    else b = Nj.zpp_pool, Nj.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.elt = a;
                    b.next = this.begin();
                    this.head = b;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                pop: function() {
                    this.inlined_pop()
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.head = a.next;
                    a.free();
                    a.next = Nj.zpp_pool;
                    Nj.zpp_pool = a;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                pop_unsafe: function() {
                    return this.inlined_pop_unsafe()
                },
                inlined_pop_unsafe: function() {
                    var a = this.front();
                    this.pop();
                    return a
                },
                empty: function() {
                    return null ==
                        this.begin()
                },
                front: function() {
                    return this.begin().elem()
                },
                __class__: bs
            };
            var yv = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_SimpleVert"] = yv;
            yv.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_SimpleVert"];
            yv.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                add: function(a) {
                    return this.inlined_add(a)
                },
                inlined_add: function(a) {
                    if (null == Oj.zpp_pool) var b = new Oj;
                    else b = Oj.zpp_pool, Oj.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.elt = a;
                    b.next = this.begin();
                    this.head = b;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                pop: function() {
                    this.inlined_pop()
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.head = a.next;
                    a.free();
                    a.next = Oj.zpp_pool;
                    Oj.zpp_pool = a;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                pop_unsafe: function() {
                    return this.inlined_pop_unsafe()
                },
                inlined_pop_unsafe: function() {
                    var a = this.front();
                    this.pop();
                    return a
                },
                empty: function() {
                    return null == this.begin()
                },
                front: function() {
                    return this.begin().elem()
                },
                __class__: yv
            };
            var zv = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_SimpleEvent"] = zv;
            zv.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_SimpleEvent"];
            zv.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                setbegin: function(a) {
                    this.head = a;
                    this.pushmod = this.modified = !0
                },
                add: function(a) {
                    return this.inlined_add(a)
                },
                inlined_add: function(a) {
                    if (null == Pj.zpp_pool) var b = new Pj;
                    else b = Pj.zpp_pool, Pj.zpp_pool = b.next, b.next =
                        null;
                    b.alloc();
                    b.elt = a;
                    b.next = this.begin();
                    this.head = b;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                pop: function() {
                    this.inlined_pop()
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.head = a.next;
                    a.free();
                    a.next = Pj.zpp_pool;
                    Pj.zpp_pool = a;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                pop_unsafe: function() {
                    return this.inlined_pop_unsafe()
                },
                inlined_pop_unsafe: function() {
                    var a = this.front();
                    this.pop();
                    return a
                },
                empty: function() {
                    return null == this.begin()
                },
                front: function() {
                    return this.begin().elem()
                },
                __class__: zv
            };
            var vv = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_InteractionGroup"] = vv;
            vv.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_InteractionGroup"];
            vv.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                add: function(a) {
                    return this.inlined_add(a)
                },
                inlined_add: function(a) {
                    if (null == Qj.zpp_pool) var b = new Qj;
                    else b = Qj.zpp_pool, Qj.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.elt = a;
                    b.next = this.begin();
                    this.head =
                        b;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                remove: function(a) {
                    this.inlined_try_remove(a)
                },
                inlined_try_remove: function(a) {
                    for (var b = null, c = this.begin(), d = !1; null != c;) {
                        if (c.elem() == a) {
                            this.inlined_erase(b);
                            d = !0;
                            break
                        }
                        b = c;
                        c = c.next
                    }
                    return d
                },
                inlined_erase: function(a) {
                    var b;
                    if (null == a) {
                        var c = this.begin();
                        this.head = b = c.next;
                        this.empty() && (this.pushmod = !0)
                    } else c = a.next, b = c.next, a.next = b, null == b && (this.pushmod = !0);
                    a = c;
                    a.free();
                    a.next = Qj.zpp_pool;
                    Qj.zpp_pool = a;
                    this.modified = !0;
                    this.length--;
                    this.pushmod = !0;
                    return b
                },
                empty: function() {
                    return null == this.begin()
                },
                iterator_at: function(a) {
                    for (var b = this.begin(); 0 < a-- && null != b;) b = b.next;
                    return b
                },
                __class__: vv
            };
            var sv = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_CbSetPair"] = sv;
            sv.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_CbSetPair"];
            sv.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                add: function(a) {
                    return this.inlined_add(a)
                },
                inlined_add: function(a) {
                    if (null ==
                        xi.zpp_pool) var b = new xi;
                    else b = xi.zpp_pool, xi.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.elt = a;
                    b.next = this.begin();
                    this.head = b;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                pop: function() {
                    this.inlined_pop()
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.head = a.next;
                    a.free();
                    a.next = xi.zpp_pool;
                    xi.zpp_pool = a;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                pop_unsafe: function() {
                    return this.inlined_pop_unsafe()
                },
                inlined_pop_unsafe: function() {
                    var a = this.front();
                    this.pop();
                    return a
                },
                remove: function(a) {
                    this.inlined_try_remove(a)
                },
                inlined_try_remove: function(a) {
                    for (var b = null, c = this.begin(), d = !1; null != c;) {
                        if (c.elem() == a) {
                            this.inlined_erase(b);
                            d = !0;
                            break
                        }
                        b = c;
                        c = c.next
                    }
                    return d
                },
                inlined_erase: function(a) {
                    var b;
                    if (null == a) {
                        var c = this.begin();
                        this.head = b = c.next;
                        this.empty() && (this.pushmod = !0)
                    } else c = a.next, b = c.next, a.next = b, null == b && (this.pushmod = !0);
                    a = c;
                    a.free();
                    a.next = xi.zpp_pool;
                    xi.zpp_pool = a;
                    this.modified = !0;
                    this.length--;
                    this.pushmod = !0;
                    return b
                },
                empty: function() {
                    return null == this.begin()
                },
                front: function() {
                    return this.begin().elem()
                },
                __class__: sv
            };
            var Ew = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ConvexResult"] = Ew;
            Ew.__name__ = ["zpp_nape", "util", "ZNPList_ConvexResult"];
            Ew.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                iterator_at: function(a) {
                    for (var b = this.begin(); 0 < a-- && null != b;) b = b.next;
                    return b
                },
                __class__: Ew
            };
            var Jv = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_ZPP_GeomPoly"] =
                Jv;
            Jv.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_GeomPoly"];
            Jv.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                add: function(a) {
                    return this.inlined_add(a)
                },
                inlined_add: function(a) {
                    if (null == Tf.zpp_pool) var b = new Tf;
                    else b = Tf.zpp_pool, Tf.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.elt = a;
                    b.next = this.begin();
                    this.head = b;
                    this.modified = !0;
                    this.length++;
                    return a
                },
                insert: function(a, b) {
                    return this.inlined_insert(a, b)
                },
                inlined_insert: function(a, b) {
                    if (null == Tf.zpp_pool) var c =
                        new Tf;
                    else c = Tf.zpp_pool, Tf.zpp_pool = c.next, c.next = null;
                    c.alloc();
                    c.elt = b;
                    b = c;
                    null == a ? (b.next = this.begin(), this.head = b) : (b.next = a.next, a.next = b);
                    this.pushmod = this.modified = !0;
                    this.length++;
                    return b
                },
                pop: function() {
                    this.inlined_pop()
                },
                inlined_pop: function() {
                    var a = this.begin();
                    this.head = a.next;
                    a.free();
                    a.next = Tf.zpp_pool;
                    Tf.zpp_pool = a;
                    this.empty() && (this.pushmod = !0);
                    this.modified = !0;
                    this.length--
                },
                erase: function(a) {
                    return this.inlined_erase(a)
                },
                inlined_erase: function(a) {
                    var b;
                    if (null == a) {
                        var c = this.begin();
                        this.head = b = c.next;
                        this.empty() && (this.pushmod = !0)
                    } else c = a.next, b = c.next, a.next = b, null == b && (this.pushmod = !0);
                    a = c;
                    a.free();
                    a.next = Tf.zpp_pool;
                    Tf.zpp_pool = a;
                    this.modified = !0;
                    this.length--;
                    this.pushmod = !0;
                    return b
                },
                empty: function() {
                    return null == this.begin()
                },
                front: function() {
                    return this.begin().elem()
                },
                iterator_at: function(a) {
                    for (var b = this.begin(); 0 < a-- && null != b;) b = b.next;
                    return b
                },
                __class__: Jv
            };
            var Fw = function() {
                this.length = 0;
                this.modified = this.pushmod = !1;
                this.head = null
            };
            g["zpp_nape.util.ZNPList_RayResult"] =
                Fw;
            Fw.__name__ = ["zpp_nape", "util", "ZNPList_RayResult"];
            Fw.prototype = {
                head: null,
                begin: function() {
                    return this.head
                },
                modified: null,
                pushmod: null,
                length: null,
                iterator_at: function(a) {
                    for (var b = this.begin(); 0 < a-- && null != b;) b = b.next;
                    return b
                },
                __class__: Fw
            };
            var pi = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ZPP_Compound"] = pi;
            pi.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_Compound"];
            pi.prototype = {
                next: null,
                alloc: function() {},
                free: function() {
                    this.elt = null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: pi
            };
            var Kj = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ZPP_AABBNode"] = Kj;
            Kj.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_AABBNode"];
            Kj.prototype = {
                next: null,
                alloc: function() {},
                free: function() {
                    this.elt = null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: Kj
            };
            var Sf = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ZPP_Edge"] = Sf;
            Sf.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_Edge"];
            Sf.prototype = {
                next: null,
                alloc: function() {},
                free: function() {
                    this.elt = null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: Sf
            };
            var qi = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ZPP_AABBPair"] = qi;
            qi.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_AABBPair"];
            qi.prototype = {
                next: null,
                alloc: function() {},
                free: function() {
                    this.elt = null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: qi
            };
            var $g = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ZPP_Shape"] = $g;
            $g.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_Shape"];
            $g.prototype = {
                next: null,
                alloc: function() {},
                free: function() {
                    this.elt =
                        null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: $g
            };
            var ri = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ZPP_Arbiter"] = ri;
            ri.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_Arbiter"];
            ri.prototype = {
                next: null,
                alloc: function() {},
                free: function() {
                    this.elt = null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: ri
            };
            var cg = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ZPP_Constraint"] = cg;
            cg.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_Constraint"];
            cg.prototype = {
                next: null,
                alloc: function() {},
                free: function() {
                    this.elt = null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: cg
            };
            var Gf = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ZPP_Body"] = Gf;
            Gf.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_Body"];
            Gf.prototype = {
                next: null,
                alloc: function() {},
                free: function() {
                    this.elt = null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: Gf
            };
            var Lj = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ZPP_CallbackSet"] = Lj;
            Lj.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_CallbackSet"];
            Lj.prototype = {
                next: null,
                alloc: function() {},
                free: function() {
                    this.elt = null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: Lj
            };
            var dg = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ZPP_CbType"] = dg;
            dg.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_CbType"];
            dg.prototype = {
                next: null,
                alloc: function() {},
                free: function() {
                    this.elt = null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: dg
            };
            var Mj = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ZPP_Component"] = Mj;
            Mj.__name__ = ["zpp_nape", "util",
                "ZNPNode_ZPP_Component"
            ];
            Mj.prototype = {
                next: null,
                alloc: function() {},
                free: function() {
                    this.elt = null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: Mj
            };
            var fg = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ZPP_Vec2"] = fg;
            fg.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_Vec2"];
            fg.prototype = {
                next: null,
                alloc: function() {},
                free: function() {
                    this.elt = null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: fg
            };
            var si = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ZPP_FluidArbiter"] =
                si;
            si.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_FluidArbiter"];
            si.prototype = {
                next: null,
                alloc: function() {},
                free: function() {
                    this.elt = null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: si
            };
            var ti = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ZPP_SensorArbiter"] = ti;
            ti.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_SensorArbiter"];
            ti.prototype = {
                next: null,
                alloc: function() {},
                free: function() {
                    this.elt = null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: ti
            };
            var Ql = function() {
                this.next =
                    this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ZPP_Listener"] = Ql;
            Ql.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_Listener"];
            Ql.prototype = {
                next: null,
                free: function() {
                    this.elt = null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: Ql
            };
            var ui = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ZPP_ColArbiter"] = ui;
            ui.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_ColArbiter"];
            ui.prototype = {
                next: null,
                alloc: function() {},
                free: function() {
                    this.elt = null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: ui
            };
            var vi =
                function() {
                    this.next = this.elt = null
                };
            g["zpp_nape.util.ZNPNode_ZPP_ToiEvent"] = vi;
            vi.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_ToiEvent"];
            vi.prototype = {
                next: null,
                alloc: function() {},
                free: function() {
                    this.elt = null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: vi
            };
            var ni = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ZPP_Interactor"] = ni;
            ni.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_Interactor"];
            ni.prototype = {
                next: null,
                alloc: function() {},
                free: function() {
                    this.elt = null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: ni
            };
            var Qf = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ZPP_InteractionListener"] = Qf;
            Qf.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_InteractionListener"];
            Qf.prototype = {
                next: null,
                alloc: function() {},
                free: function() {
                    this.elt = null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: Qf
            };
            var tg = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ZPP_PartitionVertex"] = tg;
            tg.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_PartitionVertex"];
            tg.prototype = {
                next: null,
                alloc: function() {},
                free: function() {
                    this.elt = null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: tg
            };
            var wi = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ZPP_PartitionedPoly"] = wi;
            wi.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_PartitionedPoly"];
            wi.prototype = {
                next: null,
                alloc: function() {},
                free: function() {
                    this.elt = null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: wi
            };
            var Nj = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ZPP_GeomVert"] = Nj;
            Nj.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_GeomVert"];
            Nj.prototype = {
                next: null,
                alloc: function() {},
                free: function() {
                    this.elt = null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: Nj
            };
            var Oj = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ZPP_SimpleVert"] = Oj;
            Oj.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_SimpleVert"];
            Oj.prototype = {
                next: null,
                alloc: function() {},
                free: function() {
                    this.elt = null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: Oj
            };
            var Pj = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ZPP_SimpleEvent"] = Pj;
            Pj.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_SimpleEvent"];
            Pj.prototype = {
                next: null,
                alloc: function() {},
                free: function() {
                    this.elt = null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: Pj
            };
            var Qj = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ZPP_InteractionGroup"] = Qj;
            Qj.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_InteractionGroup"];
            Qj.prototype = {
                next: null,
                alloc: function() {},
                free: function() {
                    this.elt = null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: Qj
            };
            var oi = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ZPP_CbSet"] = oi;
            oi.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_CbSet"];
            oi.prototype = {
                next: null,
                alloc: function() {},
                free: function() {
                    this.elt = null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: oi
            };
            var li = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ZPP_BodyListener"] = li;
            li.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_BodyListener"];
            li.prototype = {
                next: null,
                alloc: function() {},
                free: function() {
                    this.elt = null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: li
            };
            var mi = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ZPP_ConstraintListener"] = mi;
            mi.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_ConstraintListener"];
            mi.prototype = {
                next: null,
                alloc: function() {},
                free: function() {
                    this.elt = null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: mi
            };
            var xi = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ZPP_CbSetPair"] = xi;
            xi.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_CbSetPair"];
            xi.prototype = {
                next: null,
                alloc: function() {},
                free: function() {
                    this.elt =
                        null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: xi
            };
            var Gw = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ConvexResult"] = Gw;
            Gw.__name__ = ["zpp_nape", "util", "ZNPNode_ConvexResult"];
            Gw.prototype = {
                next: null,
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: Gw
            };
            var Tf = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_ZPP_GeomPoly"] = Tf;
            Tf.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_GeomPoly"];
            Tf.prototype = {
                next: null,
                alloc: function() {},
                free: function() {
                    this.elt = null
                },
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: Tf
            };
            var Hw = function() {
                this.next = this.elt = null
            };
            g["zpp_nape.util.ZNPNode_RayResult"] = Hw;
            Hw.__name__ = ["zpp_nape", "util", "ZNPNode_RayResult"];
            Hw.prototype = {
                next: null,
                elt: null,
                elem: function() {
                    return this.elt
                },
                __class__: Hw
            };
            var Pl = function() {
                this.at_index = 0;
                this.at_ite = null;
                this.zip_length = !1;
                this._length = 0;
                this.inner = null;
                Gg.call(this);
                this.at_ite = null;
                this.at_index = 0;
                this.zip_length = !0;
                this._length = 0
            };
            g["zpp_nape.util.ZPP_MixVec2List"] = Pl;
            Pl.__name__ = ["zpp_nape",
                "util", "ZPP_MixVec2List"
            ];
            Pl.get = function(a, b) {
                null == b && (b = !1);
                var c = new Pl;
                c.inner = a;
                c.zpp_inner.immutable = b;
                return c
            };
            Pl.__super__ = Gg;
            Pl.prototype = p(Gg.prototype, {
                inner: null,
                _length: null,
                zip_length: null,
                at_ite: null,
                at_index: null,
                zpp_gl: function() {
                    this.zpp_vm();
                    if (this.zip_length) {
                        this._length = 0;
                        for (var a = this.inner.begin(); null != a;) a.elem(), this._length++, a = a.next;
                        this.zip_length = !1
                    }
                    return this._length
                },
                zpp_vm: function() {
                    this.zpp_inner.validate();
                    this.inner.modified && (this.zip_length = !0, this._length =
                        0, this.at_ite = null)
                },
                at: function(a) {
                    this.zpp_vm();
                    this.zpp_inner.reverse_flag && (a = this.get_length() - 1 - a);
                    if (a < this.at_index || null == this.at_ite)
                        for (this.at_index = 0, this.at_ite = this.inner.begin();;) {
                            this.at_ite.elem();
                            break
                        }
                    for (; this.at_index != a;)
                        for (this.at_index++, this.at_ite = this.at_ite.next;;) {
                            this.at_ite.elem();
                            break
                        }
                    return this.at_ite.elem().wrapper()
                },
                push: function(a) {
                    this.zpp_inner.modify_test();
                    this.zpp_vm();
                    var b = null != this.zpp_inner.adder ? this.zpp_inner.adder(a) : !0;
                    if (b) {
                        if (this.zpp_inner.reverse_flag) this.inner.add(a.zpp_inner);
                        else {
                            var c = this.inner.iterator_at(this.get_length() - 1);
                            this.inner.insert(c, a.zpp_inner)
                        }
                        this.zpp_inner.invalidate();
                        null != this.zpp_inner.post_adder && this.zpp_inner.post_adder(a)
                    }
                    return b
                },
                __class__: Pl
            });
            var Do = function() {
                this.user_length = 0;
                this.zip_length = !1;
                this.at_ite = this.push_ite = null;
                this.at_index = 0;
                this.reverse_flag = !1;
                this._validate = null;
                this._invalidated = !1;
                this.inner = null
            };
            g["zpp_nape.util.ZPP_EdgeList"] = Do;
            Do.__name__ = ["zpp_nape", "util", "ZPP_EdgeList"];
            Do.prototype = {
                inner: null,
                _invalidated: null,
                _validate: null,
                reverse_flag: null,
                valmod: function() {
                    this.validate();
                    this.inner.modified && (this.inner.pushmod && (this.push_ite = null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1, this.zip_length = !0)
                },
                validate: function() {
                    this._invalidated && (this._invalidated = !1, null != this._validate && this._validate())
                },
                at_index: null,
                at_ite: null,
                push_ite: null,
                zip_length: null,
                user_length: null,
                __class__: Do
            };
            var Aj = function() {
                this.user_length = 0;
                this.zip_length = !1;
                this.at_ite = this.push_ite = null;
                this.at_index =
                    0;
                this.dontremove = this.reverse_flag = !1;
                this._invalidate = this._validate = this.adder = this.post_adder = this.subber = null;
                this.immutable = this._invalidated = !1;
                this.outer = this.inner = null;
                this.inner = new rl;
                this._invalidated = !0
            };
            g["zpp_nape.util.ZPP_ShapeList"] = Aj;
            Aj.__name__ = ["zpp_nape", "util", "ZPP_ShapeList"];
            Aj.get = function(a, b) {
                null == b && (b = !1);
                var c = new Eo;
                c.zpp_inner.inner = a;
                b && (c.zpp_inner.immutable = !0);
                c.zpp_inner.zip_length = !0;
                return c
            };
            Aj.prototype = {
                outer: null,
                inner: null,
                immutable: null,
                _invalidated: null,
                _invalidate: null,
                _validate: null,
                adder: null,
                post_adder: null,
                subber: null,
                dontremove: null,
                reverse_flag: null,
                valmod: function() {
                    this.validate();
                    this.inner.modified && (this.inner.pushmod && (this.push_ite = null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1, this.zip_length = !0)
                },
                modify_test: function() {},
                validate: function() {
                    this._invalidated && (this._invalidated = !1, null != this._validate && this._validate())
                },
                invalidate: function() {
                    this._invalidated = !0;
                    null != this._invalidate && this._invalidate(this)
                },
                at_index: null,
                at_ite: null,
                push_ite: null,
                zip_length: null,
                user_length: null,
                __class__: Aj
            };
            var Vi = function() {
                this.user_length = 0;
                this.zip_length = !1;
                this.at_ite = this.push_ite = null;
                this.at_index = 0;
                this.dontremove = this.reverse_flag = !1;
                this._invalidate = this._validate = this.adder = this.post_adder = this.subber = null;
                this.immutable = this._invalidated = !1;
                this.outer = this.inner = null;
                this.inner = new zk;
                this._invalidated = !0
            };
            g["zpp_nape.util.ZPP_BodyList"] = Vi;
            Vi.__name__ = ["zpp_nape", "util", "ZPP_BodyList"];
            Vi.get = function(a,
                b) {
                null == b && (b = !1);
                var c = new Tu;
                c.zpp_inner.inner = a;
                b && (c.zpp_inner.immutable = !0);
                c.zpp_inner.zip_length = !0;
                return c
            };
            Vi.prototype = {
                outer: null,
                inner: null,
                immutable: null,
                _invalidated: null,
                _invalidate: null,
                _validate: null,
                adder: null,
                post_adder: null,
                subber: null,
                dontremove: null,
                reverse_flag: null,
                valmod: function() {
                    this.validate();
                    this.inner.modified && (this.inner.pushmod && (this.push_ite = null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1, this.zip_length = !0)
                },
                modify_test: function() {},
                validate: function() {
                    this._invalidated &&
                        (this._invalidated = !1, null != this._validate && this._validate())
                },
                invalidate: function() {
                    this._invalidated = !0;
                    null != this._invalidate && this._invalidate(this)
                },
                at_index: null,
                at_ite: null,
                push_ite: null,
                zip_length: null,
                user_length: null,
                __class__: Vi
            };
            var xj = function() {
                this.user_length = 0;
                this.zip_length = !1;
                this.at_ite = this.push_ite = null;
                this.at_index = 0;
                this.dontremove = this.reverse_flag = !1;
                this._invalidate = this._validate = this.adder = this.subber = null;
                this.immutable = this._invalidated = !1;
                this.outer = this.inner = null;
                this.inner = new Ro;
                this._invalidated = !0
            };
            g["zpp_nape.util.ZPP_CompoundList"] = xj;
            xj.__name__ = ["zpp_nape", "util", "ZPP_CompoundList"];
            xj.get = function(a, b) {
                null == b && (b = !1);
                var c = new Vu;
                c.zpp_inner.inner = a;
                b && (c.zpp_inner.immutable = !0);
                c.zpp_inner.zip_length = !0;
                return c
            };
            xj.prototype = {
                outer: null,
                inner: null,
                immutable: null,
                _invalidated: null,
                _invalidate: null,
                _validate: null,
                adder: null,
                subber: null,
                dontremove: null,
                reverse_flag: null,
                valmod: function() {
                    this.validate();
                    this.inner.modified && (this.inner.pushmod && (this.push_ite =
                        null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1, this.zip_length = !0)
                },
                modify_test: function() {},
                validate: function() {
                    this._invalidated && (this._invalidated = !1, null != this._validate && this._validate())
                },
                invalidate: function() {
                    this._invalidated = !0;
                    null != this._invalidate && this._invalidate(this)
                },
                at_index: null,
                at_ite: null,
                push_ite: null,
                zip_length: null,
                user_length: null,
                __class__: xj
            };
            var Co = function() {
                this.user_length = 0;
                this.zip_length = !1;
                this.at_ite = this.push_ite = null;
                this.at_index = 0;
                this.reverse_flag = !1;
                this._validate = null;
                this._invalidated = !1;
                this.inner = null
            };
            g["zpp_nape.util.ZPP_InteractorList"] = Co;
            Co.__name__ = ["zpp_nape", "util", "ZPP_InteractorList"];
            Co.prototype = {
                inner: null,
                _invalidated: null,
                _validate: null,
                reverse_flag: null,
                valmod: function() {
                    this.validate();
                    this.inner.modified && (this.inner.pushmod && (this.push_ite = null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1, this.zip_length = !0)
                },
                validate: function() {
                    this._invalidated && (this._invalidated = !1, null != this._validate && this._validate())
                },
                at_index: null,
                at_ite: null,
                push_ite: null,
                zip_length: null,
                user_length: null,
                __class__: Co
            };
            var yo = function() {
                this.user_length = 0;
                this.zip_length = !1;
                this.at_ite = this.push_ite = null;
                this.at_index = 0;
                this.reverse_flag = !1;
                this._validate = null;
                this._invalidated = !1;
                this.inner = null
            };
            g["zpp_nape.util.ZPP_ConvexResultList"] = yo;
            yo.__name__ = ["zpp_nape", "util", "ZPP_ConvexResultList"];
            yo.prototype = {
                inner: null,
                _invalidated: null,
                _validate: null,
                reverse_flag: null,
                valmod: function() {
                    this.validate();
                    this.inner.modified && (this.inner.pushmod &&
                        (this.push_ite = null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1, this.zip_length = !0)
                },
                validate: function() {
                    this._invalidated && (this._invalidated = !1, null != this._validate && this._validate())
                },
                at_index: null,
                at_ite: null,
                push_ite: null,
                zip_length: null,
                user_length: null,
                __class__: yo
            };
            var xl = function() {
                this.user_length = 0;
                this.zip_length = !1;
                this.at_ite = this.push_ite = null;
                this.at_index = 0;
                this.dontremove = this.reverse_flag = !1;
                this._invalidate = this._validate = this.adder = this.post_adder = this.subber =
                    null;
                this._invalidated = !1;
                this.outer = this.inner = null;
                this.inner = new Jv;
                this._invalidated = !0
            };
            g["zpp_nape.util.ZPP_GeomPolyList"] = xl;
            xl.__name__ = ["zpp_nape", "util", "ZPP_GeomPolyList"];
            xl.prototype = {
                outer: null,
                inner: null,
                _invalidated: null,
                _invalidate: null,
                _validate: null,
                adder: null,
                post_adder: null,
                subber: null,
                dontremove: null,
                reverse_flag: null,
                valmod: function() {
                    this.validate();
                    this.inner.modified && (this.inner.pushmod && (this.push_ite = null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1,
                        this.zip_length = !0)
                },
                modify_test: function() {},
                validate: function() {
                    this._invalidated && (this._invalidated = !1, null != this._validate && this._validate())
                },
                invalidate: function() {
                    this._invalidated = !0;
                    null != this._invalidate && this._invalidate(this)
                },
                at_index: null,
                at_ite: null,
                push_ite: null,
                zip_length: null,
                user_length: null,
                __class__: xl
            };
            var Bo = function() {
                this.user_length = 0;
                this.zip_length = !1;
                this.at_ite = this.push_ite = null;
                this.at_index = 0;
                this.reverse_flag = !1;
                this._validate = null;
                this._invalidated = !1;
                this.inner =
                    null
            };
            g["zpp_nape.util.ZPP_RayResultList"] = Bo;
            Bo.__name__ = ["zpp_nape", "util", "ZPP_RayResultList"];
            Bo.prototype = {
                inner: null,
                _invalidated: null,
                _validate: null,
                reverse_flag: null,
                valmod: function() {
                    this.validate();
                    this.inner.modified && (this.inner.pushmod && (this.push_ite = null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1, this.zip_length = !0)
                },
                validate: function() {
                    this._invalidated && (this._invalidated = !1, null != this._validate && this._validate())
                },
                at_index: null,
                at_ite: null,
                push_ite: null,
                zip_length: null,
                user_length: null,
                __class__: Bo
            };
            var yl = function() {
                this.user_length = 0;
                this.zip_length = !1;
                this.at_ite = this.push_ite = null;
                this.at_index = 0;
                this.reverse_flag = !1;
                this._invalidate = this._validate = this.adder = this.post_adder = this.subber = null;
                this.immutable = this._invalidated = !1;
                this.outer = this.inner = null;
                this.inner = new Po;
                this._invalidated = !0
            };
            g["zpp_nape.util.ZPP_Vec2List"] = yl;
            yl.__name__ = ["zpp_nape", "util", "ZPP_Vec2List"];
            yl.prototype = {
                outer: null,
                inner: null,
                immutable: null,
                _invalidated: null,
                _invalidate: null,
                _validate: null,
                adder: null,
                post_adder: null,
                subber: null,
                reverse_flag: null,
                valmod: function() {
                    this.validate();
                    this.inner.modified && (this.inner.pushmod && (this.push_ite = null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1, this.zip_length = !0)
                },
                modify_test: function() {},
                validate: function() {
                    this._invalidated && (this._invalidated = !1, null != this._validate && this._validate())
                },
                invalidate: function() {
                    this._invalidated = !0;
                    null != this._invalidate && this._invalidate(this)
                },
                at_index: null,
                at_ite: null,
                push_ite: null,
                zip_length: null,
                user_length: null,
                __class__: yl
            };
            var Ui = function() {
                this.user_length = 0;
                this.zip_length = !1;
                this.at_ite = this.push_ite = null;
                this.at_index = 0;
                this.reverse_flag = !1;
                this._validate = null;
                this.immutable = this._invalidated = !1;
                this.outer = this.inner = null;
                this.inner = new Qo;
                this._invalidated = !0
            };
            g["zpp_nape.util.ZPP_ArbiterList"] = Ui;
            Ui.__name__ = ["zpp_nape", "util", "ZPP_ArbiterList"];
            Ui.get = function(a, b) {
                null == b && (b = !1);
                var c = new Mu;
                c.zpp_inner.inner = a;
                b && (c.zpp_inner.immutable = !0);
                c.zpp_inner.zip_length = !0;
                return c
            };
            Ui.prototype = {
                outer: null,
                inner: null,
                immutable: null,
                _invalidated: null,
                _validate: null,
                reverse_flag: null,
                valmod: function() {
                    this.validate();
                    this.inner.modified && (this.inner.pushmod && (this.push_ite = null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1, this.zip_length = !0)
                },
                validate: function() {
                    this._invalidated && (this._invalidated = !1, null != this._validate && this._validate())
                },
                at_index: null,
                at_ite: null,
                push_ite: null,
                zip_length: null,
                user_length: null,
                __class__: Ui
            };
            var wo = function() {
                this.user_length =
                    0;
                this.zip_length = !1;
                this.at_ite = this.push_ite = null;
                this.at_index = 0;
                this.reverse_flag = !1;
                this._validate = null;
                this._invalidated = !1;
                this.inner = null
            };
            g["zpp_nape.util.ZPP_ContactList"] = wo;
            wo.__name__ = ["zpp_nape", "util", "ZPP_ContactList"];
            wo.prototype = {
                inner: null,
                _invalidated: null,
                _validate: null,
                reverse_flag: null,
                valmod: function() {
                    this.validate();
                    this.inner.modified && (this.inner.pushmod && (this.push_ite = null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1, this.zip_length = !0)
                },
                validate: function() {
                    this._invalidated &&
                        (this._invalidated = !1, null != this._validate && this._validate())
                },
                at_index: null,
                at_ite: null,
                push_ite: null,
                zip_length: null,
                user_length: null,
                __class__: wo
            };
            var xo = function() {
                this.user_length = 0;
                this.zip_length = !1;
                this.at_ite = this.push_ite = null;
                this.at_index = 0;
                this.reverse_flag = !1;
                this._validate = null;
                this._invalidated = !1;
                this.inner = null
            };
            g["zpp_nape.util.ZPP_InteractionGroupList"] = xo;
            xo.__name__ = ["zpp_nape", "util", "ZPP_InteractionGroupList"];
            xo.prototype = {
                inner: null,
                _invalidated: null,
                _validate: null,
                reverse_flag: null,
                valmod: function() {
                    this.validate();
                    this.inner.modified && (this.inner.pushmod && (this.push_ite = null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1, this.zip_length = !0)
                },
                validate: function() {
                    this._invalidated && (this._invalidated = !1, null != this._validate && this._validate())
                },
                at_index: null,
                at_ite: null,
                push_ite: null,
                zip_length: null,
                user_length: null,
                __class__: xo
            };
            var Ti = function() {
                this.user_length = 0;
                this.zip_length = !1;
                this.at_ite = this.push_ite = null;
                this.at_index = 0;
                this.dontremove = this.reverse_flag = !1;
                this._invalidate = this._validate = this.adder = this.post_adder = this.subber = null;
                this.immutable = this._invalidated = !1;
                this.outer = this.inner = null;
                this.inner = new Gj;
                this._invalidated = !0
            };
            g["zpp_nape.util.ZPP_ConstraintList"] = Ti;
            Ti.__name__ = ["zpp_nape", "util", "ZPP_ConstraintList"];
            Ti.get = function(a, b) {
                null == b && (b = !1);
                var c = new Lu;
                c.zpp_inner.inner = a;
                b && (c.zpp_inner.immutable = !0);
                c.zpp_inner.zip_length = !0;
                return c
            };
            Ti.prototype = {
                outer: null,
                inner: null,
                immutable: null,
                _invalidated: null,
                _invalidate: null,
                _validate: null,
                adder: null,
                post_adder: null,
                subber: null,
                dontremove: null,
                reverse_flag: null,
                valmod: function() {
                    this.validate();
                    this.inner.modified && (this.inner.pushmod && (this.push_ite = null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1, this.zip_length = !0)
                },
                modify_test: function() {},
                validate: function() {
                    this._invalidated && (this._invalidated = !1, null != this._validate && this._validate())
                },
                invalidate: function() {
                    this._invalidated = !0;
                    null != this._invalidate && this._invalidate(this)
                },
                at_index: null,
                at_ite: null,
                push_ite: null,
                zip_length: null,
                user_length: null,
                __class__: Ti
            };
            var Si = function() {
                this.user_length = 0;
                this.zip_length = !1;
                this.at_ite = this.push_ite = null;
                this.at_index = 0;
                this.reverse_flag = !1;
                this._invalidate = this._validate = this.adder = this.post_adder = null;
                this.immutable = this._invalidated = !1;
                this.outer = this.inner = null;
                this.inner = new Zi;
                this._invalidated = !0
            };
            g["zpp_nape.util.ZPP_CbTypeList"] = Si;
            Si.__name__ = ["zpp_nape", "util", "ZPP_CbTypeList"];
            Si.get = function(a, b) {
                null == b && (b = !1);
                var c = new vo;
                c.zpp_inner.inner = a;
                b && (c.zpp_inner.immutable = !0);
                c.zpp_inner.zip_length = !0;
                return c
            };
            Si.prototype = {
                outer: null,
                inner: null,
                immutable: null,
                _invalidated: null,
                _invalidate: null,
                _validate: null,
                adder: null,
                post_adder: null,
                reverse_flag: null,
                valmod: function() {
                    this.validate();
                    this.inner.modified && (this.inner.pushmod && (this.push_ite = null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1, this.zip_length = !0)
                },
                modify_test: function() {},
                validate: function() {
                    this._invalidated && (this._invalidated = !1, null != this._validate && this._validate())
                },
                invalidate: function() {
                    this._invalidated = !0;
                    null != this._invalidate && this._invalidate(this)
                },
                at_index: null,
                at_ite: null,
                push_ite: null,
                zip_length: null,
                user_length: null,
                __class__: Si
            };
            var tj = function() {
                this.user_length = 0;
                this.zip_length = !1;
                this.at_ite = this.push_ite = null;
                this.at_index = 0;
                this.dontremove = this.reverse_flag = !1;
                this._invalidate = this._validate = this.adder = this.subber = null;
                this.immutable = this._invalidated = !1;
                this.outer = this.inner = null;
                this.inner = new fs;
                this._invalidated = !0
            };
            g["zpp_nape.util.ZPP_ListenerList"] = tj;
            tj.__name__ = ["zpp_nape",
                "util", "ZPP_ListenerList"
            ];
            tj.get = function(a, b) {
                null == b && (b = !1);
                var c = new Ju;
                c.zpp_inner.inner = a;
                b && (c.zpp_inner.immutable = !0);
                c.zpp_inner.zip_length = !0;
                return c
            };
            tj.prototype = {
                outer: null,
                inner: null,
                immutable: null,
                _invalidated: null,
                _invalidate: null,
                _validate: null,
                adder: null,
                subber: null,
                dontremove: null,
                reverse_flag: null,
                valmod: function() {
                    this.validate();
                    this.inner.modified && (this.inner.pushmod && (this.push_ite = null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1, this.zip_length = !0)
                },
                modify_test: function() {},
                validate: function() {
                    this._invalidated && (this._invalidated = !1, null != this._validate && this._validate())
                },
                invalidate: function() {
                    this._invalidated = !0;
                    null != this._invalidate && this._invalidate(this)
                },
                at_index: null,
                at_ite: null,
                push_ite: null,
                zip_length: null,
                user_length: null,
                __class__: tj
            };
            var Xd = function() {};
            g["zpp_nape.util.ZPP_Math"] = Xd;
            Xd.__name__ = ["zpp_nape", "util", "ZPP_Math"];
            Xd.sqrt = function(a) {
                return Math.sqrt(a)
            };
            Xd.invsqrt = function(a) {
                return 1 / Xd.sqrt(a)
            };
            Xd.sqr = function(a) {
                return a *
                    a
            };
            var Zh = function() {};
            g["zpp_nape.util.ZPP_PubPool"] = Zh;
            Zh.__name__ = ["zpp_nape", "util", "ZPP_PubPool"];
            var Zg = function() {
                this.colour = 0;
                this.lt = this.swapped = this.data = this.prev = this.next = this.parent = null
            };
            g["zpp_nape.util.ZPP_Set_ZPP_CbSet"] = Zg;
            Zg.__name__ = ["zpp_nape", "util", "ZPP_Set_ZPP_CbSet"];
            Zg.prototype = {
                free: function() {
                    this.swapped = this.lt = this.data = null
                },
                alloc: function() {},
                lt: null,
                swapped: null,
                data: null,
                prev: null,
                next: null,
                parent: null,
                colour: null,
                empty: function() {
                    return null == this.parent
                },
                find: function(a) {
                    for (var b =
                            this.parent; null != b && b.data != a;) b = this.lt(a, b.data) ? b.prev : b.next;
                    return b
                },
                find_weak: function(a) {
                    for (var b = this.parent; null != b;)
                        if (this.lt(a, b.data)) b = b.prev;
                        else if (this.lt(b.data, a)) b = b.next;
                    else break;
                    return b
                },
                remove: function(a) {
                    a = this.find(a);
                    this.remove_node(a)
                },
                remove_node: function(a) {
                    if (null != a.next && null != a.prev) {
                        for (var b = a.next; null != b.prev;) b = b.prev;
                        var c = a.data;
                        a.data = b.data;
                        b.data = c;
                        null != this.swapped && this.swapped(a.data, b.data);
                        a = b
                    }
                    b = null == a.prev ? a.next : a.prev;
                    if (1 == a.colour)
                        if (null !=
                            a.prev || null != a.next) b.colour = 1;
                        else if (null != a.parent)
                        for (c = a.parent;;) {
                            c.colour++;
                            c.prev.colour--;
                            c.next.colour--;
                            var d = c.prev;
                            if (-1 == d.colour) {
                                this.__fix_neg_red(d);
                                break
                            } else if (0 == d.colour) {
                                if (null != d.prev && 0 == d.prev.colour) {
                                    this.__fix_dbl_red(d.prev);
                                    break
                                }
                                if (null != d.next && 0 == d.next.colour) {
                                    this.__fix_dbl_red(d.next);
                                    break
                                }
                            }
                            d = c.next;
                            if (-1 == d.colour) {
                                this.__fix_neg_red(d);
                                break
                            } else if (0 == d.colour) {
                                if (null != d.prev && 0 == d.prev.colour) {
                                    this.__fix_dbl_red(d.prev);
                                    break
                                }
                                if (null != d.next && 0 == d.next.colour) {
                                    this.__fix_dbl_red(d.next);
                                    break
                                }
                            }
                            if (2 == c.colour)
                                if (null == c.parent) c.colour = 1;
                                else {
                                    c = c.parent;
                                    continue
                                } break
                        }
                    c = a.parent;
                    null == c ? this.parent = b : c.prev == a ? c.prev = b : c.next = b;
                    null != b && (b.parent = c);
                    a.parent = a.prev = a.next = null;
                    a.free();
                    a.next = Zg.zpp_pool;
                    Zg.zpp_pool = a
                },
                __fix_neg_red: function(a) {
                    var b = a.parent;
                    if (b.prev == a) {
                        var c = a.prev,
                            d = a.next,
                            e = d.prev,
                            f = d.next;
                        c.colour = 0;
                        a.colour = b.colour = 1;
                        a.next = e;
                        null != e && (e.parent = a);
                        a = b.data;
                        b.data = d.data;
                        d.data = a;
                        null != this.swapped && this.swapped(b.data, d.data);
                        d.prev = f;
                        null != f && (f.parent =
                            d);
                        d.next = b.next;
                        null != b.next && (b.next.parent = d);
                        b.next = d;
                        null != d && (d.parent = b);
                        b = c
                    } else c = a.next, d = a.prev, e = d.next, f = d.prev, c.colour = 0, a.colour = b.colour = 1, a.prev = e, null != e && (e.parent = a), a = b.data, b.data = d.data, d.data = a, null != this.swapped && this.swapped(b.data, d.data), d.next = f, null != f && (f.parent = d), d.prev = b.prev, null != b.prev && (b.prev.parent = d), b.prev = d, null != d && (d.parent = b), b = c;
                    null != b.prev && 0 == b.prev.colour ? this.__fix_dbl_red(b.prev) : null != b.next && 0 == b.next.colour && this.__fix_dbl_red(b.next)
                },
                __fix_dbl_red: function(a) {
                    for (;;) {
                        var b =
                            a.parent,
                            c = b.parent;
                        if (null == c) {
                            b.colour = 1;
                            break
                        }
                        if (b == c.prev) {
                            var d = c;
                            var e = c.next;
                            if (a == b.prev) {
                                var f = a;
                                var h = b;
                                var k = a.prev;
                                var g = a.next;
                                var l = b.next
                            } else f = b, h = a, k = b.prev, g = a.prev, l = a.next
                        } else f = c, k = c.prev, a == b.prev ? (h = a, d = b, g = a.prev, l = a.next, e = b.next) : (h = b, d = a, g = b.prev, l = a.prev, e = a.next);
                        a = c.parent;
                        null == a ? this.parent = h : a.prev == c ? a.prev = h : a.next = h;
                        null != h && (h.parent = a);
                        f.prev = k;
                        null != k && (k.parent = f);
                        f.next = g;
                        null != g && (g.parent = f);
                        h.prev = f;
                        null != f && (f.parent = h);
                        h.next = d;
                        null != d && (d.parent = h);
                        d.prev = l;
                        null != l && (l.parent = d);
                        d.next = e;
                        null != e && (e.parent = d);
                        h.colour = c.colour - 1;
                        f.colour = 1;
                        d.colour = 1;
                        if (h == this.parent) this.parent.colour = 1;
                        else if (0 == h.colour && 0 == h.parent.colour) {
                            a = h;
                            continue
                        }
                        break
                    }
                },
                insert: function(a) {
                    if (null == Zg.zpp_pool) var b = new Zg;
                    else b = Zg.zpp_pool, Zg.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.data = a;
                    if (null == this.parent) this.parent = b;
                    else
                        for (a = this.parent;;)
                            if (this.lt(b.data, a.data))
                                if (null == a.prev) {
                                    a.prev = b;
                                    b.parent = a;
                                    break
                                } else a = a.prev;
                    else if (null == a.next) {
                        a.next = b;
                        b.parent = a;
                        break
                    } else a = a.next;
                    null == b.parent ? b.colour = 1 : (b.colour = 0, 0 == b.parent.colour && this.__fix_dbl_red(b));
                    return b
                },
                __class__: Zg
            };
            var Wg = function() {
                this.colour = 0;
                this.lt = this.swapped = this.data = this.prev = this.next = this.parent = null
            };
            g["zpp_nape.util.ZPP_Set_ZPP_PartitionVertex"] = Wg;
            Wg.__name__ = ["zpp_nape", "util", "ZPP_Set_ZPP_PartitionVertex"];
            Wg.prototype = {
                free: function() {
                    this.swapped = this.lt = this.data = null
                },
                alloc: function() {},
                lt: null,
                swapped: null,
                data: null,
                prev: null,
                next: null,
                parent: null,
                colour: null,
                empty: function() {
                    return null == this.parent
                },
                remove_node: function(a) {
                    if (null != a.next && null != a.prev) {
                        for (var b = a.next; null != b.prev;) b = b.prev;
                        var c = a.data;
                        a.data = b.data;
                        b.data = c;
                        null != this.swapped && this.swapped(a.data, b.data);
                        a = b
                    }
                    b = null == a.prev ? a.next : a.prev;
                    if (1 == a.colour)
                        if (null != a.prev || null != a.next) b.colour = 1;
                        else if (null != a.parent)
                        for (c = a.parent;;) {
                            c.colour++;
                            c.prev.colour--;
                            c.next.colour--;
                            var d = c.prev;
                            if (-1 == d.colour) {
                                this.__fix_neg_red(d);
                                break
                            } else if (0 == d.colour) {
                                if (null != d.prev && 0 == d.prev.colour) {
                                    this.__fix_dbl_red(d.prev);
                                    break
                                }
                                if (null != d.next && 0 == d.next.colour) {
                                    this.__fix_dbl_red(d.next);
                                    break
                                }
                            }
                            d = c.next;
                            if (-1 == d.colour) {
                                this.__fix_neg_red(d);
                                break
                            } else if (0 == d.colour) {
                                if (null != d.prev && 0 == d.prev.colour) {
                                    this.__fix_dbl_red(d.prev);
                                    break
                                }
                                if (null != d.next && 0 == d.next.colour) {
                                    this.__fix_dbl_red(d.next);
                                    break
                                }
                            }
                            if (2 == c.colour)
                                if (null == c.parent) c.colour = 1;
                                else {
                                    c = c.parent;
                                    continue
                                } break
                        }
                    c = a.parent;
                    null == c ? this.parent = b : c.prev == a ? c.prev = b : c.next = b;
                    null != b && (b.parent = c);
                    a.parent = a.prev = a.next = null;
                    a.free();
                    a.next = Wg.zpp_pool;
                    Wg.zpp_pool = a
                },
                __fix_neg_red: function(a) {
                    var b = a.parent;
                    if (b.prev == a) {
                        var c = a.prev,
                            d = a.next,
                            e = d.prev,
                            f = d.next;
                        c.colour = 0;
                        a.colour = b.colour = 1;
                        a.next = e;
                        null != e && (e.parent = a);
                        a = b.data;
                        b.data = d.data;
                        d.data = a;
                        null != this.swapped && this.swapped(b.data, d.data);
                        d.prev = f;
                        null != f && (f.parent = d);
                        d.next = b.next;
                        null != b.next && (b.next.parent = d);
                        b.next = d;
                        null != d && (d.parent = b);
                        b = c
                    } else c = a.next, d = a.prev, e = d.next, f = d.prev, c.colour = 0, a.colour = b.colour = 1, a.prev = e, null != e && (e.parent = a), a = b.data, b.data = d.data, d.data = a, null !=
                        this.swapped && this.swapped(b.data, d.data), d.next = f, null != f && (f.parent = d), d.prev = b.prev, null != b.prev && (b.prev.parent = d), b.prev = d, null != d && (d.parent = b), b = c;
                    null != b.prev && 0 == b.prev.colour ? this.__fix_dbl_red(b.prev) : null != b.next && 0 == b.next.colour && this.__fix_dbl_red(b.next)
                },
                __fix_dbl_red: function(a) {
                    for (;;) {
                        var b = a.parent,
                            c = b.parent;
                        if (null == c) {
                            b.colour = 1;
                            break
                        }
                        if (b == c.prev) {
                            var d = c;
                            var e = c.next;
                            if (a == b.prev) {
                                var f = a;
                                var h = b;
                                var k = a.prev;
                                var g = a.next;
                                var l = b.next
                            } else f = b, h = a, k = b.prev, g = a.prev, l = a.next
                        } else f =
                            c, k = c.prev, a == b.prev ? (h = a, d = b, g = a.prev, l = a.next, e = b.next) : (h = b, d = a, g = b.prev, l = a.prev, e = a.next);
                        a = c.parent;
                        null == a ? this.parent = h : a.prev == c ? a.prev = h : a.next = h;
                        null != h && (h.parent = a);
                        f.prev = k;
                        null != k && (k.parent = f);
                        f.next = g;
                        null != g && (g.parent = f);
                        h.prev = f;
                        null != f && (f.parent = h);
                        h.next = d;
                        null != d && (d.parent = h);
                        d.prev = l;
                        null != l && (l.parent = d);
                        d.next = e;
                        null != e && (e.parent = d);
                        h.colour = c.colour - 1;
                        f.colour = 1;
                        d.colour = 1;
                        if (h == this.parent) this.parent.colour = 1;
                        else if (0 == h.colour && 0 == h.parent.colour) {
                            a = h;
                            continue
                        }
                        break
                    }
                },
                insert: function(a) {
                    if (null == Wg.zpp_pool) var b = new Wg;
                    else b = Wg.zpp_pool, Wg.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.data = a;
                    if (null == this.parent) this.parent = b;
                    else
                        for (a = this.parent;;)
                            if (this.lt(b.data, a.data))
                                if (null == a.prev) {
                                    a.prev = b;
                                    b.parent = a;
                                    break
                                } else a = a.prev;
                    else if (null == a.next) {
                        a.next = b;
                        b.parent = a;
                        break
                    } else a = a.next;
                    null == b.parent ? b.colour = 1 : (b.colour = 0, 0 == b.parent.colour && this.__fix_dbl_red(b));
                    return b
                },
                __class__: Wg
            };
            var of = function() {
                this.colour = 0;
                this.lt = this.swapped = this.data = this.prev =
                    this.next = this.parent = null
            };
            g["zpp_nape.util.ZPP_Set_ZPP_SimpleVert"] = of ; of .__name__ = ["zpp_nape", "util", "ZPP_Set_ZPP_SimpleVert"]; of .prototype = {
                free: function() {
                    this.swapped = this.lt = this.data = null
                },
                alloc: function() {},
                lt: null,
                swapped: null,
                data: null,
                prev: null,
                next: null,
                parent: null,
                colour: null,
                clear: function() {
                    this.clear_with(function(a) {})
                },
                clear_with: function(a) {
                    if (null != this.parent) {
                        for (var b = this.parent; null != b;) b = null != b.prev ? b.prev : null != b.next ? b.next : this.clear_node(b, a);
                        this.parent = null
                    }
                },
                clear_node: function(a,
                    b) {
                    b(a.data);
                    b = a.parent;
                    null != b && (a == b.prev ? b.prev = null : b.next = null, a.parent = null);
                    a.free();
                    a.next = of .zpp_pool; of .zpp_pool = a;
                    return b
                },
                __fix_dbl_red: function(a) {
                    for (;;) {
                        var b = a.parent,
                            c = b.parent;
                        if (null == c) {
                            b.colour = 1;
                            break
                        }
                        if (b == c.prev) {
                            var d = c;
                            var e = c.next;
                            if (a == b.prev) {
                                var f = a;
                                var h = b;
                                var k = a.prev;
                                var g = a.next;
                                var l = b.next
                            } else f = b, h = a, k = b.prev, g = a.prev, l = a.next
                        } else f = c, k = c.prev, a == b.prev ? (h = a, d = b, g = a.prev, l = a.next, e = b.next) : (h = b, d = a, g = b.prev, l = a.prev, e = a.next);
                        a = c.parent;
                        null == a ? this.parent =
                            h : a.prev == c ? a.prev = h : a.next = h;
                        null != h && (h.parent = a);
                        f.prev = k;
                        null != k && (k.parent = f);
                        f.next = g;
                        null != g && (g.parent = f);
                        h.prev = f;
                        null != f && (f.parent = h);
                        h.next = d;
                        null != d && (d.parent = h);
                        d.prev = l;
                        null != l && (l.parent = d);
                        d.next = e;
                        null != e && (e.parent = d);
                        h.colour = c.colour - 1;
                        f.colour = 1;
                        d.colour = 1;
                        if (h == this.parent) this.parent.colour = 1;
                        else if (0 == h.colour && 0 == h.parent.colour) {
                            a = h;
                            continue
                        }
                        break
                    }
                },
                insert: function(a) {
                    if (null == of .zpp_pool) var b = new of ;
                    else b = of .zpp_pool, of .zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.data =
                        a;
                    if (null == this.parent) this.parent = b;
                    else
                        for (a = this.parent;;)
                            if (this.lt(b.data, a.data))
                                if (null == a.prev) {
                                    a.prev = b;
                                    b.parent = a;
                                    break
                                } else a = a.prev;
                    else if (null == a.next) {
                        a.next = b;
                        b.parent = a;
                        break
                    } else a = a.next;
                    null == b.parent ? b.colour = 1 : (b.colour = 0, 0 == b.parent.colour && this.__fix_dbl_red(b));
                    return b
                },
                __class__: of
            };
            var sg = function() {
                this.colour = 0;
                this.lt = this.swapped = this.data = this.prev = this.next = this.parent = null
            };
            g["zpp_nape.util.ZPP_Set_ZPP_SimpleSeg"] = sg;
            sg.__name__ = ["zpp_nape", "util", "ZPP_Set_ZPP_SimpleSeg"];
            sg.prototype = {
                free: function() {
                    this.swapped = this.lt = this.data = null
                },
                alloc: function() {},
                lt: null,
                swapped: null,
                data: null,
                prev: null,
                next: null,
                parent: null,
                colour: null,
                successor_node: function(a) {
                    if (null != a.next)
                        for (a = a.next; null != a.prev;) a = a.prev;
                    else {
                        var b = a;
                        for (a = a.parent; null != a && a.prev != b;) b = a, a = a.parent
                    }
                    return a
                },
                predecessor_node: function(a) {
                    if (null != a.prev)
                        for (a = a.prev; null != a.next;) a = a.next;
                    else {
                        var b = a;
                        for (a = a.parent; null != a && a.next != b;) b = a, a = a.parent
                    }
                    return a
                },
                remove_node: function(a) {
                    if (null != a.next &&
                        null != a.prev) {
                        for (var b = a.next; null != b.prev;) b = b.prev;
                        var c = a.data;
                        a.data = b.data;
                        b.data = c;
                        null != this.swapped && this.swapped(a.data, b.data);
                        a = b
                    }
                    b = null == a.prev ? a.next : a.prev;
                    if (1 == a.colour)
                        if (null != a.prev || null != a.next) b.colour = 1;
                        else if (null != a.parent)
                        for (c = a.parent;;) {
                            c.colour++;
                            c.prev.colour--;
                            c.next.colour--;
                            var d = c.prev;
                            if (-1 == d.colour) {
                                this.__fix_neg_red(d);
                                break
                            } else if (0 == d.colour) {
                                if (null != d.prev && 0 == d.prev.colour) {
                                    this.__fix_dbl_red(d.prev);
                                    break
                                }
                                if (null != d.next && 0 == d.next.colour) {
                                    this.__fix_dbl_red(d.next);
                                    break
                                }
                            }
                            d = c.next;
                            if (-1 == d.colour) {
                                this.__fix_neg_red(d);
                                break
                            } else if (0 == d.colour) {
                                if (null != d.prev && 0 == d.prev.colour) {
                                    this.__fix_dbl_red(d.prev);
                                    break
                                }
                                if (null != d.next && 0 == d.next.colour) {
                                    this.__fix_dbl_red(d.next);
                                    break
                                }
                            }
                            if (2 == c.colour)
                                if (null == c.parent) c.colour = 1;
                                else {
                                    c = c.parent;
                                    continue
                                } break
                        }
                    c = a.parent;
                    null == c ? this.parent = b : c.prev == a ? c.prev = b : c.next = b;
                    null != b && (b.parent = c);
                    a.parent = a.prev = a.next = null;
                    a.free();
                    a.next = sg.zpp_pool;
                    sg.zpp_pool = a
                },
                clear: function() {
                    this.clear_with(function(a) {})
                },
                clear_with: function(a) {
                    if (null !=
                        this.parent) {
                        for (var b = this.parent; null != b;) b = null != b.prev ? b.prev : null != b.next ? b.next : this.clear_node(b, a);
                        this.parent = null
                    }
                },
                clear_node: function(a, b) {
                    b(a.data);
                    b = a.parent;
                    null != b && (a == b.prev ? b.prev = null : b.next = null, a.parent = null);
                    a.free();
                    a.next = sg.zpp_pool;
                    sg.zpp_pool = a;
                    return b
                },
                __fix_neg_red: function(a) {
                    var b = a.parent;
                    if (b.prev == a) {
                        var c = a.prev,
                            d = a.next,
                            e = d.prev,
                            f = d.next;
                        c.colour = 0;
                        a.colour = b.colour = 1;
                        a.next = e;
                        null != e && (e.parent = a);
                        a = b.data;
                        b.data = d.data;
                        d.data = a;
                        null != this.swapped && this.swapped(b.data,
                            d.data);
                        d.prev = f;
                        null != f && (f.parent = d);
                        d.next = b.next;
                        null != b.next && (b.next.parent = d);
                        b.next = d;
                        null != d && (d.parent = b);
                        b = c
                    } else c = a.next, d = a.prev, e = d.next, f = d.prev, c.colour = 0, a.colour = b.colour = 1, a.prev = e, null != e && (e.parent = a), a = b.data, b.data = d.data, d.data = a, null != this.swapped && this.swapped(b.data, d.data), d.next = f, null != f && (f.parent = d), d.prev = b.prev, null != b.prev && (b.prev.parent = d), b.prev = d, null != d && (d.parent = b), b = c;
                    null != b.prev && 0 == b.prev.colour ? this.__fix_dbl_red(b.prev) : null != b.next && 0 == b.next.colour &&
                        this.__fix_dbl_red(b.next)
                },
                __fix_dbl_red: function(a) {
                    for (;;) {
                        var b = a.parent,
                            c = b.parent;
                        if (null == c) {
                            b.colour = 1;
                            break
                        }
                        if (b == c.prev) {
                            var d = c;
                            var e = c.next;
                            if (a == b.prev) {
                                var f = a;
                                var h = b;
                                var k = a.prev;
                                var g = a.next;
                                var l = b.next
                            } else f = b, h = a, k = b.prev, g = a.prev, l = a.next
                        } else f = c, k = c.prev, a == b.prev ? (h = a, d = b, g = a.prev, l = a.next, e = b.next) : (h = b, d = a, g = b.prev, l = a.prev, e = a.next);
                        a = c.parent;
                        null == a ? this.parent = h : a.prev == c ? a.prev = h : a.next = h;
                        null != h && (h.parent = a);
                        f.prev = k;
                        null != k && (k.parent = f);
                        f.next = g;
                        null != g && (g.parent =
                            f);
                        h.prev = f;
                        null != f && (f.parent = h);
                        h.next = d;
                        null != d && (d.parent = h);
                        d.prev = l;
                        null != l && (l.parent = d);
                        d.next = e;
                        null != e && (e.parent = d);
                        h.colour = c.colour - 1;
                        f.colour = 1;
                        d.colour = 1;
                        if (h == this.parent) this.parent.colour = 1;
                        else if (0 == h.colour && 0 == h.parent.colour) {
                            a = h;
                            continue
                        }
                        break
                    }
                },
                insert: function(a) {
                    if (null == sg.zpp_pool) var b = new sg;
                    else b = sg.zpp_pool, sg.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.data = a;
                    if (null == this.parent) this.parent = b;
                    else
                        for (a = this.parent;;)
                            if (this.lt(b.data, a.data))
                                if (null == a.prev) {
                                    a.prev =
                                        b;
                                    b.parent = a;
                                    break
                                } else a = a.prev;
                    else if (null == a.next) {
                        a.next = b;
                        b.parent = a;
                        break
                    } else a = a.next;
                    null == b.parent ? b.colour = 1 : (b.colour = 0, 0 == b.parent.colour && this.__fix_dbl_red(b));
                    return b
                },
                __class__: sg
            };
            var Vw = function() {};
            g["zpp_nape.util.ZPP_Set_ZPP_SimpleEvent"] = Vw;
            Vw.__name__ = ["zpp_nape", "util", "ZPP_Set_ZPP_SimpleEvent"];
            var Yg = function() {
                this.colour = 0;
                this.lt = this.swapped = this.data = this.prev = this.next = this.parent = null
            };
            g["zpp_nape.util.ZPP_Set_ZPP_PartitionPair"] = Yg;
            Yg.__name__ = ["zpp_nape", "util",
                "ZPP_Set_ZPP_PartitionPair"
            ];
            Yg.prototype = {
                free: function() {
                    this.swapped = this.lt = this.data = null
                },
                alloc: function() {},
                lt: null,
                swapped: null,
                data: null,
                prev: null,
                next: null,
                parent: null,
                colour: null,
                remove_node: function(a) {
                    if (null != a.next && null != a.prev) {
                        for (var b = a.next; null != b.prev;) b = b.prev;
                        var c = a.data;
                        a.data = b.data;
                        b.data = c;
                        null != this.swapped && this.swapped(a.data, b.data);
                        a = b
                    }
                    b = null == a.prev ? a.next : a.prev;
                    if (1 == a.colour)
                        if (null != a.prev || null != a.next) b.colour = 1;
                        else if (null != a.parent)
                        for (c = a.parent;;) {
                            c.colour++;
                            c.prev.colour--;
                            c.next.colour--;
                            var d = c.prev;
                            if (-1 == d.colour) {
                                this.__fix_neg_red(d);
                                break
                            } else if (0 == d.colour) {
                                if (null != d.prev && 0 == d.prev.colour) {
                                    this.__fix_dbl_red(d.prev);
                                    break
                                }
                                if (null != d.next && 0 == d.next.colour) {
                                    this.__fix_dbl_red(d.next);
                                    break
                                }
                            }
                            d = c.next;
                            if (-1 == d.colour) {
                                this.__fix_neg_red(d);
                                break
                            } else if (0 == d.colour) {
                                if (null != d.prev && 0 == d.prev.colour) {
                                    this.__fix_dbl_red(d.prev);
                                    break
                                }
                                if (null != d.next && 0 == d.next.colour) {
                                    this.__fix_dbl_red(d.next);
                                    break
                                }
                            }
                            if (2 == c.colour)
                                if (null == c.parent) c.colour =
                                    1;
                                else {
                                    c = c.parent;
                                    continue
                                } break
                        }
                    c = a.parent;
                    null == c ? this.parent = b : c.prev == a ? c.prev = b : c.next = b;
                    null != b && (b.parent = c);
                    a.parent = a.prev = a.next = null;
                    a.free();
                    a.next = Yg.zpp_pool;
                    Yg.zpp_pool = a
                },
                __fix_neg_red: function(a) {
                    var b = a.parent;
                    if (b.prev == a) {
                        var c = a.prev,
                            d = a.next,
                            e = d.prev,
                            f = d.next;
                        c.colour = 0;
                        a.colour = b.colour = 1;
                        a.next = e;
                        null != e && (e.parent = a);
                        a = b.data;
                        b.data = d.data;
                        d.data = a;
                        null != this.swapped && this.swapped(b.data, d.data);
                        d.prev = f;
                        null != f && (f.parent = d);
                        d.next = b.next;
                        null != b.next && (b.next.parent = d);
                        b.next = d;
                        null != d && (d.parent = b);
                        b = c
                    } else c = a.next, d = a.prev, e = d.next, f = d.prev, c.colour = 0, a.colour = b.colour = 1, a.prev = e, null != e && (e.parent = a), a = b.data, b.data = d.data, d.data = a, null != this.swapped && this.swapped(b.data, d.data), d.next = f, null != f && (f.parent = d), d.prev = b.prev, null != b.prev && (b.prev.parent = d), b.prev = d, null != d && (d.parent = b), b = c;
                    null != b.prev && 0 == b.prev.colour ? this.__fix_dbl_red(b.prev) : null != b.next && 0 == b.next.colour && this.__fix_dbl_red(b.next)
                },
                __fix_dbl_red: function(a) {
                    for (;;) {
                        var b = a.parent,
                            c = b.parent;
                        if (null == c) {
                            b.colour = 1;
                            break
                        }
                        if (b == c.prev) {
                            var d = c;
                            var e = c.next;
                            if (a == b.prev) {
                                var f = a;
                                var h = b;
                                var k = a.prev;
                                var g = a.next;
                                var l = b.next
                            } else f = b, h = a, k = b.prev, g = a.prev, l = a.next
                        } else f = c, k = c.prev, a == b.prev ? (h = a, d = b, g = a.prev, l = a.next, e = b.next) : (h = b, d = a, g = b.prev, l = a.prev, e = a.next);
                        a = c.parent;
                        null == a ? this.parent = h : a.prev == c ? a.prev = h : a.next = h;
                        null != h && (h.parent = a);
                        f.prev = k;
                        null != k && (k.parent = f);
                        f.next = g;
                        null != g && (g.parent = f);
                        h.prev = f;
                        null != f && (f.parent = h);
                        h.next = d;
                        null != d && (d.parent = h);
                        d.prev = l;
                        null != l && (l.parent =
                            d);
                        d.next = e;
                        null != e && (e.parent = d);
                        h.colour = c.colour - 1;
                        f.colour = 1;
                        d.colour = 1;
                        if (h == this.parent) this.parent.colour = 1;
                        else if (0 == h.colour && 0 == h.parent.colour) {
                            a = h;
                            continue
                        }
                        break
                    }
                },
                insert: function(a) {
                    if (null == Yg.zpp_pool) var b = new Yg;
                    else b = Yg.zpp_pool, Yg.zpp_pool = b.next, b.next = null;
                    b.alloc();
                    b.data = a;
                    if (null == this.parent) this.parent = b;
                    else
                        for (a = this.parent;;)
                            if (this.lt(b.data, a.data))
                                if (null == a.prev) {
                                    a.prev = b;
                                    b.parent = a;
                                    break
                                } else a = a.prev;
                    else if (null == a.next) {
                        a.next = b;
                        b.parent = a;
                        break
                    } else a = a.next;
                    null == b.parent ? b.colour = 1 : (b.colour = 0, 0 == b.parent.colour && this.__fix_dbl_red(b));
                    return b
                },
                __class__: Yg
            };
            var ie = function() {
                this.colour = 0;
                this.lt = this.swapped = this.data = this.prev = this.next = this.parent = null
            };
            g["zpp_nape.util.ZPP_Set_ZPP_CbSetPair"] = ie;
            ie.__name__ = ["zpp_nape", "util", "ZPP_Set_ZPP_CbSetPair"];
            ie.prototype = {
                free: function() {
                    this.swapped = this.lt = this.data = null
                },
                alloc: function() {},
                lt: null,
                swapped: null,
                data: null,
                prev: null,
                next: null,
                parent: null,
                colour: null,
                clear_with: function(a) {
                    if (null != this.parent) {
                        for (var b =
                                this.parent; null != b;) b = null != b.prev ? b.prev : null != b.next ? b.next : this.clear_node(b, a);
                        this.parent = null
                    }
                },
                clear_node: function(a, b) {
                    b(a.data);
                    b = a.parent;
                    null != b && (a == b.prev ? b.prev = null : b.next = null, a.parent = null);
                    a.free();
                    a.next = ie.zpp_pool;
                    ie.zpp_pool = a;
                    return b
                },
                __fix_dbl_red: function(a) {
                    for (;;) {
                        var b = a.parent,
                            c = b.parent;
                        if (null == c) {
                            b.colour = 1;
                            break
                        }
                        if (b == c.prev) {
                            var d = c;
                            var e = c.next;
                            if (a == b.prev) {
                                var f = a;
                                var h = b;
                                var k = a.prev;
                                var g = a.next;
                                var l = b.next
                            } else f = b, h = a, k = b.prev, g = a.prev, l = a.next
                        } else f = c,
                            k = c.prev, a == b.prev ? (h = a, d = b, g = a.prev, l = a.next, e = b.next) : (h = b, d = a, g = b.prev, l = a.prev, e = a.next);
                        a = c.parent;
                        null == a ? this.parent = h : a.prev == c ? a.prev = h : a.next = h;
                        null != h && (h.parent = a);
                        f.prev = k;
                        null != k && (k.parent = f);
                        f.next = g;
                        null != g && (g.parent = f);
                        h.prev = f;
                        null != f && (f.parent = h);
                        h.next = d;
                        null != d && (d.parent = h);
                        d.prev = l;
                        null != l && (l.parent = d);
                        d.next = e;
                        null != e && (e.parent = d);
                        h.colour = c.colour - 1;
                        f.colour = 1;
                        d.colour = 1;
                        if (h == this.parent) this.parent.colour = 1;
                        else if (0 == h.colour && 0 == h.parent.colour) {
                            a = h;
                            continue
                        }
                        break
                    }
                },
                try_insert: function(a) {
                    var b = null,
                        c = null;
                    if (null == this.parent) null == ie.zpp_pool ? b = new ie : (b = ie.zpp_pool, ie.zpp_pool = b.next, b.next = null), b.alloc(), b.data = a, this.parent = b;
                    else
                        for (c = this.parent;;)
                            if (this.lt(a, c.data))
                                if (null == c.prev) {
                                    null == ie.zpp_pool ? b = new ie : (b = ie.zpp_pool, ie.zpp_pool = b.next, b.next = null);
                                    b.alloc();
                                    b.data = a;
                                    c.prev = b;
                                    b.parent = c;
                                    break
                                } else c = c.prev;
                    else if (this.lt(c.data, a))
                        if (null == c.next) {
                            null == ie.zpp_pool ? b = new ie : (b = ie.zpp_pool, ie.zpp_pool = b.next, b.next = null);
                            b.alloc();
                            b.data = a;
                            c.next = b;
                            b.parent = c;
                            break
                        } else c = c.next;
                    else break;
                    if (null == b) return c;
                    null == b.parent ? b.colour = 1 : (b.colour = 0, 0 == b.parent.colour && this.__fix_dbl_red(b));
                    return b
                },
                __class__: ie
            };
            var Jf, ax = 0;
            g.Math = Math;
            String.prototype.__class__ = g.String = String;
            String.__name__ = ["String"];
            g.Array = Array;
            Array.__name__ = ["Array"];
            Date.prototype.__class__ = g.Date = Date;
            Date.__name__ = ["Date"];
            var Lv = g.Int = {
                    __name__: ["Int"]
                },
                dx = g.Dynamic = {
                    __name__: ["Dynamic"]
                },
                Jw = g.Float = Number;
            Jw.__name__ = ["Float"];
            var Pp = g.Bool = Boolean;
            Pp.__ename__ = ["Bool"];
            var Ow = g.Class = {
                    __name__: ["Class"]
                },
                Pw = {},
                cx = {},
                Ng = C.ArrayBuffer || Nf;
            null == Ng.prototype.slice && (Ng.prototype.slice = Nf.sliceImpl);
            var bx = C.DataView || hu,
                jg = C.Float32Array || qj._new,
                Cf = C.Uint8Array || rj._new,
                ex = new Uint32Array(256);
            ea.__alpha16 = ex;
            for (var Ww = 0; 256 > Ww;) {
                var Xw = Ww++;
                ea.__alpha16[Xw] = Math.ceil(257.00392156862745 * Xw)
            }
            var fx = new Cf(511);
            ea.__clamp = fx;
            for (var Yw = 0; 255 > Yw;) {
                var Zw = Yw++;
                ea.__clamp[Zw] = Zw
            }
            for (var $w = 255; 511 > $w;) {
                var gx = $w++;
                ea.__clamp[gx] = 255
            }
            Za.level = 3;
            "undefined" == typeof console &&
                (console = {});
            null == console.log && (console.log = function() {});
            A.hitTestCanvas = La.get_supported() ? La.get_document().createElement("canvas") : null;
            A.hitTestContext = La.get_supported() ? A.hitTestCanvas.getContext("2d") : null;
            Zl.maxTouchPoints = 2;
            Zl.supportedGestures = null;
            Zl.supportsGestureEvents = !1;
            Zl.inputMode = 2;
            Qa.count = 0;
            R.__meta__ = {
                fields: {
                    __cairo: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    addEventListener: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    removeEventListener: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            R.__broadcastEvents = new fb;
            R.__instanceCount = 0;
            R.__tempStack = new Rb(function() {
                return M.toObjectVector(null)
            }, function(a) {
                a.set_length(0)
            });
            ud.__fontByName = new fb;
            ud.__registeredFonts = [];
            zh.FONT_NAME = "Source Sans Pro";
            zh.DEFAULT_PADDING = new Kg(0, 4, 2, 5);
            Uk.string_draw = [];
            J.pushClass = O.pushClass;
            J.pushBool = O.pushBool;
            J.pushInt = O.pushInt;
            J.pushFloat = O.pushDouble;
            J.pushString = O.pushString;
            J.pushEnum = O.pushEnum;
            J.pushArray = O.pushArray;
            J.pushInstance = O.pushInstance;
            J.pushIgnore = O.pushIgnore;
            J.pushPoint =
                O.pushPoint;
            J.pushTransform = O.pushTransform;
            wg.guid_prefix = "guid_not_initialized";
            wg.guid_postfix = 0;
            kl.step_size = .016666666666666666;
            Ja.pushClass = O.pushClass;
            Ja.pushBool = O.pushBool;
            Ja.pushInt = O.pushInt;
            Ja.pushDouble = O.pushDouble;
            Ja.pushString = O.pushString;
            Ja.pushEnum = O.pushEnum;
            Ja.pushArray = O.pushArray;
            Ja.pushInstance = O.pushInstance;
            Ja.pushIgnore = O.pushIgnore;
            Bc.level_highlight_color_grey_value = 0;
            Bc.level_highlight_snapped_color_grey_value = 0;
            Bc.level_shade_color_grey_value = 0;
            Bc.color_filter_brightness =
                0;
            Bc.color_filter_contrast = 0;
            Bc.color_filter_saturation = 0;
            Bc.final_shape_scale = 1;
            Uf.__meta__ = {
                fields: {
                    glProgram: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            Qc.__invertAlphaShader = new wq;
            Qc.__blurAlphaShader = new rq;
            Qc.__combineShader = new tq;
            Qc.__innerCombineShader = new vq;
            Qc.__combineKnockoutShader = new sq;
            Qc.__innerCombineKnockoutShader = new uq;
            sa.default_border_color = 5000268;
            sa.default_downed_button_color = 11382189;
            sa.background_dot_color = 9671571;
            sa.level_highlight_color = 15790320;
            sa.level_highlight_snapped_color =
                10921638;
            sa.level_shade_color = 4605510;
            sa.rail_shade_color = 6579300;
            sa.rail_end_circles_radius = 5;
            sa.rail_thickness = 3.5;
            sa.area_shade_color = 6579300;
            sa.level_white_inner_border = new Qc(0, 1, 5, 5, 30, 1, !0, !1);
            sa.level_black_outer_border = new Qc(0, 1, 5, 5, 30, 1, !1, !1);
            sa.price_outer_border = new Qc(0, 1, 5, 5, 10, 1, !1, !1);
            sa.level_white_inner_border_layer2 = new Qc(0, 1, 7, 7, 7.5, 1, !0, !1);
            sa.level_shadow_glow_layer2 = new Qc(0, 1, 7, 7, 1.4, 3, !1, !1);
            sa.rail_filter = new Qc(0, 1, 4, 4, 10, 1);
            sa.area_filter = new Qc(0, 1, 5, 5, 10, 1);
            sa.main_menu_middle_line_color =
                7631988;
            sa.level_pack_icon_finished_color = 15395470;
            sa.level_pack_icon_unfinished_color = 13882323;
            sa.level_pack_icon_downed_color = sa.default_downed_button_color;
            sa.level_pack_icon_border_color = sa.default_border_color;
            sa.window_background = 13882323;
            sa.window_level_icon_finished_color = 15395470;
            sa.window_level_icon_unfinished_color = 12566463;
            sa.window_level_icon_downed_color = sa.default_downed_button_color;
            sa.window_level_icon_border_color = sa.default_border_color;
            sa.window_weekly_history_text_color = 5066061;
            sa.window_buy_text_color = 5131854;
            sa.pause_menu_button_background = 13882323;
            sa.pause_menu_button_downed_background = sa.default_downed_button_color;
            sa.pause_menu_button_border = sa.default_border_color;
            sa.debug_level_connector_coeff = 1;
            sa.debug_level_filter_coeff = 1;
            sa.debug_background_show_side_shades = !0;
            Hc.animation_speed = .025;
            Hc.animation_shine_out_speed = .05;
            Hc.animation_scale_start = 0;
            Hc.animation_max_scale = 1.015;
            Hc.shape_appreciation_time = 1;
            Hc.last_shape_in_pack_appreciation_time = 1.5;
            Hc.line_color = 16777215;
            Hc.line_thickness = 2;
            Hc.line_glow_blur = 12;
            Hc.line_glow_strength = 2.5;
            Hc.line_glow_quality = 2;
            Hc.line_effect_trigger = .5;
            Hc.line_effect_time = .4;
            Hc.show_final_time = 1;
            Hc.transition_out_alpha_speed = .05;
            Hc.alpha_out_time = .5;
            ek.max_time = .25;
            ek.reduced_friction = .95;
            Cc.area_connection_circle_radius = 5;
            Cc.area_connection_circle_graphics_radius = 6;
            Cc.area_connection_circle_graphics_radius_snapped = 5;
            Cc.area_connection_rounded_graphics_size = 9;
            Cc.area_connection_rounded_graphics_ellipse = 4;
            Cc.area_connection_rounded_graphics_size_snapped =
                7;
            Cc.area_connection_rounded_graphics_ellipse_snapped = 3;
            Cc.area_rounded_rectangle_border_size = 18;
            Fh.mouse_superforce_enabled = !1;
            Fh.mouse_debug_super_force_ratio = 1E4;
            oe.unstable_overlap_threshold = 7;
            oe.unstable_pivot_threshold = 5;
            oe.unstable_angle_threshold_radians = .087266462599715;
            oe.reload_wait_time = .15;
            oe.disappear_wait_time = .1;
            ml.display_time = 1.5;
            Hi.button_animation_time = .5;
            Hi.circle_wait_time = 2.5;
            Hi.circle_animation_time = .5;
            Pg.transition_in_time = .15;
            Pg.transition_out_time = .1;
            Pg.button_scale_start =
                .85;
            Pg.button_rotate_degrees = 30;
            W.destroyed_point_list = [];
            qd.appear_time = .3;
            qd.appear_scale = 1.4;
            qd.drag_time = .8;
            qd.wait_time = .5;
            qd.disappear_time = .2;
            qd.empty_time = .3;
            qd.pointer_start = new W(45, -75);
            qd.pointer_end = new W(80, 45);
            go.gameplay_music_transition_in_time = 3;
            gc.shared_object_name = "shape_fold";
            gc.draw_part_name = !1;
            gc.draw_part_point_indexes = !1;
            gc.default_size = new rc(640, 360);
            Ii.frames_for_average = 20;
            Ii.frames_for_min = 60;
            pd.normal = pd.create([1, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1]);
            pd.no_interaction =
                pd.create([0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]);
            pd.area_bodies = pd.create([0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0]);
            pd.normal_layer2 = pd.create([0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0]);
            wd.snapshot_type_gameplay = "gameplay";
            wd.snapshot_type_transition_in = "transition_in";
            wd.snapshot_type_transition_out = "transition_out";
            wd.snapshot_type_go_to_main_menu = "go_to_main_menu";
            wd.snapshot_type_main_menu = "main_menu";
            sc.next_icon_time = .3;
            sc.next_icon_scale = 1.2;
            sc.large_icon_time = .45;
            sc.large_icon_start_scale = 4;
            sc.just_completed_circle_time =
                .35;
            sc.just_completed_circle_scale = 4;
            nj.big_star_time = .7;
            nj.star_effect_time = .3;
            nj.wait_time = .2;
            jk.unlock_transition_in_time = 1;
            jk.unlock_transition_in_empty_stars_time = 1;
            lg.float_time = 1;
            lg.scale_start = .75;
            lg.scale_end = 1;
            lg.distance = 20;
            lg.rotation_speed = 0;
            kk.final_scale = 1.7;
            kk.time = .15;
            Sg.star_spawn_rate = .05;
            Sg.total_star_time = 4;
            Sg.credits_background_time = 1;
            Sg.credits_one_text_time = .2;
            Ab.title_scale = 1;
            Ab.title_position_y_coeff = .133;
            Ab.level_pack_radius_min = 11;
            Ab.level_pack_radius_max = 17;
            Ab.timeline_width =
                220;
            Ab.timeline_height_distance = 50;
            Ab.timeline_position_x_coeff = .066;
            Ab.timeline_position_y_coeff = .592;
            Ab.middle_line_height_coeff = .43;
            Ab.blurred_main_menu_blur = 6;
            Ab.blurred_main_menu_quality = 3;
            Ab.timeline_icon_radius = 16;
            Ab.window_icon_radius = 18;
            Ab.history_icon_radius = 18;
            Ab.inter_level_icon_radius = 24;
            Ab.transition_in_time = .75;
            Ab.transition_out_time = .5;
            Ab.display_type = jh.VerticalCentered;
            xd.cover_alpha = .4;
            xd.transition_in_time = .15;
            xd.transition_out_time = .1;
            xd.page_scroll_time = .3;
            xd.icon_rotation_speed =
                120;
            xd.consent_dear_gamer_y = -212;
            xd.consent_can_your_data_y = -167;
            xd.consent_personalized_ads_x = -100;
            xd.consent_personalized_ads_y = -112;
            xd.consent_non_personalized_ads_x = 100;
            xd.consent_non_personalized_ads_y = -112;
            xd.consent_remove_ads_y = -57;
            xd.consent_learn_more = -15;
            kg.transition_in_time = .4;
            kg.transition_out_time = .5;
            kg.icon_scale_start = .65;
            kg.icon_rotate_degrees = 30;
            kg.next_level_icon_rotation_speed = 120;
            dc.WAKE = 1;
            dc.PROPS = 2;
            dc.ANGDRAG = 4;
            dc.ARBITERS = 8;
            dk.normal = new ik(0, 0, 0, 1, 0);
            dk.very_light = new ik(0,
                0, 0, .02, 0);
            mh.timeline_encoding_for_flash = ["a", "b", "c"];
            mh.timeline_encoding_for_html5 = ["a"];
            mh.test_code = "ua16ub5uc2";
            eh.PI = Math.PI;
            eh.PI2 = 2 * Math.PI;
            Nv.validate_reusable_objects = !1;
            Qg.exists = !1;
            Af.show_adblock_warning = !1;
            va.sounds_enabled = !0;
            va.music_enabled = !0;
            Ni.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            ah.poki_init_success = !0;
            fh.draw_command_move_to = 0;
            fh.draw_command_line_to = 1;
            Xa.music_menu = Xa.createSoundAsset("music_menu", null, sd.SoundAssetMusic, .11);
            Xa.music_gameplay =
                Xa.createSoundAsset("music_gameplay", null, sd.SoundAssetMusic, .11);
            Xa.sound_click = Xa.createSoundAsset("click7", null, sd.SoundAssetSound, .6);
            Xa.sound_level_finish = Xa.createSoundAsset("level_finish4", null, sd.SoundAssetSound, .6);
            Xa.sound_finish_snap = Xa.createSoundAsset("finish_snap12", null, sd.SoundAssetSound, .5);
            Xa.sound_rotate = Xa.createSoundAsset("part_rotate", null, sd.SoundAssetSound, .2);
            Xa.sound_snap = Xa.createSoundAsset("part_snap", null, sd.SoundAssetSound, 1);
            Xa.sound_unsnap = Xa.createSoundAsset("part_unsnap",
                null, sd.SoundAssetSound, 1);
            Xa.sound_drag_click = Xa.createSoundAsset("part_drag_click", null, sd.SoundAssetSound, 1);
            Xa.sound_part_transition = Xa.createSoundAsset("transition_in_part3", null, sd.SoundAssetSound, 1);
            Xa.sound_menu_transition_in = Xa.createSoundAsset("menu_transition_in", null, sd.SoundAssetSound, .5);
            Xa.sound_menu_transition_out = Xa.createSoundAsset("menu_transition_out", null, sd.SoundAssetSound, .5);
            Xa.sound_just_completed_pack_transition = Xa.createSoundAsset("just_completed_pack_transition", null, sd.SoundAssetSound,
                1);
            Xa.sound_just_completed_pack_bang = Xa.createSoundAsset("just_completed_pack_bang2", null, sd.SoundAssetSound, 1);
            Xa.sound_star_bang = Xa.createSoundAsset("star_bang", null, sd.SoundAssetSound, 1);
            Xa.sound_level_pack_pop = Xa.createSoundAsset("level_pack_pop", null, sd.SoundAssetSound, 1);
            rb.trace_snapshots = [];
            rb.resize_time = 0;
            Ec.paused = !1;
            Se.USE_CACHE = !1;
            Se.USE_ENUM_INDEX = !1;
            Se.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
            tf.DEFAULT_RESOLVER = new Rq;
            tf.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
            Mc.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
            Mc.BYTES = ub.ofString(Mc.CHARS);
            Tg.i64tmp = new Db(0, 0);
            te.LEN_EXTRA_BITS_TBL = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, -1, -1];
            te.LEN_BASE_VAL_TBL = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258];
            te.DIST_EXTRA_BITS_TBL = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, -1, -1];
            te.DIST_BASE_VAL_TBL = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513,
                769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577
            ];
            te.CODE_LENGTHS_POS = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
            aa.__toStr = {}.toString;
            qj.BYTES_PER_ELEMENT = 4;
            rj.BYTES_PER_ELEMENT = 1;
            Na.activeRequests = 0;
            Na.requestLimit = 17;
            Na.requestQueue = new Qb;
            ib.dummyCharacter = "\u007f";
            ib.windowID = 0;
            Ug.DICTIONARY = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");
            Ug.EXTENDED_DICTIONARY = function(a) {
                a = [];
                for (var b = 0, c = Ug.DICTIONARY; b < c.length;) {
                    var d = c[b];
                    ++b;
                    for (var e = 0, f = Ug.DICTIONARY; e <
                        f.length;) {
                        var h = f[e];
                        ++e;
                        a.push(d + h)
                    }
                }
                return a
            }(this);
            Zf.MUL_TABLE = [1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265, 497, 469, 443, 421, 25, 191, 365, 349, 335, 161, 155, 149, 9, 278, 269, 261, 505, 245, 475, 231, 449, 437, 213, 415, 405, 395, 193, 377, 369, 361, 353, 345, 169, 331, 325, 319, 313, 307, 301, 37, 145, 285, 281, 69, 271, 267, 263, 259, 509, 501, 493, 243, 479, 118, 465, 459, 113, 446, 55, 435, 429, 423, 209, 413, 51, 403, 199, 393, 97, 3, 379, 375, 371, 367, 363, 359, 355, 351, 347, 43, 85, 337, 333, 165, 327, 323, 5, 317, 157, 311, 77, 305, 303, 75, 297, 294, 73, 289,
                287, 71, 141, 279, 277, 275, 68, 135, 67, 133, 33, 262, 260, 129, 511, 507, 503, 499, 495, 491, 61, 121, 481, 477, 237, 235, 467, 232, 115, 457, 227, 451, 7, 445, 221, 439, 218, 433, 215, 427, 425, 211, 419, 417, 207, 411, 409, 203, 202, 401, 399, 396, 197, 49, 389, 387, 385, 383, 95, 189, 47, 187, 93, 185, 23, 183, 91, 181, 45, 179, 89, 177, 11, 175, 87, 173, 345, 343, 341, 339, 337, 21, 167, 83, 331, 329, 327, 163, 81, 323, 321, 319, 159, 79, 315, 313, 39, 155, 309, 307, 153, 305, 303, 151, 75, 299, 149, 37, 295, 147, 73, 291, 145, 289, 287, 143, 285, 71, 141, 281, 35, 279, 139, 69, 275, 137, 273, 17, 271, 135, 269, 267, 133,
                265, 33, 263, 131, 261, 130, 259, 129, 257, 1
            ];
            Zf.SHG_TABLE = [0, 9, 10, 11, 9, 12, 10, 11, 12, 9, 13, 13, 10, 9, 13, 13, 14, 14, 14, 14, 10, 13, 14, 14, 14, 13, 13, 13, 9, 14, 14, 14, 15, 14, 15, 14, 15, 15, 14, 15, 15, 15, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 15, 15, 15, 12, 14, 15, 15, 13, 15, 15, 15, 15, 16, 16, 16, 15, 16, 14, 16, 16, 14, 16, 13, 16, 16, 16, 15, 16, 13, 16, 15, 16, 14, 9, 16, 16, 16, 16, 16, 16, 16, 16, 16, 13, 14, 16, 16, 15, 16, 16, 10, 16, 15, 16, 14, 16, 16, 14, 16, 16, 14, 16, 16, 14, 15, 16, 16, 16, 14, 15, 14, 15, 13, 16, 16, 15, 17, 17, 17, 17, 17, 17, 14, 15, 17, 17, 16, 16, 17, 16, 15, 17, 16, 17, 11, 17, 16, 17, 16, 17,
                16, 17, 17, 16, 17, 17, 16, 17, 17, 16, 16, 17, 17, 17, 16, 14, 17, 17, 17, 17, 15, 16, 14, 16, 15, 16, 13, 16, 15, 16, 14, 16, 15, 16, 12, 16, 15, 16, 17, 17, 17, 17, 17, 13, 16, 15, 17, 17, 17, 16, 15, 17, 17, 17, 16, 15, 17, 17, 14, 16, 17, 17, 16, 17, 17, 16, 15, 17, 16, 14, 17, 16, 15, 17, 16, 17, 17, 16, 17, 15, 16, 17, 14, 17, 16, 15, 17, 16, 17, 13, 17, 16, 17, 17, 16, 17, 14, 17, 16, 17, 16, 17, 16, 17, 9
            ];
            ic.__identity = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
            Kd.onUpdate = new Ad;
            yi.sensorByID = new we;
            yi.sensors = [];
            ee.devices = new we;
            ee.onConnect = new vu;
            Zd.devices = new we;
            Zd.onConnect = new wu;
            Ge.onCancel =
                new vl;
            Ge.onEnd = new vl;
            Ge.onMove = new vl;
            Ge.onStart = new vl;
            Da.cache = new Eu;
            Da.onChange = new Ad;
            Da.bundlePaths = new fb;
            Da.libraries = new fb;
            Da.libraryPaths = new fb;
            Za.throwErrors = !0;
            K.epsilon = 1E-8;
            K.fluidAngularDragFriction = 2.5;
            K.fluidAngularDrag = 100;
            K.fluidVacuumDrag = .5;
            K.fluidLinearDrag = .5;
            K.collisionSlop = .2;
            K.collisionSlopCCD = .5;
            K.distanceThresholdCCD = .05;
            K.staticCCDLinearThreshold = .05;
            K.staticCCDAngularThreshold = .005;
            K.bulletCCDLinearThreshold = .125;
            K.bulletCCDAngularThreshold = .0125;
            K.dynamicSweepLinearThreshold =
                17;
            K.dynamicSweepAngularThreshold = .6;
            K.angularCCDSlipScale = .75;
            K.arbiterExpirationDelay = 6;
            K.staticFrictionThreshold = 2;
            K.elasticThreshold = 20;
            K.sleepDelay = 60;
            K.linearSleepThreshold = .2;
            K.angularSleepThreshold = .4;
            K.contactBiasCoef = .3;
            K.contactStaticBiasCoef = .6;
            K.contactContinuousBiasCoef = .4;
            K.contactContinuousStaticBiasCoef = .5;
            K.constraintLinearSlop = .1;
            K.constraintAngularSlop = .001;
            K.illConditionedThreshold = 2E8;
            Cj.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            pr.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                },
                fields: {
                    toJSON: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            zi.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                },
                fields: {
                    toJSON: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    _: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            qr.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                },
                fields: {
                    toJSON: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            Ul.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                },
                fields: {
                    toJSON: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            Ck.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                },
                fields: {
                    toJSON: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    _: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            fc.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            eb.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            eb.__regexAlign = new Ga("align\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
            eb.__regexBreakTag = new Ga("<br\\s*/?>", "gi");
            eb.__regexBlockIndent = new Ga("blockindent\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
            eb.__regexColor = new Ga("color\\s?=\\s?(\"#([^\"]+)\"|'#([^']+)')", "i");
            eb.__regexEntities = [new Ga("&quot;", "g"), new Ga("&apos;", "g"), new Ga("&amp;", "g"), new Ga("&lt;", "g"), new Ga("&gt;", "g"), new Ga("&nbsp;", "g")];
            eb.__regexFace = new Ga("face\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
            eb.__regexHTMLTag = new Ga("<.*?>", "g");
            eb.__regexHref = new Ga("href\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
            eb.__regexIndent = new Ga(" indent\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
            eb.__regexLeading = new Ga("leading\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
            eb.__regexLeftMargin = new Ga("leftmargin\\s?=\\s?(\"([^\"]+)\"|'([^']+)')",
                "i");
            eb.__regexRightMargin = new Ga("rightmargin\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
            eb.__regexSize = new Ga("size\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
            eb.__regexTabStops = new Ga("tabstops\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
            tk.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                },
                fields: {
                    touch: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            tk.__pool = new Rb(function() {
                return new tk
            }, function(a) {
                a.reset()
            });
            Rl.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Kb.__meta__ = {
                fields: {
                    image: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __framebufferContext: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __indexBufferContext: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __surface: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __textureContext: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __vertexBufferContext: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __fromImage: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            Kb.VERTEX_BUFFER_STRIDE = 14;
            Kb.__tempVector = new ok;
            Hg.__meta__ = {
                fields: {
                    __context: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __type: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            xh.__meta__ = {
                fields: {
                    context: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    applySmoothing: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    setTransform: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __setBlendModeContext: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    _: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            zl.__meta__ = {
                fields: {
                    element: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    _: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            Kh.SIN45 = .7071067811865476;
            Kh.TAN22 = .41421356237309503;
            Yi.__meta__ = {
                statics: {
                    create: {
                        SuppressWarnings: ["checkstyle:FieldDocComment"]
                    }
                },
                fields: {
                    parameters: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            Yi.__rootURL = La.get_supported() ? La.get_document().URL : "";
            hb.__pool = new Rb(function() {
                return new hb
            }, function(a) {
                a.setTo(0, 0, 0, 0)
            });
            Bb.__meta__ = {
                fields: {
                    gl: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __gl: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __matrix: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __projection: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __projectionFlipped: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            Bb.__alphaValue = [1];
            Bb.__colorMultipliersValue = [0, 0, 0, 0];
            Bb.__colorOffsetsValue = [0, 0, 0, 0];
            Bb.__emptyColorValue = [0, 0, 0, 0];
            Bb.__hasColorTransformValue = [!1];
            Bb.__scissorRectangle = new hb;
            Bb.__textureSizeValue = [0, 0];
            So.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                },
                fields: {
                    onComplete: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            qq.__meta__ = {
                fields: {
                    index: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    name: {
                        SuppressWarnings: ["checkstyle:FieldDocComment"]
                    }
                }
            };
            ll.__meta__ = {
                fields: {
                    index: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    name: {
                        SuppressWarnings: ["checkstyle:FieldDocComment"]
                    }
                }
            };
            Ci.__meta__ = {
                fields: {
                    __broadcastEvent: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __dispatchEvent: {
                        SuppressWarnings: [
                            ["checkstyle:Dynamic", "checkstyle:LeftCurly"]
                        ]
                    },
                    __dispatchStack: {
                        SuppressWarnings: [
                            ["checkstyle:Dynamic", "checkstyle:LeftCurly"]
                        ]
                    },
                    __dispatchTarget: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __handleError: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            Bk.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                },
                fields: {
                    _: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            Dk.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Vl.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Ff.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                },
                fields: {
                    o: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            Ff.empty = new Ff;
            A.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                },
                statics: {
                    windingRule: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    createBitmapFill: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    createGradientPattern: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            A.fillCommands = new Ff;
            A.strokeCommands = new Ff;
            av.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            lb.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            cj.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Fr.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Wl.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Ya.__meta__ = {
                fields: {
                    equals: {
                        SuppressWarnings: ["checkstyle:FieldDocComment"]
                    },
                    to3DString: {
                        SuppressWarnings: ["checkstyle:FieldDocComment"]
                    }
                }
            };
            Ya.__pool = new Rb(function() {
                    return new Ya
                },
                function(a) {
                    a.identity()
                });
            mc.__pool = new Rb(function() {
                return new mc
            }, function(a) {
                a.__identity()
            });
            vc.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            vc.blankBitmapData = new Kb(1, 1, !1, 0);
            vc.tempColorTransform = new mc(1, 1, 1, 1, 0, 0, 0, 0);
            Dl.opaqueBitmapData = new Kb(1, 1, !1, 0);
            Fk.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Go.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Hf.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Ek.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            vk.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Xc.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Xc.__regexColor = new Ga("color=(\"#([^\"]+)\"|'#([^']+)')", "i");
            Xc.__regexFace = new Ga("face=(\"([^\"]+)\"|'([^']+)')", "i");
            Xc.__regexFont = new Ga("<font ([^>]+)>", "gi");
            Xc.__regexCloseFont = new Ga("</font>", "gi");
            Xc.__regexSize = new Ga("size=(\"([^\"]+)\"|'([^']+)')", "i");
            Vg.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                },
                fields: {
                    obj: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            wk.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            ur.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                },
                fields: {
                    overrideIntValues: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            Hb.__glDepthStencil = -1;
            Hb.__glMaxTextureMaxAnisotropy = -1;
            Hb.__glMaxViewportDims = -1;
            Hb.__glMemoryCurrentAvailable = -1;
            Hb.__glMemoryTotalAvailable = -1;
            Hb.__glTextureMaxAnisotropy = -1;
            Ir.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Ko.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Ho.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            af.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            af.limitedProfile = !0;
            Fl.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Jr.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Gl.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            xk.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Kc.__meta__ = {
                fields: {
                    __textureContext: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __getGLFramebuffer: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            Jo.__lowMemoryMode = !1;
            Tl.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Sl.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            sb.CLICK = "click";
            sb.DOUBLE_CLICK = "doubleClick";
            sb.MIDDLE_CLICK = "middleClick";
            sb.MIDDLE_MOUSE_DOWN = "middleMouseDown";
            sb.MIDDLE_MOUSE_UP = "middleMouseUp";
            sb.MOUSE_DOWN = "mouseDown";
            sb.MOUSE_MOVE = "mouseMove";
            sb.MOUSE_OUT =
                "mouseOut";
            sb.MOUSE_OVER = "mouseOver";
            sb.MOUSE_UP = "mouseUp";
            sb.MOUSE_WHEEL = "mouseWheel";
            sb.RELEASE_OUTSIDE = "releaseOutside";
            sb.RIGHT_CLICK = "rightClick";
            sb.RIGHT_MOUSE_DOWN = "rightMouseDown";
            sb.RIGHT_MOUSE_UP = "rightMouseUp";
            sb.ROLL_OUT = "rollOut";
            sb.ROLL_OVER = "rollOver";
            xe.TOUCH_BEGIN = "touchBegin";
            xe.TOUCH_END = "touchEnd";
            xe.TOUCH_MOVE = "touchMove";
            xe.TOUCH_OUT = "touchOut";
            xe.TOUCH_OVER = "touchOver";
            xe.TOUCH_ROLL_OUT = "touchRollOut";
            xe.TOUCH_ROLL_OVER = "touchRollOver";
            xe.TOUCH_TAP = "touchTap";
            dl.available = !0;
            lh.__blurShader = new Mr;
            No.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Eh.__colorMatrixShader = new No;
            Kl.__hideShader = new Nr;
            Ta.__pool = new Rb(function() {
                return new Ta
            }, function(a) {
                a.setTo(0, 0)
            });
            Mi.__meta__ = {
                fields: {
                    clone: {
                        SuppressWarnings: ["checkstyle:FieldDocComment"]
                    }
                }
            };
            Pf.__soundChannels = [];
            Pf.__soundTransform = new Mi;
            me.defaultObjectEncoding = 10;
            Ej.followRedirects = !0;
            Ej.idleTimeout = 0;
            Ej.manageCookies = !1;
            Bl.currentDomain = new Bl(null);
            hd.__missingFontWarning = new fb;
            kf.__meta__ = {
                fields: {
                    clone: {
                        SuppressWarnings: ["checkstyle:FieldDocComment"]
                    }
                }
            };
            uc.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Pr.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Xb.__meta__ = {
                fields: {
                    addEventListener: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            Xb.numDevices = 0;
            Xb.__deviceList = [];
            Xb.__instances = [];
            Xb.__devices = new Qa;
            $u.__cursor = "auto";
            wa.__meta__ = {
                obj: {
                    SuppressWarnings: [
                        ["checkstyle:ConstantName", "checkstyle:FieldDocComment"]
                    ]
                }
            };
            wa.OPMAP = new fb;
            wa.REGMAP = new fb;
            wa.SAMPLEMAP = new fb;
            wa.initialized = !1;
            jc.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            ng.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            md.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Tb.cache = new Qr;
            Ae.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Ae.defaultObjectEncoding = 10;
            nv.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            ov.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            U.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Nb.FMAX = 1E100;
            Od._Interactor = 0;
            Od._ZPP_SimpleVert = 0;
            Od._ZPP_SimpleSeg = 0;
            Od._Constraint = 0;
            Od._CbType = 0;
            Od._CbSet = 0;
            ld.ANY_SHAPE = new $e;
            ld.ANY_BODY = new $e;
            ld.ANY_COMPOUND = new $e;
            ld.ANY_CONSTRAINT = new $e;
            N.internal = !1;
            cf.UCbSet = new Nl;
            cf.VCbSet = new Nl;
            cf.WCbSet = new Nl;
            cf.UCbType = new Zi;
            cf.VCbType = new Zi;
            cf.WCbType = new Zi;
            Wb.internal = !1;
            Wb.COL = 1;
            Wb.FLUID = 4;
            Wb.SENSOR = 2;
            ef.internal = !1;
            Pa.flowpoly = new Po;
            Pa.flowsegs = new Po;
            nb.nextId = 0;
            wj.types = [null,
                Pc.get_STATIC(), Pc.get_DYNAMIC(), Pc.get_KINEMATIC()
            ];
            ve.internal = !1;
            Jg.tmpaabb = new de;
            Ij.FATTEN = 3;
            Do.internal = !1;
            Aj.internal = !1;
            Vi.internal = !1;
            xj.internal = !1;
            Co.internal = !1;
            yo.internal = !1;
            xl.internal = !1;
            Bo.internal = !1;
            yl.internal = !1;
            Ui.internal = !1;
            wo.internal = !1;
            xo.internal = !1;
            Ti.internal = !1;
            Si.internal = !1;
            tj.internal = !1;
            X.main()
        })("undefined" != typeof t ? t : "undefined" != typeof window ? window : "undefined" != typeof self ? self : this, "undefined" != typeof window ? window : "undefined" != typeof G ? G : "undefined" != typeof self ?
            self : this)
    };
    fa.lime.embed = function(C) {
        var G = {},
            P = fa.lime.$scripts[C];
        if (!P) throw Error('Cannot find project name "' + C + '"');
        P(G, t);
        for (var M in G) fa[M] = fa[M] || G[M];
        (P = G.lime || window.lime) && P.embed && this != P.embed && P.embed.apply(P, arguments);
        return G
    };
    "function" == typeof define && define.amd && (define([], function() {
        return fa.lime
    }), define.__amd = define.amd, define.amd = null)
})("undefined" != typeof exports ? exports : "function" == typeof define && define.amd ? {} : "undefined" != typeof window ? window : "undefined" != typeof self ?
    self : this, "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this);
! function() {
    var fa = function() {
        this.init()
    };
    fa.prototype = {
        init: function() {
            var g = this || t;
            return g._counter = 1E3, g._html5AudioPool = [], g.html5PoolSize = 10, g._codecs = {}, g._howls = [], g._muted = !1, g._volume = 1, g._canPlayEvent = "canplaythrough", g._navigator = "undefined" != typeof window && window.navigator ? window.navigator : null, g.masterGain = null, g.noAudio = !1, g.usingWebAudio = !0, g.autoSuspend = !0, g.ctx = null, g.autoUnlock = !0, g._setup(), g
        },
        volume: function(l) {
            var p = this || t;
            if (l = parseFloat(l), p.ctx || g(), void 0 !== l && 0 <= l && 1 >=
                l) {
                if (p._volume = l, p._muted) return p;
                p.usingWebAudio && p.masterGain.gain.setValueAtTime(l, t.ctx.currentTime);
                for (var q = 0; q < p._howls.length; q++)
                    if (!p._howls[q]._webAudio)
                        for (var Ca = p._howls[q]._getSoundIds(), oa = 0; oa < Ca.length; oa++) {
                            var X = p._howls[q]._soundById(Ca[oa]);
                            X && X._node && (X._node.volume = X._volume * l)
                        }
                return p
            }
            return p._volume
        },
        mute: function(l) {
            var p = this || t;
            p.ctx || g();
            p._muted = l;
            p.usingWebAudio && p.masterGain.gain.setValueAtTime(l ? 0 : p._volume, t.ctx.currentTime);
            for (var q = 0; q < p._howls.length; q++)
                if (!p._howls[q]._webAudio)
                    for (var Ca =
                            p._howls[q]._getSoundIds(), oa = 0; oa < Ca.length; oa++) {
                        var X = p._howls[q]._soundById(Ca[oa]);
                        X && X._node && (X._node.muted = !!l || X._muted)
                    }
            return p
        },
        unload: function() {
            for (var l = this || t, p = l._howls.length - 1; 0 <= p; p--) l._howls[p].unload();
            return l.usingWebAudio && l.ctx && void 0 !== l.ctx.close && (l.ctx.close(), l.ctx = null, g()), l
        },
        codecs: function(g) {
            return (this || t)._codecs[g.replace(/^x-/, "")]
        },
        _setup: function() {
            var g = this || t;
            if (g.state = g.ctx ? g.ctx.state || "suspended" : "suspended", g._autoSuspend(), !g.usingWebAudio)
                if ("undefined" !=
                    typeof Audio) try {
                    var p = new Audio;
                    void 0 === p.oncanplaythrough && (g._canPlayEvent = "canplay")
                } catch (pa) {
                    g.noAudio = !0
                } else g.noAudio = !0;
            try {
                p = new Audio, p.muted && (g.noAudio = !0)
            } catch (pa) {}
            return g.noAudio || g._setupCodecs(), g
        },
        _setupCodecs: function() {
            var g = this || t,
                p = null;
            try {
                p = "undefined" != typeof Audio ? new Audio : null
            } catch (oa) {
                return g
            }
            if (!p || "function" != typeof p.canPlayType) return g;
            var q = p.canPlayType("audio/mpeg;").replace(/^no$/, ""),
                Ca = g._navigator && g._navigator.userAgent.match(/OPR\/([0-6].)/g);
            Ca =
                Ca && 33 > parseInt(Ca[0].split("/")[1], 10);
            return g._codecs = {
                mp3: !(Ca || !q && !p.canPlayType("audio/mp3;").replace(/^no$/, "")),
                mpeg: !!q,
                opus: !!p.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/, ""),
                ogg: !!p.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
                oga: !!p.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
                wav: !!p.canPlayType('audio/wav; codecs="1"').replace(/^no$/, ""),
                aac: !!p.canPlayType("audio/aac;").replace(/^no$/, ""),
                caf: !!p.canPlayType("audio/x-caf;").replace(/^no$/,
                    ""),
                m4a: !!(p.canPlayType("audio/x-m4a;") || p.canPlayType("audio/m4a;") || p.canPlayType("audio/aac;")).replace(/^no$/, ""),
                mp4: !!(p.canPlayType("audio/x-mp4;") || p.canPlayType("audio/mp4;") || p.canPlayType("audio/aac;")).replace(/^no$/, ""),
                weba: !!p.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, ""),
                webm: !!p.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, ""),
                dolby: !!p.canPlayType('audio/mp4; codecs="ec-3"').replace(/^no$/, ""),
                flac: !!(p.canPlayType("audio/x-flac;") || p.canPlayType("audio/flac;")).replace(/^no$/,
                    "")
            }, g
        },
        _unlockAudio: function() {
            var g = this || t,
                p = /iPhone|iPad|iPod|Android|BlackBerry|BB10|Silk|Mobi|Chrome|Safari/i.test(g._navigator && g._navigator.userAgent);
            if (!g._audioUnlocked && g.ctx && p) {
                g._audioUnlocked = !1;
                g.autoUnlock = !1;
                g._mobileUnloaded || 44100 === g.ctx.sampleRate || (g._mobileUnloaded = !0, g.unload());
                g._scratchBuffer = g.ctx.createBuffer(1, 1, 22050);
                var q = function(l) {
                    for (l = 0; l < g.html5PoolSize; l++) {
                        var p = new Audio;
                        p._unlocked = !0;
                        g._releaseHtml5Audio(p)
                    }
                    for (l = 0; l < g._howls.length; l++)
                        if (!g._howls[l]._webAudio) {
                            p =
                                g._howls[l]._getSoundIds();
                            for (var L = 0; L < p.length; L++) {
                                var t = g._howls[l]._soundById(p[L]);
                                t && t._node && !t._node._unlocked && (t._node._unlocked = !0, t._node.load())
                            }
                        } g._autoResume();
                    var pa = g.ctx.createBufferSource();
                    pa.buffer = g._scratchBuffer;
                    pa.connect(g.ctx.destination);
                    void 0 === pa.start ? pa.noteOn(0) : pa.start(0);
                    "function" == typeof g.ctx.resume && g.ctx.resume();
                    pa.onended = function() {
                        pa.disconnect(0);
                        g._audioUnlocked = !0;
                        document.removeEventListener("touchstart", q, !0);
                        document.removeEventListener("touchend",
                            q, !0);
                        document.removeEventListener("click", q, !0);
                        for (var l = 0; l < g._howls.length; l++) g._howls[l]._emit("unlock")
                    }
                };
                return document.addEventListener("touchstart", q, !0), document.addEventListener("touchend", q, !0), document.addEventListener("click", q, !0), g
            }
        },
        _obtainHtml5Audio: function() {
            var g = this || t;
            if (g._html5AudioPool.length) return g._html5AudioPool.pop();
            g = (new Audio).play();
            return g && "undefined" != typeof Promise && (g instanceof Promise || "function" == typeof g.then) && g.catch(function() {
                    console.warn("HTML5 Audio pool exhausted, returning potentially locked audio object.")
                }),
                new Audio
        },
        _releaseHtml5Audio: function(g) {
            var l = this || t;
            return g._unlocked && l._html5AudioPool.push(g), l
        },
        _autoSuspend: function() {
            var g = this;
            if (g.autoSuspend && g.ctx && void 0 !== g.ctx.suspend && t.usingWebAudio) {
                for (var p = 0; p < g._howls.length; p++)
                    if (g._howls[p]._webAudio)
                        for (var q = 0; q < g._howls[p]._sounds.length; q++)
                            if (!g._howls[p]._sounds[q]._paused) return g;
                return g._suspendTimer && clearTimeout(g._suspendTimer), g._suspendTimer = setTimeout(function() {
                    g.autoSuspend && (g._suspendTimer = null, g.state = "suspending",
                        g.ctx.suspend().then(function() {
                            g.state = "suspended";
                            g._resumeAfterSuspend && (delete g._resumeAfterSuspend, g._autoResume())
                        }))
                }, 3E4), g
            }
        },
        _autoResume: function() {
            var g = this;
            if (g.ctx && void 0 !== g.ctx.resume && t.usingWebAudio) return "running" === g.state && g._suspendTimer ? (clearTimeout(g._suspendTimer), g._suspendTimer = null) : "suspended" === g.state ? (g.ctx.resume().then(function() {
                g.state = "running";
                for (var l = 0; l < g._howls.length; l++) g._howls[l]._emit("resume")
            }), g._suspendTimer && (clearTimeout(g._suspendTimer), g._suspendTimer =
                null)) : "suspending" === g.state && (g._resumeAfterSuspend = !0), g
        }
    };
    var t = new fa,
        C = function(g) {
            if (!g.src || 0 === g.src.length) return void console.error("An array of source files must be passed with any new Howl.");
            this.init(g)
        };
    C.prototype = {
        init: function(l) {
            var p = this;
            return t.ctx || g(), p._autoplay = l.autoplay || !1, p._format = "string" != typeof l.format ? l.format : [l.format], p._html5 = l.html5 || !1, p._muted = l.mute || !1, p._loop = l.loop || !1, p._pool = l.pool || 5, p._preload = "boolean" != typeof l.preload || l.preload, p._rate = l.rate ||
                1, p._sprite = l.sprite || {}, p._src = "string" != typeof l.src ? l.src : [l.src], p._volume = void 0 !== l.volume ? l.volume : 1, p._xhrWithCredentials = l.xhrWithCredentials || !1, p._duration = 0, p._state = "unloaded", p._sounds = [], p._endTimers = {}, p._queue = [], p._playLock = !1, p._onend = l.onend ? [{
                    fn: l.onend
                }] : [], p._onfade = l.onfade ? [{
                    fn: l.onfade
                }] : [], p._onload = l.onload ? [{
                    fn: l.onload
                }] : [], p._onloaderror = l.onloaderror ? [{
                    fn: l.onloaderror
                }] : [], p._onplayerror = l.onplayerror ? [{
                    fn: l.onplayerror
                }] : [], p._onpause = l.onpause ? [{
                    fn: l.onpause
                }] : [],
                p._onplay = l.onplay ? [{
                    fn: l.onplay
                }] : [], p._onstop = l.onstop ? [{
                    fn: l.onstop
                }] : [], p._onmute = l.onmute ? [{
                    fn: l.onmute
                }] : [], p._onvolume = l.onvolume ? [{
                    fn: l.onvolume
                }] : [], p._onrate = l.onrate ? [{
                    fn: l.onrate
                }] : [], p._onseek = l.onseek ? [{
                    fn: l.onseek
                }] : [], p._onunlock = l.onunlock ? [{
                    fn: l.onunlock
                }] : [], p._onresume = [], p._webAudio = t.usingWebAudio && !p._html5, void 0 !== t.ctx && t.ctx && t.autoUnlock && t._unlockAudio(), t._howls.push(p), p._autoplay && p._queue.push({
                    event: "play",
                    action: function() {
                        p.play()
                    }
                }), p._preload && p.load(), p
        },
        load: function() {
            var g =
                null;
            if (t.noAudio) return void this._emit("loaderror", null, "No audio support.");
            "string" == typeof this._src && (this._src = [this._src]);
            for (var p = 0; p < this._src.length; p++) {
                var q;
                if (this._format && this._format[p]) var Ca = this._format[p];
                else {
                    if ("string" != typeof(q = this._src[p])) {
                        this._emit("loaderror", null, "Non-string found in selected audio sources - ignoring.");
                        continue
                    }(Ca = /^data:audio\/([^;,]+);/i.exec(q)) || (Ca = /\.([^.]+)$/.exec(q.split("?", 1)[0]));
                    Ca && (Ca = Ca[1].toLowerCase())
                }
                if (Ca || console.warn('No file extension was found. Consider using the "format" property or specify an extension.'),
                    Ca && t.codecs(Ca)) {
                    g = this._src[p];
                    break
                }
            }
            return g ? (this._src = g, this._state = "loading", "https:" === window.location.protocol && "http:" === g.slice(0, 5) && (this._html5 = !0, this._webAudio = !1), new G(this), this._webAudio && M(this), this) : void this._emit("loaderror", null, "No codec support for selected audio sources.")
        },
        play: function(g, p) {
            var l = this,
                q = null;
            if ("number" == typeof g) q = g, g = null;
            else {
                if ("string" == typeof g && "loaded" === l._state && !l._sprite[g]) return null;
                if (void 0 === g && (g = "__default", !l._playLock)) {
                    for (var L =
                            0, X = 0; X < l._sounds.length; X++) l._sounds[X]._paused && !l._sounds[X]._ended && (L++, q = l._sounds[X]._id);
                    1 === L ? g = null : q = null
                }
            }
            var C = q ? l._soundById(q) : l._inactiveSound();
            if (!C) return null;
            if (q && !g && (g = C._sprite || "__default"), "loaded" !== l._state) {
                C._sprite = g;
                C._ended = !1;
                var G = C._id;
                return l._queue.push({
                    event: "play",
                    action: function() {
                        l.play(G)
                    }
                }), G
            }
            if (q && !C._paused) return p || l._loadQueue("play"), C._id;
            l._webAudio && t._autoResume();
            var P = Math.max(0, 0 < C._seek ? C._seek : l._sprite[g][0] / 1E3),
                M = Math.max(0, (l._sprite[g][0] +
                    l._sprite[g][1]) / 1E3 - P),
                fa = 1E3 * M / Math.abs(C._rate),
                Aa = l._sprite[g][0] / 1E3,
                Qa = (l._sprite[g][0] + l._sprite[g][1]) / 1E3,
                Qb = !(!C._loop && !l._sprite[g][2]);
            C._sprite = g;
            C._ended = !1;
            var R = function() {
                C._paused = !1;
                C._seek = P;
                C._start = Aa;
                C._stop = Qa;
                C._loop = Qb
            };
            if (P >= Qa) return void l._ended(C);
            var ra = C._node;
            if (l._webAudio) q = function() {
                l._playLock = !1;
                R();
                l._refreshBuffer(C);
                ra.gain.setValueAtTime(C._muted || l._muted ? 0 : C._volume, t.ctx.currentTime);
                C._playStart = t.ctx.currentTime;
                void 0 === ra.bufferSource.start ? C._loop ?
                    ra.bufferSource.noteGrainOn(0, P, 86400) : ra.bufferSource.noteGrainOn(0, P, M) : C._loop ? ra.bufferSource.start(0, P, 86400) : ra.bufferSource.start(0, P, M);
                fa !== 1 / 0 && (l._endTimers[C._id] = setTimeout(l._ended.bind(l, C), fa));
                p || setTimeout(function() {
                    l._emit("play", C._id);
                    l._loadQueue()
                }, 0)
            }, "running" === t.state ? q() : (l._playLock = !0, l.once("resume", q), l._clearTimer(C._id));
            else {
                var gb = function() {
                    ra.currentTime = P;
                    ra.muted = C._muted || l._muted || t._muted || ra.muted;
                    ra.volume = C._volume * t.volume();
                    ra.playbackRate = C._rate;
                    try {
                        var q = ra.play();
                        if (q && "undefined" != typeof Promise && (q instanceof Promise || "function" == typeof q.then) ? (l._playLock = !0, R(), q.then(function() {
                                l._playLock = !1;
                                ra._unlocked = !0;
                                p || (l._emit("play", C._id), l._loadQueue())
                            }).catch(function() {
                                l._playLock = !1;
                                l._emit("playerror", C._id, "Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction.");
                                C._ended = !0;
                                C._paused = !0
                            })) : p || (l._playLock = !1, R(), l._emit("play", C._id), l._loadQueue()),
                            ra.playbackRate = C._rate, ra.paused) return void l._emit("playerror", C._id, "Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction.");
                        "__default" !== g || C._loop ? l._endTimers[C._id] = setTimeout(l._ended.bind(l, C), fa) : (l._endTimers[C._id] = function() {
                            l._ended(C);
                            ra.removeEventListener("ended", l._endTimers[C._id], !1)
                        }, ra.addEventListener("ended", l._endTimers[C._id], !1))
                    } catch (nd) {
                        l._emit("playerror", C._id, nd)
                    }
                };
                q = window && window.ejecta ||
                    !ra.readyState && t._navigator.isCocoonJS;
                if (3 <= ra.readyState || q) gb();
                else {
                    l._playLock = !0;
                    var S = function() {
                        gb();
                        ra.removeEventListener(t._canPlayEvent, S, !1)
                    };
                    ra.addEventListener(t._canPlayEvent, S, !1);
                    l._clearTimer(C._id)
                }
            }
            return C._id
        },
        pause: function(g, p) {
            var l = this;
            if ("loaded" !== l._state || l._playLock) return l._queue.push({
                event: "pause",
                action: function() {
                    l.pause(g)
                }
            }), l;
            for (var q = l._getSoundIds(g), t = 0; t < q.length; t++) {
                l._clearTimer(q[t]);
                var L = l._soundById(q[t]);
                if (L && !L._paused && (L._seek = l.seek(q[t]),
                        L._rateSeek = 0, L._paused = !0, l._stopFade(q[t]), L._node))
                    if (l._webAudio) {
                        if (!L._node.bufferSource) continue;
                        void 0 === L._node.bufferSource.stop ? L._node.bufferSource.noteOff(0) : L._node.bufferSource.stop(0);
                        l._cleanBuffer(L._node)
                    } else isNaN(L._node.duration) && L._node.duration !== 1 / 0 || L._node.pause();
                p || l._emit("pause", L ? L._id : null)
            }
            return l
        },
        stop: function(g, p) {
            var l = this;
            if ("loaded" !== l._state || l._playLock) return l._queue.push({
                event: "stop",
                action: function() {
                    l.stop(g)
                }
            }), l;
            for (var q = l._getSoundIds(g), t =
                    0; t < q.length; t++) {
                l._clearTimer(q[t]);
                var L = l._soundById(q[t]);
                L && (L._seek = L._start || 0, L._rateSeek = 0, L._paused = !0, L._ended = !0, l._stopFade(q[t]), L._node && (l._webAudio ? L._node.bufferSource && (void 0 === L._node.bufferSource.stop ? L._node.bufferSource.noteOff(0) : L._node.bufferSource.stop(0), l._cleanBuffer(L._node)) : isNaN(L._node.duration) && L._node.duration !== 1 / 0 || (L._node.currentTime = L._start || 0, L._node.pause())), p || l._emit("stop", L._id))
            }
            return l
        },
        mute: function(g, p) {
            var l = this;
            if ("loaded" !== l._state || l._playLock) return l._queue.push({
                event: "mute",
                action: function() {
                    l.mute(g, p)
                }
            }), l;
            if (void 0 === p) {
                if ("boolean" != typeof g) return l._muted;
                l._muted = g
            }
            for (var q = l._getSoundIds(p), L = 0; L < q.length; L++) {
                var C = l._soundById(q[L]);
                C && (C._muted = g, C._interval && l._stopFade(C._id), l._webAudio && C._node ? C._node.gain.setValueAtTime(g ? 0 : C._volume, t.ctx.currentTime) : C._node && (C._node.muted = !!t._muted || g), l._emit("mute", C._id))
            }
            return l
        },
        volume: function() {
            var g, p, q = this,
                C = arguments;
            if (0 === C.length) return q._volume;
            1 === C.length || 2 === C.length && void 0 === C[1] ? 0 <= q._getSoundIds().indexOf(C[0]) ?
                p = parseInt(C[0], 10) : g = parseFloat(C[0]) : 2 <= C.length && (g = parseFloat(C[0]), p = parseInt(C[1], 10));
            var oa;
            if (!(void 0 !== g && 0 <= g && 1 >= g)) return oa = p ? q._soundById(p) : q._sounds[0], oa ? oa._volume : 0;
            if ("loaded" !== q._state || q._playLock) return q._queue.push({
                event: "volume",
                action: function() {
                    q.volume.apply(q, C)
                }
            }), q;
            void 0 === p && (q._volume = g);
            p = q._getSoundIds(p);
            for (var X = 0; X < p.length; X++)(oa = q._soundById(p[X])) && (oa._volume = g, C[2] || q._stopFade(p[X]), q._webAudio && oa._node && !oa._muted ? oa._node.gain.setValueAtTime(g,
                t.ctx.currentTime) : oa._node && !oa._muted && (oa._node.volume = g * t.volume()), q._emit("volume", oa._id));
            return q
        },
        fade: function(g, p, q, C) {
            var l = this;
            if ("loaded" !== l._state || l._playLock) return l._queue.push({
                event: "fade",
                action: function() {
                    l.fade(g, p, q, C)
                }
            }), l;
            g = parseFloat(g);
            p = parseFloat(p);
            q = parseFloat(q);
            l.volume(g, C);
            for (var L = l._getSoundIds(C), pa = 0; pa < L.length; pa++) {
                var G = l._soundById(L[pa]);
                if (G) {
                    if (C || l._stopFade(L[pa]), l._webAudio && !G._muted) {
                        var Ca = t.ctx.currentTime,
                            P = Ca + q / 1E3;
                        G._volume = g;
                        G._node.gain.setValueAtTime(g,
                            Ca);
                        G._node.gain.linearRampToValueAtTime(p, P)
                    }
                    l._startFadeInterval(G, g, p, q, L[pa], void 0 === C)
                }
            }
            return l
        },
        _startFadeInterval: function(g, p, q, t, C, X) {
            var l = this,
                L = p,
                pa = q - p;
            C = Math.abs(pa / .01);
            C = Math.max(4, 0 < C ? t / C : t);
            var G = Date.now();
            g._fadeTo = q;
            g._interval = setInterval(function() {
                var C = (Date.now() - G) / t;
                G = Date.now();
                L += pa * C;
                L = Math.max(0, L);
                L = Math.min(1, L);
                L = Math.round(100 * L) / 100;
                l._webAudio ? g._volume = L : l.volume(L, g._id, !0);
                X && (l._volume = L);
                (q < p && L <= q || q > p && L >= q) && (clearInterval(g._interval), g._interval = null,
                    g._fadeTo = null, l.volume(q, g._id), l._emit("fade", g._id))
            }, C)
        },
        _stopFade: function(g) {
            var l = this._soundById(g);
            return l && l._interval && (this._webAudio && l._node.gain.cancelScheduledValues(t.ctx.currentTime), clearInterval(l._interval), l._interval = null, this.volume(l._fadeTo, g), l._fadeTo = null, this._emit("fade", g)), this
        },
        loop: function() {
            var g, p, q, t = arguments;
            if (0 === t.length) return this._loop;
            if (1 === t.length) {
                if ("boolean" != typeof t[0]) return !!(q = this._soundById(parseInt(t[0], 10))) && q._loop;
                this._loop = g = t[0]
            } else 2 ===
                t.length && (g = t[0], p = parseInt(t[1], 10));
            p = this._getSoundIds(p);
            for (t = 0; t < p.length; t++)(q = this._soundById(p[t])) && (q._loop = g, this._webAudio && q._node && q._node.bufferSource && (q._node.bufferSource.loop = g, g && (q._node.bufferSource.loopStart = q._start || 0, q._node.bufferSource.loopEnd = q._stop)));
            return this
        },
        rate: function() {
            var g, p, q = this,
                C = arguments;
            0 === C.length ? p = q._sounds[0]._id : 1 === C.length ? 0 <= q._getSoundIds().indexOf(C[0]) ? p = parseInt(C[0], 10) : g = parseFloat(C[0]) : 2 === C.length && (g = parseFloat(C[0]), p = parseInt(C[1],
                10));
            var G;
            if ("number" != typeof g) return G = q._soundById(p), G ? G._rate : q._rate;
            if ("loaded" !== q._state || q._playLock) return q._queue.push({
                event: "rate",
                action: function() {
                    q.rate.apply(q, C)
                }
            }), q;
            void 0 === p && (q._rate = g);
            p = q._getSoundIds(p);
            for (var X = 0; X < p.length; X++)
                if (G = q._soundById(p[X])) {
                    q.playing(p[X]) && (G._rateSeek = q.seek(p[X]), G._playStart = q._webAudio ? t.ctx.currentTime : G._playStart);
                    G._rate = g;
                    q._webAudio && G._node && G._node.bufferSource ? G._node.bufferSource.playbackRate.setValueAtTime(g, t.ctx.currentTime) :
                        G._node && (G._node.playbackRate = g);
                    var P = q.seek(p[X]);
                    P = 1E3 * ((q._sprite[G._sprite][0] + q._sprite[G._sprite][1]) / 1E3 - P) / Math.abs(G._rate);
                    !q._endTimers[p[X]] && G._paused || (q._clearTimer(p[X]), q._endTimers[p[X]] = setTimeout(q._ended.bind(q, G), P));
                    q._emit("rate", G._id)
                } return q
        },
        seek: function() {
            var g, p, q = this,
                C = arguments;
            0 === C.length ? p = q._sounds[0]._id : 1 === C.length ? 0 <= q._getSoundIds().indexOf(C[0]) ? p = parseInt(C[0], 10) : q._sounds.length && (p = q._sounds[0]._id, g = parseFloat(C[0])) : 2 === C.length && (g = parseFloat(C[0]),
                p = parseInt(C[1], 10));
            if (void 0 === p) return q;
            if ("loaded" !== q._state || q._playLock) return q._queue.push({
                event: "seek",
                action: function() {
                    q.seek.apply(q, C)
                }
            }), q;
            var G = q._soundById(p);
            if (G) {
                if (!("number" == typeof g && 0 <= g)) return q._webAudio ? (g = q.playing(p) ? t.ctx.currentTime - G._playStart : 0, G._seek + ((G._rateSeek ? G._rateSeek - G._seek : 0) + g * Math.abs(G._rate))) : G._node.currentTime;
                var X = q.playing(p);
                X && q.pause(p, !0);
                G._seek = g;
                G._ended = !1;
                q._clearTimer(p);
                q._webAudio || !G._node || isNaN(G._node.duration) || (G._node.currentTime =
                    g);
                var P = function() {
                    q._emit("seek", p);
                    X && q.play(p, !0)
                };
                if (X && !q._webAudio) {
                    var M = function() {
                        q._playLock ? setTimeout(M, 0) : P()
                    };
                    setTimeout(M, 0)
                } else P()
            }
            return q
        },
        playing: function(g) {
            if ("number" == typeof g) return g = this._soundById(g), !!g && !g._paused;
            for (g = 0; g < this._sounds.length; g++)
                if (!this._sounds[g]._paused) return !0;
            return !1
        },
        duration: function(g) {
            var l = this._duration;
            g = this._soundById(g);
            return g && (l = this._sprite[g._sprite][1] / 1E3), l
        },
        state: function() {
            return this._state
        },
        unload: function() {
            for (var g =
                    this._sounds, p = 0; p < g.length; p++)(g[p]._paused || this.stop(g[p]._id), this._webAudio) || (/MSIE |Trident\//.test(t._navigator && t._navigator.userAgent) || (g[p]._node.src = "data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA"), g[p]._node.removeEventListener("error", g[p]._errorFn, !1), g[p]._node.removeEventListener(t._canPlayEvent, g[p]._loadFn, !1), t._releaseHtml5Audio(g[p]._node)), delete g[p]._node, this._clearTimer(g[p]._id);
            p = t._howls.indexOf(this);
            0 <= p && t._howls.splice(p,
                1);
            g = !0;
            for (p = 0; p < t._howls.length; p++)
                if (t._howls[p]._src === this._src || 0 <= this._src.indexOf(t._howls[p]._src)) {
                    g = !1;
                    break
                } return P && g && delete P[this._src], t.noAudio = !1, this._state = "unloaded", this._sounds = [], null
        },
        on: function(g, p, q, t) {
            g = this["_on" + g];
            return "function" == typeof p && g.push(t ? {
                id: q,
                fn: p,
                once: t
            } : {
                id: q,
                fn: p
            }), this
        },
        off: function(g, p, q) {
            var l = this["_on" + g];
            if ("number" == typeof p && (q = p, p = null), p || q)
                for (g = 0; g < l.length; g++) {
                    var t = q === l[g].id;
                    if (p === l[g].fn && t || !p && t) {
                        l.splice(g, 1);
                        break
                    }
                } else if (g) this["_on" +
                    g] = [];
                else
                    for (p = Object.keys(this), g = 0; g < p.length; g++) 0 === p[g].indexOf("_on") && Array.isArray(this[p[g]]) && (this[p[g]] = []);
            return this
        },
        once: function(g, p, q) {
            return this.on(g, p, q, 1), this
        },
        _emit: function(g, p, q) {
            for (var l = this["_on" + g], t = l.length - 1; 0 <= t; t--) l[t].id && l[t].id !== p && "load" !== g || (setTimeout(function(g) {
                g.call(this, p, q)
            }.bind(this, l[t].fn), 0), l[t].once && this.off(g, l[t].fn, l[t].id));
            return this._loadQueue(g), this
        },
        _loadQueue: function(g) {
            if (0 < this._queue.length) {
                var l = this._queue[0];
                l.event ===
                    g && (this._queue.shift(), this._loadQueue());
                g || l.action()
            }
            return this
        },
        _ended: function(g) {
            var l = g._sprite;
            if (!this._webAudio && g._node && !g._node.paused && !g._node.ended && g._node.currentTime < g._stop) return setTimeout(this._ended.bind(this, g), 100), this;
            l = !(!g._loop && !this._sprite[l][2]);
            if (this._emit("end", g._id), !this._webAudio && l && this.stop(g._id, !0).play(g._id), this._webAudio && l) {
                this._emit("play", g._id);
                g._seek = g._start || 0;
                g._rateSeek = 0;
                g._playStart = t.ctx.currentTime;
                var p = 1E3 * (g._stop - g._start) / Math.abs(g._rate);
                this._endTimers[g._id] = setTimeout(this._ended.bind(this, g), p)
            }
            return this._webAudio && !l && (g._paused = !0, g._ended = !0, g._seek = g._start || 0, g._rateSeek = 0, this._clearTimer(g._id), this._cleanBuffer(g._node), t._autoSuspend()), this._webAudio || l || this.stop(g._id, !0), this
        },
        _clearTimer: function(g) {
            if (this._endTimers[g]) {
                if ("function" != typeof this._endTimers[g]) clearTimeout(this._endTimers[g]);
                else {
                    var l = this._soundById(g);
                    l && l._node && l._node.removeEventListener("ended", this._endTimers[g], !1)
                }
                delete this._endTimers[g]
            }
            return this
        },
        _soundById: function(g) {
            for (var l = 0; l < this._sounds.length; l++)
                if (g === this._sounds[l]._id) return this._sounds[l];
            return null
        },
        _inactiveSound: function() {
            this._drain();
            for (var g = 0; g < this._sounds.length; g++)
                if (this._sounds[g]._ended) return this._sounds[g].reset();
            return new G(this)
        },
        _drain: function() {
            var g = this._pool,
                p = 0,
                q;
            if (!(this._sounds.length < g)) {
                for (q = 0; q < this._sounds.length; q++) this._sounds[q]._ended && p++;
                for (q = this._sounds.length - 1; 0 <= q && !(p <= g); q--) this._sounds[q]._ended && (this._webAudio && this._sounds[q]._node &&
                    this._sounds[q]._node.disconnect(0), this._sounds.splice(q, 1), p--)
            }
        },
        _getSoundIds: function(g) {
            if (void 0 === g) {
                g = [];
                for (var l = 0; l < this._sounds.length; l++) g.push(this._sounds[l]._id);
                return g
            }
            return [g]
        },
        _refreshBuffer: function(g) {
            return g._node.bufferSource = t.ctx.createBufferSource(), g._node.bufferSource.buffer = P[this._src], g._panner ? g._node.bufferSource.connect(g._panner) : g._node.bufferSource.connect(g._node), g._node.bufferSource.loop = g._loop, g._loop && (g._node.bufferSource.loopStart = g._start || 0, g._node.bufferSource.loopEnd =
                g._stop || 0), g._node.bufferSource.playbackRate.setValueAtTime(g._rate, t.ctx.currentTime), this
        },
        _cleanBuffer: function(g) {
            var l = t._navigator && 0 <= t._navigator.vendor.indexOf("Apple");
            if (t._scratchBuffer && g.bufferSource && (g.bufferSource.onended = null, g.bufferSource.disconnect(0), l)) try {
                g.bufferSource.buffer = t._scratchBuffer
            } catch (pa) {}
            return g.bufferSource = null, this
        }
    };
    var G = function(g) {
        this._parent = g;
        this.init()
    };
    G.prototype = {
        init: function() {
            var g = this._parent;
            return this._muted = g._muted, this._loop = g._loop,
                this._volume = g._volume, this._rate = g._rate, this._seek = 0, this._paused = !0, this._ended = !0, this._sprite = "__default", this._id = ++t._counter, g._sounds.push(this), this.create(), this
        },
        create: function() {
            var g = this._parent,
                p = t._muted || this._muted || this._parent._muted ? 0 : this._volume;
            return g._webAudio ? (this._node = void 0 === t.ctx.createGain ? t.ctx.createGainNode() : t.ctx.createGain(), this._node.gain.setValueAtTime(p, t.ctx.currentTime), this._node.paused = !0, this._node.connect(t.masterGain)) : (this._node = t._obtainHtml5Audio(),
                this._errorFn = this._errorListener.bind(this), this._node.addEventListener("error", this._errorFn, !1), this._loadFn = this._loadListener.bind(this), this._node.addEventListener(t._canPlayEvent, this._loadFn, !1), this._node.src = g._src, this._node.preload = "auto", this._node.volume = p * t.volume(), this._node.load()), this
        },
        reset: function() {
            var g = this._parent;
            return this._muted = g._muted, this._loop = g._loop, this._volume = g._volume, this._rate = g._rate, this._seek = 0, this._rateSeek = 0, this._paused = !0, this._ended = !0, this._sprite =
                "__default", this._id = ++t._counter, this
        },
        _errorListener: function() {
            this._parent._emit("loaderror", this._id, this._node.error ? this._node.error.code : 0);
            this._node.removeEventListener("error", this._errorFn, !1)
        },
        _loadListener: function() {
            var g = this._parent;
            g._duration = Math.ceil(10 * this._node.duration) / 10;
            0 === Object.keys(g._sprite).length && (g._sprite = {
                __default: [0, 1E3 * g._duration]
            });
            "loaded" !== g._state && (g._state = "loaded", g._emit("load"), g._loadQueue());
            this._node.removeEventListener(t._canPlayEvent, this._loadFn,
                !1)
        }
    };
    var P = {},
        M = function(g) {
            var l = g._src;
            if (P[l]) return g._duration = P[l].duration, void q(g);
            if (/^data:[^;]+;base64,/.test(l)) {
                for (var t = atob(l.split(",")[1]), C = new Uint8Array(t.length), G = 0; G < t.length; ++G) C[G] = t.charCodeAt(G);
                Aa(C.buffer, g)
            } else {
                var X = new XMLHttpRequest;
                X.open("GET", l, !0);
                X.withCredentials = g._xhrWithCredentials;
                X.responseType = "arraybuffer";
                X.onload = function() {
                    var l = (X.status + "")[0];
                    if ("0" !== l && "2" !== l && "3" !== l) return void g._emit("loaderror", null, "Failed loading audio file with status: " +
                        X.status + ".");
                    Aa(X.response, g)
                };
                X.onerror = function() {
                    g._webAudio && (g._html5 = !0, g._webAudio = !1, g._sounds = [], delete P[l], g.load())
                };
                p(X)
            }
        },
        p = function(g) {
            try {
                g.send()
            } catch (L) {
                g.onerror()
            }
        },
        Aa = function(g, p) {
            var l = function() {
                    p._emit("loaderror", null, "Decoding audio data failed.")
                },
                C = function(g) {
                    g && 0 < p._sounds.length ? (P[p._src] = g, q(p, g)) : l()
                };
            "undefined" != typeof Promise && 1 === t.ctx.decodeAudioData.length ? t.ctx.decodeAudioData(g).then(C).catch(l) : t.ctx.decodeAudioData(g, C, l)
        },
        q = function(g, p) {
            p && !g._duration &&
                (g._duration = p.duration);
            0 === Object.keys(g._sprite).length && (g._sprite = {
                __default: [0, 1E3 * g._duration]
            });
            "loaded" !== g._state && (g._state = "loaded", g._emit("load"), g._loadQueue())
        },
        g = function() {
            if (t.usingWebAudio) {
                try {
                    "undefined" != typeof AudioContext ? t.ctx = new AudioContext : "undefined" != typeof webkitAudioContext ? t.ctx = new webkitAudioContext : t.usingWebAudio = !1
                } catch (pa) {
                    t.usingWebAudio = !1
                }
                t.ctx || (t.usingWebAudio = !1);
                var g = /iP(hone|od|ad)/.test(t._navigator && t._navigator.platform),
                    p = t._navigator && t._navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/);
                p = p ? parseInt(p[1], 10) : null;
                g && p && 9 > p && (g = /safari/.test(t._navigator && t._navigator.userAgent.toLowerCase()), (t._navigator && t._navigator.standalone && !g || t._navigator && !t._navigator.standalone && !g) && (t.usingWebAudio = !1));
                t.usingWebAudio && (t.masterGain = void 0 === t.ctx.createGain ? t.ctx.createGainNode() : t.ctx.createGain(), t.masterGain.gain.setValueAtTime(t._muted ? 0 : 1, t.ctx.currentTime), t.masterGain.connect(t.ctx.destination));
                t._setup()
            }
        };
    "function" == typeof define && define.amd && define([], function() {
        return {
            Howler: t,
            Howl: C
        }
    });
    "undefined" != typeof exports && (exports.Howler = t, exports.Howl = C);
    "undefined" != typeof window ? (window.HowlerGlobal = fa, window.Howler = t, window.Howl = C, window.Sound = G) : "undefined" != typeof global && (global.HowlerGlobal = fa, global.Howler = t, global.Howl = C, global.Sound = G)
}();
! function() {
    HowlerGlobal.prototype._pos = [0, 0, 0];
    HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];
    HowlerGlobal.prototype.stereo = function(t) {
        if (!this.ctx || !this.ctx.listener) return this;
        for (var C = this._howls.length - 1; 0 <= C; C--) this._howls[C].stereo(t);
        return this
    };
    HowlerGlobal.prototype.pos = function(t, C, G) {
        return this.ctx && this.ctx.listener ? (C = "number" != typeof C ? this._pos[1] : C, G = "number" != typeof G ? this._pos[2] : G, "number" != typeof t ? this._pos : (this._pos = [t, C, G], void 0 !== this.ctx.listener.positionX ? (this.ctx.listener.positionX.setTargetAtTime(this._pos[0],
            Howler.ctx.currentTime, .1), this.ctx.listener.positionY.setTargetAtTime(this._pos[1], Howler.ctx.currentTime, .1), this.ctx.listener.positionZ.setTargetAtTime(this._pos[2], Howler.ctx.currentTime, .1)) : this.ctx.listener.setPosition(this._pos[0], this._pos[1], this._pos[2]), this)) : this
    };
    HowlerGlobal.prototype.orientation = function(t, C, G, P, M, p) {
        if (!this.ctx || !this.ctx.listener) return this;
        var fa = this._orientation;
        return C = "number" != typeof C ? fa[1] : C, G = "number" != typeof G ? fa[2] : G, P = "number" != typeof P ? fa[3] : P, M =
            "number" != typeof M ? fa[4] : M, p = "number" != typeof p ? fa[5] : p, "number" != typeof t ? fa : (this._orientation = [t, C, G, P, M, p], void 0 !== this.ctx.listener.forwardX ? (this.ctx.listener.forwardX.setTargetAtTime(t, Howler.ctx.currentTime, .1), this.ctx.listener.forwardY.setTargetAtTime(C, Howler.ctx.currentTime, .1), this.ctx.listener.forwardZ.setTargetAtTime(G, Howler.ctx.currentTime, .1), this.ctx.listener.upX.setTargetAtTime(t, Howler.ctx.currentTime, .1), this.ctx.listener.upY.setTargetAtTime(C, Howler.ctx.currentTime, .1), this.ctx.listener.upZ.setTargetAtTime(G,
                Howler.ctx.currentTime, .1)) : this.ctx.listener.setOrientation(t, C, G, P, M, p), this)
    };
    Howl.prototype.init = function(t) {
        return function(C) {
            return this._orientation = C.orientation || [1, 0, 0], this._stereo = C.stereo || null, this._pos = C.pos || null, this._pannerAttr = {
                coneInnerAngle: void 0 !== C.coneInnerAngle ? C.coneInnerAngle : 360,
                coneOuterAngle: void 0 !== C.coneOuterAngle ? C.coneOuterAngle : 360,
                coneOuterGain: void 0 !== C.coneOuterGain ? C.coneOuterGain : 0,
                distanceModel: void 0 !== C.distanceModel ? C.distanceModel : "inverse",
                maxDistance: void 0 !==
                    C.maxDistance ? C.maxDistance : 1E4,
                panningModel: void 0 !== C.panningModel ? C.panningModel : "HRTF",
                refDistance: void 0 !== C.refDistance ? C.refDistance : 1,
                rolloffFactor: void 0 !== C.rolloffFactor ? C.rolloffFactor : 1
            }, this._onstereo = C.onstereo ? [{
                fn: C.onstereo
            }] : [], this._onpos = C.onpos ? [{
                fn: C.onpos
            }] : [], this._onorientation = C.onorientation ? [{
                fn: C.onorientation
            }] : [], t.call(this, C)
        }
    }(Howl.prototype.init);
    Howl.prototype.stereo = function(t, C) {
        var G = this;
        if (!G._webAudio) return G;
        if ("loaded" !== G._state) return G._queue.push({
            event: "stereo",
            action: function() {
                G.stereo(t, C)
            }
        }), G;
        var P = void 0 === Howler.ctx.createStereoPanner ? "spatial" : "stereo";
        if (void 0 === C) {
            if ("number" != typeof t) return G._stereo;
            G._stereo = t;
            G._pos = [t, 0, 0]
        }
        for (var M = G._getSoundIds(C), p = 0; p < M.length; p++) {
            var Aa = G._soundById(M[p]);
            if (Aa) {
                if ("number" != typeof t) return Aa._stereo;
                Aa._stereo = t;
                Aa._pos = [t, 0, 0];
                Aa._node && (Aa._pannerAttr.panningModel = "equalpower", Aa._panner && Aa._panner.pan || fa(Aa, P), "spatial" === P ? void 0 !== Aa._panner.positionX ? (Aa._panner.positionX.setValueAtTime(t,
                    Howler.ctx.currentTime), Aa._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime), Aa._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime)) : Aa._panner.setPosition(t, 0, 0) : Aa._panner.pan.setValueAtTime(t, Howler.ctx.currentTime));
                G._emit("stereo", Aa._id)
            }
        }
        return G
    };
    Howl.prototype.pos = function(t, C, G, P) {
        var M = this;
        if (!M._webAudio) return M;
        if ("loaded" !== M._state) return M._queue.push({
            event: "pos",
            action: function() {
                M.pos(t, C, G, P)
            }
        }), M;
        if (C = "number" != typeof C ? 0 : C, G = "number" != typeof G ? -.5 : G, void 0 ===
            P) {
            if ("number" != typeof t) return M._pos;
            M._pos = [t, C, G]
        }
        for (var p = M._getSoundIds(P), Aa = 0; Aa < p.length; Aa++) {
            var q = M._soundById(p[Aa]);
            if (q) {
                if ("number" != typeof t) return q._pos;
                q._pos = [t, C, G];
                q._node && (q._panner && !q._panner.pan || fa(q, "spatial"), void 0 !== q._panner.positionX ? (q._panner.positionX.setValueAtTime(t, Howler.ctx.currentTime), q._panner.positionY.setValueAtTime(C, Howler.ctx.currentTime), q._panner.positionZ.setValueAtTime(G, Howler.ctx.currentTime)) : q._panner.setPosition(t, C, G));
                M._emit("pos", q._id)
            }
        }
        return M
    };
    Howl.prototype.orientation = function(t, C, G, P) {
        var M = this;
        if (!M._webAudio) return M;
        if ("loaded" !== M._state) return M._queue.push({
            event: "orientation",
            action: function() {
                M.orientation(t, C, G, P)
            }
        }), M;
        if (C = "number" != typeof C ? M._orientation[1] : C, G = "number" != typeof G ? M._orientation[2] : G, void 0 === P) {
            if ("number" != typeof t) return M._orientation;
            M._orientation = [t, C, G]
        }
        for (var p = M._getSoundIds(P), Aa = 0; Aa < p.length; Aa++) {
            var q = M._soundById(p[Aa]);
            if (q) {
                if ("number" != typeof t) return q._orientation;
                q._orientation = [t,
                    C, G
                ];
                q._node && (q._panner || (q._pos || (q._pos = M._pos || [0, 0, -.5]), fa(q, "spatial")), void 0 !== q._panner.orientationX ? (q._panner.orientationX.setValueAtTime(t, Howler.ctx.currentTime), q._panner.orientationY.setValueAtTime(C, Howler.ctx.currentTime), q._panner.orientationZ.setValueAtTime(G, Howler.ctx.currentTime)) : q._panner.setOrientation(t, C, G));
                M._emit("orientation", q._id)
            }
        }
        return M
    };
    Howl.prototype.pannerAttr = function() {
        var t, C, G = arguments;
        if (!this._webAudio) return this;
        if (0 === G.length) return this._pannerAttr;
        if (1 === G.length) {
            if ("object" != typeof G[0]) return C = this._soundById(parseInt(G[0], 10)), C ? C._pannerAttr : this._pannerAttr;
            var P = G[0];
            void 0 === t && (P.pannerAttr || (P.pannerAttr = {
                coneInnerAngle: P.coneInnerAngle,
                coneOuterAngle: P.coneOuterAngle,
                coneOuterGain: P.coneOuterGain,
                distanceModel: P.distanceModel,
                maxDistance: P.maxDistance,
                refDistance: P.refDistance,
                rolloffFactor: P.rolloffFactor,
                panningModel: P.panningModel
            }), this._pannerAttr = {
                coneInnerAngle: void 0 !== P.pannerAttr.coneInnerAngle ? P.pannerAttr.coneInnerAngle : this._coneInnerAngle,
                coneOuterAngle: void 0 !== P.pannerAttr.coneOuterAngle ? P.pannerAttr.coneOuterAngle : this._coneOuterAngle,
                coneOuterGain: void 0 !== P.pannerAttr.coneOuterGain ? P.pannerAttr.coneOuterGain : this._coneOuterGain,
                distanceModel: void 0 !== P.pannerAttr.distanceModel ? P.pannerAttr.distanceModel : this._distanceModel,
                maxDistance: void 0 !== P.pannerAttr.maxDistance ? P.pannerAttr.maxDistance : this._maxDistance,
                refDistance: void 0 !== P.pannerAttr.refDistance ? P.pannerAttr.refDistance : this._refDistance,
                rolloffFactor: void 0 !==
                    P.pannerAttr.rolloffFactor ? P.pannerAttr.rolloffFactor : this._rolloffFactor,
                panningModel: void 0 !== P.pannerAttr.panningModel ? P.pannerAttr.panningModel : this._panningModel
            })
        } else 2 === G.length && (P = G[0], t = parseInt(G[1], 10));
        t = this._getSoundIds(t);
        for (G = 0; G < t.length; G++)
            if (C = this._soundById(t[G])) {
                var M = C._pannerAttr;
                M = {
                    coneInnerAngle: void 0 !== P.coneInnerAngle ? P.coneInnerAngle : M.coneInnerAngle,
                    coneOuterAngle: void 0 !== P.coneOuterAngle ? P.coneOuterAngle : M.coneOuterAngle,
                    coneOuterGain: void 0 !== P.coneOuterGain ?
                        P.coneOuterGain : M.coneOuterGain,
                    distanceModel: void 0 !== P.distanceModel ? P.distanceModel : M.distanceModel,
                    maxDistance: void 0 !== P.maxDistance ? P.maxDistance : M.maxDistance,
                    refDistance: void 0 !== P.refDistance ? P.refDistance : M.refDistance,
                    rolloffFactor: void 0 !== P.rolloffFactor ? P.rolloffFactor : M.rolloffFactor,
                    panningModel: void 0 !== P.panningModel ? P.panningModel : M.panningModel
                };
                var p = C._panner;
                p ? (p.coneInnerAngle = M.coneInnerAngle, p.coneOuterAngle = M.coneOuterAngle, p.coneOuterGain = M.coneOuterGain, p.distanceModel =
                    M.distanceModel, p.maxDistance = M.maxDistance, p.refDistance = M.refDistance, p.rolloffFactor = M.rolloffFactor, p.panningModel = M.panningModel) : (C._pos || (C._pos = this._pos || [0, 0, -.5]), fa(C, "spatial"))
            } return this
    };
    Sound.prototype.init = function(t) {
        return function() {
            var C = this._parent;
            this._orientation = C._orientation;
            this._stereo = C._stereo;
            this._pos = C._pos;
            this._pannerAttr = C._pannerAttr;
            t.call(this);
            this._stereo ? C.stereo(this._stereo) : this._pos && C.pos(this._pos[0], this._pos[1], this._pos[2], this._id)
        }
    }(Sound.prototype.init);
    Sound.prototype.reset = function(t) {
        return function() {
            var C = this._parent;
            return this._orientation = C._orientation, this._stereo = C._stereo, this._pos = C._pos, this._pannerAttr = C._pannerAttr, this._stereo ? C.stereo(this._stereo) : this._pos ? C.pos(this._pos[0], this._pos[1], this._pos[2], this._id) : this._panner && (this._panner.disconnect(0), this._panner = void 0, C._refreshBuffer(this)), t.call(this)
        }
    }(Sound.prototype.reset);
    var fa = function(t, C) {
        "spatial" === (C || "spatial") ? (t._panner = Howler.ctx.createPanner(), t._panner.coneInnerAngle =
            t._pannerAttr.coneInnerAngle, t._panner.coneOuterAngle = t._pannerAttr.coneOuterAngle, t._panner.coneOuterGain = t._pannerAttr.coneOuterGain, t._panner.distanceModel = t._pannerAttr.distanceModel, t._panner.maxDistance = t._pannerAttr.maxDistance, t._panner.refDistance = t._pannerAttr.refDistance, t._panner.rolloffFactor = t._pannerAttr.rolloffFactor, t._panner.panningModel = t._pannerAttr.panningModel, void 0 !== t._panner.positionX ? (t._panner.positionX.setValueAtTime(t._pos[0], Howler.ctx.currentTime), t._panner.positionY.setValueAtTime(t._pos[1],
                Howler.ctx.currentTime), t._panner.positionZ.setValueAtTime(t._pos[2], Howler.ctx.currentTime)) : t._panner.setPosition(t._pos[0], t._pos[1], t._pos[2]), void 0 !== t._panner.orientationX ? (t._panner.orientationX.setValueAtTime(t._orientation[0], Howler.ctx.currentTime), t._panner.orientationY.setValueAtTime(t._orientation[1], Howler.ctx.currentTime), t._panner.orientationZ.setValueAtTime(t._orientation[2], Howler.ctx.currentTime)) : t._panner.setOrientation(t._orientation[0], t._orientation[1], t._orientation[2])) :
        (t._panner = Howler.ctx.createStereoPanner(), t._panner.pan.setValueAtTime(t._stereo, Howler.ctx.currentTime));
        t._panner.connect(t._node);
        t._paused || t._parent.pause(t._id, !0).play(t._id, !0)
    }
}();
! function(fa) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = fa() : "function" == typeof define && define.amd ? define([], fa) : ("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this).pako = fa()
}(function() {
    return function P(t, C, G) {
        function M(q, g) {
            if (!C[q]) {
                if (!t[q]) {
                    var l = "function" == typeof require && require;
                    if (!g && l) return l(q, !0);
                    if (p) return p(q, !0);
                    g = Error("Cannot find module '" + q + "'");
                    throw g.code = "MODULE_NOT_FOUND", g;
                }
                g = C[q] = {
                    exports: {}
                };
                t[q][0].call(g.exports, function(g) {
                    var l = t[q][1][g];
                    return M(l ? l : g)
                }, g, g.exports, P, t, C, G)
            }
            return C[q].exports
        }
        for (var p = "function" == typeof require && require, Aa = 0; Aa < G.length; Aa++) M(G[Aa]);
        return M
    }({
        1: [function(t, C, G) {
            function P(t) {
                if (!(this instanceof P)) return new P(t);
                t = this.options = Aa.assign({
                    level: Ca,
                    method: X,
                    chunkSize: 16384,
                    windowBits: 15,
                    memLevel: 8,
                    strategy: oa,
                    to: ""
                }, t || {});
                t.raw && 0 < t.windowBits ? t.windowBits = -t.windowBits : t.gzip && 0 < t.windowBits && 16 > t.windowBits && (t.windowBits += 16);
                this.err = 0;
                this.msg = "";
                this.ended = !1;
                this.chunks = [];
                this.strm = new l;
                this.strm.avail_out = 0;
                var C = p.deflateInit2(this.strm, t.level, t.method, t.windowBits, t.memLevel, t.strategy);
                if (C !== pa) throw Error(g[C]);
                if (t.header && p.deflateSetHeader(this.strm, t.header), t.dictionary) {
                    var G;
                    if (G = "string" == typeof t.dictionary ? q.string2buf(t.dictionary) : "[object ArrayBuffer]" === L.call(t.dictionary) ? new Uint8Array(t.dictionary) : t.dictionary, C = p.deflateSetDictionary(this.strm, G), C !== pa) throw Error(g[C]);
                    this._dict_set = !0
                }
            }

            function M(g,
                l) {
                l = new P(l);
                if (l.push(g, !0), l.err) throw l.msg;
                return l.result
            }
            var p = t("./zlib/deflate"),
                Aa = t("./utils/common"),
                q = t("./utils/strings"),
                g = t("./zlib/messages"),
                l = t("./zlib/zstream"),
                L = Object.prototype.toString,
                pa = 0,
                Ca = -1,
                oa = 0,
                X = 8;
            P.prototype.push = function(g, l) {
                var t, C = this.strm,
                    G = this.options.chunkSize;
                if (this.ended) return !1;
                l = l === ~~l ? l : !0 === l ? 4 : 0;
                "string" == typeof g ? C.input = q.string2buf(g) : "[object ArrayBuffer]" === L.call(g) ? C.input = new Uint8Array(g) : C.input = g;
                C.next_in = 0;
                C.avail_in = C.input.length;
                do {
                    if (0 === C.avail_out && (C.output = new Aa.Buf8(G), C.next_out = 0, C.avail_out = G), t = p.deflate(C, l), 1 !== t && t !== pa) return this.onEnd(t), this.ended = !0, !1;
                    0 !== C.avail_out && (0 !== C.avail_in || 4 !== l && 2 !== l) || ("string" === this.options.to ? this.onData(q.buf2binstring(Aa.shrinkBuf(C.output, C.next_out))) : this.onData(Aa.shrinkBuf(C.output, C.next_out)))
                } while ((0 < C.avail_in || 0 === C.avail_out) && 1 !== t);
                return 4 === l ? (t = p.deflateEnd(this.strm), this.onEnd(t), this.ended = !0, t === pa) : 2 !== l || (this.onEnd(pa), C.avail_out = 0, !0)
            };
            P.prototype.onData =
                function(g) {
                    this.chunks.push(g)
                };
            P.prototype.onEnd = function(g) {
                g === pa && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = Aa.flattenChunks(this.chunks));
                this.chunks = [];
                this.err = g;
                this.msg = this.strm.msg
            };
            G.Deflate = P;
            G.deflate = M;
            G.deflateRaw = function(g, l) {
                return l = l || {}, l.raw = !0, M(g, l)
            };
            G.gzip = function(g, l) {
                return l = l || {}, l.gzip = !0, M(g, l)
            }
        }, {
            "./utils/common": 3,
            "./utils/strings": 4,
            "./zlib/deflate": 8,
            "./zlib/messages": 13,
            "./zlib/zstream": 15
        }],
        2: [function(t, C, G) {
            function P(q) {
                if (!(this instanceof P)) return new P(q);
                var t = this.options = Aa.assign({
                    chunkSize: 16384,
                    windowBits: 0,
                    to: ""
                }, q || {});
                t.raw && 0 <= t.windowBits && 16 > t.windowBits && (t.windowBits = -t.windowBits, 0 === t.windowBits && (t.windowBits = -15));
                !(0 <= t.windowBits && 16 > t.windowBits) || q && q.windowBits || (t.windowBits += 32);
                15 < t.windowBits && 48 > t.windowBits && 0 === (15 & t.windowBits) && (t.windowBits |= 15);
                this.err = 0;
                this.msg = "";
                this.ended = !1;
                this.chunks = [];
                this.strm = new L;
                this.strm.avail_out = 0;
                q = p.inflateInit2(this.strm, t.windowBits);
                if (q !== g.Z_OK) throw Error(l[q]);
                this.header = new pa;
                p.inflateGetHeader(this.strm, this.header)
            }

            function M(g, l) {
                l = new P(l);
                if (l.push(g, !0), l.err) throw l.msg;
                return l.result
            }
            var p = t("./zlib/inflate"),
                Aa = t("./utils/common"),
                q = t("./utils/strings"),
                g = t("./zlib/constants"),
                l = t("./zlib/messages"),
                L = t("./zlib/zstream"),
                pa = t("./zlib/gzheader"),
                Ca = Object.prototype.toString;
            P.prototype.push = function(l, t) {
                var C, L, G, P, X, M = this.strm,
                    pa = this.options.chunkSize,
                    oa = this.options.dictionary,
                    R = !1;
                if (this.ended) return !1;
                t = t === ~~t ? t : !0 === t ? g.Z_FINISH : g.Z_NO_FLUSH;
                "string" == typeof l ? M.input = q.binstring2buf(l) : "[object ArrayBuffer]" === Ca.call(l) ? M.input = new Uint8Array(l) : M.input = l;
                M.next_in = 0;
                M.avail_in = M.input.length;
                do {
                    if (0 === M.avail_out && (M.output = new Aa.Buf8(pa), M.next_out = 0, M.avail_out = pa), C = p.inflate(M, g.Z_NO_FLUSH), C === g.Z_NEED_DICT && oa && (X = "string" == typeof oa ? q.string2buf(oa) : "[object ArrayBuffer]" === Ca.call(oa) ? new Uint8Array(oa) : oa, C = p.inflateSetDictionary(this.strm, X)), C === g.Z_BUF_ERROR && !0 === R && (C = g.Z_OK, R = !1), C !== g.Z_STREAM_END && C !== g.Z_OK) return this.onEnd(C),
                        this.ended = !0, !1;
                    M.next_out && (0 !== M.avail_out && C !== g.Z_STREAM_END && (0 !== M.avail_in || t !== g.Z_FINISH && t !== g.Z_SYNC_FLUSH) || ("string" === this.options.to ? (L = q.utf8border(M.output, M.next_out), G = M.next_out - L, P = q.buf2string(M.output, L), M.next_out = G, M.avail_out = pa - G, G && Aa.arraySet(M.output, M.output, L, G, 0), this.onData(P)) : this.onData(Aa.shrinkBuf(M.output, M.next_out))));
                    0 === M.avail_in && 0 === M.avail_out && (R = !0)
                } while ((0 < M.avail_in || 0 === M.avail_out) && C !== g.Z_STREAM_END);
                return C === g.Z_STREAM_END && (t = g.Z_FINISH),
                    t === g.Z_FINISH ? (C = p.inflateEnd(this.strm), this.onEnd(C), this.ended = !0, C === g.Z_OK) : t !== g.Z_SYNC_FLUSH || (this.onEnd(g.Z_OK), M.avail_out = 0, !0)
            };
            P.prototype.onData = function(g) {
                this.chunks.push(g)
            };
            P.prototype.onEnd = function(l) {
                l === g.Z_OK && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = Aa.flattenChunks(this.chunks));
                this.chunks = [];
                this.err = l;
                this.msg = this.strm.msg
            };
            G.Inflate = P;
            G.inflate = M;
            G.inflateRaw = function(g, l) {
                return l = l || {}, l.raw = !0, M(g, l)
            };
            G.ungzip = M
        }, {
            "./utils/common": 3,
            "./utils/strings": 4,
            "./zlib/constants": 6,
            "./zlib/gzheader": 9,
            "./zlib/inflate": 11,
            "./zlib/messages": 13,
            "./zlib/zstream": 15
        }],
        3: [function(t, C, G) {
            t = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Int32Array;
            G.assign = function(p) {
                for (var t = Array.prototype.slice.call(arguments, 1); t.length;) {
                    var q = t.shift();
                    if (q) {
                        if ("object" != typeof q) throw new TypeError(q + "must be non-object");
                        for (var g in q) q.hasOwnProperty(g) && (p[g] = q[g])
                    }
                }
                return p
            };
            G.shrinkBuf = function(p, t) {
                return p.length ===
                    t ? p : p.subarray ? p.subarray(0, t) : (p.length = t, p)
            };
            var P = {
                    arraySet: function(p, t, q, g, l) {
                        if (t.subarray && p.subarray) return void p.set(t.subarray(q, q + g), l);
                        for (var C = 0; C < g; C++) p[l + C] = t[q + C]
                    },
                    flattenChunks: function(p) {
                        var t, q;
                        var g = q = 0;
                        for (t = p.length; g < t; g++) q += p[g].length;
                        var l = new Uint8Array(q);
                        g = q = 0;
                        for (t = p.length; g < t; g++) {
                            var C = p[g];
                            l.set(C, q);
                            q += C.length
                        }
                        return l
                    }
                },
                M = {
                    arraySet: function(p, t, q, g, l) {
                        for (var C = 0; C < g; C++) p[l + C] = t[q + C]
                    },
                    flattenChunks: function(p) {
                        return [].concat.apply([], p)
                    }
                };
            G.setTyped = function(p) {
                p ?
                    (G.Buf8 = Uint8Array, G.Buf16 = Uint16Array, G.Buf32 = Int32Array, G.assign(G, P)) : (G.Buf8 = Array, G.Buf16 = Array, G.Buf32 = Array, G.assign(G, M))
            };
            G.setTyped(t)
        }, {}],
        4: [function(t, C, G) {
            function P(g, l) {
                if (65537 > l && (g.subarray && Aa || !g.subarray && p)) return String.fromCharCode.apply(null, M.shrinkBuf(g, l));
                for (var q = "", t = 0; t < l; t++) q += String.fromCharCode(g[t]);
                return q
            }
            var M = t("./common"),
                p = !0,
                Aa = !0;
            try {
                String.fromCharCode.apply(null, [0])
            } catch (g) {
                p = !1
            }
            try {
                String.fromCharCode.apply(null, new Uint8Array(1))
            } catch (g) {
                Aa = !1
            }
            var q =
                new M.Buf8(256);
            for (t = 0; 256 > t; t++) q[t] = 252 <= t ? 6 : 248 <= t ? 5 : 240 <= t ? 4 : 224 <= t ? 3 : 192 <= t ? 2 : 1;
            q[254] = q[254] = 1;
            G.string2buf = function(g) {
                var l, p, q, t = g.length,
                    C = 0;
                for (p = 0; p < t; p++) {
                    var G = g.charCodeAt(p);
                    55296 === (64512 & G) && p + 1 < t && (l = g.charCodeAt(p + 1), 56320 === (64512 & l) && (G = 65536 + (G - 55296 << 10) + (l - 56320), p++));
                    C += 128 > G ? 1 : 2048 > G ? 2 : 65536 > G ? 3 : 4
                }
                var P = new M.Buf8(C);
                for (p = q = 0; q < C; p++) G = g.charCodeAt(p), 55296 === (64512 & G) && p + 1 < t && (l = g.charCodeAt(p + 1), 56320 === (64512 & l) && (G = 65536 + (G - 55296 << 10) + (l - 56320), p++)), 128 > G ? P[q++] =
                    G : 2048 > G ? (P[q++] = 192 | G >>> 6, P[q++] = 128 | 63 & G) : 65536 > G ? (P[q++] = 224 | G >>> 12, P[q++] = 128 | G >>> 6 & 63, P[q++] = 128 | 63 & G) : (P[q++] = 240 | G >>> 18, P[q++] = 128 | G >>> 12 & 63, P[q++] = 128 | G >>> 6 & 63, P[q++] = 128 | 63 & G);
                return P
            };
            G.buf2binstring = function(g) {
                return P(g, g.length)
            };
            G.binstring2buf = function(g) {
                for (var l = new M.Buf8(g.length), p = 0, q = l.length; p < q; p++) l[p] = g.charCodeAt(p);
                return l
            };
            G.buf2string = function(g, l) {
                var p, t, C, G = l || g.length,
                    M = Array(2 * G);
                for (l = p = 0; l < G;)
                    if (t = g[l++], 128 > t) M[p++] = t;
                    else if (C = q[t], 4 < C) M[p++] = 65533, l += C -
                    1;
                else {
                    for (t &= 2 === C ? 31 : 3 === C ? 15 : 7; 1 < C && l < G;) t = t << 6 | 63 & g[l++], C--;
                    1 < C ? M[p++] = 65533 : 65536 > t ? M[p++] = t : (t -= 65536, M[p++] = 55296 | t >> 10 & 1023, M[p++] = 56320 | 1023 & t)
                }
                return P(M, p)
            };
            G.utf8border = function(g, l) {
                var p;
                l = l || g.length;
                l > g.length && (l = g.length);
                for (p = l - 1; 0 <= p && 128 === (192 & g[p]);) p--;
                return 0 > p ? l : 0 === p ? l : p + q[g[p]] > l ? p : l
            }
        }, {
            "./common": 3
        }],
        5: [function(t, C, G) {
            C.exports = function(t, C, p, G) {
                var q = 65535 & t | 0;
                t = t >>> 16 & 65535 | 0;
                for (var g; 0 !== p;) {
                    g = 2E3 < p ? 2E3 : p;
                    p -= g;
                    do q = q + C[G++] | 0, t = t + q | 0; while (--g);
                    q %= 65521;
                    t %= 65521
                }
                return q |
                    t << 16 | 0
            }
        }, {}],
        6: [function(t, C, G) {
            C.exports = {
                Z_NO_FLUSH: 0,
                Z_PARTIAL_FLUSH: 1,
                Z_SYNC_FLUSH: 2,
                Z_FULL_FLUSH: 3,
                Z_FINISH: 4,
                Z_BLOCK: 5,
                Z_TREES: 6,
                Z_OK: 0,
                Z_STREAM_END: 1,
                Z_NEED_DICT: 2,
                Z_ERRNO: -1,
                Z_STREAM_ERROR: -2,
                Z_DATA_ERROR: -3,
                Z_BUF_ERROR: -5,
                Z_NO_COMPRESSION: 0,
                Z_BEST_SPEED: 1,
                Z_BEST_COMPRESSION: 9,
                Z_DEFAULT_COMPRESSION: -1,
                Z_FILTERED: 1,
                Z_HUFFMAN_ONLY: 2,
                Z_RLE: 3,
                Z_FIXED: 4,
                Z_DEFAULT_STRATEGY: 0,
                Z_BINARY: 0,
                Z_TEXT: 1,
                Z_UNKNOWN: 2,
                Z_DEFLATED: 8
            }
        }, {}],
        7: [function(t, C, G) {
            var P = function() {
                for (var t, p = [], C = 0; 256 > C; C++) {
                    t = C;
                    for (var q = 0; 8 > q; q++) t = 1 & t ? 3988292384 ^ t >>> 1 : t >>> 1;
                    p[C] = t
                }
                return p
            }();
            C.exports = function(t, p, C, q) {
                C = q + C;
                for (t ^= -1; q < C; q++) t = t >>> 8 ^ P[255 & (t ^ p[q])];
                return t ^ -1
            }
        }, {}],
        8: [function(t, C, G) {
            function P(g, l) {
                return g.msg = Qb[l], l
            }

            function M(g) {
                for (var l = g.length; 0 <= --l;) g[l] = 0
            }

            function p(g) {
                var l = g.state,
                    n = l.pending;
                n > g.avail_out && (n = g.avail_out);
                0 !== n && (Pb.arraySet(g.output, l.pending_buf, l.pending_out, n, g.next_out), g.next_out += n, l.pending_out += n, g.total_out += n, g.avail_out -= n, l.pending -= n, 0 === l.pending && (l.pending_out =
                    0))
            }

            function Aa(g, l) {
                Rb._tr_flush_block(g, 0 <= g.block_start ? g.block_start : -1, g.strstart - g.block_start, l);
                g.block_start = g.strstart;
                p(g.strm)
            }

            function q(g, l) {
                g.pending_buf[g.pending++] = l
            }

            function g(g, l) {
                g.pending_buf[g.pending++] = l >>> 8 & 255;
                g.pending_buf[g.pending++] = 255 & l
            }

            function l(g, l) {
                var n, p, x = g.max_chain_length,
                    q = g.strstart,
                    t = g.prev_length,
                    B = g.nice_match,
                    C = g.strstart > g.w_size - wb ? g.strstart - (g.w_size - wb) : 0,
                    R = g.window,
                    G = g.w_mask,
                    L = g.prev,
                    P = g.strstart + yb,
                    S = R[q + t - 1],
                    M = R[q + t];
                g.prev_length >= g.good_match &&
                    (x >>= 2);
                B > g.lookahead && (B = g.lookahead);
                do
                    if (n = l, R[n + t] === M && R[n + t - 1] === S && R[n] === R[q] && R[++n] === R[q + 1]) {
                        q += 2;
                        for (n++; R[++q] === R[++n] && R[++q] === R[++n] && R[++q] === R[++n] && R[++q] === R[++n] && R[++q] === R[++n] && R[++q] === R[++n] && R[++q] === R[++n] && R[++q] === R[++n] && q < P;);
                        if (p = yb - (P - q), q = P - yb, p > t) {
                            if (g.match_start = l, t = p, p >= B) break;
                            S = R[q + t - 1];
                            M = R[q + t]
                        }
                    } while ((l = L[l & G]) > C && 0 !== --x);
                return t <= g.lookahead ? t : g.lookahead
            }

            function L(g) {
                var l, n, p = g.w_size;
                do {
                    if (n = g.window_size - g.lookahead - g.strstart, g.strstart >= p + (p -
                            wb)) {
                        Pb.arraySet(g.window, g.window, p, p, 0);
                        g.match_start -= p;
                        g.strstart -= p;
                        g.block_start -= p;
                        var q = l = g.hash_size;
                        do {
                            var x = g.head[--q];
                            g.head[q] = x >= p ? x - p : 0
                        } while (--l);
                        q = l = p;
                        do x = g.prev[--q], g.prev[q] = x >= p ? x - p : 0; while (--l);
                        n += p
                    }
                    if (0 === g.strm.avail_in) break;
                    q = g.strm;
                    x = g.window;
                    var t = g.strstart + g.lookahead,
                        B = q.avail_in;
                    if (l = (B > n && (B = n), 0 === B ? 0 : (q.avail_in -= B, Pb.arraySet(x, q.input, q.next_in, B, t), 1 === q.state.wrap ? q.adler = pb(q.adler, x, B, t) : 2 === q.state.wrap && (q.adler = Qa(q.adler, x, B, t)), q.next_in += B, q.total_in +=
                            B, B)), g.lookahead += l, g.lookahead + g.insert >= jb)
                        for (n = g.strstart - g.insert, g.ins_h = g.window[n], g.ins_h = (g.ins_h << g.hash_shift ^ g.window[n + 1]) & g.hash_mask; g.insert && (g.ins_h = (g.ins_h << g.hash_shift ^ g.window[n + jb - 1]) & g.hash_mask, g.prev[n & g.w_mask] = g.head[g.ins_h], g.head[g.ins_h] = n, n++, g.insert--, !(g.lookahead + g.insert < jb)););
                } while (g.lookahead < wb && 0 !== g.strm.avail_in)
            }

            function pa(g, n) {
                for (var p, q;;) {
                    if (g.lookahead < wb) {
                        if (L(g), g.lookahead < wb && n === R) return da;
                        if (0 === g.lookahead) break
                    }
                    if (p = 0, g.lookahead >= jb &&
                        (g.ins_h = (g.ins_h << g.hash_shift ^ g.window[g.strstart + jb - 1]) & g.hash_mask, p = g.prev[g.strstart & g.w_mask] = g.head[g.ins_h], g.head[g.ins_h] = g.strstart), 0 !== p && g.strstart - p <= g.w_size - wb && (g.match_length = l(g, p)), g.match_length >= jb)
                        if (q = Rb._tr_tally(g, g.strstart - g.match_start, g.match_length - jb), g.lookahead -= g.match_length, g.match_length <= g.max_lazy_match && g.lookahead >= jb) {
                            g.match_length--;
                            do g.strstart++, g.ins_h = (g.ins_h << g.hash_shift ^ g.window[g.strstart + jb - 1]) & g.hash_mask, p = g.prev[g.strstart & g.w_mask] = g.head[g.ins_h],
                                g.head[g.ins_h] = g.strstart; while (0 !== --g.match_length);
                            g.strstart++
                        } else g.strstart += g.match_length, g.match_length = 0, g.ins_h = g.window[g.strstart], g.ins_h = (g.ins_h << g.hash_shift ^ g.window[g.strstart + 1]) & g.hash_mask;
                    else q = Rb._tr_tally(g, 0, g.window[g.strstart]), g.lookahead--, g.strstart++;
                    if (q && (Aa(g, !1), 0 === g.strm.avail_out)) return da
                }
                return g.insert = g.strstart < jb - 1 ? g.strstart : jb - 1, n === ra ? (Aa(g, !0), 0 === g.strm.avail_out ? qc : Pd) : g.last_lit && (Aa(g, !1), 0 === g.strm.avail_out) ? da : ke
            }

            function Ca(g, n) {
                for (var p,
                        q, x;;) {
                    if (g.lookahead < wb) {
                        if (L(g), g.lookahead < wb && n === R) return da;
                        if (0 === g.lookahead) break
                    }
                    if (p = 0, g.lookahead >= jb && (g.ins_h = (g.ins_h << g.hash_shift ^ g.window[g.strstart + jb - 1]) & g.hash_mask, p = g.prev[g.strstart & g.w_mask] = g.head[g.ins_h], g.head[g.ins_h] = g.strstart), g.prev_length = g.match_length, g.prev_match = g.match_start, g.match_length = jb - 1, 0 !== p && g.prev_length < g.max_lazy_match && g.strstart - p <= g.w_size - wb && (g.match_length = l(g, p), 5 >= g.match_length && (g.strategy === nd || g.match_length === jb && 4096 < g.strstart - g.match_start) &&
                            (g.match_length = jb - 1)), g.prev_length >= jb && g.match_length <= g.prev_length) {
                        x = g.strstart + g.lookahead - jb;
                        q = Rb._tr_tally(g, g.strstart - 1 - g.prev_match, g.prev_length - jb);
                        g.lookahead -= g.prev_length - 1;
                        g.prev_length -= 2;
                        do ++g.strstart <= x && (g.ins_h = (g.ins_h << g.hash_shift ^ g.window[g.strstart + jb - 1]) & g.hash_mask, p = g.prev[g.strstart & g.w_mask] = g.head[g.ins_h], g.head[g.ins_h] = g.strstart); while (0 !== --g.prev_length);
                        if (g.match_available = 0, g.match_length = jb - 1, g.strstart++, q && (Aa(g, !1), 0 === g.strm.avail_out)) return da
                    } else if (g.match_available) {
                        if (q =
                            Rb._tr_tally(g, 0, g.window[g.strstart - 1]), q && Aa(g, !1), g.strstart++, g.lookahead--, 0 === g.strm.avail_out) return da
                    } else g.match_available = 1, g.strstart++, g.lookahead--
                }
                return g.match_available && (Rb._tr_tally(g, 0, g.window[g.strstart - 1]), g.match_available = 0), g.insert = g.strstart < jb - 1 ? g.strstart : jb - 1, n === ra ? (Aa(g, !0), 0 === g.strm.avail_out ? qc : Pd) : g.last_lit && (Aa(g, !1), 0 === g.strm.avail_out) ? da : ke
            }

            function oa(g, l, n, p, q) {
                this.good_length = g;
                this.max_lazy = l;
                this.nice_length = n;
                this.max_chain = p;
                this.func = q
            }

            function X() {
                this.strm =
                    null;
                this.status = 0;
                this.pending_buf = null;
                this.wrap = this.pending = this.pending_out = this.pending_buf_size = 0;
                this.gzhead = null;
                this.gzindex = 0;
                this.method = Tc;
                this.last_flush = -1;
                this.w_mask = this.w_bits = this.w_size = 0;
                this.window = null;
                this.window_size = 0;
                this.head = this.prev = null;
                this.nice_match = this.good_match = this.strategy = this.level = this.max_lazy_match = this.max_chain_length = this.prev_length = this.lookahead = this.match_start = this.strstart = this.match_available = this.prev_match = this.match_length = this.block_start =
                    this.hash_shift = this.hash_mask = this.hash_bits = this.hash_size = this.ins_h = 0;
                this.dyn_ltree = new Pb.Buf16(2 * dd);
                this.dyn_dtree = new Pb.Buf16(2 * (2 * td + 1));
                this.bl_tree = new Pb.Buf16(2 * (2 * B + 1));
                M(this.dyn_ltree);
                M(this.dyn_dtree);
                M(this.bl_tree);
                this.bl_desc = this.d_desc = this.l_desc = null;
                this.bl_count = new Pb.Buf16(xc + 1);
                this.heap = new Pb.Buf16(2 * nc + 1);
                M(this.heap);
                this.heap_max = this.heap_len = 0;
                this.depth = new Pb.Buf16(2 * nc + 1);
                M(this.depth);
                this.bi_valid = this.bi_buf = this.insert = this.matches = this.static_len = this.opt_len =
                    this.d_buf = this.last_lit = this.lit_bufsize = this.l_buf = 0
            }

            function Lc(g) {
                var l;
                return g && g.state ? (g.total_in = g.total_out = 0, g.data_type = od, l = g.state, l.pending = 0, l.pending_out = 0, 0 > l.wrap && (l.wrap = -l.wrap), l.status = l.wrap ? ab : qa, g.adler = 2 === l.wrap ? 0 : 1, l.last_flush = R, Rb._tr_init(l), gb) : P(g, S)
            }

            function bb(g) {
                var l = Lc(g);
                l === gb && (g = g.state, g.window_size = 2 * g.w_size, M(g.head), g.max_lazy_match = ac[g.level].max_lazy, g.good_match = ac[g.level].good_length, g.nice_match = ac[g.level].nice_length, g.max_chain_length = ac[g.level].max_chain,
                    g.strstart = 0, g.block_start = 0, g.lookahead = 0, g.insert = 0, g.match_length = g.prev_length = jb - 1, g.match_available = 0, g.ins_h = 0);
                return l
            }

            function $b(g, l, p, q, t, B) {
                if (!g) return S;
                var x = 1;
                if (l === ob && (l = 6), 0 > q ? (x = 0, q = -q) : 15 < q && (x = 2, q -= 16), 1 > t || t > Vd || p !== Tc || 8 > q || 15 < q || 0 > l || 9 < l || 0 > B || B > n) return P(g, S);
                8 === q && (q = 9);
                var z = new X;
                return g.state = z, z.strm = g, z.wrap = x, z.gzhead = null, z.w_bits = q, z.w_size = 1 << z.w_bits, z.w_mask = z.w_size - 1, z.hash_bits = t + 7, z.hash_size = 1 << z.hash_bits, z.hash_mask = z.hash_size - 1, z.hash_shift = ~~((z.hash_bits +
                    jb - 1) / jb), z.window = new Pb.Buf8(2 * z.w_size), z.head = new Pb.Buf16(z.hash_size), z.prev = new Pb.Buf16(z.w_size), z.lit_bufsize = 1 << t + 6, z.pending_buf_size = 4 * z.lit_bufsize, z.pending_buf = new Pb.Buf8(z.pending_buf_size), z.d_buf = 1 * z.lit_bufsize, z.l_buf = 3 * z.lit_bufsize, z.level = l, z.strategy = B, z.method = p, bb(g)
            }
            var Pb = t("../utils/common"),
                Rb = t("./trees"),
                pb = t("./adler32"),
                Qa = t("./crc32"),
                Qb = t("./messages"),
                R = 0,
                ra = 4,
                gb = 0,
                S = -2,
                ob = -1,
                nd = 1,
                n = 4,
                od = 2,
                Tc = 8,
                Vd = 9,
                nc = 286,
                td = 30,
                B = 19,
                dd = 2 * nc + 1,
                xc = 15,
                jb = 3,
                yb = 258,
                wb = yb + jb + 1,
                ab =
                42,
                qa = 113,
                da = 1,
                ke = 2,
                qc = 3,
                Pd = 4;
            var ac = [new oa(0, 0, 0, 0, function(g, l) {
                var n = 65535;
                for (n > g.pending_buf_size - 5 && (n = g.pending_buf_size - 5);;) {
                    if (1 >= g.lookahead) {
                        if (L(g), 0 === g.lookahead && l === R) return da;
                        if (0 === g.lookahead) break
                    }
                    g.strstart += g.lookahead;
                    g.lookahead = 0;
                    var p = g.block_start + n;
                    if ((0 === g.strstart || g.strstart >= p) && (g.lookahead = g.strstart - p, g.strstart = p, Aa(g, !1), 0 === g.strm.avail_out) || g.strstart - g.block_start >= g.w_size - wb && (Aa(g, !1), 0 === g.strm.avail_out)) return da
                }
                return g.insert = 0, l === ra ? (Aa(g, !0),
                    0 === g.strm.avail_out ? qc : Pd) : (g.strstart > g.block_start && Aa(g, !1), da)
            }), new oa(4, 4, 8, 4, pa), new oa(4, 5, 16, 8, pa), new oa(4, 6, 32, 32, pa), new oa(4, 4, 16, 16, Ca), new oa(8, 16, 32, 32, Ca), new oa(8, 16, 128, 128, Ca), new oa(8, 32, 128, 256, Ca), new oa(32, 128, 258, 1024, Ca), new oa(32, 258, 258, 4096, Ca)];
            G.deflateInit = function(g, l) {
                return $b(g, l, Tc, 15, 8, 0)
            };
            G.deflateInit2 = $b;
            G.deflateReset = bb;
            G.deflateResetKeep = Lc;
            G.deflateSetHeader = function(g, l) {
                return g && g.state ? 2 !== g.state.wrap ? S : (g.state.gzhead = l, gb) : S
            };
            G.deflate = function(l,
                n) {
                var t, z;
                if (!l || !l.state || 5 < n || 0 > n) return l ? P(l, S) : S;
                if (z = l.state, !l.output || !l.input && 0 !== l.avail_in || 666 === z.status && n !== ra) return P(l, 0 === l.avail_out ? -5 : S);
                if (z.strm = l, t = z.last_flush, z.last_flush = n, z.status === ab)
                    if (2 === z.wrap) l.adler = 0, q(z, 31), q(z, 139), q(z, 8), z.gzhead ? (q(z, (z.gzhead.text ? 1 : 0) + (z.gzhead.hcrc ? 2 : 0) + (z.gzhead.extra ? 4 : 0) + (z.gzhead.name ? 8 : 0) + (z.gzhead.comment ? 16 : 0)), q(z, 255 & z.gzhead.time), q(z, z.gzhead.time >> 8 & 255), q(z, z.gzhead.time >> 16 & 255), q(z, z.gzhead.time >> 24 & 255), q(z, 9 === z.level ?
                        2 : 2 <= z.strategy || 2 > z.level ? 4 : 0), q(z, 255 & z.gzhead.os), z.gzhead.extra && z.gzhead.extra.length && (q(z, 255 & z.gzhead.extra.length), q(z, z.gzhead.extra.length >> 8 & 255)), z.gzhead.hcrc && (l.adler = Qa(l.adler, z.pending_buf, z.pending, 0)), z.gzindex = 0, z.status = 69) : (q(z, 0), q(z, 0), q(z, 0), q(z, 0), q(z, 0), q(z, 9 === z.level ? 2 : 2 <= z.strategy || 2 > z.level ? 4 : 0), q(z, 3), z.status = qa);
                    else {
                        var x = Tc + (z.w_bits - 8 << 4) << 8;
                        x |= (2 <= z.strategy || 2 > z.level ? 0 : 6 > z.level ? 1 : 6 === z.level ? 2 : 3) << 6;
                        0 !== z.strstart && (x |= 32);
                        z.status = qa;
                        g(z, x + (31 - x % 31));
                        0 !==
                            z.strstart && (g(z, l.adler >>> 16), g(z, 65535 & l.adler));
                        l.adler = 1
                    } if (69 === z.status)
                    if (z.gzhead.extra) {
                        for (x = z.pending; z.gzindex < (65535 & z.gzhead.extra.length) && (z.pending !== z.pending_buf_size || (z.gzhead.hcrc && z.pending > x && (l.adler = Qa(l.adler, z.pending_buf, z.pending - x, x)), p(l), x = z.pending, z.pending !== z.pending_buf_size));) q(z, 255 & z.gzhead.extra[z.gzindex]), z.gzindex++;
                        z.gzhead.hcrc && z.pending > x && (l.adler = Qa(l.adler, z.pending_buf, z.pending - x, x));
                        z.gzindex === z.gzhead.extra.length && (z.gzindex = 0, z.status = 73)
                    } else z.status =
                        73;
                if (73 === z.status)
                    if (z.gzhead.name) {
                        x = z.pending;
                        do {
                            if (z.pending === z.pending_buf_size && (z.gzhead.hcrc && z.pending > x && (l.adler = Qa(l.adler, z.pending_buf, z.pending - x, x)), p(l), x = z.pending, z.pending === z.pending_buf_size)) {
                                var B = 1;
                                break
                            }
                            B = z.gzindex < z.gzhead.name.length ? 255 & z.gzhead.name.charCodeAt(z.gzindex++) : 0;
                            q(z, B)
                        } while (0 !== B);
                        z.gzhead.hcrc && z.pending > x && (l.adler = Qa(l.adler, z.pending_buf, z.pending - x, x));
                        0 === B && (z.gzindex = 0, z.status = 91)
                    } else z.status = 91;
                if (91 === z.status)
                    if (z.gzhead.comment) {
                        x = z.pending;
                        do {
                            if (z.pending === z.pending_buf_size && (z.gzhead.hcrc && z.pending > x && (l.adler = Qa(l.adler, z.pending_buf, z.pending - x, x)), p(l), x = z.pending, z.pending === z.pending_buf_size)) {
                                B = 1;
                                break
                            }
                            B = z.gzindex < z.gzhead.comment.length ? 255 & z.gzhead.comment.charCodeAt(z.gzindex++) : 0;
                            q(z, B)
                        } while (0 !== B);
                        z.gzhead.hcrc && z.pending > x && (l.adler = Qa(l.adler, z.pending_buf, z.pending - x, x));
                        0 === B && (z.status = 103)
                    } else z.status = 103;
                if (103 === z.status && (z.gzhead.hcrc ? (z.pending + 2 > z.pending_buf_size && p(l), z.pending + 2 <= z.pending_buf_size &&
                        (q(z, 255 & l.adler), q(z, l.adler >> 8 & 255), l.adler = 0, z.status = qa)) : z.status = qa), 0 !== z.pending) {
                    if (p(l), 0 === l.avail_out) return z.last_flush = -1, gb
                } else if (0 === l.avail_in && (n << 1) - (4 < n ? 9 : 0) <= (t << 1) - (4 < t ? 9 : 0) && n !== ra) return P(l, -5);
                if (666 === z.status && 0 !== l.avail_in) return P(l, -5);
                if (0 !== l.avail_in || 0 !== z.lookahead || n !== R && 666 !== z.status) {
                    if (2 === z.strategy) a: {
                        for (var C;;) {
                            if (0 === z.lookahead && (L(z), 0 === z.lookahead)) {
                                if (n === R) {
                                    var G = da;
                                    break a
                                }
                                break
                            }
                            if (z.match_length = 0, C = Rb._tr_tally(z, 0, z.window[z.strstart]),
                                z.lookahead--, z.strstart++, C && (Aa(z, !1), 0 === z.strm.avail_out)) {
                                G = da;
                                break a
                            }
                        }
                        G = (z.insert = 0, n === ra ? (Aa(z, !0), 0 === z.strm.avail_out ? qc : Pd) : z.last_lit && (Aa(z, !1), 0 === z.strm.avail_out) ? da : ke)
                    }
                    else if (3 === z.strategy) a: {
                        var X, la;
                        for (C = z.window;;) {
                            if (z.lookahead <= yb) {
                                if (L(z), z.lookahead <= yb && n === R) {
                                    G = da;
                                    break a
                                }
                                if (0 === z.lookahead) break
                            }
                            if (z.match_length = 0, z.lookahead >= jb && 0 < z.strstart && (la = z.strstart - 1, X = C[la], X === C[++la] && X === C[++la] && X === C[++la])) {
                                for (t = z.strstart + yb; X === C[++la] && X === C[++la] && X === C[++la] &&
                                    X === C[++la] && X === C[++la] && X === C[++la] && X === C[++la] && X === C[++la] && la < t;);
                                z.match_length = yb - (t - la);
                                z.match_length > z.lookahead && (z.match_length = z.lookahead)
                            }
                            if (z.match_length >= jb ? (G = Rb._tr_tally(z, 1, z.match_length - jb), z.lookahead -= z.match_length, z.strstart += z.match_length, z.match_length = 0) : (G = Rb._tr_tally(z, 0, z.window[z.strstart]), z.lookahead--, z.strstart++), G && (Aa(z, !1), 0 === z.strm.avail_out)) {
                                G = da;
                                break a
                            }
                        }
                        G = (z.insert = 0, n === ra ? (Aa(z, !0), 0 === z.strm.avail_out ? qc : Pd) : z.last_lit && (Aa(z, !1), 0 === z.strm.avail_out) ?
                            da : ke)
                    }
                    else G = ac[z.level].func(z, n);
                    if (G !== qc && G !== Pd || (z.status = 666), G === da || G === qc) return 0 === l.avail_out && (z.last_flush = -1), gb;
                    if (G === ke && (1 === n ? Rb._tr_align(z) : 5 !== n && (Rb._tr_stored_block(z, 0, 0, !1), 3 === n && (M(z.head), 0 === z.lookahead && (z.strstart = 0, z.block_start = 0, z.insert = 0))), p(l), 0 === l.avail_out)) return z.last_flush = -1, gb
                }
                return n !== ra ? gb : 0 >= z.wrap ? 1 : (2 === z.wrap ? (q(z, 255 & l.adler), q(z, l.adler >> 8 & 255), q(z, l.adler >> 16 & 255), q(z, l.adler >> 24 & 255), q(z, 255 & l.total_in), q(z, l.total_in >> 8 & 255), q(z, l.total_in >>
                    16 & 255), q(z, l.total_in >> 24 & 255)) : (g(z, l.adler >>> 16), g(z, 65535 & l.adler)), p(l), 0 < z.wrap && (z.wrap = -z.wrap), 0 !== z.pending ? gb : 1)
            };
            G.deflateEnd = function(g) {
                var l;
                return g && g.state ? (l = g.state.status, l !== ab && 69 !== l && 73 !== l && 91 !== l && 103 !== l && l !== qa && 666 !== l ? P(g, S) : (g.state = null, l === qa ? P(g, -3) : gb)) : S
            };
            G.deflateSetDictionary = function(g, l) {
                var n, p, q;
                var t = l.length;
                if (!g || !g.state || (n = g.state, p = n.wrap, 2 === p || 1 === p && n.status !== ab || n.lookahead)) return S;
                1 === p && (g.adler = pb(g.adler, l, t, 0));
                n.wrap = 0;
                t >= n.w_size && (0 ===
                    p && (M(n.head), n.strstart = 0, n.block_start = 0, n.insert = 0), q = new Pb.Buf8(n.w_size), Pb.arraySet(q, l, t - n.w_size, n.w_size, 0), l = q, t = n.w_size);
                q = g.avail_in;
                var x = g.next_in;
                var B = g.input;
                g.avail_in = t;
                g.next_in = 0;
                g.input = l;
                for (L(n); n.lookahead >= jb;) {
                    l = n.strstart;
                    t = n.lookahead - (jb - 1);
                    do n.ins_h = (n.ins_h << n.hash_shift ^ n.window[l + jb - 1]) & n.hash_mask, n.prev[l & n.w_mask] = n.head[n.ins_h], n.head[n.ins_h] = l, l++; while (--t);
                    n.strstart = l;
                    n.lookahead = jb - 1;
                    L(n)
                }
                return n.strstart += n.lookahead, n.block_start = n.strstart, n.insert =
                    n.lookahead, n.lookahead = 0, n.match_length = n.prev_length = jb - 1, n.match_available = 0, g.next_in = x, g.input = B, g.avail_in = q, n.wrap = p, gb
            };
            G.deflateInfo = "pako deflate (from Nodeca project)"
        }, {
            "../utils/common": 3,
            "./adler32": 5,
            "./crc32": 7,
            "./messages": 13,
            "./trees": 14
        }],
        9: [function(t, C, G) {
            C.exports = function() {
                this.os = this.xflags = this.time = this.text = 0;
                this.extra = null;
                this.extra_len = 0;
                this.comment = this.name = "";
                this.hcrc = 0;
                this.done = !1
            }
        }, {}],
        10: [function(t, C, G) {
            C.exports = function(t, C) {
                var p, G, q;
                var g = t.state;
                var l =
                    t.next_in;
                var L = t.input;
                var P = l + (t.avail_in - 5);
                var M = t.next_out;
                var oa = t.output;
                C = M - (C - t.avail_out);
                var X = M + (t.avail_out - 257);
                var Lc = g.dmax;
                var bb = g.wsize;
                var $b = g.whave;
                var Pb = g.wnext;
                var Rb = g.window;
                var pb = g.hold;
                var Qa = g.bits;
                var Qb = g.lencode;
                var R = g.distcode;
                var ra = (1 << g.lenbits) - 1;
                var gb = (1 << g.distbits) - 1;
                a: do {
                    15 > Qa && (pb += L[l++] << Qa, Qa += 8, pb += L[l++] << Qa, Qa += 8);
                    var S = Qb[pb & ra];
                    b: for (;;) {
                        if (p = S >>> 24, pb >>>= p, Qa -= p, p = S >>> 16 & 255, 0 === p) oa[M++] = 65535 & S;
                        else {
                            if (!(16 & p)) {
                                if (0 === (64 & p)) {
                                    S = Qb[(65535 & S) +
                                        (pb & (1 << p) - 1)];
                                    continue b
                                }
                                if (32 & p) {
                                    g.mode = 12;
                                    break a
                                }
                                t.msg = "invalid literal/length code";
                                g.mode = 30;
                                break a
                            }
                            var ob = 65535 & S;
                            (p &= 15) && (Qa < p && (pb += L[l++] << Qa, Qa += 8), ob += pb & (1 << p) - 1, pb >>>= p, Qa -= p);
                            15 > Qa && (pb += L[l++] << Qa, Qa += 8, pb += L[l++] << Qa, Qa += 8);
                            S = R[pb & gb];
                            c: for (;;) {
                                if (p = S >>> 24, pb >>>= p, Qa -= p, p = S >>> 16 & 255, !(16 & p)) {
                                    if (0 === (64 & p)) {
                                        S = R[(65535 & S) + (pb & (1 << p) - 1)];
                                        continue c
                                    }
                                    t.msg = "invalid distance code";
                                    g.mode = 30;
                                    break a
                                }
                                if (G = 65535 & S, p &= 15, Qa < p && (pb += L[l++] << Qa, Qa += 8, Qa < p && (pb += L[l++] << Qa, Qa += 8)), G += pb & (1 <<
                                        p) - 1, G > Lc) {
                                    t.msg = "invalid distance too far back";
                                    g.mode = 30;
                                    break a
                                }
                                if (pb >>>= p, Qa -= p, p = M - C, G > p) {
                                    if (p = G - p, p > $b && g.sane) {
                                        t.msg = "invalid distance too far back";
                                        g.mode = 30;
                                        break a
                                    }
                                    if (S = 0, q = Rb, 0 === Pb) {
                                        if (S += bb - p, p < ob) {
                                            ob -= p;
                                            do oa[M++] = Rb[S++]; while (--p);
                                            S = M - G;
                                            q = oa
                                        }
                                    } else if (Pb < p) {
                                        if (S += bb + Pb - p, p -= Pb, p < ob) {
                                            ob -= p;
                                            do oa[M++] = Rb[S++]; while (--p);
                                            if (S = 0, Pb < ob) {
                                                p = Pb;
                                                ob -= p;
                                                do oa[M++] = Rb[S++]; while (--p);
                                                S = M - G;
                                                q = oa
                                            }
                                        }
                                    } else if (S += Pb - p, p < ob) {
                                        ob -= p;
                                        do oa[M++] = Rb[S++]; while (--p);
                                        S = M - G;
                                        q = oa
                                    }
                                    for (; 2 < ob;) oa[M++] = q[S++], oa[M++] =
                                        q[S++], oa[M++] = q[S++], ob -= 3;
                                    ob && (oa[M++] = q[S++], 1 < ob && (oa[M++] = q[S++]))
                                } else {
                                    S = M - G;
                                    do oa[M++] = oa[S++], oa[M++] = oa[S++], oa[M++] = oa[S++], ob -= 3; while (2 < ob);
                                    ob && (oa[M++] = oa[S++], 1 < ob && (oa[M++] = oa[S++]))
                                }
                                break
                            }
                        }
                        break
                    }
                } while (l < P && M < X);
                ob = Qa >> 3;
                l -= ob;
                Qa -= ob << 3;
                t.next_in = l;
                t.next_out = M;
                t.avail_in = l < P ? 5 + (P - l) : 5 - (l - P);
                t.avail_out = M < X ? 257 + (X - M) : 257 - (M - X);
                g.hold = pb & (1 << Qa) - 1;
                g.bits = Qa
            }
        }, {}],
        11: [function(t, C, G) {
            function P(g) {
                return (g >>> 24 & 255) + (g >>> 8 & 65280) + ((65280 & g) << 8) + ((255 & g) << 24)
            }

            function M() {
                this.mode = 0;
                this.last = !1;
                this.wrap = 0;
                this.havedict = !1;
                this.total = this.check = this.dmax = this.flags = 0;
                this.head = null;
                this.wnext = this.whave = this.wsize = this.wbits = 0;
                this.window = null;
                this.extra = this.offset = this.length = this.bits = this.hold = 0;
                this.distcode = this.lencode = null;
                this.have = this.ndist = this.nlen = this.ncode = this.distbits = this.lenbits = 0;
                this.next = null;
                this.lens = new Ca.Buf16(320);
                this.work = new Ca.Buf16(288);
                this.distdyn = this.lendyn = null;
                this.was = this.back = this.sane = 0
            }

            function p(g) {
                var l;
                return g && g.state ? (l = g.state,
                    g.total_in = g.total_out = l.total = 0, g.msg = "", l.wrap && (g.adler = 1 & l.wrap), l.mode = Rb, l.last = 0, l.havedict = 0, l.dmax = 32768, l.head = null, l.hold = 0, l.bits = 0, l.lencode = l.lendyn = new Ca.Buf32(pb), l.distcode = l.distdyn = new Ca.Buf32(Qa), l.sane = 1, l.back = -1, $b) : Pb
            }

            function Aa(g) {
                var l;
                return g && g.state ? (l = g.state, l.wsize = 0, l.whave = 0, l.wnext = 0, p(g)) : Pb
            }

            function q(g, l) {
                var p, q;
                return g && g.state ? (q = g.state, 0 > l ? (p = 0, l = -l) : (p = (l >> 4) + 1, 48 > l && (l &= 15)), l && (8 > l || 15 < l) ? Pb : (null !== q.window && q.wbits !== l && (q.window = null), q.wrap = p,
                    q.wbits = l, Aa(g))) : Pb
            }

            function g(g, l) {
                var p, t;
                return g ? (t = new M, g.state = t, t.window = null, p = q(g, l), p !== $b && (g.state = null), p) : Pb
            }

            function l(g, l, p, q) {
                var t;
                g = g.state;
                return null === g.window && (g.wsize = 1 << g.wbits, g.wnext = 0, g.whave = 0, g.window = new Ca.Buf8(g.wsize)), q >= g.wsize ? (Ca.arraySet(g.window, l, p - g.wsize, g.wsize, 0), g.wnext = 0, g.whave = g.wsize) : (t = g.wsize - g.wnext, t > q && (t = q), Ca.arraySet(g.window, l, p - q, t, g.wnext), q -= t, q ? (Ca.arraySet(g.window, l, p - q, q, 0), g.wnext = q, g.whave = g.wsize) : (g.wnext += t, g.wnext === g.wsize &&
                    (g.wnext = 0), g.whave < g.wsize && (g.whave += t))), 0
            }
            var L, pa, Ca = t("../utils/common"),
                oa = t("./adler32"),
                X = t("./crc32"),
                Lc = t("./inffast"),
                bb = t("./inftrees"),
                $b = 0,
                Pb = -2,
                Rb = 1,
                pb = 852,
                Qa = 592,
                Qb = !0;
            G.inflateReset = Aa;
            G.inflateReset2 = q;
            G.inflateResetKeep = p;
            G.inflateInit = function(l) {
                return g(l, 15)
            };
            G.inflateInit2 = g;
            G.inflate = function(g, p) {
                var q, t, C, G, n, M, R, ra = 0,
                    Aa = new Ca.Buf8(4),
                    Qa = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
                if (!g || !g.state || !g.output || !g.input && 0 !== g.avail_in) return Pb;
                var B = g.state;
                12 === B.mode &&
                    (B.mode = 13);
                var pb = g.next_out;
                var xc = g.output;
                var jb = g.avail_out;
                var yb = g.next_in;
                var wb = g.input;
                var ab = g.avail_in;
                var qa = B.hold;
                var da = B.bits;
                var ke = ab;
                var qc = jb;
                var Pd = $b;
                a: for (;;) switch (B.mode) {
                    case Rb:
                        if (0 === B.wrap) {
                            B.mode = 13;
                            break
                        }
                        for (; 16 > da;) {
                            if (0 === ab) break a;
                            ab--;
                            qa += wb[yb++] << da;
                            da += 8
                        }
                        if (2 & B.wrap && 35615 === qa) {
                            B.check = 0;
                            Aa[0] = 255 & qa;
                            Aa[1] = qa >>> 8 & 255;
                            B.check = X(B.check, Aa, 2, 0);
                            da = qa = 0;
                            B.mode = 2;
                            break
                        }
                        if (B.flags = 0, B.head && (B.head.done = !1), !(1 & B.wrap) || (((255 & qa) << 8) + (qa >> 8)) % 31) {
                            g.msg = "incorrect header check";
                            B.mode = 30;
                            break
                        }
                        if (8 !== (15 & qa)) {
                            g.msg = "unknown compression method";
                            B.mode = 30;
                            break
                        }
                        if (qa >>>= 4, da -= 4, M = (15 & qa) + 8, 0 === B.wbits) B.wbits = M;
                        else if (M > B.wbits) {
                            g.msg = "invalid window size";
                            B.mode = 30;
                            break
                        }
                        B.dmax = 1 << M;
                        g.adler = B.check = 1;
                        B.mode = 512 & qa ? 10 : 12;
                        da = qa = 0;
                        break;
                    case 2:
                        for (; 16 > da;) {
                            if (0 === ab) break a;
                            ab--;
                            qa += wb[yb++] << da;
                            da += 8
                        }
                        if (B.flags = qa, 8 !== (255 & B.flags)) {
                            g.msg = "unknown compression method";
                            B.mode = 30;
                            break
                        }
                        if (57344 & B.flags) {
                            g.msg = "unknown header flags set";
                            B.mode = 30;
                            break
                        }
                        B.head && (B.head.text = qa >>
                            8 & 1);
                        512 & B.flags && (Aa[0] = 255 & qa, Aa[1] = qa >>> 8 & 255, B.check = X(B.check, Aa, 2, 0));
                        da = qa = 0;
                        B.mode = 3;
                    case 3:
                        for (; 32 > da;) {
                            if (0 === ab) break a;
                            ab--;
                            qa += wb[yb++] << da;
                            da += 8
                        }
                        B.head && (B.head.time = qa);
                        512 & B.flags && (Aa[0] = 255 & qa, Aa[1] = qa >>> 8 & 255, Aa[2] = qa >>> 16 & 255, Aa[3] = qa >>> 24 & 255, B.check = X(B.check, Aa, 4, 0));
                        da = qa = 0;
                        B.mode = 4;
                    case 4:
                        for (; 16 > da;) {
                            if (0 === ab) break a;
                            ab--;
                            qa += wb[yb++] << da;
                            da += 8
                        }
                        B.head && (B.head.xflags = 255 & qa, B.head.os = qa >> 8);
                        512 & B.flags && (Aa[0] = 255 & qa, Aa[1] = qa >>> 8 & 255, B.check = X(B.check, Aa, 2, 0));
                        da = qa = 0;
                        B.mode =
                            5;
                    case 5:
                        if (1024 & B.flags) {
                            for (; 16 > da;) {
                                if (0 === ab) break a;
                                ab--;
                                qa += wb[yb++] << da;
                                da += 8
                            }
                            B.length = qa;
                            B.head && (B.head.extra_len = qa);
                            512 & B.flags && (Aa[0] = 255 & qa, Aa[1] = qa >>> 8 & 255, B.check = X(B.check, Aa, 2, 0));
                            da = qa = 0
                        } else B.head && (B.head.extra = null);
                        B.mode = 6;
                    case 6:
                        if (1024 & B.flags && (q = B.length, q > ab && (q = ab), q && (B.head && (M = B.head.extra_len - B.length, B.head.extra || (B.head.extra = Array(B.head.extra_len)), Ca.arraySet(B.head.extra, wb, yb, q, M)), 512 & B.flags && (B.check = X(B.check, wb, q, yb)), ab -= q, yb += q, B.length -= q), B.length)) break a;
                        B.length = 0;
                        B.mode = 7;
                    case 7:
                        if (2048 & B.flags) {
                            if (0 === ab) break a;
                            q = 0;
                            do M = wb[yb + q++], B.head && M && 65536 > B.length && (B.head.name += String.fromCharCode(M)); while (M && q < ab);
                            if (512 & B.flags && (B.check = X(B.check, wb, q, yb)), ab -= q, yb += q, M) break a
                        } else B.head && (B.head.name = null);
                        B.length = 0;
                        B.mode = 8;
                    case 8:
                        if (4096 & B.flags) {
                            if (0 === ab) break a;
                            q = 0;
                            do M = wb[yb + q++], B.head && M && 65536 > B.length && (B.head.comment += String.fromCharCode(M)); while (M && q < ab);
                            if (512 & B.flags && (B.check = X(B.check, wb, q, yb)), ab -= q, yb += q, M) break a
                        } else B.head &&
                            (B.head.comment = null);
                        B.mode = 9;
                    case 9:
                        if (512 & B.flags) {
                            for (; 16 > da;) {
                                if (0 === ab) break a;
                                ab--;
                                qa += wb[yb++] << da;
                                da += 8
                            }
                            if (qa !== (65535 & B.check)) {
                                g.msg = "header crc mismatch";
                                B.mode = 30;
                                break
                            }
                            da = qa = 0
                        }
                        B.head && (B.head.hcrc = B.flags >> 9 & 1, B.head.done = !0);
                        g.adler = B.check = 0;
                        B.mode = 12;
                        break;
                    case 10:
                        for (; 32 > da;) {
                            if (0 === ab) break a;
                            ab--;
                            qa += wb[yb++] << da;
                            da += 8
                        }
                        g.adler = B.check = P(qa);
                        da = qa = 0;
                        B.mode = 11;
                    case 11:
                        if (0 === B.havedict) return g.next_out = pb, g.avail_out = jb, g.next_in = yb, g.avail_in = ab, B.hold = qa, B.bits = da, 2;
                        g.adler = B.check =
                            1;
                        B.mode = 12;
                    case 12:
                        if (5 === p || 6 === p) break a;
                    case 13:
                        if (B.last) {
                            qa >>>= 7 & da;
                            da -= 7 & da;
                            B.mode = 27;
                            break
                        }
                        for (; 3 > da;) {
                            if (0 === ab) break a;
                            ab--;
                            qa += wb[yb++] << da;
                            da += 8
                        }
                        switch (B.last = 1 & qa, qa >>>= 1, --da, 3 & qa) {
                            case 0:
                                B.mode = 14;
                                break;
                            case 1:
                                var ac = B;
                                if (Qb) {
                                    L = new Ca.Buf32(512);
                                    pa = new Ca.Buf32(32);
                                    for (C = 0; 144 > C;) ac.lens[C++] = 8;
                                    for (; 256 > C;) ac.lens[C++] = 9;
                                    for (; 280 > C;) ac.lens[C++] = 7;
                                    for (; 288 > C;) ac.lens[C++] = 8;
                                    bb(1, ac.lens, 0, 288, L, 0, ac.work, {
                                        bits: 9
                                    });
                                    for (C = 0; 32 > C;) ac.lens[C++] = 5;
                                    bb(2, ac.lens, 0, 32, pa, 0, ac.work, {
                                        bits: 5
                                    });
                                    Qb = !1
                                }
                                ac.lencode = L;
                                ac.lenbits = 9;
                                ac.distcode = pa;
                                ac.distbits = 5;
                                if (B.mode = 20, 6 === p) {
                                    qa >>>= 2;
                                    da -= 2;
                                    break a
                                }
                                break;
                            case 2:
                                B.mode = 17;
                                break;
                            case 3:
                                g.msg = "invalid block type", B.mode = 30
                        }
                        qa >>>= 2;
                        da -= 2;
                        break;
                    case 14:
                        qa >>>= 7 & da;
                        for (da -= 7 & da; 32 > da;) {
                            if (0 === ab) break a;
                            ab--;
                            qa += wb[yb++] << da;
                            da += 8
                        }
                        if ((65535 & qa) !== (qa >>> 16 ^ 65535)) {
                            g.msg = "invalid stored block lengths";
                            B.mode = 30;
                            break
                        }
                        if (B.length = 65535 & qa, qa = 0, da = 0, B.mode = 15, 6 === p) break a;
                    case 15:
                        B.mode = 16;
                    case 16:
                        if (q = B.length) {
                            if (q > ab && (q = ab), q > jb && (q = jb), 0 === q) break a;
                            Ca.arraySet(xc, wb, yb, q, pb);
                            ab -= q;
                            yb += q;
                            jb -= q;
                            pb += q;
                            B.length -= q;
                            break
                        }
                        B.mode = 12;
                        break;
                    case 17:
                        for (; 14 > da;) {
                            if (0 === ab) break a;
                            ab--;
                            qa += wb[yb++] << da;
                            da += 8
                        }
                        if (B.nlen = (31 & qa) + 257, qa >>>= 5, da -= 5, B.ndist = (31 & qa) + 1, qa >>>= 5, da -= 5, B.ncode = (15 & qa) + 4, qa >>>= 4, da -= 4, 286 < B.nlen || 30 < B.ndist) {
                            g.msg = "too many length or distance symbols";
                            B.mode = 30;
                            break
                        }
                        B.have = 0;
                        B.mode = 18;
                    case 18:
                        for (; B.have < B.ncode;) {
                            for (; 3 > da;) {
                                if (0 === ab) break a;
                                ab--;
                                qa += wb[yb++] << da;
                                da += 8
                            }
                            B.lens[Qa[B.have++]] = 7 & qa;
                            qa >>>= 3;
                            da -= 3
                        }
                        for (; 19 > B.have;) B.lens[Qa[B.have++]] =
                            0;
                        if (B.lencode = B.lendyn, B.lenbits = 7, R = {
                                bits: B.lenbits
                            }, Pd = bb(0, B.lens, 0, 19, B.lencode, 0, B.work, R), B.lenbits = R.bits, Pd) {
                            g.msg = "invalid code lengths set";
                            B.mode = 30;
                            break
                        }
                        B.have = 0;
                        B.mode = 19;
                    case 19:
                        for (; B.have < B.nlen + B.ndist;) {
                            for (; ra = B.lencode[qa & (1 << B.lenbits) - 1], G = ra >>> 24, ac = 65535 & ra, !(G <= da);) {
                                if (0 === ab) break a;
                                ab--;
                                qa += wb[yb++] << da;
                                da += 8
                            }
                            if (16 > ac) qa >>>= G, da -= G, B.lens[B.have++] = ac;
                            else {
                                if (16 === ac) {
                                    for (C = G + 2; da < C;) {
                                        if (0 === ab) break a;
                                        ab--;
                                        qa += wb[yb++] << da;
                                        da += 8
                                    }
                                    if (qa >>>= G, da -= G, 0 === B.have) {
                                        g.msg = "invalid bit length repeat";
                                        B.mode = 30;
                                        break
                                    }
                                    M = B.lens[B.have - 1];
                                    q = 3 + (3 & qa);
                                    qa >>>= 2;
                                    da -= 2
                                } else if (17 === ac) {
                                    for (C = G + 3; da < C;) {
                                        if (0 === ab) break a;
                                        ab--;
                                        qa += wb[yb++] << da;
                                        da += 8
                                    }
                                    qa >>>= G;
                                    da -= G;
                                    M = 0;
                                    q = 3 + (7 & qa);
                                    qa >>>= 3;
                                    da -= 3
                                } else {
                                    for (C = G + 7; da < C;) {
                                        if (0 === ab) break a;
                                        ab--;
                                        qa += wb[yb++] << da;
                                        da += 8
                                    }
                                    qa >>>= G;
                                    da -= G;
                                    M = 0;
                                    q = 11 + (127 & qa);
                                    qa >>>= 7;
                                    da -= 7
                                }
                                if (B.have + q > B.nlen + B.ndist) {
                                    g.msg = "invalid bit length repeat";
                                    B.mode = 30;
                                    break
                                }
                                for (; q--;) B.lens[B.have++] = M
                            }
                        }
                        if (30 === B.mode) break;
                        if (0 === B.lens[256]) {
                            g.msg = "invalid code -- missing end-of-block";
                            B.mode = 30;
                            break
                        }
                        if (B.lenbits = 9, R = {
                                bits: B.lenbits
                            }, Pd = bb(1, B.lens, 0, B.nlen, B.lencode, 0, B.work, R), B.lenbits = R.bits, Pd) {
                            g.msg = "invalid literal/lengths set";
                            B.mode = 30;
                            break
                        }
                        if (B.distbits = 6, B.distcode = B.distdyn, R = {
                                bits: B.distbits
                            }, Pd = bb(2, B.lens, B.nlen, B.ndist, B.distcode, 0, B.work, R), B.distbits = R.bits, Pd) {
                            g.msg = "invalid distances set";
                            B.mode = 30;
                            break
                        }
                        if (B.mode = 20, 6 === p) break a;
                    case 20:
                        B.mode = 21;
                    case 21:
                        if (6 <= ab && 258 <= jb) {
                            g.next_out = pb;
                            g.avail_out = jb;
                            g.next_in = yb;
                            g.avail_in = ab;
                            B.hold = qa;
                            B.bits = da;
                            Lc(g, qc);
                            pb = g.next_out;
                            xc = g.output;
                            jb = g.avail_out;
                            yb = g.next_in;
                            wb = g.input;
                            ab = g.avail_in;
                            qa = B.hold;
                            da = B.bits;
                            12 === B.mode && (B.back = -1);
                            break
                        }
                        for (B.back = 0; ra = B.lencode[qa & (1 << B.lenbits) - 1], G = ra >>> 24, C = ra >>> 16 & 255, ac = 65535 & ra, !(G <= da);) {
                            if (0 === ab) break a;
                            ab--;
                            qa += wb[yb++] << da;
                            da += 8
                        }
                        if (C && 0 === (240 & C)) {
                            var x = G;
                            var Fc = C;
                            for (n = ac; ra = B.lencode[n + ((qa & (1 << x + Fc) - 1) >> x)], G = ra >>> 24, C = ra >>> 16 & 255, ac = 65535 & ra, !(x + G <= da);) {
                                if (0 === ab) break a;
                                ab--;
                                qa += wb[yb++] << da;
                                da += 8
                            }
                            qa >>>= x;
                            da -= x;
                            B.back += x
                        }
                        if (qa >>>= G, da -= G, B.back += G, B.length = ac, 0 ===
                            C) {
                            B.mode = 26;
                            break
                        }
                        if (32 & C) {
                            B.back = -1;
                            B.mode = 12;
                            break
                        }
                        if (64 & C) {
                            g.msg = "invalid literal/length code";
                            B.mode = 30;
                            break
                        }
                        B.extra = 15 & C;
                        B.mode = 22;
                    case 22:
                        if (B.extra) {
                            for (C = B.extra; da < C;) {
                                if (0 === ab) break a;
                                ab--;
                                qa += wb[yb++] << da;
                                da += 8
                            }
                            B.length += qa & (1 << B.extra) - 1;
                            qa >>>= B.extra;
                            da -= B.extra;
                            B.back += B.extra
                        }
                        B.was = B.length;
                        B.mode = 23;
                    case 23:
                        for (; ra = B.distcode[qa & (1 << B.distbits) - 1], G = ra >>> 24, C = ra >>> 16 & 255, ac = 65535 & ra, !(G <= da);) {
                            if (0 === ab) break a;
                            ab--;
                            qa += wb[yb++] << da;
                            da += 8
                        }
                        if (0 === (240 & C)) {
                            x = G;
                            Fc = C;
                            for (n = ac; ra = B.distcode[n +
                                    ((qa & (1 << x + Fc) - 1) >> x)], G = ra >>> 24, C = ra >>> 16 & 255, ac = 65535 & ra, !(x + G <= da);) {
                                if (0 === ab) break a;
                                ab--;
                                qa += wb[yb++] << da;
                                da += 8
                            }
                            qa >>>= x;
                            da -= x;
                            B.back += x
                        }
                        if (qa >>>= G, da -= G, B.back += G, 64 & C) {
                            g.msg = "invalid distance code";
                            B.mode = 30;
                            break
                        }
                        B.offset = ac;
                        B.extra = 15 & C;
                        B.mode = 24;
                    case 24:
                        if (B.extra) {
                            for (C = B.extra; da < C;) {
                                if (0 === ab) break a;
                                ab--;
                                qa += wb[yb++] << da;
                                da += 8
                            }
                            B.offset += qa & (1 << B.extra) - 1;
                            qa >>>= B.extra;
                            da -= B.extra;
                            B.back += B.extra
                        }
                        if (B.offset > B.dmax) {
                            g.msg = "invalid distance too far back";
                            B.mode = 30;
                            break
                        }
                        B.mode = 25;
                    case 25:
                        if (0 ===
                            jb) break a;
                        if (q = qc - jb, B.offset > q) {
                            if (q = B.offset - q, q > B.whave && B.sane) {
                                g.msg = "invalid distance too far back";
                                B.mode = 30;
                                break
                            }
                            q > B.wnext ? (q -= B.wnext, t = B.wsize - q) : t = B.wnext - q;
                            q > B.length && (q = B.length);
                            C = B.window
                        } else C = xc, t = pb - B.offset, q = B.length;
                        q > jb && (q = jb);
                        jb -= q;
                        B.length -= q;
                        do xc[pb++] = C[t++]; while (--q);
                        0 === B.length && (B.mode = 21);
                        break;
                    case 26:
                        if (0 === jb) break a;
                        xc[pb++] = B.length;
                        jb--;
                        B.mode = 21;
                        break;
                    case 27:
                        if (B.wrap) {
                            for (; 32 > da;) {
                                if (0 === ab) break a;
                                ab--;
                                qa |= wb[yb++] << da;
                                da += 8
                            }
                            if (qc -= jb, g.total_out += qc,
                                B.total += qc, qc && (g.adler = B.check = B.flags ? X(B.check, xc, qc, pb - qc) : oa(B.check, xc, qc, pb - qc)), qc = jb, (B.flags ? qa : P(qa)) !== B.check) {
                                g.msg = "incorrect data check";
                                B.mode = 30;
                                break
                            }
                            da = qa = 0
                        }
                        B.mode = 28;
                    case 28:
                        if (B.wrap && B.flags) {
                            for (; 32 > da;) {
                                if (0 === ab) break a;
                                ab--;
                                qa += wb[yb++] << da;
                                da += 8
                            }
                            if (qa !== (4294967295 & B.total)) {
                                g.msg = "incorrect length check";
                                B.mode = 30;
                                break
                            }
                            da = qa = 0
                        }
                        B.mode = 29;
                    case 29:
                        Pd = 1;
                        break a;
                    case 30:
                        Pd = -3;
                        break a;
                    case 31:
                        return -4;
                    default:
                        return Pb
                }
                return g.next_out = pb, g.avail_out = jb, g.next_in = yb, g.avail_in =
                    ab, B.hold = qa, B.bits = da, (B.wsize || qc !== g.avail_out && 30 > B.mode && (27 > B.mode || 4 !== p)) && l(g, g.output, g.next_out, qc - g.avail_out) ? (B.mode = 31, -4) : (ke -= g.avail_in, qc -= g.avail_out, g.total_in += ke, g.total_out += qc, B.total += qc, B.wrap && qc && (g.adler = B.check = B.flags ? X(B.check, xc, qc, g.next_out - qc) : oa(B.check, xc, qc, g.next_out - qc)), g.data_type = B.bits + (B.last ? 64 : 0) + (12 === B.mode ? 128 : 0) + (20 === B.mode || 15 === B.mode ? 256 : 0), (0 === ke && 0 === qc || 4 === p) && Pd === $b && (Pd = -5), Pd)
            };
            G.inflateEnd = function(g) {
                if (!g || !g.state) return Pb;
                var l =
                    g.state;
                return l.window && (l.window = null), g.state = null, $b
            };
            G.inflateGetHeader = function(g, l) {
                var p;
                return g && g.state ? (p = g.state, 0 === (2 & p.wrap) ? Pb : (p.head = l, l.done = !1, $b)) : Pb
            };
            G.inflateSetDictionary = function(g, p) {
                var q, t, C = p.length;
                return g && g.state ? (q = g.state, 0 !== q.wrap && 11 !== q.mode ? Pb : 11 === q.mode && (t = 1, t = oa(t, p, C, 0), t !== q.check) ? -3 : l(g, p, C, C) ? (q.mode = 31, -4) : (q.havedict = 1, $b)) : Pb
            };
            G.inflateInfo = "pako inflate (from Nodeca project)"
        }, {
            "../utils/common": 3,
            "./adler32": 5,
            "./crc32": 7,
            "./inffast": 10,
            "./inftrees": 12
        }],
        12: [function(t, C, G) {
            var P = t("../utils/common"),
                M = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0],
                p = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78],
                Aa = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0],
                q = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
            C.exports = function(g, l, t, C, G, oa, X, Lc) {
                var L,
                    pa, Ca, Rb, pb, Qa, Qb = Lc.bits,
                    R, ra, gb, S, ob, nd = 0,
                    n, od = null,
                    Tc = 0,
                    Vd = new P.Buf16(16);
                var nc = new P.Buf16(16);
                var td = null,
                    B = 0;
                for (R = 0; 15 >= R; R++) Vd[R] = 0;
                for (ra = 0; ra < C; ra++) Vd[l[t + ra]]++;
                var dd = Qb;
                for (gb = 15; 1 <= gb && 0 === Vd[gb]; gb--);
                if (dd > gb && (dd = gb), 0 === gb) return G[oa++] = 20971520, G[oa++] = 20971520, Lc.bits = 1, 0;
                for (Qb = 1; Qb < gb && 0 === Vd[Qb]; Qb++);
                dd < Qb && (dd = Qb);
                for (R = L = 1; 15 >= R; R++)
                    if (L <<= 1, L -= Vd[R], 0 > L) return -1;
                if (0 < L && (0 === g || 1 !== gb)) return -1;
                nc[1] = 0;
                for (R = 1; 15 > R; R++) nc[R + 1] = nc[R] + Vd[R];
                for (ra = 0; ra < C; ra++) 0 !== l[t +
                    ra] && (X[nc[l[t + ra]]++] = ra);
                if (0 === g ? (od = td = X, Rb = 19) : 1 === g ? (od = M, Tc -= 257, td = p, B -= 257, Rb = 256) : (od = Aa, td = q, Rb = -1), n = 0, ra = 0, R = Qb, nc = oa, S = dd, ob = 0, Ca = -1, nd = 1 << dd, C = nd - 1, 1 === g && 852 < nd || 2 === g && 592 < nd) return 1;
                for (var xc = 0;;) {
                    xc++;
                    var jb = R - ob;
                    X[ra] < Rb ? (pb = 0, Qa = X[ra]) : X[ra] > Rb ? (pb = td[B + X[ra]], Qa = od[Tc + X[ra]]) : (pb = 96, Qa = 0);
                    L = 1 << R - ob;
                    Qb = pa = 1 << S;
                    do pa -= L, G[nc + (n >> ob) + pa] = jb << 24 | pb << 16 | Qa | 0; while (0 !== pa);
                    for (L = 1 << R - 1; n & L;) L >>= 1;
                    if (0 !== L ? (n &= L - 1, n += L) : n = 0, ra++, 0 === --Vd[R]) {
                        if (R === gb) break;
                        R = l[t + X[ra]]
                    }
                    if (R > dd &&
                        (n & C) !== Ca) {
                        0 === ob && (ob = dd);
                        nc += Qb;
                        S = R - ob;
                        for (L = 1 << S; S + ob < gb && (L -= Vd[S + ob], !(0 >= L));) S++, L <<= 1;
                        if (nd += 1 << S, 1 === g && 852 < nd || 2 === g && 592 < nd) return 1;
                        Ca = n & C;
                        G[Ca] = dd << 24 | S << 16 | nc - oa | 0
                    }
                }
                return 0 !== n && (G[nc + n] = R - ob << 24 | 4194304), Lc.bits = dd, 0
            }
        }, {
            "../utils/common": 3
        }],
        13: [function(t, C, G) {
            C.exports = {
                2: "need dictionary",
                1: "stream end",
                0: "",
                "-1": "file error",
                "-2": "stream error",
                "-3": "data error",
                "-4": "insufficient memory",
                "-5": "buffer error",
                "-6": "incompatible version"
            }
        }, {}],
        14: [function(t, C, G) {
            function P(g) {
                for (var l =
                        g.length; 0 <= --l;) g[l] = 0
            }

            function M(g, l, n, p, q) {
                this.static_tree = g;
                this.extra_bits = l;
                this.extra_base = n;
                this.elems = p;
                this.max_length = q;
                this.has_stree = g && g.length
            }

            function p(g, l) {
                this.dyn_tree = g;
                this.max_code = 0;
                this.stat_desc = l
            }

            function Aa(g, l) {
                g.pending_buf[g.pending++] = 255 & l;
                g.pending_buf[g.pending++] = l >>> 8 & 255
            }

            function q(g, l, n) {
                g.bi_valid > Tc - n ? (g.bi_buf |= l << g.bi_valid & 65535, Aa(g, g.bi_buf), g.bi_buf = l >> Tc - g.bi_valid, g.bi_valid += n - Tc) : (g.bi_buf |= l << g.bi_valid & 65535, g.bi_valid += n)
            }

            function g(g, l, n) {
                q(g,
                    n[2 * l], n[2 * l + 1])
            }

            function l(g, l) {
                var n = 0;
                do n |= 1 & g, g >>>= 1, n <<= 1; while (0 < --l);
                return n >>> 1
            }

            function L(g, n, p) {
                var q, t = Array(od + 1),
                    z = 0;
                for (q = 1; q <= od; q++) t[q] = z = z + p[q - 1] << 1;
                for (p = 0; p <= n; p++) q = g[2 * p + 1], 0 !== q && (g[2 * p] = l(t[q]++, q))
            }

            function pa(g) {
                var l;
                for (l = 0; l < S; l++) g.dyn_ltree[2 * l] = 0;
                for (l = 0; l < ob; l++) g.dyn_dtree[2 * l] = 0;
                for (l = 0; l < nd; l++) g.bl_tree[2 * l] = 0;
                g.dyn_ltree[2 * Vd] = 1;
                g.opt_len = g.static_len = 0;
                g.last_lit = g.matches = 0
            }

            function Ca(g) {
                8 < g.bi_valid ? Aa(g, g.bi_buf) : 0 < g.bi_valid && (g.pending_buf[g.pending++] =
                    g.bi_buf);
                g.bi_buf = 0;
                g.bi_valid = 0
            }

            function oa(g, l, n, p) {
                var q = 2 * l,
                    t = 2 * n;
                return g[q] < g[t] || g[q] === g[t] && p[l] <= p[n]
            }

            function X(g, l, n) {
                for (var p = g.heap[n], q = n << 1; q <= g.heap_len && (q < g.heap_len && oa(l, g.heap[q + 1], g.heap[q], g.depth) && q++, !oa(l, p, g.heap[q], g.depth));) g.heap[n] = g.heap[q], n = q, q <<= 1;
                g.heap[n] = p
            }

            function Lc(l, n, p) {
                var t, z, x = 0;
                if (0 !== l.last_lit) {
                    do {
                        var B = l.pending_buf[l.d_buf + 2 * x] << 8 | l.pending_buf[l.d_buf + 2 * x + 1];
                        var C = l.pending_buf[l.l_buf + x];
                        x++;
                        0 === B ? g(l, C, n) : (t = da[C], g(l, t + gb + 1, n), z = dd[t], 0 !==
                            z && (C -= ke[t], q(l, C, z)), B--, t = 256 > B ? qa[B] : qa[256 + (B >>> 7)], g(l, t, p), z = xc[t], 0 !== z && (B -= qc[t], q(l, B, z)))
                    } while (x < l.last_lit)
                }
                g(l, Vd, n)
            }

            function bb(g, l) {
                var p, q = l.dyn_tree;
                var t = l.stat_desc.static_tree;
                var z = l.stat_desc.has_stree,
                    x = l.stat_desc.elems,
                    B = -1;
                g.heap_len = 0;
                g.heap_max = n;
                for (p = 0; p < x; p++) 0 !== q[2 * p] ? (g.heap[++g.heap_len] = B = p, g.depth[p] = 0) : q[2 * p + 1] = 0;
                for (; 2 > g.heap_len;) {
                    var C = g.heap[++g.heap_len] = 2 > B ? ++B : 0;
                    q[2 * C] = 1;
                    g.depth[C] = 0;
                    g.opt_len--;
                    z && (g.static_len -= t[2 * C + 1])
                }
                l.max_code = B;
                for (p = g.heap_len >>
                    1; 1 <= p; p--) X(g, q, p);
                C = x;
                do p = g.heap[1], g.heap[1] = g.heap[g.heap_len--], X(g, q, 1), t = g.heap[1], g.heap[--g.heap_max] = p, g.heap[--g.heap_max] = t, q[2 * C] = q[2 * p] + q[2 * t], g.depth[C] = (g.depth[p] >= g.depth[t] ? g.depth[p] : g.depth[t]) + 1, q[2 * p + 1] = q[2 * t + 1] = C, g.heap[1] = C++, X(g, q, 1); while (2 <= g.heap_len);
                g.heap[--g.heap_max] = g.heap[1];
                var G, M;
                p = l.dyn_tree;
                C = l.max_code;
                x = l.stat_desc.static_tree;
                var P = l.stat_desc.has_stree,
                    Ka = l.stat_desc.extra_bits,
                    R = l.stat_desc.extra_base,
                    S = l.stat_desc.max_length,
                    da = 0;
                for (z = 0; z <= od; z++) g.bl_count[z] =
                    0;
                p[2 * g.heap[g.heap_max] + 1] = 0;
                for (l = g.heap_max + 1; l < n; l++) t = g.heap[l], z = p[2 * p[2 * t + 1] + 1] + 1, z > S && (z = S, da++), p[2 * t + 1] = z, t > C || (g.bl_count[z]++, G = 0, t >= R && (G = Ka[t - R]), M = p[2 * t], g.opt_len += M * (z + G), P && (g.static_len += M * (x[2 * t + 1] + G)));
                if (0 !== da) {
                    do {
                        for (z = S - 1; 0 === g.bl_count[z];) z--;
                        g.bl_count[z]--;
                        g.bl_count[z + 1] += 2;
                        g.bl_count[S]--;
                        da -= 2
                    } while (0 < da);
                    for (z = S; 0 !== z; z--)
                        for (t = g.bl_count[z]; 0 !== t;) G = g.heap[--l], G > C || (p[2 * G + 1] !== z && (g.opt_len += (z - p[2 * G + 1]) * p[2 * G], p[2 * G + 1] = z), t--)
                }
                L(q, B, g.bl_count)
            }

            function $b(g, l,
                n) {
                var p, q = -1,
                    t = l[1],
                    z = 0,
                    x = 7,
                    C = 4;
                0 === t && (x = 138, C = 3);
                l[2 * (n + 1) + 1] = 65535;
                for (p = 0; p <= n; p++) {
                    var G = t;
                    t = l[2 * (p + 1) + 1];
                    ++z < x && G === t || (z < C ? g.bl_tree[2 * G] += z : 0 !== G ? (G !== q && g.bl_tree[2 * G]++, g.bl_tree[2 * nc]++) : 10 >= z ? g.bl_tree[2 * td]++ : g.bl_tree[2 * B]++, z = 0, q = G, 0 === t ? (x = 138, C = 3) : G === t ? (x = 6, C = 3) : (x = 7, C = 4))
                }
            }

            function Pb(l, n, p) {
                var t, z, x = -1,
                    C = n[1],
                    G = 0,
                    L = 7,
                    M = 4;
                0 === C && (L = 138, M = 3);
                for (t = 0; t <= p; t++)
                    if (z = C, C = n[2 * (t + 1) + 1], !(++G < L && z === C)) {
                        if (G < M) {
                            do g(l, z, l.bl_tree); while (0 !== --G)
                        } else 0 !== z ? (z !== x && (g(l, z, l.bl_tree), G--),
                            g(l, nc, l.bl_tree), q(l, G - 3, 2)) : 10 >= G ? (g(l, td, l.bl_tree), q(l, G - 3, 3)) : (g(l, B, l.bl_tree), q(l, G - 11, 7));
                        G = 0;
                        x = z;
                        0 === C ? (L = 138, M = 3) : z === C ? (L = 6, M = 3) : (L = 7, M = 4)
                    }
            }

            function Rb(g) {
                var l, n = 4093624447;
                for (l = 0; 31 >= l; l++, n >>>= 1)
                    if (1 & n && 0 !== g.dyn_ltree[2 * l]) return Qb;
                if (0 !== g.dyn_ltree[18] || 0 !== g.dyn_ltree[20] || 0 !== g.dyn_ltree[26]) return R;
                for (l = 32; l < gb; l++)
                    if (0 !== g.dyn_ltree[2 * l]) return R;
                return Qb
            }

            function pb(g, l, n, p) {
                q(g, (ra << 1) + (p ? 1 : 0), 3);
                Ca(g);
                Aa(g, n);
                Aa(g, ~n);
                Qa.arraySet(g.pending_buf, g.window, l, n, g.pending);
                g.pending += n
            }
            var Qa = t("../utils/common"),
                Qb = 0,
                R = 1,
                ra = 0,
                gb = 256,
                S = gb + 1 + 29,
                ob = 30,
                nd = 19,
                n = 2 * S + 1,
                od = 15,
                Tc = 16,
                Vd = 256,
                nc = 16,
                td = 17,
                B = 18,
                dd = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0],
                xc = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13],
                jb = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7],
                yb = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],
                wb = Array(2 * (S + 2));
            P(wb);
            var ab = Array(2 * ob);
            P(ab);
            var qa = Array(512);
            P(qa);
            var da = Array(256);
            P(da);
            var ke = Array(29);
            P(ke);
            var qc = Array(ob);
            P(qc);
            var Pd, ac, x, Fc = !1;
            G._tr_init = function(g) {
                if (!Fc) {
                    var n, q, t, B = Array(od + 1);
                    for (t = q = 0; 28 > t; t++)
                        for (ke[t] = q, n = 0; n < 1 << dd[t]; n++) da[q++] = t;
                    da[q - 1] = t;
                    for (t = q = 0; 16 > t; t++)
                        for (qc[t] = q, n = 0; n < 1 << xc[t]; n++) qa[q++] = t;
                    for (q >>= 7; t < ob; t++)
                        for (qc[t] = q << 7, n = 0; n < 1 << xc[t] - 7; n++) qa[256 + q++] = t;
                    for (n = 0; n <= od; n++) B[n] = 0;
                    for (n = 0; 143 >= n;) wb[2 * n + 1] = 8, n++, B[8]++;
                    for (; 255 >= n;) wb[2 * n + 1] = 9, n++, B[9]++;
                    for (; 279 >= n;) wb[2 * n + 1] = 7, n++, B[7]++;
                    for (; 287 >= n;) wb[2 * n + 1] = 8, n++, B[8]++;
                    L(wb, S + 1, B);
                    for (n = 0; n < ob; n++) ab[2 * n + 1] = 5, ab[2 * n] = l(n, 5);
                    Pd =
                        new M(wb, dd, gb + 1, S, od);
                    ac = new M(ab, xc, 0, ob, od);
                    x = new M([], jb, 0, nd, 7);
                    Fc = !0
                }
                g.l_desc = new p(g.dyn_ltree, Pd);
                g.d_desc = new p(g.dyn_dtree, ac);
                g.bl_desc = new p(g.bl_tree, x);
                g.bi_buf = 0;
                g.bi_valid = 0;
                pa(g)
            };
            G._tr_stored_block = pb;
            G._tr_flush_block = function(g, l, n, p) {
                var t = 0;
                if (0 < g.level) {
                    2 === g.strm.data_type && (g.strm.data_type = Rb(g));
                    bb(g, g.l_desc);
                    bb(g, g.d_desc);
                    $b(g, g.dyn_ltree, g.l_desc.max_code);
                    $b(g, g.dyn_dtree, g.d_desc.max_code);
                    bb(g, g.bl_desc);
                    for (t = nd - 1; 3 <= t && 0 === g.bl_tree[2 * yb[t] + 1]; t--);
                    t = (g.opt_len +=
                        3 * (t + 1) + 14, t);
                    var x = g.opt_len + 3 + 7 >>> 3;
                    var z = g.static_len + 3 + 7 >>> 3;
                    z <= x && (x = z)
                } else x = z = n + 5;
                if (n + 4 <= x && -1 !== l) pb(g, l, n, p);
                else if (4 === g.strategy || z === x) q(g, 2 + (p ? 1 : 0), 3), Lc(g, wb, ab);
                else {
                    q(g, 4 + (p ? 1 : 0), 3);
                    l = g.l_desc.max_code + 1;
                    n = g.d_desc.max_code + 1;
                    t += 1;
                    q(g, l - 257, 5);
                    q(g, n - 1, 5);
                    q(g, t - 4, 4);
                    for (x = 0; x < t; x++) q(g, g.bl_tree[2 * yb[x] + 1], 3);
                    Pb(g, g.dyn_ltree, l - 1);
                    Pb(g, g.dyn_dtree, n - 1);
                    Lc(g, g.dyn_ltree, g.dyn_dtree)
                }
                pa(g);
                p && Ca(g)
            };
            G._tr_tally = function(g, l, n) {
                return g.pending_buf[g.d_buf + 2 * g.last_lit] = l >>> 8 & 255, g.pending_buf[g.d_buf +
                    2 * g.last_lit + 1] = 255 & l, g.pending_buf[g.l_buf + g.last_lit] = 255 & n, g.last_lit++, 0 === l ? g.dyn_ltree[2 * n]++ : (g.matches++, l--, g.dyn_ltree[2 * (da[n] + gb + 1)]++, g.dyn_dtree[2 * (256 > l ? qa[l] : qa[256 + (l >>> 7)])]++), g.last_lit === g.lit_bufsize - 1
            };
            G._tr_align = function(l) {
                q(l, 2, 3);
                g(l, Vd, wb);
                16 === l.bi_valid ? (Aa(l, l.bi_buf), l.bi_buf = 0, l.bi_valid = 0) : 8 <= l.bi_valid && (l.pending_buf[l.pending++] = 255 & l.bi_buf, l.bi_buf >>= 8, l.bi_valid -= 8)
            }
        }, {
            "../utils/common": 3
        }],
        15: [function(t, C, G) {
            C.exports = function() {
                this.input = null;
                this.total_in =
                    this.avail_in = this.next_in = 0;
                this.output = null;
                this.total_out = this.avail_out = this.next_out = 0;
                this.msg = "";
                this.state = null;
                this.data_type = 2;
                this.adler = 0
            }
        }, {}],
        "/": [function(t, C, G) {
            G = t("./lib/utils/common").assign;
            var P = t("./lib/deflate"),
                M = t("./lib/inflate");
            t = t("./lib/zlib/constants");
            var p = {};
            G(p, P, M, t);
            C.exports = p
        }, {
            "./lib/deflate": 1,
            "./lib/inflate": 2,
            "./lib/utils/common": 3,
            "./lib/zlib/constants": 6
        }]
    }, {}, [])("/")
});
var saveAs = saveAs || function(fa) {
    if (!("undefined" === typeof fa || "undefined" !== typeof navigator && /MSIE [1-9]\./.test(navigator.userAgent))) {
        var t = fa.document.createElementNS("http://www.w3.org/1999/xhtml", "a"),
            C = "download" in t,
            G = /constructor/i.test(fa.HTMLElement) || fa.safari,
            P = /CriOS\/[\d]+/.test(navigator.userAgent),
            M = function(g) {
                (fa.setImmediate || fa.setTimeout)(function() {
                    throw g;
                }, 0)
            },
            p = function(g) {
                setTimeout(function() {
                        "string" === typeof g ? (fa.URL || fa.webkitURL || fa).revokeObjectURL(g) : g.remove()
                    },
                    4E4)
            },
            Aa = function(g) {
                return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(g.type) ? new Blob([String.fromCharCode(65279), g], {
                    type: g.type
                }) : g
            },
            q = function(g, q, pa) {
                pa || (g = Aa(g));
                var l = this,
                    L = "application/octet-stream" === g.type,
                    X = function() {
                        var g = ["writestart", "progress", "write", "writeend"];
                        g = [].concat(g);
                        for (var p = g.length; p--;) {
                            var q = l["on" + g[p]];
                            if ("function" === typeof q) try {
                                q.call(l, l)
                            } catch (Rb) {
                                M(Rb)
                            }
                        }
                    };
                l.readyState = l.INIT;
                if (C) {
                    var Lc = (fa.URL || fa.webkitURL || fa).createObjectURL(g);
                    setTimeout(function() {
                        t.href = Lc;
                        t.download = q;
                        var g = new MouseEvent("click");
                        t.dispatchEvent(g);
                        X();
                        p(Lc);
                        l.readyState = l.DONE
                    })
                } else(function() {
                    if ((P || L && G) && fa.FileReader) {
                        var q = new FileReader;
                        q.onloadend = function() {
                            var g = P ? q.result : q.result.replace(/^data:[^;]*;/, "data:attachment/file;");
                            fa.open(g, "_blank") || (fa.location.href = g);
                            l.readyState = l.DONE;
                            X()
                        };
                        q.readAsDataURL(g);
                        l.readyState = l.INIT
                    } else Lc || (Lc = (fa.URL || fa.webkitURL || fa).createObjectURL(g)), L ? fa.location.href = Lc : fa.open(Lc, "_blank") || (fa.location.href =
                        Lc), l.readyState = l.DONE, X(), p(Lc)
                })()
            },
            g = q.prototype;
        if ("undefined" !== typeof navigator && navigator.msSaveOrOpenBlob) return function(g, p, q) {
            p = p || g.name || "download";
            q || (g = Aa(g));
            return navigator.msSaveOrOpenBlob(g, p)
        };
        g.abort = function() {};
        g.readyState = g.INIT = 0;
        g.WRITING = 1;
        g.DONE = 2;
        g.error = g.onwritestart = g.onprogress = g.onwrite = g.onabort = g.onerror = g.onwriteend = null;
        return function(g, p, t) {
            return new q(g, p || g.name || "download", t)
        }
    }
}("undefined" !== typeof self && self || "undefined" !== typeof window && window || this.content);
"undefined" !== typeof module && module.exports ? module.exports.saveAs = saveAs : "undefined" !== typeof define && null !== define && null !== define.amd && define("FileSaver.js", function() {
    return saveAs
});
"function" == typeof define && define.__amd && (define.amd = define.__amd, delete define.__amd);